,title,author,pub_date,source_url,summary,full_text,keywords,data_source
0,Point convolutional neural network algorithm for Ising model ground state research based on spring vibration,"Zhelong Jiang, Gang Chen, Ruixiu Qiao, Pengcheng Feng, Yihao Chen, Junjia Su, Zhiyuan Zhao, Min Jin, Xu Chen, Zhigang Li, Huaxiang Lu",2023-05-12 01:01:01+00:00,http://arxiv.org/pdf/2305.07187v1,"The ground state search of the Ising model can be used to solve many combinatorial optimization problems. Under the current computer architecture, an Ising ground state search algorithm suitable for hardware computing is necessary for solving practical problems. Inspired by the potential energy conversion of springs, we propose a point convolutional neural network algorithm for ground state search based on spring vibration model, called Spring-Ising Algorithm. Spring-Ising Algorithm regards the spin as a moving mass point connected to a spring and establish the equation of motion for all spins. Spring-Ising Algorithm can be mapped on the GPU or AI chips through the basic structure of the neural network for fast and efficient parallel computing. The algorithm has very productive results for solving the Ising model and has been test in the recognized test benchmark K2000. The algorithm introduces the concept of dynamic equilibrium to achieve a more detailed local search by dynamically adjusting the weight of the Ising model in the spring oscillation model. Finally, there is the simple hardware test speed evaluation. Spring-Ising Algorithm can provide the possibility to calculate the Ising model on a chip which focuses on accelerating neural network calculations.","  1 / 15   Point convolution al neural  network  algorithm  for Ising model ground state  research   based on spring  vibration   Zhelong Jiang1, 2, Gang Chen1, *, Ruixiu Qiao1, Pengcheng Feng1, 2, Yihao  Chen1, 2, Junjia  Su1,  2, Zhiyuan Zhao1, 3, Min Jin1, Xu Chen1, Zhigang Li1, Huaxiang Lu1, 2, 4, 5  1Institute of semiconductors, Chinese Academy of Sciences, Beijing, China   2Materials and Optoelectronics Research Center, University of Chinese Academy of  Sciences, Beijing, China   3School of Microelectronics, Univ ersity of Science and Technology of China, Hefei, China    4College of Microelectronics, University of Chinese Academy of Sciences, Beijing, China   5Semiconductor Neural Network Intelligent Perception and Computing Technology  Beijing Key Laboratory, Beijing, China   *Email: chengang08@semi.ac.cn   Abstract   The ground state search of the Ising model can be used to solve many combinatorial  optimization problems.  Under the current computer architecture, an Ising ground state search  algorithm suitable for hardware computing is necessary for solving practical problems.   Inspired by  the potential energy conversion of springs , we propose  a point  convolution al  neural  network  algorithm  for ground state search  based on spring  vibration model , called   Spring -Ising Algorithm . Spring -Ising Algorithm regard s the spin as a moving mass point  connected to a spring  and establish the equation of motion  for all spins.  Spring -Ising  Algorithm  can be mapped on the GPU or AI ch ips through the basic structure of the neural  network for fast and efficient parallel computing.  The algorithm has very productive results  for solving the Ising model and has been test  in the recognized test benchmark  K2000. The  algorithm introduces the concept of dynamic equilibrium to achieve a more detailed local  search by dynamically adjusting the weight of the Ising model in the spring oscillation model.   Finally, there is the simple hardware test speed evaluation. Spring -Ising Algorith m can provide  the possibility to calculate the Ising model on a chip which  focuse s on accelerating neural  network calculations.   Introduction   Combinatorial optimization problems, a subfield of optimization  with discrete variables,   are ubiquitous  in many fie lds of research . In many  cases , we can find a mapping to the  decision form of the Ising model with a polynomial number of steps  for the NP C (Non- deterministic Polynomial  Complete)  problem [1], [2], [3], [4]. Therefore, many optimization  problems can be formulated as Ising models to find the ground state , or the lowest energy     2 / 15   configuration . So that, solving the Ising model becomes a general method for solving many  NP problems, like partitioning problems [2], linear programming [1], [3], [5], inequality  problems [6], coloring problems [2], [7] and so on. However, the Ising model is known to be   NP-hard ( Non-deterministic Polynomial  Hard)  problem [8]. So, it is difficult but important to  find the ground state of the Ising model quickly and accurately.   The Ising model is mainly used in statistical physics and scientific computing.  In statistical  physics, the Ising model is widely used to study the phase transition phenomenon  [9], [10],  [11]. In scientific computing, the actual combinatorial optimization problem is mapped to the  Ising model for finding the ground  state in the N spins state space  [12], [13], [14]. With N  spins, there are 2N spin state to search  the global minimum of the energy  state, whic h is a  great challenge  for using conventional computing  [15]. Special -purpose  hardware devices for  the ground state search, known as Ising machines, have recently a ttracted attention because  of their potential to substantially  speed up the solution of optimization problems  [16]. Various  schemes have been proposed and demonstrated  for the Ising model , including quantum  annealers  [17], [18], [19], [20], [21], coherent Ising machine  [22], [23], [24], [25], [26], [27], [28],  [29], [30], [31] and so on . Limited by current technology , the above methods have difficulties  such as large -scale expansion and complicated parameter configuration . Quantum computer  is expected to solve exponential combinatorial optimization problems, but related work is still  in its infancy  [32].  The CMOS  implementation s [16], [33], [34], [35], [36], [37] are easy to integrate and  expand, which means that it is a more suitable strategy for mapping and solving large -scale  practical Ising model problem . In application, CMOS Ising machine has adv antages such as  tiny size, flexible expansion , high integration , low system power consumption  and so on  [36].  Most CMOS chips are based on non -fully connected  structures , like lattice graph [15], [33],  [35], [36], king graph [34], [38], [39], [40], and Hexagonally graph  [41]. All-to-all connected  Ising models are more practical value than sparse ones, but c ommunication and  synchronization  between the spins degrade the speed performance in CMOS [16]. As the  result of that , the spin scale of a CMOS chip based on a n all-to-all connected topology desig n  is very limited.  The non -uniform design limits the popularization of CMOS  chips and increases  the design cost of ASIC  for Ising model .  AI (Artificial Intelligence ) chips have numerous computing resources , which are used for  training and Inference of vari ous AI algorithms . and are important available resources for  computing large -scale problems.  At present, AI chips have solved many problems such as  classification, detection, and tracking by virtue of their powerful computing power [42], [43].  Commercial AI chips have the characteristics of high energy efficiency, high paralle lism, and  high scalability . These chips , which are optimized for communication and synchronization ,  have been used in a large number of large models.  The computing architecture of the AI chip  sets the computing engine for the multiply accumulate  operation  and realizes the parallel  computing through efficient scheduling, thereby reducing computing time and off -chip  storage access  [44]. Using these computing hardware resources to solve the Ising model with  numerous  parameters  is an extremely effective method since  we have not yet achieved  quantum computer s.   The paper is or ganized as follows. In this paper,  we propose a new algorithm , Spring - Ising Algorithm , that  can solve the all-to-all connected Ising model directly on the AI chip .     3 / 15   Frist, we introduce how Spring -Ising Algorithm  inspired by spring vibrations can be used to  find the ground state of the Ising model . Then, we design the algorithm as a network structure  based on point convolution  and residual modules, which implements the solution iteration of  the Ising model through  point convolution and residual modules . Through our method, the  optimization problem is transformed into the general formula of AI chip s calculation by  constructing the Ising model paradigm  and AI chip s accelerate Spring -Ising Algorithm for the  ground state finding .  Finally , the network structure is demonstrated on AI chip  architecture   from Ref . [45] to solve the Max -cut problem  and both numerical and a nalytical investigation  are conducted .  Result  In this chapter, we propose  the physical prototype of Spring -Ising Algorithm  and how to  apply  Lagranges equations  to iterate spin states by symplectic method . Spring -Ising  Algorithm  is inspired by physical phenomena , spring vibrations . The detail of physical  prototype is introduced as follow.     1. Spring  vibration  model   The Ising model is defined as  follow:   ùêª=‚àí ‚àë ùêΩùëñùëóùúéùëñùúéùëó‚àí  1‚â§ùëñ<ùëó‚â§ùëÅ‚àë ‚Ñéùëñùúéùëñ  1‚â§ùëñ‚â§ùëÅ (1)  The discrete variable ùúéùëñ is the ùëñth Ising spin state such that ùúéùëó‚àà {‚àí1,+1}. In Pauli  matrices , the variable ùúéùëñ assigns values {‚àí1,+1} to spin values {‚Üì,‚Üë} [17]. ùêΩùëñùëó denote s a  coupling coefficient between the ùëñth and ùëóth spins and ‚Ñéùëñ is an external magnetic coefficient  for the ùëñth spin. ùêª is the total energy of the Ising model and it tends to the lowest energy.   Inspired by the steady -state analysis of multiple mass -spring system  in analytical  mechanics, the ground state  research  method of the Ising model in this paper is designed.  In  Ising model, the state  of the ùëñth spin ‚Üë(‚Üì) is encoded as a discrete variable corresponding to  a value of +1(‚àí1). We regard the discrete variable as the continuous change of the mass  point in the macroscopic position, which is defined as the generalized coordinate ùëûùëñ‚àà[‚àí1,1].  On this basis, the spring model i s designed by considering a mass point  connected at an ideal  spring with no initial length  and the spring force on the mass point is always pointing to one  point, called the origin point . As shown in  Fig. 1(a), the spring is fixed at  the origin point , and  the other end  is the mass  point represent ing the state of spin . Since the initial length of the  spring is zero, when the mass point moves away from the origin, it is pulled by the spring.  In  this model, the mass point is above (below ) the origin to represent the spin ‚Üë(‚Üì), and the  distance is represented as a degree of confidence.  According to the coupling coefficient and  spin state, the Ising model produces a number of forces along a line along the ùëûùëñ axis.  Therefore, the direction  of the resultant force is also on the  ùëûùëñ axis, as shown in Fig . 1(b).      4 / 15     Fig 1. Spring vibration model  based on Ising model.  The red sphere represents the spin, and the arrow in it indicates the  spin state. The four bright red spheres on the upper left represent the four spins mapped by the Ising model.  The green  connection  line between the red spheres represents the coupling rel ationship . The fuzzy sphere in the gray dashed box  represents the opposite spin  state of the blue dashed box.  The two dashed boxes are used to represent the same spin in  two spin states, expressing the two particle positions of the spring model . Correspondingly, the gray part in the spring  model is another spin state . (a) The spin of Ising model is mapping to the position of the mass point on the spring  vibration model . Take the part in the blue dashed box as an example, the spin state is up, the mass point  is above the  origin.  The blue dashed box vice versa . (b) The distance between the mass point and the origin point  is effect ed by the  coupling relationship and the spring .  In the model, while a  spin considered as a mass point is called  the target spin , the other  spins are call ed the source spins providing external force to the target spins . The magnitude  and direction of ùêπùëñ depend on the combined effect of multiple source spins but  have nothing  to do with the state of the target spin . Fig. 2(a) gives a specific example, when the state of  source spin is +1, if the coupling coefficient is positive , an upward force will be generated.  The greater the coupling coefficient, the greater the force generated. In the same way,  if the  coupling coefficient is negative , a downward force will be generated. When the coupling  coefficient is zero, the source spin  provides no force. The superposition of all the forces  provided by the source spin  is the force of the Ising model coupling relationship for the mass  point ùëñ. When the state of origin spin is ‚àí1, the direction of the force is opposite, as shown in  Fig. 2(b).     Fig 2. The specific example  shows  that the coupling relationship between spins affects the external force received on the  mass point . ùúéùëñ is the ùëñth spin which is regarded as  the target spin and ùúéùëó is the ùëóth spin which is regarded as  the source  spin. The blue line between the spins means that the coupling relationship of the two spins is positive, the green line is  negative . The force on the mass point  is the resultant force produced by the sum of all coupling relations.  (a) When the  source spin ùúéùëñ is +1, the coupling relationship produces multiple forces on the mass  point ùëñ. (b) When the spin state ùúéùëñ is  ‚àí1, the direction of the force is opposite .       5 / 15   The generalized coordinate introduced by the model is a continuous variable, which  means that the magnitude of the force is also affected by the absolute value of the  generalized coordinate from the  source  spin. So, the source spin is changed to the source  spin generalized coordinate: ùúéùëñ‚àà{‚àí1,1}‚Üíùëûùëñ‚àà[‚àí1,1]. When the absolute value of the  generalized coordinates is greater, the spring potential energy contained in the spring  vibration model is greater.  For the Ising model, th e greater  source spin has a greater overall  influence on the system to the target spin  and vice versa . Therefore, the discrete Ising model  energy in Eq.  (1) is set to the continuous Ising model energy in the spring vibration model .    2. Ground state search method   After establishing the spring vibration model, the following is how to use the model to  find the ground state  of Ising model . This method regards the potential energy of the Ising  model as the ordinary potential energy and converts the potential energy of the Ising model  into the potential energ y of the spring and the kinetic energy of the system. The Ising model  energy gradually decreases and transforms into the potential energy of the spring.  Then, due  to the constraints of generalized coordinates and generalized velocity , the energy originally   converted into spring potential energy, continuous Ising model energy and kinetic energy is  absorbed by the inelastic wall.  The energy of the whole system gradually decreases and thus  converges to the spring potential energy and the energy of the Ising mo del near the ground  state .  According to the various constraints of this system, the Lagrangian equation is  constructed as follows:   ùêø(ùëûùëñ,ùëûùëñÃá,ùë°)=‚àëùëöùëûùëñÃá2  ùëñ‚àí‚àë1 2ùëò(ùëûùëñ‚àíùëû0)2  ùëñ‚àíùúÅùêªùêºùë†ùëñùëõùëî (ùíí) (2)  Where ùëö is the mass coefficient, ùëò is the elastic coefficient, and ùúÅ is the scaling coefficient  of the Ising model energy. The three terms  of the mass  point  in Eq . (2) are the kinetic energy  term, the spring potential energy term and the continuous Ising model energy term . In the  spring vibration model, the generalized coordinates are independent of ùë°. It can be seen from  the formula that the movement of  the mass point s is affected by the potential energy of the  spring and the energy of the Ising model.  The movement of the mass points is manifested as  a continuous vibration on the ideal springs.  From another perspective, it can be considered  that when the spring is doin g simple harmonic motion, a set of external forces are applied  from the outside. Affected by the coupling coefficient of the Ising model, the oscillation s of  the mass points  are biased towards the lower  Ising model  energy.     3. Symplectic method    Since the size of the Ising model depends on the number of spins, the solution scale is  quite large. Therefore, it is very difficult to solve the Lagrangian equation  directly and  accurately. In this paper, referring to the Hamiltonian and symplectic method  [46], the  numerical iterative calculation of the spring vibration model is carried out.  The Hamiltonian   describes the total energy of the system and can be used t o describe the systems dynamic  behavior.  Symplectic method is numerical method used to solve Hamiltons equations  and it   preserve s energy conservation  of the system .     6 / 15   According to the definition, the generalized momentum ùëùùëñ is obtained as  ùúïùêøùúïùëûÃá‚ÅÑ =ùëöùëûùëñÃá.  The Hamiltonian of the system is obtained by performing the Legendre transformation on the  Lagrangian quantity:   ùêª(ùëû,ùëù,ùë°)=‚àëùëûùëñÃáùëùùëñ ùëñ‚àíùêø(ùëûùëñ,ùëûùëñÃá,ùë°)=‚àë1 2ùëûùëñÃáùëùùëñ ùëñ+‚àë1 2ùëò(ùëûùëñ‚àíùëû0)2 ùëñ+ùúÅùêªùêºùë†ùëñùëõùëî (ùíí) (3)  Get Hamiltons equation:   ùëûùëñÃá=ùúïùêª ùúïùëùùëñ  ùëùùëñÃá=‚àíùúïùêª ùúïùëûùëñ=‚àíùëò(ùëûùëñ‚àíùëû0)+ùúÅ‚àëùë§ùëñùëóùëûùëó ùëó (4)  Use the symplectic algorithm to solve the Hamiltonian system, and set the system origin  to ùëû0:  ùëûùëñ(ùë°ùëõ+1)=ùëûùëñ(ùë°ùëõ)+ŒîùëûùëñÃá(ùë°ùëõ)=ùëûùëñ(ùë°ùëõ)+Œî ùëöùëùùëñ(ùë°ùëõ)  ùëùùëñ(ùë°ùëõ+1)=ùëùùëñ(ùë°ùëõ)+ŒîùëùùëñÃá(ùë°ùëõ)=ùëùùëñ(ùë°ùëõ)‚àíŒîùëòùëûùëñ(ùë°ùëõ)+ùúÅŒî‚àëùêΩùëñùëóùëûùëó(ùë°ùëõ) ùëó (5)  Where ùë°ùëõ is the ùëõth iteration. It can be seen from the above formula that  ùëûùëñ(ùë°ùëõ) and  ùëùùëñ(ùë°ùëõ) depend on the value of the previous state. With the iteration of the value, the energy  is continuously converted . As the energy of the Ising model decreases, the solution is  gradually approaching the ground state of the Ising model.  Dimensional issues are not  considered in numerical calculations, so parameters can be combined.  The Eq. (5) is called  the iterative formula of  Spring -Ising Algorithm .    4. Point  convolutional neural network    In the iterative calculation of the algorithm, the most important calculation is  multiplication  of ùêΩùëñùëó and ùëûùëñ(ùë°ùëõ). A method of iterative calculation us ing point convolution to  replace the product of vector and matrix is proposed, so that the algorithm can be used in  high-bandwidth computing chips, like GPU and AI chip.  Moreover, the point convolution is  optimized in the hardware design to reuse the convolution kernel and reduce data access  to  accelerate the computation in parallel . Fig. 3 shows an alternative way of turning the iterative  equation into the neural network architecture  computation . ùëûùëñ(ùë°ùëõ) of a single test is assigned  at fixed coordina te of the feature map, so the number of generalized coordinates and feature  maps are the same.  The size of the point convolution kernel also depends on the coupling  relationship matrix of the Ising model  so that  the number  of convolution kernel  is ùëõ, and the  number of convolution kernel channels is ùëõ. The rest of the architecture is the addition module,  which can be completed through the residual structure in the neural network and  is supported  in mainstream AI chips.      7 / 15     Fig 3. The parallel calculation of the spring vibration model algorithm through the form of point convolution . The size of  the feature map affects the number of parallel tests for th e algorithm . Using a 2√ó2 feature map is four independent  iterative calculations . The value of the feature map is the generalized coordinate value, and the point convolution kernel  is the weight data of the Ising model.  The ùëû‚Ä≤ùëõ is the temporary variable . On the right is the entire point convolution  network architecture .  Discussion   In this chapter, we show the experimental results based on the spring vibrati on model .  Then we introduce how to implement the above algorithm through point convolution and  residual network and  implement it on the CASSANN -v2 architecture.   To demonstrate the effect of Eq . (1), the algorithm is tested on the K 2000 benchmark  instance , which is a random undirected  graph with 2000 vertices and 1999000 edges [23]. The  K2000 has been used many times  to solve  maximum -cut problems (MAX -CUT)  for Ising model  comparison of performance  [23], [47], [48].     1. Qualitative result   When the kinetic energy is large enough, it can cross the local minimum value by the  local oscillation ; but at the same time, if the kinetic energy is too large, it cannot stay in any  minimum value. So that, the following constraints are added each time ùëûùëñ is updated:    ùëûùëñ‚Üêùëì(ùëûùëñ)={‚àí‚àö2, ùëûùëñ, ‚àö2, ùëûùëñ<‚àí‚àö2  ‚àí‚àö2‚â§ùëûùëñ‚â§‚àö2  ùëûùëñ>‚àö2 (6)  Where ùëì(‚àó) describes the boundaries of ùëûùëñ. For the spring to vibrate, the boundary is slightly  than the original setting [‚àí1,1] so that set ùëûùëñ‚àà[‚àí‚àö2,‚àö2]. After combining the boundary  conditions, the equation describes the motion law of the spin.   The mass point vibration result of running the spring  vibration model algorithm  in 10000  iterations is shown in Fig . 4. The benchmark  has 2000 spins, of which the first twenty are  selected in the figure for visualization. In the early stage of the algorithm, because the mass  points are initialized at origin and only given a small disturbance , the energy of the Ising  model has a long -term decline process. It can be clearly seen in the figure that, the polylines  are very dense, which means that the mass  points are oscillating violently. In this time, the  energy of Ising model is also rapidly oscillating and declining. In the middle, there are many      8 / 15   mass  points attached to the boundary gradually which have been at the lower energy point.  Finally, only some mass  points are still oscillating to search for the optimal and the energy of  the Ising model has tended to the ground state and the detai l of the energy change is shown  in the inset of Fig. 4(a). Also, it can be seen that a few spin flips bring fluctuations of Ising  energy.       Fig 4. The spring vibration model algorithm on the K 2000 in 10000 iterations . The parameter configuration is as follows : k =  0.5, Œ∂ = 0.8Œ∂0 -> 10Œ∂0, Œî = 0.2, m = 1.  (a) The energy change curve of  the Ising model.  The mass point  position s in  Spring -Ising Algorithm  are initialized near the origin, so the energy starts from 0 and decreases rapidly.  Before  Nstep=2000, the energy is descending in a violent shock. After that,  vibrate slightly to search for the energy minimum. (b)  The mass point (the first twenty ) vibration . The very dense parts of the graph are the effect  of multiple mass points   oscillations.  When the system completes the basic search, it tends to be stable . Most of the mass points  tend to be stable   and only some of them perform local search  (like after N step=5000 ).    2. Quantitative result   It can be easily predicted that the potential energy  of the spring  is lost within the  limitation of the boundary conditions  as time progresses.  Therefore, in the later stages of  evolution, it is necessary to compensate for the lost energy.  In order to further search the  ground state of Ising model accurately, Spring -Ising Algorithm  introduces the concept of  energy dynamic balance to increase the energy proportion of Ising model and improve the      9 / 15   search efficiency.  To compensate for the energy loss, Spring -Ising Algorithm sets the ùúÅ as a  linear variable ùúÅ(ùë°). In order to reduce the complexity of the algorithm, this variable is  regarded as a constant in the calculation of the Lagrangian equation, which means that the  time-varying effect in the Lagrange equation is not considered. Through further analysis and  solution of this equation,  the ground state  finding  of the Ising model system is obtained.      Fig 5. The effect of different Œ∂ on the average results  of K 2000. Œ∂0  is the base value. Œ∂0 = 0.05. The first and second sets of  data (green curve and blue curve ) indicate that the current Œ∂ is fixed at 0.8 Œ∂0 or 10Œ∂0, respectively . The third  and fourth  set  of data  (orange curve and red curve ) indicates that the Œ∂ is set from 0.8Œ∂0 to 10Œ∂0 with different step lengths . (Nstep = 200  or 1000 )   This test is based on the same  small disturbance  for initializing with different strategies  of ùúÅ. As shown in Fig. 5, no matter what the value  of Œ∂ is fixed, the ground state search of the  Ising model is easy to fall into a local optimum.  Although the larger ùúÅ quickly leads to better  local results  (the blue line) , it is difficult to search further to get better results. By gradually  changing the value of Œ∂, further searches can be performed after the spring model has entered  local stabilit y. The red line and the orange line  can be clearly seen each time steady state is  established and further searches . This result is very similar to sufficiently slow cooling in  simulated annealing. When the step length is short  enough, better search results  can be  obtained.   The probability density function (CDF) is an important way to judge the performance of  algorithms for solving Ising models . Fig 6. shows the cumulative distributions of the cut value  of the K 2000. The algorithm is compared with the HdSB and HbSB algorithm  [47], and there are  partial similarities under different modeling methods.  It shows that the spring  vibration model  algorithm  within the specified number of steps can search for better cut value. The inset  shows  that the algorithm can find the optimal value more effectively and the number of optimal  solutions accounts for 2.9% of all solutions, which is on ly about 1.2% solved by HbSB and HdSB.         10 / 15     Fig 6. The spring vibration model algorithm  cumulative distribution  of cut values C of the K2000 compared to HdSB and  HbSB . The red curve is the result of the Spring -Ising Algorithm . The inset  is the magnification around  the best-known  cut  value . The red curve illustrate that the Spring -Ising Algorithm  has better suboptimal  distribution results  and more  optimal values than HdSB  and HbSB  for the overall search results .    3. Hardware implementation   The test platform of this algorithm is a personal computer  (Intel 8700K and NVIDIA GTX  2080ti)  and the AI architecture  (CNN accelerator ) developed  by Institute of Semiconductors ,  CAS [45]. By GTX 2080ti  testing in the PyTorch framework , when the size of Ising model is  2000 and the number of tests is 1000, the calculation time is 9.95s/10000 steps , which means  that a sample  time of 10,000 -step tests is 9.95ms.  But when the number of tests is 100, the  time is 2.30ms/10000 steps.  The GPU has a shorter average single -sample test time at more  massive tests . The average power consumption of the 2080Ti is 60 .6W. By the AI architecture ,  the size of Ising model is 2000 and the number of tests is 49 (7√ó7 feature map) , the calculation  time is 381.15ms/10000 steps, which means that a sample  time of 10,000 -step tests  is 7.78ms.  The average power consumption of the CASSANN -v2 is lower than 10W.  Methods   1. Numerical iteration   First, regard the spin of the Ising model as ùëû and the coupling coefficient weight as ùêΩ.  The ground state search process of the Ising model is solved under the mass point s oscillation  process . Based on the spring vibration model, the vibration equation combined with the Ising  model is constructed  and transformed into the following Hamiltonian .  ùêª(ùëû,ùëù,ùë°)=‚àë1 2ùëûùëñÃáùëùùëñ ùëñ+‚àë1 2ùëò(ùëûùëñ‚àíùëû0)2 ùëñ+ùúÅùêªùêºùë†ùëñùëõùëî (ùíí) (7)  According to the equations of motion, all mass points  are initialized near the origin, and  then all mass points  are made to start moving under the joint action of the spring and the  Ising model. According to the symplectic method, the positions of the mass  points  at each      11 / 15   time step are found.  The final spin state of the Ising model is obtained by tracking the mass  points (numerical iteration).   ùëûùëñ(ùë°ùëõ+1)=ùëûùëñ(ùë°ùëõ)+Œîùëùùëñ(ùë°ùëõ)  ùëùùëñ(ùë°ùëõ+1)=ùëùùëñ(ùë°ùëõ)‚àíŒîùëòùëûùëñ(ùë°ùëõ)+ùúÅ(ùë°ùë†ùë°ùëíùëù)Œî‚àëùêΩùëñùëóùëûùëó(ùë°ùëõ) ùëó (8)   Œî, ùëò and ùúÅ are independent adjustable variables . Then, Eq. (8) has the following  constraints , like the perfectly  inelastic walls work  [47], ùëûùëñ‚àà[‚àí‚àö2,‚àö2],  ùëùùëñ‚àà[‚àí2,2]. ùúÅ(ùë°ùë†ùë°ùëíùëù) is  a function linearly related to the number of iterations . For simple calculation, ùúÅ(ùë°ùë†ùë°ùëíùëù) is set as  a piecewise constant function.  Eq. (8) iterates the specified number of times to get the result  of the Ising model ground state.       2. Hardware implementation    For an Ising model with ùëõ spins, generalized coordinates  ùëû are mapped to feature maps .  The number of feature map pixels is the number of simultaneous iterations.  The coupling  coefficient matrix of the Ising model is mapped to the point convolution kernel . Divide the ùêΩ  into ùëõ 1√ó1 convolution kernels with ùëõ channels by row. Through the residual structure, the  addition operation r equired in the algorithm is completed.  By continuously calling this  network structure  (Fig. 3), the numerical calculation of ùëû and ùëù in the eq. (8) is updated . After  an artificially set time step  or calculation time, the ùëû is sampled, which is the current low  energy state of the Ising model.     Data availability   The data that support the findings of this study are available from the corresponding  author  upon reasonable request.   Code availability   The code used in this work is ava ilable from the corresponding author upon reasonable   request.   References   [1] Lucas A. Ising formulations of many NP problems[J]. Frontiers in physics, 2014, 2: 5.   [2] Glover F, Kochenberger  G, Hennig R, et al. Quantum bridge analytics I: a tutorial on  formulating and using QUBO models[J]. Annals of Operations Research, 2022, 314(1):  141-183.  [3] Date P, Arthur D, Pusey -Nazzaro L. QUBO formulations for training machine learning  models[J]. Scienti fic reports, 2021, 11(1): 10029.   [4] Phillipson F, Bhatia H S. Portfolio optimisation using the d -wave quantum  annealer[C]//Computational Science ‚ÄìICCS 2021: 21st International Conference, Krakow,  Poland, June 16 ‚Äì18, 2021, Proceedings, Part VI. Cham: Springer I nternational Publishing,     12 / 15   2021: 45 -59.  [5] Borle A, Lomonaco S J. Analyzing the quantum annealing approach for solving linear least  squares problems[C]//WALCOM: Algorithms and Computation: 13th International  Conference, WALCOM 2019, Guwahati, India, February 27 ‚ÄìMarch 2, 2019, Proceedings  13. Springer International Publishing, 2019: 289 -301.  [6] Yu S, Nabil T. Applying the Hubbard -Stratonovich Transformation to Solve Scheduling  Problems Under Inequality Constraints With  Quantum Annealing[J]. Frontiers in Physics,  2021, 9: 730685.   [7] Quintero R, Bernal D, Terlaky T, et al. Characterization of QUBO reformulations for the  maximum k -colorable subgraph problem[J]. Quantum Information Processing, 2022, 21(3):  89.  [8] Barahona F. On t he computational complexity of Ising spin glass models[J]. Journal of  Physics A: Mathematical and General, 1982, 15(10): 3241.   [9] Semjan M, ≈Ωukoviƒç M. Absence of long -range order in a three -dimensional stacked Ising  antiferromagnet on kagome lattice[J]. Physi cs Letters A, 2022, 430: 127975.   [10] Li W, Huang J, Li X, et al. Recent progresses in two -dimensional Ising superconductivity[J].  Materials Today Physics, 2021, 21: 100504.   [11] Bernaschi M, Billoire  A, Maiorano A, et al. Strong ergodicity breaking in aging of mean - field spin glasses[J]. Proceedings of the National Academy of Sciences, 2020, 117(30):  17522 -17527.   [12] Brusco M, Davis -Stober C P, Steinley D. Ising formulations of some graph -theoretic  proble ms in psychological research: models and methods[J]. Journal of Mathematical  Psychology, 2021, 102: 102536.   [13] Calude C S, Dinneen M J, Hua R. QUBO formulations for the graph isomorphism problem  and related problems[J]. Theoretical Computer Science, 2017, 701 : 54-69.  [14] Terada K, Oku D, Kanamaru S, et al. An Ising model mapping to solve rectangle packing  problem[C]//2018 International Symposium on VLSI Design, Automation and Test (VLSI - DAT). IEEE, 2018: 1 -4.  [15] Yamaoka M, Yoshimura C, Hayashi M, et al. A 20k-spin Ising chip to solve combinatorial  optimization problems with CMOS annealing[J]. IEEE Journal of Solid -State Circuits, 2015,  51(1): 303 -309.  [16] Tatsumura K, Yamasaki M, Goto H. Scaling out Ising machines using a multi -chip  architecture for simulated b ifurcation[J]. Nature Electronics, 2021, 4(3): 208 -217.  [17] Boixo S, Albash T, Spedalieri F M, et al. Experimental signature of programmable quantum  annealing[J]. Nature communications, 2013, 4(1): 2067.   [18] Bunyk P I, Hoskinson E M, Johnson M W, et al. Architectu ral considerations in the design  of a superconducting quantum annealing processor[J]. IEEE Transactions on Applied  Superconductivity, 2014, 24(4): 1 -10.  [19] King A D, Carrasquilla J, Raymond J, et al. Observation of topological phenomena in a  programmable lattice of 1,800 qubits[J]. Nature, 2018, 560(7719): 456 -460.  [20] Ladd T D, Jelezko F, Laflamme R, et al. Quantum computers[J]. nature, 2010, 464(7285):  45-53.  [21] Goto H, Lin Z, Nakamura Y. Boltzmann sampling from the Ising model using quantum  heatin g of coupled nonlinear oscillators[J]. Scientific reports, 2018, 8(1): 7154.      13 / 15   [22] McMahon P L, Marandi A, Haribara Y, et al. A fully programmable 100 -spin coherent Ising  machine with all -to-all connections[J]. Science, 2016, 354(6312): 614 -617.  [23] Inagaki T, Harib ara Y, Igarashi K, et al. A coherent Ising machine for 2000 -node  optimization problems[J]. Science, 2016, 354(6312): 603 -606.  [24] Honjo T, Sonobe T, Inaba K, et al. 100,000 -spin coherent Ising machine[J]. Science  advances, 2021, 7(40): eabh0952.   [25] Ng E, Onodera T, Kako S, et al. Efficient sampling of ground and low -energy Ising spin  configurations with a coherent Ising machine[J]. Physical Review Research, 2022, 4(1):  013009.   [26] Cen Q, Ding H, Hao T, et al. Large -scale coherent Ising machine based on optoele ctronic  parametric oscillator[J]. Light: Science & Applications, 2022, 11(1): 333.   [27] Hao T, Liu Y, Tang J, et al. Recent advances in optoelectronic oscillators[J]. Advanced  Photonics, 2020, 2(4): 044001 -044001.   [28] A poor man‚Äôs coherent Ising machine based on op to-electronic feedback systems for  solving optimization problems   [29] Li M, Hao T, Li W, et al. Tutorial on optoelectronic oscillators[J]. APL Photonics, 2021, 6(6):  061101.   [30] Roques -Carmes C, Shen Y, Zanoci  C, et al. Heuristic recurrent algorithms for photonic  Ising machines[J]. Nature communications, 2020, 11(1): 249.   [31] Huang J, Fang Y, Ruan Z. Antiferromagnetic spatial photonic Ising machine through  optoelectronic correlation computing[J]. Communications Physics, 2021, 4(1): 242.   [32] Glover F, Kochenberger G, Hennig R, et al. Quantum bridge analytics I: a tutorial on  formulating and using QUBO models[J]. Annals of Operations Research, 2022, 314(1):  141-183.  [33] Yamaoka M, Yoshimura C, Hayashi M, et al. 24.3 20k -spin Ising chip for combinational  optimization problem with CMOS annealing[C]//2015 IEEE International Solid -State  Circuits Conference -(ISSCC) Digest of Technical Papers. IEEE, 2015: 1 -3.  [34] Takemoto T, Hayashi M, Yoshimura C, et al. A 2 √ó30k-Spin Multi -Chip Scalable CMOS  Annealing Processor Based on a Processing -in-Memory Approach for Solving Large -Scale  Combinatorial Optimization Problems[J]. IEEE Journal of Solid -State Circuits, 2019, 55(1):  145-156.  [35] Zhang J, Chen S, Wang Z, et al. Pre -Calculati ng Ising Memory: Low Cost Method to  Enhance Traditional Memory with Ising Ability[C]//2018 IEEE International Symposium on  Circuits and Systems (ISCAS). IEEE, 2018: 1 -5.  [36] Zhang J, Chen S, Wang Y. Advancing CMOS -type Ising arithmetic unit into the domain of  real-world applications[J]. IEEE Transactions on Computers, 2017, 67(5): 604 -616.  [37] Aramon M, Rosenberg G, Valiante E, et al. Physics -inspired optimization for quadratic  unconstrained problems using a digital annealer[J]. Frontiers in Physics, 2019, 7: 48.   [38] Su Y, Mu J, Kim H, et al. A scalable CMOS Ising computer featuring sparse and  reconfigurable spin interconnects for solving combinatorial optimization problems[J]. IEEE  Journal of Solid -State Circuits, 2022, 57(3): 858 -868.  [39] Su Y, Kim H, Kim B. 31.2 CIM -spin: A 0.5 -to-1.2 V scalable annealing processor using  digital compute -in-memory spin operators and register -based spins for combinatorial  optimization problems[C]//2020 IEEE International Solid -State Circuits Conference -    14 / 15   (ISSCC). IEEE, 2020: 480 -482.  [40] Takemot o T, Yamamoto K, Yoshimura C, et al. 4.6 A 144Kb annealing system composed  of 9√ó 16Kb annealing processor chips with scalable chip -to-chip connections for large - scale combinatorial optimization problems[C]//2021 IEEE International Solid -State Circuits  Conf erence (ISSCC). IEEE, 2021, 64: 64 -66.  [41] Ahmed I, Chiu P W, Kim C H. A probabilistic self -annealing compute fabric based on 560  hexagonally coupled ring oscillators for solving combinatorial optimization  problems[C]//2020 IEEE Symposium on VLSI Circuits. IEE E, 2020: 1 -2.  [42] Sim J, Lee S, Kim L S. An energy -efficient deep convolutional neural network inference  processor with enhanced output stationary dataflow in 65 -nm CMOS[J]. IEEE Transactions  on Very Large Scale  Integration (VLSI) Systems, 2019, 28(1): 87 -100.  [43] Chen Y H, Yang T J, Emer J, et al. Eyeriss v2: A flexible accelerator for emerging deep  neural networks on mobile devices[J]. IEEE Journal on Emerging and Selected Topics in  Circuits and Systems, 2019, 9(2) : 292 -308.  [44] Wu D, Zhang Y, Jia X, et al. A high -performance CNN processor based on FPGA for  MobileNets[C]//2019 29th International Conference on Field Programmable Logic and  Applications (FPL). IEEE, 2019: 136 -143.  [45] Liu F, Qiao R, Chen G, et al. CASSANN -v2: A high -performance CNN accelerator  architecture with on -chip memory self -adaptive tuning[J]. IEICE Electronics Express, 2022,  19(10): 20220124 -20220124.   [46] Goto H, Tatsumura K, Dixon A R. Combinatorial optimization by simulating adiabatic  bifurcations in nonl inear Hamiltonian systems[J]. Science advances, 2019, 5(4): eaav2372.   [47] Kanao T, Goto  H. Simulated bifurcation assisted by thermal fluctuation[J]. Communications  Physics, 2022, 5(1): 153.   [48] Goto H, Endo K, Suzuki M, et al. High -performance combinatorial optimization based on  classical mechanics[J]. Science Advances, 2021, 7(6): eabe7953.       Acknowledgements   This study was supported by the National Natural Science Foundation of China   [U19A2080 ] and the Strategic Priority Research Program of the Chinese Academy  of Sciences   [XDA27040303 , XDA18040400 , XDB44000000 ].  Author contributions   Z. J. conceived the idea  and developed the code.  Z. J. and R. Q.  conducted  the numerical  work . M. J., X. C. and Z. L. provided the theoretical foundations.  All the authors contributed to  write the paper.  G. C. and H. L. guided and coordinated all aspects of the work .      15 / 15   Competing interests   The authors declare no competing interests.   ",physics.comp-ph,Arxiv
1,The 6-Ds of Creating AI-Enabled Systems,John Piorkowski,2022-02-04 15:51:59+00:00,http://arxiv.org/pdf/2202.03172v1,"We are entering our tenth year of the current Artificial Intelligence (AI) spring, and, as with previous AI hype cycles, the threat of an AI winter looms. AI winters occurred because of ineffective approaches towards navigating the technology valley of death. The 6-D framework provides an end-to-end framework to successfully navigate this challenge. The 6-D framework starts with problem decomposition to identify potential AI solutions, and ends with considerations for deployment of AI-enabled systems. Each component of the 6-D framework and a precision medicine use case is described in this paper.","The 6 -Ds of  Creating AI-Enabled Systems   Dr. John Piorkowski  Johns Hopkins University Applied Physics Laboratory    11100 Johns Hopkins Rd. Laurel, Maryland 20723- 6099   John.Piorkowski@jhuapl.edu         Abstract    We are entering our tenth year of the current Artificial Intel- ligence (AI) spring, and, as with previous AI hype cycles, the  threat of an AI winter looms. AI winters occurred because of ineffective approaches towards navigating the technology  ‚Äúvalley of death.‚Äù The 6 -D framework provides an end -to- end framework to successfully navigate this challenge. The  6-D framework starts with problem decompositio n to identify  potential AI solutions, and ends with considerations for de-ployment of AI -enabled s ystems. Each component of the 6-D  framework and a precision medicine use case is described in  this paper.     1. Introduction  In 2012, a team of researchers, led by Geoffrey Hinton, ad- vanced the field of computer vision using convolutional neural networks during the ImageNet competition (Krizhev-sky et al., 2012). This significant machine learning result fueled the current AI spri ng, now approaching a decade of  existence. Of course, history often repeats itself, so is an-other AI winter looming? Looking at the cycle of AI springs and winters, winters have occurred partly because of inef-fective transiting the technology valley of death.    One technique for successfully navigating this challenge  is to approach technology solutions with an end- to-end en- gineering perspective. This paper describes an end- to-end  framework for creating an AI -enabled system. The concept  of the 6 -D framewor k is an extension of Neil Lawrences  paper (Lawrence, 2019) on the 3- Ds of machine learning.  Furthermore, the 6 -D framework is influenced by experi- ence across a set of domains focused on applied research. The 6 -D framework starts with the initial ideation of AI -en- abled systems and continues through design, diagnosis, and deployment.  2. Overview of the 6 -D Framework   The 6 -D framework (Figure 1) takes a holistic view of cre- ating AI -enabled systems from the initial concept through  design and deployment. In an AI -enabled system, an AI al- gorithm does not stand alone and is part of a more extensive system or capability to achieve broader business or mission objectives. It is important to note that ethics, which is a crit-ical consideration in many AI applications, is cross- cutting  and deserves attention in each component. The following sections describe each component in greater detail.       2.1 Decomposition  As with many over -hyped technologies, AI technology is of- ten pursued without significant thought on the underlying problem that could benefit from AI or on the question of whether AI technology is the best option. This is one reason that many technologies do not transit the technology valley of death. Elwood et al., 2020, recommended innovation pro-cesses for addressing this challenge.   The innovation process recommendations include: refin- ing the narrative of the technology concept, understanding how technol ogy will be used, conducting a technical evalu- ation of lab models and comparative value assessment, and integrating inputs from innovation actors, i.e., key stake-  holders seeking some future end state. Each of these pro- cesses involves some appreciation of u ser value in the tech- nology.   When creating an AI -enabled system, a developer can use  the decomposition component of the 6 D framework to ad-dress refining the technology concept, understanding tech-nology use, and assessing value.   During decomposition, a developer can employ various  techniques to frame the problem the AI enabled system is seeking to solve. While there is no single approach, the fol-lowing four techniques can be adopted to perform a rigorous decomposition:     1. Envisioned Futures   2. System Dec omposition   3. Reinventing Jobs   4. Design Thinking     Envisioned Futures (Collins and Porras, 1996) allows organ- izations to build a companys vision by asserting a far -reach- ing Big Hairy Audacious Goal (BHAG) coupled with vivid description. The vivid descript ion entails creating a specific,  concrete view of the future when the BHAG is achieved. Creating vivid descriptions often uncovers the need for AI solutions in modern business settings. Well- written vivid  descriptions can offer new insights into motivating AI tech- nologies that can reduce human labor or speed up processes.   A second technique, system decomposition, comes from  the classic systems engineering field. Systems decomposi-tion is part of the systems development lifecycle, repre-sented as a V (Ravitz et al., 2013). The systems development lifecycle begins with requirements elicitation through en-gagement with stakeholders. The second part of system de-velopment is requirements documentation.   A third technique, Reinventing Jobs, (Jesuthasan and   Boudreau, 2018) describes a four -step process for automat- ing work: deconstructing the job, assessing its strategic  value, identifying automation options, and optimizing the  outcome. An appropriate step in this process is considering the strategic importan ce of the deconstructed jobs. Applying  an AI solution can be resource intensive, so a strategic as-sessment is critical.   Finally, a popular technique for decomposing a problem  to discover opportunities for AI applications is using design - thinking methods. C hasanidou et al. (2015) provided a sur- vey of these methods. They describe the general design - thinking process, which includes empathizing, defining, ide-ating, prototyping, and testing. The stages of empathizing and ideating involve engaging with stakeholde rs and brain- storming with diverse stakeholders.    2.2 Domain Expertise   As noted in the decomposition section, AI technology can help improve a situation in terms of reducing workload, speeding up a process, or achieving a new insight. However, understanding the problem in terms of business objectives  or operations requires individuals with domain knowledge. Participation from domain experts who also serve as inno-vation actors increases the likelihood of an AI project suc-ceeding, because domain experts advocate for change. As  evidenced from creating AI -enabled systems in healthcare,  disaster response, and national security, the role of domain  experts is critical to the success of an AI project. They play an important role beyond decomposition, providing key su p- port during the subsequent phases of the framework. For ex-ample, domain experts bring credibility to community mem-bers who will be the ultimate users of AI -enabled systems,  and can assist with adoption of new technology.   2.3 Data   In AI projects, the data engineering phase is generally the  most resource intensive, involving collecting, moving, stor-ing, transforming, labeling, and optimizing data to facilitate the design of the system. The data effort stems from the fact that modern AI -enabled systems will include elements of  machine learning. Yuji Roh et al., 2021, provide a survey of the data collection landscape for machine learning. Their work recognizes the convergence of machine learning and  data management research fields, including data analytics  and data science.   Another data engineering perspective is the Extract,  Transform, and Load (ETL) process that is referenced in the context of the data lifecycle (Gavin, 2019). The extraction step addresses the collection of raw data using a range of various methods and quality. The transformation is critical  and generally is the most resource intensive step. A 2018 Forbes survey of data scientists indicated that 80% of their time is spent on data preparation.   In machine learning, the data must be engineered to allow  feature representations. Neil Lawrence offers a framework to assess data readiness for analytics (Lawrence, 2017), us-ing three levels. The lowest level (C -Level) describes the  challenges with data engineering and wrangling. As Law-rence explains, m any organizations claim they have data,  but the data have not been made available for analytic use. He refers to this type of data as hearsay data. B -Level data  require an understanding of its faithfulness and representa-tion. Finally, A -Level represents data in context, assessed to  be able to answer organizational questions.   Another key A I technique is embedding spaces1 that rep- resent high -dimensional vector spaces in low-dimensional  vector spaces.  An embedding2  is a translation of a high -di- mensional vec tor into a low -dimensional space. Embedding  techniques vary by the type of data. The techniques and data  engineering methods are associated with the data types. Data used to create AI -enabled systems vary, and are shown  in the categories described in Table 1.    Table 1. Data Categories and Engineering Processes   Data Category  Data Engineering Processes   Computer Vision  Image manipulation   Filtering   Image transformations   Unstructured Text  Tokenization   Stemming   Lemmatization   Stop words removal   Embedding   Categorical  One hot coding   Imputation   Time Series  Time alignment   Feature generation    The second aspect of data is management and storage.  The current AI spring renaissance is fueled by data availa-bility. Developers have several alternatives for organizing and storing data in AI enabled systems.   Historically, relational database systems be came the most  prevalent data storage technique in business operations starting in the 1980s. A relational database involves creating  tables and using keys for relationships between tables. The  advantage of relational databases is that they are efficient at   minimizing data redundancy and maximizing data integrity. One disadvantage of relational databases is their inability to deal with large amount of unstructured data, varying data types, and a large number of users querying.   In the late 2000s, we entered t he big data era and the  dawn of No- SQL or non -relational data storage approaches.  These approaches were motivated by exponential growth in data in the internet. The family of No -SQL approaches in- clude:     ‚Ä¢ key-value pair databases;   ‚Ä¢ document databases (J SON or XML);   ‚Ä¢ column family store databases; and   ‚Ä¢ graph databases.                                                       1 https://www.forbes.com/sites/gilpress/2016/03/23/data -preparation - most -time-consuming -least-enjoyable -data-science -task-survey - says/?sh=638c993a6f63  Finally, practical AI -enabled systems often employ pol- yglot persistence that entails a mix of relational and non - relational data storage approaches.   2.4 Design   The AI field is charact erized by several algorithmic ap- proaches ranging from rule -based systems to machine learn- ing algorithms. A simple framework for designing AI -ena- bled functions comprises perceive, decide, or act. Table 2 provides a high -level framework for mapping various a lgo- rithm classes into the three functions. Through the decom-position step, a problem is examined to identify potential ap-plications for AI technologies. In practice, many AI -enabled  solutions may include a combination of algorithm classes.   The data section reviewed various data categories and en- gineering techniques. The algorithmic techniques in Table 2 can be applied to various data categories. Initially, develop-ers emphasized computer vision data in deep neural net-works for supervised learning. Wit h the expert level perfor- mance achieved with deep neural networks in computer vi-sion data, developers have since applied them to other data types such as text and time series.   Table 2. High -Level Framework Mapping of AI Algorithm   Classes   Algorithm  Class  Algorithm   Subclass  Per- ceive  Decide  Act  Supervised  ML ‚Ä¢ Regression   ‚Ä¢ Traditional  Classifica- tion  ‚Ä¢ Deep Neural  Networks  X    Unsuper- vised MS  ‚Ä¢ Clustering   ‚Ä¢ Generative  Adversarial  Networks  X  X  Reinforce- ment  Learning    X   Rules and  Logic    X X  2.5 Diagnosis   The diagnosis component addresses how AI -enabled sys- tems are assessed and what metrics are used. The design sec- tion identified four algorithm classes that bring a different set of metrics. Typical metrics for supervised machine learn-ing algorithms include accuracy, a confusion matrix, per class accuracy, log loss, precision, recall, mean average pre- 2 https://cloud.google.com/architecture/overview -extracting -and-serving - feature -embeddings -for-machine -learning   cision, and Area Under the Curve (AUC). Metrics for unsu- pervised algorithms are more complicated because ground truth data may not exist to apply metrics such as  accuracy.  Since unsupervised learning involves clustering, metrics ex-ist to measure the cohesion of clusters.   Reinforcement Learning systems are evaluated with a dif- ferent set of metrics. These metrics are summarized by Hen-derson et al., 2018 and include  confidence bounds, power  analysis, and significance of the optimization.   2.6 Deployment   There is no one -size-fits-all approach for AI -enabled system  deployment, but it is important to note that AI technologies are generally employed in a broader system co ntext. With  the prevalence of cloud computing and client/server models, AI-enabled systems leverage this type of computing para- digm. For AI -enabled systems that employ client -server  models in a cloud environment, computation for AI models resides on the se rver side. Alternatively, the AI models can  be hosted on local devices. Factors to consider in selecting a deployment model include governance of data and models, computational requirements, and connectivity requirements. Another tradeoff for deployment in cludes whether to use  Central Processing Units (CPUs) or Graphical Processing Units (GPUs). GPUs are heavily leveraged in deep neural networks given their advantages with parallel processing of vectorized data. CPUs are lower cost and have advantages for applications that require significant computer memory.   Hidden technical debt and continuous monitoring are  other vital factors to consider for deploying AI -enabled sys- tems. Sculley et al., 2015 used the software engineering con-cept of technical debt to describe significant ongoing maintenance costs in real -world machine learning systems.  A key point in the document is that the algorithm portion of the software constitutes a small percentage of the overall code base of an AI -enabled system.   Continuous monitor ing addresses changes in the behavior  of deployed AI models. One common problem when super-vised machine learning systems are deployed is concept drift, resulting when the distribution of data fed into the model deviates from the distribution of training da ta used to  create the model. Gama et al., 2014 provide a survey of methods for concept drift mitigation.   3.Precision Medicine Use Case Piorkowski, 2021 describes several domains where data sci-ence and AI have been applied. One example includes the Precision Medicine Analytical Platform (PMAP) that ena-bles AI for precision medicine. The PMAP design com-menced in 2016 with decomposition of t he precision medi- cine domain, initially focused on prostate cancer and multi-ple sclerosis.  The decomposition phase led to challenges that can be  solved by the application of AI to treat these diseases. This  phase involved close collaboration with domain e xperts who  are renowned in the treatment of prostate cancer and multi- ple sclerosis.   The close collaboration with domain experts and design - ers helped framed subsequent data engineering and design  phases. Data engineering started with curating medical rec- ord data in EPIC, together with other data available in diag- nostic imaging systems (e.g., CT Scans).   The data engineering involved handling all types of data  mentioned in the previous data section, and represented the  most resource -intensive step. With th e data engineering step  completed, new AI solutions were created for clinicians. For  prostate cancer, a new capability was designed using Natu- ral Language Processing (NLP) for machines to discover pa- tient Gleason Scores in medical records (Chee et al., 2018) .  Special efforts to include independent human annotations  were used to diagnosis the NLP capability.   Finally, a deployment system was created in a Microsoft  Azure cloud environment that prov ides governance mecha- nism for medical data. Add itional tools are included such as  python and R for clinicians seeking to do research.  4.Summary This paper introduces the 6 -D framework for creating AI - enabled systems. The 6 -D framework provides an end -to- end holistic list of critical elements that should be addressed  to bui ld AI capabilities successfully. The topic of ethics in  AI systems is recognized as cross -cutting, and ethical con- siderations should be addressed as part of each element of the 6 -D framework.   5. Abbreviations and Acronyms AI A rtificial Intelligence   AUC  A rea Under the Curve   BHAG   Big Hairy Audacious Goal   CPU   Central Processing Units   ETL  Extract, Transform, and Load   GPU Graphical Processing Units   NLP   Natural Language Processing   PMAP  Precision Medicine Analytical Platform   6. References      Chasanidou D.,  Gasparini A.A., Lee E. 2015. Design Thinking  Methods and Tools for Innovation. In Marcus A. (eds) Design,  User Experience, and Usability: Design Discourse. Lecture Notes  in Computer Science, vol 9186. Springer, Cham.   Chee B., Joice, G., and  Johnson M. 20 18. ‚ÄúA novel natural lan- guage processing pipeline automates unstructured data extraction  within medical reports.‚Äù Paper presented at the Nat. Comprehen- sive Cancer Network 23rd Ann. Conf., Orlando, FL, March 2018.   Collins, J and Porras, J. 1996. Building your Companys Vision. In Harvard Business Review, September ‚ÄìOctober.   Ellwood, P.M., Williams, C., and  Egan, J.P. 2020. Crossing the  Valley of Death: Five Underlying Innovation Processes. Techno- vation, Jesuthasan, Ravin and Boudrea, John Reinventing Jobs: A  4-Step Approach for Applying Automation to Work.‚Äù Harvard  Business Press, 2018.   Henderson, Peter, I slam, Riashat, Bachman, Philip, Pineau, Joelle,  Precup, Doina, AND Meger, David. 2018. Deep Reinforcement  Learning That Matters AAAI Conference on Artificial Intelli- gence.   Jo√£o Gama, Indrƒó ≈Ωliobaitƒó, Albert Bifet, Mykola Pechenizkiy, and  Abdelhamid Bouchachia. 2014. A Survey on Concept Drift Adap- tation. ACM Computing Surveys. 46, 4, Article 44 (April 2014).   Krizhevsky, A., Sutskever, I., and Hinton, G. E. 2012. ImageNet  classification with deep convolutional neural networks. In Pro- ceedings of the 25th Int ernational Conference on Neural Infor- mation Processing Systems (NIPS 2012) (Vol.).   Lawrence, N. D. 2019. Data Science and Digital Systems: The 3 - Ds of Machine Learning Systems Design. arXiv preprint  arXiv:1903.11241.   Lewis Gavin. 2019. What Is Data Engineering? OReilly Media,  Inc., December 2019.   Lawrence, N.D. 2019. Data Science and Digital Systems: The 3Ds  of Machine Learning Systems Design. ArXiv, abs/1903.11241.   Lawrence, N. D. 2017. Data Readiness Levels.   Piorkowski, J. 2021. Achieving Mission Impact with Data Science,  Johns Hopkins APL Technical Digest (Applied Physics Labora- tory). 35 Number 4.   Ravitz, A., Sapirstein, A.,  Pham, J., and  Doyle, P. 2013. Systems  Approach and Systems Engineering Applied to Health Care: Im- proving Patient Safety an d Health Care Delivery. Johns Hopkins  APL Technical Digest (Applied Physics Laboratory). 31. 354- 365.  Roh. Y,  G. Heo and S. E. Whang. 2021. A Survey on Data Col-lection for Machine Learning: A Big Data - AI Integration Perspec- tive. In IEEE Transactions o n Knowledge and Data Engineering,  vol. 33, no. 4, pp. 1328- 1347, 1 April 2021.   Sculley. D, Gary Holt, Daniel Golovin, Eugene Davydov, 2015.  Todd Phillips, Dietmar Ebner, Vinay Chaudhary, Michael Young,  Jean-Francois Crespo, and Dan Dennison. Hidden technic al debt  in Machine learning systems. In Proceedings of the 28th Interna- tional Conference on Neural Information Processing Systems, Vol- ume 2 (NIPS15). MIT Press, Cambridge, MA, USA, 2503 ‚Äì2511.   ","cs.SE, cs.AI",Arxiv
2,AI and Identity,"Sri Yash Tadimalla, Mary Lou Maher",2024-02-29 15:07:30+00:00,http://arxiv.org/pdf/2403.07924v2,"AI-empowered technologies' impact on the world is undeniable, reshaping industries, revolutionizing how humans interact with technology, transforming educational paradigms, and redefining social codes. However, this rapid growth is accompanied by two notable challenges: a lack of diversity within the AI field and a widening AI divide. In this context, This paper examines the intersection of AI and identity as a pathway to understand biases, inequalities, and ethical considerations in AI development and deployment. We present a multifaceted definition of AI identity, which encompasses its creators, applications, and their broader impacts. Understanding AI's identity involves understanding the associations between the individuals involved in AI's development, the technologies produced, and the social, ethical, and psychological implications. After exploring the AI identity ecosystem and its societal dynamics, We propose a framework that highlights the need for diversity in AI across three dimensions: Creators, Creations, and Consequences through the lens of identity. This paper proposes the need for a comprehensive approach to fostering a more inclusive and responsible AI ecosystem through the lens of identity.","AI and Identity Sri Yash Tadimalla, Mary Lou Maher1 1University of North Carolina Charlotte stadimal@uncc.edu, mmaher9@uncc.edu Abstract AI-empowered technologies‚Äô impact on the world is unde- niable, reshaping industries, revolutionizing how humans in- teract with technology, transforming educational paradigms, and redefining social codes. However, this rapid growth is accompanied by two notable challenges: a lack of diversity within the AI field and a widening AI divide. In this context, This paper examines the intersection of AI and identity as a pathway to understand biases, inequalities, and ethical con- siderations in AI development and deployment. We present a multifaceted definition of AI identity, which encompasses its creators, applications, and their broader impacts. Understand- ing AI‚Äôs identity involves understanding the associations be- tween the individuals involved in AI‚Äôs development, the tech- nologies produced, and the social, ethical, and psychological implications. After exploring the AI identity ecosystem and its societal dynamics, We propose a framework that high- lights the need for diversity in AI across three dimensions: Creators, Creations, and Consequences through the lens of identity. This paper proposes the need for a comprehensive approach to fostering a more inclusive and responsible AI ecosystem through the lens of identity. Introduction With the rise of AI, there‚Äôs an emergence of complex ques- tions about the very fabric of its existence. Whether it is politicians mulling over policy implications (Coeckel- bergh 2022), civilians navigating the implications of AI in daily life (Liu et al. 2023), Educational institution‚Äôs decisions on AI usage in learning and teaching (Mouta, Pinto-Llorente, and Torrecilla-S ¬¥anchez 2023), Tech organi- zations using AI to innovate and create business applica- tions (Bessen et al. 2023) or military organizations strate- gizing defense (De Spiegeleire, Maas, and Sweijs 2017), each group views AI through its unique lens (Calo 2017). The current discourse on Artificial Intelligence (AI) reflects a complex interplay of optimism and concern regarding AI‚Äôs impact on global equity (Crawford 2021). This narrative is increasingly focused on the ‚ÄùAI Divide,‚Äù a term that encap- sulates the challenges AI poses in perpetuating disparities between those who have access and those who don‚Äôt (Carter, Liu, and Cantrell 2020). Copyright ¬© 2022, Association for the Advancement of Artificial Intelligence (www.aaai.org). All rights reserved.The global population is currently around 8.1 billion. As of 2023, it‚Äôs estimated that there were roughly 3.4 billion people employed worldwide, with 2 billion people working within the informal economy (Dyvik 2023). The ICT sec- tor was projected to employ 55.3 million people full-time by 2020, according to estimates made before the COVID- 19 pandemic (Sherif 2023). Within this sector, a smaller number of workers are actively involved in developing or working with AI tools and systems. Looking forward, it‚Äôs expected that by 2025, up to 97 million individuals will be working in the AI field. Furthermore, the US AI market is anticipated to reach 299.64 billion dollars by 2026. AI tools and systems are projected to impact nearly 40 percent of jobs globally, with this figure rising to about 60 percent in ad- vanced economies (Howarth 2024). These changes will lead to a combination of job replacement and augmentation with the influencing factor being access to or lack of access to the internet and digital infrastructure. This scenario underscores a significant power imbalance, where a relatively small portion of the global population has a profound influence on the lives and livelihoods of the ma- jority as visualized in Figure 1. In this rapidly evolving land- scape and widening AI divide, a notable challenge that has emerged is the significant lack of diversity among the cre- ators, researchers, and educators in the AI field. This ho- mogeneity within the AI workforce, if it persists into the predicted 96 million AI workforce, represents more than an issue of fairness or representation; it fundamentally affects the design, implementation, and impact of AI technologies across different populations and societies. (Stathoulopoulos and Mateos-Garcia 2019). The concern is that while AI has immense potential for progress in areas like healthcare, agriculture, and educa- tion, its development is predominantly driven by the pri- vate sector (Abboud, Arya, and Pandi 2020) (Chui et al. 2023), raising critical questions about its applicability and fairness (Dwivedi et al. 2021). Renowned AI safety groups and industry leaders have raised alarms not just about ex- istential risks akin to pandemics and nuclear war but also about the social inequities AI might exacerbate (Hinton et al. 2023) (Buolamwini and Gebru 2018). Scholars have high- lighted the immediate dangers of AI, especially its impact on marginalized and vulnerable populations (Birhane et al. 2022). This is evidenced by the shortcomings of existing Figure 1: Representation of global workforce and AI indus- try impact AI models, including facial recognition inaccuracies and the limited effectiveness of Large Language Models (LLMs) in addressing the diverse needs of global populations (Coulter 2023). Congressional testimony on the need for AI regula- tion and the collective call by AI researchers for a pause in AI advancements emphasize the urgency of addressing these issues (Pause Giant 2023). Moreover, the public‚Äôs di- vided perception of AI, akin to debates in cybersecurity (Kova Àácevi¬¥c, Putnik, and To Àáskovi ¬¥c 2020), points to a signifi- cant gap between the aspirational goals of various AI frame- works and principles, and the reality of their implementa- tion, especially in diverse global contexts(Hagerty and Ru- binov 2019). This evolving narrative and the need to solve the AI diver- sity gap underscores the need for a nuanced, socio-technical approach to understanding the multifaceted identity of AI (Lee and Qiufan 2021). Through an exploration of how AI is created, applied, and perceived (Kim et al. 2023) across various societal strata, as presented in the AI identity ecosys- tem (Figure 2), we can answer questions like, Who creates AI? Whose values does it reflect? How is it perceived across different cultures and demographics? And, how do all these factors influence the technology‚Äôs trajectory?(Bingley et al. 2023) It is intricately woven with the myriad societal dy- namics that shape identity formation and influence percep- tions. The answers to these questions are pivotal as they influence not only the technological trajectories of AI but also its societal implications as presented in the AI identity Framework (Figure 2). It is critical to underscore that the identity of AI isn‚Äôt simply a reflection of its perception but a pathway to bridging the AI divide and improving inclusivity efforts.Background The process of developing the construct of ‚ÄùAI identity‚Äù begins with understanding the drivers and landscape of AI development (Christian 2020) which can be under- stood through the AI identity ecosystem (Figure 2). The AI ecosystem is a dynamic and interwoven network com- prising a myriad of essential components that collectively drive the evolution and application of artificial intelligence (Jacobides, Brusoni, and Candelon 2021) (Yoo 2020). We will try to explore the various components of the AI ecosys- tem in this paper. Firstly, the building blocks of the system lay in the technologies and tools, such as machine learning algorithms and frameworks like TensorFlow and PyTorch (Paszke et al. 2019). Complementing these are specialized hardware solutions like GPUs and TPUs, designed to cater to the computational demands of AI (Batra et al. 2019). Data, the lifeblood of AI, flows in from diverse sources, including IoT devices and online interactions, and is stored and pro- cessed using advanced tools (Aragon et al. 2022). However, in understanding AI‚Äôs evolution it is essential to understand the confluence of various human endeavors that drive its development as mentioned above. In this section particularly we focus more on the identity of the creators as it has cascading effect on the other layers. These human contributors do more than just define AI‚Äôs trajectory; they embed societal norms, values, and biases into the technol- ogy, shaping the future of our automated world (Cave and Dihal 2020). The role of research cannot be overstated, as institutions constantly push the boundaries of what‚Äôs possi- ble, often dictating the future direction of AI (Basole and Accenture 2021). Simultaneously, both tech behemoths and startups shape the AI landscape with their innovative prod- ucts and platforms. Open-source communities bolster this growth, fostering collaboration and ensuring that AI tools remain accessible to all (Quan and Sanderson 2018). As the influence of AI permeates society, regulatory and ethical bodies are stepping in to ensure its deployment is re- sponsible and aligned with societal values (Minkkinen, Zim- mer, and M ¬®antym ¬®aki 2021). End-users and consumers, both individuals and businesses, are the final and important piece of the puzzle, adopting AI solutions and applications and in- fluencing their development through feedback. Integral to all these components and often the ones that shape the direction of development is the financial pillar of investors and fund- ing entities that fuel the growth of AI across sectors (Khanna 2023). Lastly, the AI ecosystem is enriched by educational institutions and platforms that impart knowledge, nurturing the current and future generations of AI enthusiasts and pro- fessionals through AI literacy (Long and Magerko 2020) and AI education (Schiff 2022). The identity of AI continues to extend beyond just its creators and the diversity within the field. It encompasses a range of social considerations that shape its existence and impact(Cole 1991). Ethical concerns surrounding AI, such as bias in algorithms, privacy issues, and the soci- etal implications of AI, require careful attention and miti- gation (Amershi 2020). Human-AI collaboration is evolving to where AI can augment human capabilities and automate tasks, necessitating the exploration of inclusive ways for hu- Figure 2: The AI Identity Research Framework mans and AI to collaborate seamlessly (Amershi et al. 2019). The tendency for humans to personify or anthropomorphize AI systems raises psychological and sociological questions about the implications of interacting with AI, especially in education (Maher, Tadimalla, and Dhamani 2023) and work environments (Mirbabaie et al. 2022). Moreover, public sen- timent around AI is often polarized based on users‚Äô back- grounds, leading to inaccurate narratives about AI in soci- ety(Prahl and Goh 2021). These narratives and biases, com- bined with the digital divide that exists in society and com- puter science exclude some and inhibit many‚Äôs access to AI careers, especially for certain groups of underrepresented minorities, and women (Shams, Zowghi, and Bano 2023). By examining the roles, interactions, and contributions of these diverse stakeholders as presented in the AI Ecosystem (Figure 3) we can gain a comprehensive understanding of how AI systems are created, operate, and evolve. By fore- grounding these concepts, we aim to dissect how they in- fluence AI creators and their creations. Through the depic- tion of layers and various pipelines (connections) across the layers that lead to various consequences or issues in the AI landscape, Figures 1 and 2 together show the myriad ways AI technologies can either reinforce existing societal dispar- ities or potentially pave the way for a more inclusive and equitable future. By dissecting these relationships, we can better compre- hend and address the disproportionate consequences and impacts that AI can have on various segments of soci- ety. The construct of human identity is influenced as de- picted in the image is present across the layers, present in the identities, data, perceptions, and experiences of end users in the AI ecosystem. Here Human Identity, as defined within intersectionality (Crenshaw 2013) and identity the- ory(Jenkins 2014), encompasses the multifaceted and inter- connected aspects of an individual‚Äôs social categories, in- cluding race, gender (Scheuerman et al. 2020), class (In- aba and Togawa 2021), sexuality (Keyes, Hitzig, and Blell 2021), and disability (Trewin et al. 2019), nationality and age (Pollack 2005) etc, recognizing that these overlappingidentities shape unique experiences of privilege and oppres- sion (Benjamin 2019). AI Identity Sociology Literature provides a comprehensive exploration of how individuals‚Äô identities are formed (Stets and Burke 2000), negotiated (Jenkins 2014), and transformed (Collins and Bilge 2020) within the context of social structures and interactions, offering insightful analysis on the complexity of identity as both a personal and social construct (Albert 1998). This concept also extends to objects, organizations, and technology (Wood and Smith 2004), illustrating how identity formation transcends individual experiences to en- compass broader societal interactions and constructs (Hirsch 1992). Often discussions and models involving identity in the AI landscape and ecosystem are heavily centered on the technological and economic aspects (Mitchell 2020). With efforts focused on defining and explaining what AI is (Wang 2019) and how to understand its usage (Devedzic 2022) (Touretzky, Gardner-McCune, and Seehorn 2023), how AI perceives the human identity (Scheuerman et al. 2020) (Schlesinger, O‚ÄôHara, and Taylor 2018) (Tian et al. 2017), how humans perceive AI (Ragot, Martin, and Cojean 2020) (Lima et al. 2020) (Shinners et al. 2022), how hu- mans interact with the AI (Keyes, Hitzig, and Blell 2021) (Ashktorab et al. 2020) and how AI influences the human identity in various scenarios (Cao et al. 2023). This includes discussions on algorithms (Noble 2018) (Pasquale 2015), data(Aragon et al. 2016) (Aragon et al. 2022), hardware in- frastructure (Batra et al. 2019), application areas (Huang and Rust 2021), market growth, company roles (Alahmad and Robert 2020), and investment trends (Mir, Kar, and Gupta 2022). While these aspects are undeniably crucial, they of- ten overshadow the deeper, more intricate layers of AI‚Äôs per- ception and relationship with the concept of identity. We define ‚ÄùAI Identity‚Äù in two dimensions: internal and external. Internally, AI Identity includes the collective charac- teristics, values, and ethical considerations embodied in the creation of AI technologies. Externally, AI identity is shaped by individual perception, societal impact, and cul- tural norms. These dimensions form a comprehensive view of AI iden- tity, highlighting the interplay between the creation of tech- nology itself and its broader interaction with society. This means understanding the place of AI in society, its develop- ment, interactions with individuals (Gutoreva 2024), and the nuances of its impact on various facets of human life. The identity of AI is intricately linked to various ethical dilem- mas, including responsibility, accountability, fairness, trans- parency, and trust (Benjamin 2019). These issues are cen- tral to the ongoing discussions surrounding the regulation and governance of AI, as well as its cultural and social im- pacts(Arora et al. 2023). Furthermore, it is vital to recognize the role of media representations of AI in popular culture, as they significantly shape public attitudes and beliefs about this technology. In this context, the emergence of Human- Centered AI (HCAI) (Shneiderman 2021), with its empha- sis on considering human values and agency, represents a pivotal shift in the AI landscape. International organizations like the European Union and research and education insti- tutions are advocating for HCAI, promoting a humanistic and ethical approach that enhances human capabilities while addressing the multifaceted challenges associated with AI identity and its broader societal implications (Capel and Br- ereton 2023). These dynamic changes in the AI landscape and the important role that education plays in creating op- portunities for minorities to participate in AI (Salas-Pilco, Xiao, and Oshima 2022), led the authors to focus on this topic. In the next three sections of the paper, we look deeper into the layers of identity in AI: the creators, the creations, and the consequences that emerge from the identity ecosys- tem. Figure 4 summarizes our exploration. By examining the intersection of AI with identity, we aim to shed light on the complex dimensions of AI identity and its implications for individuals and society as a whole. The Creators of AI The development of AI is influenced by its creators, whose diverse backgrounds and identities are crucial in shaping the technology‚Äôs direction (Schiff et al. 2020). Despite sig- nificant advancements, AI suffers from a notable lack of diversity among its developers, echoing broader inclusiv- ity challenges within the tech industry (Inaba and Togawa 2021). Diversity is not just about fairness but is essential for creating AI systems that are unbiased, ethical, and ben- eficial for society (Shams, Zowghi, and Bano 2023). Thus, enhancing the diversity of AI creators is imperative to en- sure that the technology reflects a broad spectrum of human experiences and values, contributing positively to societal progress(Chubb, Reed, and Cowling 2022). It is important to note that this layer of the ecosystem is closely connected with the internal dimension of AI identity. In the list below, we highlight some of the key groups (individual and organi- zational) that influence who the creators are, illustrating the nature of AI‚Äôs development landscape. The goals of AI are often defined by this layer of AI ecosystem and when we look at these key groups, this position paper acknowledgesthe need to increase diversity across all of the groups across sectors and disciplines. ‚Ä¢Researchers, Scientists, and Academics: The develop- ment of AI is driven by a community of researchers, sci- entists, and academics from various disciplines (Hartmann and Henkel 2020). Experts in computer science, math- ematics, biology, linguistics, cognitive science, and en- gineering collaborate to advance AI technologies. They conduct research, publish academic papers, and contribute to the theoretical foundations of AI(Stathoulopoulos and Mateos-Garcia 2019). Higher education institutions also play a big role in shaping the perception and standards (Mouta, Pinto-Llorente, and Torrecilla-S ¬¥anchez 2023)that these students carry into their professional careers. With HCI, interaction design, and UX communities contribut- ing to AI work on addressing the gap in discourse about AI‚Äôs relationship to design practice (Loi et al. 2019), higher education institutions and private research institu- tions are important actors in shaping the diversity in the field of AI (Ahmed and Wahed 2020) (Whittaker et al. 2018). ‚Ä¢Students and Higher Education Institutions: Students pursuing higher education, such as undergraduate and graduate programs, play a vital role in the creation and advancement of AI. They learn the fundamental concepts and skills necessary for AI development and contribute fresh perspectives and ideas (Touretzky et al. 2019). Many universities and educational institutions offer spe- cialized AI programs and research opportunities (Luckin and Holmes 2016), nurturing the next generation of AI creators beginning from K-12 or high school (Adejoro et al. 2023). It is important to not here the disciplinary dif- ferences across AI perception and adoption across various disciplines (Zawacki-Richter et al. 2019) ‚Ä¢Corporate and Private Organizations: Numerous com- panies and organizations are actively involved in the de- velopment and deployment of AI technologies (Jacobides, Brusoni, and Candelon 2021). Major tech companies like Google, Microsoft, and IBM invest significant resources into AI research and development (de Laat 2021). Star- tups and research organizations focused on AI innovation also contribute to the creation of novel AI applications and technologies (F ¬®arber and Tampakis 2024). Many his- torically consumer or service-oriented organizations and companies are also building in-house AI solutions across sectors (Simon and Isaza-Ibarra 2023). ‚Ä¢Engineers and Developers: The creation of AI systems requires the expertise of engineers and developers who design and build the underlying software and hardware in- frastructure. They develop algorithms, models, and frame- works that power AI applications. These professionals work on coding, testing, and optimizing AI systems to en- hance their performance and capabilities (Griffin, Green, and Welie 2023). ‚Ä¢Collaborative Communities and Open-Source Projects: Collaboration and open-source initiatives play a crucial role in AI creation. Online communities, forums, and platforms facilitate knowledge sharing, Figure 3: The AI Identity Ecosystem collaboration, and the exchange of ideas among AI enthu- siasts and professionals (Bostrom 2018) (Hibbard 2008). Open-source projects like TensorFlow and PyTorch provide accessible frameworks and tools that empower developers to create AI solutions (Paszke et al. 2019). Non-profits and professional societies are also getting involved with building standards and expectations around AI integration from the lenses of ethics and standards. ‚Ä¢Government and Policy Institutions: Governments and policy institutions contribute to the creation of AI by es- tablishing frameworks, regulations, and policies that guide its development and deployment (Bareis and Katzenbach 2022) (Luo and Van Assche 2023). The government also invests in the development of AI through its military/de- fense wing to be up to date with private system develop- ments. Mulitaleral Global organizations in the ICT space are trying to address ethical considerations, and privacy concerns, and ensure responsible and accountable AI prac- tices (Vacarelu 2022) (Floridi et al. 2021). Government- funded National research initiatives and grants also sup- port AI research and innovation (Donlon 2024). The Creation of AI To understand the definition of AI and its application in var- ious scenarios it is important to understand the very build- ing blocks of AI, and how they work and interact with the physical world (Raghavan 2021). This layer of the ecosys- tem acts as the mechanism or conduit that translate the goals reflected by the identity of the creators of AI into the conse-quences and considerations layer of AI Identity ecosystem, and therefore is key to understanding both the external and internal aspects of AI Identity. this should be explained in the beginning of this section and then summarized at the end of this section. In this paper, we will adopt a comprehensive approach to understanding the workings of artificial intelli- gence (AI) by analyzing it from both technical and socio- technical perspectives. It is simultaneously important to un- derstand the intricate connection between the infrastructure layer and the growth of AI‚Äôs impact on society through these two lenses. The technical approach involves understanding AI Mod- els and Applications , where we explore the technical foun- dations and applications of AI, including chatbots, vir- tual assistants, language processing, recommendation sys- tems, domain-specific applications, autonomous systems, robotics, machine learning models, computer vision, and generative models. This layer represents the nuts and bolts of AI, where one learns what these technologies are, how they operate, and the specific tasks they are designed to per- form. By understanding the mechanics and functionalities of these AI applications, one can appreciate the technical goals and innovations driving AI development. It is important to note here that the development of these goals have histori- cally been oriented around efficiency and performance not about diversity and inclusion. Conversely, the socio-technical approach centers on AI Frameworks and Principles , focusing on the overarching frameworks and principles guiding the ethical, responsible, and equitable development and deployment of AI technolo- gies. This layer encompasses Trustworthy AI, Responsible AI, Ethical AI, AI for Good, Human-Centered AI, and Equi- table AI. Here, we assess how these guiding principles influ- ence the design, purpose, and impact of AI technologies on society. This approach allows us to understand the broader implications of AI, including ethical considerations, societal impacts, and the role of AI in promoting social good and addressing global challenges. This infrastructure layer is not only a precursor to the technical layer‚Äôs growth but also a fundamental aspect that interweaves with the socio-technical layer, affecting how AI integrates and resonates within human society. Through its capacity to support and scale AI development, It not only provides the technical means for AI‚Äôs existence but also in- fluences the objectives, ethics, and inclusivity of AI sys- tems by virtue of access. By enabling or limiting the devel- opment of certain AI applications, the infrastructure layer shapes the AI identity, reflecting the priorities and values of its creators and users. Furthermore, by offering metrics for capacity building, the infrastructure layer facilitates the as- sessment of global AI development efforts, guiding policy, investment, and education towards a more equitable and in- clusive AI future. The Infrastructure Layer The infrastructure underpinning artificial intelligence (AI) is the bedrock upon which the technical evolution and so- cietal integration of AI is built. This infrastructure encom- passes the essential tools, hardware, and frameworks neces- sary for the development, training, and deployment of AI systems, including data processing capabilities, computa- tional power, and cloud services. These components are in- dispensable for the processing of vast datasets, supporting complex model training, and ensuring the scalable deploy- ment of AI applications. As such, the infrastructure directly influences the pace and direction of AI innovation. The dis- parities in AI capabilities across different regions highlight the need for global cooperation and investment in AI infras- tructure. Consequently, infrastructure availability becomes a crucial metric for gauging capacity-building efforts, un- derscoring the importance of democratizing AI benefits to mitigate regional disparities. As AI technologies become in- creasingly embedded in everyday life, the infrastructure that supports these technologies plays a vital role in determining how they are received, understood, and integrated into vari- ous cultural contexts. This interaction between AI and soci- ety influences the design, functionality, and adoption of AI systems, necessitating a thoughtful approach to infrastruc- ture development that considers and reflects diverse human values and societal needs. ‚Ä¢Large Language Models (LLMs): Large Language Models, such as GPT (Generative Pretrained Transformer) and BERT (Bidirectional Encoder Representations from Transformers), represent significant advancements in nat- ural language processing and understanding. These mod- els, which learn from vast amounts of text data, have revo- lutionized how machines understand and generate human-like text, enabling a wide range of applications from auto- mated writing assistants to advanced chatbots. The devel- opment and refinement of LLMs require substantial com- putational resources and sophisticated algorithms, show- casing the importance of robust infrastructure in AI inno- vation (Devlin et al. 2018) (Brown et al. 2020). ‚Ä¢Data: Data serves as the cornerstone for training AI mod- els, providing the raw material from which machines learn and make inferences. The quality, diversity, and volume of data directly impact the performance and bias in AI systems. Effective data management and processing in- frastructure are crucial for handling the increasing scale of data, necessitating advanced storage solutions and data processing frameworks (Hartmann and Henkel 2020). The ethical considerations in data collection and use are also paramount, emphasizing the need for transparency and fairness in AI (Aragon et al. 2022). ‚Ä¢Curriculum: The AI curriculum encompasses the ed- ucational resources and programs designed to equip in- dividuals with the knowledge and skills required to de- velop and manage AI technologies. This includes courses on machine learning, ethics in AI, data science, and spe- cialized AI applications. The development of a compre- hensive AI curriculum that is accessible and inclusive is essential for fostering a diverse and skilled workforce ca- pable of advancing AI technology while considering its societal impacts (Maher and Tadimalla 2024) (Long and Magerko 2020) (Schiff 2022) (Song et al. 2024). ‚Ä¢Standards and Policy: Standards and policies play a critical role in guiding the ethical development, deploy- ment, and governance of AI technologies. These frame- works help ensure that AI systems are developed responsi- bly, promoting transparency, accountability, and fairness. International organizations and regulatory bodies are in- creasingly focusing on developing AI standards and poli- cies that balance innovation with ethical considerations and human rights (Jobin, Ienca, and Vayena 2019) (Long et al. 2023) ‚Ä¢Hardware: The hardware infrastructure, including GPUs (Graphics Processing Units) and TPUs (Tensor Processing Units), is fundamental for training and running AI models (Jouppi et al. 2017). These specialized processors can han- dle the parallel processing of large datasets and complex algorithms, making them indispensable for deep learn- ing applications. The development of more efficient and powerful hardware is crucial for advancing AI capabilities and making AI more accessible and sustainable (Merritt 2024). ‚Ä¢Cloud and Digital Tools: Cloud computing and digital tools offer scalable and flexible resources for AI develop- ment and deployment. Cloud services provide access to computational power, storage, and AI development tools on-demand, facilitating the rapid prototyping and scaling of AI applications. This infrastructure supports the col- laborative development of AI, enabling access to cutting- edge technology without significant upfront investment (Armbrust et al. 2010). In essence, the infrastructure supporting AI is not just a foundation for its technical growth but also a mediator of its interaction with society, influencing both the capabilities of AI technologies and their alignment with human values. The Technical Layer: AI Models and Applications Understanding the foundation models of AI is essential to recognize how data influences AI‚Äôs identity and its diverse applications, from enhancing daily life to revolutionizing industries. While AI moves beyond the imagery of futuris- tic robots to practical applications like chatbots, self-driving cars, and medical diagnosis, concerns about inclusivity and a human-centric focus persist. The distinction between Sym- bolic AI and Connectionist AI, such as deep learning, high- lights different approaches to AI development, emphasizing the need for AI to be both transparent and grounded in hu- man values. As AI‚Äôs applications extend from machine learning mod- els in image recognition to personalized recommendation systems and beyond, the adaptability and potential of AI are evident. However, aligning AI with societal needs and ethical considerations remains a challenge. The exploration of AI‚Äôs capabilities across various domains underscores the importance of developing AI technologies that are inclusive, ethical, and beneficial for all, ensuring a positive contribu- tion to society‚Äôs global challenges. Some of the concepts and applications that one needs to familiarize themselves with to get a comprehensive understanding of foundational AI blocks: ‚Ä¢Machine Learning Models: Often categorized into su- pervised learning, where models learn from labeled data; unsupervised learning, identifying patterns in unlabeled data; and reinforcement learning, where models optimize behavior through rewards from trial and error actions. AI employs machine learning models, including deep neural networks, for tasks like image recognition and natural language processing (Goodfellow, Bengio, and Courville 2016). However, while these models excel at pattern recognition and decision-making based on data, they sometimes lack a human-centered focus, which can result in outputs that might not always align with human values or societal nuances (Raghavan 2021). ‚Ä¢Chatbots, Virtual Assistants, and Language Process- ing: AI-powered chatbots, virtual assistants (e.g., Siri, Alexa), and language processing systems leverage natu- ral language understanding and generation to interact with humans, provide information, and perform tasks (Khurana et al. 2023) (Kasneci et al. 2023). ‚Ä¢Autonomous Systems and Robotics: AI enables the de- velopment of autonomous systems, including self-driving cars (Grigorescu et al. 2020), drones, and robots, which can make decisions and perform tasks without direct hu- man intervention (Thrun 2000). ‚Ä¢Generative Models and Creative Applications: AI gen- erative models (Devlin et al. 2018), like GANs and V AEs, create realistic content such as images, music, and text, blurring the line between human and machine- generated creations (Verdoliva 2020). AI is used in cre-ative fields(Du Sautoy 2020) such as art, music, and liter- ature (Cao et al. 2024). ‚Ä¢Recommendation Systems and Personalization: AI- powered recommendation systems analyze user behavior and preferences to provide personalized recommendations for various products, services, and content, enhancing user experiences and engagement (L ¬®u et al. 2012). Personal- ized Marketing and Targeted Advertising AI analyzes user data and behavior to deliver personalized marketing strate- gies, including targeted advertisements and recommenda- tions tailored to individual customers. ‚Ä¢Computer Vision and Image Analysis: AI advance- ments in computer vision enable machines to understand and interpret visual information, performing tasks such as image recognition, object detection, facial recogni- tion, and autonomous surveillance Iandola et al. (2016) (V oulodimos et al. 2018). ‚Ä¢Domain-Specific Applications: Medical Diagnosis, Healthcare, and Fraud Detection AI systems aid in med- ical diagnosis, analyzing patient data, medical images, and clinical records (Topol 2019). They also contribute to fraud detection and cybersecurity, identifying patterns and anomalies to protect against threats. The Socio-technical Layer: AI Frameworks and Principles The frameworks of Trustworthy AI, Responsible AI, Eth- ical AI, AI for Good, Human-Centered AI, and Equitable AI originated from the growing awareness of the profound impacts AI technologies have on society, coupled with a recognition of the potential risks and ethical dilemmas they present. As AI began to permeate every aspect of human life, from healthcare and education to governance and privacy, scholars, policymakers, and technologists acknowledged the need for guiding principles to ensure the development and deployment of AI technologies that are beneficial, fair, and aligned with human values (Floridi et al. 2021). ‚Ä¢Trustworthy AI: This framework focuses on creating AI systems that are safe, transparent, and reliable, emphasiz- ing user privacy and data security (Li et al. 2023). It aims to build user trust through transparency, fairness, and ac- countability (AI 2019). ‚Ä¢Responsible AI: This framework stresses the ethical de- velopment and use of AI, ensuring societal benefit and minimal harm. It advocates for ethical standards and the consideration of AI‚Äôs broader societal impacts, promoting integrity in AI deployment (Dignum 2019). ‚Ä¢Ethical AI: These AI principles align AI development with ethical principles, including human rights and fair- ness, to prevent bias and discrimination. It is supported by frameworks like those from the (Jobin, Ienca, and Vayena 2019), encouraging diverse perspectives in AI develop- ment. ‚Ä¢AI for Good: This framework applies AI to tackle global challenges (Rakova and Dobbe 2023) and achieve the United Nations Sustainable Development Goals (Coeck- elbergh 2021), focusing on healthcare, education, and en- vironmental protection (Floridi et al. 2021). It highlights AI‚Äôs potential for positive societal impact (Cowls et al. 2019). ‚Ä¢Human-Centered AI (HCAI): These AI principles prior- itize human needs and values in AI development, integrat- ing psychology, sociology, and ethics to enhance human capabilities without compromising dignity or autonomy. It advocates for participatory design, making AI accessi- ble and meaningful (Shneiderman 2021). ‚Ä¢Explainable AI: As AI becomes more complex and pow- erful, there is a growing need for trust and explainability. Users and stakeholders want to understand how AI sys- tems reach their conclusions or recommendations (Arrieta et al. 2020). Research on explainable AI aims to develop methods that can provide meaningful explanations for AI decisions (Arrieta et al. 2020). ‚Ä¢Equitable AI: These AI principles aim for the fair distri- bution of AI benefits and the mitigation of harms across society, addressing inequalities in AI‚Äôs development and deployment. It focuses on diversity, inclusivity, and ac- cess, promoting inclusive design practices (Bennett, Ros- ner, and Taylor 2020). The perception of AI and these frameworks dynamically influence each other(Shin 2021). These frameworks play a crucial role in shaping the development of AI by providing ethical, social, and technical guidelines that aim to maximize the benefits of AI while minimizing harm. They serve as a compass for creators, guiding the design of AI systems that respect human rights, promote inclusivity, and ensure ac- countability. They collectively emphasize ethical standards, societal welfare, and human values, advocating for trans- parency, fairness, and accountability (Floridi et al. 2021). However, their focuses vary slightly; Trustworthy AI prior- itizes user trust through safety and reliability, Responsible and Ethical AI emphasizes adherence to ethical standards and societal impacts, AI for Good targets the application of AI for solving global challenges, Human-Centered AI stresses enhancing human capabilities and well-being, and Equitable AI seeks to ensure fairness and prevent exacerba- tion of inequalities. Together, these frameworks form a comprehensive set of principles guiding the ethical, inclusive, and beneficial de- velopment of AI technologies, highlighting the multifaceted approach needed to address the complex implications of AI in society. Public perception impacts the emphasis and di- rection of these frameworks, as societal concerns about pri- vacy, job displacement, and bias in AI systems have led to a greater focus on trustworthiness, responsibility, and ethics in AI development. Conversely, the adoption and promotion of these frameworks can positively influence public perception of AI, building trust and confidence in AI technologies. AI consequences This section explores the second dimension of the AI iden- tity that is external and introduces a wide range of ethi- cal, societal, and cultural considerations. Ethical issues, in- cluding algorithmic bias, privacy breaches, and the poten- tial for surveillance, pose significant concerns. The integra- tion of AI into everyday life highlights the potential forsynergy between humans and AI, facilitating collaborative problem-solving while also raising questions about anthro- pomorphism and its implications. The reflection of human biases in AI systems underscores the urgency for fairness and inclusivity in model development. As AI systems be- come more complex, the demand for transparency and clear explanations of AI decisions grows, alongside the need for stringent regulations and robust data protection measures. AI‚Äôs foray into creative fields prompts discussions about originality and the nature of human creativity. Moreover, AI‚Äôs impact extends to reshaping job markets and socioe- conomic structures, necessitating strategies to protect work- ers and leverage AI for socioeconomic improvement. Media representations of AI significantly influence public percep- tion, highlighting the need for a critical analysis of how AI is portrayed and perceived. The concept of intersectional identity is pivotal when discussing perception, revealing how AI‚Äôs interaction with culture, economics, and ethics intersects with various hu- man identities, such as race, gender, socioeconomic status, and disability. Biased AI systems disproportionately affect marginalized communities, amplifying inequalities. The dif- ferential impact of AI on job markets, based on intersect- ing identities, calls for equitable AI deployment and strate- gies tailored to diverse societal needs. Media representa- tions must also embrace intersectionality, offering nuanced portrayals that challenge stereotypes and shape diverse per- ceptions of AI technologies. Acknowledging these intersec- tional dimensions is essential for the development, regula- tion, and integration of AI technologies in a manner that en- sures fairness, inclusivity, and equitable outcomes for every- one. ‚Ä¢Ethical Considerations: The development and deploy- ment of AI raise important ethical considerations. Issues like bias in AI algorithms, privacy concerns, job displace- ment, and the impact of AI on society and human val- ues require careful consideration and mitigation. Beyond its creators, AI‚Äôs identity is shaped by a plethora of ethi- cal dilemmas that have broader societal implications. The dichotomy of AI applications, as seen in authoritarian regimes using it for surveillance versus democratic soci- eties grappling with its ethical deployment, illustrates the complexity of its societal implications (Jobin, Ienca, and Vayena 2019). ‚Ä¢Personification or Anthropomorphism: Humans often tend to anthropomorphize AI systems, attributing human- like qualities, intentions, and emotions to them (Cole 1991). This phenomenon raises important questions about the psychological and societal implications of interacting with AI. One of the most vivid examples of humans at- tributing lifelike qualities to AI systems can be seen in the applications of voice-activated virtual assistants like Siri, Alexa, or Google Assistant (Blut et al. 2021). As be- nign as this may seem, it brings forth significant questions. How does this humanization of machines affect our social behaviors, especially among the younger generation? Do these interactions blur the lines between genuine human relationships and interactions with coded algorithms? Ad- ditionally, as AI systems get more sophisticated in their responses, the risk of over-trusting or becoming emotion- ally reliant on them grows. This phenomenon necessitates a broader discussion on the implications of AI-human in- teractions, not just from a technological standpoint, but from psychological and societal perspectives as well. ‚Ä¢AI and Human Collaboration: The relationship between AI and humans is evolving. AI can augment human capa- bilities, automate repetitive tasks, and provide valuable in- sights. Human-AI collaboration is essential for leveraging the strengths of both to tackle complex problems (Deller- mann et al. 2019)but introducing AI may negatively im- pact employees if not done intentionally (Mirbabaie et al. 2022) (Rezwana and Maher 2023). ‚Ä¢Human-Bias Reflection: AI systems can inherit human biases present in the data they are trained on, leading to bi- ased outcomes and discriminatory behavior (Schellmann 2024). Recognizing and mitigating these biases is essen- tial to ensure fairness and inclusivity in AI applications (Buolamwini and Gebru 2018). We have seen the need to scrutinize and rectify any biases in the data of AI systems become critical especially in areas like criminal justice, to ensure fairness and prevent perpetuation of historic injus- tices. ‚Ä¢Regulation and Governance: The rapid advancement of AI has prompted discussions around the need for regu- lations and governance frameworks (Hinton et al. 2023) (Pause Giant 2023). Governments and organizations are exploring ways to ensure the responsible and ethical use of AI, protect privacy, and address potential risks associ- ated with its deployment (Madiega 2021). ‚Ä¢Privacy and Data Protection: AI systems rely on vast amounts of data, raising concerns about privacy and data protection. Experts in computer science and law collab- orate to develop frameworks and regulations that safe- guard individuals‚Äô privacy while allowing for AI innova- tion (Aragon et al. 2022) (Arora et al. 2023). ‚Ä¢AI and Creativity: AI is making its mark in creative do- mains such as art, music, and literature. This blurs the line between human creativity and machine-generated output (Karimi et al. 2020), raising questions about authorship, originality, and the nature of art. Can an AI, devoid of lived experiences and emotions, genuinely craft a narra- tive that resonates with human emotions? And if the AI art/creation wins a competition, who would take the ac- colades - the AI, its developers, or the myriad of authors whose works trained the system? (Franceschelli and Mu- solesi 2022) ‚Ä¢Cultural and Social Impacts: AI technologies are not de- veloped in a vacuum but are shaped by cultural and social contexts. Experts in sociology and anthropology examine how AI systems reflect and reproduce societal norms, val- ues, and power dynamics (Karizat et al. 2021). ‚Ä¢Socioeconomic Impact: The implications of AI-driven automation have the potential to reshape job markets and socioeconomic structures through job displacement and disrupting the human resources landscape (Schellmann2024). Thus, exploring strategies to ensure a just transition for workers and leveraging AI for socioeconomic develop- ment becomes crucial across various sectors like health- care, education, and governance (Chui et al. 2023). Coun- tries that rapidly adapt to AI stand to gain significant so- cioeconomic advantages, while those lagging behind face an exacerbated digital divide. This widening gap between AI-ready nations and those without adequate access or in- frastructure could lead to significant disparities in social and economic growth in the coming decades escpecially for marginalised groups (Chetty et al. 2014). ‚Ä¢Media Representations: Media plays a crucial role in shaping public perceptions and understandings of AI. Ex- perts critically analyze how AI is portrayed in popular cul- ture, news media, and entertainment, especially the gen- res of science fiction and speculative fiction, which have a long history of shaping the public‚Äôs perception of AI. These diverse media representations significantly influ- ence public sentiment and understanding of AI, thus shap- ing the discourse surrounding its development and deploy- ment in real-world contexts. ‚Ä¢AI Dilemmas: Various combinations of Consequences and considerations in AI raise numerous dilemmas, such as determining responsibility and accountability for AI actions, ensuring fairness and transparency in decision- making, and considering the ethical impact of AI on so- cial dynamics, safety, and privacy (Caldwell et al. 2022). Highlighting that we must ensure that while AI is a valu- able resource and tool, the final decision must rests with the human expert, capitalizing on the strengths of both en- tities to address intricate challenges while promoting the principles of HCAI. When AI is seen as being developed and deployed in a manner that is aligned with ethical principles and societal well-being, it garners broader acceptance and support (Lu- civero et al. 2020). This interplay highlights the importance of transparent communication and engagement with the pub- lic in the ongoing development and refinement of AI tech- nologies and their guiding frameworks. AI Identity Framework The perception of AI is not monolithic, It is influenced by numerous factors, including societal structures, personal ex- periences, media representations, etc. The lens of identity in the field adds a layer of complexity, which leads to dis- cussions about whether AI application design and creation processes are informed by a myriad of backgrounds, expe- riences, and worldviews. Thus by understanding the context of who creates AI technologies, as well as examining the frameworks and societal considerations that guide AI‚Äôs de- velopment and the way they impact society, we can advocate for diversity and inclusion as essential to an AI Identity that serves all people fairly. The research and conceptual frame- works of AI identity ecosystem capture this complexity by examining the relationship between individual identity fac- tors‚Äîsuch as race, ethnicity, gender, class, sexual orienta- tion, religion, and disability‚Äîand their impact in technolog- ical contexts, specifically through the lens of creators and Figure 4: The AI Identity Framework consumers roles in the development, access to, data manage- ment, perception, and implementation of AI in application- s/solutions(Kivunja 2018). In the technology development landscape, the creator‚Äôs work is influenced by their experi- ences, perceptions and identity, which manifests in the data they select and collect, ultimately shaping the technology they create. Thus representation and inclusion in the creation process has far-reaching consequences and considerations, which the framework suggests must be critically assessed through the lens of identity. Key sociological constructs such as diversity, fairness, inclusion, and bias are interwoven with a fundamental sense of belonging, and accountability under- scoring the importance of these concepts in evaluating diver- sity and inclusion work in the field of AI. The upward arrow alongside ‚ÄôImpact of Identity‚Äô suggests that the presence or lack of diversity and inclusion across the mentioned socio- logical constructs get amplified as we move up through the layers. for example, the impact of bias in the creator‚Äôs lay- ers (Mehrabi et al. 2021) snowballs exponentially into the consequences and considerations layer much akin to the bio accumulation/magnification process in nature (Bommasani et al. 2022). Greater emphasis on these aspects can poten- tially elevate the role and positive influence of identity in the technological sphere. This sociological framework serves as a guide for a comprehensive analysis of how identity shapes technology and, conversely, how technology can reflect and affect societal values and individual sense of self. In essence, this position paper underscores the importance of an interdisciplinary, identity-centered approach when ed- ucating future designers and developers of AI systems. It reinforces the belief that for AI to be truly beneficial for all of society, the designers of tomorrow must be equipped not just with technical expertise, but with a profound un- derstanding of their own identity and understand the ethical, social, and personal ramifications of AI‚Äôs role in our world.Importantly, this approach combined with Human-Centered principles can also catalyze broadening participation. When AI technologies are built to prioritize inclusivity and fair- ness, they can naturally spark interest and engagement from a broader cross-section of society. A commitment to center AI creation and development in identity and the human ex- perience can lead to more people, including those from un- derrepresented backgrounds, feeling motivated to participate in the field. In return, their participation ensures a broader scope of insights, improving AI‚Äôs responsiveness to societal needs. Conclusion In conclusion, the world of AI is ever-changing, with new creators, creations, and ideas constantly emerging as tech- nology advances. Highlighting the interplay between the technology itself and its broader interaction with society, We define AI Identity in two dimensions to form a com- prehensive view of AI identity. AI Identity that includes the collective characteristics, values, and ethical considerations embodied in the creation of AI technologies internally, and AI identity that is shaped by individual perception, soci- etal impact, and cultural norms externally.The discussions within this paper shed light on the significant impact of di- versity and inclusion in shaping public perceptions and un- derstanding of AI, demonstrating how these narratives influ- ence the discourse surrounding AI technologies in various societal contexts. Moreover, by proposing the AI identity framework, which captures the impact of various social con- structs such as diversity, fairness, inclusion, bias, sense of belonging, and accountability across the creators, creations, and consequences of AI, we advocate for a more inclusive and responsible AI ecosystem. This AI identity ecosystem lens highlights the need for the development of AI technolo- gies that are equitable, accessible, and beneficial for all seg- ments of society. This paper serves as a call to action, urging the AI community to ground the development of AI in the human experience. An approach that creates technology to addresses the needs of diverse populations, which, in turn, fosters greater inclusivity and engagement in AI develop- ment. References Abboud, R.; Arya, A.; and Pandi, M. 2020. Redefining The Digital Divide In The Age Of AI. In INTED2020 Proceed- ings, 4483‚Äì4492. IATED. Adejoro, C. O.; Arn, L.; Schwartz, L.; and Yeh, T. 2023. Empower Children in Nigeria to Design the Future of Ar- tificial Intelligence (AI) through Writing. In Proceedings of the 22nd Annual ACM Interaction Design and Children Conference , 677‚Äì680. Ahmed, N.; and Wahed, M. 2020. The De-democratization of AI: Deep learning and the compute divide in artificial in- telligence research. arXiv preprint arXiv:2010.15581 . AI, H. 2019. High-level expert group on artificial intelli- gence. Alahmad, R.; and Robert, L. 2020. Artificial intelligence (AI) and IT identity: antecedents identifying with AI appli- cations. arXiv preprint arXiv:2005.12196 . Albert, S. 1998. Metadefinition of Identity . Thousand Oaks, CA: SAGE Publications. Amershi, B. 2020. Culture, the process of knowledge, per- ception of the world and emergence of AI. AI & SOCIETY , 35(2): 417‚Äì430. Amershi, S.; Weld, D.; V orvoreanu, M.; Fourney, A.; Nushi, B.; Collisson, P.; Suh, J.; Iqbal, S.; Bennett, P. N.; Inkpen, K.; et al. 2019. Guidelines for human-AI interaction. In Proceedings of the 2019 chi conference on human factors in computing systems , 1‚Äì13. Aragon, C.; Guha, S.; Kogan, M.; Muller, M.; and Neff, G. 2022. Human-centered data science: an introduction . MIT Press. Aragon, C.; Hutto, C.; Echenique, A.; Fiore-Gartland, B.; Huang, Y .; Kim, J.; Neff, G.; Xing, W.; and Bayer, J. 2016. Developing a research agenda for human-centered data sci- ence. In Proceedings of the 19th ACM conference on com- puter supported cooperative work and social computing companion , 529‚Äì535. Armbrust, M.; Fox, A.; Griffith, R.; Joseph, A. D.; Katz, R.; Konwinski, A.; Lee, G.; Patterson, D.; Rabkin, A.; Stoica, I.; et al. 2010. A view of cloud computing. Communications of the ACM , 53(4): 50‚Äì58. Arora, A.; Barrett, M.; Lee, E.; Oborn, E.; and Prince, K. 2023. Risk and the future of AI: Algorithmic bias, data colo- nialism, and marginalization. Arrieta, A. B.; D ¬¥ƒ±az-Rodr ¬¥ƒ±guez, N.; Del Ser, J.; Bennetot, A.; Tabik, S.; Barbado, A.; Garc ¬¥ƒ±a, S.; Gil-L ¬¥opez, S.; Molina, D.; Benjamins, R.; et al. 2020. Explainable Artificial In- telligence (XAI): Concepts, taxonomies, opportunities and challenges toward responsible AI. Information fusion , 58: 82‚Äì115. Ashktorab, Z.; Liao, Q. V .; Dugan, C.; Johnson, J.; Pan, Q.; Zhang, W.; Kumaravel, S.; and Campbell, M. 2020. Human- ai collaboration in a cooperative game setting: Measuring social perception and outcomes. Proceedings of the ACM on Human-Computer Interaction , 4(CSCW2): 1‚Äì20. Bareis, J.; and Katzenbach, C. 2022. Talking AI into being: The narratives and imaginaries of national AI strategies and their performative politics. Science, Technology, & Human Values , 47(5): 855‚Äì881. Basole, R. C.; and Accenture, A. 2021. Visualizing the Evo- lution of the AI Ecosystem. In HICSS , 1‚Äì10. Batra, G.; Jacobson, Z.; Madhav, S.; Queirolo, A.; and San- thanam, N. 2019. Artificial-intelligence hardware: New op- portunities for semiconductor companies. McKinsey and Company , 2. Benjamin, R. 2019. Race After Technology: Abolition- ist Tools for the New Jim Code . Polity Press. ISBN 9781509526437. Bennett, C. L.; Rosner, D. K.; and Taylor, A. S. 2020. The care work of access. In Proceedings of the 2020 CHI Con- ference on Human Factors in Computing Systems , 1‚Äì15.Bessen, J. E.; Impink, S. M.; Reichensperger, L.; and Sea- mans, R. 2023. The business of AI startups. Boston Univ. School of Law, Law and Economics Research Paper , (18- 28). Bingley, W. J.; Haslam, S. A.; Steffens, N. K.; Gillespie, N.; Worthy, P.; Curtis, C.; Lockey, S.; Bialkowski, A.; Ko, R. K.; and Wiles, J. 2023. Enlarging the model of the human at the heart of human-centered AI: A social self-determination model of AI system impact. New Ideas in Psychology , 70: 101025. Birhane, A.; Ruane, E.; Laurent, T.; S. Brown, M.; Flow- ers, J.; Ventresque, A.; and L. Dancy, C. 2022. The forgot- ten margins of AI ethics. In Proceedings of the 2022 ACM Conference on Fairness, Accountability, and Transparency , 948‚Äì958. Blut, M.; Wang, C.; W ¬®underlich, N. V .; and Brock, C. 2021. Understanding anthropomorphism in service provi- sion: a meta-analysis of physical robots, chatbots, and other AI. Journal of the Academy of Marketing Science , 49(4): 632‚Äì658. Bommasani, R.; Hudson, D. A.; Adeli, E.; Altman, R.; Arora, S.; von Arx, S.; Bernstein, M. S.; Bohg, J.; Bosse- lut, A.; Brunskill, E.; Brynjolfsson, E.; Buch, S.; Card, D.; Castellon, R.; Chatterji, N.; Chen, A.; Creel, K.; Davis, J. Q.; Demszky, D.; Donahue, C.; Doumbouya, M.; Durmus, E.; Ermon, S.; Etchemendy, J.; Ethayarajh, K.; Fei-Fei, L.; Finn, C.; Gale, T.; Gillespie, L.; Goel, K.; Goodman, N.; Gross- man, S.; Guha, N.; Hashimoto, T.; Henderson, P.; Hewitt, J.; Ho, D. E.; Hong, J.; Hsu, K.; Huang, J.; Icard, T.; Jain, S.; Jurafsky, D.; Kalluri, P.; Karamcheti, S.; Keeling, G.; Khani, F.; Khattab, O.; Koh, P. W.; Krass, M.; Krishna, R.; Kuditipudi, R.; Kumar, A.; Ladhak, F.; Lee, M.; Lee, T.; Leskovec, J.; Levent, I.; Li, X. L.; Li, X.; Ma, T.; Malik, A.; Manning, C. D.; Mirchandani, S.; Mitchell, E.; Munyikwa, Z.; Nair, S.; Narayan, A.; Narayanan, D.; Newman, B.; Nie, A.; Niebles, J. C.; Nilforoshan, H.; Nyarko, J.; Ogut, G.; Orr, L.; Papadimitriou, I.; Park, J. S.; Piech, C.; Portelance, E.; Potts, C.; Raghunathan, A.; Reich, R.; Ren, H.; Rong, F.; Roohani, Y .; Ruiz, C.; Ryan, J.; R ¬¥e, C.; Sadigh, D.; Sagawa, S.; Santhanam, K.; Shih, A.; Srinivasan, K.; Tamkin, A.; Taori, R.; Thomas, A. W.; Tram `er, F.; Wang, R. E.; Wang, W.; Wu, B.; Wu, J.; Wu, Y .; Xie, S. M.; Yasunaga, M.; You, J.; Zaharia, M.; Zhang, M.; Zhang, T.; Zhang, X.; Zhang, Y .; Zheng, L.; Zhou, K.; and Liang, P. 2022. On the Opportuni- ties and Risks of Foundation Models. arXiv:2108.07258. Bostrom, N. 2018. Strategic implications of openness in AI development. In Artificial Intelligence Safety and Security , 145‚Äì164. Chapman and Hall/CRC. Brown, T.; Mann, B.; Ryder, N.; Subbiah, M.; Kaplan, J. D.; Dhariwal, P.; Neelakantan, A.; Shyam, P.; Sastry, G.; Askell, A.; et al. 2020. Language models are few-shot learners. Ad- vances in neural information processing systems , 33: 1877‚Äì 1901. Buolamwini, J.; and Gebru, T. 2018. Gender shades: Inter- sectional accuracy disparities in commercial gender classifi- cation. In Conference on fairness, accountability and trans- parency , 77‚Äì91. PMLR. Caldwell, S.; Sweetser, P.; O‚ÄôDonnell, N.; Knight, M. J.; Aitchison, M.; Gedeon, T.; Johnson, D.; Brereton, M.; Gal- lagher, M.; and Conroy, D. 2022. An agile new research framework for hybrid human-AI teaming: Trust, trans- parency, and transferability. ACM Transactions on Interac- tive Intelligent Systems (TiiS) , 12(3): 1‚Äì36. Calo, R. 2017. Artificial intelligence policy: a primer and roadmap. UCDL Rev. , 51: 399. Cao, H.; Tan, C.; Gao, Z.; Xu, Y .; Chen, G.; Heng, P.-A.; and Li, S. Z. 2024. A Survey on Generative Diffusion Models. IEEE Transactions on Knowledge and Data Engineering , 1‚Äì 20. Cao, L.; Chen, C.; Dong, X.; Wang, M.; and Qin, X. 2023. The dark side of AI identity: Investigating when and why AI identity entitles unethical behavior. Computers in Human Behavior , 143: 107669. Capel, T.; and Brereton, M. 2023. What is Human-Centered about Human-Centered AI? A Map of the Research Land- scape. In Proceedings of the 2023 CHI Conference on Hu- man Factors in Computing Systems , 1‚Äì23. Carter, L.; Liu, D.; and Cantrell, C. 2020. Exploring the intersection of the digital divide and artificial intelligence: A hermeneutic literature review. AIS Transactions on Human- Computer Interaction , 12(4): 253‚Äì275. Cave, S.; and Dihal, K. 2020. The whiteness of AI. Philos- ophy & Technology , 33(4): 685‚Äì703. Chetty, R.; Hendren, N.; Kline, P.; and Saez, E. 2014. Where is the land of opportunity? The geography of intergenera- tional mobility in the United States. The Quarterly Journal of Economics , 129(4): 1553‚Äì1623. Christian, B. 2020. The alignment problem: Machine learn- ing and human values . WW Norton & Company. Chubb, J.; Reed, D.; and Cowling, P. 2022. Expert views about missing AI narratives: is there an AI story crisis? AI & society , 1‚Äì20. Chui, M.; Hazan, E.; Roberts, R.; Singla, A.; and Smaje, K. 2023. The economic potential of generative AI. Coeckelbergh, M. 2021. AI for climate: freedom, justice, and other ethical and political challenges. AI and Ethics , 1(1): 67‚Äì72. Coeckelbergh, M. 2022. The political philosophy of AI: an introduction . John Wiley & Sons. Cole, D. 1991. Artificial intelligence and personal identity. Synthese , 88: 399‚Äì417. Collins, P. H.; and Bilge, S. 2020. Intersectionality . John Wiley & Sons. Coulter, M. 2023. AI experts disown Musk-backed cam- paign citing their research. Reuters . Cowls, J.; King, T.; Taddeo, M.; and Floridi, L. 2019. De- signing AI for social good: Seven essential factors. Available at SSRN 3388669 . Crawford, K. 2021. The atlas of AI: Power, politics, and the planetary costs of artificial intelligence . Yale University Press.Crenshaw, K. 2013. Demarginalizing the intersection of race and sex: A black feminist critique of antidiscrimination doc- trine, feminist theory and antiracist politics. In Feminist le- gal theories , 23‚Äì51. Routledge. de Laat, P. B. 2021. Companies committed to responsible AI: From principles towards implementation and regulation? Philosophy & technology , 34: 1135‚Äì1193. De Spiegeleire, S.; Maas, M.; and Sweijs, T. 2017. Artifi- cial intelligence and the future of defense: strategic impli- cations for small-and medium-sized force providers . The Hague Centre for Strategic Studies. Dellermann, D.; Ebel, P.; S ¬®ollner, M.; and Leimeister, J. M. 2019. Hybrid intelligence. Business & Information Systems Engineering , 61: 637‚Äì643. Devedzic, V . 2022. Identity of AI. Discover Artificial Intel- ligence , 2(1): 23. Devlin, J.; Chang, M.-W.; Lee, K.; and Toutanova, K. 2018. Bert: Pre-training of deep bidirectional transformers for lan- guage understanding. arXiv preprint arXiv:1810.04805 . Dignum, V . 2019. Responsible artificial intelligence: how to develop and use AI in a responsible way , volume 2156. Springer. Donlon, J. J. 2024. The National Artificial Intelligence Re- search Institutes program and its significance to a prosperous future. AI Magazine . Du Sautoy, M. 2020. The Creativity Code: Art and Inno- vation in the Age of AI . Harvard University Press. ISBN 9780674244719. Dwivedi, Y . K.; Hughes, L.; Ismagilova, E.; Aarts, G.; Coombs, C.; Crick, T.; Duan, Y .; Dwivedi, R.; Edwards, J.; Eirug, A.; et al. 2021. Artificial Intelligence (AI): Multi- disciplinary perspectives on emerging challenges, opportu- nities, and agenda for research, practice and policy. Interna- tional Journal of Information Management , 57: 101994. Dyvik, E. H. 2023. Global employment figures 2023. F¬®arber, M.; and Tampakis, L. 2024. Analyzing the impact of companies on AI research based on publications. Scien- tometrics , 129(1): 31‚Äì63. Floridi, L.; Cowls, J.; Beltrametti, M.; Chatila, R.; Chazerand, P.; Dignum, V .; Luetge, C.; Madelin, R.; Pagallo, U.; Rossi, F.; et al. 2021. An ethical framework for a good AI society: Opportunities, risks, principles, and recommen- dations. Ethics, governance, and policies in artificial intel- ligence , 19‚Äì39. Franceschelli, G.; and Musolesi, M. 2022. Copyright in gen- erative deep learning. Data & Policy , 4: e17. Goodfellow, I.; Bengio, Y .; and Courville, A. 2016. Deep learning . MIT press. Griffin, T. A.; Green, B. P.; and Welie, J. V . 2023. The ethical agency of AI developers. AI and Ethics , 1‚Äì10. Grigorescu, S.; Trasnea, B.; Cocias, T.; and Macesanu, G. 2020. A survey of deep learning techniques for autonomous driving. Journal of Field Robotics , 37(3): 362‚Äì386. Gutoreva, A. 2024. Sharing Identity with AI Systems: A Comprehensive Review. Procedia Computer Science , 231: 759‚Äì764. Hagerty, A.; and Rubinov, I. 2019. Global AI ethics: a re- view of the social impacts and ethical implications of artifi- cial intelligence. arXiv preprint arXiv:1907.07892 . Hartmann, P.; and Henkel, J. 2020. The rise of corporate sci- ence in AI: Data as a strategic resource. Academy of Man- agement Discoveries , 6(3): 359‚Äì381. Hibbard, B. 2008. Open source AI. Frontiers in Artificial Intelligence and Applications , 171: 473. Hinton, G.; Bengio, Y .; Hassabis, D.; Altman, S.; Amodei, D.; Song, D.; et al. 2023. Statement on AI Risk. AI ex- perts and public figures express their concern about AI risk. Center for AI Risk (May 30, 2023), available on- line at¬° https://www. safe. ai/statement-on-ai-risk# open- letter¬ø(‚ÄúMitigating the risk of extinction from AI should be a global priority alongside other societal-scale risks such as pandemics and nuclear war. ‚Äù) . Hirsch, E. 1992. The concept of identity . Oxford University Press. Howarth, J. 2024. 57 new AI statistics (Apr 2024). Huang, M.-H.; and Rust, R. T. 2021. A strategic frame- work for artificial intelligence in marketing. Journal of the Academy of Marketing Science , 49: 30‚Äì50. Iandola, F. N.; Han, S.; Moskewicz, M. W.; Ashraf, K.; Dally, W. J.; and Keutzer, K. 2016. SqueezeNet: AlexNet- level accuracy with 50x fewer parameters and¬° 0.5 MB model size. arXiv preprint arXiv:1602.07360 . Inaba, Y .; and Togawa, K. 2021. Social capital in the cre- ation of AI perception. Behaviormetrika , 48(1): 79‚Äì102. Jacobides, M. G.; Brusoni, S.; and Candelon, F. 2021. The evolutionary dynamics of the artificial intelligence ecosys- tem. Strategy Science , 6(4): 412‚Äì435. Jenkins, R. 2014. Social identity . Routledge. Jobin, A.; Ienca, M.; and Vayena, E. 2019. The global land- scape of AI ethics guidelines. Nature machine intelligence , 1(9): 389‚Äì399. Jouppi, N. P.; Young, C.; Patil, N.; Patterson, D.; Agrawal, G.; Bajwa, R.; Bates, S.; Bhatia, S.; Boden, N.; Borchers, A.; et al. 2017. In-datacenter performance analysis of a tensor processing unit. In Proceedings of the 44th annual interna- tional symposium on computer architecture , 1‚Äì12. Karimi, P.; Rezwana, J.; Siddiqui, S.; Maher, M. L.; and De- hbozorgi, N. 2020. Creative sketching partner: an analysis of human-AI co-creativity. In Proceedings of the 25th Interna- tional Conference on Intelligent User Interfaces , 221‚Äì230. Karizat, N.; Delmonaco, D.; Eslami, M.; and Andalibi, N. 2021. Algorithmic folk theories and identity: How TikTok users co-produce Knowledge of identity and engage in al- gorithmic resistance. Proceedings of the ACM on Human- Computer Interaction , 5(CSCW2): 1‚Äì44. Kasneci, E.; Se√üler, K.; K ¬®uchemann, S.; Bannert, M.; De- mentieva, D.; Fischer, F.; Gasser, U.; Groh, G.; G ¬®unnemann, S.; H ¬®ullermeier, E.; et al. 2023. ChatGPT for good? On op- portunities and challenges of large language models for ed- ucation. Learning and individual differences , 103: 102274.Keyes, O.; Hitzig, Z.; and Blell, M. 2021. Truth from the ma- chine: artificial intelligence and the materialization of iden- tity. Interdisciplinary Science Reviews , 46(1-2): 158‚Äì175. Khanna, R. 2023. Progressive Capitalism: How to Make Tech Work for All of Us . Simon and Schuster. Khurana, D.; Koli, A.; Khatter, K.; and Singh, S. 2023. Nat- ural language processing: State of the art, current trends and challenges. Multimedia tools and applications , 82(3): 3713‚Äì 3744. Kim, T.; Molina, M. D.; Rheu, M.; Zhan, E. S.; and Peng, W. 2023. One AI Does Not Fit All: A Cluster Analysis of the Laypeople‚Äôs Perception of AI Roles. In Proceedings of the 2023 CHI Conference on Human Factors in Computing Systems , 1‚Äì20. Kivunja, C. 2018. Distinguishing between theory, theoret- ical framework, and conceptual framework: A systematic review of lessons from the field. International journal of higher education , 7(6): 44‚Äì53. Kova Àácevi¬¥c, A.; Putnik, N.; and To Àáskovi ¬¥c, O. 2020. Factors related to cyber security behavior. IEEE Access , 8: 125140‚Äì 125148. Lee, K.; and Qiufan, C. 2021. AI 2041: Ten Visions for Our Future . Crown. ISBN 9780593238295. Li, B.; Qi, P.; Liu, B.; Di, S.; Liu, J.; Pei, J.; Yi, J.; and Zhou, B. 2023. Trustworthy AI: From principles to practices. ACM Computing Surveys , 55(9): 1‚Äì46. Lima, G.; Kim, C.; Ryu, S.; Jeon, C.; and Cha, M. 2020. Collecting the public perception of AI and robot rights. Proceedings of the ACM on Human-Computer Interaction , 4(CSCW2): 1‚Äì24. Liu, F.; Makady, H.; Nah, S.; and McNealy, J. 2023. When citizens support AI policies: the moderating roles of AI effi- cacy on AI news, discussion, and literacy. Journal of Infor- mation Technology & Politics , 1‚Äì17. Loi, D.; Wolf, C. T.; Blomberg, J. L.; Arar, R.; and Brereton, M. 2019. Co-designing AI futures: Integrating AI ethics, social computing, and design. In Companion publication of the 2019 on designing interactive systems conference 2019 companion , 381‚Äì384. Long, D.; and Magerko, B. 2020. What is AI literacy? Com- petencies and design considerations. In Proceedings of the 2020 CHI conference on human factors in computing sys- tems, 1‚Äì16. Long, D.; Roberts, J.; Magerko, B.; Holstein, K.; DiPaola, D.; and Martin, F. 2023. AI Literacy: Finding Common Threads between Education, Design, Policy, and Explain- ability. In Extended Abstracts of the 2023 CHI Conference on Human Factors in Computing Systems , 1‚Äì6. Lucivero, F.; Samuel, G.; Blair, G.; Darby, S. J.; Fawcett, T.; Hazas, M.; Ten Holter, C.; Jirotka, M.; Parker, M.; Webb, H.; et al. 2020. Data-driven unsustainability? An interdisci- plinary perspective on governing the environmental impacts of a data-driven society. An Interdisciplinary Perspective on Governing the Environmental Impacts of a Data-Driven So- ciety (June 19, 2020) . Luckin, R.; and Holmes, W. 2016. Intelligence unleashed: An argument for AI in education. Luo, Y .; and Van Assche, A. 2023. The rise of techno- geopolitical uncertainty: Implications of the United States CHIPS and Science Act. Journal of international business studies , 54(8): 1423‚Äì1440. L¬®u, L.; Medo, M.; Yeung, C. H.; Zhang, Y .-C.; Zhang, Z.- K.; and Zhou, T. 2012. Recommender systems. Physics Reports , 519(1): 1‚Äì49. Recommender Systems. Madiega, T. 2021. Artificial intelligence act. European Par- liament: European Parliamentary Research Service . Maher, M. L.; and Tadimalla, S. Y . 2024. Expanding Capac- ity and Diversity in Lifelong AI Education. Proceedings of AAAI Spring Symposium Series . Maher, M. L.; Tadimalla, S. Y .; and Dhamani, D. 2023. An Exploratory Study on the Impact of AI tools on the Stu- dent Experience in Programming Courses: an Intersectional Analysis Approach. In 2023 IEEE Frontiers in Education Conference (FIE) , 1‚Äì5. IEEE. Mehrabi, N.; Morstatter, F.; Saxena, N.; Lerman, K.; and Galstyan, A. 2021. A Survey on Bias and Fairness in Ma- chine Learning. ACM Comput. Surv. , 54(6). Merritt, R. 2024. Why gpus are great for ai. Minkkinen, M.; Zimmer, M. P.; and M ¬®antym ¬®aki, M. 2021. Towards ecosystems for responsible AI: expectations on so- ciotechnical systems, agendas, and networks in EU doc- uments. In Conference on e-Business, e-Services and e- Society , 220‚Äì232. Springer. Mir, U.; Kar, A. K.; and Gupta, M. P. 2022. AI-enabled digi- tal identity‚Äìinputs for stakeholders and policymakers. Jour- nal of Science and Technology Policy Management , 13(3): 514‚Äì541. Mirbabaie, M.; Br ¬®unker, F.; M ¬®ollmann, N. R.; and Stieglitz, S. 2022. The rise of artificial intelligence‚Äìunderstanding the AI identity threat at the workplace. Electronic Markets , 1‚Äì 27. Mitchell, M. 2020. Artificial intelligence a guide for think- ing humans . Pelican, an imprint of Penguin Books. Mouta, A.; Pinto-Llorente, A. M.; and Torrecilla-S ¬¥anchez, E. M. 2023. Uncovering blind spots in education ethics: Insights from a systematic literature review on artificial in- telligence in education. International Journal of Artificial Intelligence in Education , 1‚Äì40. Noble, S. U. 2018. Algorithms of oppression. In Algorithms of oppression . New York university press. Pasquale, F. 2015. The black box society: The secret algo- rithms that control money and information . Harvard Univer- sity Press. Paszke, A.; Gross, S.; Massa, F.; Lerer, A.; Bradbury, J.; Chanan, G.; Killeen, T.; Lin, Z.; Gimelshein, N.; Antiga, L.; et al. 2019. Pytorch: An imperative style, high-performance deep learning library. Advances in neural information pro- cessing systems , 32. Pause Giant, A. 2023. Experiments: an open letter. Future of Life Institute .Pollack, M. E. 2005. Intelligent technology for an aging population: The use of AI to assist elders with cognitive im- pairment. AI magazine , 26(2): 9‚Äì9. Prahl, A.; and Goh, W. W. P. 2021. ‚ÄúRogue machines‚Äù and crisis communication: When AI fails, how do companies publicly respond? Public Relations Review , 47(4): 102077. Quan, X. I.; and Sanderson, J. 2018. Understanding the ar- tificial intelligence business ecosystem. IEEE Engineering Management Review , 46(4): 22‚Äì25. Raghavan, M. 2021. The Societal Impacts of Algorithmic Decision-Making . Ph.D. thesis, Cornell University. Ragot, M.; Martin, N.; and Cojean, S. 2020. Ai-generated vs. human artworks. a perception bias towards artificial in- telligence? In Extended abstracts of the 2020 CHI confer- ence on human factors in computing systems , 1‚Äì10. Rakova, B.; and Dobbe, R. 2023. Algorithms as social-ecological-technological systems: an environmen- tal justice lens on algorithmic audits. arXiv preprint arXiv:2305.05733 . Rezwana, J.; and Maher, M. L. 2023. Designing creative AI partners with COFI: A framework for modeling interac- tion in human-AI co-creative systems. ACM Transactions on Computer-Human Interaction , 30(5): 1‚Äì28. Salas-Pilco, S. Z.; Xiao, K.; and Oshima, J. 2022. Artificial Intelligence and New Technologies in Inclusive Education for Minority Students: A Systematic Review. Sustainability , 14(20). Schellmann, H. 2024. The Algorithm: How AI Can Hijack Your Career and Steal Your Future . Hurst Publishers. ISBN 9781805261339. Scheuerman, M. K.; Wade, K.; Lustig, C.; and Brubaker, J. R. 2020. How we‚Äôve taught algorithms to see identity: Constructing race and gender in image databases for facial analysis. Proceedings of the ACM on Human-computer In- teraction , 4(CSCW1): 1‚Äì35. Schiff, D. 2022. Education for AI, not AI for education: The role of education and ethics in national AI policy strategies. International Journal of Artificial Intelligence in Education , 32(3): 527‚Äì563. Schiff, D.; Biddle, J.; Borenstein, J.; and Laas, K. 2020. What‚Äôs next for ai ethics, policy, and governance? a global overview. In Proceedings of the AAAI/ACM Conference on AI, Ethics, and Society , 153‚Äì158. Schlesinger, A.; O‚ÄôHara, K. P.; and Taylor, A. S. 2018. Let‚Äôs talk about race: Identity, chatbots, and AI. In Proceedings of the 2018 chi conference on human factors in computing systems , 1‚Äì14. Shams, R. A.; Zowghi, D.; and Bano, M. 2023. AI and the quest for diversity and inclusion: a systematic literature re- view. AI and Ethics , 1‚Äì28. Sherif, A. 2023. Number of ICT professionals worldwide 2019-2023. Shin, D. 2021. The effects of explainability and causabil- ity on perception, trust, and acceptance: Implications for ex- plainable AI. International Journal of Human-Computer Studies , 146: 102551. Shinners, L.; Grace, S.; Smith, S.; Stephens, A.; and Ag- gar, C. 2022. Exploring healthcare professionals‚Äô percep- tions of artificial intelligence: Piloting the Shinners Ar- tificial Intelligence Perception tool. Digital Health , 8: 20552076221078110. Shneiderman, B. 2021. Human-centered AI. Issues in Sci- ence and Technology , 37(2): 56‚Äì61. Simon, F. M.; and Isaza-Ibarra, L. F. 2023. AI in the news: reshaping the information ecosystem? Song, Y .; Weisberg, L. R.; Zhang, S.; Tian, X.; Boyer, K. E.; and Israel, M. 2024. A Framework for Inclusive AI Learning Design for Diverse Learners. Computers and Education: Artificial Intelligence , 100212. Stathoulopoulos, K.; and Mateos-Garcia, J. C. 2019. Gender diversity in AI research. Available at SSRN 3428240 . Stets, J. E.; and Burke, P. J. 2000. Identity theory and social identity theory. Social psychology quarterly , 224‚Äì237. Thrun, S. 2000. Probabilistic algorithms in robotics. Ai Magazine , 21(4): 93‚Äì93. Tian, Y .-h.; Chen, X.-l.; Xiong, H.-k.; Li, H.-l.; Dai, L.-r.; Chen, J.; Xing, J.-l.; Chen, J.; Wu, X.-h.; Hu, W.-m.; et al. 2017. Towards human-like and transhuman perception in AI 2.0: a review. Frontiers of Information Technology & Electronic Engineering , 18: 58‚Äì67. Topol, E. 2019. Deep medicine: how artificial intelligence can make healthcare human again . Hachette UK. Touretzky, D.; Gardner-McCune, C.; Martin, F.; and See- horn, D. 2019. Envisioning AI for K-12: What should every child know about AI? In Proceedings of the AAAI confer- ence on artificial intelligence , volume 33, 9795‚Äì9799. Touretzky, D.; Gardner-McCune, C.; and Seehorn, D. 2023. Machine learning and the five big ideas in AI. International Journal of Artificial Intelligence in Education , 33(2): 233‚Äì 266. Trewin, S.; Basson, S.; Muller, M.; Branham, S.; Treviranus, J.; Gruen, D.; Hebert, D.; Lyckowski, N.; and Manser, E. 2019. Considerations for AI fairness for people with dis- abilities. AI Matters , 5(3): 40‚Äì63. Vacarelu, M. 2022. Politicians and Artificial Intelligence Refusal: Brief Considerations. In European Conference on the Impact of Artificial Intelligence and Robotics , volume 4, 100‚Äì107. Verdoliva, L. 2020. Media Forensics and DeepFakes: An Overview. IEEE Journal of Selected Topics in Signal Pro- cessing , 14(5): 910‚Äì932. V oulodimos, A.; Doulamis, N.; Doulamis, A.; Protopa- padakis, E.; et al. 2018. Deep learning for computer vi- sion: A brief review. Computational intelligence and neu- roscience , 2018. Wang, P. 2019. On defining artificial intelligence. Journal of Artificial General Intelligence , 10(2): 1‚Äì37. Whittaker, M.; Crawford, K.; Dobbe, R.; Fried, G.; Kaziu- nas, E.; Mathur, V .; West, S. M.; Richardson, R.; Schultz, J.; Schwartz, O.; et al. 2018. AI now report 2018 . AI Now Institute at New York University New York.Wood, A. F.; and Smith, M. J. 2004. Online communication: Linking technology, identity, & culture . Routledge. Yoo, S. 2020. A Study on AI Business Ecosystem. The Journal of the Institute of Internet, Broadcasting and Com- munication , 20(2): 21‚Äì27. Zawacki-Richter, O.; Mar ¬¥ƒ±n, V . I.; Bond, M.; and Gou- verneur, F. 2019. Systematic review of research on artificial intelligence applications in higher education‚Äìwhere are the educators? International Journal of Educational Technology in Higher Education , 16(1): 1‚Äì27","cs.CY, cs.AI, cs.HC",Arxiv
3,Measuring AI Systems Beyond Accuracy,"Violet Turri, Rachel Dzombak, Eric Heim, Nathan VanHoudnos, Jay Palat, Anusha Sinha",2022-04-07 17:09:07+00:00,http://arxiv.org/pdf/2204.04211v1,"Current test and evaluation (T&E) methods for assessing machine learning (ML) system performance often rely on incomplete metrics. Testing is additionally often siloed from the other phases of the ML system lifecycle. Research investigating cross-domain approaches to ML T&E is needed to drive the state of the art forward and to build an Artificial Intelligence (AI) engineering discipline. This paper advocates for a robust, integrated approach to testing by outlining six key questions for guiding a holistic T&E strategy.","[Distribution Statement A] Approved for public release and unlimited distribution.  Measuring AI Systems Beyond Accuracy Violet Turri1, Rachel Dzombak2, Eric Heim3, Nathan VanHoudnos4, Jay Palat5, Anusha Sinha6 Carnegie Mellon University Software Engineering Institute vmturri@sei.cmu.edu1, rdzombak@sei.cmu.edu2, etheim@sei.cmu.edu3, nmvanhoudnos@sei.cmu.edu4, vpalat@sei.cmu.edu5, asinha@sei.cmu.edu6   Abstract Current test and evaluation (T&E) methods for assessing ma-chine learning (ML) system performance often rely on in-complete metrics. Testing is additionally often siloed from the other phases of the ML system lifecycle. Research inves-tigating cross-domain approaches to ML T&E is needed to drive the state of the art forward and to build an Artificial Intelligence (AI) engineering discipline. This paper advo-cates for a robust, integrated approach to testing by outlining six key questions for guiding a holistic T&E strategy.  Introduction  Most machine learning projects focus on ‚Äúaccuracy‚Äù for model evaluation. While accuracy is useful for knowing how well a model performs on a test dataset at the time of model development, there are other significant implications in assessing the utility and usability of a machine learning model. Key considerations include robustness, resilience, calibration, confidence, alignment with evolving user re-quirements, and fit for mission and stakeholder needs as part of an integrated system, among others. In this paper, we ex-plore what it means to measure beyond accuracy and define critical considerations for the test and evaluation of machine learning and, more broadly, artificial intelligence systems. After defining six key considerations related to robust T&E, the AI engineering community will be better equipped to de-velop and implement comprehensive and applied methods for the evaluation of models as well as possible metrics for more realistic and real-world model evaluation. Current AI T&E Practices Modern AI systems, many of which are built using machine learning, are a departure from static software systems that yield deterministic results. In contrast to analytical systems that follow explicit ‚Äúinstructions‚Äù given by a programmer and can be reduced and decomposed, AI systems are empir-ical, opaque, and unpredictable ‚Äî they behave based on  Copyright 2022 Carnegie Mellon University. what they ‚Äúlearn‚Äù from data or experience (Russell & Norvig, 2021). Because AI systems often model real-world relationships, they must be adaptable to changing inputs and shifting correlations.   The characteristic differences between traditional soft-ware and AI lead to a series of open questions around the design and implementation of AI. For example, AI systems can evolve and change behavior over time. How can we en-sure that AI systems are still doing what they are supposed to do? How can we certify that they are safe and reliable? Many current AI and ML methods are data intensive; con-tinuous updates to data, while necessary, can impact archi-tectural concerns such as prediction accuracy and latency (Ozkaya, 2020). Technical debt, driven by data dependen-cies, accumulates rapidly, silently, and at the system level (Sculley et al., 2015). What practical mechanisms exist to evaluate the state of a system when using large and evolving data sets? Further, exhaustive testing is currently not possi-ble for systems that learn and adapt. How do we change ap-proaches to test and evaluation to be more risk-, resilience-, and process- focused rather than exhaustive?   A common practice for engineering AI systems is to se-lect, optimize, and measure one or more metrics throughout the development pipeline. Common metrics, where applica-ble, include accuracy, precision, recall, ROC curves, confu-sion matrices, mean squared error (MSE), and/or mean ab-solute error (MAE) (Handelman et al., 2019). While the op-timization of metrics in software development is not unique to AI, AI is exceptionally good at performing optimizations. Although properly defined and comprehensive metrics can yield impressive quantitative results, excessive optimization of inadequate metrics can result in manipulation, gaming, and/or a focus on short-term quantities, in addition to other potential negative consequences (Thomas & Uminsky, 2020). Utilizing incomplete and/or misleading metrics to test and evaluate AI systems is therefore fraught with risk. Additionally, the phases of this pipeline are often viewed as  [Distribution Statement A] Approved for public release and unlimited distribution. distinct stages and as a result teams across the phases of de-velopment may be siloed from one another. This can lead to barriers in interpreting and responding to information de-rived from T&E metrics.  Today, questions around the design, development, imple-mentation, and sustained management of AI are examined across a variety of fields including software engineering, hu-man-centered design, computer science, and systems engi-neering. We believe that to build AI as well as it can be done, a whole-systems approach is needed. As stated by Ackoff and Wardman (2016), ‚Äúwhen you take a system apart, it loses all of its essential properties.‚Äù In this paper, we outline holistic considerations for testing and evaluation and aim to extend beyond common practice by capturing cross-disci-plinary perspectives on AI engineering, acknowledging the volatility of relying heavily on metrics, and addressing the unique challenges of working with numerous evolving, in-terconnected system components.  Characteristics of AI Systems AI Engineering is a field of research and practice that com-bines cross-disciplinary perspectives to create AI systems in accordance with human needs for stakeholder outcomes (CMU SEI, 2022). When thinking about measurement of systems, it‚Äôs important to start with defining the attributes of a system that are desired. Here, we draw on the three pillars of AI Engineering to guide our thinking on test and evalua-tion strategy:  1. Human-Centered AI: Implementing AI in context re-quires a deep understanding of the individuals who intend to use and interact with the system. From a hu-man-centered perspective, systems should be evalu-ated to assess the alignment with humans, their be-haviors, and values, as well as the utility of systems to achieve stakeholder-driven outcomes.  2. Scalable AI: Many current AI and ML methods are compute-intensive, expensive, and time-consuming to develop, necessitating consideration of how to scale AI and ML techniques to real-world size and complexity. In the context of scalability, evaluation lenses could include how AI infrastructure, data, and models may be reused across problem domains and deployments and increase performance to support op-erational needs. Another evaluation lens could in-clude how effectively a system scales up to support more needs at the enterprise level or scales down to enable capabilities in edge contexts.  3. Robust and Secure AI: AI and ML introduce new sys-tem failure modes, vulnerabilities, and attack vectors and change over time. Assurance is needed that sys-tems will work as expected when faced with uncer-tainty or threat. The Robust and Secure AI pillar pro-vides the context for how we develop and test AI sys-tems to ensure resilience across contexts and when encountering new phenomena over time.   With these pillars in mind, we examine core considera-tions that AI engineers and AI engineering teams must take into account when developing test and evaluation strategies for AI systems. Research driven by these considerations is called for to push the state of the art forward and build a dis-cipline around AI engineering. Due to the prevalence of ML systems in use today, we will provide many of the consider-ations in the context of ML. Key Questions when Assessing AI Systems To steer discussion, research, and implementation of T&E strategies for AI systems, we propose the following six key considerations. These questions capture cross-disciplinary AI engineering concerns related to deriving actionable les-sons from testing, identifying sources of risk and uncer-tainty, and evaluating system suitability for different use-cases and end-users. 1. What are you intending to test (and learn)? While many of the questions listed below are not unique to AI systems in the abstract, each becomes unique within the context of AI systems. Unlike in traditional software, the an-swers to each of these questions are typically less definitive due to the non-deterministic nature of AI. An AI system may perform as expected given one input but behave in an unin-tended manner on a similar input; testing cannot be exhaus-tive due to the singular nature of any one data point. As a result, there is a limit to the possible coverage of testing in the context of AI systems.   A helpful starting point for AI engineers is to consider what possible sources of uncertainty exist in a system of in-terest. In image classification, for instance, the system makes class predictions with varying degrees of confidence, but typically only the prediction with the highest confidence is returned to the end-user. Additional information about un-certainty is helpful during the testing process. Some classes may be hard to distinguish between, even for humans, in which case the model‚Äôs limitations mirror human perfor-mance. Other mix-ups, for instances between classes that look completely dissimilar, could be indicative of more crit-ical model deficiencies.   Brainstorming potential sources of risk can be another in-formative practice. What are the potential negative and pos-itive outcomes that the system can produce? How can you evaluate for these outcomes, both indirectly and directly? T&E allows for a thorough exploration of the model‚Äôs be-havior before it is deployed and is an opportunity to measure  [Distribution Statement A] Approved for public release and unlimited distribution. and mitigate sources of risk. This practice is important be-cause it upholds the principles of ethical AI, but it also may be a requirement if a governing entity requires regulatory or legal tests.   Overall, as AI engineers start their exploration into as-sessment of systems, there are many directions in which they could go and realistically, they have both limited time and resources. Setting clear intentions and learning goals around T&E can help teams prioritize what they are invest-ing resources into at different times and ensure they are ex-tracting actionable information from the testing that is per-formed.  2. What logistical challenges might you en-counter during testing? Developing a well-documented plan for handling the logis-tical challenges of T&E for AI systems is another task that is necessary to perform early on. Evaluations can be per-formed at a variety of levels. AI systems require traditional software T&E-style verification that code is performing properly and is free of bugs; this form of testing can be per-formed by standard software developers. However, aspects of AI systems that require expertise, such as interpreting the meaning of increased uncertainty in deployment, recogniz-ing the emergence of new classes, or determining efficacy in human-machine teaming contexts may require special-ized team members to become involved in the evaluation. Outlining all relevant evaluation concerns and assembling a diverse team to tackle T&E tasks spanning different risk lev-els and content areas is a crucial step in producing a robust T&E strategy.   Due to the cyclical, interconnected nature of ML lifecycle phases, issues discovered through T&E can have wide-reaching effects for ML systems and plans to mitigate these impacts will likely require communication across phases. The development of ML systems has been mapped to vari-ous lifecycle frameworks. Andrew Ng, for instance, edu-cates practitioners to follow a four-part ML lifecycle that in-cludes: (1) Scoping the project, (2) Collecting data (3) Training a model, and (4) Deploying in production (DeepLearningAI, 2021). Garcia et al. (2018) contends that the ML lifecycle consists of context, defined as ‚Äúall the in-formation surrounding the use of data in an organization,‚Äù plus three phases: (1) Pipeline Development, (2) Training, and (3) Inference. While differences in proposed frame-works exist, what is true across frameworks is that the ML lifecycle consists of numerous phases intertwined via feed-back loops.   Although testing is often represented as either a distinct phase of the AI system lifecycle or as a component of the ‚Äútraining phase‚Äù, we advocate that T&E is most effective when integrated throughout all phases. When implementing AI systems, teams of humans must engage in continuous oversight and frequently reflect on the questions: What are we doing? Why are we doing it, and for whom? (Barmer et al., 2021). Accounting for T&E considerations across every stage of AI system development and deployment supports the rapid, iterative development of robust, ethical mission capabilities (JAIC, 2020). Selecting metrics that accurately assess the system‚Äôs ability to fulfill mission goals and using these metrics throughout training, for instance, will guide the system towards meeting stakeholder needs.   A common misconception is that testing is overly time-consuming, while the process of fixing errors, especially late in system development, is what actually absorbs time (Ko-havi et al., 2009). Developing a culture of frequent testing and a practice of addressing errors as they arise is an effec-tive method for catching issues early on and preventing a build-up of problems. As stated by Thomke (2020), ‚ÄúCul-ture‚Äînot tools and technology‚Äî prevents companies from conducting the hundreds, even thousands, of tests they should be doing annually and then applying the results.‚Äù   In settings where personnel across the pipeline work to-gether closely, building T&E into all stages of development is realizable. However, when different stakeholders are si-loed across the pipeline, such as designers, data scientists, software engineers, machine learning researchers, and oper-ations teams, challenges communicating between roles can be a source of ML ‚Äúmismatch‚Äù (Lewis et al., 2021). Facili-tating effective communication across roles on AI teams and throughout organizations to ensure that errors and problems found during T&E are addressed properly is a challenge, es-pecially when elements of the ML pipeline may be handled by different organizations or teams. Methods for addressing errors in T&E may include system rollback (especially in high-risk, mission-critical contexts) or revising the training dataset to account for new information about model perfor-mance (Dunnmon et al., 2021).   Constraints on access to information across development and deployment pipeline stages should also be accounted for. For example, if provenance or other details about the training data are not accessible by the T&E team this can make it difficult to detect bias and uncertainty or to know what vulnerabilities or edge cases to evaluate. Determining and documenting what aspects of the model and pipeline are within the scope of testing, and in turn what issues and top-ics can realistically be addressed, is an important step in fleshing out a T&E strategy. Limitations on T&E person-nels access to data or training/deployment specifics can be significant obstacles that may require modifications to team structures and/or documentation procedures. 3. What are your biggest sources of risk? In the context of AI-enabled systems, it‚Äôs important to frame risk, or the possibility of suffering loss, in the context of the role that AI is performing within the system (Dzombak et al., 2021; Dorofee et al., 1996). For instance, if an AI com-ponent stops working or begins to operate poorly, how will this impact the system‚Äôs overall ability to perform its task?  [Distribution Statement A] Approved for public release and unlimited distribution. What does poor operation look like and how can it be meas-ured? Enumerating potential threats to the system, the like-lihood of each threat occurring, and the impact of each of these threats early on will provide the T&E team with an estimate of risk that can guide the focus of testing (Alberts & Dorofee, 2010).   Traditional methods for estimating the impact of loss (Kambic et al., 2020; Tucker, 2020) can be applied to AI systems, but estimating the likelihood of loss in the context of AI is an open challenge. Nascent methods for determining the quantitative likelihood of loss can be pulled from an emerging body of work related to AI threat modeling and vulnerabilities (Biggio & Roli, 2018; Beieler, 2019; House-holder et al., 2020a; Householder et al., 2020b; MITRE, 2020). In the absence of quantitative estimates, qualitative assessments from domain experts can be leveraged to gauge the relative importance of threats.  Since AI systems have the potential to be used for differ-ent tasks, understanding the specific use-cases for which the system will be employed can sharpen the objectives of risk-related testing. For example, consider an overhead object detection system designed to identify vehicles of interest to military personnel. Two potential use-cases for the system could include (1) reconnaissance, a mission that is limited in time and scope, or (2) surveillance, a longer-term mission with less time pressure. In the reconnaissance use-case, it‚Äôs important that the false positive rate is kept low because spu-rious hits could overwhelm the end-user as they make time-critical decisions. In the surveillance scenario, on the other hand, the rate of false negatives is a bigger concern because time constraints are weaker and unflagged incidents could be costly. Considering the specific use-cases for a system and the risks involved in these scenarios can help determine which metrics are most relevant.  4. What is the meaning behind your metrics? A challenge in interpreting and selecting metrics for T&E is determining their meaning and impact in context. Donella Meadows (1998) stated: ‚ÄúIndicators arise from values (we measure what we care about) and they create values (we care about what we measure)‚Äù. What is the overall value pro-vided by the AI system and what kinds of measurements can be used to assess progress towards providing this intended value? What impact will prioritizing certain metrics have on the system development? Often, teams implement the meas-urement systems that they have knowledge of, whether or not they provide the needed meaning. In AI systems, garner-ing meaning from metrics is complicated by factors such as system complexity, risk, and audience.  AI systems have exceptionally powerful optimization ca-pabilities, therefore the optimization of metrics that do not align with intended values can build systems with impres-sive test results but produce behaviors that are both uninten-tional and consequential. For example, Facebook used met-rics such as time spent on the platform and the number of posts that users interacted with as proxies for measuring pro-gress towards their goal of facilitating social connection. In the process of optimizing these metrics, their algorithm learned to show users posts that upset or anger them. While the engagement metrics may have improved, their progress towards the goal ultimately suffered. This example demon-strates how defining system goals and choosing metrics for T&E that truly support these values is critical.  While intended system value may be clear, goals towards achieving this value, as well as the metrics for measuring progress towards goals, can be competing or misaligned. For instance, a facial recognition system will likely have to make tradeoffs between achieving high efficiency and fair-ness across protected groups. Tradeoffs may involve other ethical issues such as privacy, transparency, and accounta-bility (Amarasinghe et al., 2021). Identifying and assessing tradeoffs between metrics is a challenge which remains on-going throughout the ML system lifecycle.  Assurance that metrics are calculated accurately is a pre-requisite to deriving meaning from measurements. Standard metrics such as accuracy or false positive rates are relatively easy to verify, especially in the presence of clear ground-truth labels. Confidence scores, on the other hand, are a more complex and often unverified metric. While confi-dence scores can be a valuable source of information about model performance during T&E, these estimates are only useful if they have been calibrated to suggest the true cor-rectness likelihood (Guo et al., 2017). Mechanisms for pro-ducing front-facing metrics, such as confidence scores, must be validated prior to deployment to ensure that end-users are given precise information when interacting with the system.  When interpreting performance metrics for non-technical audiences specifically, another set of challenges and oppor-tunities arise. Scores such as F1 or AUC ROC can be diffi-cult to interpret without a technical background in AI; how can these metrics be translated into plain English in the con-text of the problem at hand? Meaning must be derivable from system metrics not only by ML practitioners, but by other key collaborators involved in designing and reviewing the system. Efforts must also be made to avoid information overload by condensing relevant information and presenting results in a clear, simple, and balanced manner that is acces-sible for non-technical stakeholders (IDF, 2020).  Additionally, it‚Äôs important to consider what metrics re-quirements really mean and how they align with project ob-jectives. For instance, if a decision threshold was used, how can this cutoff be justified and was this decision appropriate for the goal? Fan and Lin (2007) discuss how performance metrics can be improved by changing decision thresholds. Modifying thresholds, however, can result in a selection rate that does not make sense for your problem. Perspectives from domain experts, where applicable, can help shape dis-cussions around metric expectations and parameters includ-ing threshold.  [Distribution Statement A] Approved for public release and unlimited distribution. 5. How are you dealing with the scale and level of complexity of your system? A significant challenge facing AI system developers today is how to create systems that can operate across a variety of domains and use cases. Success is hard enough to achieve when operating AI systems in closely controlled develop-ment and laboratory environments, and even more challeng-ing when considering scale and system complexity.  Achieving the development and deployment of robust and secure AI systems requires the creation of new T&E strate-gies that take scope into account. To thoroughly evaluate system performance, T&E teams must acknowledge that an AI system will not exist in a vacuum; consider how the sys-tem operates and what kinds of interactions will take place between the system and sub-systems or contextual systems of interest. What inputs will the system receive and what outputs are expected? What impact will faulty results or pre-dictions have on downstream components? How does the system respond to invalid inputs? This context can inform expectations about system behavior and sources of potential risk and, in turn, guide the selection of appropriate metrics and methods for addressing these requirements.  Furthermore, it‚Äôs important to consider and routinely reevaluate the setting(s) in which the AI system will be em-ployed and what use in these environments entails. What differences are there between the local test environment ver-sus global implementation contexts? In deployment, a sys-tem may require different compute resources to meet in-creased demand or operate on a delayed retraining schedule. Likewise, the system may encounter different real-world re-lationships between inputs and outputs, unexpected input data, or distinct types of end-users. To prepare for diverse use-cases, training and testing data must address a variety of real-world scenarios.  That being said, comprehensive coverage is likely unat-tainable. For complex systems, it‚Äôs impossible to generate a complete list of scenarios in which the system may fail (Doshi-Velez & Kim, 2017). Instead of working towards a ‚Äúperfect‚Äù system, T&E teams can build confidence in an AI system through rigorous testing, evaluation, verification and validation (TEV&V) incorporated throughout the system‚Äôs lifecycle. While in traditional software operational metrics are the primary concern for system monitoring, in the realm of AI engineering performance metrics are also essential (Huyen, 2022). Monitoring a system in deployment contexts and tracking new behavior such as data drift will provide teams with the information needed to retrain a system to meet emerging needs or to tune performance expectations to reflect new requirements.  6. How are you evaluating for bias and other unintended behaviors? To ensure that a system is responsible and equitable, it must be vetted during T&E for unintended and/or negative con-sequences on the humans who will be impacted by the sys-tem. Across all phases of AI system development, it‚Äôs im-portant to keep in mind who will be engaging with the sys-tem, directly or indirectly, and what they will potentially gain or lose through their interactions. If the system is de-signed to support or replace an existing process, tests that reflect existing expectations and best practices in deploy-ment should be developed alongside domain experts. What pain-points for the user within the current system, and to what degree will the new system improve upon or change how such issues manifest? Likewise, what potentially nega-tive tradeoffs exist in the new system and how will they im-pact the user?  ML models learn the relationships explicitly or implicitly embedded within their (potentially historical) training da-taset; as a result, they have the potential to pick up on unde-sirable correlations between inputs and outputs. The exist-ence of unintended relationships between features in the training dataset can cause the model to ‚Äúlearn‚Äù the wrong thing altogether. Geirhos et al. (2021) describes one such example in which an image classifier identifies cows based on the presence of grass in the image; while the model achieved high performance accuracy, the model failed on examples in which a cow was pictured in a new setting. When working with human-related inputs, such as in facial recognition systems, correlations can include racial or gen-der bias, among other demographic disparities. Uninten-tional correlations in training data can have real-world im-pacts; New Jersey‚Äôs pretrial risk assessment algorithm, for instance, was trained on data that ‚Äúreflects racial and ethnic disparities in policing, charging, and judicial decisions‚Äù and, as a result, made decisions that ‚Äúperpetuate racial inequali-ties‚Äù with regards to detainment (Simonite, 2020).  Analyzing training data directly is a powerful method for detecting and preventing biases and other unwanted correla-tions. The Gender Shades project provides an illustrative ex-ample of how accuracy on a per-demographic basis can vary widely and comparing model performance across different data slices can reveal underlying system biases (Buolam-wini & Gebru, 2018). The detection and mitigation of bias is a crucial concern for AI systems working with human sub-jects, but systems designed for other input types can also ex-hibit biases, such as producing better results for certain lan-guages or geographic inputs than others. Careful analysis of training, evaluation, and testing data in the early stages of model development is a crucial preventative measure to-wards smart testing and evaluation. Repeated analysis across stages, especially if data is collected in deployment and used to retrain the model, is another important quality check. Explainability techniques can also be used to period-ically probe the model and determine which features are the most important factors in determining system outputs. Au-diting of a system before its adoption is critical to prevent unwanted consequences.   [Distribution Statement A] Approved for public release and unlimited distribution. An important caveat to consider throughout bias mitiga-tion efforts is the risk of accidentally masking unfair behav-ior through selected metrics. The Propublic Machine Bias study (Angwin et al., 2016) provides a case study of how sparse metrics can conceal discriminatory model behavior. In the study, researchers examined a ‚Äúfair‚Äù model for pre-dicting recidivism based on criminal history that received similar accuracies across different racial groups. Upon closer examination, however, researchers discovered that Black defendants were twice as likely to be falsely identified as recidivists than white defendants. The decision to use ac-curacy alone to identify bias resulted in real-world racially discriminatory practices; this study illustrates the im-portance of conducting in-depth analysis of model behavior, including an investigation of how the model fails.   Iterating on a T&E Strategy Robust T&E hinges on the realignment of priorities in re-sponse to emerging needs. After a first attempt at evaluation, it‚Äôs important to reconsider what the main tradeoffs are within the evaluation strategy and determine if there are any important system or model attributes that are currently un-accounted for. Throughout the lifecycle of the model or sys-tem, different needs may appear as data inputs and/or ex-pected outputs change. Proper monitoring of the system (of-ten considered the final stage of the ML system pipeline) is necessary to recognize shifts such as data drift or concept drift. Information gleaned about current project needs through monitoring can be used to ensure that the T&E pro-cedure covers relevant risks and concerns.  For instance, imagine an ML speech-to-text model for making song requests as part of an oldies music streaming system. Developers focus on training and testing a model that achieves high accuracy on speech samples from users who are middle-aged and older, as this is the platform‚Äôs tar-get demographic. The system performs well for the first six months but sees an increase in teenage users in the second half of the year and a corresponding drop in average accu-racy. While the initial goal for T&E was to ensure that the system achieved high accuracy for their target age group, the top priority will now likely shift towards achieving ac-ceptable accuracy across all age groups. Dataset curation for both training and testing must grow to include samples from teenage speakers and, in anticipation for future new us-ers, developers should consider including a larger range of speech samples across different demographics (e.g., age, di-alect).  Other possible changing project needs could include in-creased or decreased scale, the emergence of adversaries, or the introduction of a new class. T&E considerations will likely fluctuate in priority depending on these needs. Keep-ing inventory of both the aspects of the system that have been thoroughly tested as well as open topics for future test-ing will be crucial to developing and maintaining a robust and up-to-date strategy. Conclusion To conclude, testing for accuracy alone is not enough to as-sess the correctness or quality of a ML model. To engineer robust and secure, scalable, and human-centered AI systems T&E needs to account for potential sources of risk and un-certainty early on and incorporate testing measures that ad-dress these concerns across all stages of development and deployment. This approach differs from typical AI T&E ap-proaches that view testing as a stage within a linear pipeline and instead opts for a holistic vision of testing that considers the connections between phases of the model lifecycle. Since comprehensive testing is impossible for AI systems, it‚Äôs important to determine the intentions behind testing and to make informed tradeoffs. Maintaining documentation of process, iterating on T&E strategies in response to emerging requirements, and developing diverse teams to handle varied testing responsibilities are practices that can improve both the depth and breadth of testing. As AI engineering best practices continue to evolve, the delta between traditional systems and AI systems will be further explored and ad-dressed. Acknowledgements The authors would like to acknowledge Carol Smith for her invaluable input framing human-centered concerns for con-sideration six. This material is based upon work funded and supported by the Department of Defense under Contract No. FA8702-15-D-0002 with Carnegie Mellon University for the opera-tion of the Software Engineering Institute, a federally funded research and development center. References Ackoff, R., & Wardman, K. (2016, August 16). Systems Thinking: What, Why, When, Where, and How? Re-trieved from https://thesystemsthinker.com/systems-thinking-what-why-when-where-and-how/.   Alberts, C., & Dorofee, A. (2010). Risk Management Framework (CMU/SEI-2010-TR-017). Retrieved Decem-ber 09, 2021, from the Software Engineering Institute, Carnegie Mellon University website: http://re-sources.sei.cmu.edu/library/asset-view.cfm?As-setID=9525.  Amarasinghe, K., Casey, P., Driscoll, A., Ghani, R., Jones, C., & Rodolfa, K. (2021). Data Science Project Scoping Guide. Data Science and Public Policy Lab at Carnegie  [Distribution Statement A] Approved for public release and unlimited distribution. Mellon University. Retrieved from http://www.datascien-cepublicpolicy.org/our-work/tools-guides/data-science-project-scoping-guide/.  Angwin, J., Larson, J., Mattu, S., & Kirchner, L. (2016, May 23). Machine Bias. Retrieved from https://www.propub-lica.org/article/machine-bias-risk-assessments-in-crimi-nal-sentencing.   Barmer, H., Dzombak, R., Gaston, M., Palat, V., Redner, F., Smith, C., and Smith, T. (2021). Human-Centered AI. SEI White Paper.  Beieler, J. ‚ÄúAI Assurance and AI Security: Definitions and Future Directions,‚Äù presented at the Adversarial Machine Learning Technical Exchange, Rockville, MD, Sep. 24, 2019, [Online]. Available:https://cra.org/ccc/wpcon-tent/uploads/sites/2/2020/02/John-Beieler_AISec_AAAS.pdf.  Biggio B., & Roli, F. (2018) ‚ÄúWild Patterns: Ten Years Af-ter the Rise of Adversarial Machine Learning,‚Äù in Pro-ceedings of the 2018 ACM SIGSAC Conference on Com-puter and Communications Security, New York, NY, USA, Jan. 2018, pp. 2154‚Äì2156, doi: 10.1145/3243734.3264418.  Buolamwini, J., & Gebru, T. (2018, January). Gender shades: Intersectional accuracy disparities in commercial gender classification. In Conference on fairness, account-ability and transparency (pp. 77-91). PMLR.  CMU SEI. (2022). Our Work: Artificial Intelligence Engi-neering. Carnegie Mellon University Software Engineer-ing Institute. https://www.sei.cmu.edu/our-work/artifi-cial-intelligence-engineering/ Dorofee, A., Walker, J., Alberts, C., Higuera, R., Murphy, R., & Williams, R. (1996). Continuous Risk Management Guidebook. Pittsburgh, PA: Software Engineering Insti-tute, Carnegie Mellon University, 1996 http://www.sei.cmu.edu/library/abstracts/books/crm-guidebook.cfm.  DeepLearningAI. (2021, March 24). A Chat with Andrew on MLOps: From Model-centric to Data-centric AI [Video]. YouTube. https://www.youtube.com/watch?v=06-AZXmwHjo.  Doshi-Velez, F., & Kim, B. (2017). Towards a rigorous sci-ence of interpretable machine learning. arXiv preprint arXiv:1702.08608.  Dunnmon, J., Goodman, B., Kirechu, P., Smith, C., & Van Deusen, A. (2021, November). Responsible AI Guidelines in Practice. Retrieved from https://www.diu.mil/responsi-ble-ai-guidelines   Dzombak, R.,‚Äâ Krishnan, R., Smith, C., Tucker, B., & VanHoudnos, N. (2021)‚ÄâComments on the‚ÄâNIST AI Risk Management Framework RFI.‚ÄâSoftware Engineering In-stitute, Carnegie Mellon University.  Fan, R. E., & Lin, C. J. (2007). A study on threshold selec-tion for multi-label classification. Department of Com-puter Science, National Taiwan University, 1-23.  Garcia, R., Sreekanti, V., Yadwadkar, N., Crankshaw, D., Gonzalez, J. E., & Hellerstein, J. M.. Context: The missing piece in the machine learning lifecycle. In KDD CMI Workshop, volume 114, 2018.  Geirhos, R., Jacobsen, J. H., Michaelis, C., Zemel, R., Bren-del, W., Bethge, M., & Wichmann, F. A. (2020). Shortcut learning in deep neural networks. Nature Machine Intelli-gence, 2(11), 665-673.  Guo, C., Pleiss, G., Sun, Y., & Weinberger, K. Q. (2017, July). On calibration of modern neural networks. In Inter-national Conference on Machine Learning (pp. 1321-1330). PMLR.  Handelman, G. S., Kok, H. K., Chandra, R. V., Razavi, A. H., Huang, S., Brooks, M., ‚Ä¶ & Asadi, H. (2019). Peering Into the Black Box of Artificial Intelligence: Evaluation Metrics of Machine Learning Methods. American Journal of Roentgenology, 212(1), 38-43. doi:10.2214/ajr.18.20224  Householder, A., Spring, J., and VanHoudnos, N. (2020a). On managing vulnerabilities in AI/ML systems. In Pro-ceedings of New Security Paradigms Workshop (NSPW ‚Äô20). ACM, New York, NY, USA URL‚Äâhttps://doi.org/10.1145/3442167.3442177.  Householder, A., Spring, J., VanHoudnos, N., and Wright, O. (2020b). Machine learning classifiers trained via gradi-ent descent are vulnerable to arbitrary misclassification at-tack. https://kb.cert.org/vuls/id/425163/.  Huyen, C. (2022) Lecture 10. Data Distribution Shifts and Monitoring [Lecture Notes] Stanford University. https://docs.google.com/docu-ment/d/14uX2m9q7BUn_mgnM3h6if-s-r0MZrvDb-ZHNjgA1Uyo/edit   Interaction Design Foundation. (2020). ‚ÄúInformation Over-load, Why it Matters and How to Combat It‚Äù, Retrieved from https://www.interaction-design.org/literature/arti-cle/information-overload-why-it-matters-and-how-to-combat-it   JAIC. (2020, May 27). ‚ÄúJAIC Spotlight: The JAIC‚Äôs Test, Evaluation, and Assessment Team Shapes Future AI Initi-atives,‚Äù Retrieved from https://www.ai.mil/blog_05_27_20-jaic_spot-light_test_evaluation_and_assessment_team.html.  Kambic, D., Moore, A., Tobar, D., & Tucker, B. (2020).‚ÄâLoss Magnitude Estimation in Support of Business Impact Analysis‚Äâ(CMU/SEI-2020-TR-008). Retrieved De-cember 09, 2021, from the Software Engineering Institute, Carnegie Mellon University website: http://re-sources.sei.cmu.edu/library/asset-view.cfm?As-setID=650828.  Kohavi, R., Crook, T., Longbotham, R., Frasca, B., Henne, R., Ferres, J. L., & Melamed, T. (2009). Online experi-mentation at Microsoft. Data Mining Case Studies, 11(2009), 39.  Meadows, D. (1998). Indicators and Information Systems for Sustainable Development. The Earthscan Reader in Sustainable Cities, 364-393. doi:10.4324/9781315800462-21   [Distribution Statement A] Approved for public release and unlimited distribution. MITRE | ATLAS. (2021). Retrieved December 9, 2021, from https://atlas.mitre.org/  Thomas, R., & Uminsky, D. (2020). The problem with met-rics is a fundamental problem for ai. arXiv preprint arXiv:2002.08512.  Lewis, G. A., Bellomo, S., & Ozkaya, I. (2021). Character-izing and Detecting Mismatch in Machine-Learning-Ena-bled Systems. 2021 IEEE/ACM 1st Workshop on AI Engi-neering - Software Engineering for AI (WAIN). doi:10.1109/wain52551.2021.00028  Ozkaya, I. (2020). What Is Really Different in Engineering AI-Enabled Systems?, in IEEE Software, vol. 37, no. 4, pp. 3-6, July-Aug. 2020, doi: 10.1109/MS.2020.2993662.  Thomke, S. (2020). Building a culture of experimentation. Harvard Business Review, 98(2), 40-47.  Tucker, B. (2020).‚ÄâAdvancing Risk Management Capability Using the OCTAVE FORTE Process‚Äâ(). Retrieved Decem-ber 09, 2021, from the Software Engineering Institute, Carnegie Mellon University website: http://re-sources.sei.cmu.edu/library/asset-view.cfm?As-setID=644636  Russell, S., & Norvig, P. (2021). Artificial Intelligence: A Modern Approach (4th ed.). Harlow: Pearson.  Sculley, D., Holt, G., Golovin, D., Davydov, E., Phillips, T., Ebner, D., ... & Dennison, D. (2015). Hidden technical debt in machine learning systems. Advances in neural in-formation processing systems, 28, 2503-2511.  Simonite, T. (2020, February 19). Algorithms Were Sup-posed to Fix the Bail System. They Havent. Retrieved from https://www.wired.com/story/algorithms-supposed-fix-bail-system-they-havent/   Stanford Alumni. (2021, November 16). System Error: Where Big Tech Went Wrong and How We Can Reboot [Video]. YouTube. https://youtu.be/HFxMpeOXUpk  Copyright Copyright 2022 Carnegie Mellon University. This material is based upon work funded and supported by the Department of Defense under Contract No. FA8702-15-D-0002 with Carnegie Mellon University for the operation of the Software Engineering Institute, a federally funded re-search and development center. The view, opinions, and/or findings contained in this mate-rial are those of the author(s) and should not be construed as an official Government position, policy, or decision, unless designated by other documentation. References herein to any specific commercial product, pro-cess, or service by trade name, trade mark, manufacturer, or otherwise, does not necessarily constitute or imply its en-dorsement, recommendation, or favoring by Carnegie Mellon University or its Software Engineering Institute. [DISTRIBUTION STATEMENT A] This material has been approved for public release and unlimited distribution.  Please see Copyright notice for non-US Government use and distribution. This work is licensed under a CC BY-NC-SA license. Carnegie Mellon¬Æ and CERT¬Æ are registered in the U.S. Pa-tent and Trademark Office by Carnegie Mellon University.  DM22-0219     ","cs.SE, cs.AI, cs.LG",Arxiv
4,"Artificial intelligence adoption in the physical sciences, natural sciences, life sciences, social sciences and the arts and humanities: A bibliometric analysis of research publications from 1960-2021","Stefan Hajkowicz, Conrad Sanderson, Sarvnaz Karimi, Alexandra Bratanova, Claire Naughtin",2023-06-15 14:08:07+00:00,http://arxiv.org/pdf/2306.09145v1,"Analysing historical patterns of artificial intelligence (AI) adoption can inform decisions about AI capability uplift, but research to date has provided a limited view of AI adoption across various fields of research. In this study we examine worldwide adoption of AI technology within 333 fields of research during 1960-2021. We do this by using bibliometric analysis with 137 million peer-reviewed publications captured in The Lens database. We define AI using a list of 214 phrases developed by expert working groups at the Organisation for Economic Cooperation and Development (OECD). We found that 3.1 million of the 137 million peer-reviewed research publications during the entire period were AI-related, with a surge in AI adoption across practically all research fields (physical science, natural science, life science, social science and the arts and humanities) in recent years. The diffusion of AI beyond computer science was early, rapid and widespread. In 1960 14% of 333 research fields were related to AI (many in computer science), but this increased to cover over half of all research fields by 1972, over 80% by 1986 and over 98% in current times. We note AI has experienced boom-bust cycles historically: the AI ""springs"" and ""winters"". We conclude that the context of the current surge appears different, and that interdisciplinary AI application is likely to be sustained.","‚àóPublished in: Technology in Society, V ol. 74, 2023. DOI: 10.1016/j.techsoc.2023.102260Artificial intelligence adoption in the physical sciences, natural sciences, life sciences, social sciences and the arts and humanities: A bibliometric analysis of research publications from 1960-2021 Stefan Hajkowicz, Conrad Sanderson, Sarvnaz Karimi, Alexandra Bratanova, Claire Naughtin CSIRO, Australia Abstract ‚ÄîAnalysing historical patterns of artificial intelligence (AI) adoption can inform decisions about AI capability uplift, but research to date has provided a limited view of AI adoption across various fields of research. In this study we examine worldwide adoption of AI technology within 333 fields of research during 1960-2021. We do this by using bibliometric analysis with 137 million peer-reviewed publications captured in The Lens database. We define AI using a list of 214 phrases developed by expert working groups at the Organisation for Economic Cooperation and Development (OECD). We found that 3.1 million of the 137 million peer-reviewed research publications during the entire period were AI-related, with a surge in AI adoption across practically all research fields (physical science, natural science, life science, social science and the arts and humanities) in recent years. The diffusion of AI beyond computer science was early, rapid and widespread. In 1960 14% of 333 research fields were related to AI (many in computer science), but this increased to cover over half of all research fields by 1972, over 80% by 1986 and over 98% in current times. We note AI has experienced boom-bust cycles historically: the AI ‚Äúsprings‚Äù and ‚Äúwinters‚Äù. We conclude that the context of the current surge appears different, and that interdisciplinary AI application is likely to be sustained. Index Terms ‚Äîartificial intelligence, machine learning, biblio- metric analysis, technology adoption, technology diffusion I. I NTRODUCTION The field of artificial intelligence (AI) is generally con- sidered to have got its name at the Dartmouth University conference in the United States in the summer of 1956 [37]. Since that time the field has experienced some ups and downs but has, overall, grown robustly as covered by numerous historical accounts [9], [21], [25], [38], [61]. However, there has been an explosion of AI activity in recent times. The past few years have seen a surge of investment, re- search, education, training and scholarly publishing in AI and machine learning [8], [58]. Since 2017 over 700 AI policy ini- tiatives have been launched by over 60 national governments and sub-national jurisdictions [45], [56]. Collectively, these announcements were estimated to include over US$62 billion of new spending [22]. During 2020, private-sector investment in AI increased by a record 9.3% reaching US$40 billion [77]. Five out of the seven most influential papers announced by Google Scholar for 2020 were about AI [10]; afterwards, papers related to the COVID-19 pandemic dominated. During 2017‚Äì2020 the number of university courses teaching AIincreased by 103% at the undergraduate level and 42% at the postgraduate level [77]. Out of all industry and economic sectors, the science and research sector is among the earliest and most enthusiastic adopters of AI technology. AI is a general-purpose technology that can improve the cost-effectiveness, speed, safety and quality of research in practically all fields of endeavour [23]. However, AI may be more than just useful; it could be paradigm-shifting. Some researchers [5] argue that AI will ‚Äúreshape the nature of the discovery process and affect the organisation of science‚Äù. A recent workshop hosted by the Organisation for Economic Cooperation and Development (OECD) in Paris [43] examined the potential for AI to address the ongoing productivity slump in science where more research effort is being expended to achieve the same, or lesser, outcomes [6], [7]. Understanding patterns of AI adoption can help researchers anticipate the future potential of this general-purpose technol- ogy and invest wisely in capability uplift. However, while there has been much work to explore and understand AI adoption within select fields of research, there have been comparatively few studies examining the diffusion of AI technology across all fields of research. Prior work has also taken narrowly scoped definitions of AI (e.g., machine learning) and limited time-periods relating to the past few decades only. We seek to contribute by analysing the adoption and diffusion of AI technology across all fields of physical sciences, natural sciences, life sciences, social sciences as well as the arts and humanities over history from 1960 to 2021. We have a broad definition of AI encompassing 214 phrases that capture practically every facet of this vast technological capability. We continue this paper by reviewing prior research relating to the application of bibliometric analysis to analyse patterns of AI adoption within and across fields. We explain how our study contributes. We next describe our methods, including our main data source, The Lens. The Lens may be a comparatively new tool for many researchers alongside well-known databases such as Scopus, Web of Science and Google Scholar. We describe what The Lens is, how we used it and how it compares to existing databases. We then present our results relating to the development, application and diffusion of AI across the fields of research over history. This is followed by a discussion exploring the implications of AI for approaches to human knowledge discovery. We explore whether the AIarXiv:2306.09145v1  [cs.CY]  15 Jun 2023 boom-bust cycles of the past are likely to return and the issue of productivity uplift. The paper concludes by arguing that the future impact of AI on knowledge discovery will land somewhere on a spectrum from useful through to paradigm- changing for researchers in most disciplines. II. R ELATED RESEARCH AND OUR CONTRIBUTIONS There have been several studies using bibliometric analysis, and related approaches, to examine the adoption and diffusion of AI in various contexts. For example, the Stanford University 2020 AI Index used the Scopus database of peer-reviewed literature to find that 3.8% of all publications were on the topic of AI by 2019 with steep growth in recent years [77]. This is up from 0.82% in the year 2000. The Stanford University study finds the total number of peer reviewed AI publications increased almost 12 times over the 20-year period leading up to 2019. Another recent prior study [5] examined the diffusion of ‚Äúneural networks‚Äù (NN) ‚Äì a subset of AI in our schema ‚Äì across 6 research fields of technology, physical sciences, life sciences, biomedicine, health sciences, social sciences, as well as the arts and humanities. The authors tracked adoption trends during 1990‚Äì2018. They identified 260,459 documents on NN in total based on 30 search phrases. They found a ‚Äúburst of research activity‚Äù leading up to 2018 in all research fields. They concluded that AI would likely reshape the process of scientific discovery and change the way science is organised. They also argued that AI will emerge as a new general method of invention. An earlier study by Frank et al. [17] examined the extent to which major research fields were cited within AI research. Using a bibliometric analysis, it was found that mathematics and computer science were most commonly cited in modern AI research references, with fewer references to philosophy, geography and art. The authors argued that AI research needed to bring in more of the social sciences, and the arts and human- ities, to ensure that it would hold relevance to policy makers and society more broadly. A related study using bibliometric analysis with Web of Science data examined AI publishing patterns across countries, academic institutes, collaboration networks, research sponsors and scientific disciplines [34]. This study found that diverse disciplines contributed to the multi-disciplinary development of AI technology. There have been numerous studies using bibliometric anal- ysis into the impacts of AI within specialised disciplines. For example, Palos-S ¬¥anchez et al. [47] examined 73 articles in Web of Science and Scopus in the field of human resources management. Using the Bibliometrix tool they found that AI applied to human resources management was growing constantly and this was likely to continue into the future. They also found that AI applications within this field were focused on topics relating to recruitment and job-applicant selection. They noted an opportunity to expand AI research into other sub-fields within human resources management. Other subject- specific bibliometric analyses have examined AI application in engineering contexts [62], healthcare settings [19], supplychains [54], renewable energy [78] and education [65]. These studies generally concluded that AI adoption is growing within the given field of research and that it‚Äôs enabling and changing processes of knowledge discovery. Most studies also pointed towards the likelihood of continued increased AI adoption. Our analysis supports and extends upon the previous re- search summarised above. We examine the development and application of AI across practically all fields of research. Our focus is upon the differences and complementarities between research fields; not within a single field of research. We have also introduced new methods and datasets to enable complementary insights in three main ways. First, our analysis is from 1960 to 2021 which covers a longer timespan than previous studies (e.g., 1991 to 2020 by Liu et al. [34], and 1990 to 2018 by Bianchini et al. [5]), including the first two AI springs and winters and the early diffusion of AI outside of computer science fields in the 1980s. Second, we use a more comprehensive set of 214 AI search phrases derived from mul- tiple expert working groups at the OECD [3]. This compares to 30 phrases used by Bianchini et al. [5] which relate to neural networks only (a subfield of AI), and a search strategy by Liu et al. [34] involving partial phrases which, by our estimate, accounts for under half of our AI phrases. Lastly, we examine diffusion across all fields of research with a comprehensive classification system widely used by Scopus [59], called the All Science Journal Classification (ASJC). This captures a much wider range of research disciplines at a more granular scale. We are able to apply the ASJC consistently over the entire 62 year period by using The Lens database [50]. III. M ETHODS AND DATA SOURCES As the volume, variety and velocity of research publish- ing continues to grow, bibliometric analysis is becoming an increasingly popular and effective method for understanding patterns and trends in various fields of research [26], [63]. Bibliometric analysis can help by handling large amounts of data (e.g., scholarly publications or citations) and provide quantitative insights into the structural relationships that exist in fields of interest [14]. It has been used to study knowledge diffusion patterns in blockchain technology [48], biotechnol- ogy [13] and digital transformation [51]. We used the approach for analysing patterns associated with AI adoption over the past 62 years. Consistent with the bibliometric analysis pro- cedure developed by Donthu et al. [14], this section outlines the methodology for the bibliometric analysis, including the data sources, research field taxonomy, AI search strategy and reporting metrics used in the analysis. A. The Lens Database of Scholarly Publications Scholarly publication data was sourced from The Lens database (version 8.2), a global database which contains over 224 million scholarly publications and over 137 million intellectual property patents with records dating back to the 1950s [50]. With early work commencing in 1998, The Lens database resulted from a partnership between the Queensland University of Technology and Cambia (both based in Aus- tralia). Cambia is a not-for-profit organisation aiming to create tools and technologies that facilitate knowledge sharing and problem solving. The Lens has a non-commercial nature and receives funding from the Bill and Melinda Gates Foundation, the Rockefeller Foundation, and other organisations. The Lens database has previously been used for bibliometric analysis for genetic science [28] and COVID-19 research [27]. Scholarly publication data were extracted for records pub- lished up until 31 December 2021. Data in The Lens was accessed using its graphical user interface (GUI) as well as its application programming interface (API) via Python scripts. We used the API to perform customised searches. Data in The Lens is sourced from Microsoft Academic Graph [69], the CrossRef Open Researcher and Contributor IDentifier [20], PubMed [72], Impactstory [46] and Connecting Repositories (CORE) [52]. We note numerous repositories containing research publi- cation data which can be used for bibliometric analyses (e.g., Scopus, Web of Science and Google Scholar). These databases have been reviewed and compared in prior research [68]. The Lens is a relative newcomer and while it is being used by researchers for bibliometric analyses [27], [28] and is well documented [50] it has not yet featured in comparative analyses with existing mainstream databases. Nevertheless, we used The Lens due to its open-access non-commercial model, comprehensive dataset on scholarly publishing drawing upon multiple databases, and high levels of transparency on data provenance. Moreover, some databases like Google Scholar do not have a publicly accessible API. This requires manual searches which are not feasible in a bibliometric analysis with thousands or millions of publications [15]. The Lens provides both an API with comprehensive functionality and a GUI with detailed metadata. The Lens removes some of the constraints built into commercial databases which limit transparency and data access, which in turn enables improved bibliometric analysis. Fig. 1. Screening of research publications about artificial intelligence.B. The All-Science Journal Classification (ASJC) We used the Elsevier ASJC taxonomy [59] to examine the diffusion of science. The ASJC has three levels. At the most detailed level the ASJC contains 333 unique fields of research. These are grouped under 26 subject level fields which are further grouped under 4 fields of physical sciences, life sciences, health sciences, social sciences and the arts and humanities. Research publications in The Lens are assigned one or more of the 333 third-level fields. The information is derived from the International Standard Serial Number (ISSN) descriptions in the Crossref metadata. The pros and cons of the ASJC versus other subject matter classification systems have been explored by researchers [71]. Both classifications are widely used and well-accepted; we consider the ASJC suitable for our purposes, but note other classifications are possible. C. Defining Artificial Intelligence and Identifying Publications for Bibliometric Analysis There are several publications reviewing paradigms, ap- proaches and concepts about the definition of AI [32], [64], [70]. Consistent with previous analyses conducted by the OECD [3], in this study the definition of AI is operationalised via a set of search phrases. These search phrases are used to identify publications that are related to AI. We used the list of 214 AI-related phrases provided by the OECD [3]. This OECD list of AI-related phrases was developed from a bibliometric analysis of publications classified as AI in the Scopus database, which were then interrogated and refined further using text mining techniques. The candidate list of AI- related phrases was also validated by a panel of AI experts working in business and academic sectors [3]. Other authors, such as Liu et al. [34], have compiled lists of AI search phrases for literature review and bibliometric analysis purposes. We compared the Liu et al. [34] and the OECD lists, and found 113 of the 214 OECD phrases had no matching entry in Liu et al. [34], 76 had a possible matching entry, and 25 had an exact matching entry. These differences are due to the OECD list of AI-related phrases including more granular subfields of AI, such as pattern recognition and computer vision , which comprise a large share of AI research and publishing. We adopted the OECD list of phrases as we sought a more comprehensive and inclusive definition of AI. The initial dataset contained all scholarly publications on The Lens during 1960‚Äì2021. We chose 1960 as the start year as this was relatively soon after the 1956 summer workshop at Dartmouth University in New Hampshire where the field of AI was first formally given a name. This dataset was filtered by document type, including only records that corresponded to peer-reviewed books, book chapters, journal articles and conference papers/proceedings. These scholarly publication records were then refined using our search strategy to identify AI-related publications. To be selected as an AI-related schol- arly publication, a paper needed to contain one or more of the 214 AI phrases developed by the OECD in the title, abstract or keywords. A total of 224 million scholarly publication records Fig. 2. Diffusion of artificial intelligence technology into research fields. Fig. 3. Concentration of artificial intelligence publishing across research fields (Gini coefficient). were identified in The Lens database between 1960 and 2021, approximately 87 million records of which were eliminated as they did not correspond to one of the included document types. A further 137 million records titles, abstracts and keywords were screened for AI-related terms. The final pool consisted of 3,126,436 records which were included in the bibliometric analysis (Fig. 1). IV. R ESULTS In the year 1960 there were 48 research fields with AI- related publications, representing 14% of 333 ASJC fields. Most of these were in the fields of computer science, engi- neering and decision science. AI soon spread into other fields; by 1972 over half of all research fields were related to AI. In 1986 over 80% of research fields had publications related to AI, and today it is over 98%. AI started in the physical sciences and then spread into the life sciences, social sciences, arts and humanities (Fig. 2). AI diffusion can be measured and visualised with the Gini- Coefficient (GC). Often used to measure wealth inequality, GC is a statistical measure of how evenly distributed a quantity is Fig. 4. Artificial intelligence publishing intensity and volume over history. among a set of categories. The GC value ranges from 0 to 1. When GC = 0, each category has a perfectly equal quantity. When GC = 1, one category has everything with none in the others. We use GC here to determine the spread of AI-related publishing across all 333 fields of research over time. In the year 1960, GC = 0.91 indicating a high concentration of AI publishing in a few fields of research. AI did not diffuse from computer science until the 1970s. However, by 1980 the GC had fallen to 0.72 and has stayed within the range of 0.71‚Äì0.76 since that time. One of the reasons it has not fallen further is because the computer science field has increased AI publishing intensity and volume at a faster pace than any other field. As such, the computer science field has maintained a high concentration of AI-related publications in the total publication output (see Fig. 3). We define AI publishing intensity as the share (percentage) of total publications that are AI-related within a field of research. For all fields of research AI-related publishing started at a tiny fraction; 0.02% of total publication output in 1960. It remained under 1% until 1995. From then until 2017 it increased to 3%. Over the five-year period 2017‚Äì2021 it increased to 5.3%. This shows that most of the AI adoption in research has been happening in the past few years. More specifically, over 50% of the total volume of AI research has been published in the past 5 years. The year-on-year growth in AI publishing has averaged at 26% over the past 5 years, compared to 17% for all preceding history (Fig. 4). One of the drivers of recent adoption-growth is the release of accessible AI tools and platforms which have emerged over the past several years [1], [11], [49], [60], such as scikit-learn, TensorFlow, Theano, Caffe, Keras, MXNet, mlpack, PyTorch, CNTK, Auto ML, Open NN and H2O. These and other such tools made AI much more readily available to scientists and researchers from diverse disciplinary backgrounds. By examining the science domains and second-level re- search fields (Fig. 5, Table I), it can be seen that the physical sciences have, overall, been the largest adopter and developer of AI research. However, practically all fields of research show Fig. 5. Artificial intelligence publishing in research domains. substantial increases in the past 3‚Äì5 years. The five fields of research with the biggest 2020 to 2021 year-on-year increases in AI publishing intensity include: dentistry (by 1.9 times); arts and humanities (by 1.4 times); economics econometrics and finance (by 1.3 times); health professions (by 1.3 times); and social sciences (by 1.3 times). The rising intensity of AI publishing in the arts and hu- manities is a recent phenomenon; throughout much of history there has been low, or negligible, AI publishing in these fields. Rising share of AI publications in economics is partly being driven by the use of data-driven and AI based approaches for econometric modelling and forecasting. A recent review of machine learning for economic modelling is provided in [40]. The social sciences field captures a highly diverse range of disciplines and contains some fields, such as geography, which are early adopters of AI and are driving recent increases [31]. Overall, there is an unambiguous pattern in the data; AI adoption in research has accelerated in the past few years and AI is now playing an important role in most disciplines. It represents a quarter of total research output in computer science. V. D ISCUSSION The results from our bibliometric analysis across all fields of research are consistent with previous reviews of AI con- ducted within single, or more narrowly defined, fields of research. We found rates of adoption increasing sharply over recent years with the likelihood of continuing into the future. This was found in bibliometric analysis of human resources management [47], engineering [62], healthcare [19], supply chains [54], renewable energy [78] and education [65]. Similar patterns of AI adoption rates have been observed in [31], which examined the use of machine learning in geography and found AI techniques were applied by geographers in cartog- raphy, spatial statistics and remote sensing during the 1980s. More recent observations have been made in literature reviews of AI for dentistry [67], chemistry [4], food science [30], agriculture [57], marine science [36], econometrics [40] and veterinary science [16]. There have also been several stud- ies [5], [17], [34], [77] identifying rising multi-disciplinaryAI application albeit with different scope, definitions and data sources to our own. Our results add to this evidence base, further demonstrating how AI is enabling and most likely reshaping longstanding processes of human knowledge discovery. This is demon- strated within numerous well-defined and specialised research fields via bibliometric analysis and systematic literature re- views. Here we show these AI adoption trends are also observ- able at higher levels across all fields of research in the physical sciences, natural sciences, life sciences, social sciences and the arts and humanities. However, there are some critical uncertainties about how AI development and application by researchers will unfold over the decades ahead. One critical unknown relates to the extent to which the AI boom can be sustained. It is not the first time in history we have seen a boom in AI activity which is followed by a bust [23]. The second critical unknown relates to productivity gains. Evidence of widespread application is not the same as evidence of productivity enhancements. There is every possibility that AI will experience some form of Solow‚Äôs paradox [2], where information and communications technologies are associated with modest or even negative productivity growth due to adaptation challenges. We first consider the risk of a downturn in AI adoption of opposite, and potentially equal, magnitude to the current upturn. Historical analyses suggest that there have been two significant surges in AI referred to as ‚ÄúAI springs‚Äù, followed by two downturns called the ‚ÄúAI winters‚Äù. The dominant narrative is that the first AI spring was from 1956 to 1974, followed by the first AI winter from 1974 to 1981; the second AI spring was from 1981 to 1987 and the second AI winter was from 1987 to 1993 [61], [9]. Most historic analyses suggest the causes of the winters were related to hype and inflated expectations [21], [25], [38]. In the AI springs, there was much confusion and misunderstanding about what AI was and what it would be capable of doing. Investment money attracted more investment money and AI-related activity increased rapidly. However, when investors realised that AI could not deliver on the perceived promises, research funding was substantially and suddenly reduced. So, are we currently within a third AI spring likely to be followed by a third AI winter? Some researchers have suggested this could be the case, noting that many of the conditions present shortly before the two previous winters are happening today [25], [66], [75]. However, we suggest there is reason to believe the next AI winter is not imminent and may not come at all, at least not in the same form as earlier winters. First, our analyses show that the current surge in AI research far exceeds anything before in history both in the depth (quantity) and breadth (diversity) of AI publishing. Second, the current surge in AI applications is coinciding with advances in hardware, software and cost- effective cloud computing resources, including the recent rise of specialised computing hardware that can handle matrix algebra and support machine learning algorithms [79]. His- torical technical and financial barriers that previously limited AI adoption and use are less significant today. With quantum TABLE I ARTIFICIAL INTELLIGENCE PUBLISHING INTENSITY IN SECOND -LEVEL RESEARCH FIELDS OVER HISTORY . Fields of Research (second-level ASJC) 1970 1980 1990 2000 2010 2015 2020 2021 Agricultural and Biological Sciences 0.1 0.1 0.3 0.7 1.2 1.5 2.5 2.8 Arts and Humanities 0.0 0.1 0.3 0.4 0.6 0.7 2.3 3.2 Biochemistry Genetics and Molecular Biology 0.1 0.1 0.2 0.4 1.3 1.9 3.2 3.8 Business Management and Accounting 0.5 0.5 0.9 1.3 2.2 2.6 4.8 5.0 Chemical Engineering 0.1 0.0 0.2 0.7 1.0 1.1 4.1 4.8 Chemistry 0.0 0.1 0.2 0.4 0.6 1.0 2.7 3.2 Computer Science 3.7 1.9 6.9 12.4 16.0 17.1 22.7 25.7 Decision Sciences 2.3 1.4 2.1 4.5 7.1 8.5 9.8 11.3 Dentistry 0.0 0.0 0.1 0.3 0.3 0.3 0.9 1.7 Earth and Planetary Sciences 0.1 0.2 0.5 0.9 1.7 2.5 4.4 5.5 Economics Econometrics and Finance 0.0 0.1 0.3 0.8 0.9 1.1 2.7 3.5 Energy 0.1 0.2 0.3 0.8 1.5 2.1 4.5 5.2 Engineering 0.3 0.4 1.6 3.0 4.4 5.2 10.1 11.3 Environmental Science 0.1 0.2 0.3 0.7 1.3 1.7 2.9 3.3 Health Professions 0.1 0.2 0.4 1.1 1.4 2.2 3.2 4.1 Immunology and Microbiology 0.1 0.1 0.1 0.3 0.7 1.4 1.9 2.3 Materials Science 0.1 0.1 0.3 0.5 0.7 0.9 4.2 4.1 Mathematics 0.6 0.8 1.9 4.9 7.9 9.0 12.7 14.1 Medicine 0.0 0.1 0.2 0.3 0.8 1.1 2.2 2.7 Neuroscience 0.1 0.1 0.5 1.1 2.3 3.5 5.1 6.1 Nursing 0.0 0.0 0.1 0.2 0.3 0.5 1.1 1.2 Pharmacology Toxicology and Pharmaceutics 0.0 0.0 0.1 0.3 0.6 0.9 1.7 2.0 Physics and Astronomy 0.1 0.2 0.6 0.8 1.2 1.7 5.6 7.0 Psychology 0.2 0.4 0.7 1.2 1.7 2.2 2.7 2.9 Social Sciences 0.1 0.1 0.3 0.4 0.8 1.2 2.8 3.6 Veterinary 0.0 0.0 0.1 0.1 0.2 0.4 1.0 1.1 computing on the horizon, there is the opportunity to achieve step changes in what is possible in AI and with AI [41], [76]. Next, we can consider the issue of productivity. A key driver for adopting AI in scientific research is its potential to boost the productivity of researchers. Productivity declines in science have been a focus of scientific conferences [43] and some economists have noted that research outcomes have been declining despite increasing research efforts in fields such as agriculture, electrical engineering and medicine [6], [7], [39]. AI could serve as a general-purpose technology that can be applied to lift science and research productivity in all fields of study, similar to the impact of electricity in the early 1920s. Here electricity was attributed to productivity gains in the manufacturing sector and a period of rapid economic growth across the globe known as the ‚Äúroaring twenties‚Äù [24]. While there is emerging evidence that AI is creating a productivity uplift in business [12], [33], [35], [42], [44], [74] it is not yet well demonstrated in the science, research, innovation and technology sectors. More research is needed to examine this issue. We also tend to hear more about the AI successes than the failures; it is hard to publish a failed AI study. However, the failures do happen and they can be costly. An evaluationof 62 published scientific studies using machine learning for COVID-19 diagnosis and prognosis found none of the models could be used for clinical purposes as they were subject to methodological flaws or biases [55]. Other reviews of machine learning applications in COVID-19 diagnostics have similarly identified a high prevalence of bias in these AI applications which limits their clinical potential [73]. AI-based computer vision applications in radiology have also been criticised [53]. Recognising the shortcomings of AI, and problems for which it is not well-suited, will be an important part of its adoption in application domains. Despite the challenges AI capability uplift is likely to be firmly on the agenda for individual researchers and re- search organisations over the coming decade. It is one of the most significant disruptors to the scientific method, and processes of knowledge discovery, throughout history. The current era is when the adoption rates are steepest. There are two perspectives about how the future could unfold. From one perspective AI will be a useful tool which, if used properly, will help researchers do what they already do faster, safer, cheaper and better. This is already a huge boon to the research profession which is experiencing a productivity slump [6] and urgently needs a boost. From the other perspective AI is a game changer that reshapes the fundamentals of knowledge discovery. For example, Gobble [18] explores a roadmap to general artificial intelligence, and Kitano [29] has proposed the ‚ÄúNobel Turing Challenge‚Äù which ‚Äúaims to develop a highly autonomous AI system that can perform top-level science, indistinguishable from the quality of that performed by the best human scientists‚Äù. VI. C ONCLUSION We are amid a worldwide surge in AI development and application for research. This is happening in the physical sciences, natural sciences, life sciences, social sciences and the arts and humanities. While AI has surged in the past, none of the prior events come close to the magnitude and breadth of the current situation. While some component of this surge may be hype or trend-following, there is likely to be an important and long-lasting substantive component. AI is likely to continue improving the speed, cost-efficiency, safety and overall productivity of scientific research. Beyond mere efficiency gains, over the coming two decades, AI might fundamentally change the scientific method and human approaches to knowledge discovery. The overall implication of this study for researchers, and research organisations, is to invest in the many dimensions of AI capability uplift. REFERENCES [1] M. Abadi, P. Barham, J. Chen, Z. Chen, A. Davis, J. Dean, et al. TensorFlow: a system for large-scale machine learning. In USENIX Symposium on Operating Systems Design and Implementation , pages 265‚Äì283, 2016. [2] D. Acemoglu, D. Autor, D. Dorn, G. H. Hanson, and B. Price. Re- turn of the Solow paradox? IT, productivity, and employment in US manufacturing. American Economic Review , 104(5):394‚Äì399, 2014. [3] S. Baruffaldi, B. van Beuzekom, H. Dernis, D. Harhoff, N. Rao, D. Rosenfeld, and M. Squicciarini. Identifying and measuring develop- ments in artificial intelligence. OECD Science, Technology and Industry Working Papers, No. 2020/05, OECD Publishing, 2020. [4] Z. J. Baum, X. Yu, P. Y . Ayala, Y . Zhao, S. P. Watkins, and Q. Zhou. Artificial intelligence in chemistry: Current trends and future directions. Journal of Chemical Information and Modeling , 61(7):3197‚Äì3212, 2021. [5] S. Bianchini, M. M ¬®uller, and P. Pelletier. Artificial intelligence in science: An emerging general method of invention. Research Policy , 51(10):104604, 2022. [6] N. Bloom, C. I. Jones, J. Van Reenen, and M. Webb. Are ideas getting harder to find? American Economic Review , 110(4):1104‚Äì1144, 2020. [7] P. Boeing and P. H ¬®unermund. A global decline in research productivity? evidence from China and Germany. Economics Letters , 197:109646, 2020. [8] A. Bratanova, H. Pham, C. Mason, S. Hajkowicz, C. Naughtin, E. Schleiger, C. Sanderson, C. Chen, and S. Karimi. Differentiating artificial intelligence activity clusters in Australia. Technology in Society , 71:102104, 2022. [9] A. Brown. A brief history of AI. Techopedia , 2022. [10] B. Crew. Google Scholar reveals its most influential papers for 2020. Nature Index , 13 July 2020. [11] R. Curtin, M. Edel, O. Shrit, S. Agrawal, S. Basak, J. Balamuta, et al. mlpack 4: a fast, header-only C++ machine learning library. Journal of Open Source Software , 8(82):5026, 2023. [12] G. Damioli, V . Van Roy, and D. Vertesy. The impact of artificial intelligence on labor productivity. Eurasian Business Review , 11(1):1‚Äì 25, 2021.[13] I. De la Vega, J. Requena, and R. Fern ¬¥andez-G ¬¥omez. The colors of biotechnology in Venezuela: A bibliometric analysis. Technology in Society , 42:123‚Äì134, 2015. [14] N. Donthu, S. Kumar, D. Mukherjee, N. Pandey, and W. M. Lim. How to conduct a bibliometric analysis: An overview and guidelines. Journal of Business Research , 133:285‚Äì296, 2021. [15] H. Else. How I scraped data from Google Scholar. Nature News Q&A , 11 April 2018. [16] P. Ezanno, S. Picault, G. Beaun ¬¥ee, X. Bailly, F. Mu Àúnoz, R. Duboz, H. Monod, and J.-F. Gu ¬¥egan. Research perspectives on animal health in the era of artificial intelligence. Veterinary Research , 52(1), 2021. [17] M. R. Frank, D. Wang, M. Cebrian, and I. Rahwan. The evolution of citation graphs in artificial intelligence research. Nature Machine Intelligence , 1(2):79‚Äì85, 2019. [18] M. M. Gobble. The road to artificial general intelligence. Research- Technology Management , 62(3):55‚Äì59, 2019. [19] Y . Guo, Z. Hao, S. Zhao, J. Gong, and F. Yang. Artificial intelligence in health care: Bibliometric analysis. Journal of Medical Internet Research , 22(7):e18228, 2020. [20] L. L. Haak, M. Fenner, L. Paglione, E. Pentz, and H. Ratner. ORCID: a system to uniquely identify researchers. Learned Publishing , 25(4):259‚Äì 264, 2012. [21] M. Haenlein and A. Kaplan. A brief history of artificial intelligence: On the past, present, and future of artificial intelligence. California Management Review , 61(4):5‚Äì14, 2019. [22] S. Hajkowicz, S. Karimi, T. Wark, C. Chen, M. Evans, N. Rens, et al. Artificial intelligence: Solving problems, growing the economy and improving our quality of life. Report, Data61/CSIRO, Australia, 2019. [23] S. Hajkowicz, C. Naughtin, C. Sanderson, E. Schleiger, S. Karimi, A. Bratanova, and T. Bednarz. Artificial intelligence for science - adop- tion trends and future development pathways. Report, Data61/CSIRO, Australia, 2022. [24] S. Harrison and M. Weder. Technological change and the roaring twenties: A neoclassical perspective. Journal of Macroeconomics , 31(3):363‚Äì375, 2009. [25] J. Hendler. Avoiding another AI winter. IEEE Intelligent Systems , 23(2):2‚Äì4, 2008. [26] Q. Hu, S. Khosa, and N. Kapucu. The intellectual structure of empirical network research in public administration. Journal of Public Administration Research and Theory , 26(4):593‚Äì612, 2015. [27] O. A. Jefferson, D. Koellhofer, B. Warren, T. Ehrich, S. Lang, K. Williams, A. Ballagh, B. Schellberg, R. Sharma, and R. A. Jefferson. Mapping innovation trajectories on SARS-CoV-2 and its variants. Nature Biotechnology , 39(4):401‚Äì403, 2021. [28] O. A. Jefferson, S. Lang, K. Williams, D. Koellhofer, A. Ballagh, B. Warren, B. Schellberg, R. Sharma, and R. Jefferson. Mapping CRISPR-Cas9 public and commercial innovation using the Lens insti- tutional toolkit. Transgenic Research , 30(4):585‚Äì599, 2021. [29] H. Kitano. Nobel Turing Challenge: creating the engine for scientific discovery. npj Systems Biology and Applications , 7(1), 2021. [30] I. Kumar, J. Rawat, N. Mohd, and S. Husain. Opportunities of artificial intelligence and machine learning in the food industry. Journal of Food Quality , 2021:1‚Äì10, 2021. [31] A. Lavallin and J. A. Downs. Machine learning in geography - past, present, and future. Geography Compass , 15(5), 2021. [32] S. N. Lehman-Wilzig. Frankenstein unbound: Towards a legal definition of artificial intelligence. Futures , 13(6):442‚Äì457, 1981. [33] U. Lichtenthaler. Substitute or synthesis: The interplay between human and artificial intelligence. Research-Technology Management , 61(5):12‚Äì 14, 2018. [34] N. Liu, P. Shapira, and X. Yue. Tracking developments in artificial intelligence research: constructing and applying a new search strategy. Scientometrics , 126(4):3153‚Äì3192, 2021. [35] E. Malcolm. Flexible solar panels: new stretch of the imagination. CSIRO, Australia, 2021. [36] K. Malde, N. O. Handegard, L. Eikvil, and A.-B. Salberg. Machine intelligence and the data-driven future of marine science. ICES Journal of Marine Science , 77(4):1274‚Äì1285, 2019. [37] J. McCarthy. The Dartmouth workshop ‚Äì as planned and as it happened. Stanford University, 2006. http://www- formal.stanford.edu/jmc/slides/dartmouth/dartmouth/node1.html. [38] W. J. McClay. Surviving the AI winter. In Proceedings of the International Symposium on Logic Programming , pages 33‚Äì47. MIT Press, 1995. [39] T. Miyagawa and T. Ishikawa. On the decline of R&D efficiency. RIETI Discussion Paper Series 19-E-052, Research Institute of Economy, Trade and Industry, Japan, 2019. [40] S. Mullainathan and J. Spiess. Machine learning: An applied economet- ric approach. Journal of Economic Perspectives , 31(2):87‚Äì106, 2017. [41] C. Naughtin, S. Hajkowicz, E. Schleiger, A. Bratanova, A. Cameron, T. Zamin, and A. Dutta. Our future world: Global megatrends impacting the way we live over coming decades. Report, CSIRO, Australia, 2022. [42] P. Nikolaev, D. Hooper, F. Webber, R. Rao, K. Decker, M. Krein, J. Poleski, R. Barto, and B. Maruyama. Autonomy in materials research: a case study in carbon nanotube growth. npj Computational Materials , 2(1), 2016. [43] A. Nolan. Artificial intelligence and the future of science. OECD.AI Policy Observatory , 25 Oct 2021. [44] M. S. Norouzzadeh, A. Nguyen, M. Kosmala, A. Swanson, M. S. Palmer, C. Packer, and J. Clune. Automatically identifying, counting, and describing wild animals in camera-trap images with deep learning. Proceedings of the National Academy of Sciences , 115(25), 2018. [45] OECD.AI. Database of national AI policies. EC/OECD, 2021. https://oecd.ai/en/dashboards/overview. [46] E. Orduna-Malea and E. Delgado L ¬¥opez-C ¬¥ozar. Performance behavior patterns in author-level metrics: A disciplinary comparison of Google Scholar citations, ResearchGate, and ImpactStory. Frontiers in Research Metrics and Analytics , 2:14, 2017. [47] P. Palos-S ¬¥anchez, P. Baena-Luna, A. Badicu, and J. Infante-Moro. Artificial intelligence and human resources management: A bibliometric analysis. Applied Artificial Intelligence , 36(1), 2022. [48] V . Pandey, M. Pant, and V . Snasel. Blockchain technology in food supply chains: Review and bibliometric analysis. Technology in Society , 69:101954, 2022. [49] A. Paszke, S. Gross, F. Massa, A. Lerer, J. Bradbury, G. Chanan, et al. PyTorch: An imperative style, high-performance deep learning library. In Advances in Neural Information Processing Systems , volume 32, 2019. [50] R. Penfold. Using the Lens database for staff publications. Journal of the Medical Library Association , 108(2):341‚Äì344, 2020. [51] S. Pizzi, A. Venturelli, M. Variale, and G. P. Macario. Assessing the impacts of digital transformation on internal auditing: A bibliometric analysis. Technology in Society , 67:101738, 2021. [52] N. Pontika, P. Knoth, M. Cancellieri, and S. Pearce. Developing infrastructure to support closer collaboration of aggregators with open repositories. Liber Quarterly , 25(4):172‚Äì188, 2016. [53] S. Purkayastha, H. Trivedi, and J. W. Gichoya. Failures hiding in success for artificial intelligence in radiology. Journal of the American College of Radiology , 18(3):517‚Äì519, 2021. [54] Y . Riahi, T. Saikouk, A. Gunasekaran, and I. Badraoui. Artificial intelligence applications in supply chain: A descriptive bibliometric anal- ysis and future research directions. Expert Systems with Applications , 173:114702, 2021. [55] M. Roberts, D. Driggs, M. Thorpe, J. Gilbey, M. Yeung, et al. Common pitfalls and recommendations for using machine learning to detect and prognosticate for COVID-19 using chest radiographs and CT scans. Nature Machine Intelligence , 3(3):199‚Äì217, 2021. [56] V . V . Roy, F. Rossetti, K. Perset, and L. Galindo-Romero. AI watch - national strategies on artificial intelligence: A European perspective, 2021 edition. Technical Report KJ-NA-30745-EN-N, Publications Office of the European Union, Luxembourg, 2021.[57] J. L. Ruiz-Real, J. Uribe-Toril, J. A. Torres Arriaza, and J. de Pablo Va- lenciano. A look at the past, present and future research trends of artificial intelligence in agriculture. Agronomy , 10(11):1839, 2020. [58] C. Sanderson, D. Douglas, Q. Lu, E. Schleiger, J. Whittle, J. Lacey, G. Newnham, S. Hajkowicz, C. Robinson, and D. Hansen. AI ethics principles in practice: Perspectives of designers and developers. IEEE Transactions on Technology and Society , 4(2):171‚Äì187, 2023. [59] Scopus. What are Scopus subject area categories and ASJC codes? El- sevier, 2023. https://service.elsevier.com/app/answers/detail/a id/12007. [60] H. A. Shehu, R. A. Ramadan, and M. H. Sharif. Artificial intelligence tools and their capabilities. PLOMS Journal of Artificial Intelligence , 1(1):13‚Äì19, 2021. [61] Y . Shin. The spring of artificial intelligence in its global winter. IEEE Annals of the History of Computing , 41(4):71‚Äì82, 2019. [62] A. K. Shukla, M. Janmaijaya, A. Abraham, and P. K. Muhuri. Engineer- ing applications of artificial intelligence: A bibliometric analysis of 30 years (1988-2018). Engineering Applications of Artificial Intelligence , 85:517‚Äì532, 2019. [63] V . Shum, A. Park, E. Maine, and L. F. Pitt. A bibliometric study of research-technology management, 1998-2017. Research-Technology Management , 62(1):34‚Äì43, 2019. [64] A. Simmons and S. Chappell. Artificial intelligence - definition and practice. IEEE Journal of Oceanic Engineering , 13(2):14‚Äì42, 1988. [65] P. Song and X. Wang. A bibliometric analysis of worldwide educational artificial intelligence research development in recent twenty years. Asia Pacific Education Review , 21(3):473‚Äì486, 2020. [66] E. Strickland. The turbulent past and uncertain future of AI: Is there a way out of AI‚Äôs boom-and-bust cycle? IEEE Spectrum , 58(10):26‚Äì31, 2021. [67] D. Tandon, J. Rajawat, and M. Banerjee. Present and future of artificial intelligence in dentistry. Journal of Oral Biology and Craniofacial Research , 10(4):391‚Äì396, 2020. [68] L. Waltman. A review of the literature on citation impact indicators. Journal of Informetrics , 10(2):365‚Äì391, 2016. [69] K. Wang, Z. Shen, C. Huang, C.-H. Wu, Y . Dong, and A. Kanakia. Microsoft Academic Graph: When experts are not enough. Quantitative Science Studies , 1(1):396‚Äì413, 2020. [70] P. Wang. On defining artificial intelligence. Journal of Artificial General Intelligence , 10(2):1‚Äì37, 2019. [71] Q. Wang and L. Waltman. Large-scale analysis of the accuracy of the journal classification systems of Web of Science and Scopus. Journal of Informetrics , 10(2):347‚Äì364, 2016. [72] J. White. PubMed 2.0. Medical Reference Services Quarterly , 39(4):382‚Äì387, 2020. [73] L. Wynants, B. Van Calster, G. S. Collins, R. D. Riley, G. Heinze, et al. Prediction models for diagnosis and prognosis of covid-19: systematic review and critical appraisal. BMJ , 369:m1328, 2020. [74] C.-H. Yang. How artificial intelligence technology affects productivity and employment: Firm-level evidence from Taiwan. Research Policy , 51(6):104536, 2022. [75] L. N. Yasnitsky. Whether be new ‚Äúwinter‚Äù of artificial intelligence? Lecture Notes in Networks and Systems , 78:13‚Äì17, 2019. [76] M. Ying. Quantum computation, quantum theory and AI. Artificial Intelligence , 174(2):162‚Äì176, 2010. [77] D. Zhang, S. Mishra, E. Brynjolfsson, J. Etchemendy, D. Ganguli, B. Grosz, T. Lyons, J. Manyika, J. C. Niebles, M. Sellitto, Y . Shoham, J. Clark, and R. Perrault. The AI Index 2021 Annual Report. arXiv:2103.06312 , 2021. [78] L. Zhang, J. Ling, and M. Lin. Artificial intelligence in renewable en- ergy: A comprehensive bibliometric analysis. Energy Reports , 8:14072‚Äì 14088, 2022. [79] W. Zhang, B. Gao, J. Tang, P. Yao, S. Yu, M.-F. Chang, H.-J. Yoo, H. Qian, and H. Wu. Neuro-inspired computing chips. Nature Electronics , 3(7):371‚Äì382, 2020",cs.CY,Arxiv
5,Exploring Opportunities in Usable Hazard Analysis Processes for AI Engineering,"Nikolas Martelaro, Carol J. Smith, Tamara Zilovic",2022-03-29 14:49:46+00:00,http://arxiv.org/pdf/2203.15628v1,"Embedding artificial intelligence into systems introduces significant challenges to modern engineering practices. Hazard analysis tools and processes have not yet been adequately adapted to the new paradigm. This paper describes initial research and findings regarding current practices in AI-related hazard analysis and on the tools used to conduct this work. Our goal with this initial research is to better understand the needs of practitioners and the emerging challenges of considering hazards and risks for AI-enabled products and services. Our primary research question is: Can we develop new structured thinking methods and systems engineering tools to support effective and engaging ways for preemptively considering failure modes in AI systems? The preliminary findings from our review of the literature and interviews with practitioners highlight various challenges around integrating hazard analysis into modern AI development processes and suggest opportunities for exploration of usable, human-centered hazard analysis tools.","Exploring Opportunities in Usable Hazard Analysis Processes for AI Engineering  Nikolas Martelaro,1 Carol J. Smith,2 Tamara Zilovic1 HCI Institute - Carnegie Mellon University,1 Software Engineering Institute, Carnegie Mellon University2 nikmart@cmu.edu, cjsmith@sei.cmu.edu, tzilovic@andrew.cmu.edu  Abstract Embedding artificial intelligence into systems introduces significant challenges to modern engineering practices. Hazard analysis tools and processes have not yet been adequately adapted to the new paradigm. This paper describes initial research and findings regarding current practices in AI-related hazard analysis and on the tools used to conduct this work. Our goal with this initial research is to better understand the needs of practitioners and the emerging challenges of considering hazards and risks for AI-enabled products and services. Our primary research question is: Can we develop new structured thinking methods and systems engineering tools to support effective and engaging ways for preemptively considering failure modes in AI systems? The preliminary findings from our review of the literature and interviews with practitioners highlight various challenges around integrating hazard analysis into modern AI development processes and suggest opportunities for exploration of usable, human-centered hazard analysis tools.  Introduction Products and services are increasingly using artificial intelligence (AI), and specifically machine learning (ML), to enable automation. While the use of AI-based systems can spur innovation, the combination of data and algorithms that underlie complex systems can lead to failures. Prominent examples include computer vision algorithms that label Black people as gorillas (Barr, 2015; Mac, 2021), chatbots that speak out hate (Lee, 2016), and autonomous vehicle vision systems whose inability to distinguish trucks from the sky has led to fatal crashes (Yadron & Tynan, 2016). Such failures in AI systems not only pose significant risks to the end users of such products but can have profound financial and reputational implications for the organizations that develop these products. While the use of new technologies always comes with the possibility of unintended consequences, we believe that many of these examples could have been prevented through strategic and thoughtful consideration when these systems are being designed and engineered. Within systems engineering, strategies for hazard analysis can be used by teams to identify risks and potential failures with the goal of developing more robust and safe engineered systems. While many formal hazard analysis techniques exist, these activities largely center around helping teams determine potential risks and/or sources of failure before products have begun the development process. However, Rae at al. (2020) have called into question the utility of such methods as it is unclear if and how such methods are used by practitioners (Provan et al., 2017).  Within the space of AI-enabled systems, there has been recent work to support practitioners in developing more ethical practices and fairer ML models (Holstein et al 2019; Madaio et al 2020) and to consider safety in machine learning system development in ways similar to other industries (Varshney, 2016; Varshney & Alemzadeh, 2017). While such work is spurring the development of new tools and techniques to support developing fairer ML-systems (e.g., Datasheets for Datasets (Gebru et al., 2021) & Model Cards for Model Reporting (Mitchell et al., 2019)), these methods are focused on the early stages of development and thus may be less integrated into the entire engineering process for AI-enabled products and services.  In this paper, we describe our initial findings from a set of exploratory interviews that suggest that although teams do generally recognize the value of hazard analysis - and do try to employ practices aimed at early recognition and communication of potential risks - various shared challenges regarding the development and implementation of these processes have been reported. Common themes that ran through our interviews included the incompatibility of such processes with modern development practices, unique challenges posed by working with non-deterministic ML systems, limited tooling available to support such activities, time pressures inherent to competitive markets, and the role of company culture in the support of these efforts. Copyright 2022 Carnegie Mellon University. This material is based upon work funded and supported by the Department of Defense under Contract No. FA8702-15-D-0002 with Carnegie Mellon University for the operation of the Software Engineering Institute, a federally funded research and development center. The view, opinions, and/or findings contained in this material are those of the author(s) and should not be construed as an official Government position, policy, or decision, unless designated by other documentation. NO WARRANTY. THIS CARNEGIE MELLON UNIVERSITY AND SOFTWARE ENGINEERING INSTITUTE MATERIAL IS FURNISHED ON AN AS-IS BASIS. CARNEGIE MELLON UNIVERSITY MAKES NO WARRANTIES OF ANY KIND, EITHER EXPRESSED OR IMPLIED, AS TO ANY MATTER INCLUDING, BUT NOT LIMITED TO, WARRANTY OF FITNESS FOR PURPOSE OR MERCHANTABILITY, EXCLUSIVITY, OR RESULTS OBTAINED FROM USE OF THE MATERIAL. CARNEGIE MELLON UNIVERSITY DOES NOT MAKE ANY WARRANTY OF ANY KIND WITH RESPECT TO FREEDOM FROM PATENT, TRADEMARK, OR COPYRIGHT INFRINGEMENT. [DISTRIBUTION STATEMENT A] This material has been approved for public release and unlimited distribution.  Please see Copyright notice for non-US Government use and distribution. Internal use:* Permission to reproduce this material and to prepare derivative works from this material for internal use is granted, provided the copyright and ‚ÄúNo Warranty‚Äù statements are included with all reproductions and derivative works. External use:* This material may be reproduced in its entirety, without modification, and freely distributed in written or electronic form without requesting formal permission. Permission is required for any other external and/or commercial use. Requests for permission should be directed to the Software Engineering Institute at permission@sei.cmu.edu. * These restrictions do not apply to U.S. government entities. Carnegie Mellon¬Æ is registered in the U.S. Patent and Trademark Office by Carnegie Mellon University. DM22-0216   Based on these initial findings, we believe that there are exciting opportunities to adapt and extend more traditional hazard analysis processes for use by fast-moving AI engineering teams, and to develop new hazard analysis tools and processes tailored towards addressing the emergent needs of developing AI-enabled products. Motivated by Rae et al. (Rae et al., 2020) and their call for reality-based safety research, we look to understand the needs of AI engineering teams and aim to develop new, usable hazard analysis tools. We are currently in the initial stages of this research.   Related Work Hazard analysis techniques and their use According to prior work cited by Rae at al. (2020), it is suggested that most professional hazard analysis practice is driven by regulation (Provan et al., 2019; Van Eerd et al., 2018). As such, hazard analysis activities are more common in regulated industries such as aerospace, automotive, finance, and healthcare. Various techniques for hazard analysis such as Failure Modes and Effects Analysis (FMEA), Fault Tree Analysis (FTA), Hazard and Operability Analysis (HAZOP), and System Theoretic Process Analysis (STPA) are common. However, the lack of clarity regarding how practitioners use such techniques and the seeming disconnect with professional practice have led Rae at al. (2020) to call into question the utility of some hazard analysis methods. Provan et al. (Provan et al., 2017) suggest that there has been little work researching professional practice and as Rae et al. point out, professional hazard analysis practice appears to be driven by necessity to comply with existing regulation rather than by new research that focuses on the utility of hazard analysis theory (Provan et al., 2017; Van Eerd et al., 2018). Such work suggests a need to better understand how professionals consider hazards and risks throughout their design process and to develop tools that support such work effectively. As part of our research, we look to understand how AI engineering teams may or may not incorporate hazard analysis processes into their work currently.  Responsible AI and new techniques for considering risks Organizations and researchers working on AI systems have been exploring new ways to engage practitioners in thinking about responsible AI. A common starting point is adopting an existing ethical framework from a reputable organization focused on computing and AI (Smith, 2019). The Montr√©al Declaration for a Responsible Development of Artificial Intelligence (Fjeld et al., 2020; Hagendorff, 2020; Universit√© de Montr√©al, 2018), is a respected starting place. Ethical principles designed for AI use can help to bridge gaps between team members‚Äô personal experiences and may be particularly helpful in supporting cross-functional and diverse teams. Two efforts to compare sets of AI ethics (Fjeld et al., 2020; Hagendorff, 2020) found broad patterns across the principles, some of which dealt with the success of professional implementation. Hagendorff (2020) identified issues in implementation of AI ethics due to the lack of technological detail, a lack of reinforcement mechanisms, and an insignificant influence on the decision-making of individual software developers.  Adopting AI ethics is not enough - targeted guidance, tools and processes must be provided to the team to support the process of evaluating risk (Dunnmon et al., 2021; Smith, 2019). Such a holistic approach can facilitate conversations regarding the scope of the system‚Äôs capabilities, support the team in speculating about harmful consequences, assist in the creation of plans to prevent potential harms, and/or establish mitigation plans to stop unforeseen harm quickly. Though this work is difficult for teams to engage in, it does not have to be onerous. To facilitate conversations around harms, various new tools and techniques are emerging that are aimed at engaging teams in considering potential hazards while using AI-based technologies. A key aspect in reducing harms from ML systems is establishing a thorough understanding of the data selected for the system. A set of data that is either inappropriate to the function of the system-or whose breadth is too narrow or too broad-can create unsolvable problems if not identified (and remedied) early in the process. The Datasheets for Datasets method proposed in 2018 by Gebru et al. (2021) guides a team in identifying the data creator, their motivation for the data collection, and what data is included or excluded - among other important details - so that teams can consider if the dataset is appropriate for their task. The same individuals then continued the effort by developing Model Cards for Model Reporting that include clear descriptions of the intent and functionality of the model(s) an AI system is based on (Mitchell et al., 2019). Such methods can aid AI engineers in using readily available data and models more thoughtfully. As engineers design and develop new models, many responsible AI processes suggest considering harms early in the process. For example, in the Microsoft AI Fairness Checklist (Microsoft Research, 2021), Madaio et al. (2020) highlight envisioning the types of harms and the potential tradeoffs between benefits and harms as part of the first major phase of new AI-driven projects. While no explicit methods are given in the checklist on methods for envisioning harms, other research has looked at creating techniques for fostering conversation. One notable area in this space are card games designed to help provide structure around thinking about harms while doing so in a   less formal and more engaging way. Such examples include Ballard et al.‚Äôs (2019) ‚ÄúJudgement Call‚Äù, which uses value sensitive design to help surface ethical issues for ML systems and Martelaro and Ju‚Äôs (2020) ‚ÄúWhat Could Go Wrong?‚Äù which aims to help teams in considering the possible effects and failure modes in autonomous vehicles and services enabled by autonomous vehicles. Overall, such methods aim to engage teams in thinking about potential harms and what faults may be associated with them. Conversations facilitated by such games can be the start of more formal hazard analysis processes and engage more diverse stakeholders in the process of considering risks for AI systems. Inspired by this prior work, our research looks to extend thinking around new methods and processes to enable teams to better consider and design for potential AI-systems hazards.  Motivation We see preventable examples of system failures frequently in the media. These failures are a risk to the users of such products and can have financial and reputational implications for the organizations that develop them. Many of these examples could be preventable with strategic and thoughtful consideration at the time of design. While there are structured systems engineering methods to support thinking about failures, these are not always conducted due to lack of experience, interest, and/or perceived lack of time. We intend to understand where there are shortcomings in current professional practice and then to develop tools aimed at supporting critical thinking around possible hazards in AI engineering. Our primary research question is: Can we develop new structured thinking methods and systems engineering tools to support effective and engaging ways for preemptively considering failure modes in AI systems? This work is part of the Carnegie Mellon University Software Engineering Institute‚Äôs effort leading a national AI engineering initiative to define a professional discipline for AI engineering. As human-computer interaction (HCI) practitioners and academics, we look to engage people in relatable ways of thinking about issues and failures that can arise during AI product development. Based on our own work practices and the call for reality-based safety science by Rae et al. (2020), we approach our work through a human-centered design perspective. This includes defining a specific user, clearly defining the needs and tasks of that user that the system will support and outlining a set of baseline metrics within which to base the system‚Äôs expected performance (Dunnmon et al., 2021).  Outline of our research goals and methods We are conducting this work in four phases over the course of a year. Our first phase includes background research on the latest hazard analysis techniques and a set of exploratory interviews with practitioners developing complex engineering systems to understand how such methods are used in practice. Our second phase of work will involve gathering additional information regarding hazard analysis via a survey and designing and prototyping useful and usable new tools and interfaces to enable fruitful conversations and tracking of potential harms by AI engineering teams. We will then test our prototypes with practitioners through a series of iterative testing and feedback sessions. Finally, we will test our designs through a longer-term engagement with practitioners. Currently, we are ending our first phase of work and report on our initial literature review and exploratory interviews.  Exploratory Interviews Method We have completed a set of eight semi-structured interviews with practitioners and instructors whose work has some relation to considering the potential harms from AI-based systems. Interviews were 30-minutes long and centered on the processes that our interviewees typically take in thinking about hazard analysis and risk, how current hazard analysis processes work or do not work well, how considering hazard analyses for AI-based systems may be different from other complex systems, and what challenges and frustrations professionals have with current hazard consideration practices (see Appendix A: Interview Guide). We recruited participants who worked in areas dealing with complex engineered systems based on personal connections and referrals. We emailed potential participants and allowed them to schedule a time using an online calendaring system. All but one of our interviews were conducted over video conferencing. All participants signed a consent form approved by CMU IRB STUDY2021_00000274. Interviews were recorded unless participants did not consent to record. A research team member took written notes during the interview. After the interview, we extracted insightful and interesting quotes and comments to support our qualitative analysis.  Participants At the present time, we have spoken to eight people who work in the area of engineering complex systems. Four are in industry, three consult to industry clients, and one was an instructor teaching AI software engineering. Our participants represented the following roles: co-founder of a startup, safety lead at a large autonomous vehicle company, senior research scientist at a large software company, engineering manager at a software company, principle of ethics and innovation at a top-five consulting company, consultant for a government funded research   organization, senior engineer at a policy think tank, and the professor at a R1 university. We note that, so far, discussing practitioners‚Äô processes around considering hazards has been challenging. Our eight participants have come from reaching out to a pool of 37 people - while generally a good response rate, we expected a higher rate due to our connections with them. Beyond the challenges of scheduling interviews with professionals, the subject matter of our interview is likely sensitive as it concerns people discussing their knowledge of risks which can bring about liability. For example, two participants requested to see the questions beforehand to ensure approval to speak about the area. Future research should consider the sensitivity of this subject matter when recruiting professionals.  Findings Our initial interviews-paired with our background research-have highlighted various challenges and shortcomings in current practices for considering potential risks and harms. Below, we outline our primary findings.  Lack of incentives Our interviews revealed that formal processes are primarily used by teams operating within regulated industries that need to comply with formal standards, such as aerospace and finance. Non-regulated industries, and organizations creating technology that is not obviously part of a physically risky system, are often not incentivized to do this work. The perception of hazard analysis as being very time-consuming-combined with ambiguous understandings of best practices-often leads to this work being omitted. Additionally, organizations have been discouraged from looking at hazards to avoid culpability, creating a further disincentive.  Lack of cross-functional teams Some of our interview participants identified engineers as being the primary people involved in hazard analysis work. While some indicated the presence of defined safety teams within their organizations, others mentioned the expectation that safety analysis was to be distributed among all employees.  Regarding the communication of potential safety concerns, it was noted that some companies do seem to have formal processes for employees to report potential hazards, such as submitting white papers on potential risks. Interestingly, one participant noted that at a company within which they had worked, there were financial incentives attached to participating in this process; if a reported potential failure did occur, that employee was given a bonus.  Cross-disciplinary participation in safety analysis was not evident in practice among the collective experiences of our interviewees. One participant - who initially indicated the expectation of safety considerations to be distributed among all employees - noted that a designer on their team was typically excluded from hazard analysis conversations ‚Äúbecause he doesn‚Äôt have AI in his title.‚Äù   Culture as a driver of action Our interviewees reported that culture can be a positive influence for team members considering risks - making safety thinking a part of everyone‚Äôs job, having incentives for safety thinking (bonuses distributed for submitting documents describing hazards that are later identified), and by prioritizing metrics that go beyond sales. However, sometimes there are aspects of culture that have a negative impact on this work. Not all of the information relevant to considering harms from engineered AI systems may be shared with relevant team members - one systems engineer participant discussed frustrations around how other engineers might not share all the details with a safety team due to a perception that the system engineering team was not technical enough.‚Äù Additionally, while hazard analyses may be conducted, they may not have the intended positive impacts. One of our consultant participants complained that organizations, in some cases, are conducting hazard analysis work primarily to placate newer talent rather than as a sustainable and systemic long-term strategy for risk management during product development.   Rudimentary tools Among our participants, we did not hear about the use of specialized software tools for conducting hazard analyses or supporting hazard analysis thinking. While some participants did mention named hazard analysis processes, teams seemed to use rudimentary tools (spreadsheets) to document and track work. While functional, one interviewee said that such tools limit their ability to conduct high fidelity tracing of their efforts aligned with the development of the system. Another participant also suggested that tools for documenting system processes and hazards did not have a particularly effective way for visualizing how humans may interact with and develop a mental model of the system over time. The challenge of mode confusion during system use was raised as a particularly arduous interaction to document and consider during a hazard analysis. Furthermore, tracking hazards can be challenging in systems that require consistent manual updating, like spreadsheets. Interviewees noted the importance of - but lack of support for - traceability within their current tooling.     Working at the speed of development One of our participants - who developed a new hazard analysis method and attempted to employ it at a company - stated that the company appreciated the thinking it supported, but found the method was too complicated to be done efficiently within the team‚Äôs timeline. Other interviewees suggested that the speed and iterative nature of modern software development does not support the meticulous processes that existing hazard analysis frameworks entail. One participant said that although safety analysis would ideally be completed up front, this is not always possible when the technological capabilities are still being developed. They commented that the work is never truly done - as soon as you finish reviewing the existing work, you must start again. Autonomous systems and AI/machine learning systems - especially those built-in ways that are not easily scrutinized - are particularly challenging. Team members conducting hazard analyses may not understand the inner workings of the algorithms and have difficulty breaking the system into components to understand the source of the issue.  Underestimating complexity One participant has observed that smaller organizations underestimate the engineering needed to integrate AI into production and noted that much thinking about hazards focused solely on individual models without considering how these models were part of a larger product system. It was noted that many small companies only have data scientists and expect them to also manage the AI engineering responsibilities. However, these data scientists may feel that taking on the burden of engineering large software systems falls out of the scope of their responsibilities (or interests) or they may not have experience developing large software systems. Inadequate engineering of the AI system may result in aspects being less robust than required for real-world production use.  Another interviewee discussed the failure of people doing the work to think at a systems level. They discussed how minor changes can have broad implications and a lack of exponential thinking about potential consequences can be an issue. They also discussed the overall challenges of having conversations around risk and scale - and the impact of changes that can affect millions of people. Finally, multiple interviewees mentioned that working with ML-based systems was different from deterministic control systems. Many ML models are inherently probabilistic and are thus challenging to envision and test for all possible edge cases. ‚ÄúYou can‚Äôt give [the model] all the examples that are going to happen in the world‚Ä¶ If you could, then you would be God‚Äù stated one participant. This participant also discussed the difficulty of managing end-user expectations; even if systems are designed to be safe within limits, end-users may overestimate the AI‚Äôs capability. Modeling user overconfidence and understanding how design should respond to this is particularly challenging. It was mentioned that there should be better ways of educating users on the limits of an AI-based system.  Limited investment We observed a pattern across the interviewees responses that suggested limited budgets allotted in some organizations for the purposes of doing hazard analysis work. One participant - who was directly involved in their company‚Äôs formal hazard analysis process - mentioned that although their company was aware of existing specialized software that could support their efforts, they were not willing to meet the cost required to acquire it. This participant noted that their team thus relied on spreadsheets to track their progress, and also mentioned that the existing specialty software on the market seemed a bit too ‚Äúclunky.‚Äù   Discussion Through our background research and interviews, we have found that of the people we spoke with, many of Rae et al.‚Äôs (2020) critiques on the limited use of formal hazard analysis processes were corroborated. Of our interviewees, only one mentioned a formal and tracked process used within the company. However, they mentioned that it was still challenging to implement and keep up with the company‚Äôs iterative development processes. One of the consultant participants discussed how a client faced challenges training and providing support to personnel around STPA processes. Moreover, while the software engineering instructor we spoke to did teach hazard analysis techniques (specifically FTA) in class, they did not see evidence that students were taking such lessons into their future work.  Still, on a positive note, we did find that all our participants considered thinking about risks and hazards to be important and did discuss some ways of attempting to address the safety of their products and services. While our participant pool was likely inclined to be thinking about how to consider hazards, we still believe that their motivations do represent other practitioners and their desire to create safe AI-based systems. Our research suggests that the limited use of formal processes stems primarily from the inability of existing processes/frameworks to meet the needs of today‚Äôs practitioners, whose desire to conduct robust hazard analysis indicates an urgent need to develop modern tools/practices to support this work. Regarding tools, we have found that prior work in responsible AI focuses on data and model development and the fairness and biases of AI models. While this is an   essential component of developing safe AI systems, our participants noted that it is only one part of a larger product system. There is a need to support practitioners in thinking more broadly about entire product systems and the people who are using these systems. Future tools and processes should support engineers in thinking about how end-users may think about and behave with AI-based systems. The authors have experienced first-hand the development of AI systems without consideration of the end-users‚Äô experience until late in development. This is a bad practice and additionally, the end-users who are susceptible to autonomy bias, may not be aware of (or understand) the capabilities and limitations of the technology due to its poor design. This can potentially lead to preventable misuse or abuse of the system. We see an opportunity for user experience professionals to integrate hazard analysis efforts into organizations and Responsible AI efforts, as they are closest to the end-users who may experience the hazard first-hand. Many of our interviewees stressed the role that changing company culture may play in the development of safer and more responsible technology. One participant noted ‚Äúyou can‚Äôt solve AI with AI,‚Äù before suggesting that developing safer systems required safety-oriented processes (and likely more robust regulation). From our perspective as HCI professionals and academics, we believe that new tools and processes can help to shape culture within an organization. For example, reducing the formality and engaging multiple stakeholders in some aspects of hazard analysis through lightweight activities such as card games (Ballard et al., 2019; Martelaro & Ju, 2020) could help to shift people‚Äôs thinking and motivate more formal processes. Additionally, tooling that better integrates into modern development practices and supports continual review and monitoring may also shift team members‚Äô thinking about hazard analysis towards something that happens throughout the product development lifecycle and keeps such thinking front of mind.  Future Work Based on our initial findings, we are now looking towards confirming what we have found and developing a series of prototypes for new tools and processes to support AI engineering teams in thinking about hazard analysis. We are currently developing a survey to send to AI engineering professionals to learn about the processes that they use and to confirm if the specific challenges that we have seen in carrying out hazard analyses are consistent across industries. We are also conducting a survey of course materials in Computer Science to understand at what points hazard analyses may be introduced to students.  As our research goal is to develop new tools, we will also design and prototype new hazard analysis tools with a focus on two key areas: 1) addressing the formality versus the ease of creating conversations about risk among many stakeholders and 2) developing human-centered interfaces that fit into modern software development practices. Our goals in prototyping new systems will be to further learn about the challenges of doing hazard analyses for AI systems and to see how tools can change practice for the better.  Conclusion As AI-based systems become more common in products and services, it will be important for teams to manage associated risks and design to reduce hazards. While existing hazard analysis practices can inform this work, the challenges of modern software development - paired with the sensitive nature of probabilistic AI systems - reveal the need to create new tools and processes that better align with real-world AI engineering practice. As HCI researchers, we believe that useful and usable hazard analysis tools can help teams consider potential hazards and shift their culture towards continual safety consideration.   References Ballard, S., Chappell, K. M., & Kennedy, K. (2019). Judgment Call the Game: Using Value Sensitive Design and Design Fiction to Surface Ethical Concerns Related to Technology. Proceedings of the 2019 on Designing Interactive Systems Conference, 421‚Äì433. https://doi.org/10.1145/3322276.3323697 Barr, A. (2015, July 1). Google Mistakenly Tags Black People as ‚ÄòGorillas,‚Äô Showing Limits of Algorithms. Wall Street Journal. https://www.wsj.com/articles/BL-DGB-42522 Dunnmon, J., Goodman, B., Kirechu, P., Smith, C., & Van Deusen, A. (2021, November). DIU Responsible AI Guidelines in Practice: Lessons Learned from the DIU AI Portfolio. https://www.diu.mil/responsible-ai-guidelines Fjeld, J., Achten, N., Hilligoss, H., Nagy, A., & Srikumar, M. (2020). Principled Artificial Intelligence: Mapping Consensus in Ethical and Rights-Based Approaches to Principles for AI (SSRN Scholarly Paper ID 3518482). Social Science Research Network. https://doi.org/10.2139/ssrn.3518482 Gebru, T., Morgenstern, J., Vecchione, B., Vaughan, J. W., Wallach, H., III, H. D., & Crawford, K. (2021). Datasheets for datasets. Communications of the ACM, 64(12), 86‚Äì92. https://doi.org/10.1145/3458723 Hagendorff, T. (2020). The Ethics of AI Ethics: An Evaluation of Guidelines. Minds and Machines, 30(1), 99‚Äì120. https://doi.org/10.1007/s11023-020-09517-8 Lee, P. (2016, March 25). Learning from Tay‚Äôs introduction. The Official Microsoft Blog. https://blogs.microsoft.com/blog/2016/03/25/learning-  tays-introduction/ Mac, R. (2021, September 3). Facebook Apologizes After A.I. Puts ‚ÄòPrimates‚Äô Label on Video of Black Men. The New York Times. https://www.nytimes.com/2021/09/03/technology/facebook-ai-race-primates.html Madaio, M. A., Stark, L., Wortman Vaughan, J., & Wallach, H. (2020). Co-Designing Checklists to Understand Organizational Challenges and Opportunities around Fairness in AI. Proceedings of the 2020 CHI Conference on Human Factors in Computing Systems, 1‚Äì14. https://doi.org/10.1145/3313831.3376445 Martelaro, N., & Ju, W. (2020). What Could Go Wrong? Exploring the Downsides of Autonomous Vehicles. 12th International Conference on Automotive User Interfaces and Interactive Vehicular Applications, 99‚Äì101. https://doi.org/10.1145/3409251.3411734 Microsoft Research. (2021, December). AI Fairness Checklist. Microsoft Research. https://www.microsoft.com/en-us/research/project/ai-fairness-checklist/ Mitchell, M., Wu, S., Zaldivar, A., Barnes, P., Vasserman, L., Hutchinson, B., Spitzer, E., Raji, I. D., & Gebru, T. (2019). Model Cards for Model Reporting. Proceedings of the Conference on Fairness, Accountability, and Transparency, 220‚Äì229. https://doi.org/10.1145/3287560.3287596 Provan, D. J., Dekker, S. W. A., & Rae, A. J. (2017). Bureaucracy, influence and beliefs: A literature review of the factors shaping the role of a safety professional. Safety Science, 98, 98‚Äì112. https://doi.org/10.1016/j.ssci.2017.06.006 Provan, D. J., Rae, A. J., & Dekker, S. W. A. (2019). An ethnography of the safety professional‚Äôs dilemma: Safety work or the safety of work? Safety Science, 117, 276‚Äì289. https://doi.org/10.1016/j.ssci.2019.04.024 Rae, A., Provan, D., Aboelssaad, H., & Alexander, R. (2020). A manifesto for Reality-based Safety Science. Safety Science, 126, 104654. https://doi.org/10.1016/j.ssci.2020.104654 Smith, C. J. (2019). Designing Trustworthy AI: A Human-Machine Teaming Framework to Guide Development. https://arxiv.org/abs/1910.03515v1 Universit√© de Montr√©al. (2018). The Declaration‚ÄîMontreal Responsible AI. Respaideclaration. https://www.montrealdeclaration-responsibleai.com/the-declaration Van Eerd, D., Cardoso, S., Irvin, E., Saunders, R., King, T., & Macdonald, S. (2018). Occupational safety and health knowledge users‚Äô perspectives about research use. Policy and Practice in Health and Safety, 16(1), 4‚Äì19. https://doi.org/10.1080/14773996.2017.1356544 Varshney, K. R. (2016). Engineering safety in machine learning. 2016 Information Theory and Applications Workshop (ITA), 1‚Äì5. https://doi.org/10.1109/ITA.2016.7888195 Varshney, K. R., & Alemzadeh, H. (2017). On the Safety of Machine Learning: Cyber-Physical Systems, Decision Sciences, and Data Products. Big Data, 5(3), 246‚Äì255. https://doi.org/10.1089/big.2016.0051 Yadron, D., & Tynan, D. (2016, June 30). Tesla driver dies in first fatal crash while using autopilot mode. The Guardian. https://www.theguardian.com/technology/2016/jun/30/tesla-autopilot-death-self-driving-car-elon-musk  Appendix A - Interview Guide 1. Let‚Äôs start by having you introduce yourself and telling me about your role. [If it doesn‚Äôt come up] a. How does your work relate to hazard analysis or risk assessment?  b. How do you define hazard analysis?   2. Tell me how hazard analysis is used in your organization. [If it doesn‚Äôt come up] a. Can walk me through what a typical hazard analysis activity/assessment looks like on your team? b. What type of individuals (roles/responsibilities) are typically involved in the hazard analysis work? c. Who else should be involved in your opinion? (Who is missing?) d. How long has the group been doing aspects of hazard analysis?   3. What methods have you successfully used for hazard analysis?  Why were they successful?  4. In your opinion, what is different about hazard analysis for AI systems?  5. What do you think is currently missing from conversations about the implementation of hazard analysis for AI systems?  6. What are your biggest frustrations with hazard analysis? a. What is the greatest need for improvement of hazard analysis practices?  End Questions (skip to Section 4 if time allows)  7. Who else should we talk to in your organization or elsewhere?  8. What else should I have asked you related to AI engineering?    Closing Thank you very much for your time and responses. I really appreciate it!  If time allows ‚Äì then back to End Questions  9. How does your organization share your hazard analysis work with your customers or stakeholders?  10. What has been your biggest success in AI engineering?  11. What are your biggest AI engineering challenges now?  12. What are your concerns for the future of AI engineering?  13. Have you thought about integrating AI engineering with the rest of the organization?  14. How much is the organization investing in AI engineering (e.g. more money, staff, etc.) vs the total investment in AI (looking for percentages)",cs.SE,Arxiv
6,Advances in Automatically Rating the Trustworthiness of Text Processing Services,"Biplav Srivastava, Kausik Lakkaraju, Mariana Bernagozzi, Marco Valtorta",2023-02-04 14:27:46+00:00,http://arxiv.org/pdf/2302.09079v1,"AI services are known to have unstable behavior when subjected to changes in data, models or users. Such behaviors, whether triggered by omission or commission, lead to trust issues when AI works with humans. The current approach of assessing AI services in a black box setting, where the consumer does not have access to the AI's source code or training data, is limited. The consumer has to rely on the AI developer's documentation and trust that the system has been built as stated. Further, if the AI consumer reuses the service to build other services which they sell to their customers, the consumer is at the risk of the service providers (both data and model providers). Our approach, in this context, is inspired by the success of nutritional labeling in food industry to promote health and seeks to assess and rate AI services for trust from the perspective of an independent stakeholder. The ratings become a means to communicate the behavior of AI systems so that the consumer is informed about the risks and can make an informed decision. In this paper, we will first describe recent progress in developing rating methods for text-based machine translator AI services that have been found promising with user studies. Then, we will outline challenges and vision for a principled, multi-modal, causality-based rating methodologies and its implication for decision-support in real-world scenarios like health and food recommendation.","Advances in Automatically Rating the Trustworthiness of Text Processing Services Biplav Srivastava1, Kausik Lakkaraju1, Mariana Bernagozzi2, Marco Valtorta1 1AI Institute, University of South Carolina, Columbia, South Carolina, USA 2IBM Research, Yorktown Heights, New York, USA biplav.s@sc.edu Abstract AI services are known to have unstable behavior when sub- jected to changes in data, models or users. Such behaviors, whether triggered by omission or commission, lead to trust issues when AI works with humans. The current approach of assessing AI services in a black box setting, where the con- sumer does not have access to the AI‚Äôs source code or training data, is limited. The consumer has to rely on the AI devel- oper‚Äôs documentation and trust that the system has been built as stated. Further, if the AI consumer reuses the service to build other services which they sell to their customers, the consumer is at the risk of the service providers (both data and model providers). Our approach, in this context, is inspired by the success of nutritional labeling in food industry to promote health and seeks to assess and rate AI services for trust from the perspective of an independent stakeholder. The ratings be- come a means to communicate the behavior of AI systems so that the consumer is informed about the risks and can make an informed decision. In this paper, we will Ô¨Årst describe re- cent progress in developing rating methods for text-based ma- chine translator AI services that have been found promising with user studies. Then, we will outline challenges and vision for a principled, multi-modal, causality-based rating method- ologies and its implication for decision-support in real-world scenarios like health and food recommendation. Introduction It is common to have real-world ArtiÔ¨Åcial Intelligence (AI) systems today that work with multimodal data like text, audio and image. Some illustrative examples are recom- mender systems (for food, movies), collaborative assistants (for health, bank transactions and travel) and route Ô¨Ånders (for trafÔ¨Åc navigation, emergency evacuation). Here, sample AI services are - for natural language processing (NLP): en- tity detection, text translation, summarization and sentiment detection; for audio - speech recognition, speaker identiÔ¨Å- cation; for image tasks - object detection, face identiÔ¨Åca- tion, object counting; common tasks - reasoning, search and ranking. However, the enthusiasm for AI services is also be- ing dampened by growing concerns about their reliability and trustworthiness with issues like bias (lack of fairness), opaqueness (lack of transparency), privacy of user data and brittleness (lack of robust competence) regardless of the data Copyright ¬© 2023, Association for the Advancement of ArtiÔ¨Åcial Intelligence (www.aaai.org). All rights reserved.they use - be it text (Blodgett et al. 2020), audio (Koenecke et al. 2020) or image (Antun et al. 2020). In fact, this has been argued as one of the key factors hampering the adop- tion of AI techniques during an emergency like COVID-19 (Srivastava 2021) or mainstream treatment like breast cancer (Seedat and Taylor-Phillip 2022). In this context, we explore how the trustworthiness properties of AI could be assessed and communicated, without access to its code or data (i.e., the black box setting), to promote growth. Figure 1: The black box setting for AI services The black box setting for AI services is conceptually shown in Figure 1. Here, there is a repository which con- tains information to access AI services. Developers register their services as application programming interfaces (APIs). A user can search the repository, try out their capabilities, provide payment information and access services for pro- duction use based on their needs. Note that the user may be an end-user or even a developer building a new AI by reusing some of the capabilities of other AI or data services, thus creating AI and data supply chains . In such a setting, the user can only provide inputs but not access an AI‚Äôs code or train- ing data. An illustrative example of an independent API di- rectory is ProgrammableWeb (PW 2023) where multiple al- ternatives are available for the same capability (called cate- gories ) or Universal Description, Discovery, and Integration (UDDI) directories for web services (Oasis 2023; Agarwal et al. 2008). The rating information from our proposed AI rating methods would help a consumer select the most suit- able service for their requirements. Note that cloud services from commercial vendors (like Google, Microsoft and Ama- zon) restrict choice of services for a capability to usuallyarXiv:2302.09079v1  [cs.HC]  4 Feb 2023 one forcing the consumer to switch platforms if their needs are not met or bear with inadequate capabilities if the con- sumer needed multiple capabilities of which only some are fulÔ¨Ålled. An independent API directory promotes consumer choice and competition among service (API) providers. Our idea here is to invoke AI services in a controlled eval- uation setup with speciÔ¨Åc input data and observe the output. The results are then statistically assessed and labels are as- signed. These label, also called ratings , which communicate an AI‚Äôs behavior under test conditions, can be attached to its information in a services repository and will be open to pub- lic review. We argue that much like nutrition labels for pack- aged foods, and safety and fuel economy ratings for cars, such ratings for AI behavior would help consumers select AI services based on their application needs. In the rest of the paper, we Ô¨Årst provide background on the problem of AI trust and the transparency through documen- tation approach of building trust. A good example of this is nutrition labeling for prepared foods in the United States which we use as a motivation. We then summarize results from our initial approaches for rating machine translators and chatbots that were found promising. Then, we articulate a more general path forward grounded in a causal setting and discuss several research questions along the way. The Problem of AI Trust Trust is a multi-faceted quality that is studied in the context of humans in humanities, and now increasingly gaining im- portance in AI as systems and humans collaborate closely. In (Varshney 2022), the author identiÔ¨Åes a trustworthy ma- chine learning system as one that can demonstrate four de- sirable properties: sufÔ¨Åcient competence (performance), re- liability, support for human interaction and alignment with human purpose. Among them, while competence (Ô¨Årst) and reliability (second) may be obvious since they are also appli- cable for other engineering systems, support for human in- teraction (third) implies that the system be explainable and alignment with human values (fourth) suggests the system to have qualities like fairness, ethics and morality. There are well-studied approaches to measure the Ô¨Årst two and grow- ing literature in the third (Hoffman et al. 2018) to measure explainability. Hence, we will focus on the fourth category noting that any rating has to cover multiple dimensions. Humans values are motivated by the fact that humans are social agents who live in a community, and ethics and moral- ity are ways to guide our behavior so that both social and individual wellbeing is coherently achieved and maintained. Therefore, we usually constrain our decisions according to moral or ethical values that are suitable for the scenario in which we live. While ethical principles are not universal and can vary according to scenarios, tasks, domains, and cul- tures, one property that is usually included in the realm of ethical behavior is fairness. It is the impartial and just treat- ment or behavior without favoritism or discrimination fair- ness studied both in AI and philosophy (Ntoutsi et al. 2020). The absence of fairness is referred to as bias. From an engineering perspective, trust is an important non-functional requirement in AI development, deployment, and usage. Users and stakeholders should be able to have ajustiÔ¨Åed trust in the AI systems they use, otherwise they will not adopt them in their everyday life. In the same way as humans, AI systems that have an impact on real life envi- ronments or on humans, or that recommend decisions to be made by humans, should be designed and developed in a way that they follow suitable ethical principles as well. A line of work in AI looks at how to teach an AI system to act within ethical or legal guidelines (Wallach and Allen 2008). We will call trust dimensions in human values as issues . For rating methods to be implemented, we only require that automated issue checkers should exist to measure the issue on a a given AI. Previously, we had used the issue checkers of abusive language (AL) (Davidson et al. 2017), bias (B) (Hutto, Folds, and Appling 2015), information leakage (IL) (Henderson et al. 2017), complexity checker implemented by (Liao, Srivastava, and Kapanipathi 2017) (CC) in our work on rating chatbots (Srivastava et al. 2020). We will fo- cus on bias. Although fairness has been studied extensively in the AI literature for both bias detection and mitigation, there is no end in sight on how to achieve it satisfactorily. As per a recent taxonomy of bias in a AI system pipeline (Srini- vasan and Chander 2021), a system can exhibit bias during data creation, problem formulation, data analysis, and vali- dation and testing biases. To detect bias, one needs to select a measure of fairness from the many proposed in literature (Ntoutsi et al. 2020; Verma and Rubin 2018). They can be broadly grouped into the following categories: (a) individ- ual fairness deÔ¨Ånitions which measure whether similar in- dividuals are treated similarly, (b) group fairness deÔ¨Ånitions where statistical properties on sub-groups of the population are measured, and (c) hybrid where a combination is mea- sured. Example of individual fairness is causal discrimina- tionwhich requires a model to produce the same output for any two instances that have the exact same attributes and example of group fairness is equalized odds which requires false positive and negative rates to be similar amongst pro- tected and non-protected groups. However, it is well known that deÔ¨Ånitions prevalent in the machine learning literature are not what are legally enforceable (Xiang and Raji 2019), and hence, this continues to be an ongoing research area. Trust in Text-based AI Services For space reasons, we now narrow the discussion to text- based AI but similar issues have been found for AI working with other data formats. Bias in Machine Translators Machine translators are a popular form of AI used widely in applications. In (Prates, Avelar, and Lamb 2018), the authors test Google Trans- lateon sentences like ‚ÄùHe/She is an Engineer‚Äù where oc- cupation phrase ( Engineer in example) is from those rec- ognized by the U.S. Bureau of Labor Statistics (BLS) (US- BLS 2023). They compare frequency of female, male and gender-neutral pronouns in the translated output with BLS data about expected frequency. In another paper (Font and Costa-juss `a 2019), the authors look at a transformer archi- tecture for machine translation, Open NMT translator1and 1At http://opennmt.net/ two debiasing word embeddings. They consider sentences of the form: ‚ÄúI‚Äôve known fher/himgproper nounfor a long time, my friend works as fa/ angoccupation.‚Äù They consider translation from English to Spanish and look at the linguistic form of the noun phrase used for friend based on occupation . They make a list of 1019 occupations publicly available2. In (Srivastava and Rossi 2018, 2020), we con- sider the translation setting from English to an intermedi- ate language, and then from it back to English. Inputs are primed with gendered pronouns and checked for variation. In all the settings, signiÔ¨Åcance differences are found which is evidence of bias behavior based on group fairness deÔ¨Åni- tions. Bias in Sentiment Assessment Systems Another popu- lar form of AI is a sentiment analysis system (SAS) which given a piece of text, assigns a score conveying the sentiment and emotional intensity expressed by it. In (Kiritchenko and Mohammad 2018), the authors experimented with sentiment analysis systems that participated in SemEval-2018 com- petition. They created the Equity Evaluation Corpus (EEC) dataset which consists of 8,640 English sentences where one can switch a person‚Äôs gender or choose proper names typical of people from different races. They also experimented with Twitter datasets. The authors found that up to 75% of the sentiment systems can show variations in sentiment scores, which can be perceived as bias based on gender or race. While much of the work in sentiments has happened for English, there is growing interest in other languages. In (Dashtipour et al. 2016), the authors re-implement sentiment methods from literature in multiple languages and reported accuracy lower than published. Since multilingual SASs of- ten use machine translators which anyway can be biased, and further acquiring training data in non-English languages is an additional challenge, we hypothesize that multilingual SASs could exhibit gender bias in their behavior. Adversarial Attacks Using Sentiments The instability of SAS is often a source of adversarial attacks in AI sys- tems. This can manifest as adversarial examples (Goodfel- low, Shlens, and Szegedy 2015), which modify test inputs into a model to cause it to produce incorrect outputs (senti- ments for SAS), or backdoor attacks (Gu et al. 2019) which compromise the model by poisoning the training data and/or modifying the training. A more sophisticated form of attack is proposed in (Bagdasaryan and Shmatikov 2021) where a high-dimensional AI model, like for summarization, outputs positive summaries of any text that mentions the name of some ‚Äúmeta-backdoor‚Äù like individual or organization. Handling Bias There have been prior efforts to address bias by improving handling of training data, improved meth- ods or post-processing on the AI system‚Äôs output (Ntoutsi et al. 2020). However, the research in bias in NLP systems has shortcomings. In (Blodgett et al. 2020), the authors re- port that quantitative techniques for measuring or mitigat- ing ‚Äùbias‚Äù are poorly matched to their motivations and ar- gue for the need to conduct studies in the social context of real world. Furthermore, work is needed to align technical 2At: https://github.com/joelescudefont/genbiasmtdeÔ¨Ånitions with what is legally enforceable (Xiang and Raji 2019). There is also increased interest in exploring causal ef- fects for AI systems. For natural language processing (NLP), (Feder et al. 2021) provides a survey on estimating causal effects on text. Similarly, causal reasoning is being used for object recognition systems (Mao et al. 2021) and recommen- dation systems (Xu et al. 2021). But they do not consider using such analyses for communicating trust issues. We now look at the new idea of assessing and rating AI services from a third party perspective in a black-box setting which we discuss next. Transparency Through Documentation To promote user trust in a product or service (collectively called an offering), transparency is recognized as a promis- ing technique. It can be created by documenting either the process of creating and delivering the offering or document- ing characteristics of its output. It can be documented by the provider of the offering, consumer or an independent third party. For example, ratings for fuel economy of cars and energy consumption of electrical devices are created by manufacturers while the Software Engineering Institute (SEI) Capability Maturity Model certiÔ¨Åcation of a software organisation is produced for the process of software devel- opment by an independent organization. In AI, datasheets has been introduced as a form of documentation to promote transparency (Gebru et al. 2018). Lessons From a Workable Solution - Nutrition Labeling for Prepared Foods Most prepared foods in the United States are required to carry a label conveying its nutritional information (FDA 2022; UC-Davis 2022). They are primarily regulated by the US Food and Drug Administration (FDA); other agencies may regulate too based on food types like meats and poul- try by the United States Department of Agriculture (USDA) Food Safety and Inspection Service (FSIS). The templates for the label are created by the regulator along with guide- lines for how to assess food for their nutritional value, but the food manufacturer places the labels on the food. Such labels have been found to be helpful to consumers. For example, one study found that ‚Äù76 percent of adults read the label when purchasing packaged foods, and that more than 60 percent of consumers use the information about sugar that the label provides‚Äù (UCS 2016). It is a differ- ent matter that nutrition labeling is a work-in-progress with requirements evolving and the industry sometimes trying to pushback and dilute the labeling requirements. The AI trust labels we envisage will similarly help the users make informed decisions while selecting and using AI. However, they would be different from food labels in that the labels would be created by independent third-parties, i.e., who are neither the AI developers nor consumers. They are created by subjecting AI to speciÔ¨Åc inputs, analysing the outputs in the context of inputs given, and assigning labels. We now consider two speciÔ¨Åc efforts in this direction - for machine translators and chatbots, respectively. Initial Approach - Rating Machine Translators In (Srivastava and Rossi 2020, 2018), we proposed a tech- nique to rate automated machine language translators for gender bias. Further, we created visualizations to commu- nicate ratings (Bernagozzi et al. 2021b) to users, and con- ducted user studies to determine how users perceive trust in the presence of such ratings (Bernagozzi et al. 2021a). We now summarize the method which is illustrated in Fig- ure 2. First, unbiased and biased data is prepared for transla- tion with respect to the number of gender variables. For this purpose, input is made up of two sentences containing one gender place-holder each. Its format is: Gender-pronoun is aOccupation-Performer .Gender-pronounis a Occupation-Performer . We chose this two-sentence for- mat so that the text could include multiple gender values, and expose in a more articulate way the possible bias trans- lation issues. An example is - She is a Florist. He is a Gar- dener . In the Ô¨Årst stage (T1), the AI system under consideration is given unbiased input and its output is analyzed. If the out- put is biased, the system is rated Biased (BS) under that test. This means that the system introduces bias even when the input is unbiased. This is the worst rating that could come out of the procedure. Figure 2: A 2-step approach to rate an AI service from (Sri- vastava and Rossi 2020). If on the contrary the output is unbiased, the system is now subjected to biased input (T2) and its output analyzed. If the output is biased, the system is rated Data-Sensitive Bi- ased System (DSBS). This means that the system does not introduce bias but it follows whatever bias is present in the input. If instead the output is unbiased, given biased input in the testing stage T2, then the method would output the rat- ing Unbiased Compensated System (UCS). This is the best rating and it means that the system not only does not intro- duce bias, but it does not even follow the bias of the input data, and is instead able to compensate for possible bias in the input data.Ai? A jBS UCS DSBS BS BS/ UCS/ DSBS UCS BS UCS BS UCS DSBS DSBS BS UCS DSBS Table 1: Sequential Composition of APIs as described in (Srivastava and Rossi 2020). The labels of the rows are for the Ô¨Årst service, while the labels of the columns are for the second service. We also introduced a method to rate composite AI ser- vices of the form Ai? A j, where ?is sequential composi- tion. The method is a decision table shown in Table 1. Here, the predecessor service is shown in rows and the successor service is shown in column. So, if a biased system Aiis sequentially composed with another biased system Aj, the outcome of the composite service can be biased (BS), unbi- ased compensation (UCS) or data-sensitive biased (DSBS). If the predecessor is DSBS, the rating of the composite will depend on the rating of the successor. Initial Approach - Rating of Chatbots In (Srivastava et al. 2020), we introduced a new approach to rate dialog systems, i.e., chatbots, based on their behavior with respect to a list of conÔ¨Ågurable k issues, such as bias (B), abusive language (AL), conversation complexity (CC), and information leakage (IL), for all of which, checkers are available in literature. The system is conceptually illustrated in Figure 3. Its inputs are the issues to be considered, the access details of the chatbot to be rated so that they can be invoked (online testing) or a dataset containing past conver- sation using the chatbot (ofÔ¨Çine testing) and user proÔ¨Åles with respect to which test results have to be assessed. User proÔ¨Åles capture relative weightage of issues from the per- spective of a group of users like privacy-conscious users. The output is a rating for the chatbot, conveying its level of trustworthiness for a speciÔ¨Åc user or user‚Äôs proÔ¨Åle. The system can assign a type of rating, conveying a: Trust- worthy agent (Type-1) , which starts out trusted with some score (Low, Medium or High) and remains so even after considering all variants of models, data, and users; Model- sensitive trustworthy agent (Type-2) , which can be swayed by the selection of a model to exhibit a biased behavior while generating its responses; Data-sensitive trustworthy agent (Type-3) , which can be swayed by changing training data to exhibit a biased behavior; User-sensitive trustwor- thy agent (Type-4) , which can be swayed by interaction with (human) users over time to exhibit a biased behavior; or a Multi-sensitive agent (Type-N) , which can be swayed with a combination of factors. See (Srivastava et al. 2020) for fur- ther details. Challenges in Rating Multimodal AI Systems of the Future We now Ô¨Årst look at signiÔ¨Åcant AI applications that rely on users to trust them for success, and then draw challenges for rating methods. We will call them trust critical applications . Figure 3: Architecture of the chatbot rating system presented in (Srivastava et al. 2020) The Ô¨Årst area we consider is food. Food is not only an innate psychological need for human life, it is also a key factor driving a society‚Äôs health and economic well-being. Maintaining a healthy diet is essential for good health and nutrition as it prevents many chronic non-communicable dis- eases. The importance of diet and food has attracted increas- ing attention, leading to the coining of a new term called as precision nutrition (Chatelan, Bochud, and Frohlich 2019; Wang and Hu 2018) - which seeks to better the health of a person through precise dietary intake based on unique char- acteristics of an individual such as DNA, race, gender, and lifestyle habits. The process of cooking is a key enabler for precision nutrition, which has led to extensive research in building and deploying decision-support artiÔ¨Åcial intelli- gence (AI) tools - varying from information retrieval (IR) using interfaces to task-oriented chatbots (Min et al. 2019; Jiang and Min 2020; Pallagani et al. 2022; Joshi et al. 2022). The second area we consider is using AI for disseminating ofÔ¨Åcial information about elections, and in particular among senior citizens (Narayanan et al. 2021). While senior citi- zens (individuals 65+) exhibit some of the highest levels of voter turnout (PewResearchCenter 2018), many potentially willing voters are unclear about disability accommodations at election sites (UnitedHealthRankings 2022), and some are uncertain about the basics of where and how to register and to vote (Brandon 2020). While government entities have on- line resources to educate voters, senior citizens are still dis- proportionately prone to believe and share false information. A recent study suggested that seniors are seven times more likely to share articles from misleading or false websites than individuals under 29 (Guess, Nagler, and Tucker 2019). In this context, there is initial evidence that a chatbot could help drive voter participation: both anecdotally with ofÔ¨Å- cial information about election processes (Muppasani et al. 2022) as well as in an experiment during a 2019 Wisconsin statewide election with a simple reminder to vote and pro- viding logistical details (Mann 2021). Research Challenges We now identify and discuss key research challenges to make rating feasible for trust-critical applications like thoseidentiÔ¨Åed above dealing with human living and governance. Challenge 1: Data availability . To assess an AI system, we need to invoke it using data that is independently obtained. Two promising directions of research here are of creating synthetic data generators, like (Patki, Wedge, and Veera- machaneni 2016), and sampling data from large data repos- itories like Imagenet (Deng et al. 2009) and Wikipedia. One could also use datasheets as a way to promote transparency of data used during testing (Gebru et al. 2018). Challenge 2: Assessing trust behavior . We assume that each trust issue has a corresponding issue checker available. However, identifying, implementing and improving check- ers is an ongoing area of research. We referred to checkers for abusive language (AL) (Davidson et al. 2017; Wang et al. 2014), bias (B) (Hutto, Folds, and Appling 2015), infor- mation leakage (IL) (Henderson et al. 2017) and conversa- tion complexity checker (Liao, Srivastava, and Kapanipathi 2017) (CC). For NLP models, (Ribeiro, Singh, and Guestrin 2018) presented a method to generate semantically equiva- lent test cases that can Ô¨Çip the prediction of learning models and can serve as a principled checker for many issues. Challenge 3: Assigning labels . Although it is desirable to create rating labels with clear and consistent semantics, it is an open question what these should be. For example, a rating that just differentiates between unbiased and biased behavior, leaving others as undecided, may leave too many cases undecided for it to be of practical use. In the two pre- sented cases, the ratings for machine translators and chatbots are useful from the perspective of individual AIs, but do not generalize. It is also unclear whether the ratings should con- vey only statistically rigorous information or also socially relevant information. Challenge 4: Handling composition . Real world AI appli- cations use a variety of data modalities and AIs. For a rat- ing method to scale to large applications, the rating methods have to be compositional so that the rating for an aggregate AI could be computed from that of its parts rather than cre- ating a large testing setup taking into account every combi- nation of data and AI. Challenge 5: Validating ratings with users perception . Since the ratings created by automated methods are intended to help people make decisions about selecting and using AI, one should also evaluate them in user trials for effectiveness. In the presented case of machine translators (Bernagozzi et al. 2021a,b), we created a visualization tool for rating and conducted a detailed study to Ô¨Ånd how users relate to bias in translators and whether bias ratings were useful (which they were). More such studies are needed to connect the social and technical considerations involved in using AI. Towards a Principled Multimodal Rating Approach in a Causal Setup We consider a causal testing framework where inputs to an AI cause changes to its outputs. We adopt the conventions of causal models , a mathematical modeling technique to repre- sent and analyze cause and effect relationships (Pearl 2009). In a causal model, if both the input and the output have a common cause, then it forms a spurious correlation between Figure 4: Our proposed causal model them, and also leads to the formation of a back-door path (Pearl 2009). This behavior is called confounding effect and the common cause is known as a confounder. The process of removing this confounding effect is called deconfounding . Now, formal deÔ¨Ånitions notwithstanding, let us consider an AI system to be fair if none of the protected attributes are affecting the output of the system. Using our causal frame- work, one can estimate the effect of protected attributes on the output of the system. Our approach will consist of the following main steps: (1) experimental apparatus consisting of data and AIs to be used, (2) creating a causal framework, (3) performing statistical tests to assess causal dependency, (4) assigning ratings. To illustrate, consider the example of Sentiment Analyz- ing Systems (SASs) which, as discussed earlier, have issues of bias (Kiritchenko and Mohammad 2018). When given a piece of text, SASs assign a score to the text indicating whether the given text has a positive, negative or neutral sen- timent (valence). Figure 4 shows a causal model which cap- tures the causal relations between input and output and two protected variables. The causal link from input (containing Emotion Word ) to output (generating Sentiment ) indicates that the emotion word affects the sentiment given by an SAS. We colored the arrow green to indicate that this causal link is desirable i.e., input should be the only attribute affecting the output. The causal links from the protected attributes to the output ( Sentiment ) is colored red to indicate that it is an undesirable path. If any of the protected attributes are affect- ing the Sentiment , then the system is said to be biased. The ‚Äô?‚Äô indicates that we will be testing whether these attributes inÔ¨Çuence the sentiment of an SAS and the Ô¨Ånal rating would be based on the validity of these tests. Now, we prepare test inputs that utilize the different causal relationships possible between the protected variable and input (e.g., emotion words) and between themselves. The Figure shows two protected attributes, race and gender, and others can be seamlessly added. The possible values for gender could be male, female and NA, and for race could be European, African-American and NA. Here, NA means the value of the attribute is not revealed by the choice of words. Examples are: He was angry (gender = male, race = NA), They are angry (gender = NA, race = NA), Amanda is an- gry(gender = female, race = African-American). Here angry is an example of an emotion word and pronouns/ (proper) nouns are taken from (Kiritchenko and Mohammad 2018). Given statistically sufÔ¨Åcient inputs (values of protected at-tributes and emotion words) and their outputs, we test the validity of each of the causal links in the proposed causal model by computing the sentiment distributions across each of the classes of the protected attributes and the decon- founded distribution of sentiment across each of the emotion words (when the protected attributes act as confounders) to give a rating to the AI system. A signiÔ¨Åcant difference, mea- sured using statistical tests, in the distribution across each of the classes of protected attributes would indicate pres- ence of bias. Based on the difference between these distri- butions, one could assign/ implement a rating scheme (like 3-valued low, medium or high) to the system that takes into account the degree of difference found. Similarly, the differ- ence between the deconfounded probability distribution and confounded probability distribution of sentiment across dif- ferent categories of emotion words varying due to the pres- ence of back-door path would denote the bias present in the system. The higher the difference, the more biased the sys- tem will be. More details about the method and evaluation on a variety of SAS approaches are available in (Lakkaraju, Srivastava, and Valtorta 2023). Discussion Note that our causal setup is not unique to any particular type of AI (like SAS described above). In fact, it could be generalized for testing other AI like object recognition systems (Mao et al. 2021), recommendation systems (RS) (Wang et al. 2021; Xu et al. 2021) and even estimate bias in structured datasets like German Credit (Dua and Graff 2017). But rather than aiming to remove bias in a statisti- cal sense without understanding its social impact, we use the assessment for communicating trust information so that humans can take AI usage decisions. Still, much needs to be done in realizing vision of rating multimodal AI with respect to the identiÔ¨Åed research challenges so that AI could be used in real world applications in general, and trust-critical appli- cations in particular. Conclusion In this paper, we presented a vision of assessing and rating AI services based on the black-box setting that they are com- monly available in the marketplace, i.e., without the con- sumer having access to AI‚Äôs code or training data. We re- viewed concerns about AI trust, discussed initial approaches of creating ratings for machine translators and chatbots, and laid out challenges in creating a more general approach. Then, we described a promising testing setup for AI for mea- suring causal dependencies between the combination of pro- tected features and input with output, and how the depen- dency measurement could be the basis of ratings. We argue that this approach would be general to handle composition of multiple data formats as well as multiple AI models that are needed for trust-critical AI applications of the future. References Agarwal, V .; ChaÔ¨Çe, G.; Mittal, S.; and Srivastava, B. 2008. Understanding Approaches for Web Service Composition and Execution. In Proceedings of the 1st Bangalore An- nual Compute Conference , COMPUTE ‚Äô08. New York, NY , USA: Association for Computing Machinery. ISBN 9781595939500. Antun, V .; Renna, F.; Poon, C.; Adcock, B.; and Hansen, A. C. 2020. On instabilities of deep learning in image re- construction and the potential costs of AI. Proceedings of the National Academy of Sciences , 117(48): 30088‚Äì30095. Bagdasaryan, E.; and Shmatikov, V . 2021. Spinning Language Models for Propaganda-As-A-Service. CoRR , abs/2112.05224. Bernagozzi, M.; Srivastava, B.; Rossi, F.; and Usmani, S. 2021a. Gender Bias in Online Language Translators: Visu- alization, Human Perception, and Bias/Accuracy Trade-offs. InIn IEEE Internet Computing, Special Issue on Sociotech- nical Perspectives, Nov/Dec . Bernagozzi, M.; Srivastava, B.; Rossi, F.; and Usmani, S. 2021b. VEGA: a Virtual Environment for Exploring Gen- der Bias vs. Accuracy Trade-offs in AI Translation Services. Proceedings of the AAAI Conference on ArtiÔ¨Åcial Intelli- gence , 35(18): 15994‚Äì15996. Blodgett, S. L.; Barocas, S.; au2, H. D. I.; and Wal- lach, H. 2020. Language (Technology) is Power: A Critical Survey of ‚ÄùBias‚Äù in NLP. In On Arxiv at: 2https://arxiv.org/abs/2005.14050 . Brandon, E. 2020. Why older cit- izens are more likely to vote. In https://money.usnews.com/money/retirement/aging/articles/why- older-citizens-are-more-likely-to-vote . Chatelan, A.; Bochud, M.; and Frohlich, K. L. 2019. Preci- sion nutrition: hype or hope for public health interventions to reduce obesity? International journal of epidemiology , 48(2): 332‚Äì342. Dashtipour, K.; Poria, S.; Hussain, A.; Cambria, E.; Hawalah, A. Y . A.; Gelbukh, A.; and Zhou, Q. 2016. Mul- tilingual Sentiment Analysis: State of the Art and Indepen- dent Comparison of Techniques. In Cognitive computation vol. 8: 757-771. doi:10.1007/s12559-016-9415-7 . Davidson, T.; Warmsley, D.; Macy, M.; and Weber, I. 2017. Automated Hate Speech Detection and the Problem of Of- fensive Language. In Proceedings of the 11th International AAAI Conference on Web and Social Media , ICWSM ‚Äô17. Deng, J.; Dong, W.; Socher, R.; Li, L.-J.; Li, K.; and Fei- Fei, L. 2009. ImageNet: A large-scale hierarchical image database. In 2009 IEEE Conference on Computer Vision and Pattern Recognition , 248‚Äì255. Dua, D.; and Graff, C. 2017. UCI Machine Learning Repos- itory. FDA. 2022. Food Labeling & Nutrition. In https://www.fda.gov/food/food-labeling-nutrition . Feder, A.; Keith, K. A.; Manzoor, E.; Pryzant, R.; Sridhar, D.; Wood-Doughty, Z.; Eisenstein, J.; Grimmer, J.; Reichart, R.; Roberts, M. E.; Stewart, B. M.; Veitch, V .; and Yang, D. 2021. Causal Inference in Natural Language Processing: Estimation, Prediction, Interpretation and Beyond. CoRR , abs/2109.00725.Font, J. E.; and Costa-juss `a, M. R. 2019. Equalizing Gender Biases in Neural Machine Translation with Word Embed- dings Techniques. CoRR , abs/1901.03116. Gebru, T.; Morgenstern, J.; Vecchione, B.; Vaughan, J. W.; Wallach, H.; Daum ¬¥e III, H.; and Craw- ford, K. 2018. Datasheets for Datasets. In On Arxiv at: http://arxiv.org/abs/1803.09010 . Cite arxiv:1803.09010Comment: Working Paper, comments are encouraged. Goodfellow, I.; Shlens, J.; and Szegedy, C. 2015. Explain- ing and Harnessing Adversarial Examples. In International Conference on Learning Representations . Gu, T.; Liu, K.; Dolan-Gavitt, B.; and Garg, S. 2019. Bad- Nets: Evaluating Backdooring Attacks on Deep Neural Net- works. IEEE Access , 7: 47230‚Äì47244. Guess, A.; Nagler, J.; and Tucker, J. 2019. Less than you think: Prevalence and predictors of fake news dissemination on Facebook. Science Advances , 5(1): eaau4586. Henderson, P.; Sinha, K.; Angelard-Gontier, N.; Ke, N. R.; Fried, G.; Lowe, R.; and Pineau, J. 2017. Ethical Challenges in Data-Driven Dialogue Systems. CoRR , abs/1711.09050. Hoffman, R. R.; Mueller, S. T.; Klein, G.; and Litman, J. 2018. Metrics for Explainable AI: Challenges and Prospects. InOn Arxiv at https://arxiv.org/abs/1812.04608 . Hutto, C. J.; Folds, D. J.; and Appling, S. 2015. Compu- tationally Detecting and Quantifying the Degree of Bias in Sentence-Level Text of News Stories. In The First Interna- tional Conference on Human and Social Analytics (HUSO) . Jiang, S.; and Min, W. 2020. Food Computing for Multime- dia. In Proceedings of the 28th ACM International Confer- ence on Multimedia , 4782‚Äì4784. Joshi, H. C.; Yadav, U.; Srivastava, B.; and Singh, R. M. 2022. Learning About People‚Äôs Attitude Towards Food Available in India and Its Implications for Fair AI-based Systems. In ICDM Workshop on AI for Nudging and Per- sonalization (WAIN) . Kiritchenko, S.; and Mohammad, S. 2018. Examining Gen- der and Race Bias in Two Hundred Sentiment Analysis Sys- tems. In Proceedings of the Seventh Joint Conference on Lexical and Computational Semantics , 43‚Äì53. New Orleans, Louisiana: Association for Computational Linguistics. Koenecke, A.; Nam, A.; Lake, E.; Nudell, J.; Quartey, M.; Mengesha, Z.; Toups, C.; Rickford, J. R.; Jurafsky, D.; and Goel, S. 2020. Racial disparities in automated speech recog- nition. Proceedings of the National Academy of Sciences , 117(14): 7684‚Äì7689. Lakkaraju, K.; Srivastava, B.; and Valtorta, M. 2023. Rating Sentiment Analysis Systems for Bias through a Causal Lens. InUnder review . Liao, Q. V .; Srivastava, B.; and Kapanipathi, P. 2017. A Measure for Dialog Complexity and its Application in Streamlining Service Operations. CoRR , abs/1708.04134. Mann, C. B. 2021. Can Conversing with a Computer In- crease Turnout? Mobilization Using Chatbot Communica- tion. Journal of Experimental Political Science , 8(1): 51‚Äì62. Mao, C.; Cha, A.; Gupta, A.; Wang, H.; Yang, J.; and V on- drick, C. 2021. Generative interventions for causal learning. InProceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition , 3947‚Äì3956. Min, W.; Jiang, S.; Liu, L.; Rui, Y .; and Jain, R. 2019. A sur- vey on food computing. ACM Computing Surveys (CSUR) , 52(5): 1‚Äì36. Muppasani, B.; Pallagani, V .; Lakkaraju, K.; Lei, S.; Srivas- tava, B.; Robertson, B.; Hickerson, A.; and Narayanan, V . 2022. On Safe and Usable Chatbots for Promoting V oter Participation. Narayanan, V .; Robertson, B. W.; Hickerson, A.; Srivastava, B.; and Smith, B. W. 2021. Securing social media for se- niors from information attacks: Modeling, detecting, inter- vening, and communicating risks. In The Third IEEE In- ternational Conference on Cognitive Machine Intelligence (IEEE CogMI) . Ntoutsi, E.; Fafalios, P.; Gadiraju, U.; IosiÔ¨Ådis, V .; Nejdl, W.; Vidal, M.-E.; Ruggieri, S.; Turini, F.; Papadopoulos, S.; Krasanakis, E.; Kompatsiaris, I.; Kinder-Kurlanda, K.; Wagner, C.; Karimi, F.; Fernandez, M.; Alani, H.; Berendt, B.; Kruegel, T.; Heinze, C.; Broelemann, K.; Kasneci, G.; Tiropanis, T.; and Staab, S. 2020. Bias in Data-driven AI Systems ‚Äì An Introductory Survey. In On Arxiv at: https://arxiv.org/abs/2001.09762 . Oasis. 2023. Universal Description, Discovery and Integration v3.0.2 (UDDI). In https://www.oasis- open.org/specs/index.php#uddiv3.0.2; Last accessed 19 Jan 2023. Pallagani, V .; Ramamurthy, P.; Khandelwal, V .; Venkatara- manan, R.; Lakkaraju, K.; Aakur, S. N.; and Srivastava, B. 2022. A Rich Recipe Representation as Plan to Support Ex- pressive Multi Modal Queries on Recipe Content and Prepa- ration Process. Patki, N.; Wedge, R.; and Veeramachaneni, K. 2016. The Synthetic Data Vault. In 2016 IEEE International Confer- ence on Data Science and Advanced Analytics (DSAA) , 399‚Äì 410. Pearl, J. 2009. Causality . Cambridge university press. PewResearchCenter. 2018. An examination of the 2016 electorate, based on validated voters. In https://www.pewresearch.org/politics/2018/08/09/an- examination-of-the-2016-electorate-based-on-validated- voters/ . Prates, M. O. R.; Avelar, P. H. C.; and Lamb, L. C. 2018. As- sessing Gender Bias in Machine Translation - A Case Study with Google Translate. CoRR , abs/1809.02208. PW. 2023. Programmable Web. In https://www.programmableweb.com/apis; Last accessed 19 Jan 2023. Ribeiro, M. T.; Singh, S.; and Guestrin, C. 2018. Seman- tically Equivalent Adversarial Rules for Debugging NLP models. In Proceedings of the 56th Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers) , 856‚Äì865. Association for Computational Linguis- tics.Seedat, F.; and Taylor-Phillip, S. 2022. UK guid- ance on evaluating AI for use in breast screening. In https://nationalscreening.blog.gov.uk/2022/08/01/guidance- on-evaluating-ai-for-use-in-breast-screening/ . Srinivasan, R.; and Chander, A. 2021. Biases in AI Systems. InCommunications of the ACM, August 2021, Vol. 64 No. 8, Pages 44-49, DOI: 10.1145/3464903 . Srivastava, B. 2021. Did chatbots miss their ‚ÄúApollo Mo- ment‚Äù? Potential, gaps, and lessons from using collaboration assistants during COVID-19. In Patterns, Volume 2, Issue 8, 100308 . Srivastava, B.; and Rossi, F. 2018. Towards Composable Bias Rating of AI Systems. In 2018 AI Ethics and Society Conference (AIES 2018), New Orleans, Louisiana, USA, Feb 2-3. Srivastava, B.; and Rossi, F. 2020. Rating AI Systems for Bias to Promote Trustable Applications. In IBM Journal of Research and Development . Srivastava, B.; Rossi, F.; Usmani, S.; and Bernagozzi, M. 2020. Personalized Chatbot Trustworthiness Ratings. In IEEE Transactions on Technology and Society. UC-Davis. 2022. Food Labeling. In https://ucfoodsafety.ucdavis.edu/processing- distribution/regulations-processing-food/food-labeling . UCS. 2016. Transparency in Food Labeling. In https://www.ucsusa.org/resources/transparency-food- labeling . UnitedHealthRankings. 2022. Senior Report: V ote Participation - Age 65+ (Midterm). In https://www.americashealthrankings.org/explore/senior/ measure/voter turnout Senior/state/ALL . US-BLS. 2023. List of occupations. In https://www.bls.gov/bls/occupation.html; Last accessed 19 Jan 2023. Varshney, K. R. 2022. Trustworthy Machine Learning. IS- BNL 979-8411903959 . Verma, S.; and Rubin, J. 2018. Fairness DeÔ¨Ånitions Explained. In Proceedings of the International Work- shop on Software Fairness , FairWare ‚Äô18, 1‚Äì7. New York, NY , USA: Association for Computing Machinery. ISBN 9781450357463. Wallach, W.; and Allen, C. 2008. Moral Machines: Teaching Robots Right from Wrong . USA: Oxford University Press, Inc. ISBN 0195374045. Wang, D. D.; and Hu, F. B. 2018. Precision nutrition for prevention and management of type 2 diabetes. The lancet Diabetes & endocrinology , 6(5): 416‚Äì426. Wang, W.; Chen, L.; Thirunarayan, K.; and Sheth, A. P. 2014. Cursing in English on Twitter. In CSCW . Wang, W.; Feng, F.; He, X.; Wang, X.; and Chua, T.-S. 2021. Deconfounded Recommendation for Alleviating Bias Am- pliÔ¨Åcation. In Proceedings of the 27th ACM SIGKDD Con- ference on Knowledge Discovery &; Data Mining , KDD ‚Äô21, 1717‚Äì1725. New York, NY , USA: Association for Com- puting Machinery. ISBN 9781450383325. Xiang, A.; and Raji, I. D. 2019. On the Legal Com- patibility of Fairness DeÔ¨Ånitions. In On Arxiv at: https://arxiv.org/abs/1912.00761 . Xu, S.; Tan, J.; Heinecke, S.; Li, J.; and Zhang, Y . 2021. Deconfounded Causal Collaborative Filtering","cs.HC, cs.AI, I.2.7; D.2.5; G.3",Arxiv
7,Adaptive Motion Gaming AI for Health Promotion,"Pujana Paliyawan, Takahiro Kusano, Yuto Nakagawa, Tomohiro Harada, Ruck Thawonmas",2017-04-04 11:29:02+00:00,http://arxiv.org/pdf/1704.00961v1,"This paper presents a design of a non-player character (AI) for promoting balancedness in use of body segments when engaging in full-body motion gaming. In our experiment, we settle a battle between the proposed AI and a player by using FightingICE, a fighting game platform for AI development. A middleware called UKI is used to allow the player to control the game by using body motion instead of the keyboard and mouse. During gameplay, the proposed AI analyze health states of the player; it determines its next action by predicting how each candidate action, recommended by a Monte-Carlo tree search algorithm, will induce the player to move, and how the player's health tends to be affected. Our result demonstrates successful improvement in balancedness in use of body segments on 4 out of 5 subjects.","   Adaptive Motion Gaming AI for Health Promotion  Pujana Paliyawan, Takahiro Kusa no, Yuto Nakagawa, Tomohiro Hara da, Ruck Thawonmas   Intelligent Computer Entertainment Lab, Graduate School of Info rmation Science and Engineering,   Ritsumeikan University, Shiga, Japan   Pujana.P@gmail.com, is0212kf@ed.ritsumei.ac.jp, is0127kh@ed.rit sumei.ac.jp,   harada@ci.ritsumei.ac.jp, ruck@is.ritsumei.ac.jp      Abstract  This paper presents a design of  a non-player character (AI)  for promoting balancedness in use of body segments when  engaging in full-body motion gaming. In our experiment,  we settle a battle between the proposed AI and a player by  using FightingICE, a fighting game platform for AI devel- opment. A middleware called UKI is used to allow the play- er to control the game by using body motion instead of the  keyboard and mouse. During gameplay, the proposed AI  analyze health states of the player; it determines its next ac-tion by predicting how each candidate action, recommended by a Monte-Carlo tree search algorithm, will induce the player to move, and how the player‚Äô health tends to be af-fected. Our result demonstrates successful improvement in  balancedness in use of body seg ments on 4 out of 5 subjects.  Introduction    Motion gaming by using motion capture devices such as  Kinect has been a center of attention for health promotion  through the means of game playing. However, although  motion gaming provides health benefits, we should also  pay attention to its adverse effect such as repetitive strain  injury and muscle imbalance that might happen when some  parts of the body are too much used (R√∂ssler et al. 2014).  For development of sustaining well-being, it is also im- portant to balance use between the right and the left sides  of the body; it is noted that muscle imbalance‚Äîwhich  leads to discomfort, injury, and some other physical ail- ments causing aches and pains‚Äîis commonly found in  those who perform one-sided-type sports such as tennis  (Maffetone 2015).    As a solution, we propose an AI that encourages the  player to use the left and the right sides of the body in a  balance fashion during motion gaming. The proposed AI  can recognize any behavior of the player; it uses previously  played gameplay data to generate the table of probability  for predicting a counteraction likely to be taken by the  player when it performs a certain action. Because the play-er executes in-game actions1 by using body motion, AI can  encourage the player to move certain segments of the body  by inducing him or her to perform a desired counteraction.  The proposed AI monitors accumulated movement  amounts (so called ‚Äúmomentums‚Äù and denoted as mms) on  the player‚Äôs body segments, and its goal is to balance the  mms of those segments on the left side to those on the right  side of the body.    In this experiment, a fighting game called FightingICE  is used for settling a battle between the player and the pro- posed AI. Because FightingICE does not support Kinect  input, a middleware called UKI (Paliyawan and  Thawonmas 2017) is used for integration of full-body con- trol with the game. We add new mechanisms to UKI for  monitoring the player‚Äôs movement and assessing the state  of player health during gameplay; these data are fed as  input to the AI. The proposed AI searches for an action that  optimally promotes the player health.  Backgrounds    Games for Health and Motion Gaming   Throughout the history of games research, it has been as- serted that video games can be used to offer an effective  and attractive means for providing exercise and rehabilita- tion to people of any age (Baranowski et al. 2016). Exer- games is an important innovator and leading voice in  healthcare. Nevertheless there are also, of course, critics  and questions on whether it is really necessary and effec- tive while we still have traditional means of exercise such  as gym-based exercise and sports (Barry et al. 2016).   In order to answer the above question and understand  how G4H became this successful, we will look back to  problems and facts underlying today‚Äôs society. It was re- ported that only about 20% of American adults meet Phys- ical Activity Guidelines and less than 30% of high school                                                    1 action: an in-game attack or move, such as light punch and hea vy punch.  In this paper, ‚Äúactions‚Äù refer to AI‚Äôs actions, while the playe r‚Äôs actions are  referred to as ‚Äúcounteractions.‚Äù  students get at least 60 minutes of physical activity every  day (CDC). Childhood obesity has more than doubled in  children and quadrupled in adolescents in the past 30 years; one-third of children and adolescents are overweight  or obese (CDC). Looking on other statistics, about a half of  Americans (155 millions) play video games and about 29%  of videogame players are 18 years old or younger (ESA  2015). These facts are telling us that use of video games is  potential means that we can make exercises reachable to  these people.    It is important to understand that G4H is not designed to be a replacement of traditional exercises or sports, but as a  substitute for sedentary activities, especially those spent  using a device such as a computer, television, or games  console (Raymond 2013).  Using many types of sources of  exercises is to help ones achieve physical activity guide- lines. Exergaming can invoke moderate levels of physical  exercise intensity with positive feelings about exercises  and reduced perception of effort (Barry et al. 2016); it is  possible to used game with the objective on behavior  changes, that is to say improving health habits of players as  well as lilting them an interest in exercises and sports (Bar- anowski et al. 2016).  UKI for full-body motion gaming   Kinect has been recognized among gaming devices for its potential in providing full-body motion games for health  promotion and rehabilitation. A study on 109 articles has  reported that its possibilities and future work for rehabilita- tion applications are extensive (Da Gama et al. 2015). However, since motion games are usually developed spe- cifically and their development requires more time and  effort; only few games are available in the market, and a  narrow variety of genres makes motion gaming reach just a  niche group of gamers.    The UKI project has been launched with a goal to pro- vide middleware that can facilitate integration of full-body  control with any existing games and applications (Paliya- wan and Thawonmas 2017). Besides such integration,  we  also add several features to enhance use, such as a module  that allows the user to introduce new motions to the system  by only performing them (Paliyawan et al. 2015) and a  module for monitoring health risks based on an ergonomic  tool REBA (Paliyawan and Thawonmas 2016).  FightingICE for health promotion   Properties of fighting games that enhance outcomes of ex-ergaming are given as follows:   ‚Ä¢ Adaptability of the difficulty level  of the exercise to fit  each individual player. When the difficulty fits the play- er, it would optimize health outcomes, reduce frustration, and sustain interest of the player. This property can be  effectively implemented in fighting games by offering a  proper opponent AI for each game difficulty. ‚Ä¢ Clear victory condition  is an important psychological  factor in exergaming. If the player identifies him- self/herself as winner, it could lead to positive social  comparisons and enhanced competition, serving as en-couragement for continuing gameplay.   ‚Ä¢ Simplicity  is preferred while detailed tutorials may con- tribute to frustration and boredom. Fighting games are  simple and can be played without tutorials.   A health promotion AI is implemented for FightingICE,  the fighting game platform for AI development and compe-tition that is organized and maintained by our laboratory.  Since 2014, an AI competition using FightingICE has been  hold annually by the IEEE Conference on Computational Intelligence and Games (CIG), which is the premier annual  event for researchers applying computational and artificial intelligence techniques to games. We believe FightingICE  along with UKI can serve as a potential application for  Games for Health research.       Figure 1: UKI with FightingICE   Health Promotion AI   Health Promotion AI (HP-AI) is our contribution in this  paper; it is a result from integration of several concepts for  health promotion from a series of our previous work with  AI development. A framework for assessing players‚Äô  health during full-body motion gameplay has been intro-duced (Paliyawan and Thawonmas 2016); we presented  use of UKI for analyzing the amount of body movement  and assessing postural risks on segments of body. As the  first step towards what we said in that work, in the paper  we focus on analysis of postural risks to balancing use of  b o d y  s e g m e n t s ,  w h i c h  i s  s a i d  t o  b e  a n  i m p o r t a n t  k e y  t o   healthy intensive exercises (Maffetone 2015); this seems  perfectly suits for motion gaming using fighting games.   In this work, we present HP-AI by using MctsAi (Yo- s h i d a  e t  a l .  2 0 1 6 )  a s  a  b a s e  a l g o r i t h m .  I t  i s  n o t e d  t h a t  i n   many AI competitions, Monte-Carlo tree search (MCTS)- based AIs are ranked top, and the winner AI in Fightin- gICE competition 2016 is a MCTS-based AI. MctsAi is a  s a m p l e  M C T S - b a s e d  A I  p r o v i d e d  b y  o u r  l a b  a n d  i s  t h e   third strongest AI among the 2016 competition entries.   Related Work   We have conducted a survey on existing work that uses Kinect for health promotion. Their details are summarized  to Table 1. In addition, for more information please refer to  Da Gama‚Äôs paper (Da Gama et al. 2015).  It is noted that  AIs for health promotion is a new concept and to the best   of our knowledge there is not yet motion game AIs, espe- cially fighting game AIs, for health promotion.     Table 1: Comparison of ours and existing work: [1] Sato et al.  2015 [2] Zaitsu et al. 2015 [3] Kayama et al. 2013 [4] Borghese  et al. 2013 [5] Maloney et al. 2015  [6] Baranowski et al. 2011 A  provding health benefits B preventing health risks / injuries dur- ing use of system C offering adjustable difficulty / customization.   A B C Description  Ours ‚úì ‚úì ‚úì promote balance use of body segments  [1] ‚úì ‚úì -  improve walking, muscular strength,  and balance in elderly people  [2] ‚úì -  -  provide sit-to-stand exercise  [3] ‚úì ‚úì -  improve balance ability and mobility,  which are risk factors for falls  [4] ‚úì ‚úì ‚úì  provide game engine f or rehabilitation  [5] ‚úì - ‚úì  share lessons learned from using  serious videogames in health behavior  changes  [6] ‚úì - - evaluate outcomes from playing games  on children‚Äôs diet, physical activity and  adiposity  Proposed AI    System overview for controlling the proposed Health Pro- motion AI is shown in Figure 2. The AI analyzes the play- er‚Äôs health state in real-time and uses supporting data from  databases for determining its next move (i.e., the optimal  action). Such determination gives the first priority to im- provement of the player‚Äôs health state, followed by  strength of action. In this section, we first provide defini- tion and details on computation of two fundamental data  used in the system: (1) momentum of body movement (2)  action-to-counteraction probability. We then describe how  AI obtains data and processes them to determine its next  action.     Figure 2: System overview  Data and databases  Momentum of body movement   Raw data captured by Kinect are 3D positions ( x, y, and z)  of 20 body joints. First, coordination is localized to make  data invariant to standing position of the player. Joints on  upper-body are centered to center coordination of shoulder,  while those on lower-body are centered to center one of hip.  Second, relative change between each pair of consecutive frames is computed by using Euclidian distance. Third,   joints on the center of body are omitted, and remaining joints are grouped into 4 segments that are a pair of arms  and a pair of legs (Figure 3). Changes of joints in the same  segment are summed up to a change of segment. Finally, changes on a segment of interest over time are accumulat- ed and represented by a momentum in Eq. (1).     ›â›â ‡µå ‡∑ç ‡∂•·à∫›î‡Øú‡µÜ›î‡Øú‡¨ø‡¨µ·àª‡¨∂‡µÖ·à∫›ï‡Øú‡µÜ›ï‡Øú‡¨ø‡¨µ·àª‡¨∂‡µÖ·à∫›ñ‡Øú‡µÜ›ñ‡Øú‡¨ø‡¨µ·àª‡¨∂ (1)     Figure 3: Four body segments      Motion database contains information on how much  player‚Äôs body segments move when he or she performs a certain motion (Motion ‚Üí Momentums is denoted as  M2Mm). Each record stores momentums corresponding to  a motion used for executing a game skill. From example  data in Figure 4, details on how motions evoke momen- tums are in the table M2Mm, while details on what skill (i.e., player‚Äôs counteractions) is executed by using what  motion are shown in the table C2M. There are 24 motions  used in this experiment; for each motion, we let an experi- enced UKI user perform it three times to obtain sample  data. As in our previous study, we found that motion data collected from one subject can be applied to others (Pali-yawan et al. 2015), the proposed system does not require that every player must provide sample motion data for the  sake of simplicity of use. On each file, we compute mo- mentum as a total change, or to say we accumulate changes until the end of file. For each motion in the database, mo- mentums are averaged from three sample data files.             Figure 4: Data used in the system     Action-to-counteraction probability   Action-to-counteraction probability (A2C) is computed by  using gameplay log; it represents probability on which  counteraction the player tends to use when the AI takes a  certain action. A counteraction is the player‚Äôs first action  after the AI‚Äôs action. Because one action possibly leads to  various counteractions, probability is used to represent a set of player‚Äôs counteractions toward a given AI‚Äôs action.  A 2 C s  f o r  a l l  p o s s i b l e  a c t i o n s  i n  t h e  g a m e  a r e  s t o r e d  i n  a   database namely Action History Database (see Figure 4)‚Äî this database is built by using log data of 45 battle rounds:  5 subjects, 9 rounds/subjects.  Processes for determining optimal action   In this section, we describe MCTS and processes in the  system (rounded rectangles in Figure 2).  Monte-Carlo Tree Search (MCTS)   We embed a Monte-Carlo Tree Search (MCTS) module from MctsAi (Yoshida et al. 2016) to our AI. This module  analyzes game state and recommends n c a n d i d a t e  a c t i o n s   to th e p ro posed AI, in wh ich one ou t of  them  wi ll be se- lected as an optimal action. The search module provides  the best action by considering strength of action under a  given game situation. It is noted that if n is set to 1, HP-AI  will only use the strongest action, and if the value of n is  too large, HP-AI will be weaken; value of n can be used to  control game difficulty and its value is set at 3 in this study .   MCTS is a combination of tree search algorithm and  Monte-Carlo method; it uses random sampling in explora- tion of the decision space. There are four major steps in  MCTS: selection, expansion, simulation and backpropaga- tion. The four steps are repeated until a given amount of  time is elapsed. An overview of MCTS is shown in Figure 5, where the root node represents the current game situa- tion while child nodes represent actions. A path from a root  node to a leaf node is a sequence of AI actions.      Figure 5: An overview of MCTS    ‚Ä¢ Selection : UCB1 is employed as the selection criterion  of nodes. Reward used for evaluation is computed by us- ing changes in hit points before and after the actions is  executed (denoted as HP after ‚Äì HP before = ŒîHP); hitpoints  considered are that of the AI and that of the player. The selection criterion is given as Eq. (2); considering the i- th node, C is a balance parameter, N i is the number of  visits at that node, NiP is the number of visits at its parent  node, and Xi is the average reward (see (3) and (4)).  ‹§‹•‹∑1‡Øú‡µå‹∫‡¥§‡Øú‡µÖ‹•‡∂®2‹∞›ä›à‡Øú‡Øâ ‹∞‡Øú (2)  ‹∫‡¥§‡Øú‡µå1 ‹∞‡Øú‡∑ç›à‹Ω›í›Å‡Øù‡Øá‡≥î ‡Øù‡≠Ä‡¨µ (3)  ›à‹Ω›í›Å‡Øù‡µåŒî‹≤‹™‡Øù‡Æ∫‡ØÇ‡µÜŒî‹≤‹™‡Øù‡Øâ‡Øü‡Øî‡Ø¨‡Øò‡Ø• (4)  ‚Ä¢ Expansion : By the time a leaf node is reached, if the  depth of the path is shallower than a threshold and the  number of visits of the leaf node is larger than a thresh- old, child nodes will be created from the leaf node.   ‚Ä¢ Simulation : A simulation is done by using a sequence  of actions in the path from the root node to the leaf node  as AI actions. Consequentially, it uses random actions of  the same number of those in the path for the opponent‚Äôs actions.  ‚Ä¢ Backpropagation : An update from simulation is per- formed to obtain UCB1 for nodes that were traversed in  the path.  Predicting effects on player‚Äôs heath   We use a searching module from MctsAi for analyzing  game situation and recommending three candidate actions,  in which one out of the three will be selected as optimal action of the AI. A searching module provides candidate  actions by considering strength of actions under a given  game state. For each candidate action (denoted as A), the  AI predicts its effects on momentums of the player‚Äôs body  segments (denoted as A2Mm). Computation is done by  using A2C, C2M, and M2Mm in respective order.  In addi- tion, the table A2Mm for all actions may also be built in  advance and stored permanently during the gameplay to  reduce processing time.  Health assessment   During gameplay, UKI accumulates momentums of the player‚Äôs body segments over time from the time the game  starts. A set of accumulated momentums is referred to as  ‚ÄúActual Momentums,‚Äù or shorten as AM in Eq. (5)‚Äîfor  example, the first element or momentum in AM (denoted  as ›â‹Ω ‡¨µ) is ›â›â‡Æ∫‡Ø•‡Ø†‡≥É, which refers to a momentum of the  right arm of the player. The proposed AI computes ex- pected momentums (EM) for body segments by using AM, where momentum of a certain segment is expected to be  equal to its pair on the opposite side of the body; for each  segment, we use the maximum momentums in its pair as the expected momentums as shown in Eq.  (6). Gap, denot- ed in Eq. (7), is then computed as a set of differences from EM to AM; from this set, it is known which segments of  the body should move more and how much should it  moves. These data are sent from UKI to the proposed AI as  player‚Äôs current health state for further processing.    ‹£	‹Ø ‡µå   ‡µå ·àº›â›â‡Æ∫‡Ø•‡Ø†‡≥É,›â›â‡Æ∫‡Ø•‡Ø†‡≤Ω,›â›â‡ØÖ‡Øò‡Øö‡≥É,›â›â‡ØÖ‡Øò‡Øö‡≤Ω·àΩ  ·àº›â‹Ω‡¨µ,›â‹Ω‡¨∂,›â‹Ω‡¨∑,›â‹Ω‡¨∏·àΩ   (5)    	‹Ø‹ß ‡µå     ‡µå ·àºmax·à∫›â‹Ω‡¨µ,›â‹Ω‡¨∂·àª,max·à∫›â‹Ω‡¨µ,›â‹Ω‡¨∂·àª  		max·à∫›â‹Ω‡¨∑,›â‹Ω‡¨∏·àª,max·à∫›â‹Ω‡¨∑,›â‹Ω‡¨∏·àª}  ·àº›â›Å‡¨µ,›â›Å‡¨∂,›â›Å‡¨∑,›â›Å‡¨∏·àΩ     (6)    	›å‹Ω‹© ‡µå  ·àº	›å‹Ω›É ‚àà ‘π	 |	›å‹Ω›É‡Ø¶‡µå›â›Å ‡Ø¶‡µÜ›â‹Ω‡Ø¶·àΩ (7)    Select an optimal action   The final process takes A2Mm and player‚Äôs current health  state as inputs. The goal of the AI is to maximize balanc- edness of exercise, where such balancedness (denoted as  Bal) is computed by Eq. (8). Value of Bal is in the range of [0, 1], where a value of one indicates that two side of the  body move in a perfect balanced fashion.   ›à‹Ω‹§‡µå1‡µÜ2‡µà‚àë›å‹Ω›É‡Ø¶‡¨∏ ‡Ø¶‡≠Ä‡¨µ ‚àë›â›Å‡Ø¶‡¨∏ ‡Ø¶‡≠Ä‡¨µ	 (8)     As decrease in gaps  leads to increase in Bal, the AI  evaluates fitness of each candidate action by estimating  how much gaps  will decrease when it performs that action  (Eq. (9)). From an example in Figure 4, if Skill_A is per- formed by the AI, it is predicted that gaps will decrease by  about 5.04, and that will improve Bal from 86.92% to  88.16%.    ‹ø›Å›Ä ‡µå‡∑ç›å‹Ω›É‡Ø¶‡¨∏ ‡Ø¶‡≠Ä‡¨µ‡µÜ‡∑ç|›å‹Ω›É‡Ø¶‡µÜ›â›â ‡Ø¶|‡¨∏ ‡Ø¶‡≠Ä‡¨µ (9)  Evaluation and Result    We evaluate effectiveness of AIs on improving balanced- ness of exercise. There are five subjects involve in this  experiment. Each of them plays FightingICE for 9 rounds  (3 matches, 3 rounds per match) against MctsAI and 9  rounds against HP-AI.    By using collected data, we first analyze Gap between  actual and expected momentums of player during game- play. Lines in Figure 6 represent summations of actual and  expected momentums on four body segments; their values  are accumulated over time. Gap is a space between two  lines. It is obvious that  Gap  i s  s m a l l e r  w h e n  t h e  p l a y e r   fights against HP-AI.        (Continues)      Figure 6: Difference between AM and EM over time (25 fps). The  horizontal axis represents the number of frames that increments  with the approximated rate of 25 fps. The vertical axis is value of  momentum computed by Eq. (1); it represents the total amount of body movement in a unit of meter, which is summed from 4 seg-ments or 14 joints as shown in Figure 3.    Table 2: Balancedness of exercise (Bal) computed at the end of  gameplay.    Sub1 Sub 2 Sub3 Sub4 Sub5  MctsAi 86.51% 82.56% 66.30% 85.58% 86.17% HP-AI 92.74% 94.80% 73.03% 88.56% 76.26% Conclusion    We have presented system design and architecture for de- veloping a game AI that promotes health of the player. Our  result demonstrates possibility for the development of  fighting game AI that can, in an effective manner, recog- nize player‚Äôs behavior, analyze player‚Äôs health state, and  determine actions that will induce player to move in a  healthy way. Our future work includes designing of addi- tional modules for assessing and improving other health  factors, such as postural risk, amount of energy expendi- ture, and the level of physical activity. To design health  summary reports and their visualization for promoting us-er‚Äôs motivation and leading to sustainable well-being is  also a challenging topic.  Acknowledgement  We would like to express special thanks to Makoto Ishihara for  his explanations and details o n how MCTS-based AIs operate.  References  R√∂ssler, R., Donath, L., Verhage n, E., Junge, A., Schweizer, T.   and Faude, O., 2014. Exercise-based injury prevention in child  and adolescent sport: a systematic review and meta-analysis.  Sports medicine , 44(12), 1733-1748.  Maffetone, P., 2015, Muscle Imbalance, https://philmaffetone  .com/muscle-imbal/. Paliyawan, P. and Thawonmas, R., 2017. UKI: universal Kinect- type controller by ICE Lab. Software: Practice and Experience .  DOI: 10.1002/spe.2474.  Baranowski, T., Blumberg, F., Buday, R., DeSmet, A., Fiellin,  L.E., Green, C.S., Kato, P.M., Lu, A.S., Maloney, A.E.,  Mellecker, R. and Morrill, B.A., 2016. Games for health for children‚ÄîCurrent status and needed research. Games for health  journal, 5(1), 1-12.  Barry, G., van Schaik, P., MacSween, A., Dixon, J. and Martin,  D., 2016. Exergaming (XBOX Kinect‚Ñ¢) versus traditional gym-based exercise for postural control, flow and technology acceptance in healthy adults: a randomised controlled trial. BM C  Sports Science, Medicine and Rehabilitation, 8(1), 25.  CDC: Centers for Disease Control and Prevention, https://www.  cdc.gov/physicalactivity/data/f acts.htm, http://www.cdc.gov/hea lt  hyyouth/obesity/facts.htm  ESA: Entertainment Software Asso ciation, 2015, 2015 Essential  Facts About the Computer and Video Game Industry, 1‚Äì16.  Raymond, S., 2013, http://altarum .org/health-policy-blog/exer  gaming-as-physical-activity-how-effective-are-exergames-at-incr   easing-physical-activity-in-youth  Da Gama, A., Fallavollita, P., T eichrieb, V. and Navab, N., 201 5.  Motor rehabilitation using Kinect: A systematic review. Games  for health journal, 4(2), 123-135.  Paliyawan, P., Sookhanaphibarn, K., Choensawat, W. and  Thawonmas, R., 2015, October. Towards universal kinect interface for fighting games. In Consumer Electronics (GCCE),  2015 IEEE 4th Global Confer ence on (332-333). IEEE.  Paliyawan, P. and Thawonmas, R., 2016, October. Towards  ergonomie exergaming. In Consumer Electronics, 2016 IEEE 5th  Global Conference on (1-2). IEEE.  Yoshida, S., Ishihara, M., Miyaz aki, T., Nakagawa, Y., Harada, T.  and Thawonmas, R., 2016, October. Application of Monte-Carlo tree search in a fighting game AI. In Consumer Electronics, 201 6  IEEE 5th Global Confer ence on (1-2). IEEE.  Sato, K., Kuroki, K., Saiki, S. and Nagatomi, R., 2015. Improvi ng  walking, muscle strength, and balance in the elderly with an  exergame using Kinect: A randomized controlled trial. Games for   health journal, 4(3), 161-167.  Zaitsu, K., Nishimura, Y., Matsuguma, H. and Higuchi, S., 2015.   Association Between Extraversion and Exercise Performance Among Elderly Persons Receiving a Videogame Intervention.  Games for health journal, 4(5), 375-380.  Kayama, H., Okamoto, K., Nish iguchi, S., Yukutake, T.,  Tanigawa, T., Nagai, K., Yamad a, M. and Aoyama, T., 2013.  Efficacy of an exercise game based on Kinect in improving physical performances of fall risk factors in community-dwellin g  older adults. Games for hea lth journal, 2(4), 247-252.  Borghese, N.A., Pir ovano, M., Lanzi, P.L., W√ºest, S. and de  Bruin, E.D., 2013. Computational intelligence and game design  for effective at-home stroke rehabilitation. Games for Health: Research, Development, and Clin ical Applications, 2(2), 81-88.  Maloney, A.E., Mellecker, R., Buday, R., Gao, Z., Hinkley, T.,  Esparza, L. and Alexander, S.,  2015. Fun, Flow, and Fitness:  Opinions for Making More Effective Active Videogames. Games  for health journal, 4(1), 53-57.  Baranowski, T., Baranowski, J., Thompson, D., Buday, R., Jago,  R., Griffith, M.J., Islam, N., Nguyen, N. and Watson, K.B., 201 1.  Video game play, child diet, and physical activity behavior change: A randomized clinical trial. American journal of  preventive medicine, 40(1), 33-38.  Paliyawan, P., Sookhanaphibarn, K., Choensawat, W. and  Thawonmas, R., 2015, August. Body motion design and analysis for fighting game interface. In Computational Intelligence and  Games (CIG), 2015 IEEE Conf erence on (360-367). IEEE.    ","cs.AI, cs.CY, cs.HC, I.2.1; K.8.0",Arxiv
8,Non-Inferiority and Equivalence Tests in A Sequential Multiple-Assignment Randomized Trial (SMART),"Palash Ghosh, Inbal Nahum-Shani, Bonnie Spring, Bibhas Chakraborty",2017-05-04 10:05:31+00:00,http://arxiv.org/pdf/1705.01772v3,"Adaptive interventions (AIs) are increasingly becoming popular in medical and behavioral sciences. An AI is a sequence of individualized intervention options that specify for whom and under what conditions different intervention options should be offered, in order to address the changing needs of individuals as they progress over time. The sequential, multiple assignment, randomized trial (SMART) is a novel trial design that was developed to aid in empirically constructing effective AIs. The sequential randomizations in a SMART often yield multiple AIs that are embedded in the trial by design. Many SMARTs are motivated by scientific questions pertaining to the comparison of such embedded AIs. Existing data analytic methods and sample size planning resources for SMARTs are suitable for superiority testing, namely for testing whether one embedded AI yields better primary outcomes on average than another. This represents a major scientific gap since AIs are often motivated by the need to deliver support/care in a less costly or less burdensome manner, while still yielding benefits that are equivalent or non-inferior to those produced by a more costly/burdensome standard of care. Here, we develop data analytic methods and sample size formulas for SMART studies aiming to test the non-inferiority or equivalence of one AI over another. Sample size and power considerations are discussed with supporting simulations, and online sample size planning resources are provided. For illustration, we use an example from a SMART study aiming to develop an AI for promoting weight loss among overweight/obese adults.","1     Non-Inferiority and Equivalence Tests in Sequential , Multiple  Assignment , Randomized  Trial s (SMART s)   Palash Ghosh1, Inbal Nahum -Shani2, Bonnie Spring3, and Bibhas Chakraborty1,4,5    1Centre for Quantitative Medicine , Duke -NUS Medical School, National University of Singapore,  Singapore   2Institute for Social Research , University of Michigan   3Center for Behavior and Health, Northwestern University Feinberg School of Medicine   4Department of Statistics and Applied Probability, National University of Singapo re  5Department of Biostatistics and Bioinformatics, Duke University     emails: palash.ghosh@duke -nus.edu.sg ,  inbal@umich.edu   bspring@northwestern.edu    bibhas.chakraborty@duke -nus.edu.sg       Correspondence concerning to this article should be addressed to Palash Ghosh, Centre fo r  Quantitative Medicine , Duke -NUS Medical School, Level 6, Academia, 20 College Road,  Singapore 169856. Email:  palash.ghosh@duke -nus.edu.sg   2   Abstract   Adaptive interventions (AIs) are increasingly becoming popular in behavioral sciences. An  AI is a sequence of decision rules  that specify  for whom and under what conditions different  intervention options should be offered, in order to address the changing needs of individuals as  they progress  over time . The sequential , multiple  assignment , randomized trial  (SMART) is a  novel trial design that was developed to aid in empirically constructing effective  AIs. The  sequential randomizations in a SMART often yield multiple AIs  that are embedd ed in the trial by  design. Many SMARTs are motivated by scientific questions pertaining to the comparison of such  embedded AIs. Existing data analytic methods and sample size planning resources for SMARTs  are suitable only for superiority testing, namely f or testing whether one embedded AI  yields better  primary outcome s on average than  another. This calls for non-inferiority/equivalence testing  methods, since AIs are often motivated by the need to deliver  support/care  in a less costly or less  burdensome manner, while still yielding benefit s that are equivalent or non- inferior to those  produced by a more costly/burdensome standard of care.  Here, we develop data analytic methods  and sample size formulas for SMART studies  aiming to test the non- inferiority or equivalence of  one AI over another.  Sample size and power considerations  are discussed with supporting  simulations , and online sample size planning resources are provided.  A simulated  data analysis  shows how to test a  non- inferiority or equivalence hypothesis with SMART data. For illustration,  we use an  example from a  SMART study aiming to develop an AI for promoting weight loss  among overweight /obese  adults.    Keywords:  Adaptive interventions, sequential , multiple  assignment , randomized trial  (SMART),  non-inferiority, equivalence, power   3     Introduction   High heterogeneity  in response to behavioral interventions motivates  the development of  adaptive interventions ( Collins , Murphy, & Bierman, 2004). In adaptive interventions  (AIs) ,  different intervention options (e.g., different type s, intensit ies or modalities of delivery of  treatment) are offered based on ongoing information about the individual‚Äôs changing conditions .  An AI is not an experimental design ; it is an intervention design ( i.e., t he approach and specifics  of an intervention program ; see Nahum -Shani et al., 2017) that seeks to  address the unique and  changing needs of individuals as they progress  over time through an intervention program. An AI   (also known as a dynamic treatment regime in the statistical literature; see, e.g., Murphy, 2003;  Chakraborty & Moodie, 2013; Kosorok &  Moodie, 2016) is a protocol that guides for whom and  under what conditions different  intervention options should be offered, typ ically operationalized  using a sequence of decision rules involving some tailoring variables . AIs have been discussed,  investi gated, and applied across various domains of psychological sciences, including health  psychology  (e.g., Nahum -Shani et al., 2015; Thomas & Bond, 2015) , clinical psychology (e.g.,  Connell , Dishion, Yasui, & Kavanagh, 2007; Pelham et al., 2016) , educational  psychology ( e.g.,  Schaughency & Ervin, 2006; Walkington, 2013) , and organizational psychology  (Howard &  Jacobs, 2016; Eden, 2017) .    The development of an AI should be guided by evidence (empirical, theoretical and/or  practical). However, in many cases existing evidence is insufficient to inform the development of  effective AIs; scientific questions might arise concerning  which inter vention option to offer, for  whom, and under what conditions. The sequential , multiple  assignment , randomized trial   (SMART ; Lavori & Dawson, 2000, 2004; Thall , Millikan, & Sung , 2000; Murphy, 2005)  is a novel  4   experimental design that was developed to aid in the construction of empirically  grounded AIs. In  a SMART, some or all participants are randomized  more than once , with the sequential   randomizations  typically  resulting in  several AIs that are embedded in the SMART by design .  Many SMARTs are motivat ed by scientific questions concerning the comparison of these  embedded AIs .          As the importance of developing evidence -based AI is increasingly acknowledged in  many areas of behavioral and psychological research, SMART designs are experiencing rapid  uptake despite being relatively new . For example, in the area of clinical  psychology, SMARTs  were employed to develop AIs  for promoting weight loss among African American adolescents  (Naar -King  et al. , 2016 ), to develop dynamic strategies for  re-engaging  individuals in treatment  (McKay et al., 2015) , to optimize the use of contingency management in the treatment of substance  use (NIH/NIAAA R01AA021446; PI: Petry ; Petry  et al., 2018), and to develop an adaptive  behavioral smoking cessation intervention for people living with HIV (NIH/NIMH  R01DA034537; PI: Ledgerwood) . In the area of health psychology, SMARTs have been  recommended as an experimental tool that can be used to inform the development of adaptive behavior change interventions  that capitalize on ad vances in mobile and wireless technology   (Riley  et al., 2015). In organizational psychology, Howard and Jacobs (2016) employed a SMART  to optimize the sequencing of training methods , Eden (2017) discussed  the utility of  the SMART  as an experimental approach that can inform the adaptation of organizational policies and  practices.  In their introduction to AIs  and SMARTs in the area of educational and school  psychology, August, Piehler and Miller (2018) provide  multiple examples of SM ART applications  in this area. Many other examples of psychological research involving or highlighting the scientific utility of the SMART exist in the extant literature (see e.g., Lei et al., 2012; Lu et al., 2016).   5   Similarly, new methodologies have been developed to enable investigators to analyze data  arising from SMART studies (Nahum -Shani et al., 2012a ; Chakraborty , Laber, & Zhao , 2013;  Chakraborty, Ghosh, Moodie, & Rush, 2016; Laber , Lizotte, Qian, Pelham, & Murphy , 2014;  Shortreed , Laber, Stroup, Pi neau, & Murphy , 2014; Zhao, Zeng, Laber, & Kosorok, 2015a ;  Ertefaie, Shortreed, & Chakraborty , 2016) and to plan sample size for SMARTs (Oetting et al.,  2011; Kidwell & Wahed, 2013; Laber et al., 2016) . Several tutorial  manuscripts have provide d  guidelines  specific to psychological and behavioral scientists  considering this experimental  approach (see Almirall et al., 2014; Nahum -Shani et al ., 2012a; Nahum -Shani et al., 2012b; and  Lei et al., 2012). These tutorials review various types of SMART designs, offe r an accessible  introduction to data analytic methods that can be used with data arising from a SMART, and review  sample size considerations. However, an important gap exists with respect to these methodologies.   Existing methodologies for analyzing data,  and for planning sample size for SMART  studies  are suitable only for superiority testing, namely for testing whether one embedded AI  yields  better primary outcome on average than  another.  However, the development of AIs  often  requires addressing scientific questions concerning non- inferiority or equivalence. Specifically,  many AIs are motivated by the need to deliver support/care  in a less costly  or less burdensome   manner  (Lei et al., 2012; Nahum -Shani et al., 2017) , whi le still yielding benefits  that are equivalent  or non- inferior to those  produced by more costly or burdensome interventions  that represent the  standard of care . While Chuang -Stein , Follman, and Chappell  (2014) commented about the  potential role of non- inferiority testing in the context of a SMART design, to the best of our  knowledge, there has been no follow up work on this topic in terms of developing the actual tests and associated sample size resources. This represents a gap in the science of AIs,  given that the  motivation to minimize burden and cost compared to established behavioral intervention  6   approaches underlie the development of AI s in various health (Collins , Murphy, & Strecher , 2007;  Riley , Rivera, Atienza, Nilsen, Allison, & Mermelstein , 2011), academic (Almirall et al., 2018a ),  and clinical (Page et al., 2016; Pelham et al., 2016) domains. The goal of this manuscript is to  expand the methodological toolbox available to psychological and behavioral researchers  considering  a SMART by developing data analytic methods and sample size formulas for SMART  studies that are motivated by primary scientific  questions concerning the non- inferiority or  equivalence of one AI  over another.   We begin by providing a brief review of AI s and SMART studies  follow ed by other types  of SMART designs and commonly used data analysis methods with software tools. After  developing the general setup and introducing notation, we discuss data analytic methods and related sample size planning resources for SMARTs that are mot ivated by non- inferiority testing,  and then for SMARTs that are motivated by equivalence testing. Finally, we present  simulation  studies to validate the proposed methodologies.  We also develop an online tool that implements  our methodology. T echnical detai ls, as well as an illustration of data analysis using simulated data   are provided in the  Appendix. Throughout , for illustration, we use an example from the SMART  Weight Loss Management study (ClinicalTrials.gov Identifier: NCT02997943) , which aims to  devel op an AI  that integrates mobile technology in to the treatment of overweight /obese  adults.    Adaptive Interventions  (AI)          An AI is a sequence of individualized treatments that use ongoing in formation  about the  individual‚Äôs progress (e.g., early signs of non- response or non- adherence) to decide whet her and  how the intervention should be modified. An AI consists of four main elements : (a) decision points,  namely points in time in which a decision should be made concerning whether and how to  intervene; (b) intervention options , which are different types, dosages/intensities or delivery  7   modalities  that may be used/ offered at any given decision point ; (c) tailoring variables , namely  baseline and time -varyin g information about  the individual that is useful in deciding the  type/dose /modality  of the intervention at each decision point ; and (d) decision rules , which link  the tailoring variab les to intervention options, specifying which  intervention option to offer, for  whom, and under what conditions ; there is a decision rule for each decision point  (Almirall et al.,  2014; Nahum -Shani et al., 2012a ). An AI is a multi- stage process, where each stage corresponds  to a period of time follow ing a decision point in which the individual experiences the assigned  intervention option; the assigned intervention option in at least one of the stages is tailored based  ongoing ( time-varying ) information about the participant, namely information that ma y change  over time as a result of prior intervention stages (e.g., response to prior intervention, level of adherence to initial treatment, or motivational changes during the previous stage ) (Nahum -Shani  et al., 2017) .    As an example, consider an AI  for promoting  weight loss among overweight /obese  adults   (Figure 1). At the first stage  of this AI , a mobile app is  offered to all individuals ; this app is  designed to support self -monitoring of dietary intake and physical activity. The individual ‚Äôs  response status is  determined at week s 2, 4, and 8 based on the amount  of weight loss. As long as  the individual  is losing at least 0.5 lb. on average per week, s/he is classified as a responder;  otherwise the individual  is classified as a non -responder. As soon as  the individual  is classified  as  a non- responder , s/he transitions to the second stage of this AI , where in additional support is  offered in the form of weekly coaching sessions . As long as the individual  is responsive , s/he  continue s with mobile app alone. This intervention is adaptive because it uses ongoing information  about the individual‚Äôs response  status to decide whether or not coaching should be added to the  mobile weight loss app . The following decision rule specifies  the weight loss AI :  8     At program  entry,    First-stage i ntervention option=mobile app   Then, at weeks 2, 4, and 8  If response status = non- responder       Then, second -stage intervention option=add coaching  (and stop assessing response status)     Else, continue with app alone  (and continue assessing response status until week 8) .                In this AI , there are decision points at program entry and at weeks 2, 4, and 8. The  intervention options include a mobile app (offered to all participants at the first stage), and two subsequent tacti cs: add coaching and continue with app alone (employed at the second stage  depending on the participant‚Äôs response status). The tailoring variable in this AI is the participant‚Äôs response status. T he decision rule specifies how information about the indivi dual‚Äôs response status  at weeks 2, 4, and 8 should be used to tailor the second- stage intervention options, namely to decide  who should receive more support in the form of coaching and who should continue with app alone.    The weight loss AI described above is motivated by consideration s pertaining to cost and  burden. Coaching is an effective, yet relatively costly and burdensome weight loss treatment   component  (The Diabetes Prevention Program Research Group, 2003; Appel  et al., 2011) . The  mobile app is less costly and less burdensome. However, empirical evidence suggests that not all individuals benefit sufficiently from using a mobile app to lose weight; a bout 50% are unlikely to  achieve ultimate treatment goals . Importantly , empirical evidence suggests  that these individuals  can be identified early, based on insufficient weight  loss during the first few weeks of mobile app  usage  (Spring , Pellegrini, & Nahum- Shani , 2014) . Hence, instead of offering coaching  to all  9   individuals, this AI  starts with the les s costly/burdensome treatment component (mobile app) and  then adds coaching only to those participants who need it most, namely those who show early signs  of non- response. As long as the individual is responsive , s/he continue s with the less  costly/burdens ome treatment component. This AI  represents a more cost -effective approach than  offering coaching sessions to all individuals throughout the intervention program.      More generally, AIs  are typically motivated by evidence indicating that the same  interve ntion approach is not beneficial to all individuals in the target population, and that it is  possible to identify early those individuals who are unlikely to benefit ultimately. AIs are designed  to modify the intervention (e.g., increase the intensity of c urrent intervention, switch to another  intervention, or augment with another type of intervention) when an individual shows early signs of non- response, in order to prevent ultimate non- response and maximize the number of  individuals who benefit from the i ntervention program. The scientific  motivation for AIs  and the  advantages of this approach over a fixed , one -size-fits-all intervention approach have been  extensively discussed in the extant literature ( see Collins , Murphy, & Bierman, 2004; Nahum - Shani et al., 2012a ; Almirall et al., 2014 ). Practically, AIs are intended to guide the efforts by  therapists, clinicians, teachers  and organizations  to provide tailored treatments,  practices and  programs to individuals in order to address their unique and changing  needs. The protocolized (i.e.,  pre-specified) nature of AIs increases their replicability in a real-world  implementation, as well as  in research aiming to optimize and evaluate their effectiveness .    The sequential , multiple assignment , randomized trial ( SMART)        The SMART is an experimental trial design that involves multiple stages of randomizations; each stage correspond s to scientific questions concerning the selection and individualization of  intervention options at particular decision points in an AI. As an example, consider the SMART  10   weight loss management study for integrating mobile technology in the treatment of  obese/overweight adults ( R01 DK108678; see Figure 2 ). At program entry, all individuals are  randomized with equal probability (0.5) to one of two first -stage intervention options, either (1)  mobile app alone (App) or  (2) a mobile app combined with weekly coaching sessions  (App+C oaching ). Response status is  assessed at weeks 2, 4, and 8. As soon as the individual is  classified as a non- responder s /he is re-randomized with equal probability (0.5) to one of two  second -stage augmentation tactics : either (1) modest augmentation, which consists of add ing  another technology -based intervention component in the form of supportive text messages , or (2)  vigorous augmentation, which consists of add ing supportive text messages combined with a more  traditional weight loss intervention component (either coaching or meal replacement) that the  individual was not offered initially . As long as the individual is classified as responsive, s/he  continues with the initial intervention option and is not re -randomized.        T he sequential  randomization s in the SMART weight loss study are  restricted : only non - responders are re -randomized to second stage intervention options, whereas responders are not re - randomized. This restriction is consistent with the scientific questions motivating the weight loss   SMART. Specifically, this study  was designed to address open scientific questions concerning the  selection of front -line treatments and the selection of augmentation tactics for non -responders . For  responders , sufficient evidence exist s to inform the selection of subsequent tactics . As long as the  individual is responsive , the likelihood of achieving ultimate weight loss  goals is high and hence  continuing with the initial intervention option is both logical (if it‚Äôs not broken, don‚Äôt fix it) and  resource effi cient  (Spring  et al., 2017; Waring  et al., 2014) . Because different subsequent  intervention options are considered for responders (continue) and non -responders  (modest vs.  vigorous augmentation), response status is embedded as a tailoring variable in this SMART by  11   design. Such multi- stage restricted randomization s give rise to several AIs that are embedded in  the SMART . Table 1 presents the four AIs that are embedded in the SMART weight loss study  and the corresponding experimental subgroups that are consistent with each. Notice that a  simplified version of one of these AIs was described earlier (in Figure 1).  Specifically, embedded  in the SMART weight loss study is an AI  (AI #1) which, similar to the AI  described in Figure 1,  recommends initiating treatment with App alone, and then to augment with coaching (and  supportive text messaging) as soon as the individual exhibits early signs of non- response, and  continue with a pp alone as long as the individual  is responding . Participants in subgroups A and  C in Figure 2 are consistent with this embedded AI .          An important scientific question motivating the SMART weight loss study concerns the  comparison of AI  #1, which re commends coaching only to individuals  who show early signs of  non-response; and AI #3 , which recommends coaching to all individuals  in terms of long -term  (month 6) weight loss . Specifically, AI # 3 recommends to initiate treatment with A pp and  coaching, and then to vigorously augment with supportive text messaging  and meal replacement   as soon as the individual exhibits early signs of non- response, and to continue with App and  coaching  as long as the individual is responsive . Participants in subgroups D  and F in Figure 2 are  consistent with this embedded AI. The rationale for this comparison relates to cost and burden.  Because AI # 3 recommends coaching throughout, it is likely to be effective, yet relatively costly  and burdensome. AI #1,  on the other hand, offers coaching only to those individuals who seem to  need it most (i.e., early non- responders), hence it is hypothesized to be non- inferior, namely no  less effective than AI  #3. If AI #1 is equally  or more beneficial in terms of ultimate weight loss  compared to AI #3, then the former should be selected for real -world implementation because it is  less costly and/or burdensome .    12     Other Types of SMART Designs   As noted earlier, given the scientific questions motivating the SMART weight loss study,  the sequential  randomizations  in this SMART  are restricted  such that only non- responders are re - randomized to second- stage intervention options, whereas responders continue with their assigned  initial intervention option. Although t his type of design is highly common (Almirall et al., 2018 b),   other forms of SMARTs exist, depending on the scientific questions motivating the study. These  include (a) SMARTs in which the second- stage randomization is not restricted, such that all  participants are re -randomized to second- stage intervention options regardless of their early  response status (see the remaking reces s SMART in Figure 5 of Almirall et al., 2018b); (b)  SMARTs in which the second- stage randomization is restricted such that only non- responders to  a specific first -stage intervention option (e.g., App alone) are re -randomized to second- stage  options, whereas non- responders to the alternative first -stage intervention option (e.g., App +  Coaching) as well as all responding participant s are offered pre- specified second -stage  interventions (see the SMART study for developing an AI for minimally verbal children with autism spectrum disorder  in Figure 1 of Almirall et al., 2016) ; and (c) a SMARTs in which the  second -stage randomization is restricted such that different second -stage intervention options are  considered for responders vs. non- responders (e.g., responders are re -randomized to two types of  maintenance interventions and non- responders are re -randomized to two types of rescue  interventions; see the Extending Treatment Effectiveness of Naltrexone SMART study in Figure  1 of Nahum -Shani et al., 2017).  The extant literature on SMARTs offers additional examples and details concerning different types of SMARTs that vary in terms of the r e-randomization scheme (see Almirall et al., 2018 b; Kidwell,  13   2016; Lei et al., 2012; Nahum -Shani et al., 2012a) the number of randomization stages (i.e.,  considering more than two stages of randomization; see Chakraborty  et al., 2016), and the level  (individual vs. cluster) at which randomizations occur (see NeCamp, Kilbourne, & Almirall, 2017  for a discussion of cluster -randomized SMARTs). For simplicity of illustration, the current  manuscript focuses solely on the type of SMART employed in the weight loss  study discussed  above (Figure 2), namely a SMART that employs two stages of randomization, where all individuals are randomized initially to two first-stage intervention options and only non- responding individuals are re -randomized subsequently to two second -stage intervention options.  Given that this type of SMART has become one of the most popular forms  of SMART s, it is often  considered the ‚Äòprototypical SMART‚Äô (see Almirall et al., 2018b; Nahum -Shani & Dziak, 2018;  NeCamp et al., 2017).    Data Analysis Method s and Software Tools   Data obtained from SMART designs require advanced data analytic methods  to analyze them . To  compare two adaptive interventions embedded within a SMART, Oetting  et al.  (2011) and Nahum - Shani et al. (2012a) proposed a z-statistic based approach  and an inverse probability weight ing  approach respectively. In recent years, Q-learning, a stage- by-stage recursive estimation procedure   (Murphy, 2005; Nahum -Shani et al., 2012b, Chakraborty , Laber & Zhao, 2013) and its variations  like inter active Q -learning ( Laber , Linn & Stefanski, 2014)  have been  frequently used to estimate  optimal AI s from SMART data. Other noteworthy methods to estimate an optimal AI include  classification -based outcome -weighted learning ( Zhao  et al., 2012, 2015a) and value- search  methods based on (augmented) inverse probability weighted estimators ( Zhang  et al., 2012a,  2012b).  Quite a few software packages are available to analyze data according to the various  14   available methods. For example, both the R-package ‚Äò qLearn‚Äô  and the SAS procedure ‚ÄòPROC  QLEARN‚Äô  can be used  to estimate optimal AIs using Q-learning  and construct  associated  bootstrap- based  confidence intervals , based on two -stage SMART data. More recent  R-package s  like ‚ÄòDTRlearn‚Äô  and ‚ÄòDynTxRegime‚Äô  implement some of the other methods  mentioned above, in  addition to  Q-Learning , that all aim to estimate the optimal AI .     Non-Inferiority and Equivalence Testing   Existing methods for using SMART study data to compare AI s (e.g., Nahum -Shani et al.,  2012a ) and associated power planning resources ( Oetting  et al. , 2011; Kidwell & Wahed ., 2013 ),  are suitable for traditional superiority testing, where the goal is to investigate whether one AI is  more efficacious than another. However, in non- inferiority testing, the goal is to establish that a  new intervention  yields favorable outcomes that, when compared to another active control  intervention (i.e., a n intervention approach with established e vidence of effectiveness) , are not  below some pre -stated non-inferiority margin  (Seaman & Serlin, 1998; Piaggio et al., 2006;  Wellek, 2010) . The non- inferiority margin captures how close the new intervention must be to the  other in terms of the expected ou tcome in order for the new intervention to be  considered non- inferior to the other. Practically, the margin is the maximum clinically acceptable difference in  favor of the active control intervention that one is willing to accept in return for the secondar y  benefits (e.g., lower cost, burden and /or side effects) of the new intervention. In the SMART  weight loss  study , the goal is to test the non- inferiority of AI # 1 with respect to AI #3. AI # 3  represents an active control as it offers coaching  (a treatment component with established evidence  of effectiveness ) throughout  but at the expense of added cost and burden, whereas AI #1 represents  a novel approach that  initiates treatment with a less costly/burdensome treatment component (a  15   mobile app) and then recommends coaching only to those individuals who need it most (i.e., those  showing signs of early non- response). Hence, it is hypothesized that AI #1 is non- inferior in terms  of long -term (month 6) weight loss compared to AI #3.   Selecting the no n-inferiority margin is the most critical and challenging step in non - inferiority testing. The smaller the selected margin, the more difficult it is to establish non - inferiority. Given that the non- inferiority margin provides scientific credibility to the test, it should  be selected carefully based on relevant evidence, as well as sound clinical , practical , and/or ethical  considerations. Extant literature on non- inferiority testing provides various guidelines for the  selection of the non- inferiority margin (e.g., Walker & Nowacki,  2011; Lakens, 2017 ). With  respect to the SMART weight loss study, based on relevant evidence  (Ross & Wing, 2016) and  established guidelines (Mohr et al, 2012), the non- inferiority margin is selected to be 50% of the  difference found between similar intervention approaches . In this case 50% of 11.24 lb is 5.62 lb.  Hence, the non- inferiority of AI #1 in relation to  AI #3 will be established if  the data provide  sufficient evidence to conclude that on average the  advantage of AI #3 (in terms of weight loss by  month 6) compared to AI #1 does not exceed 5.62 lb.   A related testing framework in randomized trials is that of equivalence tests  (Seaman &  Serlin, 1998; Goertzen &  Cribbie, 2010; Walker & Nowacki, 2011; Lakens, 2017) . In equivalence  testing , one aims to test the hypothesis that a particular intervention is  neither superior nor inferior  to another intervention, subject to a pre -specified  equivalence margin . The equivalence margin  defines a range of values for which the expected outcomes are ‚Äúclose enough‚Äù to be considered  equivalent . The equivalence of a new intervention is established when the data provide enough  evidence to conclude that its efficacy is ‚Äúclose enough‚Äù (i.e., neither higher nor lower) to that of  the active control intervention.  16     Data Structure  and Notation    Consider a  SMART design where individuals  are randomized at the first stage to one of  two initial intervention options , namely App (denoted by  ùëéùëé) and App + Coaching (denoted by  ùëéùëéùëéùëé) as in Figure 2 . Based on the individual‚Äôs progress during the first intervention s tage, s/he can  be classified as either a responder ( ùëÖùëÖ=1) or a non-responder ( ùëÖùëÖ=0). At the second stage,  responders are allowed to continue with the same initial intervention option , whereas non- responders are re -randomized to one of two second -stage options : modest augmentation (denoted  by ùëöùëö) or vigorous augmentation (denoted by ùë£ùë£). As can be seen in Figure 2 (also listed in Table  1), four AI s are embedded in this SMART : ùëëùëë1=(ùëéùëé,ùëéùëéùëÖùëÖùë£ùë£1‚àíùëÖùëÖ), ùëëùëë2=(ùëéùëé,ùëéùëéùëÖùëÖùëöùëö1‚àíùëÖùëÖ), ùëëùëë3= (ùëéùëéùëéùëé,ùëéùëéùëéùëéùëÖùëÖùë£ùë£1‚àíùëÖùëÖ), and ùëëùëë4=(ùëéùëéùëéùëé,ùëéùëéùëéùëéùëÖùëÖùëöùëö1‚àíùëÖùëÖ), where for example, ùëëùëë1 is an AI that recommends  offering intervention option ùëéùëé initially to all target individuals, and then continue offering the  same treatment for individuals who show early signs of response, while offering intervention  option ùë£ùë£ to those showing early signs of non- response. For clarity in comparing embedded AI s,  we classify any pair of embedded AI s under comparison to be either (1) distinct -path (DP):  those  starting with different initial interventions (e.g., {ùëëùëë1,ùëëùëë3} or {ùëëùëë1,ùëëùëë4} or {ùëëùëë2,ùëëùëë3} or {ùëëùëë2,ùëëùëë4}) or  (2) shared- path (SP) : those starting with the same initial intervention (e.g., {ùëëùëë1,ùëëùëë2} or {ùëëùëë3,ùëëùëë4})  (Kidwell &  Wahed, 2013) .  Here, we assume a single continuous primary outcome ùëåùëå (e.g., the amount of weight loss)  observed at the end of the trial. Let ùëáùëá1 and ùëáùëá2 generically denote the intervention options at  stages 1 and 2. Then the observed data trajectory for the ùëñùëñùë°ùë°‚Ñé individual  in a SMART is given by   (ùëáùëá1ùëñùëñ,ùëÖùëÖùëñùëñ,ùëáùëá2ùëñùëñ,ùëåùëåùëñùëñ), ùëñùëñ=1,‚ãØ,ùëÅùëÅ, where ùëÅùëÅ is the total number of individual s in the trial. Since the  distribution of the primary outcome is  indexed by the sequences  of intervention options  received ,  17   we write  an individuals potential outcomes (Robins, 1997)  as ùëåùëåùëáùëá1,ùëáùëá2 where ùëáùëá1‚àà{ùëéùëé,ùëéùëéùëéùëé};ùëáùëá2‚àà {ùëéùëé,ùëöùëö,ùë£ùë£} if ùëáùëá1=ùëéùëé; and ùëáùëá2‚àà{ùëéùëéùëéùëé,ùëöùëö,ùë£ùë£} if ùëáùëá1=ùëéùëéùëéùëé. Then we assume    ùê∏ùê∏(ùëåùëåùëáùëá1,ùëáùëá2)=ùúáùúáùëáùëá1,ùëáùëá2   ùëéùëéùëéùëéùëëùëë    ùëâùëâùëéùëéùëâùëâ(ùëåùëåùëáùëá1,ùëáùëá2)=ùúéùúé2, (1)  which states that the mean outcome of all the individuals who were assigned the interventional  sequence {ùëáùëá1,ùëáùëá2} is ùúáùúáùëáùëá1,ùëáùëá2 and the corresponding variance is ùúéùúé2 (same for all  the intervention  sequences).  Furthermore, the usual assumptions about potential outcomes (Robins, 1997) in a  longitudinal setting, namely, (i)  consistency , (ii) no unmeasured confounding and (iii) positivity   are assumed to hold. Specifically, the  consistency  assumption states that the potential outcome  under the observed treatment (sequence) and the observed outcome agree, i.e., ùëåùëå=ùëåùëåùëáùëá1,ùëáùëá2 if the  observed treatment sequence is indeed (ùëáùëá1,ùëáùëá2). The consistency assumption encompass es  Rubin‚Äôs (1980) stable unit treatment value ass umption (SUTVA) that says e ach participant‚Äôs  potential outcome is not influenced by the treatment a dminister ed to the other participants   (Chakraborty and Murphy, 2014) . The no unmeasured confounding assumption states that  treatment al location is independent of future potential outcomes given the history; this is satisfied  by design in case of a SMART (Murphy, 2005). Finally, the positivity  assumption ensures that an  individual has a positive probability of receiving any of the treatmen t sequences considered in the  study. In other words, by positivity assumption, at least some individuals obtain each of the  possible treatment sequences (AIs) feasible in the study.   For both the non- inferiority and the equivalence test procedures, the test  statistic is based  on the means of the embedded AIs. By design, the mean of an AI is a weighted average of primary  outcomes of patients having treatment trajectories consistent with that AI  (Oetting et al., 2011;  Nahum -Shani et al., 2012a ). Intuitively, a  weighted avera ge is essential as there is a structural  imbalance between responders and non- responders. In the two- stage SMART considered here,  18   non-responders are re -randomized at the second stage, but responders continue with the same  treatment. Define the first -stage randomization probability in favor of intervention option ùëáùëá1 as  ùúãùúãùëáùëá1, and the second -stage randomization probability for those who started with the first-stage  option ùëáùëá1, in favor of intervention option ùëáùëá2 as ùúãùúãùëáùëá1,ùëáùëá2 (often these proba bilities are 0.5 ). Note  that, ùúãùúãùëéùëéùëéùëé=1‚àíùúãùúãùëéùëé, ùúãùúãùëéùëé,ùë£ùë£=1‚àíùúãùúãùëéùëé,ùëöùëö and ùúãùúãùëéùëéùëéùëé,ùë£ùë£=1‚àíùúãùúãùëéùëéùëéùëé,ùëöùëö. A responder, due to a single  randomization at stage 1, is assigned to the treatment sequence (ùëáùëá1,ùëáùëá1) with probability ùúãùúãùëáùëá1 (0.5  in the case of the SMART weight loss study). On the other hand, due to two stages of  randomization, a non- responder is assigned to a treatment sequence (ùëáùëá1,ùëáùëá2) with probability  ùúãùúãùëáùëá1√óùúãùúãùëáùëá1,ùëáùëá2 (0.5*0.5=0.25 in the case of the SMART weight loss stud y). Using the principles of  inverse probability weighting (Robins , 1997 ; Nahum -Shani et al., 2012a ), the weight used for the  ùëñùëñùë°ùë°‚Ñé individual in any embedded AI  ùëëùëë is 1 ùúãùúãùëáùëá1ùëñùëñ for a responder (1 0.5=2 in the case of responders  in the SMART weight loss  study ) and 1 ùúãùúãùëáùëá1ùëñùëñ√óùúãùúãùëáùëá1ùëñùëñ,ùëáùëá2ùëñùëñ for a non -responder (1 0.25=4 in the case of  the non- responders in the SMART weight loss study) . In general, the weight can be expressed as   1/(ùúãùúãùëáùëá1√óùúãùúãùëáùëá1ùëñùëñ,ùëáùëá2ùëñùëñ1‚àíùëÖùëÖùëñùëñ). Thus , the observed mean corresponding to the AI  ùëëùëë1 can b e written as    ùëåùëåùëëùëë1=‚àëùëÅùëÅ ùëñùëñ=1ùëäùëäùëñùëñùëëùëë1ùëåùëåùëñùëñ ‚àëùëÅùëÅùëñùëñ=1ùëäùëäùëñùëñùëëùëë1,   ùë§ùë§‚Ñéùëíùëíùëâùëâùëíùëí   ùëäùëäùëñùëñùëëùëë1=ùêºùêº{ùëáùëá1ùëñùëñ=ùëéùëé,ùëáùëá2ùëñùëñ=ùëéùëéùëÖùëÖùëñùëñùë£ùë£1‚àíùëÖùëÖùëñùëñ} ùúãùúãùëéùëé√óùúãùúãùëéùëé,ùë£ùë£1‚àíùëÖùëÖùëñùëñ, (2)  where ùêºùêº{ùëáùëá1ùëñùëñ=ùëéùëé,ùëáùëá2ùëñùëñ=ùëéùëéùëÖùëÖùëñùëñùë£ùë£1‚àíùëÖùëÖùëñùëñ} is an indicator for whether (=1) or  not (=0) individual i  is  consistent with embedded AI  ùëëùëë1 (i.e., the individual was assigned to ùëéùëé initially, and then  continued with ùëéùëé if s/he was a responder or assigned to ùë£ùë£ if s/he was a non -responder ).  Similarly, we can define other weights ùëäùëäùëñùëñùëëùëë2,ùëäùëäùëñùëñùëëùëë3 and ùëäùëäùëñùëñùëëùëë4 corresponding to the AI s ùëëùëë2,ùëëùëë3  and ùëëùëë4, respectively. Define ùõæùõæùëáùëá1‚àà{ùõæùõæùëéùëé,ùõæùõæùëéùëéùëéùëé} as the response rate to the initial intervention options  ùëáùëá1, with respect to some pre -specified definition  of response  (e.g., in the weight loss SMART, the  19   response is defined as losing at least 0.5 lb per week on average) . Then  the population mean of  any embedded AI  ùëëùëë can be expressed as     ùúáùúáùëëùëë=ùê∏ùê∏(ùëåùëåùëëùëë)=ùõæùõæùëáùëá1ùúáùúáùëáùëá1,ùëáùëá1+(1‚àíùõæùõæùëáùëá1)ùúáùúáùëáùëá1,ùëáùëá2, (3)   and the variance of the observed (sample) AI mean as    ùëâùëâùëéùëéùëâùëâ(ùúáùúáÃÇùëëùëë)=ùëâùëâùëéùëéùëâùëâ(ùëåùëåùëëùëë)   =1 ùëÅùëÅÔøΩ1‚àíùõæùõæùëáùëá1+ùõæùõæùëáùëá1ùúãùúãùëáùëá1,ùëáùëá2 ùúãùúãùëáùëá1ùúãùúãùëáùëá1ùëáùëá2ùúéùúé2+ùõæùõæùëáùëá1(1‚àíùõæùõæùëáùëá1ùúãùúãùëáùëá1) ùúãùúãùëáùëá1ùúáùúáùëáùëá1,ùëáùëá12   +(1‚àíùõæùõæùëáùëá1)(1‚àí(1‚àíùõæùõæùëáùëá1)ùúãùúãùëáùëá1ùúãùúãùëáùëá1,ùëáùëá2) ùúãùúãùëáùëá1ùúãùúãùëáùëá1,ùëáùëá2ùúáùúáùëáùëá1,ùëáùëá22‚àí2ùõæùõæùëáùëá1(1‚àíùõæùõæùëáùëá1)ùúáùúáùëáùëá1,ùëáùëá1ùúáùúáùëáùëá1,ùëáùëá2}. (4)   When ùúãùúãùëáùëá1=ùúãùúãùëáùëá1,ùëáùëá2=1 2, then   ùëâùëâùëéùëéùëâùëâ(ùúáùúáÃÇùëëùëë)=1 ùëÅùëÅùúéùúéùëëùëë2   =1 ùëÅùëÅ{2(2‚àíùõæùõæùëáùëá1)ùúéùúé2+ùõæùõæùëáùëá1(2‚àíùõæùõæùëáùëá1)ùúáùúáùëáùëá1,ùëáùëá12+(3‚àí2ùõæùõæùëáùëá1‚àíùõæùõæùëáùëá12)ùúáùúáùëáùëá1,ùëáùëá22‚àí2ùõæùõæùëáùëá1(1‚àí ùõæùõæùëáùëá1)ùúáùúáùëáùëá1,ùëáùëá1ùúáùúáùëáùëá1,ùëáùëá2}.   (5)  See Appendix A .1 and A .2 for a detailed  derivation of the AI  mean and  corresponding  variance,  respectively. While  develop ing the non -inferiority and equivalence test procedures in the context  of a SMART, for simplicity, we consider ùúãùúãùëéùëé=ùúãùúãùëéùëéùëéùëé=ùúãùúãùëéùëé,ùëöùëö=ùúãùúãùëéùëéùëéùëé,ùëöùëö=0.5. In other words, we  assume th at individuals are randomized with equal probability to first -stage intervention options,  and non- responders as re -randomized with equal probability to second- stage intervention options.    Non-Inferiority Test    The objective of a classical non -inferiority test is to show that the efficacy of a new  intervention, when compared to an active control , is not below a pre -specified non- inferiority  margin. A non -inferiority test becomes a traditional one -sided superiority test when the non - 20   inferiority margin is set to zero. In this section, we describe the non- inferiority test procedure in  the context of a SMART. For completeness, we consider the non- inferiority test for both distinct- path and shared -path comparison of AI s. In general, for any two AIs ùëëùëëùëñùëñ and ùëëùëëùëóùëó with  corresponding means ùúáùúáùëëùëëùëñùëñ and ùúáùúáùëëùëëùëóùëó, the null and alternative hypotheses for the non -inferiority test  can be written as    ùêªùêª0: ùúáùúáùëëùëëùëñùëñ‚àí ùúáùúáùëëùëëùëóùëó‚â•ùúÉùúÉ   ùë£ùë£ùë£ùë£.   ùêªùêª1: ùúáùúáùëëùëëùëñùëñ‚àí ùúáùúáùëëùëëùëóùëó<ùúÉùúÉ, (6)  where ùúÉùúÉ (>0) is a pre- specified non- inferiority margin , and ùëóùëó‚â†ùëñùëñ‚àà{1,‚ãØ,4}. This hypothesis  tests that the average efficacy of ùëëùëëùëóùëó (the ‚Äònew‚Äô AI) is not inferior to that of ùëëùëëùëñùëñ (the control, or  ‚Äòstandard of care‚Äô AI) with reference to the non- inferiority margin ùúÉùúÉ. The unscaled test statistic is  ùëåùëåÔøΩùëëùëëùëñùëñ‚àíùëåùëåÔøΩùëëùëëùëóùëó. Intuitively,  under the alternative, the difference in favor of the control AI ( ùëëùëëùëñùëñ) is smaller  than ùúÉùúÉ, while under the null, this differ ence is equal to, or higher  than ùúÉùúÉ. As noted earlier, the  margin ùúÉùúÉ represents the maximum clinically acceptable difference in favor of the control AI ( ùëëùëëùëñùëñ)  that an investigator  is willing to accept in return for the secondary benefits (e.g., lower cost, burden  and /or side effects) of the new AI ( ùëëùëëùëóùëó). The choice of the non- inferiority margin depends on both  statistical reasoning and clinical judgment (D‚ÄôAgostino, Massaro, & Sul livan , 2003).   Comparison of Distinct -Path AI s   Let ùúáùúáùëëùëë1 and ùúáùúáùëëùëë3 be the  means of the two distinct- path AIs, ùëëùëë1 and ùëëùëë3, respectively.  Here we assume ùëëùëë3 to be  the active control  (or standard of care ) AI. The goal is  to test whether  ùëëùëë1 is non- inferior in efficacy to  ùëëùëë3. From (6), the hypothesis of interest is   ùêªùêª0: ùúáùúáùëëùëë3‚àí ùúáùúáùëëùëë1‚â•ùúÉùúÉ   ùë£ùë£ùë£ùë£.   ùêªùêª1: ùúáùúáùëëùëë3‚àí ùúáùúáùëëùëë1<ùúÉùúÉ.   The unscaled test statistic is ùëåùëåùëëùëë3‚àíùëåùëåùëëùëë1, with population mean ùúáùúáùëëùëë3‚àíùúáùúáùëëùëë1, and variance ùúàùúàùëëùëë3ùëëùëë1ùê∑ùê∑ùê∑ùê∑= (ùúéùúéùëëùëë32+ùúéùúéùëëùëë12)/ùëÅùëÅ (see equation (5)), where   21   ùúéùúéùëëùëë12=2(2‚àíùõæùõæùëéùëé)ùúéùúé2+ùõæùõæùëéùëé(2‚àíùõæùõæùëéùëé)ùúáùúáùëéùëé,ùëéùëé2+(3‚àí2ùõæùõæùëéùëé‚àíùõæùõæùëéùëé2)ùúáùúáùëéùëé,ùëöùëö2‚àí2ùõæùõæùëéùëé(1‚àíùõæùõæùëéùëé)ùúáùúáùëéùëé,ùëéùëéùúáùúáùëéùëé,ùëöùëö, and  ùúéùúéùëëùëë32=2(2‚àíùõæùõæùëéùëéùëéùëé)ùúéùúé2+ùõæùõæùëéùëéùëéùëé(2‚àíùõæùõæùëéùëéùëéùëé)ùúáùúáùëéùëéùëéùëé,ùëéùëéùëéùëé2+(3‚àí2ùõæùõæùëéùëéùëéùëé‚àíùõæùõæùëéùëéùëéùëé2)ùúáùúáùëéùëéùëéùëé,ùë£ùë£2‚àí2ùõæùõæùëéùëéùëéùëé(1‚àíùõæùõæùëéùëéùëéùëé)ùúáùúáùëéùëéùëéùëé,ùëéùëéùëéùëéùúáùúáùëéùëéùëéùëé,ùë£ùë£    (7).   Thus, under  ùêªùêª0, the large -sample distribution of the test statistic is    ùëçùëçùëëùëë3ùëëùëë1=(ùëåùëåùëëùëë3‚àíùëåùëåùëëùëë1)‚àí(ùúáùúáùëëùëë3‚àíùúáùúáùëëùëë1) ÔøΩùë£ùë£ùëéùëéùë£ùë£(ùëåùëåùëëùëë3‚àíùëåùëåùëëùëë1)=ùëåùëåùëëùëë3‚àíùëåùëåùëëùëë1‚àíùúÉùúÉ ÔøΩùúàùúàùëëùëë3ùëëùëë1ùê∑ùê∑ùê∑ùê∑‚ÜíùëÅùëÅ(0,1).  Thus, we reject ùêªùêª0 and conclude non- inferiority if ùëçùëçùëëùëë3ùëëùëë1<‚àíùëßùëßùõºùõº (one-sided  test), where ùõºùõº is  the Type -I error rate and ùëßùëßùõºùõº is the (1‚àíùõºùõº)ùë°ùë°‚Ñé quantile of the standard normal distribution. Under  a specified true mean difference ùõøùõø such that  ùúáùúáùëëùëë3‚àíùúáùúáùëëùëë1=ùõøùõø, the required sample size is   ùëÅùëÅ=(ùëßùëßùõºùõº+ùëßùëßùõΩùõΩ)2ÔøΩùúéùúéùëëùëë32+ùúéùúéùëëùëë12ÔøΩ (ùúÉùúÉ‚àíùõøùõø)2= 2(ùëßùëßùõºùõº+ùëßùëßùõΩùõΩ)2/ÔøΩùúÇùúÇùê∑ùê∑ùê∑ùê∑(Œ∏)‚àíùúÇùúÇùê∑ùê∑ùê∑ùê∑(Œ¥)ÔøΩ2 =2(ùëßùëßùõºùõº+ùëßùëßùõΩùõΩ)2/ùúÇùúÇùê∑ùê∑ùê∑ùê∑2, (8)  where ùõΩùõΩ is the T ype II error rate, ùúÇùúÇùê∑ùê∑ùê∑ùê∑(Œ∏) = ùúÉùúÉ ÔøΩÔøΩùúéùúéùëëùëë32+ùúéùúéùëëùëë12ÔøΩ/2 is the standardized margin,  ùúÇùúÇùê∑ùê∑ùê∑ùê∑(Œ¥) = ùõøùõø ÔøΩÔøΩùúéùúéùëëùëë32+ùúéùúéùëëùëë12ÔøΩ/2 is the standardized mean difference, and  ùúÇùúÇùê∑ùê∑ùê∑ùê∑= ùúÇùúÇùê∑ùê∑ùê∑ùê∑(Œ∏)‚àíùúÇùúÇùê∑ùê∑ùê∑ùê∑(Œ¥)= ùúÉùúÉ‚àíùõøùõø ÔøΩÔøΩùúéùúéùëëùëë32+ùúéùúéùëëùëë12ÔøΩ/2 is the overall standardized effect size for the comparison of two distinct -path AI s,.  Furthermore, when  ùõøùõø=0, ùúÇùúÇùê∑ùê∑ùê∑ùê∑ boils down to the standardized margin. See Appendix A .3 for the  derivation. Note that ùëÅùëÅ depends on the difference between the non- inferiority margin ùúÉùúÉ and the  true mean difference ùõøùõø rather than their individual values. Intuitively, ùúÉùúÉ‚àíùõøùõø represents the  discrepancy between the acceptable difference in favor of  the control AI ( ùëëùëë3) that one is willing to  accept in return for the secondary benefits (e.g., lower cost and participant burden) of the  alternative AI (ùëëùëë1), and the true mean difference in favor of ùëëùëë3 (i.e., ùõøùõø). The smaller that   discrepancy, the large r the total sample size ( ùëÅùëÅ) required to correctly establish non-inferiority with  power 1-  ùõΩùõΩ, given the selected Type -I error rate ùõºùõº. The quantity  ùúÇùúÇùê∑ùê∑ùê∑ùê∑ is the standardized  22   difference between ùúÉùúÉ and ùõøùõø.    Comparison of Shared -Path AI s   Next,  we consider two shared -path AI s ùëëùëë3 and ùëëùëë4 with corresponding means ùúáùúáùëëùëë3 and  ùúáùúáùëëùëë4. As before, consider ùëëùëë3 to be  the active control  (or standard of care) AI. However, now the  goal is  to investigate  whether ùëëùëë4 is non- inferior t o ùëëùëë3. Notice that both AIs start with the same  initial intervention option (app + coaching), however, while ùëëùëë3 offers vigorous augmentation to  non-responders in the form of text messaging and meal replacement, ùëëùëë4 offers modest  augmentation in the form of text messaging alone. As in the distinct- path case, the unscaled test  statistic is ùëåùëåùëëùëë3‚àíùëåùëåùëëùëë4 with mean ùúáùúáùëëùëë3‚àíùúáùúáùëëùëë4. However, in this case, the variance of the unscaled  test statistic will be different from that of the distinct- path AIs, because the set of res ponders to the  initial intervention (app + coaching) is consistent with  both ùëëùëë3 and ùëëùëë4, thereby inducing some  correlation between the two AIs . The variance of ùëåùëåùëëùëë3‚àíùëåùëåùëëùëë4 is given by    ùúàùúàùëëùëë3ùëëùëë4ùëÜùëÜùê∑ùê∑=ùëâùëâ(ùúáùúáÃÇùëëùëë3)+ùëâùëâ(ùúáùúáÃÇùëëùëë4)‚àí2 ùëÅùëÅ[ùõæùõæùëéùëéùëéùëé ùúãùúãùëéùëéùëéùëé(ùúéùúé2+ùúáùúáùëéùëéùëéùëé,ùëéùëéùëéùëé2)‚àí(ùõæùõæùëéùëéùëéùëéùúáùúáùëéùëéùëéùëé,ùëéùëéùëéùëé+(1‚àíùõæùõæùëéùëéùëéùëé)ùúáùúáùëéùëéùëéùëé,ùëöùëö)‚ãÖ (ùõæùõæùëéùëéùëéùëéùúáùúáùëéùëéùëéùëé,ùëéùëéùëéùëé+(1‚àíùõæùõæùëéùëéùëéùëé)ùúáùúáùëéùëéùëéùëé,ùë£ùë£)]    =1 ùëÅùëÅ(ùúéùúéùëëùëë32+ùúéùúéùëëùëë42‚àí2ùúéùúéùëëùëë3√óùëëùëë42), (9)   where 1 ùëÅùëÅùúéùúéùëëùëë3√óùëëùëë42=ùëéùëéùëêùëêùë£ùë£(ùúáùúáÃÇùëëùëë3,ùúáùúáÃÇùëëùëë4). See Appendix A.4 for the derivation. Therefore, under ùêªùêª0, the  large- sample distribution of the test statistic is    ùëçùëçùëëùëë3ùëëùëë4=(ùëåùëåùëëùëë3‚àíùëåùëåùëëùëë4)‚àí(ùúáùúáùëëùëë3‚àíùúáùúáùëëùëë4) ÔøΩùë£ùë£ùëéùëéùë£ùë£(ùëåùëåùëëùëë3‚àíùëåùëåùëëùëë4)=ùëåùëåùëëùëë3‚àíùëåùëåùëëùëë4‚àíùúÉùúÉ ÔøΩùúàùúàùëëùëë3ùëëùëë4ùëÜùëÜùê∑ùê∑‚ÜíùëÅùëÅ(0,1).  Hence, we reject ùêªùêª0 and conclude non- inferiority if ùëçùëçùëëùëë3ùëëùëë4<‚àíùëßùëßùõºùõº (one-sided). Similar to the  distinct- path case, under a specified true mean difference ùõøùõø such that ùúáùúáùëëùëë3‚àíùúáùúáùëëùëë4=ùõøùõø, the  required sample size for the trial is   23   ùëÅùëÅ=(ùëßùëßùõºùõº+ùëßùëßùõΩùõΩ)2ÔøΩùúéùúéùëëùëë32+ùúéùúéùëëùëë42‚àí2ùúéùúéùëëùëë3√óùëëùëë42ÔøΩ (ùúÉùúÉ‚àíùõøùõø)2  = = 2(ùëßùëßùõºùõº+ùëßùëßùõΩùõΩ)2/ÔøΩùúÇùúÇùëÜùëÜùê∑ùê∑(Œ∏)‚àíùúÇùúÇùëÜùëÜùê∑ùê∑(Œ¥)ÔøΩ2=2(ùëßùëßùõºùõº+ùëßùëßùõΩùõΩ)2/ ùúÇùúÇùëÜùëÜùê∑ùê∑2, (10)  where ùúÇùúÇùëÜùëÜùê∑ùê∑= ùúÇùúÇùëÜùëÜùê∑ùê∑(Œ∏)‚àíùúÇùúÇùëÜùëÜùê∑ùê∑(Œ¥)=ùúÉùúÉ‚àíùõøùõø ÔøΩÔøΩùúéùúéùëëùëë32+ùúéùúéùëëùëë42‚àí2ùúéùúéùëëùëë3√óùëëùëë42ÔøΩ/2 is the  standardized effect size for the  comparison of two shared- path AIs . As in case of  ùúÇùúÇùê∑ùê∑ùê∑ùê∑, the standardized effect size ùúÇùúÇùëÜùëÜùê∑ùê∑ is the  difference between the standardized margin  ùúÇùúÇùëÜùëÜùê∑ùê∑(Œ∏)=ùúÉùúÉ ÔøΩÔøΩùúéùúéùëëùëë32+ùúéùúéùëëùëë42‚àí2ùúéùúéùëëùëë3√óùëëùëë42ÔøΩ/2  and the  standardized mean difference ùúÇùúÇùëÜùëÜùê∑ùê∑(Œ¥)=ùõøùõø ÔøΩÔøΩùúéùúéùëëùëë32+ùúéùúéùëëùëë42‚àí2ùúéùúéùëëùëë3√óùëëùëë42ÔøΩ/2. Note that, in the shared- path  comparison of two AIs, only one response rate (e.g., in this case, that of the initial intervention   ùëéùëéùëéùëé) is involved.       Note that in real trials, there is always some degree of attrition; hence in order to maintain  power the sample  size (ùëÅùëÅ) need s to be inflated accordingly (in both distinct -path and shared -path  scenarios).    Standardized Effect Sizes   It is important to note that even though we use the term standardized effect size here, the meaning  of this effect size is different from Cohen‚Äôs d, as it does not quantify the standardized difference between two means  alone , but rather the standardized difference between the non -inferiori ty  margin and the true difference between the two means. Hence, the benchmark values  recommended by Cohen do not directly apply.   Furthermore, o bserve that for ùúÇùúÇ ùê∑ùê∑ùê∑ùê∑ =ùúÇùúÇùëÜùëÜùê∑ùê∑, the required sample size s (N) are same for comparison  of two distin ct-path and tw o shared -path AIs. However, one should note that although the sample  sizes are same, they may refer to different context s of non- inferiority tests with different non - inferiority margin  and/or different mean difference of AIs. For example, consider a SMART  24   wherein  the relevant embedded AIs have the following variances and covariance:  ùúéùúéùëëùëë12=3,ùúéùúéùëëùëë32= 5 ,ùúéùúéùëëùëë42= 4 and ùúéùúéùëëùëë3√óùëëùëë42 = 0.5. For distinct -path comparison of AIs {d1,d3} with Œ∏DP=  1.4 and Œ¥DP=1, the ùúÇùúÇùê∑ùê∑ùê∑ùê∑ is 0.2. On the other hand, for shared- path comparison of AIs  {d3,d4} with Œ∏SP= 2.8 and Œ¥SP=2.4, the ùúÇùúÇùëÜùëÜùê∑ùê∑ is also 0.2. Thus, i n both scenarios, the  required sample size is 268. However,  the key contextual parameters like the underlying  standardized margin and standardized mean difference are different.  One can claim that a  particular SMART is powered for both distinct -path and shared- path comparisons only if it is  acceptable to assume two different standardized margins for the two comparisons within the sam e  SMART, which is unlikely  the case i n real life.  Therefore, an investigator should first decide on  the primary mode of comparison (distinct- path vs. shared -path)  and determine the key context  parameters (standardized margin, postulated standardized mean difference) before moving to the  power /sample size calculation based on the standardized effect size derived from the above key  context parameters.  The same cautionary note applies to the equivalence tests discussed below.      Equivalence Test   As mentioned earlier, the term equivalence means that the efficacies of the two  interventions under comparison are close to each other in a way that cannot be considered superior  or inferior. Similar to the non -inferiority margin, here we consider an equivalence margin to define  the closeness of two interve ntions. An equivalence test becomes a traditional two- sided superiority  test when the equivalence margin is set to zero. An equivalence margin (‚àíùúÉùúÉ,ùúÉùúÉ) is defined at the  beginning of a trial such that any value in that range is clinically unimportant. Afte r the trial, an  equivalence is achieved if  the estimated confidence interval of the treatment difference falls within  25   (‚àíùúÉùúÉ,ùúÉùúÉ) (Ebbutt & Frith, 1998) . In general, for any two AIs ùëëùëëùëñùëñ and ùëëùëëùëóùëó with corresponding  means ùúáùúáùëëùëëùëñùëñ and ùúáùúáùëëùëëùëóùëó, the null and alternative hypotheses for the equivalence test are specified as    ùêªùêª0: ùúáùúáùëëùëëùëñùëñ‚àí ùúáùúáùëëùëëùëóùëó‚â•ùúÉùúÉ   ùëêùëêùëâùëâ    ùúáùúáùëëùëëùëñùëñ‚àí ùúáùúáùëëùëëùëóùëó‚â§‚àíùúÉùúÉ   ùë£ùë£ùë£ùë£.   ùêªùêª1:‚àíùúÉùúÉ< ùúáùúáùëëùëëùëñùëñ‚àí  ùúáùúáùëëùëëùëóùëó<ùúÉùúÉ,  (11)  where ùúÉùúÉ (>0) is a pre- specified equivalence margin. The above test actually contains two  separate sub-tests: (1) a non- inferiority test ( ùêªùêª01: ùúáùúáùëëùëëùëñùëñ‚àí ùúáùúáùëëùëëùëóùëó‚â•ùúÉùúÉ   ùë£ùë£ùë£ùë£.   ùêªùêª11:ùúÉùúÉ<ùúáùúáùëëùëëùëñùëñ‚àí  ùúáùúáùëëùëëùëóùëó<ùúÉùúÉ) and (2) a non -superiority test ( ùêªùêª02: ùúáùúáùëëùëëùëñùëñ‚àí ùúáùúáùëëùëëùëóùëó‚â§‚àíùúÉùúÉ   ùë£ùë£ùë£ùë£.   ùêªùêª12: ùúáùúáùëëùëëùëñùëñ‚àí ùúáùúáùëëùëëùëóùëó> ‚àíùúÉùúÉ). In traditional RCT s, due to ease of use and recommendation from the U nited States Food and  Drug Administration (FDA),  a two one -sided tests  (TOST) procedure is widely used for  equivalence test s (Schuirm ann, 1987; Lauzon &  Caffo, 2009).  Note that, in a TOST, two one -sided  tests are considered , each of which  having Type -I error rate ùõºùõº. Even though in order to achieve  equivalence , both sub- tests require to reject the correspond ing null hypothese s, the overall Type -I  error rate of the TOST  procedure  is still ùõºùõº, because only one of the two null hypotheses  corresponding to the two sub- tests can be true at any one point of time . We further illustrate this  point using simulation studies; see results presen ted in Tables 6 and 7  below . However, it turns  out that a TOST  procedure is operationally identical to the procedure of declaring equivalence if  the ordinary (1 - 2Œ±) x100% confidence interval (CI) for the mean difference of two AIs is  completely contained  in the equivalence margin ( -Œ∏, Œ∏) (Schuirmann, 1987). In this section, we  develop an equivalence test procedure for SMART, separately for the distinct -path and the shared - path AI s.  Comparison of Distinct -Path AI s   First, we consider the non- inferiority sub-test of an equivalence test for distinct -path AIs.  For the two distinct -path AIs ùëëùëë1 and ùëëùëë3 with respective means ùúáùúáùëëùëë1 and ùúáùúáùëëùëë3, we repeat the  26   non-inferiority test procedure described in the previous section. The same test statistic ùëçùëçùëëùëë3ùëëùëë1 is  used to test ùêªùêª01: ùúáùúáùëëùëë3‚àí ùúáùúáùëëùëë1‚â•ùúÉùúÉ   ùë£ùë£ùë£ùë£.   ùêªùêª11: ùúáùúáùëëùëë3‚àí ùúáùúáùëëùëë1<ùúÉùúÉ. The null hypothesis ùêªùêª01  will be rejected if ùëçùëçùëëùëë3ùëëùëë1<‚àíùëßùëßùõºùõº.   For the non- superiority sub-test ùêªùêª02: ùúáùúáùëëùëë3‚àí ùúáùúáùëëùëë1‚â§‚àíùúÉùúÉ   ùë£ùë£ùë£ùë£.   ùêªùêª12: ùúáùúáùëëùëë3‚àí ùúáùúáùëëùëë1> ‚àíùúÉùúÉ, the large- sample distribution of the test statistic  under ùêªùêª02 is    ùëçùëçùëëùëë3ùëëùëë1‚àó=(ùëåùëåùëëùëë3‚àíùëåùëåùëëùëë1)‚àí(ùúáùúáùëëùëë3‚àíùúáùúáùëëùëë1) ÔøΩùë£ùë£ùëéùëéùë£ùë£(ùëåùëåùëëùëë3‚àíùëåùëåùëëùëë1)=ùëåùëåùëëùëë3‚àíùëåùëåùëëùëë1+ùúÉùúÉ ÔøΩùúàùúàùëëùëë3ùëëùëë1ùê∑ùê∑ùê∑ùê∑‚ÜíùëÅùëÅ(0,1).  Notice that, ùëçùëçùëëùëë3ùëëùëë1‚àó is different from ùëçùëçùëëùëë3ùëëùëë1 with respect to the sign of ùúÉùúÉ in their expressions.  Reject ùêªùêª02 and conclude non- superiority if ùëçùëçùëëùëë1ùëëùëë3‚àó>ùëßùëßùõºùõº. Finally, w e conclude equivalence when  both tests reject the corresponding null hypotheses. Given a  postulated true mean difference ùõøùõø= ùúáùúáùëëùëë3‚àíùúáùúáùëëùëë1‚â†0, there is no closed- form solution for the minimum required sample size  (ùëÅùëÅ).  However, the power of the equivalence test is given by       Œ¶ÔøΩ‚àíùëßùëßùõºùõº+ùúÉùúÉ‚àíùõøùõø ÔøΩùúàùúàùëëùëë3ùëëùëë1ùê∑ùê∑ùê∑ùê∑ÔøΩ‚àíŒ¶ÔøΩùëßùëßùõºùõº‚àíùúÉùúÉ+ùõøùõø ÔøΩùúàùúàùëëùëë3ùëëùëë1ùê∑ùê∑ùê∑ùê∑ÔøΩ   = Œ¶ÔøΩ‚àíùëßùëßùõºùõº+(ùúÇùúÇùê∑ùê∑ùê∑ùê∑(Œ∏)‚àíùúÇùúÇùê∑ùê∑ùê∑ùê∑(Œ¥))ÔøΩùëÅùëÅ 2ÔøΩ‚àíŒ¶ÔøΩùëßùëßùõºùõº‚àí(ùúÇùúÇùê∑ùê∑ùê∑ùê∑(Œ∏)+ùúÇùúÇùê∑ùê∑ùê∑ùê∑(Œ¥))ÔøΩùëÅùëÅ 2ÔøΩ, (12)  where the standardized margin  ùúÇùúÇùê∑ùê∑ùê∑ùê∑(Œ∏)= ùúÉùúÉ ÔøΩÔøΩùúéùúéùëëùëë32+ùúéùúéùëëùëë12ÔøΩ/2, the standardized  mean difference   ùúÇùúÇùê∑ùê∑ùê∑ùê∑(Œ¥)= ùõøùõø ÔøΩÔøΩùúéùúéùëëùëë32+ùúéùúéùëëùëë12ÔøΩ/2  and  Œ¶(ùë•ùë•) denotes the cumulative distribution function of a standard  normal variable evaluated at a point ùë•ùë•. See Appendix A .5 for the derivation. The formula in (12)  can be used to estimate the power corresponding to a particular sample size ( ùëÅùëÅ) when all the  involved parameters are known. Repeating the procedure to estimate the power corresponding to  different ùëÅùëÅ leads to an iterative procedure to derive the required sample size corresponding to a  27   desired power. Note that, unlike the comparison of distinct -path AIs in the non- inferiority  setting,  here the sample size based on  expression  (12) depends on the individual values of ùúÉùúÉ and ùõøùõø, as  opposed to their difference ùúÉùúÉ‚àíùõøùõø alone.       In the special case when the postulated true mean difference  ùõøùõø=0, the minimum sample  size has a closed form and is given by    ùëÅùëÅ=ÔøΩùëßùëßùõºùõº+ùëßùëßùõΩùõΩ/2ÔøΩ2(ùúéùúéùëëùëë32+ùúéùúéùëëùëë12) ùúÉùúÉ2 =2ÔøΩùëßùëßùõºùõº+ùëßùëßùõΩùõΩ 2ÔøΩ2 ùúÇùúÇùê∑ùê∑ùê∑ùê∑2(Œ∏). (13)  Comparison of Shared -Path AI s   In an equivalence test procedure to compare two shared -path AIs ùëëùëë3 and ùëëùëë4, as before,  we first focus on the non -inferiority sub-test described above . The test statistic ùëçùëçùëëùëë3ùëëùëë4 is used to  test ùêªùêª01: ùúáùúáùëëùëë3‚àí ùúáùúáùëëùëë4‚â•ùúÉùúÉ   ùë£ùë£ùë£ùë£.   ùêªùêª11: ùúáùúáùëëùëë3‚àí ùúáùúáùëëùëë4<ùúÉùúÉ. The null hypothesis ùêªùêª01 will be  rejected if ùëçùëçùëëùëë3ùëëùëë4<‚àíùëßùëßùõºùõº. For the non- superiority sub-test ùêªùêª02: ùúáùúáùëëùëë3‚àí ùúáùúáùëëùëë4‚â§ ‚àíùúÉùúÉ   ùë£ùë£ùë£ùë£.   ùêªùêª12: ùúáùúáùëëùëë3‚àí ùúáùúáùëëùëë4>‚àíùúÉùúÉ, the large- sample distribution of the test statistic  under ùêªùêª02  is    ùëçùëçùëëùëë3ùëëùëë4‚àó=(ùëåùëåùëëùëë3‚àíùëåùëåùëëùëë4)‚àí(ùúáùúáùëëùëë3‚àíùúáùúáùëëùëë4) ÔøΩùë£ùë£ùëéùëéùë£ùë£(ùëåùëåùëëùëë3‚àíùëåùëåùëëùëë4)=ùëåùëåùëëùëë3‚àíùëåùëåùëëùëë4+ùúÉùúÉ ÔøΩùúàùúàùëëùëë3ùëëùëë4ùëÜùëÜùê∑ùê∑‚ÜíùëÅùëÅ(0,1).  We reject ùêªùêª02 and conclude non- superiority if ùëçùëçùëëùëë3ùëëùëë4‚àó>ùëßùëßùõºùõº. As in  the distinct- path scenario, we  conclude equivalence when b oth sub-tests reject the corresponding null hypotheses. The power of  the test for a given ùëÅùëÅ can be obtained from  the express ion (12) with ùúÇùúÇùê∑ùê∑ùê∑ùê∑(Œ∏) and  ùúÇùúÇùê∑ùê∑ùê∑ùê∑(Œ¥) replaced by ùúÇùúÇùëÜùëÜùê∑ùê∑(Œ∏) and Œ∑ùëÜùëÜùê∑ùê∑(Œ¥), respectively , where  the standardized margin  ùúÇùúÇùëÜùëÜùê∑ùê∑(Œ∏)=  ùúÉùúÉ ÔøΩÔøΩùúéùúéùëëùëë32+ùúéùúéùëëùëë42‚àí2ùúéùúéùëëùëë3√óùëëùëë42ÔøΩ/2 and the standardized mean difference Œ∑ùëÜùëÜùê∑ùê∑(Œ¥)=  ùõøùõø ÔøΩÔøΩùúéùúéùëëùëë32+ùúéùúéùëëùëë42‚àí2ùúéùúéùëëùëë3√óùëëùëë42ÔøΩ/2.  To estimate the minimum required sample size when the postulated true mean difference ùõøùõø‚â†0,  one can compute the power for a series of ùëÅùëÅ until ones finds a suitable ùëÅùëÅ corresponding to a  28   desired power.         Finally, i n the special case of ùõøùõø=0, the minimum sample size  is given by     ùëÅùëÅ=ÔøΩùëßùëßùõºùõº+ùëßùëßùõΩùõΩ/2ÔøΩ2ÔøΩùúéùúéùëëùëë32+ùúéùúéùëëùëë42‚àí2ùúéùúéùëëùëë3√óùëëùëë42ÔøΩ ùúÉùúÉ2 =2ÔøΩùëßùëßùõºùõº+ùëßùëßùõΩùõΩ 2ÔøΩ2 ùúÇùúÇùëÜùëÜùê∑ùê∑2(Œ∏). (14)  Simulation Studies    In this section, we discuss simulation studies conducted to: (a) investigate how the Monte  Carlo  (MC) power varies with the standardized effect size ( ùúÇùúÇ) and the sample size ( ùëÅùëÅ), when the  margin (ùúÉùúÉ) is fixed , by studying power curves ; (b) empirically assess the performan ce of the  sample size formulas in both non- inferiority and equivalence tests when th e nominal power is fixed  at 80% ; (c) check the robustness of our sample size formula to the key working assumption of  equal variance across various intervention sequences; and (d) illustrate the control of T ype I error  rate at or below the nominal 5% level  under the TOST procedure employed in equivalence testing.   The R -codes related to the simulation studies are available in  Open Science Framework  (https://osf.io/hwae3/ ).     Simulation Design    The data generation process and the various required parameter values  under  all the   simulation scenarios are given in the Appendix  (section A.6 and Table 1 ).   For the first goal of studying power curves, we do not calculate N  from the sample size  formulas, but  rather set N to specific values  (e.g., N = 100, 200, 300 or 500). For illustration  purpose, we set the non- inferiority/equivalence margin ùúÉùúÉ=2. Then, for varying  standardized  effect sizes, we generate 1000 simulated SMART datasets with the same size N . Next , for each of  the 1000 datasets, we calculate the test statistic, and depending  on its value, either reject or accept  29   the null hypothesis. Finally , we calculate t he MC power  as the percentage of tests for which the  null hypothesis is rejected. For exam ple, if the null hypothesis is rejected in 810 out of the 1000  tests, then the MC power is 81%. In the power curves, the horizontal axis corresponds to  standardized effect size and the vertical axis corresponds to estimated power.   For the second goal of a ssessing the adequacy of the sample size formulas, we f irst set the  Type I error rate at  5%, the desired power at 80%, and the standardized effect size at  a fixed value  (e.g., 0.3). Next , we use these parameters to calculate the required sample size based on the relevant  sample size formula, namely , equation (8), (10), (13) or (14), depending on whether the focus is  on non-inferiority/equivalence testing and distinct -path/shared -path comparison. For example, in  the case of a non- inferiority distinct- path co mparison, the calculated N for a 0.3 standardized effect  size with 80% power and 5% type I error rate is 138. Then , based on the calculated N (e.g., N=138)  we generate 1000 simulated SMART datasets  with the same size ; thereafter  for each of the 1000  datasets, we calculate the test statistic and either reject or accept the null hypothesis  based on its  value . Finally, as in the case of studying power curves, we calculate t he MC power  as the  percent age of the tests for which the null hypothesis is  reject ed. An estimated MC power close to  the nominal value of 80% indicates that the sample size formula is adequate.   The third goal of checking  the robustness of our sample size formula s to the key working  assumption of equal variance across various intervention sequences  (see equation (1)) is  operationally similar  to the second goal described above. Here we calculate a robust version of  MC power ( ùëùùëùùëêùëêùë§ùë§ùëíùëíùëâùëâÔøΩùë£ùë£ùëüùëüùëüùëüùëüùëüùëüùëüùë°ùë°) using 1000 simulated datasets following the same steps as above, but   the data generation is  slightly differen t. Specifically,  in any given simulation scenario, we first  determine the total required sample size ùëÅùëÅ of the SMART based on the relevant formula; then  for each  possible intervention sequence  {ùëáùëá1,ùëáùëá2} in that  SMART, we generate ùëÅùëÅùëáùëá1,ùëáùëá2 number of  30   observations on the primary outcome  ùëåùëå from ùëÅùëÅ(ùúáùúáùëáùëá1,ùëáùëá2,œÉT1T22) such that ‚àëùëÅùëÅùëáùëá1,ùëáùëá2 ùëáùëá1,ùëáùëá2=ùëÅùëÅ, where  œÉùëáùëá1,ùëáùëá2 is a random number generated from the uniform distribution ( max (0.5,œÉ ‚àí 1),œÉ+1),  with œÉ being  the assumed common standard deviation across  all the intervention sequences.  Thus, even though our working assumption for the sample size formula takes the variances across  the intervention sequences to be equal, the data here are generated under different variances.  Hence, a value of the rob ust version of power ( ùëùùëùùëêùëêùë§ùë§ùëíùëíùëâùëâÔøΩùë£ùë£ùëüùëüùëüùëüùëüùëüùëüùëüùë°ùë°) close to the nominal power of 80%  would establish the robustness of our sample size formulas.       For the fourth goal of illustrating  the control of Type I error rate at or below the nominal 5%  level under the  TOST procedure employed in equivalence testing , we first determine the required  sample sizes based on our formulas and then generate data when there is no true effect. Based on  similar Monte Carlo technique as described above, we assess the rejection rates of the equivalence test. We also investigate additional sample sizes in the range 500 -5000.    Results   In Figure 3, we present the power curves for both the distinct -path and the shared- path  settings in non- inferiority and equivalence tests  based on MC simulations . As expected, given a  fixed standardized effect size ( ùúÇùúÇ), the power increases as the sample size increases from 100 to  500, for all the four scenarios. For a given ùúÇùúÇ, the amount of increase in power is substantial for a  change in  the sample size from 100 to 200,  compare d to the change in the sample size from 200 to  300 or from 300 to 500. The power curve representation conveys a requirement of samples  in the  range  of 100-200 in order to detect  a standardized effect size in the ran ge of 0.4 to 0.2, respectively.  In case of equivalence tests , the power curves become gradually symmetric when the sample size  increases  from 100 to 500; however, for small trial sizes, the small number of samples in each  31   experimental subgroup results in deviation from approximate normality of AI means, which in  turn results in the slight asymmetry in the power curves .  In Table 2 , we focus on a non-inferiority  test involving the comparison of two distinct -path  AIs ùëëùëë1 and ùëëùëë3, wherein ùëÅùëÅ represent s the required sample size calculated from  the relevant  sample size formula , and ùëùùëùùëêùëêùë§ùë§ùëíùëíùëâùëâÔøΩ  is the corresponding MC power . Note that the highest  standardized effect size ùúÇùúÇùê∑ùê∑ùê∑ùê∑ in Table 2  is 0.379 with corresponding sample size ùëÅùëÅ=87. We do  not choose any higher standardized effect size in order to avoid smal l sample sizes (say , less than  80), because a SMART design with fewer than 80 samples may end up with very few individuals  for some intervention sequences. In Table 2 , the ùëùùëùùëêùëêùë§ùë§ùëíùëíùëâùëâÔøΩ  values range from 0.79 to 0.84. The  required sample size ùëÅùëÅ is a decreasing function of ùúÇùúÇùê∑ùê∑ùê∑ùê∑, as expected. The value of the margin is  also varied in our study , ùúÉùúÉ‚àà{2.5,3.0}. A smaller value of ùúÉùúÉ results in a smaller standardized  effect size, which in turn increases the required sample size.   Similarly, in Table 3, we focus on a non-inferiority  test involving the comparison of two  shared -path AIs ùëëùëë4 and ùëëùëë3. Here we consider only one (shared) response rate  ùõæùõæùëéùëéùëéùëé. In Table 3 ,  the ùëùùëùùëêùëêùë§ùë§ùëíùëíùëâùëâÔøΩ  values range from 0. 77 to 0.84. As expected, the required sample size ùëÅùëÅ is a  decreasing function of the corresponding standardized effect size.   The last columns in  both Tables  2 and 3 show the estimated robust  power (ùëùùëùùëêùëêùë§ùë§ùëíùëíùëâùëâÔøΩùë£ùë£ùëüùëüùëüùëüùëüùëüùëüùëüùë°ùë°)  values , where  the data generation violates the working assumption of equal variance across  intervention sequences. These values range between 0.79 and 0.82 in Table 2 and between 0.76  and 0.84 in Table 3, and are either same or close to the  corresponding  ùëùùëùùëêùëêùë§ùë§ùëíùëíùëâùëâÔøΩ  values, thereby  establishing  the robustness of our  proposed sample size formulas.   As explained earlier, i n an equivalence test, there is no closed -form expression of the  required sample size in general; however, in the special case when ùõøùõø=0, the sample size  can be  32   written in a closed form. In Table s 4 and 5, we present  simulation  results from equivalence tests  in distinct- path and shared- path comparisons  of two AIs, respectively. Here we assume ùõøùõø= ùõøùõøùê∑ùê∑ùê∑ùê∑=ùõøùõøùëÜùëÜùê∑ùê∑=0 and ùõæùõæùëéùëé=ùõæùõæùëéùëéùëéùëé=ùõæùõæ. From Table s 3 and 4, clearly the required sample size ùëÅùëÅ is a  decreasing function of ùõæùõæ for both the distinct -path and the sha red-path comparisons. In Table 4   (distinct- path comparison), the ùëùùëùùëêùëêùë§ùë§ùëíùëíùëâùëâÔøΩ  values range from 0.82 to 0.84; likewise , in Table 5  (shared -path comparison), the ùëùùëùùëêùëêùë§ùë§ùëíùëíùëâùëâÔøΩ  values range from 0.83 to 0.86.   In Table s 6 and 7, we have verified that the Type -I error rate is controlled at or below 5%   (for nominal  ùõºùõº=0.05) when there is no effect . In both tables, the respective sample sizes 244  and 175 in the first rows are based on the sample size formula for the equivalence test when ùõøùõø=  ùõøùõøùê∑ùê∑ùê∑ùê∑= ùõøùõøùëÜùëÜùê∑ùê∑=0. Other values of N, 500 -5000, are provided when the standardized effect sizes  0.265 and 0.313 are fixed in Table s 6 and 7, respectively . The estimate Type -I error rate s in both  the tables establish  our claim that the T ype I error rate is controlled at or below 5% when there is  no effect even with increasing sample sizes.   Discussion   Non-inferiority  and equivalence tests are widely us ed in traditional randomized controlled  trials (RCTs) to establish the non- inferiority or the equivalence of one intervention, which has  some secondary benefit (e.g. less  costly or less burdensome) , over the other. Blackwelder (1982)  gave a detailed discussion on the inappropriate use of the usual null hy pothesis to show that a new  therapy was as effective as a standard  therapy. The roles of the null and alternative hypotheses  (hence the Type -I and Type-II error rate s) are reversed from traditional superiority test to a non- inferiority (and equivalence) test. An investigator should take note of this reversal when  interpreting results from a non- inferi ority/equivalence test.   We motivated the need for non- inferiority an d equivalence test s for SMARTs by  33   considering an example from the SMART weight loss study.  We have developed data analytic  methods and sample size formulas for SMART studies with  primary scientific questions  concerning the non- inferiority or equivalence of  one adaptive intervention (AI) over another.  The  simulation studies demonstrate the adequacy of the sample size formulas. The estimated power  (based on MC simulations) came out to be  very close to the nominal value of 80% in all scenarios.   The developed m ethodologies can handle situations in which the AIs under comparison begin with  different intervention options (i.e., distinct -path) and also in which they begin with the same  intervention option (i.e., shared- path). We illustrate the usefulness of our met hodology in  analyzing SMART data to conclude non- inferiority/equivalence among AIs through simulated  data analyses in the Appendix (see section A.7 and Appendix Table 2).  The simulation studies also demonstrate  the practical feasibility of testing non -inferiority  and equivalence with data arising from SMARTs , given the realistic sample sizes  needed to  achieve adequate power . SMARTs enrolling 200- 700 participants are highly common. For  example, both the Adapt RBT  SMART for developing an a daptive reinforcement -based  treatment  for pregnant women who are drug d ependent  (H. Jones, PI; NIH/NIDA R01DA014979; see Lei ,  Nahum -Shani, Lynch, Oslin, & Murphy , 2012) and the ExTENd  SMAR T for extending t reatment  effectiveness of naltrexone (D. Oslin, PI, NIH/NIA AA; NIAAAOSL01485 ; see Nah um-Shani et  al., 2017)  enrolled about 300 participants, the ENGAGE SMART study for engaging cocaine- dependent  individuals in treatment services (McKay et al., 2015) enrolled 500 participants, and  the PLUTO SMART (Fu et al., 2017) for lung c ancer screening and tob acco cessation (PLUTO)   enrolled 1,000 participants. In this light, SMART with sample size in the range 50 -200 may be  considered a small SMART.   The methods described  in the current manuscript are  motivated by various SMART  studies,  34   including the  SMART Weight Loss study that we have used throughout for illustration. Given  resource limitations, many SMART studies (see Lei et al., 2012) seek to inform the construction  of stepped- care adaptive interventions (Sobel l & Sobel l, 2000) , whereby minimal support   (consisting of relatively low burden and/or low-cost intervention options)  is offered initially, and  more burdensome/costly interventions are reserved for those who need it most (i.e., those who do not respond adequately to m inimal support ). In this context , testing non- inferiority or equivalence  of one embedded AI (e.g., the less costly/burdensome) over another ( e.g., an AI that represent s a  more costly/burdensome  standard of care)  is logical and practically meaningful.  In fact, in  the  current era of fast technological advancements, there is increasing interest in developing stepped - care behavioral interventions that use mHealth tools as minimal support. mHealth interventions  capitalize on mobile and/or wireless devices to del iver behavioral interventions in a relatively low   cost, low  burden, and accessible manner  (Kumar et al., 2013) . The use of SMART studies to  investigate the optimal way to integrate mHealth tools with more traditional intervention  components  in order to achieve more cost -effective and scalable intervention programs often  necessitates non-inferiority and equivalence testing framework s. For example, the justification for  initiating treatment by offering a  new mHealth  tool (e.g., weight loss app) instead of a more  costly /burdensome traditional intervention component (e.g., coaching or in- person sessions)   requires  demonstrating that the weight loss generated by an AI that integrates the new mHealth  tool is only marginally lower than  the more costly/burdensome tr aditional approach.   Whether the SMART should be sized for non- inferiority or equivalence depends on the  scientific  questions motivating the trial. Non-inferiority is used  when the primary objective is to  demonstrate that the novel approach (e.g., an AI that integrates low-cost or low -burden  components such as mHealth tools) is not worse than an active control intervention (e.g., an AI  35   that offers more costly/burdensome components throughout) . In this case, the n ovel intervention  is expected to be only marginally less beneficial ( and possibl y even more beneficial ) than the active  control intervention. Equivalence is used when the primary objective is to demonstrate that the  novel intervention is neither worse nor better than the active control.  Equivalency designs are  rarely used in randomized trials aiming to construct or evaluate less costly/burdensome behavioral  interventions  because their typical objective is to show that the effectiveness  of a new intervention   is only marginally lower (i.e., non- inferior) , as opposed to similar (i.e., equivalence)  compared to  the standard  of care ( Greene, Morland, Durkalski, & Frueh, 2008).   A SMART can have one (or multiple) primary hypothesis and multiple secondary  hypotheses ( Almirall et al. , 2014). In an experi mental trial, an investigator determine s the required  sample size based on the primary hypothesis ( Piantadosi, 2005) . However, s /he may have other  secondary hypotheses which justify the inclusion of adaptive interventions (say, AI #2, AI # 4)  other than ma in adaptive interventions of interest (say for distinct -path comparison: AI #1 vs. AI  #3). However, not all the secondary hypotheses are necessarily adequately powered ( Murphy,  2005). Nonetheless,  these secondary or exploratory aims are important in advancing science as it  can facilitate preliminary insights to inform future studies or to generate new hypotheses.    From an investigator‚Äôs point of view, an advantage of the developed methods is that the  required sample size can be calculated only by specifying the standardized effect size ( as a  function of standardized margin and the standardized mean difference ), without having to specify  additional parameters that are often difficult to elicit (e.g., vari ances). To make these methods  accessible to investigators, we have developed freely available online tools ( https://osf.io/z7av5/ )  using R statistical software. These tools allow investigators to plan sample size for S MART studies  aiming to test the non -inferiority or equivalence of one embedded AI compared to another without  36   requiring any programming knowledge. They also allow investigators to analyze data from  completed SMART studies to answer questions about non- inferiority and equivalence.   Our entire methodology of non- inferiority/equivalence testing as presented in this article  relies on the classical frequentist paradigm , which concludes non- inferiority/equivalence based on  a pre- specified threshold (say, 0.05) of the corresponding p- values . To overcome th is over- dependence on the p- value cutoff in hypothesis testing, many researchers prefer a Bayesian  analysis, and in particular, a quantification of evidence in favor of a hypothesis through a quantity  called Bayes Factor . A full-fledged Bayesian analysis that needs to specify prior distributions for  parameters under both the null and alternative hypotheses is beyond the scope of the current article .  However, there exist s a simple way to convert an observed p- value t o construct an upper bound of  the Bayes Factor ; this bound is given by  1 ‚àí ùëíùëí ùëùùëùlog(ùëùùëù), where ùëùùëù denotes the p -value (Benjamin and  Berger, 2016; Bayarri et al., 2016). The above  upper bound is the largest possible value of the  Bayes Factor over any (reasonable) choice of the prior distribution for the alternative hypothesis ,  and thus represents the maximum possible evidence in favor of the alternative hypothesis present in the data . Being  a simple function of the p- value , it is easy to calculate.  Also, it is an acceptable   metric  to both Bayesians and frequentists . While illustrating our non -inferiority/equivalence  testing methodology through some simulated dataset in the Appendix, we also report the estimated upper bounds  of the Bayes Factor  in additi on to the usual p- values (see Appendix section A.7 and  Appendix Table 2).    Limitations and Directions for Future Research   The described methods in the current manuscript are based on the so -called restricted  SMART  wherein only one group of participants (e .g., non- responders to the first -stage  37   intervention) are re -randomized at the second stage . In principle, the developed methods , with   some modification , can also be applied to other types of SMART designs discussed in the  introduction. For example, in a SM ART, when  both the responders and non- responders from the  first stage are re- randomized at the second stage, the mean and the variance formula of an AI can  be derived from the same approach as in the Appendix , even though we have not explicitly done  that. The rest of the developed procedures remain the same in the context of non- inferiority/equivalence tests.   In the current article, we have described  the non- inferiority and equivalence testing  framework with respect to continuous outcomes only. However, the  same methodology can be  easily extended to binary outcomes, following the work of Ghosh, Cheung, and Chakraborty   (2016). For time-to-event  outcomes, some additional work may be necessary to develop non - inferiority/equivalence versions of the weighted log -rank tests considered by Kidwell and Wahed  (2013). Some work can be done to extend the proposed methodology  for longitudinal outcome  data (to incorporate within -person correlation)  and for clustered SMARTs (to incorporate  intraclass correlation ).  The non- inferiority/equivalence margin ùúÉùúÉ is a key concept that formalizes the notion of  sufficiently close in such trials. However, setting an appropriate value of ùúÉùúÉ remains a challenge.  A margin that is too narrow may lead to unnecessarily large sample size requirements, whereas a  margin  that is  too wide may end up establishing an equivalence for two interventions that are in  fact substantially different. Information from recent clinical trials involving the standard treatment  can provide useful guideli nes for choosing an appropriate value of  ùúÉùúÉ (D‚ÄôAgostino et al., 2003) .  Further discussion of  the selection of non- inferiority margin in an RCT can be found in Chow and  Song (2016).  In the context of SMARTs, if the treatment sequences consist of marketed dr ugs,  38   data from the corresponding phase -III trials can be used to choose a value of ùúÉùúÉ. More in- depth  thought about how to optimally set the value of ùúÉùúÉ is necessary in the SMART design context; we  view this as an important future work.   In this article, we have not considered a policy evaluation approach  to find an optimal AI   (Zhao et al., 2012, 2015a,b; Zhang et al., 2012;  Logan   et al., 2017; Laber et al., 2018) . In  particular, Logan  et al. (2017)  use Bayesian Additive Regression Trees (BART) to model the  conditional mean function of the outcome and to inform identification of an individualized  treatment rule (ITR)  and subsequently proposed a method to find the optimal ITR.  A policy  evaluation approach in the context of non- inferiority/equivalence tests will be exciting future work.  Specifically, it would be interesting  to find a n optimal AI based on the individuals‚Äô treatment and  other covariates‚Äô in formation among a finite set of non- inferior ( equiva lent) AIs .     Acknowledgements    Bibhas Chakraborty acknowledges support from the Duke -NUS Medical School,  National University of Singapore, and an AcRF Tier 2 grant (MOE2015- T2-2-056) from the   Ministry of Education, Singapore.  Bonnie Spring and Inbal Nahum -Shani acknowledge that  support for the Smart Weight Loss Management  study was provided by National Institutes of  Health grant R01DK108678. Inbal Nahum Shani also acknowledges support from  the National  Institutes of Health  grant s R01 DA039901 and P50 DA039838.         39   References   Almirall, D., Nahum -Shani, I., Sherwood, N. E., & Murphy, S. A. (2014). Introduction to SMART  designs for the development of adaptive interventions: with application to weight loss  research.  Translational behavioral medicine , 4(3), 260- 74.  Almirall, D., DiStefano, C., Chang, Y. C., Shire, S., Kaiser, A., Lu, X., ... & Kasari, C. (2016).  Longitudinal effects of adaptive interventions with a speech- generating device in  minimally verbal children with ASD.  Journal of Clinical Child & Adolescent  Psychology , 45(4 ), 442- 456.  Almirall, D., Kasari, C., McCaffrey, D. F., & Nahum -Shani, I. (2018a ). Developing Optimized  Adaptive Interventions in Education. Journal of Research on Educational Effectiveness ,  11(1), 27- 34. doi : 10.1080/19345747.2017.1407136  Almirall D., Nah um-Shani I., Wang L., Kasari C. (2018b ) Experimental Designs for Research  on Adaptive Interventions: Singly and Sequentially Randomized Trials. In: Collins L.,  Kugler K. (eds) Optimization of Behavioral, Biobehavioral, and Biomedical  Interventions. Statistics for Social and Behavioral Sciences . Springer, Cham   Appel , L. J., Clark , J. M., Yeh , H. C., Wang , N. Y., Coughlin, J. W., Daumit , G., ‚Ä¶ Brancati , F.L.  (2011) . Comparative effectiveness of weight -loss interventions in clinical practice. The  New En gland Journal of Medicine , 365, 1959 ‚Äì 19 68. PMID: 22085317   August, G. J., Piehler, T. F., & Miller, F. G. (2018). Getting ‚ÄúSMART‚Äù about implementing multi - tiered systems of support to promote school mental health. Journal of school psychology, 66, 85- 96.  Blackwelder  W.C. (1982). ‚ÄúProving the null  hypothesis‚Äù in clinical trials . Controlled Clinical  40   Trials , 3, 345 -  353.   Bayarri, M.J., Benjamin, D. J., Berger, J. O. & Sellke, T. M. (2016). Rejection odds and rejection  ratios: A proposal for statistical practice in testing hypotheses. Journal of Mathematical  Psychology , 72, 90 -  103.   Benjamin, D . J., and Berger J . O. (2016). ‚ÄúComment: A simple alternative to p- values.‚Äù The  American Statistician. Published Online March 7. Invited comment on ‚ÄúThe American Statistical Association Statement on Statistical Significance and p -values.‚Äù   Chakraborty , B., & Moodie , E. E. M . (2013). Statistical methods for dynamic treatment regimes:  Reinforcement learning, causal inference, and personalized medicine . New York:   Springer .  Chakraborty , B., Laber , E. B., & Zhao , Y. Q. (2013) . Inference for optimal dynamic treatment  regimes using an adaptive m -out-of-n bootstrap scheme. Biometrics , 69, 714 ‚Äì 723.  Chakraborty, B . & Murphy, S . A. (2014). Dynamic Treatment Regimes. Annual Review of  Statistics and Its Application , 1, 447- 464.  Chakraborty, B., Laber, E. B., & Zhao, Y. Q. (2014). Inference about the expected performance of  a data- driven dynamic treatment regime. Clinical trials  (London, England), 11(4), 408- 417.  Chakrab orty, B., Ghosh, P., Moodie , E. E. M., & Rush, A. J. (2016). Estimating optimal shared- parameter dynamic regimens with application to a multistage depression clinical trial. Biometrics, 72(3) , 865 ‚Äì 876.  Chow , S. C., and Song, F. (2016). On selection of ma rgin in non- inferiority trials. Journal of  Biometrics & Biostatistics , 7, 1 ‚Äì 6.  41   Chuang -Stein, C., Follman, D., & Chappell, R. (2014). University of Pennsylvania 6th annual  conference on statistical issues in clinical trials: Dynamic treatment regimes (afternoon  session). Clinical Trials , 11(4) , 457 ‚Äì 466.   Collins , L. M., Murphy , S. A., & Bierman , K. L. (2004). A conc eptual framework for adaptive  preventive interventions. Prevention Science, 5(3) , 185 ‚Äì 196.  Collins, L. M., Murphy, S. A., & Strecher, V. (2007). The multiphase optimization strategy  (MOST) and the sequential multiple assignment randomized trial (SMART): N ew methods  for more potent eHealth interventions. American Journal of Preventive Medicine, 32(5),  S112 ‚Äì S118.   Connell, A. M., Dishion, T. J., Yasui, M., & Kavanagh, K. (2007). An adaptive approach to family  intervention: linking engagement in family -centered intervention to reductions in  adolescent problem behavior. Journal of Consulting and Clinical Psychology , 75(4),   568.  D‚ÄôAgostino Sr., R. B., Massaro, J. M., & Sullivan , L.M . (2003). Non- inferiority trials: design  concepts and issues  ‚Äì the encounters of academic consultants in statistics. Statistics in  Medicine, 22, 169 ‚Äì 186.   Ebbutt , A. F., &  Frith , L. (1998). Practical issues in equivalence trials. Statistics in Medicine,  17(15 -16), 1691‚Äì1701.   Eden, D. (2017). Field experiments in organizations. Annual Review of Organizational Psychology  and Organizational Behavior , 4, 91- 122.  Ertefaie,  A., Shortreed , S. M., & Chakraborty , B. (2016). Q -learning residual analysis: Application  to the effectiveness of sequences of antipsychotic medicat ions for patients with  42   schizophrenia. Statistics in Medicine , 35(13): 2221 ‚Äì 2234.  Friedman,  L. M., Furberg, C.D., DeMets, D., Reboussin, D. M., &  Granger , C.B . (2015). Basic  Study Design . In Fundamentals of Clinical Trials . New York: Springer .  Fu, S. S., Rothman, A. J., Vock, D. M., Lindgren, B., Almirall, D., Begnaud, A.,  ‚Ä¶, Joseph, A.  M. (2017). Program for lung cancer screening and tobacco cessation: Study protocol of a  sequential, multiple assignment, randomized trial.  Contemporary Clinical Trials, 60, 86 ‚Äì  95.  Ghosh, P., Cheung, Y.K.,  & Chakraborty , B. (2016) . Sample size calculations for clustered  SMART designs, In M. R. Kosorok and E. E. M. Moodie (Eds.),  Adaptive treatment  strategies in practice:  Planning trials and analyzing data for personalized m edicine. ASA- SIAM.   Goertzen , J. R., &  Cribbie , R. A. (2010). Detecting a lack of association: An equivalence testing  approach . British Journal of Mathematical and Statistical Psychology , 63, 527‚Äì537.  Greene, C. J., Morland, L. A., Durkalski, V. L., & Frueh, B. C. (2008). Noninferiority and  equivalence designs: issues and implications for mental health research. Journal of  Traumatic Stress, 21 (5), 433- 439.  Howard, M. C., & Jacobs, R. R. (2016). The mult iphase optimization strategy (MOST) and the  sequential multiple assignment randomized trial (SMART): Two novel evaluation methods  for developing optimal training programs. Journal of Organizational Behavior , 37(8),  1246- 1270.  Jones , H. (2010) . Reinforcemen t-Based Treatment for Pregnant Drug Abusers (HOME II).  Bethesda,MD: Natl. Inst. Health.  43   http://clinicaltrials.gov/ct2/show/NCT01177982?term=jones+pregnant&rank=9   Kasari , C. (2009) . Developmental and Augmented Intervention for Facilitating Expressive  Language (CCNIA). Bethesda, MD: Natl. Inst. Health.  http://clinicaltrials.gov/ct2/show/NCT01013545?term= kasari&rank=5   Kidwell , K. L., &  Wahed , A. S. (2013) . Weighted l og-rank statistic to compare shared -path  adaptive treatment strategies. Biostatistics , 14(2):299‚Äì312.  Kidwell, K. L. (2016). DTRs and SMARTs: Definitions, designs, and applications , In M. R.  Kosorok and E. E. M. Moodie (Eds.), Adaptive treatment strategies  in practice:  Planning  trials and analyzing data for personalized medicine . ASA- SIAM.   Kosorok, M. R., &  Moodie, E. E. M. (Ed s.) (2016). Adaptive treatment strategies in practice:  Planning trials and analyzing data for personalized me dicine . Philadelphia: ASA- SIAM.   Kumar, S., Nilsen,  W. J., Abernethy,  A., Atienza, A., Patrick,  K., Pavel, M., ‚Ä¶, Swendeman , D.  (2013). Mobile health technology evaluation: T he mhealth  evidence workshop.    American Journal of Preventive Medicine , 45, 228‚Äì236.  Laber , E. B., Lizot te, D. J., Qian , M., Pel ham, W. E., & Murphy , S. A. (2014). Dynamic treatment  regimes: T echnical challenges and applications , Electronic Journal of Statistics (with  discussion) , 8(1), 1225- 1272.  Laber, E. B., Linn, K. A., & Stefanski, L. A. (2014). Interactive model building for Q -learning.  Biometrika, 101(4), 831- 847.  Laber, E. B., Zhao, Y -Q., Regh , T., Davidian, M., Tsiatis, A., Stanford, J. B., ‚Ä¶, Kosorok, M. R.  (2016). Using pilot data to size a two -arm randomized trial to find a nearly optimal  personalized treatment strategy. Statistics in Medicine , 35(8): 1245- 1256.   44   Laber, E. B., Meyer, N. J., Reich, B. J., Pacifici, K., Collazo, J. A. & Drake, J. M. (2018). Optimal  treatment allocations in space and time for on -line control of an emerging infectious  disease. Journal of the Royal Statistical Society: Series C (Applied Statistics)  67, 743‚Äì789.  Lakens , D. (2017). Equivalence tests: A practical primer for t -tests, correlations, and meta - analyses. Social Psychological and Personality Science , 8(4): 355- 362.  Lauzon C., &  Caffo , B. (2009) .  Easy multiplicity control in equiv alence testing using two one - sided tests. The American Statistician , 63(2):147‚Äì 154.  Lavori , P.W., & Dawson , R. (2000) . A design  for testing clinical strategies: Biased adaptive   within -subject randomization. Journal of the Royal Statistical Society, Series A , 163, 29 ‚Äì  38.  Lavori , P. W., &  Dawson , R. (2004) . Dynamic treatment regimes: Pr actical design considerations.  Clinical Trials , 1, 9 ‚Äì 20.   Lei, H., Nahum -Shani, I., Lynch, K., Oslin, D., & Murphy, S. A. (2012). A SMART  design for  building individualized treatment sequences. Annual Review of Clinical Psychology , 8, 21  ‚Äì 48.  Logan, B. R., Sparapani, R., McCulloch, R. E., & Laud, P. W. (2017). Decision making and  uncertainty quantification for individualized treatments using Bayesian Additive  Regression Trees. Statistical methods in medical research, 962280217746191. Advance online publication. doi :10.1177/0962280217746191  Lu, X., Nahum -Shani, I., Kasari, C., Lynch, K. G., Oslin, D. W., Pelham, W. E., Fabiano, G., ‚Ä¶  Almirall, D. (201 6). Comparing dynamic treatment regimes using repeated -measures  outcomes: modeling considerations  in SMART studies. Statistics in medicine, 35(10),  45   1595- 615.  McKay, J. R., Drapkin, M. L., Van Horn, D. H., Lynch, K. G., Oslin, D. W., DePhilippis, D., Ivey ,  M., & Cacciola, J. S. (2015). Effect of patient choice in an adaptive sequential  randomization tr ial of treatment for alcohol and cocaine dependence. Journal of Consulting  and Clinical Psychology , 83(6), 1021 ‚Äì 1032.   Mohr, D. C., Ho, J., Duffecy, J., Reifler, D., Sokol, L., Burns, M. N., Jin, L., & Siddique, J. (2012).  Effect of telephone- administered vs face- to-face cognitive behavioral therapy on  adherence to therapy and depression outcomes among primary care patients: a randomized  trial. Journal of the American Medical Association , 307(21), 2278- 2285.   Murphy , S. A. (2003) . Optimal dynamic treatment regimes (with discussions). Journal of the Royal  Statistical Society, Series B , 65, 331 ‚Äì 366.  Murphy , S.A. (2005) . An experimental design for the development of adaptive treatment  strategies. Statistics in Medicine , 24, 1455 ‚Äì 1481.   Naar -King, S., Ellis, D. A., Idalski Carcone, A., Templin, T., Jacques -Tiura, A. J., Brogan Hartlieb,  K., ... & Jen, K. L. C. (2016). Sequential multiple assignment randomized trial (SMART)  to construct weight loss interve ntions for African American adolescents. Journal of Clinical  Child & Adolescent Psychology, 45(4), 428 -441.  Nahum -Shani, I., Qian, M., Almiral, D., Pelham, W., Gnagy, B., Fabiano, G., ‚Ä¶, Murphy, S.A.  (2012a ). Experimental design and primary data analysis m ethods for comparing adaptive  interventions. Psychological Methods , 17, 457 ‚Äì 477.  Nahum -Shani, I., Qian, M., Almirall, D., Pelham, W. E., Gnagy, B., Fabiano, G. A., Waxmonsky,  J. G., Yu, J., ‚Ä¶ Murphy, S. A. (2012b). Q -learning: a data analysis method for constructing  46   adaptive interventions. Psychological methods, 17(4), 478- 94.    Nahum -Shani, I., Hekler, E. B., & Spruijt -Metz, D. (2015). Building health behavior models to  guide the development of just -in-time adaptive interventions: A pragmatic  framework.  Health Psychology , 34(S), 1209.  Nahum -Shani, I., Smith, S. N., Spring, B. J., Collins, L. M., Witkiewitz, K., Tewari, A., & Murphy,  S. A. (2016). Just -in-time adaptive interventions (JITAIs) in mobile health: K ey  components and design principles for ongoing health behavior support. Annals of  Behavioral Medicine . https://doi.org/10.1007/s12160- 016-9830- 8  Nahum‚ÄêShani, I., Ertefaie, A., Lu, X. L., Lynch, K. G., McKay, J. R., Oslin, D. W., & Almirall,  D. (2017). A SMART data analysis method for constructing adaptive treatment strategies  for substance use disorders. Addiction, 112(5), 901 ‚Äì 909.  Nahum -Shani, I., & Dziak, J. J. (2018). Multilevel factorial designs in intervention development.  In Optimization of Behavioral, Biobehavioral, and Biomedical Interventions  (pp. 47- 87).  Springer, Cham.  NeCamp, T., Kilbourne, A., & Almirall, D. (2017). Comparing cluster -level dynamic treatment  regimens using sequential, multiple assignment , randomized trials: Regression estimation  and sample size considerations . Statistical Methods in Medical R esearch , 26(4), 1572- 1589.  Oetting, A. I., Levy, J. A., Weiss, R. D., & Murphy, S. A. (2011). Statistical methodology for a  SMART design in the development of adaptive treatment strategies.  In P. Shrout & K.  Keyes (Eds.), Causality and psychopathology: finding the determinants of disorders and  47   their cures  (pp. 179- 205). Arlington: American Psychiatric Publishing, Inc .  Page, T. F., Pelham III, W. E., Fabiano, G. A., Greiner, A. R., Gnagy, E. M., Hart, K. C., ... &  Pelham Jr, W. E. (2016). Comparative cost analysis of sequential, adaptive, behavioral,  pharmacological, and combined treatments for childhood ADHD. Journal of Clinical  Child & Adolescent Psychology , 45(4), 416 ‚Äì 427.   Piantadosi, S . (2005). Clinical Trials: A Methodologic Perspective, Second Edition, John Wiley &  Sons .  Pelham Jr, W. E., Fabiano, G. A., Waxmonsky, J. G., Greiner, A. R., Gnagy, E. M., Pelham III,  W. E., ... & Karch, K. (2016). Treatment sequencing for childhood ADHD: A multiple - randomization study of adaptive medication and behavioral interventions. Journal of  Clinical Child & Adolescent Psychology , 45(4), 396 ‚Äì 415.  Petry, N. M., Alessi, S. M., Rash, C. J., Barry, D., & Carroll, K. M. (2018). A randomized trial of  conti ngency management reinforcing attendance at treatment: Do duration and timing of  reinforcement matter? Journal of Consulting and Clinical Psychology , 86(10), 799- 809.  Piaggio G., Elbourne D. R., Altman D. G., Pocock S. J., Evans S. J., & Consort Group. (2006).  Reporting of noninferiority and equivalence randomized trials: An extension of the  CONSORT statement . Journal of the American Medical Association, 295, 1152‚Äì1160.  Riley, W. T., Rivera, D. E., Atienza, A. A., Nilsen, W., Allison, S. M., & Mermelst ein, R. (2011).  Health behavior models in the age of mobile interventions: are our theories up to the  task?.  Translational behavioral medicine , 1(1), 53 ‚Äì 71.  Riley, W. T., Serrano, K. J., Nilsen, W., & Atienza, A. A. (2015). Mobile and Wireless  Technologies in Health Behavior and the Potential for Intensively Adaptive Interventions.  48   Current opinion in psychology , 5, 67- 71.  Ross, K. M., & Wing, R. R. (2016). Impact of newer self -monitoring technology and brief phone - based intervention on weight loss: A randomized pilot study. Obesity , 24(8), 1653 ‚Äì 1659.   Robins , J. M. (1997) .  Causal inference from complex longitudinal data. In M. Berkane ( Ed.),   Latent variable modeling and applications to causality : Lecture notes in statistics  (pp. 69  ‚Äì 117).  New York, NY, Springer -Verlag.   Rubin, D. (1980). Randomization Analysis of Experimental Data: The Fisher Randomization Test  Comment. Journal of the American Statistical Ass ociation, 75(371), 591- 593.  doi:10.2307/2287653   Schaughency, E., & Ervin, R. (2006). Building capacity to implement and sustain effective  practices to better serve children.  School Psychology Review , 35(2), 155.   Schuirmann, D. J. (1987). A comparison of the two one -sided tests procedure and the power  approach for assessing the equivalence of average bioavailability . Journal of  Pharmacokinetics and Biopharmaceutics , 15, 657 ‚Äì680.  Seaman M. A., & Serlin R. C. (1998). Equivalence confidence intervals for two -group comparisons  of means . Psychological Methods , 3, 403‚Äì411.  Shortreed , S. M., Laber , E. B., Stroup, T. S., Pineau , J., & Murphy , S. A. (2014). Overcoming  missing data in a sequential, multiple assignment , randomized clinical trial of patients with  schizophrenia. Statistics in Medicine , 43(24): 4202 ‚Äì 4214.  Sobell, M. B., & Sobell, L. C. (2000). Stepped care as a heuristic approach to the treatment of  alcohol problems. Journal of C onsulting and Clinical P sychology , 68(4), 573  ‚Äì 579.  Spring, B., Pellegrini, C.  A., & Nahum -Shani, I. (2014). How long does it take to identify non- 49   responders to weight loss treatment. Annual  meeting of The Obesity Society , Boston,  Massachusetts .  Spring, B., Pellegrini, C. A., Pfammatter, A., Duncan, J. M., Pictor, A., McFadden, H. G.,  Siddique, J., ‚Ä¶ Hedeker, D. (2017). Effects of an abbreviated obesity intervention  supported by mobile technology: The ENGAGED randomized clinical trial. Obesity  (Silver Spring, Md.) , 25(7), 1191- 1198.   Thall, P. F., Millikan, R. E., & Sung , H. G. (2000). Evaluating multiple treatment courses in  clinical trials.  Statistics in Medicine , 30, 1011 ‚Äì 1128.  The Diabetes Prevention Program Research Group. (2003). Costs associated with the primary  prevention of Type 2 diabetes mellitus  in the Diabe tes Prevention Program.  Diabetes  Care , 26(1), 36 ‚Äì 47.   Thomas, J. G., & Bond, D. S. (2015). Behavioral response to a just -in-time adaptive intervention  (JITAI) to reduce sedentary behavior in obese adults: Implications for JITAI  optimization.  Health Psychology , 34(S), 1261.   Walker , E., & Nowacki , A. S. (2011).  Understanding equivalence and noninferiority testing.    Journal of General Internal Medicine , 26(2), 192 ‚Äì 196.  Walkington, C. A. (2013). Using adaptive learning technologies to personalize ins truction to  student interests: The impact of relevant contexts on performance and learning  outcomes. Journal of Educational Psychology , 105(4), 932.   Waring, M. E., Schneider, K. L., Appelhans, B. M., Busch, A. M., Whited , M. C., Rodrigues, S.,  Lemon, S. C., ‚Ä¶ Pagoto, S. L. (2014). Early -treatment weight loss predicts 6 -month weight  loss in women with obesity and depression: implications for stepped care. Journal of  50   psychosomatic research , 76(5), 394- 9.  Wellek , S. (2010). Testing statistical hypotheses of equivalence and noninferiority  (2nd ed.). Boca  Raton, FL: CRC Press.   Zhang, B., Tsiatis, A., Davidian, M., Zhang, M. & Laber, E. (2012a ). Estimating optimal treatment  regimes from a classification perspective. Stat 1, 103 -114.   Zhang, B., Tsiatis, A. A., L aber, E. B., & Davidian, M. (2012b). A robust method for estimating  optimal treatment regimes. Biometrics, 68(4), 1010 -8.  Zhao, Y., Zeng, D., Rush, A. & Kosorok, M. R. (2012). Estimating individual treatment rules using  outcome weighted learning. Journal of the American Statistical Association 107, 1106 ‚Äì  1118.   Zhao, Y. Q., Zeng, D., Laber, E. B., & Kosorok, M. R. (2015a). New statistical learning methods  for estimating optimal dynamic treatment regimes. Journal of the American Statistical Association, 110(510), 583 -  598.   Zhao, Y. Q., Zeng, D., Laber, E. B., Song, R., Yuan, M., & Kosorok, M. R. (2015b). Doubly robust  learning for estimating individualized treatment with censored data. Biometrika, 102(1), 151-168. doi :10.1093/biomet/asu050           51                Figure  1: An example adaptive intervention for promoting weight  loss among obese/overweight adults   52                   Figure 2: The SMART Weight Loss Management Study   53   Table  1. Adaptive  Interventions  Embedded in  the Weight  Loss  SMART  Study   AIs Initial   treatment  Subsequent  tactic  (treatment)  for  non-responders  (R=0)  Subsequent   tactic  for  responders   (R=1)  Subgroups   in Figure  1 Stage -specific   treatments:  (T1, T2)  1 App  (a) Vigorous  Augmentation  (v): add  supportive  text messaging  and  coaching     Continue   first-line  intervention  A+C  (a, aRv1-R)  2 App  (a) Modest  Augmentation  (m): add  supportive  text messaging   A+B  (a, aRm1-R)  3 App +  coaching    (ac) Vigorous  Augmentation  (v): add  supportive  text messaging  and  meal  replacement   D+F (ac, acRv1-R)  4 App +  coaching   (ac) Modest  Augmentation  (m): add  supportive  text messaging  D+E  (ac, acRm1-R)     54     Table 2 . Results of  the non- inferiority test involving the distinct- path AIs { ùëëùëë1,ùëëùëë3}.                         Note.  ùúÉùúÉ is the non- inferiority margin . ùõæùõæ ùëéùëé and ùõæùõæùëéùëéùëéùëé are the response rates of initial treatments ùëéùëé  and ùëéùëéùëéùëé, corresponding to the AIs ùëëùëë1 and ùëëùëë3 respectively; ùúÇùúÇùê∑ùê∑ùê∑ùê∑ is the standardized effect size.  The required sample size ùëÅùëÅ is calculated based on equation (8) and the estimated power ( ùëùùëùùëêùëêùë§ùë§ùëíùëíùëâùëâÔøΩ   and ùëùùëùùëêùëêùë§ùë§ùëíùëíùëâùëâÔøΩùë£ùë£ùëüùëüùëüùëüùëüùëüùëüùëüùë°ùë°) is based on 1000 Monte Carlo simulations.             (ùõæùõæùëéùëé, ùõæùõæùëéùëéùëéùëé)  ùúÉùúÉ ùúÇùúÇùê∑ùê∑ùê∑ùê∑ ùëÅùëÅ ùëùùëùùëêùëêùë§ùë§ùëíùëíùëâùëâÔøΩ  ùëùùëùùëêùëêùë§ùë§ùëíùëíùëâùëâÔøΩùë£ùë£ùëüùëüùëüùëüùëüùëüùëüùëüùë°ùë°  (0.30, 0.50)  3.0 0.379  87 0.82 0.81  (0.30, 0.45)  3.0 0.371  90 0.80 0.80  (0.30, 0.40)  3.0 0.362  95 0.82 0.82  (0.30, 0.35)  3.0 0.354  99 0.82 0.81  (0.30, 0.30)  3.0 0.347  103 0.79 0.81  (0.30, 0.50)  2.5 0.251  197 0.80 0.79  (0.30, 0.45)  2.5 0.243  210 0.81 0.81  (0.30, 0.40)  2.5 0.236  223 0.80 0.80  (0.30, 0.35)  2.5 0.230  234 0.79 0.81  (0.30, 0.30)  2.5 0.223  249 0.84 0.82  55   Table 3. Results of  the non- inferiority test involving the shared -path AIs { ùëëùëë4,ùëëùëë3}    ùõæùõæùëéùëéùëéùëé ùúÉùúÉ ùúÇùúÇùëÜùëÜùê∑ùê∑ ùëÅùëÅ ùëùùëùùëêùëêùë§ùë§ùëíùëíùëâùëâÔøΩ  ùëùùëùùëêùëêùë§ùë§ùëíùëíùëâùëâÔøΩùë£ùë£ùëüùëüùëüùëüùëüùëüùëüùëüùë°ùë°  0.50 3.0 0.384  84 0.79 0.78  0.45 3.0 0.345  104 0.78 0.78  0.40 3.0 0.312  128 0.81 0.79  0.35 3.0 0.281  157 0.84 0.84  0.30 3.0 0.254  192 0.80 0.79  0.50 2.5 0.252  195 0.77 0.76  0.45 2.5 0.215  268 0.79 0.79  0.40 2.5 0.184  366 0.79 0.79  0.35 2.5 0.157  502 0.83 0.81  0.30 2.5 0.130  732 0.82 0.82      Note. ùúÉùúÉ is the non- inferiority margin .; ùõæùõæùëéùëé is the response rate of the initial treatment ùëéùëé that  corresponds to both AIs ùëëùëë4 and ùëëùëë3 (the other initial response rate ùõæùõæùëéùëéùëéùëé is set at 0.5); ùúÇùúÇùëÜùëÜùê∑ùê∑ is the  standardized effect size. The required sample size ùëÅùëÅ is calculated based on equation (10) and the  estimated power ( ùëùùëùùëêùëêùë§ùë§ùëíùëíùëâùëâÔøΩ  and ùëùùëùùëêùëêùë§ùë§ùëíùëíùëâùëâÔøΩùë£ùë£ùëüùëüùëüùëüùëüùëüùëüùëüùë°ùë°) is based on 1000 Monte Carlo simulations.           56     Table 4 . Results of the equivalence test involving the distinct -path AIs { ùëëùëë1,ùëëùëë3} with ùõøùõø=ùúáùúáùëëùëë3‚àí ùúáùúáùëëùëë1=0  ( ùõæùõæùëéùëé , ùõæùõæùëéùëéùëéùëé ) ùúÉùúÉ ùúÇùúÇùê∑ùê∑ùê∑ùê∑ ùëÅùëÅ ùëùùëùùëêùëêùë§ùë§ùëíùëíùëâùëâÔøΩ   (0.50, 0.50)  2.0 0.265  244 0.83  (0.45, 0.45)  2.0 0.259  256 0.83  (0.40, 0.40)  2.0 0.254  266 0.82  (0.35, 0.35)  2.0 0.249  277 0.82  (0.30, 0.30)  2.0 0.244  288 0.84    Note.  ùúÉùúÉ is the equivalence margin ; ùõæùõæùëéùëé and ùõæùõæùëéùëéùëéùëé are the response rates of initial treatments ùëéùëé  and ùëéùëéùëéùëé, corresponding to the AIs ùëëùëë1 and ùëëùëë3 respectively; ùúÇùúÇùê∑ùê∑ùê∑ùê∑ is the standardized effect size.  The required sample size ùëÅùëÅ is calculated based on equation (13) and the estimated power  (ùëùùëùùëêùëêùë§ùë§ùëíùëíùëâùëâÔøΩ ) is based on 1000 Monte Carlo simulations.                    57   Table 5 : Results of  the equivalence test involving the shared- path AIs { ùëëùëë4,ùëëùëë3} with ùõøùõø=ùúáùúáùëëùëë3‚àí ùúáùúáùëëùëë4=0      ùõæùõæùëéùëéùëéùëé ùúÉùúÉ ùúÇùúÇùëÜùëÜùê∑ùê∑ ùëÅùëÅ ùëùùëùùëêùëêùë§ùë§ùëíùëíùëâùëâÔøΩ         0.50 2.0 0.307  182 0.83  0.45 2.0 0.293  200 0.85  0.40 2.0 0.280  219 0.86  0.35 2.0 0.269  237 0.86  0.30 2.0 0.258  258 0.85  Note. ùúÉùúÉ is the equivalence margin ; ùõæùõæùëéùëéùëéùëé is the response rate of the initial treatment ùëéùëéùëéùëé that  corresponds to both AIs ùëëùëë4 and ùëëùëë3 (ùõæùõæùëéùëé is the response rate to the other initial treatment ùëéùëé, and  is set to be equal to ùõæùõæùëéùëéùëéùëé while simulating the equivalence trials); ùúÇùúÇùëÜùëÜùê∑ùê∑ is the standardized effect  size. The required sample size ùëÅùëÅ is calculated based on equation (14) and the estimated power  (ùëùùëùùëêùëêùë§ùë§ùëíùëíùëâùëâÔøΩ ) is based on 1000 Monte Carlo simulati ons.   58   Table 6.  Results of the equivalence test when there is no effect  involving the distinct -path AIs  {ùëëùëë1,ùëëùëë3}  ( ùõæùõæùëéùëé , ùõæùõæùëéùëéùëéùëé ) ùúÉùúÉ ùúÇùúÇùê∑ùê∑ùê∑ùê∑ ùëÅùëÅ ùëáùëáùëáùëáùëùùëùùëíùëí‚àíùêºùêº ùëíùëíùëâùëâùëâùëâùëêùëêùëâùëâ  ùëâùëâùëéùëéùëüùëüùëíùëí ÔøΩ    2.0  244 0.038    2.0  500 0.037   (0.45, 0.45)  2.0 0.265  1000  0.033    2.0  2000  0.043    2.0  5000  0.043     Note.  ùúÉùúÉ is the equivalence margin ; ùõæùõæùëéùëé and ùõæùõæùëéùëéùëéùëé are the response rates of initial treatments ùëéùëé  and ùëéùëéùëéùëé, corresponding to the AIs ùëëùëë1 and ùëëùëë3 respectively; ùúÇùúÇùê∑ùê∑ùê∑ùê∑ is the standardized effect size.  The required sample size ùëÅùëÅ=244  is calculated based on equation (13) and the estimated Type - I error rate  is based on 1000 Monte Carlo simulations. Other values of N, 500- 5000, are provided  to check  that the Type-I error rate is controlled at 5% when there is no effect. Here the ùõøùõøùê∑ùê∑ùê∑ùê∑ is  fixed at 2 ensuring the re is no effect with respect to the equivalence margin ùúÉùúÉ=2.                 59   Table 7 : Results of  the equivalence test  when there is no effect involving  the shared -path AIs  {ùëëùëë4,ùëëùëë3}      ùõæùõæùëéùëéùëéùëé ùúÉùúÉ ùúÇùúÇùëÜùëÜùê∑ùê∑ ùëÅùëÅ ùëáùëáùëáùëáùëùùëùùëíùëí‚àíùêºùêº ùëíùëíùëâùëâùëâùëâùëêùëêùëâùëâ  ùëâùëâùëéùëéùëüùëüùëíùëí ÔøΩ          2.0  175 0.066    2.0  500 0.039   0.45 2.0 0.313  1000  0.041    2.0  2000  0.055    2.0  5000  0.051   Note. ùúÉùúÉ is the equivalence margin ; ùõæùõæùëéùëéùëéùëé is the response rate of the initial treatment ùëéùëéùëéùëé that  corresponds to both AIs ùëëùëë4 and ùëëùëë3 (ùõæùõæùëéùëé is the response rate to the other initial treatment ùëéùëé, and  is set to be equal to ùõæùõæùëéùëéùëéùëé while simulating the equivalence trials); ùúÇùúÇùëÜùëÜùê∑ùê∑ is the standardized effect  size. The required sample size ùëÅùëÅ=175  is calculated based on equation (14) and the estimated  Type -I error rate  is based on 1000 Monte Carlo simulations. Other values of N, 500- 5000, are  provided to check whether the Type-I error rate is controlled at 5% when there is no effect. Here  the ùõøùõøùëÜùëÜùê∑ùê∑ is fixed at 1.99 ensuring there is no effect with respect to the equivalence margin ùúÉùúÉ=2.  60     Figure 3: Power Curves for non- inferiority and equivalence tests for comparing distinct -path and  shared -path adaptive interventions. For a given  ùëÅùëÅ (100, 200, 300 or 500) and a standardized  effect size (for distinct -path: (ùúÇùúÇùê∑ùê∑ùê∑ùê∑(Œ∏)‚àíùúÇùúÇùê∑ùê∑ùê∑ùê∑(Œ¥) and for shared- path: (ùúÇùúÇùëÜùëÜùê∑ùê∑(Œ∏)‚àíùúÇùúÇùëÜùëÜùê∑ùê∑(Œ¥)), the  power is based on 1000 Monte Carlo simulations.                  61   A  Appendix   A.1  Derivation of Mean  of an Adaptive Intervention    We will use ùëåùëå as the primary outcome instead of ùëåùëåùëáùëá1ùëáùëá2 to refer an individuals primary  outcome with respect to the entire study. Note that the response indicator ùëÖùëÖ=ùêºùêº(ùëáùëá1=ùëáùëá2); and,  ‚àëùëÅùëÅ ùëñùëñ=1ùëäùëäùëñùëñùëëùëë1=ùëÅùëÅ, when empirical randomization probabilities are exactly same as  the  corresponding theoretical probabilities . From (2), using the independence among the different  patients in the study, we have    ùúáùúáùëëùëë1=ùê∏ùê∏(ùëåùëåùëëùëë1)=ùê∏ùê∏[ùëäùëäùëëùëë1ùëåùëå]=ùê∏ùê∏ÔøΩùê∏ùê∏ÔøΩùêºùêº{ùëáùëá1=ùëéùëé,ùëáùëá2=ùëéùëéùëÖùëÖùë£ùë£1‚àíùëÖùëÖ} ùúãùúãùëéùëé√óùúãùúãùëéùëé,ùë£ùë£1‚àíùëÖùëÖùëåùëå|ùëáùëá1,ùëáùëá2ÔøΩÔøΩ   =ùëÉùëÉ(ùëáùëá1=ùëéùëé,ùëáùëá2=ùëéùëé)ùê∏ùê∏ÔøΩùêºùêº{ùëáùëá1=ùëéùëé,ùëáùëá2=ùëéùëé} ùúãùúãùëéùëéùëåùëå|ùëáùëá1=ùëéùëé,ùëáùëá2=ùëéùëéÔøΩ   +ùëÉùëÉ(ùëáùëá1=ùëéùëé,ùëáùëá2=ùë£ùë£)ùê∏ùê∏ÔøΩùêºùêº{ùëáùëá1=ùëéùëé,ùëáùëá2=ùë£ùë£} ùúãùúãùëéùëé√óùúãùúãùëéùëé,ùë£ùë£ùëåùëå|ùëáùëá1=ùëéùëé,ùëáùëá2=ùë£ùë£ÔøΩ+0,          (ùëüùëü‚Ñéùëíùëí  ùëôùëôùëéùëéùë£ùë£ùëüùëü  ùëüùëüùëíùëíùëâùëâùëöùëö :  ùëñùëñùëñùëñ   ùëáùëá1= ùëéùëéùëéùëé   ùëüùëü‚Ñéùëíùëíùëéùëé  ùëñùëñùëüùëü  ùëéùëéùëêùëêùëéùëéùëüùëüùëâùëâùëñùëñùëêùëêùëêùëêùëüùëüùëíùëíùë£ùë£   0  ùëëùëëùëêùëêùëíùëí  ùëüùëü‚Ñéùëíùëí  ùëñùëñùëéùëéùëëùëëùëñùëñùëéùëéùëéùëéùëüùëüùëêùëêùëâùëâ   ùëñùëñùëêùëêùëéùëéùëéùëéùëüùëüùëñùëñùëêùëêùëéùëé )    =ùëÉùëÉ(ùëáùëá1=ùëéùëé)ùëÉùëÉ(ùëáùëá2=ùëéùëé|ùëáùëá1=ùëéùëé)ùê∏ùê∏ÔøΩ1 ùúãùúãùëéùëéùëåùëå|ùëáùëá1=ùëéùëé,ùëáùëá2=ùëéùëéÔøΩ   +ùëÉùëÉ(ùëáùëá1=ùëéùëé)ùëÉùëÉ(ùëáùëá2=ùë£ùë£|ùëáùëá1=ùëéùëé)ùê∏ùê∏ÔøΩ1 ùúãùúãùëéùëé√óùúãùúãùëéùëé,ùë£ùë£ùëåùëå|ùëáùëá1=ùëéùëé,ùëáùëá2=ùë£ùë£ÔøΩ   =ùúãùúãùëéùëéùõæùõæùëéùëé1 ùúãùúãùëéùëéùúáùúáùëéùëé,ùëéùëé+ùúãùúãùëéùëé(1‚àíùõæùõæùëéùëé)ùúãùúãùëéùëé,ùë£ùë£1 ùúãùúãùëéùëéùúãùúãùëéùëé,ùë£ùë£ùúáùúáùëéùëé,ùë£ùë£   =ùõæùõæùëéùëéùúáùúáùëéùëé,ùëéùëé+(1‚àíùõæùõæùëéùëé)ùúáùúáùëéùëé,ùë£ùë£. (15)   Similarly, ùúáùúáùëëùëë2=ùõæùõæùëéùëéùúáùúáùëéùëé,ùëéùëé+(1‚àíùõæùõæùëéùëé)ùúáùúáùëéùëé,ùëöùëö; ùúáùúáùëëùëë3=ùõæùõæùëéùëé,ùëéùëéùúáùúáùëéùëéùëéùëé,ùëéùëéùëéùëé+(1‚àíùõæùõæùëéùëéùëéùëé)ùúáùúáùëéùëéùëéùëé,ùë£ùë£ and ùúáùúáùëëùëë4= ùõæùõæùëéùëéùëéùëéùúáùúáùëéùëéùëéùëé,ùëéùëéùëéùëé+(1‚àíùõæùõæùëéùëéùëéùëé)ùúáùúáùëéùëéùëéùëé,ùëöùëö.    A.2  Derivation of Variance  of the Mean of an Adaptive Intervention   62    ùëâùëâùëéùëéùëâùëâ(ùúáùúáÃÇùëëùëë1)=1 ùëÅùëÅùëâùëâùëéùëéùëâùëâ[ùëäùëäùëëùëë1ùëåùëå],     (ùëêùëêùë£ùë£ùëñùëñùëéùëéùë¢ùë¢   ùëñùëñùëéùëéùëëùëëùëíùëíùëùùëùùëíùëíùëéùëéùëëùëëùëíùëíùëéùëéùëüùëü   ùëêùëêùëêùëêùë£ùë£ùëíùëíùëâùëâùë£ùë£ùëéùëéùëüùëüùëñùëñùëêùëêùëéùëéùë£ùë£ )    =1 ùëÅùëÅÔøΩùëâùëâùëéùëéùëâùëâÔøΩùêºùêº{ùëáùëá1=ùëéùëé,ùëáùëá2=ùëéùëéùëÖùëÖùë£ùë£1‚àíùëÖùëÖ} ùúãùúãùëéùëé√óùúãùúãùëéùëé,ùë£ùë£1‚àíùëÖùëÖùëåùëåÔøΩÔøΩ   =1 ùëÅùëÅÔøΩùê∏ùê∏ÔøΩùêºùêº{ùëáùëá1=ùëéùëé,ùëáùëá2=ùëéùëéùëÖùëÖùë£ùë£1‚àíùëÖùëÖ} (ùúãùúãùëéùëé√óùúãùúãùëéùëé,ùë£ùë£1‚àíùëÖùëÖ)2ùëåùëå2ÔøΩ‚àíùê∏ùê∏2ÔøΩùêºùêº{ùëáùëá1=ùëéùëé,ùëáùëá2=ùëéùëéùëÖùëÖùë£ùë£1‚àíùëÖùëÖ} ùúãùúãùëéùëé√óùúãùúãùëéùëé,ùë£ùë£1‚àíùëÖùëÖùëåùëåÔøΩÔøΩ. (16)   Note that, from (15), we have the expected  mean of the AI  ùëëùëë1,    ùê∏ùê∏ÔøΩùêºùêº{ùëáùëá1=ùëéùëé,ùëáùëá2=ùëéùëéùëÖùëÖùë£ùë£1‚àíùëÖùëÖ} ùúãùúãùëéùëé√óùúãùúãùëéùëé,ùë£ùë£1‚àíùëÖùëÖùëåùëåÔøΩ=ùõæùõæùê¥ùê¥ùúáùúáùëéùëé,ùëéùëé+(1‚àíùõæùõæùëéùëé)ùúáùúáùëéùëé,ùë£ùë£. (17)   Now, the first part of (16),    ùê∏ùê∏ÔøΩùêºùêº{ùëáùëá1=ùëéùëé,ùëáùëá2=ùëéùëéùëÖùëÖùë£ùë£1‚àíùëÖùëÖ} (ùúãùúãùëéùëé√óùúãùúãùëéùëé,ùë£ùë£1‚àíùëÖùëÖ)2ùëåùëå2ÔøΩ   =ùëÉùëÉ(ùëáùëá1=ùëéùëé,ùëáùëá2=ùëéùëé)ùê∏ùê∏ÔøΩùêºùêº{ùëáùëá1=ùëéùëé,ùëáùëá2=ùëéùëé} ùúãùúãùëéùëé2ùëåùëå2|ùëáùëá1=ùëéùëé,ùëáùëá2=ùëéùëéÔøΩ   +ùëÉùëÉ(ùëáùëá1=ùëéùëé,ùëáùëá2=ùë£ùë£)ùê∏ùê∏ÔøΩùêºùêº{ùëáùëá1=ùëéùëé,ùëáùëá2=ùë£ùë£} ùúãùúãùëéùëé2√óùúãùúãùëéùëé,ùë£ùë£2ùëåùëå2|ùëáùëá1=ùëéùëé,ùëáùëá2=ùë£ùë£ÔøΩ+0,          (ùëüùëü‚Ñéùëíùëí  ùëôùëôùëéùëéùë£ùë£ùëüùëü  ùëüùëüùëíùëíùëâùëâùëöùëö :  ùëñùëñùëñùëñ   ùëáùëá1= ùëéùëéùëéùëé   ùëüùëü‚Ñéùëíùëíùëéùëé  ùëñùëñùëüùëü  ùëéùëéùëêùëêùëéùëéùëüùëüùëâùëâùëñùëñùëêùëêùëêùëêùëüùëüùëíùëíùë£ùë£   0  ùëëùëëùëêùëêùëíùëí  ùëüùëü‚Ñéùëíùëí  ùëñùëñùëéùëéùëëùëëùëñùëñùëéùëéùëéùëéùëüùëüùëêùëêùëâùëâ   ùëñùëñùëêùëêùëéùëéùëéùëéùëüùëüùëñùëñùëêùëêùëéùëé )    =ùëÉùëÉ(ùëáùëá1=ùëéùëé)ùëÉùëÉ(ùëáùëá2=ùëéùëé|ùëáùëá1=ùëéùëé)ùê∏ùê∏ÔøΩ1 ùúãùúãùëéùëé2ùëåùëå2|ùëáùëá1=ùëéùëé,ùëáùëá2=ùëéùëéÔøΩ   +ùëÉùëÉ(ùëáùëá1=ùëéùëé)ùëÉùëÉ(ùëáùëá2=ùë£ùë£|ùëáùëá1=ùëéùëé)ùê∏ùê∏ÔøΩ1 ùúãùúãùëéùëé2√óùúãùúãùëéùëé,ùë£ùë£2ùëåùëå2|ùëáùëá1=ùëéùëé,ùëáùëá2=ùë£ùë£ÔøΩ   =ùúãùúãùëéùëéùõæùõæùëéùëé1 ùúãùúãùëéùëé2(ùúéùúé2+ùúáùúáùëéùëé,ùëéùëé2)+ùúãùúãùëéùëé(1‚àíùõæùõæùëéùëé)ùúãùúãùëéùëé,ùë£ùë£1 ùúãùúãùëéùëé2ùúãùúãùëéùëé,ùë£ùë£2(ùúéùúé2+ùúáùúáùëéùëé,ùë£ùë£2)   =ùõæùõæùëéùëé ùúãùúãùëéùëé(ùúéùúé2+ùúáùúáùëéùëé,ùëéùëé2)+(1‚àíùõæùõæùëéùëé) ùúãùúãùëéùëéùúãùúãùëéùëé,ùë£ùë£(ùúéùúé2+ùúáùúáùëéùëé,ùë£ùë£2)   =1‚àíùõæùõæùëéùëé+ùõæùõæùëéùëéùúãùúãùëéùëé,ùë£ùë£ ùúãùúãùëéùëéùúãùúãùëéùëé,ùë£ùë£ùúéùúé2+ùõæùõæùëéùëé ùúãùúãùëéùëéùúáùúáùëéùëé,ùëéùëé2+(1‚àíùõæùõæùëéùëé) ùúãùúãùëéùëéùúãùúãùëéùëé,ùë£ùë£ùúáùúáùëéùëé,ùë£ùë£2. (18)   Finally, from (16), using (17) and (18), we have    ùëâùëâùëéùëéùëâùëâ(ùúáùúáÃÇùëëùëë1)  63    =1 ùëÅùëÅÔøΩ1‚àíùõæùõæùëéùëé+ùõæùõæùëéùëéùúãùúãùëéùëé,ùë£ùë£ ùúãùúãùëéùëéùúãùúãùëéùëé,ùë£ùë£ùúéùúé2+ùõæùõæùëéùëé ùúãùúãùëéùëéùúáùúáùëéùëé,ùëéùëé2+(1‚àíùõæùõæùëéùëé) ùúãùúãùëéùëéùúãùúãùëéùëé,ùë£ùë£ùúáùúáùëéùëé,ùë£ùë£2‚àí(ùõæùõæùëéùëéùúáùúáùëéùëé,ùëéùëé+(1‚àíùõæùõæùëéùëé)ùúáùúáùëéùëé,ùë£ùë£)2ÔøΩ   =1 ùëÅùëÅ{1‚àíùõæùõæùëéùëé+ùõæùõæùëéùëéùúãùúãùëéùëé,ùë£ùë£ ùúãùúãùëéùëéùúãùúãùëéùëé,ùë£ùë£ùúéùúé2+ùõæùõæùëéùëé(1‚àíùõæùõæùëéùëéùúãùúãùëéùëé) ùúãùúãùëéùëéùúáùúáùëéùëé,ùëéùëé2+(1‚àíùõæùõæùëéùëé)(1‚àí(1‚àíùõæùõæùëéùëé)ùúãùúãùëéùëéùúãùúãùëéùëé,ùë£ùë£) ùúãùúãùëéùëéùúãùúãùëéùëé,ùë£ùë£ùúáùúáùëéùëé,ùë£ùë£2       ‚àí2ùõæùõæùëéùëé(1‚àíùõæùõæùëéùëé)ùúáùúáùëéùëé,ùëéùëéùúáùúáùëéùëé,ùë£ùë£} (19)    A.3  Non -Inferiority Test: Sample Size for Comparing Distinct -Path AI s   Here, we calculate the sample size formula to corresponding to a  non-inferiority test to  decide whether the AI ùëëùëë1 is non- inferior in efficacy to  AI ùëëùëë3. We can  write the power of the test  as (Friedman  et al., 2015)   ùëÉùëÉùêªùêª1[   ùëâùëâùëíùëíùëóùëóùëíùëíùëéùëéùëüùëü   ùêªùêª0]=ùëÉùëÉùúáùúáùëëùëë3‚àíùúáùúáùëëùëë1=ùõøùõø ‚é£‚é¢‚é¢‚é°ùëåùëåùëëùëë3‚àíùëåùëåùëëùëë1‚àíùúÉùúÉ ÔøΩùúàùúàùëëùëë3ùëëùëë1ùê∑ùê∑ùê∑ùê∑< ‚àíùëßùëßùõºùõº ‚é¶‚é•‚é•‚é§      =ùëÉùëÉùúáùúáùëëùëë3‚àíùúáùúáùëëùëë1=ùõøùõøÔøΩùëåùëåùëëùëë3‚àíùëåùëåùëëùëë1‚àíùõøùõø ÔøΩùúàùúàùëëùëë3ùëëùëë1ùê∑ùê∑ùê∑ùê∑‚àíùúÉùúÉ‚àíùõøùõø ÔøΩùúàùúàùëëùëë1ùëëùëë3ùê∑ùê∑ùê∑ùê∑<‚àíùëßùëßùõºùõºÔøΩ   =ùëÉùëÉÔøΩùëçùëç<‚àíùëßùëßùõºùõº+ùúÉùúÉ‚àíùõøùõø ÔøΩùúàùúàùëëùëë3ùëëùëë1ùê∑ùê∑ùê∑ùê∑ÔøΩ,   ùë£ùë£ùëñùëñùëéùëéùëéùëéùëíùëí ,   ùëçùëç=ùëåùëåùëëùëë3‚àíùëåùëåùëëùëë1‚àíùõøùõø ÔøΩùúàùúàùëëùëë3ùëëùëë1ùê∑ùê∑ùê∑ùê∑‚ÜíùëÅùëÅ(0,1)          ùëêùëêùëéùëéùëëùëëùëíùëíùëâùëâ    ùêªùêª1   =Œ¶ÔøΩ‚àíùëßùëßùõºùõº+ùúÉùúÉ‚àíùõøùõø ÔøΩùúàùúàùëëùëë3ùëëùëë1ùê∑ùê∑ùê∑ùê∑ÔøΩ,    ùëêùëêùëâùëâ,   1‚àíùõΩùõΩ=1‚àíŒ¶ÔøΩùëßùëßùõºùõº‚àíùúÉùúÉ‚àíùõøùõø ÔøΩùúàùúàùëëùëë3ùëëùëë1ùê∑ùê∑ùê∑ùê∑ÔøΩ,   Œ¶ÔøΩùëßùëßùõºùõº‚àíùúÉùúÉ‚àíùõøùõø ÔøΩùúàùúàùëëùëë3ùëëùëë1ùê∑ùê∑ùê∑ùê∑ÔøΩ=ùõΩùõΩ=Œ¶(ùëßùëß1‚àíùõΩùõΩ)  64    ùëßùëßùõºùõº‚àíùúÉùúÉ‚àíùõøùõø ÔøΩùúàùúàùëëùëë3ùëëùëë1ùê∑ùê∑ùê∑ùê∑=ùëßùëß1‚àíùõΩùõΩ=‚àíùëßùëßùõΩùõΩ   ùëßùëßùõºùõº+ùëßùëßùõΩùõΩ=ùúÉùúÉ‚àíùõøùõø ÔøΩùúàùúàùëëùëë3ùëëùëë1ùê∑ùê∑ùê∑ùê∑=ùúÉùúÉ‚àíùõøùõø ÔøΩ(ùúéùúéùëëùëë32+ùúéùúéùëëùëë12)/ùëÅùëÅ   (ùëßùëßùõºùõº+ùëßùëßùõΩùõΩ)2=ùëÅùëÅ(ùúÉùúÉ‚àíùõøùõø)2 (ùúéùúéùëëùëë32+ùúéùúéùëëùëë12)   ùëÅùëÅ=(ùëßùëßùõºùõº+ùëßùëßùõΩùõΩ)2(ùúéùúéùëëùëë32+ùúéùúéùëëùëë12) (ùúÉùúÉ‚àíùõøùõø)2.  Note that ùúÉùúÉ=ùõøùõø means ùêªùêª0 is true, then ùëÅùëÅ=‚àû. In all other cases, the above formula will give  reasonable sample sizes. If 0<ùõøùõø<ùúÉùúÉ, ùëÅùëÅ will be high; if ùõøùõø<0, ùëÅùëÅ will be relatively small.     A.4  Non -Inferiority Test: Variance Formula for Comparing Shared -Path AI s   The variance of ùëåùëåùëëùëë3‚àíùëåùëåùëëùëë4 is given by     ùëâùëâ(ùúáùúáÃÇùëëùëë3‚àíùúáùúáÃÇùëëùëë4)=ùëâùëâ(ùúáùúáÃÇùëëùëë3)+ùëâùëâ(ùúáùúáÃÇùëëùëë4)‚àí2ùê∂ùê∂ùëêùëêùë£ùë£(ùúáùúáÃÇùëëùëë3,ùúáùúáÃÇùëëùëë4). (20)   Now,    ùê∂ùê∂ùëêùëêùë£ùë£(ùúáùúáÃÇùëëùëë3,ùúáùúáÃÇùëëùëë4)=ùê∂ùê∂ùëêùëêùë£ùë£(1 ùëÅùëÅ‚àëùëÅùëÅ ùëñùëñ=1ùëäùëäùëñùëñùëëùëë3ùëåùëåùëñùëñ,1 ùëÅùëÅ‚àëùëÅùëÅùëñùëñ=1ùëäùëäùëñùëñùëëùëë4ùëåùëåùëñùëñ)   =ùê∂ùê∂ùëêùëêùë£ùë£(1 ùëÅùëÅ‚àëùëÅùëÅùëñùëñ=1ùêºùêº{ùëáùëá 1ùëñùëñ=ùëéùëéùëéùëé,ùëáùëá2ùëñùëñ=ùëéùëéùëéùëéùëÖùëÖùëñùëñùë£ùë£1‚àíùëÖùëÖùëñùëñ} ùúãùúãùëéùëéùëéùëé√óùúãùúãùëéùëéùëéùëé,ùë£ùë£1‚àíùëÖùëÖùëñùëñùëåùëåùëñùëñ,1 ùëÅùëÅ‚àëùëÅùëÅùëñùëñ=1ùêºùêº{ùëáùëá 1ùëñùëñ=ùëéùëéùëéùëé,ùëáùëá2ùëñùëñ=ùëéùëéùëéùëéùëÖùëÖùëñùëñùëöùëö1‚àíùëÖùëÖùëñùëñ} ùúãùúãùëéùëéùëéùëé√ó(1‚àíùúãùúãùëéùëéùëéùëé,ùë£ùë£)1‚àíùëÖùëÖùëñùëñùëåùëåùëñùëñ)   =1 ùëÅùëÅ2[ùê∏ùê∏(‚àëùëÅùëÅùëñùëñ=1ùêºùêº{ùëáùëá 1ùëñùëñ=ùëéùëéùëéùëé,ùëáùëá2ùëñùëñ=ùëéùëéùëéùëéùëÖùëÖùëñùëñùë£ùë£1‚àíùëÖùëÖùëñùëñ} ùúãùúãùëéùëéùëéùëé√óùúãùúãùëéùëéùëéùëé,ùë£ùë£1‚àíùëÖùëÖùëñùëñùëåùëåùëñùëñ√ó‚àëùëÅùëÅùëñùëñ=1ùêºùêº{ùëáùëá 1ùëñùëñ=ùëéùëéùëéùëé,ùëáùëá2ùëñùëñ=ùëéùëéùëéùëéùëÖùëÖùëñùëñùëöùëö1‚àíùëÖùëÖùëñùëñ} ùúãùúãùëéùëéùëéùëé√ó(1‚àíùúãùúãùëéùëéùëéùëé,ùë£ùë£)1‚àíùëÖùëÖùëñùëñùëåùëåùëñùëñ)]   ‚àíùê∏ùê∏(1 ùëÅùëÅ‚àëùëÅùëÅùëñùëñ=1ùêºùêº{ùëáùëá 1ùëñùëñ=ùëéùëéùëéùëé,ùëáùëá2ùëñùëñ=ùëéùëéùëéùëéùëÖùëÖùëñùëñùë£ùë£1‚àíùëÖùëÖùëñùëñ} ùúãùúãùëéùëéùëéùëé√óùúãùúãùëéùëéùëéùëé,ùë£ùë£1‚àíùëÖùëÖùëñùëñùëåùëåùëñùëñ)ùê∏ùê∏(1 ùëÅùëÅ‚àëùëÅùëÅùëñùëñ=1ùêºùêº{ùëáùëá 1ùëñùëñ=ùëéùëéùëéùëé,ùëáùëá2ùëñùëñ=ùëéùëéùëéùëéùëÖùëÖùëñùëñùëöùëö1‚àíùëÖùëÖùëñùëñ} ùúãùúãùëéùëéùëéùëé√ó(1‚àíùúãùúãùëéùëéùëéùëé,ùë£ùë£)1‚àíùëÖùëÖùëñùëñùëåùëåùëñùëñ).     (21)   We have    ùê∏ùê∏(1 ùëÅùëÅ‚àëùëÅùëÅùëñùëñ=1ùêºùêº{ùëáùëá 1ùëñùëñ=ùëéùëéùëéùëé,ùëáùëá2ùëñùëñ=ùëéùëéùëéùëéùëÖùëÖùëñùëñùë£ùë£1‚àíùëÖùëÖùëñùëñ} ùúãùúãùëéùëéùëéùëé√óùúãùúãùëéùëéùëéùëé,ùë£ùë£1‚àíùëÖùëÖùëñùëñùëåùëåùëñùëñ)=ùõæùõæùê¥ùê¥ùúáùúáùëéùëéùëéùëé,ùëéùëéùëéùëé+(1‚àíùõæùõæùê¥ùê¥)ùúáùúáùëéùëéùëéùëé,ùë£ùë£, (22)   ùê∏ùê∏(1 ùëÅùëÅ‚àëùëÅùëÅùëñùëñ=1ùêºùêº{ùëáùëá 1ùëñùëñ=ac,ùëáùëá2ùëñùëñ=ùëéùëéùëéùëéùëÖùëÖùëñùëñùëöùëö1‚àíùëÖùëÖùëñùëñ} ùúãùúãùëéùëéùëéùëé√ó(1‚àíùúãùúãùëéùëéùëéùëé,ùë£ùë£)1‚àíùëÖùëÖùëñùëñùëåùëåùëñùëñ)=ùõæùõæùê¥ùê¥ùúáùúáùëéùëéùëéùëé,ùëéùëéùëéùëé+(1‚àíùõæùõæùê¥ùê¥)ùúáùúáùëéùëéùëéùëé,ùëöùëö. (23)  65    Now,    ùê∏ùê∏(‚àëùëÅùëÅ ùëñùëñ=1ùêºùêº{ùëáùëá1ùëñùëñ=ùëéùëéùëéùëé,ùëáùëá2ùëñùëñ=ùëéùëéùëéùëéùëÖùëÖùëñùëñùë£ùë£1‚àíùëÖùëÖùëñùëñ} ùúãùúãùëéùëéùëéùëé√óùúãùúãùëéùëéùëéùëé,ùë£ùë£1‚àíùëÖùëÖùëñùëñùëåùëåùëñùëñ√ó‚àëùëÅùëÅùëñùëñ=1ùêºùêº{ùëáùëá 1ùëñùëñ=ùëéùëéùëéùëé,ùëáùëá2ùëñùëñ=ùëéùëéùëéùëéùëÖùëÖùëñùëñùëöùëö1‚àíùëÖùëÖùëñùëñ} ùúãùúãùëéùëéùëéùëé√ó(1‚àíùúãùúãùëéùëéùëéùëé,ùë£ùë£)1‚àíùëÖùëÖùëñùëñùëåùëåùëñùëñ)   =‚àëùëÅùëÅùëñùëñ=1‚àëùëÅùëÅùëóùëó=1ùê∏ùê∏(ùêºùêº{ùëáùëá1ùëñùëñ=ùëéùëéùëéùëé,ùëáùëá2ùëñùëñ=ùëéùëéùëéùëéùëÖùëÖùëñùëñùë£ùë£1‚àíùëÖùëÖùëñùëñ} ùúãùúãùëéùëéùëéùëé√óùúãùúãùëéùëéùëéùëé,ùë£ùë£1‚àíùëÖùëÖùëñùëñùëåùëåùëñùëñ√óùêºùêº{ùëáùëá1ùëóùëó=ùëéùëéùëéùëé,ùëáùëá2ùëóùëó=ùëéùëéùëéùëéùëÖùëÖùëóùëóùëöùëö1‚àíùëÖùëÖùëóùëó} ùúãùúãùëéùëéùëéùëé√ó(1‚àíùúãùúãùëéùëéùëéùëé,ùë£ùë£)1‚àíùëÖùëÖùëóùëóùëåùëåùëóùëó)   =‚àëùëÅùëÅ ùëñùëñ=1ùê∏ùê∏(ùêºùêº{ùëáùëá1ùëñùëñ=ùëéùëéùëéùëé,ùëáùëá2ùëñùëñ=ùëéùëéùëéùëé} ùúãùúãùëéùëéùëéùëéùëåùëåùëñùëñ√óùêºùêº{ùëáùëá1ùëñùëñ=ùëéùëéùëéùëé,ùëáùëá2ùëñùëñ=ùëéùëéùëéùëé} ùúãùúãùëéùëéùëéùëéùëåùëåùëñùëñ)   +‚àëùëñùëñ‚â†ùëóùëóùê∏ùê∏(ùêºùêº{ùëáùëá1ùëñùëñ=ùëéùëéùëéùëé,ùëáùëá2ùëñùëñ=ùëéùëéùëéùëéùëÖùëÖùëñùëñùë£ùë£1‚àíùëÖùëÖùëñùëñ} ùúãùúãùëéùëéùëéùëé√óùúãùúãùëéùëéùëéùëé,ùë£ùë£1‚àíùëÖùëÖùëñùëñùëåùëåùëñùëñ√óùêºùêº{ùëáùëá1ùëóùëó=ùëéùëéùëéùëé,ùëáùëá2ùëóùëó=ùëéùëéùëéùëéùëÖùëÖùëóùëóùëöùëö1‚àíùëÖùëÖùëóùëó} ùúãùúãùëéùëéùëéùëé√ó(1‚àíùúãùúãùëéùëéùëéùëé)1‚àíùëÖùëÖùëóùëóùëåùëåùëóùëó)   =ùê¥ùê¥(ùëñùëñ=ùëóùëó)+ùê¥ùê¥(ùëñùëñ‚â†ùëóùëó), (24)   where,    ùê¥ùê¥(ùëñùëñ=ùëóùëó)=‚àëùëÅùëÅ ùëñùëñ=1ùê∏ùê∏(ùêºùêº{ùëáùëá1ùëñùëñ=ùëéùëéùëéùëé,ùëáùëá2ùëñùëñ=ùëéùëéùëéùëé} ùúãùúãùëéùëéùëéùëéùëåùëåùëñùëñ√óùêºùêº{ùëáùëá1ùëñùëñ=ùëéùëéùëéùëé,ùëáùëá2ùëñùëñ=ùëéùëéùëéùëé} ùúãùúãùëéùëéùëéùëéùëåùëåùëñùëñ)   =1 ùúãùúãùëéùëéùëéùëé2‚àëùëÅùëÅùëñùëñ=1ùê∏ùê∏(ùêºùêº{ùëáùëá1ùëñùëñ=ùëéùëéùëéùëé,ùëáùëá2ùëñùëñ=ùëéùëéùëéùëé}ùëåùëåùëñùëñ2)   =1 ùúãùúãùëéùëéùëéùëé2‚àëùëÅùëÅùëñùëñ=1[ùê∏ùê∏(ùêºùêº{ùëáùëá1ùëñùëñ=ùëéùëéùëéùëé,ùëáùëá2ùëñùëñ=ùëéùëéùëéùëé}ùëåùëåùëñùëñ2|ùëáùëá1ùëñùëñ=ùëéùëéùëéùëé,ùëáùëá2ùëñùëñ=ùëéùëéùëéùëé)ùëÉùëÉ(ùëáùëá1ùëñùëñ=ùëéùëéùëéùëé,ùëáùëá2ùëñùëñ= ùëéùëéùëéùëé)+0]   =1 ùúãùúãùëéùëéùëéùëé2‚àëùëÅùëÅùëñùëñ=1[ùê∏ùê∏(ùëåùëåùëñùëñ2|ùëáùëá1ùëñùëñ=ùëéùëéùëéùëé,ùëáùëá2ùëñùëñ=ùëéùëéùëéùëé)ùëÉùëÉ(ùëáùëá1ùëñùëñ=ùëéùëéùëéùëé)ùëÉùëÉ(ùëáùëá2ùëñùëñ=ùëéùëéùëéùëé|ùëáùëá1ùëñùëñ=ùëéùëéùëéùëé)]   =1 ùúãùúãùëéùëéùëéùëé2‚àëùëÅùëÅùëñùëñ=1(ùúéùúé2+ùúáùúáùëéùëéùëéùëé,ùëéùëéùëéùëé2)ùúãùúãùëéùëéùëéùëéùõæùõæùëéùëéùëéùëé   =ùëÅùëÅ ùúãùúãùëéùëéùëéùëéùõæùõæùëéùëéùëéùëé(ùúéùúé2+ùúáùúáùëéùëéùëéùëé,ùëéùëéùëéùëé2), (25)   and,    ùê¥ùê¥(ùëñùëñ‚â†ùëóùëó)   =‚àëùëñùëñ‚â†ùëóùëóùê∏ùê∏(ùêºùêº{ùëáùëá1ùëñùëñ=ùëéùëéùëéùëé,ùëáùëá2ùëñùëñ=ùëéùëéùëéùëéùëÖùëÖùëñùëñùë£ùë£1‚àíùëÖùëÖùëñùëñ} ùúãùúãùëéùëéùëéùëé√óùúãùúãùëéùëéùëéùëé,ùë£ùë£1‚àíùëÖùëÖùëñùëñùëåùëåùëñùëñ‚ãÖùêºùêº{ùëáùëá1ùëóùëó=ùëéùëéùëéùëé,ùëáùëá2ùëóùëó=ùëéùëéùëéùëéùëÖùëÖùëóùëóùëöùëö1‚àíùëÖùëÖùëóùëó} ùúãùúãùëéùëéùëéùëé√ó(1‚àíùúãùúãùëéùëéùëéùëé,ùë£ùë£)1‚àíùëÖùëÖùëóùëóùëåùëåùëóùëó)   =‚àëùëñùëñ‚â†ùëóùëó[‚àëùëáùëá2ùëñùëñ,ùëáùëá2ùëóùëóùê∏ùê∏(ùêºùêº{ùëáùëá1ùëñùëñ=ùëéùëéùëéùëé,ùëáùëá2ùëñùëñ=ùëéùëéùëéùëéùëÖùëÖùëñùëñùë£ùë£1‚àíùëÖùëÖùëñùëñ} ùúãùúãùëéùëéùëéùëé√óùúãùúãùëéùëéùëéùëé,ùë£ùë£1‚àíùëÖùëÖùëñùëñ‚ãÖùêºùêº{ùëáùëá1ùëóùëó=ùëéùëéùëéùëé,ùëáùëá2ùëóùëó=ùëéùëéùëéùëéùëÖùëÖùëóùëóùëöùëö1‚àíùëÖùëÖùëóùëó} ùúãùúãùëéùëéùëéùëé√ó(1‚àíùúãùúãùëéùëéùëéùëé,ùë£ùë£)1‚àíùëÖùëÖùëóùëóùëåùëåùëñùëñùëåùëåùëóùëó|  66        ùëáùëá1ùëñùëñ=ùëéùëéùëéùëé,ùëáùëá2ùëñùëñ,ùëáùëá1ùëóùëó=ùëéùëéùëéùëé,ùëáùëá2ùëóùëó)√óùëÉùëÉ(ùëáùëá1ùëñùëñ=ùëéùëéùëéùëé,ùëáùëá2ùëñùëñ,ùëáùëá1ùëóùëó=ùëéùëéùëéùëé,ùëáùëá2ùëóùëó)+0]   =‚àëùëñùëñ‚â†ùëóùëó[ùê∏ùê∏(ùêºùêº{ùëáùëá1ùëñùëñ=ùëéùëéùëéùëé,ùëáùëá2ùëñùëñ=ùëéùëéùëéùëé} ùúãùúãùëéùëéùëéùëé‚ãÖùêºùêº{ùëáùëá1ùëóùëó=ùëéùëéùëéùëé,ùëáùëá2ùëóùëó=ùëéùëéùëéùëé} ùúãùúãùëéùëéùëéùëéùëåùëåùëñùëñùëåùëåùëóùëó|ùëáùëá1ùëñùëñ=ùëéùëéùëéùëé,ùëáùëá2ùëñùëñ=ùëéùëéùëéùëé,ùëáùëá1ùëóùëó= ùëéùëéùëéùëé,ùëáùëá2ùëóùëó=ùëéùëéùëéùëé)       √óùëÉùëÉ(ùëáùëá1ùëñùëñ=ùëéùëéùëéùëé,ùëáùëá2ùëñùëñ=ùëéùëéùëéùëé,ùëáùëá1ùëóùëó=ùëéùëéùëéùëé,ùëáùëá2ùëóùëó=ùëéùëéùëéùëé)   +ùê∏ùê∏(ùêºùêº{ùëáùëá1ùëñùëñ=ùëéùëéùëéùëé,ùëáùëá2ùëñùëñ=ùëéùëéùëéùëé} ùúãùúãùëéùëéùëéùëé‚ãÖùêºùêº{ùëáùëá1ùëóùëó=ùëéùëéùëéùëé,ùëáùëá2ùëóùëó=ùëöùëö} ùúãùúãùëéùëéùëéùëé√ó(1‚àíùúãùúãùëéùëéùëéùëé,ùë£ùë£)ùëåùëåùëñùëñùëåùëåùëóùëó|ùëáùëá1ùëñùëñ=ùëéùëéùëéùëé,ùëáùëá2ùëñùëñ=ùëéùëéùëéùëé,ùëáùëá1ùëóùëó=ùëéùëéùëéùëé,ùëáùëá2ùëóùëó=ùëöùëö)       √óùëÉùëÉ(ùëáùëá1ùëñùëñ=ùëéùëéùëéùëé,ùëáùëá2ùëñùëñ=ùëéùëéùëéùëé,ùëáùëá1ùëóùëó=ùëéùëéùëéùëé,ùëáùëá2ùëóùëó=ùëöùëö)   +ùê∏ùê∏(ùêºùêº{ùëáùëá1ùëñùëñ=ùëéùëéùëéùëé,ùëáùëá2ùëñùëñ=ùë£ùë£} ùúãùúãùëéùëéùëéùëé√óùúãùúãùëéùëéùëéùëé,ùë£ùë£‚ãÖùêºùêº{ùëáùëá1ùëóùëó=ùëéùëéùëéùëé,ùëáùëá2ùëóùëó=ùëéùëéùëéùëé} ùúãùúãùëéùëéùëéùëéùëåùëåùëñùëñùëåùëåùëóùëó|ùëáùëá1ùëñùëñ=ùëéùëéùëéùëé,ùëáùëá2ùëñùëñ=ùë£ùë£,ùëáùëá1ùëóùëó=ùëéùëéùëéùëé,ùëáùëá2ùëóùëó=ùëéùëéùëéùëé)       √óùëÉùëÉ(ùëáùëá1ùëñùëñ=ùëéùëéùëéùëé,ùëáùëá2ùëñùëñ=ùë£ùë£,ùëáùëá1ùëóùëó=ùëéùëéùëéùëé,ùëáùëá2ùëóùëó=ùëéùëéùëéùëé)   +ùê∏ùê∏(ùêºùêº{ùëáùëá1ùëñùëñ=ùëéùëéùëéùëé,ùëáùëá2ùëñùëñ=ùë£ùë£} ùúãùúãùëéùëéùëéùëé√óùúãùúãùëéùëéùëéùëé,ùë£ùë£‚ãÖùêºùêº{ùëáùëá1ùëóùëó=ùëéùëéùëéùëé,ùëáùëá2ùëóùëó=ùëöùëö} ùúãùúãùëéùëéùëéùëé√ó(1‚àíùúãùúãùëéùëéùëéùëé,ùë£ùë£)ùëåùëåùëñùëñùëåùëåùëóùëó|ùëáùëá1ùëñùëñ=ùëéùëéùëéùëé,ùëáùëá2ùëñùëñ=ùë£ùë£,ùëáùëá1ùëóùëó=ùëéùëéùëéùëé,ùëáùëá2ùëóùëó=ùëöùëö)       √óùëÉùëÉ(ùëáùëá1ùëñùëñ=ùëéùëéùëéùëé,ùëáùëá2ùëñùëñ=ùë£ùë£,ùëáùëá1ùëóùëó=ùëéùëéùëéùëé,ùëáùëá2ùëóùëó=ùëöùëö)]   =ùëÅùëÅ(ùëÅùëÅ‚àí1)[ùõæùõæùëéùëéùëéùëé2ùúáùúáùëéùëéùëéùëé,ùëéùëéùëéùëé2+ùõæùõæùëéùëéùëéùëé(1‚àíùõæùõæùëéùëéùëéùëé)ùúáùúáùëéùëéùëéùëé,ùëéùëéùëéùëéùúáùúáùëéùëéùëéùëé,ùëöùëö+ùõæùõæùëéùëéùëéùëé(1‚àíùõæùõæùëéùëéùëéùëé)ùúáùúáùëéùëéùëéùëé,ùëéùëéùëéùëéùúáùúáùëéùëéùëéùëé,ùë£ùë£+ (1‚àíùõæùõæùëéùëéùëéùëé)2ùúáùúáùëéùëéùëéùëé,ùë£ùë£ùúáùúáùëéùëéùëéùëé,ùëöùëö]   =ùëÅùëÅ(ùëÅùëÅ‚àí1)√ó(ùõæùõæùëéùëéùëéùëéùúáùúáùëéùëéùëéùëé,ùëéùëéùëéùëé+(1‚àíùõæùõæùëéùëéùëéùëé)ùúáùúáùëéùëéùëéùëé,ùë£ùë£)√ó(ùõæùõæùëéùëéùëéùëéùúáùúáùëéùëéùëéùëé,ùëéùëéùëéùëé+(1‚àíùõæùõæùëéùëéùëéùëé)ùúáùúáùëéùëéùëéùëé,ùëöùëö). (26)   Using,  (21) (22), (23), (24), (25) and (26), we have    ùê∂ùê∂ùëêùëêùë£ùë£(ùúáùúáÃÇùëëùëë3,ùúáùúáÃÇùëëùëë4)   =1 ùëÅùëÅ2[ùëÅùëÅ ùúãùúãùëéùëéùëéùëéùõæùõæùëéùëéùëéùëé(ùúéùúé2+ùúáùúáùëéùëéùëéùëé,ùëéùëéùëéùëé2)+ùëÅùëÅ(ùëÅùëÅ‚àí1)‚ãÖ(ùõæùõæùëéùëéùëéùëéùúáùúáùëéùëéùëéùëé,ùëéùëéùëéùëé+(1‚àíùõæùõæùëéùëéùëéùëé)ùúáùúáùëéùëéùëéùëé,ùë£ùë£)‚ãÖ (ùõæùõæùëéùëéùëéùëéùúáùúáùëéùëéùëéùëé,ùëéùëéùëéùëé+(1‚àíùõæùõæùëéùëéùëéùëé)ùúáùúáùëéùëéùëéùëé,ùëöùëö)]       ‚àí(ùõæùõæùëéùëéùëéùëéùúáùúáùëéùëéùëéùëé,ùëéùëéùëéùëé+(1‚àíùõæùõæùëéùëéùëéùëé)ùúáùúáùëéùëéùëéùëé,ùë£ùë£)‚ãÖ(ùõæùõæùëéùëéùëéùëéùúáùúáùëéùëéùëéùëé,ùëéùëéùëéùëé+(1‚àíùõæùõæùëéùëéùëéùëé)ùúáùúáùëéùëéùëéùëé,ùëöùëö)   =1 ùëÅùëÅ[ùõæùõæùëéùëéùëéùëé ùúãùúãùëéùëéùëéùëé(ùúéùúé2+ùúáùúáùëéùëéùëéùëé,ùëéùëéùëéùëé2)‚àí(ùõæùõæùëéùëéùëéùëéùúáùúáùëéùëéùëéùëé,ùëéùëéùëéùëé+(1‚àíùõæùõæùëéùëéùëéùëé)ùúáùúáùëéùëéùëéùëé,ùë£ùë£)‚ãÖ(ùõæùõæùëéùëéùëéùëéùúáùúáùëéùëéùëéùëé,ùëéùëéùëéùëé+(1‚àí ùõæùõæùëéùëéùëéùëé)ùúáùúáùëéùëéùëéùëé,ùëöùëö)]. (27)  67     Hence, using ( (20)) and ( (27)),    ùëâùëâ(ùúáùúáÃÇùëëùëë3‚àíùúáùúáÃÇùëëùëë4)=ùëâùëâ(ùúáùúáÃÇùëëùëë3)+ùëâùëâ(ùúáùúáÃÇùëëùëë4)       ‚àí2 ùëÅùëÅ[ùõæùõæùëéùëéùëéùëé ùúãùúãùëéùëéùëéùëé(ùúéùúé2+ùúáùúáùëéùëéùëéùëé,ùëéùëéùëéùëé2)‚àí(ùõæùõæùëéùëéùëéùëéùúáùúáùëéùëéùëéùëé,ùëéùëéùëéùëé+(1‚àíùõæùõæùëéùëéùëéùëé)ùúáùúáùëéùëéùëéùëé,ùë£ùë£)‚ãÖ(ùõæùõæùëéùëéùëéùëéùúáùúáùëéùëéùëéùëé,ùëéùëéùëéùëé+(1‚àí ùõæùõæùëéùëéùëéùëé)ùúáùúáùëéùëéùëéùëé,ùëöùëö)]. (28)    A.5  Equivalence Test: Power of Comparing Distinct -Path AI s  Here we provide the formula, which can be used to obtain the sample size in an  equivalence  test that decides whether the AI ùëëùëë1 is equivalent in efficacy to the AI  ùëëùëë3. We can  write the power  of the test as ( Friedman  et al., 2015)    ùëÉùëÉùêªùêª1ÔøΩùëåùëåÔøΩùëëùëë3‚àíùëåùëåÔøΩùëëùëë1‚àíùúÉùúÉ ÔøΩùúàùúàùëëùëë3ùëëùëë1ùê∑ùê∑ùê∑ùê∑<‚àíùëßùëßùõºùõº   ùëéùëéùëéùëéùëëùëë    ùëåùëåÔøΩùëëùëë3‚àíùëåùëåÔøΩùëëùëë1+ùúÉùúÉ ÔøΩùúàùúàùëëùëë3ùëëùëë1ùê∑ùê∑ùê∑ùê∑>ùëßùëßùõºùõºÔøΩ,   where ùúáùúáùëëùëë3‚àíùúáùúáùëëùëë1‚àà(‚àíùúÉùúÉ,ùúÉùúÉ) under ùêªùêª1. When ùúáùúáùëëùëë3‚àíùúáùúáùëëùëë1=ùõøùõø‚àà(‚àíùúÉùúÉ,ùúÉùúÉ), then the power    ùëÉùëÉùúáùúáùëëùëë3‚àíùúáùúáùëëùëë1=ùõøùõøÔøΩùëåùëåÔøΩùëëùëë3‚àíùëåùëåÔøΩùëëùëë1‚àíùúÉùúÉ ÔøΩùúàùúàùëëùëë3ùëëùëë1ùê∑ùê∑ùê∑ùê∑<‚àíùëßùëßùõºùõº   ùëéùëéùëéùëéùëëùëë    ùëåùëåÔøΩùëëùëë3‚àíùëåùëåÔøΩùëëùëë1+ùúÉùúÉ ÔøΩùúàùúàùëëùëë3ùëëùëë1ùê∑ùê∑ùê∑ùê∑>ùëßùëßùõºùõºÔøΩ   =ùëÉùëÉùúáùúáùëëùëë3‚àíùúáùúáùëëùëë1=ùõøùõøÔøΩùëåùëåÔøΩùëëùëë3‚àíùëåùëåÔøΩùëëùëë1‚àíùõøùõø ÔøΩùúàùúàùëëùëë3ùëëùëë1ùê∑ùê∑ùê∑ùê∑‚àíùúÉùúÉ‚àíùõøùõø ÔøΩùúàùúàùëëùëë3ùëëùëë1ùê∑ùê∑ùê∑ùê∑<‚àíùëßùëßùõºùõº   ùëéùëéùëéùëéùëëùëë    ùëåùëåÔøΩùëëùëë3‚àíùëåùëåÔøΩùëëùëë1‚àíùõøùõø ÔøΩùúàùúàùëëùëë3ùëëùëë1ùê∑ùê∑ùê∑ùê∑+ùúÉùúÉ+ùõøùõø ÔøΩùúàùúàùëëùëë3ùëëùëë1ùê∑ùê∑ùê∑ùê∑> ‚àíùëßùëßùõºùõºÔøΩ   =ùëÉùëÉÔøΩùëçùëç<‚àíùëßùëßùõºùõº+ùúÉùúÉ‚àíùõøùõø ÔøΩùúàùúàùëëùëë3ùëëùëë1ùê∑ùê∑ùê∑ùê∑   ùëéùëéùëéùëéùëëùëë    ùëçùëç>ùëßùëßùõºùõº‚àíùúÉùúÉ+ùõøùõø ÔøΩùúàùúàùëëùëë3ùëëùëë1ùê∑ùê∑ùê∑ùê∑ÔøΩ  68    =ùëÉùëÉÔøΩùëßùëßùõºùõº‚àíùúÉùúÉ+ùõøùõø ÔøΩùúàùúàùëëùëë3ùëëùëë1ùê∑ùê∑ùê∑ùê∑<ùëçùëç<‚àíùëßùëßùõºùõº+ùúÉùúÉ‚àíùõøùõø ÔøΩùúàùúàùëëùëë3ùëëùëë1ùê∑ùê∑ùê∑ùê∑ÔøΩ   =Œ¶ÔøΩ‚àíùëßùëßùõºùõº+ùúÉùúÉ‚àíùõøùõø ÔøΩùúàùúàùëëùëë3ùëëùëë1ùê∑ùê∑ùê∑ùê∑ÔøΩ‚àíŒ¶ÔøΩùëßùëßùõºùõº‚àíùúÉùúÉ+ùõøùõø ÔøΩùúàùúàùëëùëë3ùëëùëë1ùê∑ùê∑ùê∑ùê∑ÔøΩ, (29)   which is equal to 1‚àíùõΩùõΩ. In a special case, when ùúáùúáùëëùëë3‚àíùúáùúáùëëùëë1=ùõøùõø=0, (29) becomes    1‚àíùõΩùõΩ=Œ¶ÔøΩ‚àíùëßùëßùõºùõº+ùúÉùúÉ ÔøΩùúàùúàùëëùëë3ùëëùëë1ùê∑ùê∑ùê∑ùê∑ÔøΩ‚àíŒ¶ÔøΩùëßùëßùõºùõº‚àíùúÉùúÉ ÔøΩùúàùúàùëëùëë3ùëëùëë1ùê∑ùê∑ùê∑ùê∑ÔøΩ=1‚àí2Œ¶ÔøΩùëßùëßùõºùõº‚àíùúÉùúÉ ÔøΩùúàùúàùëëùëë3ùëëùëë1ùê∑ùê∑ùê∑ùê∑ÔøΩ   ‚áíŒ¶ÔøΩùëßùëßùõºùõº‚àíùúÉùúÉ ÔøΩùúàùúàùëëùëë3ùëëùëë1ùê∑ùê∑ùê∑ùê∑ÔøΩ=ùõΩùõΩ 2=Œ¶ÔøΩùëßùëß1‚àíùõΩùõΩ 2ÔøΩ   ‚áíùëßùëßùõºùõº‚àíùúÉùúÉ ÔøΩùúàùúàùëëùëë3ùëëùëë1ùê∑ùê∑ùê∑ùê∑=ùëßùëß1‚àíùõΩùõΩ 2=‚àíùëßùëßùõΩùõΩ 2   ‚áíùëßùëßùõºùõº+ùëßùëßùõΩùõΩ 2=ùúÉùúÉ ÔøΩùúàùúàùëëùëë3ùëëùëë1ùê∑ùê∑ùê∑ùê∑=ùúÉùúÉ ÔøΩ(ùúéùúéùëëùëë32+ùúéùúéùëëùëë12)/ùëÅùëÅ   ‚áíÔøΩùëßùëßùõºùõº+ùëßùëßùõΩùõΩ 2ÔøΩ2 =ùëÅùëÅùúÉùúÉ2 (ùúéùúéùëëùëë32+ùúéùúéùëëùëë12)   ‚áíùëÅùëÅ=ÔøΩùëßùëßùõºùõº+ùëßùëßùõΩùõΩ 2ÔøΩ2(ùúéùúéùëëùëë32+ùúéùúéùëëùëë12) ùúÉùúÉ2.    A.6  Data Generation for a SMART      The data generation process for a SMART is complex. H ere we outline an algorithm that  generates datasets from a SMART (as depicted in Figure 1) to conduct simulation studies. The  algorithm is  as follows.    1. Set the values of: ùëâùëâùëéùëéùëâùëâ(ùëåùëå)=ùúéùúé2, ùõæùõæùëéùëéùëéùëé,ùõæùõæùëéùëéùëéùëé, ùõºùõº, ùõΩùõΩ.    69   2. Set the mean and variance of a latent variable ùêøùêø for the pati ent with treatment ùëéùëé at first  stage as ùúáùúáùêøùêøùëéùëé,ùúéùúéùêøùêø2, respectively . The latent variable can be viewed as a proximal outcome ,  which determine s responder/non- responder status after the first stage.     3. Define the cut -off value ùúÇùúÇ as that value of the latent variable ùêøùêø above which a patient is  considered a responder. So    ùúÇùúÇ=ùúáùúáùêøùêøùëéùëé+ùúéùúéùêøùêø√óŒ¶‚àí1(1‚àíùõæùõæùëéùëé),   where Œ¶ is the cumulative distribution function of the standard normal distribution.    4. The cut -off ùúÇùúÇ should be fixed for a SMART irr espective of the choice of initial treatment  (ùëéùëé or ùëéùëéùëéùëé). So we define    ùúáùúáùêøùêøùëéùëéùëéùëé=ùúÇùúÇ‚àíùúéùúéùêøùêø√óŒ¶‚àí1(1‚àíùõæùõæùëéùëéùëéùëé).    5. Define the truncated normal means of the non- responders (NR) who obtained the first - stage treatment ùëéùëé or ùëéùëéùëéùëé as   ùúáùúáùêøùêøùëéùëé.ùëÅùëÅùëÖùëÖ=ùúáùúáùêøùêøùëéùëé‚àíùúéùúéùêøùêø√óùúôùúô(ùëêùëê‚àó) Œ¶(ùëêùëê‚àó),   ùë§ùë§‚Ñéùëíùëíùëâùëâùëíùëí   ùëêùëê‚àó=ùúÇùúÇ‚àíùúáùúáùêøùêøùëéùëé ùúéùúéùêøùêø,   ùëéùëéùëéùëéùëëùëë             ùúáùúáùêøùêøùëéùëéùëéùëé.ùëÅùëÅùëÖùëÖ=ùúáùúáùêøùêøùëéùëéùëéùëé‚àíùúéùúéùêøùêø√óùúôùúô(ùë§ùë§‚àó) Œ¶(ùë§ùë§‚àó),   ùë§ùë§‚Ñéùëíùëíùëâùëâùëíùëí   ùë§ùë§‚àó=ùúÇùúÇ‚àíùúáùúáùêøùêøùëéùëéùëéùëé ùúéùúéùêøùêø,   ùëâùëâùëíùëíùë£ùë£ùëùùëùùëíùëíùëéùëéùëüùëüùëñùëñùë£ùë£ùëíùëíùëôùëôùëáùëá .   Here, ùúôùúô is the probability density function of the standard normal distribution.   6. The AI means corresponding to the AIs ùëëùëë1:(ùëéùëé,ùëéùëéùëÖùëÖùë£ùë£1‚àíùëÖùëÖ), ùëëùëë2:(ùëéùëé,ùëéùëéùëÖùëÖùëöùëö1‚àíùëÖùëÖ),  ùëëùëë3:(ùëéùëéùëéùëé,ùëéùëéùëéùëéùëÖùëÖùë£ùë£1‚àíùëÖùëÖ) and ùëëùëë4:(ùëéùëéùëéùëé,ùëéùëéùëéùëéùëÖùëÖùëöùëö1‚àíùëÖùëÖ) can be defined as (see equation (15))    ùúáùúáùëëùëë1=(ùúÅùúÅ0+ùúÅùúÅ1ùëéùëéùúáùúáùêøùêøùëéùëé)√óùõæùõæùëéùëé+(ùúâùúâ0+ùúâùúâ1ùëéùëéùúáùúáùêøùêøùëéùëé+ùúâùúâ2ùëéùëé,ùë£ùë£ùúáùúáùêøùêøùëéùëé.ùëÅùëÅùëÖùëÖ)√ó(1‚àíùõæùõæùëéùëé),   ùúáùúáùëëùëë2=(ùúÅùúÅ0+ùúÅùúÅ1ùëéùëéùúáùúáùêøùêøùëéùëé)√óùõæùõæùëéùëé+(ùúâùúâ0+ùúâùúâ1ùëéùëéùúáùúáùêøùêøùëéùëé+ùúâùúâ2ùëéùëé,ùëöùëöùúáùúáùêøùêøùëéùëé.ùëÅùëÅùëÖùëÖ)√ó(1‚àíùõæùõæùëéùëé),  70    ùúáùúáùëëùëë3=(ùúÅùúÅ0+ùúÅùúÅ1ùëéùëéùëéùëéùúáùúáùêøùêøùëéùëéùëéùëé)√óùõæùõæùëéùëéùëéùëé+(ùúâùúâ0+ùúâùúâ1ùëéùëéùëéùëéùúáùúáùêøùêøùëéùëéùëéùëé+ùúâùúâ2ùëéùëéùëéùëé,ùë£ùë£ùúáùúáùêøùêøùëéùëéùëéùëé.ùëÅùëÅùëÖùëÖ)√ó(1‚àíùõæùõæùëéùëéùëéùëé),   ùúáùúáùëëùëë4=(ùúÅùúÅ0+ùúÅùúÅ1ùëéùëéùëéùëéùúáùúáùêøùêøùëéùëéùëéùëé)√óùõæùõæùëéùëéùëéùëé+(ùúâùúâ0+ùúâùúâ1ùëéùëéùëéùëéùúáùúáùêøùêøùëéùëéùëéùëé+ùúâùúâ2ùëéùëéùëéùëé,ùëöùëöùúáùúáùêøùêøùëéùëéùëéùëé.ùëÅùëÅùëÖùëÖ)√ó(1‚àíùõæùõæùëéùëéùëéùëé),  respectively. Here, ÔøΩùúÅùúÅ0,ùúÅùúÅ1ùëéùëé,ùúÅùúÅ1ùëéùëéùëéùëé,ùúâùúâ0,ùúâùúâ1ùëéùëé,ùúâùúâ1ùëéùëéùëéùëé,ùúâùúâ2ùëéùëé,ùë£ùë£,ùúâùúâ2ùëéùëé,ùëöùëö,ùúâùúâ2ùëéùëéùëéùëé,ùë£ùë£,ùúâùúâ2ùëéùëéùëéùëé,ùëöùëöÔøΩ are (fixed)  parameters to be supplied by the user.  Note that ùúáùúáùëéùëé,ùëéùëé=ùúÅùúÅ0+ùúÅùúÅ1ùëéùëéùúáùúáùêøùêøùëéùëé shows the  dependency of the mean parameter  ùúáùúáùëéùëé,ùëéùëé on the mean of the latent variable ( ùúáùúáùêøùêøùëéùëé) using  the parameters {ùúÅùúÅ0,ùúÅùúÅ1ùëéùëé} (see equation (15)) ; the ùúáùúáùëéùëéùëéùëé,ùëéùëéùëéùëé= ùúÅùúÅ0+ùúÅùúÅ1ùëéùëéùëéùëéùúáùúáùêøùêøùëéùëéùëéùëé shows the  dependency of the mean parameter  ùúáùúáùëéùëéùëéùëé,ùëéùëéùëéùëé on the mean of the latent variable ( ùúáùúáùêøùêøùëéùëéùëéùëé) using  the parameters  {ùúÅùúÅ0,ùúÅùúÅ1ùëéùëéùëéùëé}. The ùúáùúáùëéùëé,ùë£ùë£=ùúâùúâ0+ùúâùúâ1ùëéùëéùúáùúáùêøùêøùëéùëé+ùúâùúâ2ùëéùëé,ùë£ùë£ùúáùúáùêøùêøùëéùëé.ùëÅùëÅùëÖùëÖ shows the dependency  of the mean parameter ùúáùúáùëéùëé,ùë£ùë£ on the mean of the latent variable s (ùúáùúáùêøùêøùëéùëé ùëéùëéùëéùëéùëëùëë  ùúáùúáùêøùêøùëéùëé.ùëÅùëÅùëÖùëÖ) using  the parameters {ùúâùúâ0,ùúâùúâ1ùëéùëé,ùúâùúâ2ùëéùëé,ùë£ùë£}. Similarly other parameters  {ùúâùúâ1ùëéùëéùëéùëé,ùúâùúâ2ùëéùëé,ùëöùëö,ùúâùúâ2ùëéùëéùëéùëé,ùë£ùë£,ùúâùúâ2ùëéùëéùëéùëé,ùëöùëö} can  be interpreted.     7. Define the effect size between the two distinct -path AIs ùëëùëë1 and ùëëùëë3 as ùõøùõøùê∑ùê∑ùê∑ùê∑=ùúáùúáùëëùëë3‚àíùúáùúáùëëùëë1.  Similarly, define the effect size between the two shared -path AIs ùëëùëë3 and ùëëùëë4 as ùõøùõøùëÜùëÜùê∑ùê∑= ùúáùúáùëëùëë3‚àíùúáùúáùëëùëë4.    8. Fix the value ùëÅùëÅ for power c urve, otherwise calculate the required minimum value of ùëÅùëÅ.    9. Generate ùëÅùëÅùëéùëé=ùëéùëéùëíùëíùëñùëñùëôùëôùëñùëñùëéùëéùë¢ùë¢ (ùëÅùëÅ/2) random draws from ùëÅùëÅ(ùúáùúáùêøùêøùëéùëé,ùúéùúéùêøùêø2) and generate ùëÅùëÅùëéùëéùëéùëé= ùëÅùëÅ‚àíùëÅùëÅùëéùëé random draws from ùëÅùëÅ(ùúáùúáùêøùêøùëéùëéùëéùëé,ùúéùúéùêøùêø2).    10. Finally generate ùëÅùëÅùëáùëá1,ùëáùëá2 number of primary outcomes ùëåùëå from ùëÅùëÅ(ùúáùúáùëáùëá1,ùëáùëá2,ùúéùúé2), where   71    ùúáùúáùëáùëá1,ùëáùëá2= ‚éù‚éú‚éú‚éú‚éú‚éõùúÅùúÅ0+ùúÅùúÅ1ùëéùëéùúáùúáùêøùêøùëéùëéif ùëáùëá1=ùëáùëá2=ùëéùëé ùúâùúâ0+ùúâùúâ1ùëéùëéùúáùúáùêøùêøùëéùëé+ùúâùúâ2ùëéùëé,ùë£ùë£ùúáùúáùêøùêøùëéùëé.ùëÅùëÅùëÖùëÖif ùëáùëá1=ùëéùëé,ùëáùëá2=ùë£ùë£ ùúâùúâ0+ùúâùúâ1ùëéùëéùúáùúáùêøùêøùëéùëé+ùúâùúâ2ùëéùëé,ùëöùëöùúáùúáùêøùêøùëéùëé.ùëÅùëÅùëÖùëÖif ùëáùëá1=ùëéùëé,ùëáùëá2=ùëöùëö ùúÅùúÅ0+ùúÅùúÅ1ùëéùëéùëéùëéùúáùúáùêøùêøùëéùëéùëéùëéif ùëáùëá1=ùëáùëá2=ùëéùëéùëéùëé ùúâùúâ0+ùúâùúâ1ùëéùëéùëéùëéùúáùúáùêøùêøùëéùëéùëéùëé+ùúâùúâ2ùëéùëéùëéùëé,ùë£ùë£ùúáùúáùêøùêøùëéùëéùëéùëé.ùëÅùëÅùëÖùëÖif ùëáùëá1=ùëéùëéùëéùëé,ùëáùëá2=ùë£ùë£ ùúâùúâ0+ùúâùúâ1ùëéùëéùëéùëéùúáùúáùêøùêøùëéùëéùëéùëé+ùúâùúâ2ùëéùëéùëéùëé.ùëöùëöùúáùúáùêøùêøùëéùëéùëéùëé.ùëÅùëÅùëÖùëÖif ùëáùëá1=ùëéùëéùëéùëé,ùëáùëá2=ùëöùëö   and    ùëÅùëÅùëáùëá1,ùëáùëá2= ‚éù‚éú‚éú‚éõùëÅùëÅùëéùëéùõæùõæùëéùëé if ùëáùëá1=ùëáùëá2=ùëéùëé ùëÅùëÅùëéùëé(1‚àíùõæùõæùëéùëé)√ó1 2if ùëáùëá1=ùëéùëé,ùëáùëá2‚àà{ùë£ùë£,ùëöùëö} ùëÅùëÅùëéùëéùëéùëéùõæùõæùëéùëéùëéùëé if ùëáùëá1=ùëáùëá2=ùëéùëéùëéùëé ùëÅùëÅùëéùëéùëéùëé(1‚àíùõæùõæùëéùëéùëéùëé)√ó12if ùëáùëá1=ùëéùëéùëéùëé,ùëáùëá2‚àà{ùë£ùë£,ùëöùëö}.   If ùëÅùëÅùëáùëá1,ùëáùëá2 contains a decimal pa rt, then ùëÅùëÅùëáùëá1,ùëáùëá2=ùëéùëéùëíùëíùëñùëñùëôùëôùëñùëñùëéùëéùë¢ùë¢ (ùëÅùëÅùëáùëá1,ùëáùëá2).        72   Appendix Table 1: Parameter values for data generation corresponding to power  curve and simulation studies.  Parameter  Power Curve  Non-inferiority  Equivalence       Control of Type -I error rate   Distinct path  Shared path  Distinct path  Shared path  Distinct path  Shared path   ùúÉùúÉ 2 {3.0, 2.5}  {3.0, 2.5}  2 2 2 2  ùúéùúé 2 3 3 4 4 4 4  ùõºùõº 0.05 0.05 0.05 0.05 0.05 0.05 0.05  ùõΩùõΩ 0.20 0.20 0.20 0.20 0.20 0.20 0.20  ùõæùõæùëéùëé 0.3 0.30 0.50 {0.50,0.45,0.4 0,0.35,0.30} {0.50,0.45,0.4 0,0.35,0.30} 0.45 0.45  ùõæùõæùëéùëéùëéùëé 0.4 {0.50,0.45,0.4 0,0.35,0.30} {0.50,0.45,0.4 0,0.35,0.30} {0.50,0.45,0.4 0,0.35,0.30} {0.50,0.45,0.4 0,0.35,0.30} 0.45 0.45  ùúáùúáùêøùêøùëéùëé 2 2 2 2 2 2 2  ùúéùúéùêøùêø 0.2 0.2 0.2 0.2 0.2 0.2 0.2  ùúÅùúÅ0 0.02 0.02 0.02 0.02 0.02 0.02 0.02  ùúÅùúÅ1ùëéùëé 0.5 0.8 0.8 0.5 0.5 0.5 0.5  ùúÅùúÅ1ùëéùëéùëéùëé 0.8 0.7 0.7 0.5 0.5 0.5 0.5  73   ùúâùúâ0 0.03 0.03 0.03 0.03 0.03 0.03 0.03  ùúâùúâ1ùëéùëé 0.25 0.5 0.5 0.25 0.25 0.25 0.25  ùúâùúâ2ùëéùëé,ùëöùëö 1.3 1.3 1.3 1 1 -1.01 -1.01  ùúâùúâ2ùëéùëé,ùë£ùë£ 1.3 {0.01, -0.20}  0.3 1 1 1 1  ùúâùúâ1ùëéùëéùëéùëé 0.5 0.4 0.4 0.25 0.25 0.25 0.25  ùúâùúâ2ùëéùëéùëéùëé,ùëöùëö 0.8 0.8 {-0.38, -0.53}  1 0.94 0.95 0.95  ùúâùúâ2ùëéùëéùëéùëé,ùë£ùë£ {3.4,3.2,3.0,2 .8,2.6,2.4,2.2, 2.0,1.8,1.5,1.3,1.0,0.8,0.6,0.4,0.2,0,-0.2,-0.4,-0.6,- 0.8,-2.0,-2.2,- 2.4,-2.6} 0.8 0.8 0.95 0.95 1 -1         74     A.7 Simulated Data Analysis     Here, we demonstrate how the developed methodologies can be applied in practice. In Appendix  Table 2, we have four different data sets, indexed 1 through 4. The first data set is generated to answer the primary research question of whether the new adaptive  intervention (investigational  AI) is non- inferior to the standard adaptive intervention (control AI) with a non- inferiority margin  Œ∏ = 2.5. Here, the comparison is for two distinct -path AIs and we have  H 0: New AI is inferior to  standard AI, vs. H 1: New AI  is non- inferior to standard AI.   Based on the prior data, we estimated the standardized effect size to be 0.23. Therefore, the estimated required sample size (N) from Table 2 is 234. Based on the simulated data set 1, the estimated mean outcomes for new and standard AIs are 0.94 and 2.27 respectively (using equation (2)). The variances of the two AIs can be estimated using equation (7). Using the test statistic for comparison of distinct -path AIs, the estimated p -value for the non- inferiority  test is 0.0103. Based  on the p- value, we reject the null hypothesis and conclude that the efficacy of the new AI is non- inferior to the standard AI with respect to the non -inferiority margin Œ∏  = 2.5.   To overcome the over -dependence  on the p- value in the hypothesis tes ting, we have also reported  the estimated upper bound of the Bayes Factor, defined as  1 ‚àí ùëíùëí ùëùùëùlog(ùëùùëù), where ùëùùëù denotes the p - value (Benjamin and Berger , 2016; Bayarri  et al., 2016) .   For the non- inferiority test based on the data set 1, the estimated upper bound of the Bayes Factor  is 7.81. In other words, the data set 1  implies an  odds in favor of the alternative hypothesis (non- inferiority) relative to the null hypothesis (inferiorit y) of at most 7.81 to 1 (Benjamin and Berger ,  2016) .  The analysis results for other simulated data sets  can be interpreted as above. Note that, for the  equivalence  test, we need to look at the p- values and upper bounds of the Bayes Factors for both  75   non-inferiority and non- superiority tests to make a decision about the rejection of the null   hypothesis. The R -program for this data analysis is available in Open Science Framework  (https://osf.io/hwae3/ ).     Appendix Table 2:  Data analysis report from four different simulated data sets    Data Set:1  Data Set:2  Data Set:3  Data Set:4   Non-Inferiority (NI)   or Equivalence (EQ)  NI NI EQ EQ  Comparison of AIs:   Distinct (Di)/Shared (Sh) path  Di Sh Di Sh  N 234 502 277 237  Mean Outcome: Treatment AI  0.94 0.39 2.4 2.62  Mean Outcome: Standard/Control  AI 2.27 2.13 2.35 2.32  p-value: Non- Inferiority Test  0.0103 0.01819 0.00243 0.00125   Upper bound of the Bayes Factor:  Non-Inferiority Test  7.81 5.05 25.15 44.03  p-value: Non -superiority Test  - - 0.00358 0.01262  Upper bound of the Bayes Factor:   Non-superiority Test  - - 18.24 6.67  Decision  Reject the  null  hypothesis  Reject the  null  hypothesis  Reject the  null  hypothesis  Reject the  null  hypothesis     ",stat.AP,Arxiv
9,Why AI is Harder Than We Think,Melanie Mitchell,2021-04-26 20:39:18+00:00,http://arxiv.org/pdf/2104.12871v2,"Since its beginning in the 1950s, the field of artificial intelligence has cycled several times between periods of optimistic predictions and massive investment (""AI spring"") and periods of disappointment, loss of confidence, and reduced funding (""AI winter""). Even with today's seemingly fast pace of AI breakthroughs, the development of long-promised technologies such as self-driving cars, housekeeping robots, and conversational companions has turned out to be much harder than many people expected. One reason for these repeating cycles is our limited understanding of the nature and complexity of intelligence itself. In this paper I describe four fallacies in common assumptions made by AI researchers, which can lead to overconfident predictions about the field. I conclude by discussing the open questions spurred by these fallacies, including the age-old challenge of imbuing machines with humanlike common sense.","arXiv:2104.12871v2  [cs.AI]  28 Apr 2021Why AI is Harder Than We Think Melanie Mitchell Santa Fe Institute Santa Fe, NM, USA mm@santafe.edu Abstract Since its beginning in the 1950s, the Ô¨Åeld of artiÔ¨Åcial intelligence has cy cled several times between periods of optimistic predictions and massive investment (‚ÄúAI spring‚Äù) and p eriods of disappointment, loss of conÔ¨Å- dence, and reduced funding (‚ÄúAI winter‚Äù). Even with today‚Äôs seem ingly fast pace of AI breakthroughs, the development of long-promised technologies such as self-driving car s, housekeeping robots, and conversational companions has turned out to be much harder than many people exp ected. One reason for these repeating cycles is our limited understanding of the nature and complexity of int elligence itself. In this paper I describe four fallacies in common assumptions made by AI researchers, which can lead to overconÔ¨Ådent predictions about the Ô¨Åeld. I conclude by discussing the open questions spurre d by these fallacies, including the age-old challenge of imbuing machines with humanlike common sense. Introduction The year 2020 was supposed to herald the arrival of self-driving ca rs. Five years earlier, a headline in The Guardian predicted that ‚ÄúFrom 2020 you will become a permanent backseat d river‚Äù [1]. In 2016 Business Insiderassured us that ‚Äú10 million self-driving cars will be on the road by 2020 ‚Äù [2]. Tesla Motors CEO Elon Musk promised in 2019 that ‚ÄúA year from now, we‚Äôll have over a millio n cars with full self-driving, software...everything‚Äù [3]. And 2020 was the target announced by s everal automobile companies to bring self-driving cars to market [4, 5, 6]. Despite attempts to redeÔ¨Åne ‚Äúfull self-driving‚Äùinto existence [7], n one of these predictions hascome true. It‚Äôs worth quoting AI expert Drew McDermott on what can happen when over-optimism about AI systems‚Äîin particular, self-driving cars‚Äîturns out to be wrong: Perhapsexpectationsaretoohigh, and... thiswilleventuallyresultin disaster. [S]upposethatÔ¨Åve years from now [funding] collapses miserably as autonomous vehicles fail to roll. Every startup company fails. And there‚Äôs a big backlash so that you can‚Äôt get money for anything connected with AI. Everybody hurriedly changes the names of their research projects to something else. This condition [is] called the ‚ÄúAI Winter‚Äù [8]. What‚Äôs most notable is that McDermott‚Äôs warning is from 1984, when, like today, the Ô¨Åeld of AI was awash with conÔ¨Ådent optimism about the near future of machine inte lligence. McDermott was writing about a cyclical pattern in the Ô¨Åeld. New, apparent breakthrough s would lead AI practitioners to predict rapid progress, successful commercialization, and the near-ter m prospects of ‚Äútrue AI.‚Äù Governments and companies would get caught up in the enthusiasm, and would showert he Ô¨Åeld with researchand development funding. AI Spring would be in bloom. When progress stalled, the enth usiasm, funding, and jobs would dry up. AI Winter would arrive. Indeed, about Ô¨Åve years after McDerm ott‚Äôs warning, a new AI winter set in. In this chapter I explore the reasons for the repeating cycle of ov erconÔ¨Ådence followed by disappointment in expectations about AI. I argue that over-optimism among the pu blic, the media, and even experts can 1 arise from several fallacies in how we talk about AI and in our intuitions about the nature of intelligence. Understanding these fallacies and their subtle inÔ¨Çuences can point t o directions for creating more robust, trustworthy, and perhaps actually intelligent AI systems. Springs and Winters OverconÔ¨Ådent predictions about AI are as old as the Ô¨Åeld itself. In 1 958, for example, the New York Times reported on a demonstration by the US Navy of Frank Rosenblatt‚Äôs ‚Äúperceptron‚Äù (a rudimentary precursor to today‚Äôs deep neural networks): ‚ÄúThe Navy revealed the embry o of an electronic computer today that it expects will be able to walk, talk, see, write, reproduce itself, and b e conscious of its existence‚Äù [9]. This optimistic take was quickly followed by similar proclamations from AI pion eers, this time about the promise of logic-based‚Äúsymbolic‚Äù AI. In 1960Herbert Simon declared that, ‚ÄúMachines will be capable, within twenty years,ofdoinganyworkthat a mancando‚Äù[10]. The followingyear, Claude Shannonechoedthis prediction: ‚ÄúI conÔ¨Ådently expect that within a matter of10or 15years, somet hing will emergefrom the laboratorywhich is not too far from the robot of science Ô¨Åction fame‚Äù [11]. And a few y ears later Marvin Minsky forecast that, ‚ÄúWithin a generation...the problems of creating ‚ÄòartiÔ¨Åcial intelligence‚Äô w ill be substantially solved‚Äù [12]. TheoptimisticAISpringofthe1960sandearly1970s,reÔ¨Çectedinth esepredictions,soongavewaytotheÔ¨Årst AI winter. Minsky and Papert‚Äôs 1969 book Perceptrons [13] showed that the kinds of problems solvable by Rosenblatt‚Äôs perceptrons were very limited. In 1973 the Lighthill re port [14] in the UK and the Department of Defense‚Äôs ‚ÄúAmerican Study Group‚Äù report in the US, commissione d by their respective governments to assess prospects for AI in the near future, were both extremely negative about those prospects. This led to sharp funding decreases and a downturn in enthusiasm for AI in bot h countries. AI once again experienced an upturn in enthusiasm starting in the ea rly 1980s with several new initiatives: the rise of ‚Äúexpert systems‚Äù in industry [15], Japan‚Äôs huge investme nt in its ‚ÄúFifth Generation‚Äù project [16], which aimed for ambitious AI abilities as the core of a new generatio n of computing systems, the US‚Äôs responding ‚ÄúStrategic Computing Initiative‚Äù [17], which provided larg e funding for progress into general AI, as well as a new set of eÔ¨Äorts on neural networks [18, 19], which gen erated new hopes for the Ô¨Åeld. By the latter part of the 1980s, these optimistic hopes had all been dashed; again, none of these technologies had achieved the lofty promises that had been made. Expert syste ms, which rely on humans to create rules that capture expert knowledge of a particular domain, turned out to be brittle‚Äîthat is, often unable to generalize or adapt when faced with new situations. The problem was that the human experts writing the rules actually rely on subconscious knowledge‚Äîwhat we might call ‚Äúco mmon sense‚Äù‚Äîthat was not part of the system‚Äôs programming. The AI approaches pursued under the Fifth Generation project and Strategic Computing Initiative ran into similar problems of brittleness and lack of generality. The neural-network approaches of the 1980s and 1990s likewise worked well on relatively simple examples but lacked the ability to scale up to complex problems. Indeed, the late 1980‚Äôs marked the beginning of a new AI winter, and the Ô¨Åeld‚Äôs reputation suÔ¨Äered. When I received my PhD in 1990, I was adv ised not to use the term ‚ÄúartiÔ¨Åcial intelligence‚Äù on my job applications. At the 50th anniversary commemoration of the 1956 Dartmouth Su mmer Workshop that launched the Ô¨Åeld, AI pioneer John McCarthy, who had originally coined the term ‚ÄúArtiÔ¨Åc ial Intelligence,‚Äù explained the issue succinctly: ‚ÄúAI was harder than we thought‚Äù [20]. The 1990s and 2000s saw the meteoric rise of machine learning : the development of algorithms that create predictive models from data. These approaches were typically inspir ed by statistics rather than by neuro- science or psychology, and were aimed at performing speciÔ¨Åc tasks rather than capturing general intelligence. Machine-learningpractitionerswereoftenquick todiÔ¨Äerentiate th eirdiscipline fromthe then-discredited Ô¨Åeld of AI. However, around 2010, deep learning ‚Äîin which brain-inspired multilayered neural networks are trained fr om data‚Äîemerged from its backwater position and rose to superstar status in machine learning. Deep neural networks had been around since the 1970s, but only recently, due to huge datasets scraped from the Web, 2 fast parallel computing chips, and innovations in training methods, c ould these methods scale up to a large number of previously unsolved AI challenges. Deep neural network s are what power all of the major AI advances we‚Äôve seen in the past decade, including speech recognitio n, machine translation, chat bots, image recognition, game playing, and protein folding, among others. Suddenly the term ‚ÄúAI‚Äù started to appear everywhere, and ther e was all at once a new round of optimism about the prospects of what has been variously called ‚Äúgeneral,‚Äù ‚Äút rue,‚Äù or ‚Äúhuman-level‚Äù AI. In surveys of AI researchers carried out in 2016 and 2018, the me dian prediction of those surveyed gave a 50 percent chance that human-level AI would be created by 2040‚Äì 2060, though there was much variance of opinion, both for sooner and later estimates [21, 22]. Even some o f the most well-known AI experts and entrepreneurs are in accord. Stuart Russell, co-author of a widely used textbook on AI, predicts that ‚Äúsuperintelligent AI‚Äù will ‚Äúprobably happen in the lifetime of my children ‚Äù [23] and Sam Altman, CEO of the AI company OpenAI, predicts that within decades, compute r programs ‚Äúwill do almost everything, including making new scientiÔ¨Åc discoveries that will expand our concep t of ‚Äòeverything.‚Äô‚Äù [24] Shane Legg, co-founder of Google DeepMind, predicted in 2008 that, ‚ÄúHuman lev el AI will be passed in the mid-2020s‚Äù [25], and Facebook‚Äôs CEO, Mark Zuckerberg, declared in 2015 that ‚Äú One of [Facebook‚Äôs] goals for the next Ô¨Åve to 10 yearsis to basicallyget better than human level at all of th e primaryhuman senses: vision, hearing, language, general cognition‚Äù [26]. However, in spite of all the optimism, it didn‚Äôt take long for cracks to a ppear in deep learning‚Äôs fa¬∏ cade of intelligence. It turns out that, like all AI systems of the past, deep -learning systems can exhibit brittleness‚Äî unpredictable errors when facing situations that diÔ¨Äer from the tr aining data. This is because such systems are susceptible to shortcut learning [27, 28]: learning statistical associations in the training data that allo w the machine to produce correctanswersbut sometimes for the wr ong reasons. In other words, these machines don‚Äôt learn the concepts we are trying to teach them, but rather t hey learn shortcuts to correct answers on the training set‚Äîand such shortcuts will not lead to good generaliza tions. Indeed, deep learning systems often cannot learn the abstract concepts that would enable them to transfer what they have learned to new situations or tasks [29]. Moreover, such systems are vulnerable to attack from ‚Äúadversarial perturbations‚Äù [30]‚Äîspecially engineered changes to the input that are either imperc eptible or irrelevant to humans, but that induce the system to make errors. Despite extensive research on the limitations of deep neural netwo rks, the sources of their brittleness and vulnerability are still not completely understood. These networks, with their large number of parameters, are complicated systems whose decision-making mechanisms can be q uite opaque. However, it seems clear from their non-humanlike errors and vulnerability to adversarial pe rturbations that these systems are not actually understanding the data they process, at least not in the human sense of ‚Äúunders tand.‚Äù It‚Äôs still a matter of debate in the AI community whether such understandin g can be achieved by adding network layers and more training data, or whether something more fundame ntal is missing. At the time of this writing (mid-2021), several new deep-learning ap proaches are once again generating considerable optimism in the AI community. Some of the hottest new a reas are transformer architectures using self-supervised (or ‚Äúpredictive‚Äù) learning [31], meta-learnin g [32], and deep reinforcement learning [33]; each of these has been cited as progress towards more general, h uman-like AI. While these and other new innovations have shown preliminary promise, the AI cycle of springs a nd winters is likely to continue. The Ô¨Åeld continually advances in relatively narrow areas, but the path to ward human-level AI is less clear. In the next sections I will argue that predictions about the likely time line of human-level AI reÔ¨Çect our own biases and lack of understanding of the nature of intelligence. In pa rticular, I describe four fallacies in our thinking about AI that seem most central to me. While these fallacies are well-known in the AI community, many assumptions made by experts still fall victim to these fallacies, and give us a false sense of conÔ¨Ådence about the near-term prospects of ‚Äútruly‚Äù intelligent machines. 3 Fallacy 1: Narrow intelligence is on a continuum with genera l intelligence Advances on a speciÔ¨Åc AI task are often described as ‚Äúa Ô¨Årst step ‚Äù towards more general AI. The chess- playing computer Deep Blue was ‚Äúwas hailed as the Ô¨Årst step of an AI r evolution‚Äù [34]. IBM described its Watson system as ‚Äúa Ô¨Årst step into cognitive systems, a new era of computing‚Äù [35]. OpenAI‚Äôs GPT-3 language generator was called a ‚Äústep toward general intelligence‚Äù [36]. Indeed, if people see a machine do something amazing, albeit in a narro w area, they often assume the Ô¨Åeld is that much further along toward general AI. The philosopher Hub ert Dreyfus (using a term coined by Yehoshua Bar-Hillel) called this a ‚ÄúÔ¨Årst-step fallacy.‚Äù As Dreyfus cha racterized it, ‚ÄúThe Ô¨Årst-step fallacy is the claim that, ever since our Ô¨Årst work on computer intelligence we h ave been inching along a continuum at the end of which is AI so that any improvement in our programs no mat ter how trivial counts as progress.‚Äù Dreyfus quotes an analogy made by his brother, the engineer Stua rt Dreyfus: ‚ÄúIt was like claiming that the Ô¨Årst monkey that climbed a tree was making progress towards landin g on the moon‚Äù [37]. Like many AI experts before and after him, Dreyfus noted that th e ‚Äúunexpected obstacle‚Äù in the assumed continuum of AI progress has always been the problem of common sense . I will say more about this barrier of common sense in the last section. Fallacy 2: Easy things are easy and hard things are hard While John McCarthylamented that ‚ÄúAI washarderthan wethought ,‚Äù MarvinMinsky explainedthat this is because ‚Äúeasy things are hard‚Äù [38]. That is, the things that we hum ans do without much thought‚Äîlooking out in the world and making sense of what we see, carrying on a conve rsation, walking down a crowded sidewalk without bumping into anyone‚Äîturn out to be the hardest ch allenges for machines. Conversely, it‚Äôs often easier to get machines to do things that are very hard for humans; for example, solving complex mathematical problems, mastering games like chess and Go, and tra nslating sentences between hundreds of languages have all turned out to be relatively easier for machines . This is a form of what‚Äôs been called ‚ÄúMoravec‚Äôs paradox,‚Äù named after roboticist Hans Moravec, who w rote, ‚ÄúIt is comparatively easy to make computers exhibit adult level performanceon intelligence tests or p layingcheckers, and diÔ¨Écult orimpossible to give them the skills of a one-year-old when it comes to perception a nd mobility‚Äù [39]. This fallacy has inÔ¨Çuenced thinking about AI since the dawn of the Ô¨Åeld . AI pioneer Herbert Simon pro- claimed that ‚ÄúEverything of interest in cognition happens above the 100-millisecond level‚Äîthe time it takes you to recognize your mother‚Äù [40]. Simon is saying that, to underst and cognition, we don‚Äôt have to worry about unconscious perceptual processes. This assumption is reÔ¨Ç ected in most of the symbolic AI tradition, which focuses on the process of reasoning about input that has alr eady been perceived. In the last decades, symbolic AI approaches have lost favor in the r esearch community, which has largely been dominated by deep learning, which does address perception. H owever, the assumptions underlying this fallacy still appear in recent claims about AI. For example, in a 201 6 article, deep-learning pioneer Andrew Ng was quoted echoing Simon‚Äôs assumptions, vastly underes timating the complexity of unconscious perception and thought: ‚ÄúIf a typical person can do a mental tas k with less than one second of thought, we can probably automate it using AI either now or in the near future‚Äù [4 1]. More subtly, researchers at Google DeepMind, in talking about Alpha Go‚Äôs triumph, described the game of Go as one of ‚Äúthe most challenging of domains‚Äù [42]. Challenging for who m? For humans, perhaps, but as psychologist Gary Marcus pointed out, there are domains, including games, that, while easy for humans, are much more challenging than Go for AI systems. One example is cha rades, which ‚Äúrequires acting skills, linguistic skills, and theory of mind‚Äù [43], abilities that are far beyond an ything AI can accomplish today. AI is harder than we think, because we are largely unconscious of th e complexity of our own thought processes. Hans Moravec explains his paradox this way: ‚ÄúEncoded in the large, highly evolved sensory and motor portions of the human brain is a billion years of experience a bout the nature of the world and how to survive in it. The deliberate process we call reasoning is, I belie ve, the thinnest veneer of human 4 thought, eÔ¨Äective only because it is supported by this much older an d much more powerful, though usually unconscious, sensorimotor knowledge. We are all prodigious Olympia ns in perceptual and motor areas, so good that we make the diÔ¨Écult look easy‚Äù [44]. Or more succinctly, Mar vin Minsky notes, ‚ÄúIn general, we‚Äôre least aware of what our minds do best‚Äù [45]. Fallacy 3: The lure of wishful mnemonics The term ‚Äúwishful mnemonic‚Äù was coined in a 1976 critique of AI by com puter scientist Drew McDermott: A major source of simple-mindedness in AI programs is the use of mne monics like ‚ÄúUNDER- STAND‚Äù or ‚ÄúGOAL‚Äù to refer to programs and data structures. ...If a researcher...calls the main loop of his program ‚ÄúUNDERSTAND,‚Äù he is (until proven innocent) mer ely begging the ques- tion. He may mislead a lot of people, most prominently himself. ...What he s hould do instead is refer to this main loop as ‚ÄúG0034,‚Äù and see if he can convince himself or anyone else that G0034 implements some part of understanding. ...Many instructive examples of wishful mnemonics by AI researchers come to mind once you see the point [46]. Now, many decades later, work on AI is replete with such wishful mne monics‚Äîterms associated with human intelligence that are used to describe the behavior and evaluation of AI programs. Neuralnetworks are loosely inspired by the brain, but with vast diÔ¨Äerences. Machine learning or deeplearning methods do not really resemble learning in humans (or in non-human animals). Indeed, if a machine has learned something in the human sense of learn, we would expect that it would be able use what it has learned in diÔ¨Äeren t contexts. However, it turns out that this is often not the case. I n machine learning there is an entire subÔ¨Åeld calledtransfer learning that focuses on the still-open problem of how to enable machines to t ransfer what they have learned to new situations, an ability that is fundamental t o human learning. Indeed, the way we talk about machine abilities inÔ¨Çuences our concep tions of how general those abilities really are. Unintentionally providing real-world illustrations of McDerm ott‚Äôs warning, one of IBM‚Äôs top executives proclaimed that ‚ÄúWatson can readall of the health-care texts in the world in seconds‚Äù [47] and IBM‚Äôs website claims that its Watson program ‚Äú understands context and nuance in seven languages‚Äù [48]. DeepMind co-founder Demis Hassabis tells us that ‚ÄúAlphaGo‚Äôs goalis to beat the best human players not just mimic them‚Äù [49]. And AlphaGo‚Äôs lead research David Silver describ ed one of the program‚Äôs matches thus: ‚ÄúWe can always ask AlphaGo how well it thinksit‚Äôs doing during the game. ...It was only towards the end of the game that AlphaGo thought it would win ‚Äù [50]. (Emphasis is mine in the quotations above.) One could argue that such anthropomorphic terms are simply short hand: IBM scientists know that Watson doesn‚Äôt read or understand in the way humans do; DeepMind scientis ts know that AlphaGo has no goals or thoughts in the way humans do, and no human-like conceptions of a ‚Äú game‚Äù or of ‚Äúwinning.‚Äù However, such shorthand can be misleading to the public trying to understand thes e results (and to the media reporting on them), and can also unconsciously shape the way even AI experts t hink about their systems and how closely these systems resemble human intelligence. McDermott‚Äôs ‚Äúwishful mnemonics‚Äù referred to terms we use to des cribe AI programs, but the research community also uses wishful mnemonics in naming AI evaluation benchm arks after the skills we hope they test. For example, here are some of the most widely cited current b enchmarks in the subarea of AI called ‚Äúnatural-languageprocessing‚Äù(NLP): the ‚ÄúStanfordQuestion A nsweringDataset‚Äù [51], the ‚ÄúRACE Reading Comprehension Dataset‚Äù [52], and the ‚ÄúGeneral Language Unders tanding Evaluation‚Äù [53]. In all of these benchmarks, the performanceofthe best machines hasalreadye xceeded that measuredfor humans(typically Amazon Mechanical Turk workers). This has led to headlines such as ‚ÄúNew AI model exceeds human performance at question Answering‚Äù [54]; ‚ÄúComputers are gettin g better than humans at reading‚Äù [55]; and ‚ÄúMicrosoft‚Äôs AI model has outperformed humans in natural-langua ge understanding‚Äù [56]. Given the names of these benchmark evaluations, it‚Äôs not surprising that people wou ld draw such conclusions. The problem is, these benchmarks don‚Äôt actually measure general abilities for ques tion-answering, reading comprehension, or natural-languageunderstanding. The benchmarks test only very limited versionsof these abilities; moreover, 5 many of these benchmarks allow machines to learn shortcuts, as I d escribed above‚Äîstatistical correlations that machines can exploit to achieve high performance on the test w ithout learning the actual skill being tested [57, 58]. While machines can outperform humans on these par ticular benchmarks, AI systems are still far from matching the more general human abilities we associate with the benchmarks‚Äô names. Fallacy 4: Intelligence is all in the brain The idea that intelligence is something that can be separated from th e body, whether as a non-physical substance or as wholly encapsulated in the brain, has a long history in philosophy and cognitive science. The so-called ‚Äúinformation-processing model of mind‚Äù arose in psyc hology in the mid-twentieth century. This model views the mind as a kind of computer, which inputs, stores , processes, and outputs information. The body does not play much of a role except in the input (perception ) and output (behavior) stages. Under this view, cognition takes place wholly in the brain, and is, in theory, se parable from the rest of the body. An extreme corollary of this view is that, in the future, we will be able t o ‚Äúupload‚Äù our brains‚Äîand thus our cognition and consciousness‚Äîto computers [59]. The assumption that intelligence can in principle be ‚Äúdisembodied‚Äù is implic it in almost all work on AI throughout its history. One of the most inÔ¨Çuential ideas in early AI r esearch was Newell and Simon‚Äôs ‚ÄúPhys- ical Symbol System Hypothesis‚Äù (PSSH), which stated: ‚ÄúA physica l symbol system has the necessary and suÔ¨Écient means for general intelligent action‚Äù [60]. The term ‚Äúphysic al symbol system‚Äù refers to something much like a digital computer. The PSSH posits that general intelligenc e can be achieved in digital computers without incorporating any non-symbolic processes of brain or body . (For an insightful discussion of symbolic versus subsymbolic processes, see Hofstadter‚Äôs ‚ÄúWaking up from the Boolean Dream‚Äù [61].) Newell and Simon‚Äôs PSSH was a founding principle of the symbolic approa ch to AI, which dominated the Ô¨Åeld until the rise of statistical and neurally inspired machine learning in the 1990s and 2000s. However, these latter non-symbolic approaches also did not view the body as r elevant to intelligence. Instead, neu- rally inspired approaches from 1980s connectionism to today‚Äôs deep neural networks generally assume that intelligence arises solely from brain structures and dynamics. Today ‚Äôs deep neural networks are akin to the proverbial brain-in-a-vat: passively taking in data from the world a nd outputting instructions for behavior without actively interacting in the world with any kind of body. Of cour se, robots and autonomous vehicles are diÔ¨Äerent in that they have a physical presence in the world, but to date the kinds of physical interactions they have, and the feedback to their ‚Äúintelligence‚Äù is quite limited. The assumption that intelligence is all in the brain has led to speculation that, to achieve human-level AI, we simply need to scale up machines to match the brain‚Äôs ‚Äúcomputin g capacity‚Äù and then develop the appropriate ‚Äúsoftware‚Äù for this brain-matching ‚Äúhardware. For example, one philosopher wrote a report on the literature that concluded, ‚ÄúI think it more likely than not that 1015FLOP/s is enough to perform tasks as well as the human brain (given the right software, which may be ve ry hard to create)‚Äù [62]. No body needed! Top AI researchers have echoed the idea that scaling up hardware to match the brain will enable human- level artiÔ¨Åcial intelligence. For example, deep-learning pioneer GeoÔ¨Ä rey Hinton predicted, ‚ÄúTo understand [documents] at a human level, we‚Äôre probably going to need human-lev el resources and we have trillions of connections [in our brains]. ...But the biggest networks we have built so far only have billions of connections. So we‚Äôre a few orders of magnitude oÔ¨Ä, but I‚Äôm sure the hardware pe ople will Ô¨Åx that‚Äù [63]. Others have predicted that the ‚Äúhardware Ô¨Åx‚Äù‚Äîthe speed and memory capacit y to Ô¨Ånally enable human-level AI‚Äîwill come in the form of quantum computers [64]. However, a growing cadre of researchers is questioning the basis o f the ‚Äúall in the brain‚Äù information- processing model for understanding intelligence and for creating A I. Writing about what he calls ‚ÄúThe cul de sacofthecomputationalmetaphor,‚ÄùcomputerscientistRodBroo ksargues,‚ÄúThereasonforwhywegotstuck in this cul-de-sac for so long was because Moore‚Äôs law just kept feed ing us, and we kept thinking, ‚ÄòOh, we‚Äôre making progress,we‚Äôre makingprogress, we‚Äôremaking progress.‚Äô B ut maybe we haven‚Äôtbeen‚Äù [65]. In fact, a 6 number ofcognitive scientists haveargued for decades for the ce ntrality of the body in all cognitiveactivities. One prominent proponent of these ideas, the psychologist Mark Jo hnson, writes of a research program on embodied cognition , gaining steam in the mid-1970s, that ‚Äúbegan to provide converging evidence for the central role of our brains and bodies in everything we experience, t hink, and do‚Äù [66]. Psychologist Rebecca Fincher-Kiefer characterizes the embodied cognition paradigm this way: ‚ÄúEmbodied cognition means that the representation of conceptual knowledge is dependent on the body: it is multimodal..., not amodal, symbolic, or abstract. This theory suggests that our thoughts a re grounded, or inextricably associated with, perception, action, and emotion, and that our brain and body work together to have cognition‚Äù [67]. The evidence for embodied cognition comes from a diverse set of disc iplines. Research in neuroscience suggests, for example, that the neural structures controlling c ognition are richly linked to those controlling sensory and motor systems, and that abstract thinking exploits b ody-based neural ‚Äúmaps‚Äù [68]. As neurosci- entist Don Tucker noted, ‚ÄúThere are no brain parts for disembodie d cognition‚Äù [69]. Results from cognitive psychology and linguistics indicate that many, if not all, of our abstra ct concepts are grounded in physical, body-based internal models [70], revealed in part by the systems of physically based metaphors found in everyday language [71]. Several other disciplines, such as developmental psychology, add to evidence for embodied cognition. How- ever, research in AI has mostly ignored these results, though the re is a small group of researchers exploring these ideasin subareasknownas ‚Äúembodied AI,‚Äù‚Äúdevelopmentalro botics,‚Äù ‚Äúgroundedlanguageunderstand- ing,‚Äù among others. Related to the theory of embodied cognition is the idea that the emot ions and the ‚Äúirrational‚Äù biases that go along with our deeply social lives‚Äîtypically thought of as separate from intelligence, or as getting in the way of rationality‚Äîare actually key to what makes intelligence possible . AI is often thought of as aiming at a kind of ‚Äúpure intelligence,‚Äù one that is independent of emotions, irra tionality, and constraints of the body such as the need to eat and sleep. This assumption of the possibility o f a purely rational intelligence can lead to lurid predictions about the risks we will face from future ‚Äúsup erintelligent‚Äù machines. For example, the philosopher Nick Bostrom asserts that a system‚Äôs intelligence and its goals are orthogonal; he argues that ‚Äúany level of intelligence could be combined with any Ô¨Ån al goal‚Äù [72]. As an example, Bostrom imagines a hypothetical superintelligent AI system whose s ole objective is to produce paperclips; this imaginary system‚Äôs superintelligence enables the invention of inge nious ways to produce paperclips, and uses up all of the Earth‚Äôs resources in doing so. AI researcher Stuart Russell concurs with Bostrom on the ortho gonality of intelligence and goals. ‚ÄúIt is easy to imagine that a general-purpose intelligent system could be given mo re or less any objective to pursue, including maximizing the number of paper clips or the number of known d igits of pi‚Äù [73]. Russell worries about the possible outcomes of employing such a superintelligence to solve humanity‚Äôs problems: ‚ÄúWhat if a superintelligent climate control system, given the job of restor ing carbon dioxide concentrations to preindustrial levels, believes the solution is to reduce the human pop ulation to zero?...If we insert the wrong objective into the machine and it is more intelligent than us, we lose‚Äù [7 4]. The thought experiments proposed by Bostrom and Russell seem t o assume that an AI system could be ‚Äúsuperintelligent‚Äù without any basic humanlike common sense, yet wh ile seamlessly preserving the speed, precision and programmability of a computer. But these speculation s about superhuman AI are plagued by Ô¨Çawed intuitions about the nature of intelligence. Nothing in our know ledge of psychology or neuroscience supports the possibility that ‚Äúpure rationality‚Äù is separable from th e emotions and cultural biases that shape our cognition and our objectives. Instead, what we‚Äôve learned fro m research in embodied cognition is that human intelligence seems to be a strongly integrated system with clos ely interconnected attributes, including emotions, desires, a strong sense of selfhood and autonomy, and a commonsense understanding of the world. It‚Äôs not at all clear that these attributes can be separated. 7 Conclusions The four fallacies I have described reveal Ô¨Çaws in our conceptualiza tions of the current state of AI and our limited intuitions about the nature of intelligence. I have argued that these fallacies are at least in part why capturing humanlike intelligence in machines always turns out to be har der than we think. These fallacies raise several questions for AI researchers. How c an we assessactual progresstoward‚Äúgeneral‚Äù or ‚Äúhuman-level‚Äù AI? How can we assess the diÔ¨Éculty of a particular domain for AI as compared with humans? How should we describe the actual abilities of AI systems wit hout fooling ourselves and others with wishful mnemonics? To what extent can the variousdimensions o f human cognition(including cognitive biases, emotions, objectives, and embodiment) be disentangled? H ow can we improve our intuitions about what intelligence is? These questions remain open. It‚Äôs clear that to make and assess pr ogress in AI more eÔ¨Äectively, we will need to develop a better vocabulary for talking about what machines can do. And more generally, we will need a better scientiÔ¨Åc understanding of intelligence as it manifests in diÔ¨Äer ent systems in nature. This will require AI researchers to engage more deeply with other scientiÔ¨Åc discipline s that study intelligence. Thenotionof common sense isoneaspectofintelligencethathasrecentlybeendrivingcollaborat ionsbetween AI researchersand cognitivescientistsfrom severalotherdiscip lines, particularlycognitivedevelopment(e.g., see [75]). There havebeen many attempts in the history ofAI to give humanlike common sense to machines1, ranging from the logic-based approaches of John McCarthy [76] an d Douglas Lenat [77] to today‚Äôs deep- learning-based approaches (e.g., [78]). ‚ÄúCommon sense‚Äù is what AI r esearcher Oren Etzioni called ‚Äúthe dark matter of artiÔ¨Åcial intelligence,‚Äù noting ‚ÄúIt‚Äôs a little bit ineÔ¨Äable, but yo u see its eÔ¨Äects on everything‚Äù [79]. The term has become a kind of umbrella for what‚Äôs missing from today‚Äôs state-of-the-art AI systems [80, 81]. While commonsense includes the vast amount ofknowledgewe humans haveabout the world, it alsorequires being able to use that knowledge to recognize and make predictions a bout the situations we encounter, and to guide our actions in those situations. Giving machines common sens e will require imbuing them with the very basic ‚Äúcore,‚Äù perhaps innate, knowledge that human infants p ossess about space, time, causality, and the nature ofinanimate objectsand otherliving agents[82], the abilit y toabstractfrom particularstogeneral concepts, and to make analogies from prior experience. No one yet knows how to capture such knowledge or abilities in machines. This is the current frontier of AI research, a nd one encouraging way forward is to tap into what‚Äôs known about the development of these abilities in youn g children. Interestingly, this was the approach recommended by Alan Turing in his 1950 paper that intr oduced the Turing test. Turing asks, ‚ÄúInstead of trying to produce a programme to simulate the adult min d, why not rather try to produce one which simulates the child‚Äôs?‚Äù [83] In 1892, the psychologist William James said of psychology at the time, ‚ÄúThis is no science; it is only the hope of a science‚Äù [84]. This is a perfect characterization of today ‚Äôs AI. Indeed, several researchers have made analogies between AI and the medieval practice of alchemy. In 1977, AI researcher Terry Winograd wrote, ‚ÄúIn some ways [AI] is akin to medieval alchemy. We are at the s tage of pouring together diÔ¨Äerent combinations of substances and seeing what happens, not yet hav ing developed satisfactory theories...but...it was the practical experience and curiosity of the alchemists which p rovided the wealth of data from which a scientiÔ¨Åc theory ofchemistry could be developed‚Äù[85]. Four decad es later, EricHorvitz, director ofMicrosoft Research, concurred: ‚ÄúRight now, what we are doing is not a scienc e but a kind of alchemy‚Äù [86]. In order to understand the nature of true progress in AI, and in particular , why it is harder than we think, we need to move from alchemy to developing a scientiÔ¨Åc understanding of inte lligence. 1Some have questioned why we need machines to have humanlike cognition, but if we want machines to work with us in our human world, we will need them to have the same basic knowledg e about the world that is the foundation of our own thinking. 8 Acknowledgments This material is based upon work supported by the National Science Foundation under Grant No. 2020103. Anyopinions, Ô¨Åndings, andconclusionsorrecommendationsexpres sedin thismaterialarethoseoftheauthor and do not necessarily reÔ¨Çect the views of the National Science Fou ndation. This work was also supported by the Santa Fe Institute. I am grateful to Philip Ball, Rodney Brook s, Daniel Dennett, Stephanie Forrest, DouglasHofstadter, TylerMillhouse, and JacobSpringer forcomme nts on anearlierdraft ofthis manuscript. References [1] T. Adams. Self-driving cars: From 2020 you will become a permane nt backseat driver. The Guardian , 2015. URL https://tinyurl.com/zepc5spz . [2] 10 million self-driving cars will be on the road by 2020. Business Insider Intelligence , 2020. URL https://tinyurl.com/9mr6x8zk . [3] A. J. Hawkins. Here are Elon Musk‚Äôs wildest predictions about Tesla ‚Äôs self-driving cars. The Verge , 2019. URL https://tinyurl.com/4ap2rm2n . [4] R. McCormick. NVIDIA is working with Audi to get you a self-driving car by 2020. The Verge , 2017. URLhttps://tinyurl.com/3epbpaz3 . [5] Y. Kageyama. CEO: Nissan will be ready with autonomous driving by 2020.Phys.Org , 2015. URL https://phys.org/news/2015-05-ceo-nissan-ready-auto nomous.html . [6] S. Eagell. https://tinyurl.com/psxwhhnb , 2020. [7] R. Baldwin. Tesla tells California DMV that FSD is not capable of auton omous driving. Car and Driver, 2021. URL https://tinyurl.com/p8aw9jke . [8] McDermott D., M. M. Waldrop, B. Chandrasekaran, J. McDermot t, and R. Schank. The dark ages of AI: A panel discussion at AAAI-84. AI Magazine , 6(3):122‚Äì134, 1985. [9] New Navy Device Learns by Doing. New York Times , 1958. URL https://tinyurl.com/yjh3eae8 . [10] H. A. Simon. The Ford Distinguished Lectures, Volume 3: The New Science o f Management Decision . Harper and Brothers, p. 38, 1960. [11] The Shannon Centennial: 1100100 years of bits. https://www.youtube.com/watch?v=pHSRHi17RKM , 1961. [12] M. L. Minsky. Computation: Finite and InÔ¨Ånite Machines . Prentice-Hall, p. 2, 1967. [13] M. L. Minsky and S. A Papert. Perceptrons: An Introduction to Computational Geometry . MIT press, 1969. [14] J. Lighthill. ArtiÔ¨Åcial intelligence: A general survey. In ArtiÔ¨Åcial Intelligence: A Paper Symposium . Science Research Council, 1973. [15] J. Durkin. Expert systems: A view of the Ô¨Åeld. IEEE Annals of the History of Computing , 11(02): 56‚Äì63, 1996. [16] B. R. Gaines. Perspectives on Fifth Generation computing. Oxford Surveys in Information Technology , 1:1‚Äì53, 1984. [17] M. SteÔ¨Åk. Strategic computing at DARPA: Overview and assess ment.Communications of the ACM , 28(7):690‚Äì704, 1985. 9 [18] J. L. McClelland, D. E. Rumelhart, and the PDP Research Group. Parallel Distributed Processing, Vol.1: Foundations . MIT press Cambridge, MA, 1986. [19] J. L. McClelland, D. E. Rumelhart, and the PDP Research Group. Parallel Distributed Processing, Vol.2: Psychological and Biological Models . MIT press Cambridge, MA, 1986. [20] C. Moewes and A. N¬® urnberger. Computational Intelligence in Intelligent Data Analysis . Springer, p. 135, 2013. [21] V. C. M¬® uller and N. Bostrom. Future progress in artiÔ¨Åcial intellig ence: A survey of expert opinion. In V. C. M¬® uller, editor, Fundamental Issues of ArtiÔ¨Åcial Intelligence , pages 555‚Äì572. Springer, 2016. [22] K. Grace, J. Salvatier, A. Dafoe, B. Zhang, and O. Evans. Whe n will AI exceed human performance? Evidence from AI experts. Journal of ArtiÔ¨Åcial Intelligence Research , 62:729‚Äì754, 2018. [23] S. Russell. Human Compatible: ArtiÔ¨Åcial Intelligence and the Problem o f Control . Penguin, p. 77, 2019. [24]https://moores.samaltman.com , 2021. [25] J. Despres. Scenario: Shane Legg. Future, 2008. URL https://tinyurl.com/hwzna364 . [26] H. McCracken. Inside Mark Zuckerberg‚Äôs bold plan for the futu re of Facebook. Fast Company , 2015. URLwww.fastcompany.com/3052885/mark-zuckerberg-faceboo k. [27] R. Geirhos, J.-H. Jacobsen, C. Michaelis, R. Zemel, W. Brendel, M . Bethge, and F. A. Wichmann. Shortcut learning in deep neural networks. Nature Machine Intelligence , 2(11):665‚Äì673, 2020. [28] S. Lapuschkin, S. W¬® aldchen, A. Binder, G. Montavon, W. Same k, and K.-R. M¬® uller. Unmasking Clever Hans predictors and assessing what machines really learn. Nature Communications , 10(1):1‚Äì8, 2019. [29] M. Mitchell. Abstraction and analogy-making in artiÔ¨Åcial intelligenc e.arXiv:2102.10717 , 2021. [30] S. M. Moosavi-Dezfooli, A. Fawzi, O. Fawzi, and P. Frossard. Un iversal adversarial perturbations. InProceedings of the IEEE Conference on Computer Vision and Pa ttern Recognition (CVPR) , pages 1765‚Äì1773, 2017. [31] J. Devlin, M.-W. Chang, K. Lee, and K. Toutanova. BERT: Pre-t raining of deep bidirectional trans- formers for language understanding. arXiv:1810.04805 , 2018. [32] C. Finn, P. Abbeel, and S. Levine. Model-agnostic meta-learning for fast adaptation of deep networks. InProceedings of the International Conference on Machine Lea rning (ICML) , pages 1126‚Äì1135, 2017. [33] K. Arulkumaran, M. P. Deisenroth, M. Brundage, and A. A. Bha rath. A brief survey of deep reinforce- ment learning. IEEE Signal Processing Magazine , 34, 2017. [34] J. Aron. AI landmark as Googlebot beats top human at ancient g ame of Go. New Scientist , 2016. URL https://tinyurl.com/2ztrk6hv . [35]https://tinyurl.com/45fs8a7e , 2013. [36]https://tinyurl.com/36rkhzrz , 2019. [37] Hubert L Dreyfus. A history of Ô¨Årst step fallacies. Minds and Machines , 22(2):87‚Äì99, 2012. [38] M. Minsky. The Society of Mind . Simon and Schuster, p. 29, 1987. [39] H. Moravec. Mind Children: The Future of Robot and Human Intelligence . Harvard University Press, p. 15, 1988. [40] D. R. Hofstadter. Metamagical Themas: Questing for the Essence of Mind and Pat tern. Basic Books, p. 632, 1985. 10 [41] A. Ng. What artiÔ¨Åcial intelligence can and can‚Äôt do right now. Harvard Business Review , 2016. URL https://tinyurl.com/udnzhuk . [42] D. Silver et al. Mastering the game of Go without human knowledge .Nature, 550(7676):354‚Äì359,2017. [43] G. Marcus. Innateness, Alphazero, and artiÔ¨Åcial intelligence. arXiv:1801.05667 , 2018. [44] H. Moravec. Mind Children: The Future of Robot and Human Intelligence . Harvard University Press, pp. 15‚Äì16, 1988. [45] Minsky, M. Decentralized minds. Behavioral and Brain Sciences , 3(3):439‚Äì440, 1980. [46] D. McDermott. ArtiÔ¨Åcial intelligence meets natural stupidity. ACM SIGART Bulletin , (57):4‚Äì9, 1976. [47] S. Gustin. IBM‚Äôs Watson supercomputer wins practice Jeopard y round. Wired, 2011. [48]https://www.ibm.com/cognitive/stories/bots/stories/ sciencefact/ . [49] Mixedoutlookforhuman-versus-AImatch. Korea Herald , 2016. URL https://tinyurl.com/zb3ywabe . [50] S. Shead. Google DeepMind is edging towardsa 3-0victory agains tworld Go champion Ke Jie. Business Insider, 2017. URL https://tinyurl.com/svb7x7e6 . [51]https://rajpurkar.github.io/SQuAD-explorer/ . [52]https://www.cs.cmu.edu/ ~glai1/data/race/ . [53]https://gluebenchmark.com/ . [54] D. Costenaro. New AI model exceeds human performance at q uestion answering. BecomingHuman.ai , 2018. URL https://tinyurl.com/ujwp6s95 . [55] S. Pham. Computers are getting better than humans at readin g.CNN Business , 2018. URL https://tinyurl.com/k48xa8nj . [56] U. Jawad. Microsoft‚Äôs AI model has outperformed humans in na tural language understanding. Neowin, 2021. URL https://tinyurl.com/2x4r54ad . [57] T. McCoy, E. Pavlick, and T. Linzen. Right for the wrong reason s: Diagnosing syntactic heuristics in natural language inference. In Proceedings of the 57th Annual Meeting of the Association fo r Computa- tional Linguistics (ACL) , pages 3428‚Äì3448, 2019. [58] T. Linzen. How can we accelerate progress towards human-like linguistic generalization? In Proceedings of the 58th Annual Meeting of the Association for Computatio nal Linguistics (ACL) , pages 5210‚Äì5217, 2020. [59] V. Woollaston. We‚Äôll be uploading our entire minds to computers by 2045 and our bodies will be replaced by machines within 90 years, Google expert claims. Daily Mail , 2013. URL https://tinyurl.com/ht44uxzv . [60] A. Newell and H. A. Simon. Computer science as empirical inquiry: Symbols and search. Communica- tions of the ACM , 19:113‚Äì126, 1976. [61] D. R. Hofstadter. Waking up from the Boolean dream, or, subc ognition as computation, 1985. Chapter 26 ofMetamagical Themas , Basic Books. [62] J. Carlsmith. New report on how much computational power it ta kes to match the human brain. https://www.openphilanthropy.org/blog/new-report-br ain-computation , 2020. [63] J. Patterson and A. Gibson. Deep Learning: A Practitioner‚Äôs Approach . O‚ÄôReilly Media, p. 231, 2017. 11 [64] G. Musser. Job one for quantum computers: Boost artiÔ¨Åcial in telligence. Quanta Magazine , 2018. URL https://tinyurl.com/2k8fw628 . [65] The cul-de-sac of the computational metaphor. https://tinyurl.com/rjtumkca , 2019. [66] Mark Johnson. Embodied Mind, Meaning, and Reason: How Our Bodies Give Rise to Understanding . University of Chicago Press, 2017. [67] Rebecca Fincher-Kiefer. How the Body Shapes Knowledge: Empirical Support for Embodi ed Cognition . American Psychological Association, 2019. [68] R. A. Epstein, E. Z. Patai, J. B. Julian, and H. J. Spiers. The cog nitive map in humans: spatial navigation and beyond. Nature Neuroscience , 20(11):1504, 2017. [69] D. M. Tucker. Mind from Body: Experience from Neural Structure . Oxford University Press, 2007. [70] L.W.BarsalouandK.Wiemer-Hastings.Situatingabstractcon cepts. In Grounding Cognition: The Role of Perception and Action in Memory, Language, and Thought , pages 129‚Äì163. Cambridge University Press, 2005. [71] G. LakoÔ¨Ä and M. Johnson. Metaphors We Live By . University of Chicago Press, 2008. [72] N. Bostrom. Superintelligence: Paths, Dangers, Strategies . Oxford University Press, p. 105, 2014. [73] S. Russell. Human Compatible: ArtiÔ¨Åcial Intelligence and the Problem o f Control . Penguin, p. 167, 2019. [74] S. Russell. How to stop superhuman A.I. before it stops us. New York Times , 2019. URL https://www.nytimes.com/2019/10/08/opinion/artifici al-intelligence.html . [75] M. Turek. Machine common sense. https://www.darpa.mil/program/machine-common-sense . [76] J. McCarthy. Programs with common sense. In Readings In Knowledge Representation . Morgan Kauf- mann, 1986. [77] D. B. Lenat, R. V. Guha, K. Pittman, D. Pratt, and M. Shepher d. CYC: Toward programs with common sense. Communications of the ACM , 33(8):30‚Äì49, 1990. [78] R. Zellers, Y. Bisk, A. Farhadi, and Y. Choi. From recognition to c ognition: Visual commonsense rea- soning. In Proceedings of the IEEE Conference on Computer Vision and Pa ttern Recognition (CVPR) , pages 6720‚Äì6731, 2019. [79] W. Knight. The US military wants to teach AI some basic common se nse.Technology Review , 2018. URLhttps://tinyurl.com/2xuvxefe . [80] E. Davis and G. Marcus. Commonsense reasoning and commonse nse knowledge in artiÔ¨Åcial intelligence. Communications of the ACM , 58(9):92‚Äì103, 2015. [81] H. J. Levesque. Common Sense, the Turing Test, and the Quest for Real AI . MIT Press, 2017. [82] E. S. Spelke and K. D. Kinzler. Core knowledge. Developmental Science , 10(1):89‚Äì96, 2007. [83] A. M. Turing. Computing machinery and intelligence. Mind, 59(236):433‚Äì460, 1950. [84] W. James. Psychology: The Briefer Course . Henry Holt, p. 335, 1892. [85] T. Winograd. On some contested suppositions of generative ling uistics about the scientiÔ¨Åc study of language. Cognition , 5(2):151‚Äì79, 1977. [86] C. Metz. A new way for machines to see, taking shape in Toronto .New York Times , 2017. URL https://tinyurl.com/5bwd3u9n . 12",cs.AI,Arxiv
10,Inferring and Conveying Intentionality: Beyond Numerical Rewards to Logical Intentions,"Susmit Jha, John Rushby",2022-07-06 21:46:16+00:00,http://arxiv.org/pdf/2207.05058v2,"Shared intentionality is a critical component in developing conscious AI agents capable of collaboration, self-reflection, deliberation, and reasoning. We formulate inference of shared intentionality as an inverse reinforcement learning problem with logical reward specifications. We show how the approach can infer task descriptions from demonstrations. We also extend our approach to actively convey intentionality. We demonstrate the approach on a simple grid-world example.","Inferring and Conveying Intentionality: Beyond Numerical Rewards to Logical Intentions Susmit Jha and John Rushby Computer Science Laboratory SRI International Menlo Park CA 94025 USA susmit.jha@sri.com, rushby@csl.sri.com Abstract. Shared intentionality is a critical component in developing conscious AI agents capable of collaboration, self-reection, deliberation, and reasoning. We formulate inference of shared intentionality as an in- verse reinforcement learning problem with logical reward specications. We show how the approach can infer task descriptions from demonstra- tions. We also extend our approach to actively convey intentionality. We demonstrate the approach on a simple grid-world example. Presented at AAAI Spring Symposium: Towards Conscious AI Systems, March 2019 1 Introduction There are many theories of consciousness; most propose some biological or other mechanism as a cause or correlate of consciousness, but do not explain what consciousness is for, nor what it does [1]. We take the contrary approach: we postulate that consciousness implements or is associated with a fundamental aspect of human behavior, and then we ask what mechanisms could deliver this capability and what AI approximations might help explore and validate (or refute) this speculation. We postulate that shared intentionality [6] is the attribute of human cognition whose realization requires consciousness. Shared intentionality is the ability of humans to engage in teamwork with shared goals and plans. There is no doubt that the unconscious mind is able to generate novel and complex goals and plans; the interesting question is how are these communicated from the mind of one individual (lets call her Alice) to those of others so that all can engage in purposeful collaboration. The goal or plan is generated by some conguration of chemical and electrical potentials in Alices neurophysiology and one possibility is that salient aspects of these are abstracted to yield a concise explanation or description that Alice can communicate to others by demonstration, mime, or language. The description is received by the other participants (lets call the prototypical one Bob) who can then interpret or \concretize it to enrich their own unconscious neurophysiological conguration so that it is now likely to generate behaviors that advance the common goal.arXiv:2207.05058v2  [cs.AI]  13 Jul 2022 2 Jha and Rushby This account suggests a dual-process cognitive architecture [2,3,5] where we identify consciousness with the upper level (\System 2) that operates on ab- stracted representations of salient aspects of the lower, unconscious level (\Sys- tem 1). It can also be seen as a form of Higher-Order Thought (HOT, that is thoughts about thoughts) and thus related to HOT theories of consciousness [4]. We posit that the conscious level is concerned with the construction and exploitation of shared intentionality: it generates, interprets, and communicates succinct descriptions and explanations about shared goals and plans. For suc- cinctness, it operates on abstracted entities|symbols or concepts|and presum- ably has some ability to manipulate and reason about these. When Alice builds a description to communicate to Bob, she must consider his state of knowledge and point of view, and we might suppose that this \theory of mind is represented in her consciousness and parameterizes her communication. We noted that Alice could communicate to Bob by demonstration, mime (i.e., demonstration over symbols), or language. For the latter two, Alice must have the abstracted description in her consciousness, but it is possible that demonstration could be driven directly by her unconscious: we have surely all heard or said \I cannot explain it, but I can show you how to do it. In fact, it could be that Alice constructs her abstraction by mentally demonstrating the task to herself. In this paper, we focus on demonstration as a means for communication and construction of abstract descriptions. In particular, we investigate how AI agents could use demonstrations to construct approximations to shared intentionality that allow them to engage in teamwork with humans or other AI agents, and to understand the activities of their own lower-level cognitive mechanisms. The computer science topic that seems most closely related to the task of inferring intentionality is inverse reinforcement learning (IRL). In classical IRL, the objective is to learn the reward function underlying the (System 1) behav- ior exhibited in the demonstrations. Here, we employ an extension to IRL that infers logical specications that can enable self-reective analysis of learned in- formation, compositional reasoning, and integration of learned knowledge, which enable the System 2 functions of a conscious AI agent. While modern deep learning methods [10] show great promise in building AI agents with human-level System 1 cognitive capabilities for some tasks [8,9], and decades of research in automated reasoning [11] can be exploited for log- ical deduction in System 2, our goal is to bridge these levels by inferring and conveying logical intentions. In this paper, we build on previous work on logical specication mining, including our own recent work [12,13,14]. The key novel contributions of this paper are: {Formulating intentionality inference as IRL with logical reward specication. {Methods for actively seeking and conveying intentions. {Demonstration of the proposed approach on a simple grid-world example. In Section 2, we formulate the problem of inferring intentionality as an inverse reinforcement learning problem and point out the deciencies of using numerical rewards to represent intentions. In Section 3, we present an inverse reinforcement learning method for logical specications, and illustrate how it can be used to in- Inferring and Conveying Intentionality 3 fer intentionality. We extend our approach to convey intentionality interactively in Section 4, and conclude in Section 5 by discussing the current limitations. 2 IRL and Intentionality Inference In traditional Inverse Reinforcement Learning (IRL) [17], there is a learner and a demonstrator. The demonstrator operates in a stochastic environment (e.g., a Markov Decision Process), and is assumed to attempt to (approximately) opti- mize some unknown reward function over its behavior trajectories. The learner attempts to reverse engineer this reward function from the demonstrations. This problem of learning rewards from the demonstrations can be cast as a Bayesian inference problem [18] to predict the most probable reward function. Ideally, this reward function encodes the intentionality of the demonstrator and enables the observer to understand the goal behind the demonstrations. This classical form of IRL can be seen as a communication at Level 1: that is, of an opaque low-level representation. We enrich this communication to allow inference of reasoning-friendly representations such as logical specications that are suitable for Level 2 manipulation. Once the agent has learned the goal in this form, it can use its own higher-level skills and knowledge to achieve or contribute to the goal, either independently or composed with other goals. Further, the agent also can use this representation to collaborate and plan activities with other agents as illustrated in Figure 1. Fig. 1. AI Agents Using Intentionality Inference for Planning and Collaboration: Agents observe demonstrated behavior trajectories to formulate logical specications that can be composed with existing knowledge about self and environment to plan out further behavior. This planning takes into account an agents understanding of the intentions of other agents, and can be used to convey its own intentions or seek clarication about the intentions of other agents. Logical specication mining has been studied in the traditional formal meth- ods community [19] including our own past work [13,16,14], but these methods are not robust to noise and rely on intelligent oracles to produce behaviors that cover the space of legal behaviors for the specication. This is not realistic for general AI problems where demonstrations such as handing over a glass of wa- ter, or crossing a street, are inherently noisy. In contrast, IRL algorithms [20] 4 Jha and Rushby formulate this inference procedure using the principle of maximum entropy [21]. This results in a likelihood of inferred reward over the demonstrations which is no more committed to any particular behavior than is required for matching the empirically observed reward expectation. Traditionally, this approach was limited to structured scalar rewards, often assumed to be linear combinations of feature vectors. But more recently, these have been adapted to arbitrary func- tion approximators such as Gaussian processes [22] and neural networks [23]. While powerful, these existing IRL methods provide no principled mechanism for composing or reasoning with the resulting rewards. The inference of intention as numerical reward function lacks a form that is amenable for self-reection and collaboration, and has several limitations: {First, numerical reward functions lack logical structure, making it dicult to reason over them|which is critical for self-reection: a conscious AI agent must be able to analyze its understanding of intention. This inference of intention could be from behaviors (either real or mental rehearsals) of its own low-level cognitive system, or from behaviors of other conscious agents. {Second, combining numerical rewards to understand intention in a compo- sitional manner is dicult. Demonstrations for two tasks can be learned individually using numerical rewards but these cannot be combined by the AI agent to perform the tasks in a concurrent or coordinated manner. A conscious AI agent cannot just infer each tasks intention separately, but needs a global view of its own inference and understanding. 3 IRL with Logical Intention Discovery In this section, we briey summarize how our recent work [12] on inferring logical specications in IRL can be used to answer the foundational Question 1 stated below. This is the rst step required to build self-aware and self-reective AI agents capable of inferring and conveying intentions. Question 1. How does Alice infer logical specication of intention by observing a set of demonstrative behaviors (either Alices own behavior generated by lower-level cognitive engines, or that of another agent)? We assume that the demonstrator (Alice or Bob) operates within a Markov Decision Process and the specication of the intent is a bounded trace prop- erty. More precisely, we dene a demonstration/trajectory, , to be a sequence of state-action pairs. Alice attempts to infer past-time linear temporal logic (PLTL) [7] from the demonstrations. Such a PLTL property, , can be iden- tied as a binary non-Markovian reward function :!1 ifj=, and 0 otherwise. The candidate set of specications corresponding to the space of possible intentions is denoted by . Inferring intention from demonstrations in the setXcan be formulated as a maximum posterior probability inference prob- lem:= arg max 2Pr(jX). Under assumptions of uniform prior over the intention space, and applying maximum entropy principle (see [12] for technical details), the posterior probability of a specication is given by: Pr(jM;X;)/1[^]exp  jXjDKL(B()jjB(^)) Inferring and Conveying Intentionality 5 whereMis the stochastic dynamics model known to the agent, Xis the set of demonstrations, denotes the average number of times the specication  was satised by the demonstrations, ^denotes the average number of times the specication is satised by a random sequence of actions, and DKLdenotes the KL divergence between the two Bernoulli distributions denoted by B. Intuitively, the rst component is an indicator function that the demonstrator is better than random, and the second component measures the information gain over the random actions. We can obtain the most likely logical specication from a set of demonstrations by maximizing the posterior probability. An algorithm for this optimization using partitioning of the logical specications is presented in our previous work [12]. Fig. 2.We use a simple grid world example to demon- strate this approach illustrated in Figure 2. In this task, the agent moves in a discrete gridworld and can take actions to move in the cardinal directions (north, south, east, west). Further, the agent can sense ab- stract features of the domain represented as colors. The task is to reach any of the yellow (recharge) tiles without touching a red tile (lava) { we refer to this sub-task as YR. Additionally, if a blue tile (water) is stepped on, the agent must step on a brown tile (drying tile) before going to a yellow tile { we refer to this sub-task as BBY. The last constraint requires recall of two state bits of history (and is thus not Markovian and infeasible to learn using traditional IRL): one bit for whether the robot is wet and another bit encoding if the robot recharged while wet. Demonstrations correspond to simultaneously satisfying both requirements. The space of logical specications [24] consist of PLTL properties using atomic propositions that indicate the nature of the square on which the robot is at a given instant. These demonstrations are interesting because they incidentally include noisy demonstrations for incorrect intentions, for instance, the robot should wet and dry itself before charging. But our algorithm using max entropy principle infers the following correct requirement using approximately 95 sec- onds and after exploration of 172 ^ candidates (18% of the concept class): F  H:red^O yellow ^H  (yellow^O blue ))(:blue S brown ) , where His \historically, Ois \once, and Sis \since [7]. 4 Passive Inference to Active Transfer of Intention A conscious agent must be capable of active transfer of intention beyond passive inference of intent discussed above. Such active intent transfer includes: Question 2. How does Alice infer (and then correct) a gap in the logical specication of her intention learned by Bob ? Question 3. How does Alice seek clarifying behaviors from Bob to dis- ambiguate her currently inferred intentions of Bob ? 6 Jha and Rushby The key to addressing both questions lies in dening a divergence measure over the set of candidate specications representing possible intention. One such divergence measure is the ratio of log likelihoods of two specications and0: D(;0) = log(Pr(jM;X;)=Pr(0jM;X;0)) =DKL(B()jjB(^)) DKL(B(0)jjB(^0)) We also assume both Alice and Bob have common intent inference mechanism which allows them to run the algorithm over demonstrations, and infer what the other agent might be concluding so far. Extension of this approach to agents who use dierent background knowledge, and will have noisy simulation of the other agents intention inference mechanism is beyond the scope of this paper. To demonstrate the use of this divergence measure, we consider a scenario where the demonstrations on the grid-world are restricted to a subset X0of orig- inal setX, andX0does not contain any trajectories going through blue or brown tiles. Using these demonstrations, Alice infers YRH:red^Oyellow as the most likely explanation, which only corresponds to the sub-task of avoiding lava and reaching the recharge tile. Alice can evaluate other specications and, if there are other candidate specications with low divergence measure, she can attempt to disambiguate her inferred intent. Let us say one such specication is H:red^O yellow^O blue . Alice can generate demonstrations consistent with this specication by planning from temporal logic [15]. These demonstra- tors will pass through wet blue tiles, and reach recharge without visiting brown drying tiles. Bob runs the intent inference approach on these demonstrations to realize that Alice has inferred , and not the intended YR. He can pro- vide additional behaviors (for e.g., the original set jXj) that help disambiguate both specications. This is continued until Alice converges to F, and all other candidate specications having high divergence from F. 5 Conclusion In this paper, we presented a rst step towards building AI agents capable of inferring and conveying intentionality as logical specications. The goal is to develop AI agents that not only learn intentions of other agents from demon- strations, or their own intentions by observing actions of lower-level cognitive engines, but also to provide and seek clarications when inferred intentions are ambiguous. Our proposed approach is currently limited to behaviors which are represented as time traces, and intentions that can be expressed in temporal logic. But several creative tasks such as proving theorems or writing a mystery novel cannot be easily formulated in this framework. A hierarchical representa- tion mechanism that can exploit the inferred intentions and goals to composi- tionally learn new intentions is essential to building self-aware self-reective AI that can collaborate to perform creative endeavors. Acknowledgement: The authors acknowledge support from the National Science Foundation(NSF) Cyber-Physical Systems #1740079 project, NSF Software & Hardware Foundation #1750009 project, and US ARL Cooperative Agreement W911NF-17-2-0196 on Internet of Battle Things (IoBT). Inferring and Conveying Intentionality 7 References 1. Rushby, J., Sanchez, D.: Technology and consciousness. Tech. rep., Computer Sci- ence Laboratory, SRI International, Menlo Park, CA (Sep 2018) 2. Evans, J.S.B.T., Stanovich, K.E.: Dual-process theories of higher cognition: Advanc- ing the debate. Perspectives on Psychological Science 8(3), 223{241 (2013) 3. Frankish, K.: Dual-process and dual-system theories of reasoning. Philosophy Com- pass 5(10), 914{926 (2010) 4. Gennaro, R.J.: Higher-Order Theories of Consciousness: An Anthology, Advances in Consciousness Research, vol. 56. John Benjamins Publishing (2004) 5. Kahneman, D.: Thinking, Fast and Slow. Farrar, Straus and Giroux (2011) 6. Tomasello, M., Carpenter, M., Call, J., Behne, T., Moll, H.: Understanding and sharing intentions: The origins of cultural cognition. Behavioral and Brain Sciences 28(5), 675{691 (2005), see also the commentaries on pages 691{721 and the authors response \In Search of the Uniquely Human on pages 721{727 7. Havelund K. and Rosu G. Ecient Monitoring of Safety Properties. Journal of STTT, Volume 6(2), pp 158-173. 2004 8. Szegedy, C., Liu W., Jia Y., Sermanet P., Reed S., Anguelov D., Erhan D., Van- houcke V., and Rabinovich A.. Going deeper with convolutions. CVPR, pp. 1{9. 2015. 9. Taigman, Y., Yang M., Ranzato M., and Wolf L.. Deepface: Closing the gap to human-level performance in face verication. In CVPR, pp. 1701{1708. 2014. 10. LeCun, Y., Bengio Y., and Hinton G.. Deep learning. Nature 521.7553 (2015): 436. 11. Robinson, A. J., Voronkov, A. (Eds.). (2001). Handbook of automated reasoning (Vol. 1). Elsevier. 12. Vazquez-Chanlatte M., Jha S., Tiwari A., Ho M. and Seshia S. A. Learning Task Specications from Demonstrations. In NeurIPS, 2018 13. Jha S., Tiwari A., Seshia S. A., Shankar N., and Sahai T.. TeLEx: Passive STL Learning Using Only Positive Examples, RV, 2017 14. Jha S., Sahai T., Raman V., Alessandro Pinto and Michael Francis. Explaining AI Decisions Using Ecient Methods for Learning Sparse Boolean Formulae. Journal of Automated Reasoning, 2018 15. Jha, S., Raman, V., Sadigh, D., and Seshia, S. A. (2018). Safe autonomy under per- ception uncertainty using chance-constrained temporal logic. Journal of Automated Reasoning, 60(1), 43-62. 16. Jha S., Sahai T., Raman V., Pinto A. and Francis M. On Learning Sparse Boolean Formulae For Explaining AI Decisions, NASA Formal Methods, 2017. 17. Ng A., Russell S., et al. Algorithms for inverse reinforcement learning. In ICML, pages 663{670, 2000. 18. Ramachandran D. and Amir E. Bayesian inverse reinforcement learning. IJCAI07. 19. Shoham, S., Yahav, E., Fink, S. J., Pistoia, M. (2008). Static specication mining using automata-based abstractions. IEEE Transactions on Software Engineering, 34(5), 651{666. 20. Ziebart B. D., Maas A. L., Bagnell J. A., and Dey A. K. Maximum entropy inverse reinforcement learning. In AAAI, volume 8, pages 1433{1438, 2008. 21. Jaynes E. T. Information theory and statistical mechanics. Physical review, 106(4):620, 1957. 22. Levine S., Popovic Z., and Koltun V. Nonlinear inverse reinforcement learning with gaussian processes. In NIPS, pages 19{27. 2011 23. Finn C., Levine S., and Abbeel P. Guided cost learning: Deep inverse optimal control via policy optimization. In ICML, pages 49{58, 2016. 24. Manna, Z., and Pnueli A. The temporal logic of reactive and concurrent systems: Specication. Springer Science and Business Media, 2012","cs.AI, q-bio.NC",Arxiv
11,The Role of AI in Human-AI Creative Writing for Hong Kong Secondary Students,"Hengky Susanto, David James Woo, Kai Guo",2023-04-21 23:50:09+00:00,http://arxiv.org/pdf/2304.11276v1,"The recent advancement in Natural Language Processing (NLP) capability has led to the development of language models (e.g., ChatGPT) that is capable of generating human-like language. In this study, we explore how language models can be utilized to help the ideation aspect of creative writing. Our empirical findings show that language models play different roles in helping student writers to be more creative, such as the role of a collaborator, a provocateur, etc","THE ROLE OF AI IN HUMAN -AI CREATIVE WRITING   The manuscript has been published in International Council of Teachers of English (ICTE) Newsletter  (Spring 2023 ). 1  The Role of AI in Human -AI Creative Writing for Hong Kong  Secondary Students     Hengky Susanto a, b, David James Woo c, and Kai Guo d  a University of Massachusetts Lowell Department of Computer Science, USA   b Department of Science and Environmental Studies, The Education University of Hong Kong, Hong Kong,  China   c Precious Blood Secondary School, Hong Kong, China   d Faculty of Education, The University of Hong Kong, Hong Kong, China       Abstract  -- The recent advancement in Natural  Language Processing  (NLP ) capability  has led to  the development o f language model s (e.g.,  ChatGPT)  that is capable  of generating human - like language . In this study , we explore  how  language model s can be utilized to help the  ideation aspect  of creative writing . Our empirical  findings show that  language model s play  different role s in helping student writers to be  more creative, such as the role of a collaborator,  a provocateur, etc.    Keywords : AI, NLP, creative writing, nature language  generator     1. Introduction   Since the release of ChatGPT, this text  generator application with artificial  intelligence (AI) capability has taken the  world by storm because of its ability to  generate human -like text. For this reason, this  application has raised many concerns among  educators for its capability to facilitate  academic dishonesty, such as students using  ChatGPT to generate essays for assignments.  However, at the same time, we also recognize  its potential to be used for good, suc h as  helping non -native English speakers to  enhance creative writing in English.  2. Data Collection   To realize AIs capability to generate human - like text as a learning tool, we first built and  prototyped AI -based sentence generator tools  using free and open -source Natural L anguage  Processing (NLP) based libraries available  for the Python programing language, such as  autoregressive language models (Radford  et  al., 2019 ) on which ChatGPT is based. In  other words, our tools are capable of  generating human -like, English language  text  at word, sentence and paragraph levels.   Importantly, we launched an English  language creative writing contest for Hong  Kong secondary school students. Prior to the  competition, students were given a workshop  session to learn about short story writing  as  well as training on how to use the tools. Then,  participating students utilized the tools to  facilitate idea generation for their creative  writing. Each student wrote a short story  using a mix of their own sentences and AI  generated sentences together.  At the end of  the competition, we asked the participating  students to complete a post -contest survey.    3. Analysis Methodology   We analyzed students‚Äô stories to address if  and how the AI -based tools had helped the  creative aspect of students in completing  THE ROLE OF AI IN HUMAN -AI CREATIVE WRITING   The manuscript has been published in International Council of Teachers of English (ICTE) Newsletter  (Spring 2023 ). 2  their task of writing a  short story. To address  these questions, we employed a framework  comprising four categories of creativity  proposed by Kaufman and Beghetto (2009).  In this ‚Äúfour C‚Äù model: ‚Äúbig C‚Äù refers to a  level creativity leading to extraordinary  achievements (for exam ple, winning a Nobel  Prize); ‚Äúpro -C‚Äù refers to creativity at a  professional level (for example, designer,  professional musician, journalist, etc.),  ‚Äúlittle -C‚Äù is everyday creativity (for example,  cooking, fixing broken items, etc.) or hobbies,  and ‚Äúmini -C‚Äù is creativity that are useful for  learning purposes (for example, identifying  the rules and constraints of a given domain  like math, music, writing, etc.). In our  analysis, we focus on the ‚Äúmini -C‚Äù in the  context of AI text generator contributions to  students‚Äô performance in creative writing.   At a fine -grain level, we analyzed the  position where AI -generated sentences were  placed within a basic paragraph structure,  comprising a topic sentence, supporting  details, and a concluding sentence. This  analytical framework gave us specific  information of how the AI -generated text has  contributed to the student‚Äôs writing process.  For example, the first sentence in a paragraph  is often used to state the main idea or topic of  the paragraph. Thus, when a student decide s  to place the generated text in the beginning of  a paragraph, this is an indication that the  generated text is used to trigger new ideas to  build the storyline. At a broader level, we  looked at which paragraphs within a story use  more AI -generated sentenc es.     4. Findings  and Discussion   Through analysis of the student‚Äôs writings  from the competition, we observed that many  of the students used AI -generated sentences  for their opening sentence of the first  paragraph. This is an important finding  because this indicates the AI text gener ator is  used to give them a quicker or guided head start. Secondly, AI -generated sentences are  frequently found in the beginning of a  paragraph. For example, in some short stories,  a significant number of the paragraphs began  with AI -generated sentences. F rom these  observations, we may conclude that students  find the tools most useful to trigger new ideas  to develop the story further. Our analysis of  post-contest surveys affirmed this conclusion.  For example, the students found the tools  helpful in providin g them with ideas as they  were writing their story. In sum, by using the  tools to generate text for the beginning of the  paragraphs, these students found the tools  useful for invoking new ideas or to find  inspiration to develop the story plot.   Furthermore , we investigated the role(s) of  the tools in co -authoring the short story. To  realize this, we analyzed the surveys to  understand the nature of student interactions  with the AI -based tools. We observed that  some students only selected the sentence or  word s that fit her story narrative. These  observations suggest that the AI text  generator plays the role of a ‚Äúpartner‚Äù in  helping them generate new ideas and develop  the story, which is also an approach to be  more creative (Osborn, 1963). One student  mentione d in the survey that, ‚ÄúI chose the  sentence generator to get ideas...to make my  story more interesting.‚Äù The student explored  and ‚Äúcompared which tools would make the  writing better.‚Äù Similarly, some students  found the tools to be useful in helping them  to locate words that express their thoughts  more accurately. Another student said, ‚ÄúFirst  I would think of a single sentence about the  writing which is incomplete, then I would put  it into the generator and let it do its work.‚Äù  This student used the tools to  ‚Äúfind the words  which make the writing better.‚Äù   On the other hand, the AI -based sentence  generator tools may play the role of a  provocateur, generating ideas which may not  be directly or obviously aligned with the  original storyline. A student found it  THE ROLE OF AI IN HUMAN -AI CREATIVE WRITING   The manuscript has been published in International Council of Teachers of English (ICTE) Newsletter  (Spring 2023 ). 3  challenging to integrate the sentences  generated by the tools into her storyline. In  the survey, this student wrote, ‚ÄúIt‚Äôs difficult  to write with my own words and the AI‚Äôs  words because if you have the story planned,  the AI might switch it up a bit, someti mes it  might help give you new ideas but I have a  strict plan with how I want the story to go‚Ä¶‚Äù  In this case, the student collaboration with the  AI text generator can be an experience of  forced association (Osborn, 1963), which is a  creative technique pair ing random ideas  together to provoke novel solutions. This  technique is widely practiced to achieve  innovative solutions to certain problems.     5. Conclusion   To conclude, our empirical findings indicate  that students can utilize AI -based sentence  generator tools like Cha tGPT to trigger ideas  to further develop a story. They also indicate  that different students can utilize the text  generator differently in helping them to be  more creative in their writing, perhaps  depending on the student‚Äôs English language  ability. For s ome students, the tools are more  of a partner, while for other students the tools  have played the role of a provocateur.    These insights are crucial for our future work  of using the AI -based sentence generator  tools for learning and teaching creative  writing. We envision teachers can use these  tools to specify the outputs from the language models to fit their teaching objectives and the  desired learning outcomes. In other words,  the teacher could customize the type and  extent of help students get from the language  models based on factors such as students‚Äô  grade level, writing techniques, etc. Using  tools in these ways may alleviate educators‚Äô  concerns for AI -based sentence generator  tools‚Äô capability to facilitate academic  dishonesty.      References   Osborn, A.F. (1963). Applied imagination:  Principles and procedures of creative  problem solving.  New York, New  York: Charles Scribners Sons.      Kaufman, J. C., & Beghetto, R. A. (2009).  Beyond big and little: The four c model of  creativity. Review of Gen eral Psychology ,  13(1), 1 ‚Äì12.     Radford, A., Wu, J., Child, R., Luan, D.,  Amodei, D., & Sutskever, I. (2019).  Language Mo dels are U nsupervised  Multitask Learners.  https://www.semanticscholar.org/paper/Lan guage -Models -are-Unsupervised -Multitask - Learners -Radford - Wu/9405cc0d6169988371b2755e573cc2865 0d14dfe    ",cs.CL,Arxiv
12,SPRING: Studying the Paper and Reasoning to Play Games,"Yue Wu, Shrimai Prabhumoye, So Yeon Min, Yonatan Bisk, Ruslan Salakhutdinov, Amos Azaria, Tom Mitchell, Yuanzhi Li",2023-05-24 18:14:35+00:00,http://arxiv.org/pdf/2305.15486v3,"Open-world survival games pose significant challenges for AI algorithms due to their multi-tasking, deep exploration, and goal prioritization requirements. Despite reinforcement learning (RL) being popular for solving games, its high sample complexity limits its effectiveness in complex open-world games like Crafter or Minecraft. We propose a novel approach, SPRING, to read the game's original academic paper and use the knowledge learned to reason and play the game through a large language model (LLM). Prompted with the LaTeX source as game context and a description of the agent's current observation, our SPRING framework employs a directed acyclic graph (DAG) with game-related questions as nodes and dependencies as edges. We identify the optimal action to take in the environment by traversing the DAG and calculating LLM responses for each node in topological order, with the LLM's answer to final node directly translating to environment actions. In our experiments, we study the quality of in-context ""reasoning"" induced by different forms of prompts under the setting of the Crafter open-world environment. Our experiments suggest that LLMs, when prompted with consistent chain-of-thought, have great potential in completing sophisticated high-level trajectories. Quantitatively, SPRING with GPT-4 outperforms all state-of-the-art RL baselines, trained for 1M steps, without any training. Finally, we show the potential of games as a test bed for LLMs.","SPRING: Studying the Paper and Reasoning to Play Games Yue Wu14‚àó, Shrimai Prabhumoye2, So Yeon Min1, Yonatan Bisk1, Ruslan Salakhutdinov1, Amos Azaria3, Tom Mitchell1, Yuanzhi Li1,4 1Carnegie Mellon University,2NVIDIA,3Ariel University,4Microsoft Research Abstract Open-world survival games pose significant challenges for AI algorithms due to their multi-tasking, deep exploration, and goal prioritization requirements. Despite reinforcement learning (RL) being popular for solving games, its high sample complexity limits its effectiveness in complex open-world games like Crafter or Minecraft. We propose a novel approach, SPRING, to read Crafter‚Äôs original aca- demic paper and use the knowledge learned to reason and play the game through a large language model (LLM). Prompted with the L ATEX source as game context and a description of the agent‚Äôs current observation, our SPRING framework em- ploys a directed acyclic graph (DAG) with game-related questions as nodes and dependencies as edges. We identify the optimal action to take in the environment by traversing the DAG and calculating LLM responses for each node in topological order, with the LLM‚Äôs answer to final node directly translating to environment actions. In our experiments, we study the quality of in-context ‚Äúreasoning‚Äù induced by different forms of prompts under the setting of the Crafter environment. Our experiments suggest that LLMs, when prompted with consistent chain-of-thought, have great potential in completing sophisticated high-level trajectories. Quantita- tively, SPRING with GPT-4 outperforms all state-of-the-art RL baselines, trained for 1M steps, without any training. Finally, we show the potential of Crafter as a test bed for LLMs. Code at github.com/holmeswww/SPRING 1 Introduction Open-world survival games like Minecraft (Fan et al., 2022) and Crafter (Hafner, 2021) pose significant challenges for AI algorithms due to a combination of factors: procedural generation requires strong generalization; diverse action space requires multi-task capabilities; technology tree requires long-term planning and deep exploration; diverse and conflicting objectives requires goal prioritization. In particular, Crafter is designed for efficient simulation and fast iteration. Similar to Minecraft, Crafter features key challenges such as multi-tasking, exploration with a deep and wide tech-tree, requiring the agent to craft multiple tools and interact with multiple objects to survive in the game. Reinforcement learning (RL) has been the go-to approach for game-based problems, with numerous successes in games like Go (Silver et al., 2017), robotics (Fu et al., 2020; Hafner et al., 2023) and various video games (Vinyals et al., 2019; Schrittwieser et al., 2020; Badia et al., 2020; Hafner et al., 2023). While RL demonstrated impressive performance, it still suffers from certain limitations, such as high sample complexity and difficulty in incorporating prior knowledge. Such drawbacks make it exceptionally challenging to apply RL to diverse and complex open-world benchmarks like ‚àóWork done during internship at Microsoft. For correspondence, contact ywu5@andrew.cmu.edu 37th Conference on Neural Information Processing Systems (NeurIPS 2023).arXiv:2305.15486v3  [cs.AI]  11 Dec 2023 Figure 1: Overview of SPRING. The context string, shown in the middle column, is obtained by parsing the L ATEX source code of Hafner (2021). The LLM-based agent then takes input from a visual game descriptor and the context string. The agent uses questions composed into a DAG for chain-of-thought reasoning, and the last node of the DAG is parsed into action. Crafter (Hafner, 2021) or Minecraft (Fan et al., 2022). Addressing the benefits and drawbacks of RL is therefore crucial for achieving a sample-efficient solution. On the other hand, large language models (LLMs) (Brown et al., 2020; Smith et al., 2022; Chowdhery et al., 2022) have shown remarkable success when prompted for various tasks, including embodied planning and acting (Ahn et al., 2022; Du et al., 2023; Wang et al., 2023; Shinn et al., 2023), QA or dialogue (Ouyang et al., 2022; Bubeck et al., 2023), and general problem-solving (Brown et al., 2020; Bubeck et al., 2023). Their unique planning (Ahn et al., 2022), reasoning (Shinn et al., 2023), and problem-solving (Bubeck et al., 2023; Madaan et al., 2023) ability makes them a promising candidate for incorporating prior knowledge and in-context reasoning for game-based problems, particularly when it comes to addressing the aforementioned limitations of RL. Hence, in this work, we study the possibility and reliability of LLMs for understanding and reasoning with human knowledge, in the setting of games. We consider a two staged approach SPRING (Figure 1): (1) studying the paper : the first stage reads the L ATEX of the paper of (Hafner, 2021) and (2)reasoning : the second stage involves reasoning about that knowledge through a QA framework to take an environment action. Note that the Crafter environment was released after the data collection date of GPT-3.5 and GPT 4 (OpenAI, 2023) models2, the environment is unseen to them. We first use LLM to extract prior knowledge from the L ATEX source code of the original paper by Hafner (2021). We then use a similar QA summarization framework as Wu et al. (2023) which produces QA dialogue on game mechanics. SPRING handles significantly more diverse contextual information than (Wu et al., 2023), making use of all 17 action/interaction types and even information about desirable behaviors documented in the paper. We focus on reading the relevant academic paper in the first stage of SPRING, by first deciding the paragraphs that are relevant for playing the game. Then we extract key information through a series of questions such as ‚Äú Write all information helpful for the game in a numbered list. . In the second stage,we promote and regulate in-context chain-of-thought reasoning in LLMs to solve complex games. The reasoning module is a directed acyclic graph (DAG), with questions as nodes and dependencies as edges. For example, the question ‚Äú For each action, are the requirements met?  depends on the question ‚Äú What are the top 5 actions? , creating an edge from the latter to the former. For each environment step, we traverse the DAG computing LLM answers for each node in the topological order of the graph. The final node of the DAG is a question about the best action to take and the LLM answer for the question is directly translated to environment action. Qualitatively, our experiments show that LLMs, when prompted with consistent chain-of-thought, can execute sophisticated trajectories independently in Crafter (Hafner, 2021). Quantitatively, SPRING‚Äôs zero-shot performance with GPT-4 surpassing all state-of-the-art RL algorithmstrained for 1M steps (Table 2). Our contributions are as follows: 2GPT-3.5/4 training data ends in September 2021 according to OpenAI API 2 ‚Ä¢SPRING is the first to tackle a competitive RL benchmark by explicitly extracting multiple interactions and tech-tree dependencies directly from an academic paper. ‚Ä¢We are the first to show SOTA performance in a challenging open world game with a zero-shot LLM-based (GPT-4) policy ‚Ä¢We study the quality of in-context ‚Äúreasoning‚Äù induced by different prompts and propose a controlled chain-of-thought prompting through a DAG of questions for decision making. 2 Method This section is structured as follows. We first describe how we generate the context from the L ATEX source code of Hafner (2021) in Section 2.1. Then we describe our SPRING framework and how we compute the action in Section 2.2. Problem Setting Our goal is to show that LLMs can plan and act reasonably well in an environment where control tasks are less required. In the setting of Crafter, we define the states, s, as samples from state distribution S. We are interested in creating a goal-conditioned policy œÄwhich maps state sto action a‚ààA,œÄ:S‚ÜíA. Due to the use of LLM, we further break the policy down into two parts: a descriptor Dwhich describes key aspects the visual observation in plain text ( d=D(s)). And an LLM-based actor which takes state description dand outputs action a. In addition, we define Sj parato be the jthparagraph in the L ATEX source of the environment paper (Hafner, 2021), and MLLM to be the LLM which takes a context string and a question string as input and outputs an answer to the question. 2.1 Studying the paper: Context from L ATEX source Figure 2: Paper Studying Moudle. The 3-step approach for computing Cqfrom the L ATEXsource code of Hafner (2021). First, as shown in the left column, for each paragraph we compute LLM answer for all relevancy questions in Qrel, and keep only the relevant paragraphs. Second, as shown in the middle column, we compute paragraph-level LLM answer to q. Third, we summarize the answer intoCqwith a summary prompt; we concatenate Cqacross q‚ààQgame and obtain C. Similar to Wu et al. (2023), we compose gameplay specific questions and then compute LLM answer to the questions for each subsection in the latex files. Since a considerable amount of the paper is irrelevant to the gameplay, we use a set of 2 questions Qrel={‚ÄúWould this paragarph help me succeed in this game?, ‚ÄúDoes this paragraph contain information on the game mechanics, or game strategies?} to identify relevance, and a set of 4 questions Qgame={‚ÄúWrite all information helpful for the game in a numbered list., ‚ÄúIn plain text. List all objects I need to interact/avoid to survive in the game. Use I would like to X object Y in each step. Replace Y by the actual object, X by the actual interaction., ‚ÄúWrite all game objectives numbered list. For each objective, list its requirements., ‚ÄúWrite all actions as a numbered list. For each action, list its requirements.} to summarize gameplay and action space relevant information. We add the prompt ‚ÄúDO NOT answer in LaTeX.‚Äù to all of Qgameto prevent the LLM from outputting the list in L ATEX format. For a specific gameplay specific question q‚ààQgame, our goal is to compute Cq, the answer to q conditioned on the paper. However, since the length of the paper exceeds input length constraints for most LLMs, we have to break the paper down into paragraphs individual Sj para. We provide an illustration of the process in Figure 2. First, we filter the paragraphs for relevance and keep only paragraphs identified as relevant by at least one question from Qrel. We set Prel qto be the set of relevant paragraphs. 3 Prel q= Sj para|‚àÉqr‚ààQrels.t.MLLM  Sj para, qr =‚ÄúYes‚Äù	 (1) Second, we compute the set, Aq, of answers to qfor each relevant paragraph from Prel q, from the LATEX source code. Aq= MLLM (Spara, q) :Spara‚ààPrel q	 (2) Third, to obtain the answer string Cqfrom the set Aq, we query an LLM with a summarization prompt qsummarize =‚ÄúRemove duplicate items.‚Äù Cq=MLLM (concat (Aq), qsummarize ) (3) Finally, we concatenate (with the linebreak character) all question-context pairs to form the context string Cfor SPRING. C=concat ({‚ÄúQuestion: qAnswer: Cq‚Äù|‚àÄq‚ààQgame}) (4) 2.2 Reasoning: QA-DAG for SPRING Node Question q1List objects in the current observation. For each object, briefly answer what resource it provides and its requirement. q2 What was the last action taken by the player? q3 For each object in the list, are the requirements met for the interaction? q4 Did the last player action succeed? If not, why? q5 List top 3 sub-tasks the player should follow. Indicate their priority out of 5. q6 What are the requirements for the top sub-task? What should the player do first? q7List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. q8 For each action in the list, are the requirements met? qa Choose the best executable action from above. Table 1: List of all 9 questions in Qact. The questions are designed to promote consistent chain-of- thought. Experimentally, we find the LLM robust to different phrasing of the questions. Figure 3: Reasoning. (a) The visual descriptor takes the last two gameplay screens as input, and outputs their descriptions in language ( dt, dt‚àí1).(b)SPRING traverses a DAG of questions from Table 1 in topological order. Answer to the final question qais mapped to environment action using sub-string matching. (c)The LLM answer for each question (node) is conditioned on the previous 2 steps of observation, the context C, and answers to the immediate parents of the current node. For LLMs to be able to understand the gameplay, we first follow Du et al. (2023); Wang et al. (2023) to define an visual descriptor Mdescwhich converts state s‚ààSto textual description d(Figure 3 a). 4 To achieve consistent chain-of-thought reasoning (Wei et al., 2021) throughout hundreds of steps within one round of gameplay, we compose a fixed set of questions Qact={q1, . . . , q a}to query the LLM at every step of the game, with question-question dependencies as D={(qu, qv)|qu, qv‚àà Qactand answering qvrequires the answer of qu}. Note that the above specification forms a directed acyclic graph (DAG) with nodes Qactedges D(Figure 3 b). For any question (node) qv‚ààQact, we compute the answer At qvfor time step t, conditioned on the gameplay context C, most recent 2 steps of game description dt‚àí1, dt, and answers to its dependencies (Figure 3 c). At qv=MLLM  concat  C, dt‚àí1, dt, At qu|(qu, qv)‚ààD	 , qv (5) Experimentally, we find that prompting the LLM with only the direct parents of a question greatly reduces the context length, and helps LLM to focus on the most relevant contextual information. We traverse the DAG using a modified topological sort algorithm to compute LLM answer for each question based on its topological order. Finally, we map the answer to the last question in the node qa directly to one of the 17 named actions in the environment with sub-string matching ( a=At a). We take the default action ‚ÄúDo‚Äù on sub-string matching failure.3 3 Experiments and Results We present our experiments as follows. First, we explain our experimental setup and baselines for our experiments. Then, we compare SPRING to popular RL methods on the Crafter benchmark. Finally, we conduct experiments and analysis on different pieces of our architecture to study the influence of each part over the in-context ‚Äúreasoning‚Äù capabilities of the LLM. 3.1 Experimental Details The Crafter environment (Hafner, 2021) is a procedurally generated open-world survival game for benchmarking RL algorithms with 22 achievements in a tech tree of depth 7. The environment is a grid-world features top-down observation and discrete action space of size 17. The observation also shows the current inventory state of the player, including its health points, food, water, rest levels, and inventory. The game is inspired by Minecraft and features a similar get-to-diamond challenge. In comparison, Crafter captures many key research challenges of Minecraft in a simpler and faster environment, thus speeding up experiments and result collection. Environment Descriptor The gameplay screen (top left of Fig 3.) consists of a 9 √ó9 grid ({(i, j)|1‚â§i, j‚â§9}). The top 7 rows consist of the local view of the world; each cell (i, j)is associated with a pre-defined background (e.g., ‚Äúgrass‚Äù, ‚Äúwater‚Äù, ‚Äúnone‚Äù) and possibly with an object ‚Äúasset‚Äù (e.g., ‚Äútree‚Äù, ‚Äúhealth‚Äù, ‚Äúplayer‚Äù). The bottom 2 rows represent agent status (e.g., ‚Äúhealth‚Äù) and item inventories, which include images of assets (e.g., ‚Äústone sword‚Äù), and the number of each assent in the inventory. Our environment descriptor accepts as input the gameplay screen and outputs a text description of the screen. We first create combinations of background and object (appearance) assets. Then we add number assets to recognize the quantity of inventory/ status. We match these combinations with the gameplay screen, using cv2.filters with a matching threshold of0.9. We disable the detector during nights when observations are unreliable. Finally, for each (i, j), we filter the matched combinations, and select the one with the highest matching score. From this information, we can measure the distance and direction of each object relative to the player; simultaneously, we can count the agent status and inventory item. The environment descriptor then obtains the set of objects in observation O = {(obj, dist, direction )}, the set of inventory items I={(object, count )}, and the agent status H={(attribute, value, max )}. Including only the closest object of each kind, we compose the observation description das: ‚ÄúYou see : - <obj> <dist> steps to your <direction>. Your status: <attribute>: <value>/ <max>. Your inventory: - <object>: <count>‚Äù. We describe direction of objects using ‚Äúnorth‚Äù,‚Äúsouth‚Äù,‚Äúeast‚Äù,‚Äúwest‚Äù. 3We will release code for our agent at github.com/anonymous 5 Method Score Reward Training Steps4 Human Experts 50.5¬±6.8% 14 .3¬±2.3 N/A SPRING + paper (Ours) 27.3¬±1.2%12.3¬±0.7 0 DreamerV3 (Hafner et al., 2023) 14.5¬±1.6% 11.7¬±1.9 1M ELLM (Du et al., 2023) N/A 6.0¬±0.4 5M EDE (Jiang et al., 2022) 11.7¬±1.0% N/A 1M DreamerV2 (Hafner et al., 2020) 10.0¬±1.2% 9 .0¬±1.7 1M PPO (Schulman et al., 2017) 4.6¬±0.3% 4 .2¬±1.2 1M Rainbow (Hessel et al., 2018) 4.3¬±0.2% 5 .0¬±1.3 1M Plan2Explore (Sekar et al., 2020) 2.1¬±0.1% 2 .1¬±1.5 1M RND (Burda et al., 2018) 2.0¬±0.1% 0 .7¬±1.3 1M Random 1.6¬±0.0% 2 .1¬±1.3 0 Table 2: Table comparing SPRING and popular RL algorithms in terms of game score, reward, and training steps. Results for SPRING is summarized over 5 independent trials. SPRING out-performs the previous SOTA in terms of all metrics. In addition, since SPRING gathers knowledge from reading the paper, it requires no training. Evaluation Metrics Agents in Crafter are evaluated primarily based on two metrics: reward and score. The game assigns a sparse +1reward each time the agent unlocks a new achievement in an episode, and assigns reward of ‚àí0.1/0.1when the agent loses/gains one health point. The score metric (Hafner, 2021) is computed by aggregating the success rates for each achievement: S= exp  1 NNX i=1ln (1 + si)! ‚àí1, where siis the agent‚Äôs success rate on achievement iandN= 22 is the number of achievements. Note that RL agents only train on the reward, and SPRING does not require any training. RL Baselines We include results from popular actor-critic methods like PPO (Schulman et al., 2017); DQN variants like Rainbow (Hessel et al., 2018); intrinsically motivated methods like RND (Burda et al., 2018), Plan2Explore (Sekar et al., 2020), EDE (Jiang et al., 2022); LLM assisted solutions like ELLM Du et al. (2023); model-based methods like DreamerV2 (Hafner et al., 2020); DreamerV3 (Hafner et al., 2023), which currently holds the state-of-the-art. LLMs. For LLM access, we use GPT-3.5-turbo (OpenAI, OpenAI) and GPT-4 (OpenAI, 2023) from OpenAI‚Äôs API. 3.2 Overall Results We compare the performance of RL baselines to SPRING with GPT-4 conditioned on the environment paper (Hafner, 2021) in Table 2. SPRING out-performs the previous SOTA, including previous attempts at using LLMs for Crafter by large margins, achieving an 88% relative improvement on game score and a 5%improvement in reward on the best performing RL method (Hafner et al., 2023). Since the model obtains knowledge from reading the paper, SPRING requires 0training steps, while RL methods generally require millions of training steps4. We include a plot of unlock rate by task, comparing our method to popular RL baselines in Figure 4. SPRING assisted by prior knowledge out-performs RL methods by more than 10x on achievements like ‚ÄúMake Stone Pickaxe‚Äù, ‚ÄúMake Stone Sword‚Äù, and ‚ÄúCollect Iron‚Äù, which are up to depth 5 down in the tech tree and significantly harder to reach through random exploration. For achievements ‚ÄúEat Cow‚Äù and ‚ÄúCollect Drink‚Äù, SPRING achieves perfect performance, whereas model-based RL framework like Dreamer-V3 has more than 5x lower unlock rate for ‚Äúeat cow‚Äù since cows are moving and harder to reach through random exploration. Finally, we note that SPRING did not take the action ‚ÄúPlace Stone‚Äù, which can be reached easily by random exploration, since placing a stone was not discussed as beneficial for the agent in the paper (Hafner, 2021). 4We base our comparison on the hard 1M cap set by Hafner (2021). 6 Collect Coal Collect DiamondCollect DrinkCollect Iron Collect SaplingCollect StoneCollect Wood Defeat SkeletonDefeat ZombieEat CowEat Plant Make Iron PickaxeMake Iron Sword Make Stone PickaxeMake Stone SwordMake Wood PickaxeMake Wood SwordPlace FurnacePlace PlantPlace StonePlace T ableWake Up0.010.1110100Success Rate (%)Ours DreamerV3 RainbowFigure 4: Ability spectrum showing the unlocking percentages for all 22 achievements. Rainbow manages to drink water and forage for food. DreamerV3 collects coal, iron, stone, and forges more advanced tools and weapons. Since SPRING starts off with knowledge about the game, it achieves more than 10x higher unlock rate on previously hard-to-reach tasks like ‚ÄúEat Plant‚Äù, ‚ÄúMake Stone Pickaxe‚Äù, ‚ÄúMake Stone Sword‚Äù, and ‚ÄúCollect Iron‚Äù. Method Achievement Depth Reward Questions per Step SPRING + Full Paper 6 12.3¬±0.7 9 SPRING + Paper w/ modified C 4 9.4¬±1.8 9 SPRING + Action Description 4 8.2¬±0.2 9 SPRING + w/o C 1 0.5¬±0.2 9 SPRING + Full Paper 6 12.3¬±0.7 9 Step-by-step prompt + Full Paper 5 7.3¬±4.4 2 QA w/o DAG + Full Paper 4 4.3¬±3.9 9 w/o QA + Full Paper 2 2.4¬±1.3 1 SPRING + Full Paper 6 12.3¬±0.7 9 SPRING + Full Paper w/ GPT-3.5 2 3.3¬±2.9 9 Table 3: Analysis on how different parts of SPRING contribute to its performance, comparing the max achievement depth in the tech tree, the reward, and the number of human-written questions in the prompt. Results are summarized over 5 independent trials. The first 4 rows study the necessity of prior knowledge from the context string C. The middle 4 rows study different chain-of-thought prompting techniques. The last 2 rows study the role of LLMs. All three aspects are important for SPRING to achieve best reported performance. 3.3 Component Analysis We study how the different aspects of the framework contribute to the behavior of the agent through a series of ablations as shown in Table 3. Studying the L ATEX Paper In the first 4 rows of Table 3, we investigate the contribution of gameplay context from the L ATEX paper toward performance of the agent. We report the performance of SPRING with no contextual information (w/o C) (row 4); SPRING conditioned on only the action descriptions and dependencies from (Hafner, 2021) Table F.1 (only question 4 from Qgame) (row 3); SPRING conditioned on the context manually modified to exclude the ‚Äúcrafting table‚Äù dependency for wooden_pickaxe by removing two corresponding lines from the context C(row 2); SPRING conditioned on the full context from the paper (row 1). As expected, since Crafter environment is unseen for GPT, the agent achieves performance similar to random agent without any game context. When provided with only action descriptions and action dependencies, using only question 4 from Qgamein section 2.1, SPRING achieves strong 67% performance comparable to DreamerV2 (Silver et al., 2017). For the next piece of the experiment, we manually remove ‚Äúnear crafting table‚Äù dependency for wooden_pickaxe from it‚Äôs context, which is required for 11 later achievements. SPRING with GPT-4 incurs a 24% performance drop. Interestingly, we find that the LLM has some ability to recover from 7 the inaccurate context information. We observe that after failing to craft the wooden_pickaxe without a table, the agent instead tries to craft a wooden_sword first to maintain survival. Eventually, the agent was able to identify the missing requirement through guessing and trying after some unsuccessful trials, and craft the wooden_pickaxe. However, the confusion delayed the agent‚Äôs progress and therefore causes the performance gap with the agent conditioned on the full context (row 5). Reasoning In the middle 4 rows of Table 3, we investigate the contribution of different prompting methods toward performance of the model. Conditioned on the full context from the L ATEX paper, we report the performance of GPT-4 directly prompted to output the action using the last question qaonly (row 8); GPT-4 prompted with all questions from Qactbut in a list without the DAG dependencies D (row 7); GPT-4 prompted ‚ÄúLet‚Äôs think step-by-step‚Äù (Kojima et al., 2022) about the next action, and prompted to choose a permissible action qawith let‚Äôs think step-by-step followed by qaagain (row 6); GPT-4 with SPRING (row 5). Relative to our method, we observe that directly prompting the LLM for the action leads to a 80% performance drop, and therefore does not result in a meaningful agent. The popular chain-of-thought reasoning prompt ‚ÄúLet‚Äôs think step-by-step‚Äù (Kojima et al., 2022) achieves reasonable reward with a40% drop, but with a high 60.27% standard deviation. Qualitatively, we observe that the LLM produces inconsistent outputs across time steps, due to the fact that the model‚Äôs chain-of-thought is not directed or controlled through the prompt. Therefore, LLMs prompted with ‚ÄúLet‚Äôs think step-by-step‚Äù alone cannot reliably follow a good policy. Controlling the chain-of-thought with 9 questions from Qact(section 2.2) successfully controls the consistency of LLM outputs across time qualitatively. However, we observe that the LLM often ignores earlier questions at later stages of QA when all previous questions are presented in a list, leading to random disagreements in answers. For example, the LLM may correctly identify that it needs ‚Äúwooden pickaxe‚Äù to mine the stone ahead in the first few questions, but forgets about the requirement later when it‚Äôs prompted for actions. Quantitatively, the model performs 65% worse with 90% variance without the DAG. The introduction of DAG eliminates this problem by reducing the QA context length to only a question‚Äôs immediate parents. Overall, SPRING achieves the best performance and a small 6%performance standard deviation, due to more consistent reasoning over time steps with better focus and fewer distractions. LLM In the last two rows of Table 3, we show that the same architecture does not work well with GPT-3.5-turbo. We believe the observed 73% performance gap mainly comes from GPT-3.5-turbo‚Äôs worse performance at following fine-grained instructions in each of the questions, which are required for chain-of-thought reasoning with SPRING. 3.4 Cost for running SPRING The number of queries per step is 9 (same as the number of questions). Each game could take around 300 steps, but can go up to 500 steps in the worst case. Therefore, the maximum number of queries per game can go up to 4500. According to the public price of GPT-4 API, each query costs around 0.065. The total cost should be less than 270 (USD) per game with GPT-4. Given the progress in chip-set development, we are hopeful that the inference costs will lower, making LLMs more accessible for the public. 3.5 Potential for Benchmarking LLMs In Table 4, we compare popular publicly available LLMs including GPT-4 (OpenAI, 2023), GPT-3.5 (text-davinci-003) (OpenAI, OpenAI), Bard (Manyika, Manyika), Claude (Anthropic, Anthropic), Alpaca-30b (Taori et al., 2023) under the same setting on Crafter, following the same step-by-step prompt as Section 3.3 and Table 3. We observe a clear separation in performance under our setting. 4 Related Work RL v.s. LLMs Comparing LLM-based agents against RL agents brings forth a intriguing discussion. RL algorithms do not require prior knowledge such as instruction manuals, and could continually 5Pricing estimated according to OpenAI API as of October 17 2023 8 Method Achievement Depth Reward Questions per Step Step-by-step prompt + GPT-4 5 7.3¬±4.4 2 Step-by-step prompt + text-davinci-003 4 4.5¬±2.1 2 Step-by-step prompt + Bard 0 ‚àí0.9¬±0 2 Step-by-step prompt + Claude 1 0.1¬±0.1 2 Step-by-step prompt + Alpaca-30b 1 0.1¬±0.1 2 Random 1 2.1¬±1.3 0 Table 4: Comparison of different LLMs under the same setting using the context Cgenerated with text-davinci-003 following the same step-by-step prompt as Section 3.3 and Table 3. improve given enough trials. However, RL algorithms are typically trained with reward functions deliberately engineered to cover all in-game achievements (Hafner, 2021; Hafner et al., 2023). Such reward functions often require a lot of expert knowledge and careful formulation. On the other hand, LLM agents like SPRING does not need the reward (we report reward for comparison purpose, SPRING does not use the reward during inference), but instead uses external knowledge from the L ATEX source code. In addition, current LLM agents lack the capabilities of improving from interactions. We hope future works would be able to leverage the benefits of both paradigms in order to achieve efficient planning with fine-grained control. Policy Informed by Natural Language Instructions In the instruction following setting, step-by- step instructions have been used to generate auxiliary rewards, when environment rewards are sparse. Goyal et al. (2019); Wang et al. (2019) use auxiliary reward-learning modules trained offline to predict whether trajectory segments correspond to natural language annotations of expert trajectories. There has been many attempts to go beyond instruction following to learning from unstructured natural language (Branavan et al., 2012; Goldwasser and Roth, 2014; Zhong et al., 2021; Wang and Narasimhan, 2021). Zhong et al. (2021); Wang and Narasimhan (2021) make use of special architectures to learn reasoning on grid worlds with template-generated instructions. However, the model requires 200 million training samples from templates identical to the test environments. Such a training requirement limiting the generalization of the model and causes performance loss even on slightly bigger grid worlds with identical mechanics. Wu et al. (2023) proposes a summary (Read) and reasoning (Reward) through a QA prompting framework with an open-source QA LLM (Tafjord and Clark, 2021). The framework demonstrates the possibility of an using real-world human-written manuals to improve RL performance on popular games, despite limiting the interaction types to only ‚Äúhit‚Äù. Our framework handles all 17 kinds of interactions available in the game. Moreover, our framework makes use of information on tech-tree dependencies, and suggestions on desired policies extracted from the academic paper. LLMs for Planning LLMs have shown promising results at high-level planning in indoor embodied manipulation environments. Huang et al. (2022); Ahn et al. (2022) primarily explores generating plans for embodied tasks, with limited actions space and trajectory length. Song et al. (2022); Wu et al. (2022) enhances Ahn et al. (2022) with greater action diversity and real-time re-planning. However, a lot of the high-level plans lack executability and has to be post-processed to meet specific task requirements, thus limiting the generalization to complex open world tasks. In addition, all prior works along this line operates on few-shot human/expert generated demonstrations containing up to 17 trajectories to provide context for LLMs, which requires more manual labor, and may limit the generalization to unseen scenarios. In comparison, our SPRING framework requires no demonstration. LLMs for Open World Games Compared to popular indoor manipulation tasks, planning in open- world game environments poses the following additional challenges. 1) Long horizon. Due to the nature how in-game achievement/technology progresses, a successful gameplay can easily go beyond 200 steps (Hafner, 2021). 2) Parallel objectives. Open-world environments contain objectives that can be pursued in parallel and often require prioritization (Wang et al., 2023). Therefore, open world games are significantly more challenging than current indoor embodied manipulation environments. 9 Du et al. (2023) applies LLMs as high-level planners to assist RL exploration in Crafter. Wang et al. (2023); Yuan et al. (2023) use LLMs as high-level planner and goal selector to control a low level-policy in Minecraft. Tsai et al. (2023) studies the capabilities of ChatGPT on text games. Notably, all prior works require expert or human generated example trajectories as context for the LLMs. Since the example trajectories do not cover all scenarios, all prior works may encounter unseen situation during evaluation, leading to an overall performance inferior to state-of-the-art RL algorithms (Hessel et al., 2018; Guss et al., 2021; Hafner et al., 2023), trained without the use of LLMs. To our knowledge, we are the first to show an LLM (GPT-4) achieving performance surpassing the state-of-the-art RL algorithms in a challenging open world game. 5 Limitations and Future Work A primary limitation in using an LLM to support interaction with the environment is the need for object recognition and grounding. However, these limitations do not exist in environments that offer accurate object information, such as contemporary games (Fan et al., 2022) and virtual reality worlds (Kolve et al., 2017). While pre-trained visual backbones (He et al., 2017) perform poorly on games, they have shown reasonable performance for environments closer to the real-world (Shridhar et al., 2020). In addition, with recent progress on visual-language models (Bubeck et al., 2023; Driess et al., 2023; Liu et al., 2023; Zou et al., 2023), we believe there will be reliable and generalizable solutions to visual-language understanding in the foreseeable future. Future works could focus on address the requirement for a separate visual descriptor with large visual-language models. 6 Conclusions In this work, we explore solving the Crafter (Hafner, 2021) RL benchmark using the latest LLMs by reading the L ATEX source code of an academic paper about the benchmark. We study the quality of in-context ‚Äúreasoning‚Äù and ‚Äúplanning‚Äù induced by different forms of prompts under the setting of the Crafter open-world environment. To enforce consistent planning and execution over hundreds of environment steps, we introduce SPRING, an innovative prompting framework for LLMs designed to enable in-context chain-of-thought planning and reasoning. Quantitatively, SPRING with GPT-4 outperforms all state-of-the-art RL baselines, trained for 1M steps, without any training. Our work demonstrates the reliability of LLMs for understanding and reasoning with human knowl- edge. We hope that our work points to a new way of integrating human prior knowledge into RL training through intrinsic rewards (Wu et al., 2023), hierarchical RL (Shu et al., 2017), or sub-goal planning (Wang et al., 2023; Wu et al., 2023). Broader Impacts Our research on LLM holds potential for both positive and negative impacts. The benefits include better understanding of the powers of LLM and enhanced integration of prior knowledge, which could lead to advancement in various AI topics. However, the risks may involve reliance on computationally demanding models, game cheating or exploitation, and reliance on prior knowledge. References Ahn, M., A. Brohan, N. Brown, Y . Chebotar, O. Cortes, B. David, C. Finn, C. Fu, K. Gopalakrishnan, K. Hausman, A. Herzog, D. Ho, J. Hsu, J. Ibarz, B. Ichter, A. Irpan, E. Jang, R. J. Ruano, K. Jeffrey, S. Jesmonth, N. J. Joshi, R. Julian, D. Kalashnikov, Y . Kuang, K.-H. Lee, S. Levine, Y . Lu, L. Luu, C. Parada, P. Pastor, J. Quiambao, K. Rao, J. Rettinghouse, D. Reyes, P. Sermanet, N. Sievers, C. Tan, A. Toshev, V . Vanhoucke, F. Xia, T. Xiao, P. Xu, S. Xu, M. Yan, and A. Zeng (2022). Do as i can, not as i say: Grounding language in robotic affordances. Ahn, M., A. Brohan, N. Brown, Y . Chebotar, O. Cortes, B. David, C. Finn, K. Gopalakrishnan, K. Hausman, A. Herzog, et al. (2022). Do as i can, not as i say: Grounding language in robotic affordances. arXiv preprint arXiv:2204.01691 . Anthropic. Introducing claude. https://www.anthropic.com/index/introducing-claude . Accessed: May 27, 2023. 10 Badia, A. P., B. Piot, S. Kapturowski, P. Sprechmann, A. Vitvitskyi, Z. D. Guo, and C. Blundell (2020). Agent57: Outperforming the atari human benchmark. In International Conference on Machine Learning , pp. 507‚Äì517. PMLR. Branavan, S., D. Silver, and R. Barzilay (2012). Learning to win by reading manuals in a monte-carlo framework. Journal of Artificial Intelligence Research 43 , 661‚Äì704. Brown, T. B., B. Mann, N. Ryder, M. Subbiah, J. Kaplan, P. Dhariwal, A. Neelakantan, P. Shyam, G. Sastry, A. Askell, et al. (2020). Language models are few-shot learners. arXiv preprint arXiv:2005.14165 . Bubeck, S., V . Chandrasekaran, R. Eldan, J. Gehrke, E. Horvitz, E. Kamar, P. Lee, Y . T. Lee, Y . Li, S. Lundberg, et al. (2023). Sparks of artificial general intelligence: Early experiments with gpt-4. arXiv preprint arXiv:2303.12712 . Burda, Y ., H. Edwards, A. Storkey, and O. Klimov (2018). Exploration by random network distillation. arXiv preprint arXiv:1810.12894 . Chowdhery, A., S. Narang, J. Devlin, M. Bosma, G. Mishra, A. Roberts, P. Barham, H. W. Chung, C. Sutton, S. Gehrmann, et al. (2022). Palm: Scaling language modeling with pathways. arXiv preprint arXiv:2204.02311 . Driess, D., F. Xia, M. S. Sajjadi, C. Lynch, A. Chowdhery, B. Ichter, A. Wahid, J. Tompson, Q. Vuong, T. Yu, et al. (2023). Palm-e: An embodied multimodal language model. arXiv preprint arXiv:2303.03378 . Du, Y ., O. Watkins, Z. Wang, C. Colas, T. Darrell, P. Abbeel, A. Gupta, and J. Andreas (2023). Guiding pretraining in reinforcement learning with large language models. arXiv preprint arXiv:2302.06692 . Fan, L., G. Wang, Y . Jiang, A. Mandlekar, Y . Yang, H. Zhu, A. Tang, D.-A. Huang, Y . Zhu, and A. Anandkumar (2022). Minedojo: Building open-ended embodied agents with internet-scale knowledge. arXiv preprint arXiv:2206.08853 . Fu, J., A. Kumar, O. Nachum, G. Tucker, and S. Levine (2020). D4rl: Datasets for deep data-driven reinforcement learning. arXiv preprint arXiv:2004.07219 . Goldwasser, D. and D. Roth (2014). Learning from natural instructions. Machine learning 94 , 205‚Äì232. Goyal, P., S. Niekum, and R. J. Mooney (2019). Using natural language for reward shaping in reinforcement learning. arXiv preprint arXiv:1903.02020 . Guss, W. H., M. Y . Castro, S. Devlin, B. Houghton, N. S. Kuno, C. Loomis, S. Milani, S. Mohanty, K. Nakata, R. Salakhutdinov, et al. (2021). The minerl 2020 competition on sample efficient reinforcement learning using human priors. arXiv preprint arXiv:2101.11071 . Hafner, D. (2021). Benchmarking the spectrum of agent capabilities. arXiv preprint arXiv:2109.06780 . Hafner, D., T. Lillicrap, M. Norouzi, and J. Ba (2020). Mastering atari with discrete world models. arXiv preprint arXiv:2010.02193 . Hafner, D., J. Pasukonis, J. Ba, and T. Lillicrap (2023). Mastering diverse domains through world models. arXiv preprint arXiv:2301.04104 . He, K., G. Gkioxari, P. Doll√°r, and R. Girshick (2017). Mask r-cnn. In Proceedings of the IEEE international conference on computer vision , pp. 2961‚Äì2969. Hessel, M., J. Modayil, H. Van Hasselt, T. Schaul, G. Ostrovski, W. Dabney, D. Horgan, B. Piot, M. Azar, and D. Silver (2018). Rainbow: Combining improvements in deep reinforcement learning. InThirty-second AAAI conference on artificial intelligence . Huang, W., P. Abbeel, D. Pathak, and I. Mordatch (2022). Language models as zero-shot planners: Extracting actionable knowledge for embodied agents. 11 Jiang, Y ., J. Z. Kolter, and R. Raileanu (2022). Uncertainty-driven exploration for generalization in reinforcement learning. In Deep Reinforcement Learning Workshop NeurIPS 2022 . Kojima, T., S. S. Gu, M. Reid, Y . Matsuo, and Y . Iwasawa (2022). Large language models are zero-shot reasoners. arXiv preprint arXiv:2205.11916 . Kolve, E., R. Mottaghi, W. Han, E. VanderBilt, L. Weihs, A. Herrasti, D. Gordon, Y . Zhu, A. Gupta, and A. Farhadi (2017). AI2-THOR: An Interactive 3D Environment for Visual AI. arXiv . Liu, S., Z. Zeng, T. Ren, F. Li, H. Zhang, J. Yang, C. Li, J. Yang, H. Su, J. Zhu, et al. (2023). Grounding dino: Marrying dino with grounded pre-training for open-set object detection. arXiv preprint arXiv:2303.05499 . Madaan, A., N. Tandon, P. Gupta, S. Hallinan, L. Gao, S. Wiegreffe, U. Alon, N. Dziri, S. Prabhumoye, Y . Yang, et al. (2023). Self-refine: Iterative refinement with self-feedback. arXiv preprint arXiv:2303.17651 . Manyika, J. An overview of bard: an early experiment with generative ai. https://ai.google/ static/documents/google-about-bard.pdf . Accessed: May 27, 2023. OpenAI. Gpt-3.5. https://platform.openai.com/docs/models/gpt-3-5 . Accessed: May 27, 2023. OpenAI (2023). Gpt-4 technical report. Ouyang, L., J. Wu, X. Jiang, D. Almeida, C. Wainwright, P. Mishkin, C. Zhang, S. Agarwal, K. Slama, A. Ray, et al. (2022). Training language models to follow instructions with human feedback. Advances in Neural Information Processing Systems 35 , 27730‚Äì27744. Schrittwieser, J., I. Antonoglou, T. Hubert, K. Simonyan, L. Sifre, S. Schmitt, A. Guez, E. Lockhart, D. Hassabis, T. Graepel, et al. (2020). Mastering atari, go, chess and shogi by planning with a learned model. Nature 588 (7839), 604‚Äì609. Schulman, J., F. Wolski, P. Dhariwal, A. Radford, and O. Klimov (2017). Proximal policy optimization algorithms. arXiv preprint arXiv:1707.06347 . Sekar, R., O. Rybkin, K. Daniilidis, P. Abbeel, D. Hafner, and D. Pathak (2020). Planning to explore via self-supervised world models. In International Conference on Machine Learning , pp. 8583‚Äì8592. PMLR. Shinn, N., B. Labash, and A. Gopinath (2023). Reflexion: an autonomous agent with dynamic memory and self-reflection. arXiv preprint arXiv:2303.11366 . Shridhar, M., X. Yuan, M.-A. C√¥t√©, Y . Bisk, A. Trischler, and M. Hausknecht (2020). Alfworld: Align- ing text and embodied environments for interactive learning. arXiv preprint arXiv:2010.03768 . Shu, T., C. Xiong, and R. Socher (2017). Hierarchical and interpretable skill acquisition in multi-task reinforcement learning. arXiv preprint arXiv:1712.07294 . Silver, D., J. Schrittwieser, K. Simonyan, I. Antonoglou, A. Huang, A. Guez, T. Hubert, L. Baker, M. Lai, A. Bolton, et al. (2017). Mastering the game of go without human knowledge. na- ture 550 (7676), 354‚Äì359. Smith, S., M. Patwary, B. Norick, P. LeGresley, S. Rajbhandari, J. Casper, Z. Liu, S. Prabhumoye, G. Zerveas, V . Korthikanti, E. Zheng, R. Child, R. Y . Aminabadi, J. Bernauer, X. Song, M. Shoeybi, Y . He, M. Houston, S. Tiwary, and B. Catanzaro (2022). Using deepspeed and megatron to train megatron-turing NLG 530b, A large-scale generative language model. CoRR abs/2201.11990 . Song, C. H., J. Wu, C. Washington, B. M. Sadler, W.-L. Chao, and Y . Su (2022). Llm-planner: Few-shot grounded planning for embodied agents with large language models. arXiv preprint arXiv:2212.04088 . Tafjord, O. and P. Clark (2021). General-purpose question-answering with macaw. arXiv preprint arXiv:2109.02593 . 12 Taori, R., I. Gulrajani, T. Zhang, Y . Dubois, X. Li, C. Guestrin, P. Liang, and T. B. Hashimoto (2023). Stanford alpaca: An instruction-following llama model. https://github.com/tatsu-lab/ stanford_alpaca . Accessed: May 27, 2023. Tsai, C. F., X. Zhou, S. S. Liu, J. Li, M. Yu, and H. Mei (2023). Can large language models play text games well? current state-of-the-art and open questions. arXiv preprint arXiv:2304.02868 . Vinyals, O., I. Babuschkin, W. M. Czarnecki, M. Mathieu, A. Dudzik, J. Chung, D. H. Choi, R. Powell, T. Ewalds, P. Georgiev, et al. (2019). Grandmaster level in starcraft ii using multi-agent reinforcement learning. Nature 575 (7782), 350‚Äì354. Wang, H. and K. Narasimhan (2021). Grounding language to entities and dynamics for generalization in reinforcement learning. arXiv preprint arXiv:2101.07393 . Wang, X., Q. Huang, A. Celikyilmaz, J. Gao, D. Shen, Y .-F. Wang, W. Y . Wang, and L. Zhang (2019). Reinforced cross-modal matching and self-supervised imitation learning for vision- language navigation. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition , pp. 6629‚Äì6638. Wang, Z., S. Cai, A. Liu, X. Ma, and Y . Liang (2023). Describe, explain, plan and select: Interactive planning with large language models enables open-world multi-task agents. arXiv preprint arXiv:2302.01560 . Wei, J., M. Bosma, V . Y . Zhao, K. Guu, A. W. Yu, B. Lester, N. Du, A. M. Dai, and Q. V . Le (2021). Finetuned language models are zero-shot learners. arXiv preprint arXiv:2109.01652 . Wu, Y ., Y . Fan, P. P. Liang, A. Azaria, Y . Li, and T. M. Mitchell (2023). Read and reap the rewards: Learning to play atari with the help of instruction manuals. arXiv preprint arXiv:2302.04449 . Wu, Y ., S. Y . Min, Y . Bisk, R. Salakhutdinov, A. Azaria, Y . Li, T. Mitchell, and S. Prabhumoye (2023). Plan, eliminate, and track‚Äìlanguage models are good teachers for embodied agents. arXiv preprint arXiv:2305.02412 . Wu, Y ., S. Y . Min, Y . Bisk, R. Salakhutdinov, and S. Prabhumoye (2022). Tackling alfworld with action attention and common sense from language models. Yuan, H., C. Zhang, H. Wang, F. Xie, P. Cai, H. Dong, and Z. Lu (2023). Plan4mc: Skill reinforcement learning and planning for open-world minecraft tasks. arXiv preprint arXiv:2303.16563 . Zhong, V ., A. W. Hanjie, S. I. Wang, K. Narasimhan, and L. Zettlemoyer (2021). Silg: The multi-environment symbolic interactive language grounding benchmark. arXiv preprint arXiv:2110.10661 . Zou, X., J. Yang, H. Zhang, F. Li, L. Li, J. Gao, and Y . J. Lee (2023). Segment everything everywhere all at once. arXiv preprint arXiv:2304.06718 . 13 A Example Trajectory ============Step: 0, Cumulative Reward: 0.0============ You took action make_wood_sword. You see: - tree 5 steps to your north-east - cow 6 steps to your north-west You face grass at your front (south). Your status: - health: 9/9 - food: 9/9 - drink: 9/9 - energy: 9/9 You have nothing in your inventory. ------------ QA ------------ Question: Action Answer: Move North Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Tree: Provides wood which is used to craft tools and structures like the table. Requirement: An axe or hands to chop down the tree. 2. Cow: Provides food when killed, restoring your health points. Requirement: A weapon like a sword to kill the cow or hands to punch it. 3. Grass: Generally provides no resources, but it can occasionally drop seeds for planting. No requirements to interact with grass. Question: What was the last action taken by the player? Answer: The last action taken by the player was make_wood_sword. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Tree: Yes, the requirements are met as you can use your hands to chop down the tree, even though it will be slower than using an axe. 2. Cow: Yes, the requirements are met as you have crafted a wood sword to kill the cow, which is more efficient than using your hands. 3. Grass: Yes, there are no specific requirements to interact with grass, and you can simply walk on it or punch it with your hands if necessary. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Chop down the tree to collect wood (Priority: 5/5) - Wood is essential for crafting more tools and structures, as well as potentially making a shelter. 2. Kill the cow for food (Priority: 4/5) - Ensuring a sufficient food supply is crucial for maintaining health and being able to accomplish other tasks. 3. Explore the environment (Priority: 3/5) - It is essential to gain more information about available resources and potential dangers in the surrounding area so that you can plan effectively. Priority level is indicated out of 5, where 5 is the highest priority and 1 is the lowest priority. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Requirements for the top sub-task (Chop down the tree to collect wood): 1. Approach the tree: Navigate to the tree located 5 steps to your north-east. What the player should do first: 1. Move North-East: Move in the direction of the tree to eventually reach it and then prepare to chop it down. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: Priority 1: Move North - Requirement: Flat ground above the agent. Priority 2: Move East - Requirement: Flat ground right to the agent. Priority 3: Move East - Requirement: Flat ground right to the agent. Priority 4: Do (Chop down the tree) - Requirement: Facing the tree; have necessary tool (wooden sword can be used, but a wooden pickaxe would be preferred). Priority 5: Collect Wood - Requirement: Successfully chopped the tree, and wood is available to pick up. Question: For each action in the list, are the requirements met? Answer: Priority 1: Move North - Yes, the requirement is met as flat ground is above the agent. Priority 2: Move East - Yes, the requirement is met as flat ground is available to the right of the agent. Priority 3: Move East - Yes, the requirement is met as flat ground is available to the right of the agent. Priority 4: Do (Chop down the tree) - The requirement is partially met; you are facing the tree and have a wooden sword, but a wooden pickaxe is preferred for chopping down trees. Priority 5: Collect Wood - No, the requirement is not met yet, as you have not successfully chopped down the tree or accessed the wood. Question: Did the last player action succeed? Why? Answer: 14 I cannot determine if the last player action succeeded or not because there is no information provided about the result of the action make_wood_sword. Normally, if the action was successful, the player would have a wood sword in their inventory or an updated game state would include the new item. Question: Choose the best executable action from above. Answer: The best executable action from the above list is Priority 1: Move North, as the requirement of having flat ground above the agent is met. ============Step: 1, Cumulative Reward: 0.0============ You took action move_north. You see: - tree 4 steps to your east - cow 6 steps to your north-west You face grass at your front (north). Your status: - health: 9/9 - food: 9/9 - drink: 9/9 - energy: 9/9 You have nothing in your inventory. ------------ QA ------------ Question: Action Answer: Move East Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Tree: Provides wood, requires a wood or better pickaxe to collect. 2. Cow: Provides meat (food), requires a sword or other weapon to defeat and collect the resource. 3. Grass: No direct resources, can be used to build a shelter or pathway with no specific tool requirements. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_north. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Tree: Yes, your recent action was making a wood sword so you can interact with the tree to collect wood. 2. Cow: Yes, you have a wood sword to defeat the cow, so you can interact with it. 3. Grass: Yes, there are no specific tool requirements to interact with the grass. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Collect wood from the tree. Priority: 5/5 2. Defeat the cow and collect meat (food). Priority: 4/5 3. Interact with grass to clear a path or build a shelter. Priority: 3/5 Question: What are the requirements for the top sub-task? What should the player do first? Answer: The requirements for the top sub-task (collect wood from the tree) are to have a wood pickaxe in the inventory and be close enough to the tree. The player should first move closer to the tree located 4 steps to the east. Once the player is nearby, they should use their wood pickaxe to collect wood from the tree. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move East (Requirement: Flat ground to the right of the agent) - to get closer to the tree. 2. Priority 2: Move North (Requirement: Flat ground above the agent) - to be in front of the tree. 3. Priority 3: Make Wood Pickaxe (Requirement: Nearby table; wood in inventory) - to be able to collect wood from the tree. 4. Priority 4: Do (Requirement: Facing tree or material; have a wood pickaxe) - to collect wood from the tree. 5. Priority 5: Make Wood Sword (Requirement: Nearby table; wood in inventory) - to defend yourself against potential threats (such as monsters). Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Move East (Flat ground to the right of the agent) - Yes, the requirement is met as the agent is on flat ground. 2. Priority 2: Move North (Flat ground above the agent) - Yes, the requirement is met as the agent is on flat ground. 3. Priority 3: Make Wood Pickaxe (Nearby table; wood in inventory) - No, the requirement is not met as the agent does not have a nearby table and wood in their inventory. 4. Priority 4: Do (Facing tree or material; have a wood pickaxe) - No, the requirement is not met as the agent does not have a wood pickaxe in their inventory. 5. Priority 5: Make Wood Sword (Nearby table; wood in inventory) - No, the requirement is not met as the agent does not have a nearby table and wood in their inventory. Question: Did the last player action succeed? Why? Answer: Yes, the last player action (move_north) succeeded because there was flat ground available to the north of the player‚Äôs position, allowing them to move in that direction. Question: Choose the best executable action from above. Answer: 15 The best executable action from the list above is Priority 1: Move East, as the requirement of flat ground to the right of the agent is met. ============Step: 2, Cumulative Reward: 0.0============ You took action move_east. You see: - tree 3 steps to your east - cow 4 steps to your east You face grass at your front (east). Your status: - health: 9/9 - food: 9/9 - drink: 9/9 - energy: 9/9 You have nothing in your inventory. ------------ QA ------------ Question: Action Answer: Move East Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Tree: Provides wood when chopped down; requires having a wood pickaxe or better to chop down. 2. Cow: Provides food (meat) when killed; requires having a wood sword or better to kill. 3. Grass: Can be used to make plantations or used for aesthetic purposes; requires being dug to collect. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_east. Question: For each object in the list, are the requirements met for interaction? Answer: Based on the current observation and inventory: 1. Tree: The requirement is not met because you need a wood pickaxe or better to chop down the tree, and you have nothing in your inventory. 2. Cow: The requirement is not met because you need a wood sword or better to kill the cow, and you have nothing in your inventory. 3. Grass: The requirement is met as you can dig the grass without any special tool. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Collect Wood (Priority: 5/5) - Collecting wood is essential to craft tools and build structures. First, you need to craft a wood pickaxe to chop down trees and obtain wood. However, you currently don‚Äôt have the required tools to interact with the tree. 2. Craft a Wood Pickaxe and Wood Sword (Priority: 4/5) - Once you collect wood, you should craft a wood pickaxe to enable collecting stone and a wood sword to defend yourself and hunt for food. You need a table to craft these items, so you might need to find or place one. 3. Collect Food and Water (Priority: 3/5) - Maintaining your food and drink levels is crucial for survival. You have observed a cow nearby, but you currently don‚Äôt have the required tools to kill it. You should prioritize crafting tools, and then hunt the cow for food. For water, you need to find a water source like a lake or river to drink from. Note: The priority scale is from 1 to 5, with 1 being the lowest priority and 5 being the highest priority. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Top Sub-task: Collect Wood Requirements: 1. Facing the tree 2. Having the necessary tool (wood pickaxe) to chop down the tree and collect wood What should the player do first: Before collecting wood, the player needs to craft a wood pickaxe. To craft a wood pickaxe, the player requires a table and wood in their inventory. Since the player currently doesn‚Äôt have any tools or a table, they should first find or place a table, then collect wood using their hands or any available tool, and use the table to craft a wood pickaxe. After crafting the wood pickaxe, the player can chop down the tree and collect wood more efficiently, which can be used for crafting other tools and structures. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move East (Requirement: Flat ground right to the agent) The player should move east towards the tree to collect wood, which will help them in crafting a table and the necessary tools. 2. Priority 2: Do (Chop tree) (Requirement: Facing tree; have necessary tool or bare hands) Once the player is near the tree, they should chop down the tree using their hands or any available tool to collect wood. 3. Priority 3: Place Table (Requirement: Wood in inventory) After collecting wood, the player should place a table using the wood in their inventory. This table will help the player create the required tools. 16 4. Priority 4: Make Wood Pickaxe (Requirement: Nearby table; wood in inventory) Using the table, the player should craft a wood pickaxe, which will help them collect resources more efficiently. 5. Priority 5: Collect Wood using Wood Pickaxe (Requirement: Facing the tree, having the wood pickaxe) With the wood pickaxe, the player can chop down trees and collect wood faster, allowing them to craft more tools and structures for survival. Question: For each action in the list, are the requirements met? Answer: 1. Move East: Yes, the requirement is met. The player‚Äôs most recent observation states they‚Äôre facing grass towards the east, indicating there‚Äôs a flat ground on the east side. 2. Do (Chop tree): No, the requirement is not met yet. The player needs to move closer to the tree (3 steps to the east) and face it to meet the requirement for chopping down the tree. 3. Place Table: No, the requirement is not met. The player needs to collect wood by chopping the tree first. 4. Make Wood Pickaxe: No, the requirement is not met. The player needs to collect wood and place a table to craft a wood pickaxe. 5. Collect Wood using Wood Pickaxe: No, the requirement is not met. The player needs to create a wood pickaxe first and then face a tree to collect wood with the pickaxe. Question: Did the last player action succeed? Why? Answer: Yes, the last player action (move_east) succeeded because there was flat ground (grass) to the east, allowing the player to move in that direction. Question: Choose the best executable action from above. Answer: The best executable action from the list above is Move East as its requirement (flat ground right to the agent) is met according to the player‚Äôs most recent observation. ============Step: 3, Cumulative Reward: 0.0============ You took action move_east. You see: - stone 7 steps to your south-east - tree 2 steps to your east - cow 3 steps to your east You face grass at your front (east). Your status: - health: 9/9 - food: 9/9 - drink: 9/9 - energy: 9/9 You have nothing in your inventory. ------------ QA ------------ Question: Action Answer: Move East Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Tree: Provides wood which can be used to craft tools and weapons; Requirements: None, just approach the tree and interact with it. 2. Cow: Provides meat which can be consumed for food; Requirements: None, just approach the cow and interact with it. 3. Stone: Provides stone which can be used to craft tools, weapons, and build structures; Requirements: Requires a wood pickaxe or better for efficient collection, just approach the stone and interact with it. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_east. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Tree: Yes, the requirements are met for interaction as there are no specific tools needed to collect wood from the tree. You can approach it and interact with it directly. 2. Cow: Yes, the requirements are met for interaction as there are no specific tools needed to obtain meat from the cow. However, having a weapon like a wood sword would be helpful for efficient collection. You can approach it and interact with it directly. 3. Stone: No, the requirements are not met for interaction as you need a wood pickaxe or better to efficiently collect the stone. You currently do not have any pickaxe in your inventory. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Collect wood from the nearby tree (Priority: 5/5) - This is the most essential sub-task, as wood is the basic resource needed to craft tools and weapons, such as a wood pickaxe, which would enable collecting stone. 2. Craft a wood pickaxe after collecting wood (Priority: 4/5) - Crafting a wood pickaxe will be necessary to efficiently mine stone, another important resource for crafting better tools and building structures. 17 3. Obtain meat from the nearby cow (Priority: 3/5) - While not as immediately essential as collecting wood or crafting tools, obtaining meat from the cow will help ensure a steady food supply and keep the player‚Äôs food level at a safe point. Having a weapon like a wood sword would be helpful, but not strictly necessary for this sub-task. Question: What are the requirements for the top sub-task? What should the player do first? Answer: The top sub-task is to collect wood from the nearby tree. Requirements: - Be close enough to the tree in order to interact with it. As the tree is 2 steps to the east of the player, the first thing the player should do is move east to get closer to the tree until they are adjacent to it. Then, they can start interacting with the tree to collect wood. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move East (Action 2) - The requirement is that there is flat ground to the east of the player. 2. Priority 2: Move East (Action 2) - The requirement is that there is flat ground to the east of the player, and the tree is not yet adjacent. 3. Priority 3: Do (Action 5) - The requirements are facing the tree (which is now adjacent after moving east) and not having any necessary tool since collecting wood doesn‚Äôt require a specific tool. 4. Priority 4: Place Table (Action 8) - The requirement is having wood in the inventory (after collecting wood from the tree ). 5. Priority 5: Make Wood Pickaxe (Action 11) - The requirement is being near the placed table and having wood in the inventory. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Move East (Action 2) - Yes, the requirement is met as there is flat ground (grass) to the player‚Äôs east. 2. Priority 2: Move East (Action 2) - Yes, the requirement is met as there is flat ground (grass) to the player‚Äôs east and the tree is still two steps away. 3. Priority 3: Do (Action 5) - Not yet, as the player needs to move east one more step to be adjacent to the tree, then this requirement will be met. 4. Priority 4: Place Table (Action 8) - Not yet, as the player needs to collect wood from the tree first. Once wood is collected, this requirement will be met. 5. Priority 5: Make Wood Pickaxe (Action 11) - Not yet, as the player needs to place a table and have wood in the inventory. Once a table is placed, and wood is in the inventory, this requirement will be met. Question: Did the last player action succeed? Why? Answer: Yes, the last player action move_east succeeded because there was flat ground (grass) in the direction the player wanted to move (east) and no obstacles were mentioned preventing the movement. Question: Choose the best executable action from above. Answer: The best executable action from above is Priority 1: Move East (Action 2), as its requirement of having flat ground to the east of the player is met. ============Step: 4, Cumulative Reward: 0.0============ You took action move_east. You see: - grass 1 steps to your west - stone 6 steps to your south-east - path 7 steps to your north-east - cow 3 steps to your south-east You face tree at your front (east). Your status: - health: 9/9 - food: 9/9 - drink: 9/9 - energy: 9/9 You have nothing in your inventory. ------------ QA ------------ Question: Action Answer: Do Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass: Resource: None. Requirement: None. 2. Stone: Resource: Stone for crafting tools, weapons, and building structures. Requirement: Wood pickaxe or better to collect. 18 3. Path: Resource: None. Requirement: None. It signifies a possible passage for exploration. 4. Cow: Resource: Food and leather. Requirement: Defeat the cow using a weapon, such as a wood sword or better. 5. Tree: Resource: Wood for crafting tools, weapons, building structures, and creating a table. Requirement: No specific tool required, but using an axe is more efficient. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_east. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass: Requirements met for interaction: Yes, you can walk on or step over grass without any specific requirements. 2. Stone: Requirements met for interaction: No, you need a wood pickaxe or better to collect stone, and you currently don‚Äôt have any pickaxe in your inventory. 3. Path: Requirements met for interaction: Yes, you can walk along the path without any specific requirements. 4. Cow: Requirements met for interaction: No, to properly interact with the cow (defeat it for resources), you need a weapon, such as a wood sword or better, which you don‚Äôt have in your inventory currently. 5. Tree: Requirements met for interaction: Yes, you can interact with the tree (collect wood) without any specific requirements or tools, but using an axe would be more efficient. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Priority 5/5 - Collect Wood from the Tree: The player should interact with the tree to collect wood, as it is essential for crafting tools, weapons, building structures, and creating a table. 2. Priority 4/5 - Craft a Wood Pickaxe: After collecting enough wood, the player should craft a wood pickaxe using a table. The wood pickaxe will enable the collection of stone and other essential resources for further progress in the game. 3. Priority 3/5 - Defeat the Cow for Food and Leather: With a crafted weapon, the player can defeat the cow to acquire food and leather resources. Food will help maintain player health, while leather can be used for crafting armor or other items. However, it is advisable to craft a weapon beforehand. Question: What are the requirements for the top sub-task? What should the player do first? Answer: For the top sub-task of collecting wood from the tree, the requirements are: 1. The player needs to be near the tree. 2. No special tools are necessary to collect wood from a tree, although having an axe would make the process faster. Since these requirements are minimal and the player is already facing the tree, the player should begin by interacting with the tree (e.g. using the Do action) to collect wood. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Do: Interact with the tree to collect wood. Requirement: The player must be facing the tree (already fulfilled). 2. Priority 2: Move South: Move towards the stone to collect it. Requirement: Flat ground below the agent. 3. Priority 3: Do: Interact with the stone to collect it. Requirement: The player must be facing the stone. 4. Priority 4: Place Table: Craft and place a table for making tools. Requirement: Wood in the inventory (collected from the tree). 5. Priority 5: Make Wood Pickaxe: Craft a wood pickaxe for collecting stone and coal. Requirement: Nearby table (placed in Priority 4) and wood in the inventory (collected from the tree). Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Do: Interact with the tree to collect wood. Requirement: The player must be facing the tree. Status: Met (as mentioned in Player Observation Step 8 - You face tree at your front (east)). 2. Priority 2: Move South: Move towards the stone to collect it. Requirement: Flat ground below the agent. Status: Unknown (not provided in observation). 3. Priority 3: Do: Interact with the stone to collect it. Requirement: The player must be facing the stone. 19 Status: Not Met (player needs to move south and face the stone before taking this action). 4. Priority 4: Place Table: Craft and place a table for making tools. Requirement: Wood in the inventory (collected from the tree). Status: Not Met (player needs to take action in Priority 1 to collect wood first). 5. Priority 5: Make Wood Pickaxe: Craft a wood pickaxe for collecting stone and coal. Requirement: Nearby table (placed in Priority 4) and wood in the inventory (collected from the tree). Status: Not Met (player needs to take actions in Priority 1 and Priority 4 before this action can be taken). Question: Did the last player action succeed? Why? Answer: Yes, the last player action succeeded because the player was able to move east without encountering any obstacles or issues, as evident by the updated observation in Player Observation Step 8. Question: Choose the best executable action from above. Answer: The best executable action from the list above is Priority 1: Do: Interact with the tree to collect wood, as the requirement for this action is already met. ============Step: 5, Cumulative Reward: 1.0============ You took action do. You see: - stone 6 steps to your south-east - path 7 steps to your north-east - tree 3 steps to your north-east - cow 3 steps to your south-east You face grass at your front (east). Your status: - health: 9/9 - food: 9/9 - drink: 9/9 - energy: 9/9 Your inventory: - wood: 1 ------------ QA ------------ Question: Action Answer: Move North Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Resource it provides: Stone material for crafting tools and building structures. Requirement: Wood or Stone Pickaxe to collect. 2. Path: Resource it provides: Easy navigation and an indicator of nearby points of interest. Requirement: No requirements, just follow the path. 3. Tree: Resource it provides: Wood for crafting tools, weapons, and building structures. Requirement: No requirements, just punch or use an axe to collect wood. 4. Cow: Resource it provides: Food to restore your health. Requirement: No requirements, just kill the cow to collect food. 5. Grass: Resource it provides: Indicates plain ground and potential area for building or planting. Requirement: No requirements, just interact with it for further options available. Question: What was the last action taken by the player? Answer: The last action taken by the player was do. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Are the requirements met for interaction? No, you need a Wood or Stone Pickaxe to collect stone, and currently, you only have wood in your inventory. 2. Path: Are the requirements met for interaction? Yes, there are no requirements to interact with the path. You can simply follow the path to navigate the game world. 3. Tree: Are the requirements met for interaction? Yes, you can interact with the tree by punching it or using an axe to collect wood. Since you already collected wood from a tree previously, this requirement is met. 4. Cow: Are the requirements met for interaction? Yes, you can interact with the cow by trying to kill it for food. There are no requirements to accomplish this, but having a weapon like a wooden sword would make it easier. 5. Grass: 20 Are the requirements met for interaction? Yes, you can interact with grass without any requirements. Depending on the game mechanics, you may be able to build, plant or perform other actions on grassy areas. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Craft a Wooden Pickaxe (Priority: 5/5) Using the wood in your inventory, find a crafting table or create one and craft a wooden pickaxe. This will allow you to collect stone in the nearby area. 2. Collect Stone (Priority: 4/5) With a wooden pickaxe, collect the nearby stone. Stone is essential for creating more advanced tools, weapons, and building materials. 3. Craft a Wooden Sword (Priority: 3/5) Use your crafting table and the wood in your inventory to craft a wooden sword. This will help you protect yourself and more easily kill the cow to collect food. Question: What are the requirements for the top sub-task? What should the player do first? Answer: The requirements for the top sub-task (Craft a Wooden Pickaxe) are: 1. Have wood in your inventory (already fulfilled, as you have 1 wood). 2. Have a crafting table available. Since you don‚Äôt have a crafting table yet, the first thing you should do is create one. To do this, collect more wood from the nearby trees, and then craft a wooden table using the collected wood. Once the table is crafted, place it on the ground to start crafting the wooden pickaxe. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move North Requirement: Flat ground above of the agent. 2. Priority 2: Do (chop tree for more wood) Requirement: Facing a tree and have the necessary tool (or none required in this case). 3. Priority 3: Place Table Requirement: Wood in inventory. 4. Priority 4: Make Wood Pickaxe Requirement: Nearby table and wood in inventory. 5. Priority 5: Move South (towards the stone) Requirement: Flat ground below the agent. Question: For each action in the list, are the requirements met? Answer: 1. Move North Requirement: Flat ground above of the agent. - Yes, the requirement is met as there‚Äôs no obstacle mentioned in the observation to the north. 2. Do (chop tree for more wood) Requirement: Facing a tree and have the necessary tool (or none required in this case). - No, the requirement is not met because the player is currently facing grass, not a tree. 3. Place Table Requirement: Wood in inventory. - Yes, the requirement is met because the player has 1 wood in their inventory. 4. Make Wood Pickaxe Requirement: Nearby table and wood in inventory. - No, the requirement is not met because the player hasn‚Äôt placed a table yet. 5. Move South (towards the stone) Requirement: Flat ground below the agent. - Yes, the requirement is met as there‚Äôs no obstacle mentioned in the observation to the south. Question: Did the last player action succeed? Why? Answer: Yes, the last player action succeeded. The player was facing a tree at their front (east) and took the action do to collect wood. After the action, their inventory has 1 wood, which indicates that the action was successful. Question: Choose the best executable action from above. Answer: The best executable action from above is Move North because its requirement (flat ground above the agent) is met, and it is the highest priority action with its requirements fulfilled. ============Step: 6, Cumulative Reward: 0.0============ You took action move_north. You see: - stone 7 steps to your south-east - path 6 steps to your north-east - tree 2 steps to your east - iron 7 steps to your north-east - cow 3 steps to your south-east You face grass at your front (north). Your status: 21 - health: 9/9 - food: 9/9 - drink: 9/9 - energy: 9/9 Your inventory: - wood: 1 ------------ QA ------------ Question: Action Answer: Place Table Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone resource to craft tools and build structures; requires a wood pickaxe or better to mine. 2. Path: Provides a flat surface for easier movement and travel; no requirements. 3. Tree: Provides wood resource to craft tools and build structures; requires any type of axe to chop down. 4. Iron: Provides iron resource to craft advanced tools and weapons; requires a stone pickaxe or better to mine. 5. Cow: Provides food resource to restore health; requires any type of sword or by hand to kill. 6. Grass: No resource, just a location indicator; no requirements. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_north. Question: For each object in the list, are the requirements met for interaction? Answer: Based on the player‚Äôs current inventory and status: 1. Stone: No, as the player needs to craft a wood pickaxe with their wood first. 2. Path: Yes, the requirements are met for interaction, as it only provides flat surface for travel. 3. Tree: No, as the player needs to craft an axe first to chop it down. 4. Iron: No, as the player needs to craft a stone pickaxe before they can mine iron. 5. Cow: Yes, the requirements are met for interaction as the player can attempt to kill a cow with their hands or once they craft a sword. 6. Grass: Yes, the requirements are met for interaction as it only serves as a location indicator. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Priority 5/5: Craft a wood pickaxe using the wood in the inventory. This will allow the player to mine stone and, eventually, iron. 2. Priority 4/5: Chop down more trees to gather additional wood. This ensures that the player has enough resources to craft further tools, weapons, and build structures. 3. Priority 3/5: Interact with the cow to obtain food resources. This will help the player maintain their health during the game. Note that crafting a weapon first could make this process easier, but it‚Äôs not an immediate priority. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Requirements for crafting a wood pickaxe: - Nearby table - Wood in inventory The player already has 1 wood in their inventory. The first thing the player should do is place the table using the wood they have. Once the table is placed, the player can craft a wood pickaxe on this table. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Place Table (required: Wood in inventory) 2. Priority 2: Make Wood Pickaxe (required: Nearby table, wood in inventory) 3. Priority 3: Move East (required: Flat ground right of the agent) 4. Priority 4: Do (required: Facing tree, have necessary tool - Wood Pickaxe) 5. Priority 5: Collect Stone (required: Make Wood Pickaxe) Question: For each action in the list, are the requirements met? Answer: 1. Place Table: Yes (Wood is available in the inventory) 2. Make Wood Pickaxe: No (A nearby table is required, which has not been placed yet) 3. Move East: Yes (Flat ground is present to the right of the agent) 4. Do: No (Facing tree is required, and the agent is currently facing grass. Also, a Wood Pickaxe is required, which is not yet crafted) 5. Collect Stone: No (A Wood Pickaxe is required, which is not yet crafted) Question: Did the last player action succeed? Why? Answer: Yes, the last player action (move_north) succeeded because there was flat ground (grass) to the north which allowed the player to move in that direction. Question: Choose the best executable action from above. Answer: The best executable action from the list above is Place Table since the requirement (Wood in inventory) is met. ============Step: 7, Cumulative Reward: 0.0============ You took action place_table. You see: - stone 7 steps to your south-east 22 - path 6 steps to your north-east - tree 2 steps to your east - iron 7 steps to your north-east - cow 4 steps to your south-east You face grass at your front (north). Your status: - health: 9/9 - food: 9/9 - drink: 9/9 - energy: 9/9 Your inventory: - wood: 1 ------------ QA ------------ Question: Action Answer: Make Wood Pickaxe Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone resource, requires wood pickaxe to collect. 2. Path: Does not provide a resource, no requirement to interact. 3. Tree: Provides wood resource, no specific tool required to collect, but an axe would make it faster. 4. Iron: Provides iron resource, requires stone pickaxe to collect. 5. Cow: Provides food resource, no specific tool required to collect, but a sword will make it easier. 6. Grass: Does not provide a resource, no requirement to interact. Question: What was the last action taken by the player? Answer: The last action taken by the player was place_table. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: The requirement for the wood pickaxe is met since the player has already placed a table and has wood in their inventory to make a wood pickaxe. 2. Path: No requirements needed for interaction, the player can move on the path. 3. Tree: No specific tool is required, but an axe would speed up the process. The player can interact with the tree without any requirements. 4. Iron: The requirement of a stone pickaxe is not met yet, as the player needs to first collect stone and craft a stone pickaxe using the placed table. 5. Cow: No specific tool required, but a sword would help. The player can interact with the cow without any requirements. 6. Grass: No requirements needed for interaction, the player can move on the grass. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Collect stone (Priority: 5/5): The player should collect stone to craft a stone pickaxe, which would allow them to harvest iron and progress further in the game. 2. Craft a wood pickaxe (Priority: 4/5): The player should craft a wood pickaxe using their wood and placed table, so they can collect stone for making a stone pickaxe and other necessary tools. 3. Approach and collect wood from the tree (Priority: 3/5): The player should collect more wood from the tree, as it is an essential resource for crafting additional tools and a weapon for defense. Question: What are the requirements for the top sub-task? What should the player do first? Answer: The top sub-task is to collect stone. The requirements for this sub-task are: 1. Having a wood pickaxe, which is needed to collect stone. To achieve this sub-task, the player should first craft a wood pickaxe. Since they already have a placed table and wood in their inventory, they can use these resources to craft the wood pickaxe. Following the crafting, the player can use their wood pickaxe to start collecting stone. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Make Wood Pickaxe Requirement: Nearby table; wood in inventory. 2. Priority 2: Move East Requirement: Flat ground right to the agent. 3. Priority 3: Do (Collect stone) Requirement: Facing stone; have wood pickaxe. 4. Priority 4: Move South-East Requirement: Flat ground in the south-east direction of the agent. 5. Priority 5: Do (Chase cow) Requirement: Facing cow; no specific tool required. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Make Wood Pickaxe Requirement: Nearby table; wood in inventory. - Requirements met: Yes, the player has placed a table and has wood in their inventory. 2. Priority 2: Move East 23 Requirement: Flat ground right to the agent. - Requirements met: Yes, the player can move east as there is a tree 2 steps to the east and flat ground right to the agent. 3. Priority 3: Do (Collect stone) Requirement: Facing stone; have wood pickaxe. - Requirements met: Partially, the player needs to first craft a wood pickaxe (Priority 1) and then face a stone to collect it. 4. Priority 4: Move South-East Requirement: Flat ground in the south-east direction of the agent. - Requirements met: Yes, as there is a cow 4 steps to the player‚Äôs south-east and a stone 7 steps to the south-east, it indicates there is flat ground in that direction. 5. Priority 5: Do (Chase cow) Requirement: Facing cow; no specific tool required. - Requirements met: Partially, the player is not currently facing a cow. They must move in the south-east direction ( Priority 4) and then face the cow to chase it. Question: Did the last player action succeed? Why? Answer: It appears that the last player action place_table succeeded, as there is no mention of any failure in the most recent in- game observation. Additionally, the player‚Äôs inventory shows a deduction of wood, which would have been used to craft the table. Question: Choose the best executable action from above. Answer: The best executable action from the list above is Priority 1: Make Wood Pickaxe, as all the requirements for this action are met. The player has a nearby table and wood in their inventory. ============Step: 8, Cumulative Reward: 0.0============ You took action make_wood_pickaxe. You see: - stone 7 steps to your south-east - path 6 steps to your north-east - tree 2 steps to your east - iron 7 steps to your north-east - cow 4 steps to your south-east You face grass at your front (north). Your status: - health: 9/9 - food: 9/9 - drink: 9/9 - energy: 9/9 Your inventory: - wood: 1 ------------ QA ------------ Question: Action Answer: Move East Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone resource, required for crafting stone tools and building structures. Requirement: Use a wood pickaxe to collect. 2. Path: Provides a flat and safe route for travelling. Requirement: None, simply walk on it. 3. Tree: Provides wood resource, required for crafting tools, weapons, and building structures. Requirement: Use hands or an axe to chop it down. 4. Iron: Provides iron resource, required for crafting iron tools and weapons. Requirement: Use a stone pickaxe to mine. 5. Cow: Provides food resource when killed that restores health. Requirement: Kill cow with a weapon or any tool. Question: What was the last action taken by the player? Answer: The last action taken by the player was to make a wood pickaxe. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Yes, the requirement of a wood pickaxe is met, as it is in your inventory. 2. Path: Yes, there are no specific requirements to interact with a path, so you can walk on it. 3. Tree: Yes, you can interact with the tree using your hands or an axe (although an axe would be more efficient). 4. Iron: No, you currently have a wood pickaxe, but you need a stone pickaxe to mine iron. 5. Cow: Yes, you can interact with the cow using any tool or weapon, although using a weapon (like a sword) would be more efficient. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 24 1. Priority 4.5: Collect Stone - The player needs stone to craft a stone pickaxe for mining iron. The wood pickaxe is available in the inventory, so collecting stone is possible. 2. Priority 4: Craft a Stone Pickaxe - After collecting stone, the player should craft a stone pickaxe using the wood and stone in their inventory to be able to mine iron. 3. Priority 3.5: Mine Iron - Once the player has crafted a stone pickaxe, they can mine iron to eventually create iron tools and weapons, which are stronger and more efficient. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Top sub-task: Collect Stone Requirements for Collect Stone: - Make a Wood Pickaxe (Already in the player‚Äôs inventory) What the player should do first: 1. Move towards the stone: As the stone is 7 steps to the player‚Äôs south-east, the player should navigate towards it by moving east and south until they reach the stone. 2. Mine the stone: Once at the stone location, the player should use the wood pickaxe they have crafted to mine the stone. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Move East (Priority 1): Requirement: Flat ground right of the agent. 2. Move South (Priority 2): Requirement: Flat ground below the agent. 3. Use Wood Pickaxe (Priority 3): Requirement: Facing the stone; have necessary tool (wood pickaxe) in inventory. 4. Move to the cow (Priority 4): Navigate to the cow by moving in the directions necessary to reach its location, depending on the position of the player after obtaining the stone. 5. Do (Priority 5): Defeat the cow: Requirement: Facing the cow; have necessary tool (weapon) or use bare hands to defeat the cow. Question: For each action in the list, are the requirements met? Answer: 1. Move East (Priority 1): Yes, the requirement is met. There‚Äôs flat ground to the right (east) of the agent. 2. Move South (Priority 2): Yes, the requirement is met. There‚Äôs flat ground below (south) of the agent. 3. Use Wood Pickaxe (Priority 3): The requirement will be met once the player is facing the stone with the wood pickaxe in their inventory. 4. Move to the cow (Priority 4): The requirement will be met once the player navigates through the terrain by moving in the necessary directions to reach the cow‚Äôs location after obtaining the stone. 5. Do (Priority 5): Defeat the cow: The requirement will be met once the player is facing the cow and the necessary tool ( weapon) is in their inventory or they can use their bare hands. Question: Did the last player action succeed? Why? Answer: Yes, the last player action to make a wood pickaxe succeeded. This is because the player had the necessary requirements, which were having wood in their inventory and being near a table. Since both requirements were met, the player was able to craft the wood pickaxe. Question: Choose the best executable action from above. Answer: The best executable action from above is Move East (Priority 1), as the requirement of having flat ground to the right ( east) of the agent is met. ============Step: 9, Cumulative Reward: 0.0============ You took action move_east. You see: - grass 1 steps to your west - stone 4 steps to your east - path 5 steps to your north-east - coal 7 steps to your north-east - iron 6 steps to your north-east - cow 4 steps to your south-east You face tree at your front (east). Your status: - health: 9/9 - food: 9/9 - drink: 9/9 - energy: 9/9 Your inventory: - wood: 1 ------------ QA ------------ Question: Action Answer: Move East Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass: Provides no resources, no requirements. 2. Stone: Provides stone resource, requires a wood pickaxe or better to mine. 3. Path: Provides no resources, no requirements. 4. Coal: Provides coal resource, requires a wood pickaxe or better to mine. 5. Iron: Provides iron resource, requires a stone pickaxe or better to mine. 6. Cow: Provides food resource when defeated, no specific tool requirement for defeating but a weapon such as a sword is recommended. 25 7. Tree: Provides wood resource, requires no specific tool to collect but using an axe is more efficient. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_east. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass: No specific requirements, so it is met. 2. Stone: Requires a wood pickaxe or better to mine. The requirement is met as the player has a wood pickaxe in their inventory. 3. Path: No specific requirements, so it is met. 4. Coal: Requires a wood pickaxe or better to mine. The requirement is met as the player has a wood pickaxe in their inventory. 5. Iron: Requires a stone pickaxe or better to mine. The current requirement is not met, as the player only has a wood pickaxe in their inventory. 6. Cow: No specific tool requirement for defeating, but a weapon is recommended. The current requirement is not met, as the player does not have a weapon in their inventory. 7. Tree: No specific tool required to collect wood, so the requirement is met. However, using an axe would be more efficient, and the player does not have an axe in their inventory currently. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Collect stone (Priority: 5/5) - To make a stone pickaxe, the player needs to collect stone. They can mine the stone since they have a wood pickaxe in their inventory. 2. Make a stone pickaxe (Priority: 4/5) - After collecting stone, the player should craft a stone pickaxe, which will allow them to mine iron and progress further in the game. 3. Collect wood and make a weapon (Priority: 3/5) - Defeating a cow for food and defending against possible monsters will be easier with a weapon. Collecting wood and crafting a wood or stone sword should be a priority. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Requirements for the top sub-task (Collect stone): 1. Have a wood pickaxe in the inventory (Player already has one). The player should first move towards the stone they see 4 steps to the east. Once they are adjacent to the stone, they can mine it using their wood pickaxe to collect it. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move East (4 steps) - Requirement: Flat ground to the east of the player. 2. Priority 2: Do (Mine Stone) - Requirement: Facing stone and have a wood pickaxe in inventory. 3. Priority 3: Move towards the iron (north-east) - Requirement: Flat ground in the north-east direction. 4. Priority 4: Do (Mine Iron) - Requirement: Facing iron and have a stone pickaxe in inventory (once the player collects enough stone, they should craft a stone pickaxe). 5. Priority 5: Move towards coal (north-east) - Requirement: Flat ground in the north-east direction. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Move East (4 steps) - Yes, the requirement of flat ground to the east of the player is met, as the player is currently facing a tree to the east. 2. Priority 2: Do (Mine Stone) - No, the requirement of facing stone and having a wood pickaxe in inventory is not met yet, as the player needs to move closer to the stone (4 steps to the east) and face it. 3. Priority 3: Move towards the iron (north-east) - Yes, the requirement of flat ground in the north-east direction is met, as the path is 5 steps away to the north-east. 4. Priority 4: Do (Mine Iron) - No, the requirement of facing iron and having a stone pickaxe in inventory is not met yet, as the player needs to move closer to the iron (which is 6 steps to the north-east) and face it. Additionally, the player needs to collect enough stone and craft a stone pickaxe. 5. Priority 5: Move towards coal (north-east) - Yes, the requirement of flat ground in the north-east direction is met, as the coal is 7 steps away to the north-east. Question: Did the last player action succeed? Why? Answer: Yes, the last player action, move_east, succeeded. The action was successful because there was flat ground (grass) to the east of the player, allowing them to move in that direction. Question: Choose the best executable action from above. Answer: The best executable action from the list above is Priority 1: Move East (4 steps), as the requirement of flat ground to the east of the player is already met. ============Step: 10, Cumulative Reward: 0.0============ You took action move_east. You see: - grass 1 steps to your west - stone 4 steps to your east - path 5 steps to your north-east - coal 7 steps to your north-east - iron 6 steps to your north-east You face tree at your front (east). Your status: - health: 9/9 - food: 9/9 26 - drink: 9/9 - energy: 9/9 Your inventory: - wood: 1 ------------ QA ------------ Question: Action Answer: Do Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass: Resource it provides - saplings for planting and growing plants (optional); Requirement - none. 2. Stone: Resource it provides - stone for crafting tools, weapons, and building structures; Requirement - wood pickaxe or better for collecting. 3. Path: Resource it provides - navigation and easier movement; Requirement - none. 4. Coal: Resource it provides - fuel for smelting iron in a furnace; Requirement - wood pickaxe or better for collecting. 5. Iron: Resource it provides - iron for crafting advanced tools and weapons; Requirement - stone pickaxe or better for collecting. 6. Tree: Resource it provides - wood for crafting tools, weapons, and building structures; Requirement - none (can collect with hands) or use an axe for faster collection. Note: The cow mentioned in step 18 is not present in step 20, so it‚Äôs not included in the list. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_east. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass: Yes, the requirements for interaction are met. You don‚Äôt need any tools to interact with grass. 2. Stone: No, the requirements for interaction are not met. You need a wood pickaxe or better for collecting stone, and you only have one piece of wood in your inventory. 3. Path: Yes, the requirements for interaction are met. You can navigate and move on the path without any additional tools or requirements. 4. Coal: No, the requirements for interaction are not met. You need a wood pickaxe or better for collecting coal, and you only have one piece of wood in your inventory. 5. Iron: No, the requirements for interaction are not met. You need a stone pickaxe or better for collecting iron, and you currently don‚Äôt have a pickaxe. 6. Tree: Yes, the requirements for interaction are met. You can collect wood from the tree without any tools or use an axe ( if you have one) for faster collection. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Priority 5 - Collect more wood: Interact with trees to gather enough wood. Wood is an essential resource for crafting basic tools, weapons, and building structures. 2. Priority 4 - Craft a wood pickaxe: Once you have collected enough wood, craft a wood pickaxe using a table. A wood pickaxe is required to collect stone, coal, and other resources. 3. Priority 3 - Collect stone and coal: After crafting the wood pickaxe, collect stone and coal. These resources will be needed to craft better tools, weapons, and a furnace for smelting iron. Question: What are the requirements for the top sub-task? What should the player do first? Answer: For the top sub-task, which is collecting more wood, the requirements are: 1. Interact with trees to gather wood. What should the player do first: - The player should move towards a tree and interact with it (face the tree) to gather wood. Since the player currently faces a tree to their east, they can directly interact with that tree to collect wood. This will help them accumulate the required wood for crafting basic tools and structures. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Do (Interact with a tree to gather wood) Requirement: Facing a tree and have necessary tool (or no tool required for wood). 2. Priority 2: Place Table (Place a crafting table) Requirement: Wood in inventory. 3. Priority 3: Make Wood Pickaxe (Craft a wooden pickaxe) Requirement: Nearby table and wood in inventory. 4. Priority 4: Move East (Move towards the stone 4 steps to the east) Requirement: Flat ground right to the agent. 5. Priority 5: Do (Interact with stone to gather using the wood pickaxe) Requirement: Facing stone and have the wood pickaxe. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Do (Interact with a tree to gather wood) Requirements met: Yes, facing the tree and no tool is required for collecting wood. 2. Priority 2: Place Table (Place a crafting table) Requirements met: Yes, there is 1 wood in the inventory. 3. Priority 3: Make Wood Pickaxe (Craft a wooden pickaxe) 27 Requirements met: No, a table should be placed first. 4. Priority 4: Move East (Move towards the stone 4 steps to the east) Requirements met: Yes, there is flat ground to the east. 5. Priority 5: Do (Interact with stone to gather using the wood pickaxe) Requirements met: No, the wood pickaxe should be crafted before interacting with the stone. Question: Did the last player action succeed? Why? Answer: Yes, the last player action (move_east) succeeded. The player was able to move one step to the east because there was no obstacle or barrier blocking their way, as evidenced by the observation that there is grass one step to their west after the move. Question: Choose the best executable action from above. Answer: The best executable action from above is Priority 1: Do (Interact with a tree to gather wood), as the requirements for this action are met. The player is facing the tree, and no tool is required for collecting wood. ============Step: 11, Cumulative Reward: 0.0============ You took action do. You see: - stone 4 steps to your east - path 5 steps to your north-east - tree 5 steps to your north-east - coal 7 steps to your north-east - iron 6 steps to your north-east You face grass at your front (east). Your status: - health: 9/9 - food: 9/9 - drink: 9/9 - energy: 9/9 Your inventory: - wood: 2 ------------ QA ------------ Question: Action Answer: Move East Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone resource used to craft tools like stone pickaxe and stone sword. Requirement: Make Wood Pickaxe to collect stone. 2. Path: Provides a navigable route to explore the game world. Requirement: None. 3. Tree: Provides wood resource used to craft tools, weapons, and build structures. Requirement: Do action on the tree with no tool or Make Wood Axe to collect wood efficiently. 4. Coal: Provides coal resource used in crafting torches and fuel for furnaces. Requirement: Make Wood Pickaxe to collect coal. 5. Iron: Provides iron resource used to craft tools like iron pickaxe and iron sword. Requirement: Make Stone Pickaxe to collect iron. 6. Grass: Provides a basic terrain to navigate upon. Requirement: None. Question: What was the last action taken by the player? Answer: The last action taken by the player was do. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Yes, you have a Wood Pickaxe (requirement met). 2. Path: Yes, no requirements needed for interaction (requirement met). 3. Tree: Yes, you can do action on the tree with no tool (requirement met). 4. Coal: Yes, you have a Wood Pickaxe (requirement met). 5. Iron: No, you need a Stone Pickaxe to collect iron (requirement not met). 6. Grass: Yes, no requirements needed for interaction (requirement met). Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Craft a Stone Pickaxe (Priority: 5/5): Collect more stone using your Wood Pickaxe, then craft a Stone Pickaxe to enable collecting iron. 2. Collect Coal (Priority: 4/5): Using your Wood Pickaxe, collect coal to fuel a furnace for later ore smelting. 3. Craft a Stone Sword (Priority: 3/5): After collecting enough stone, craft a Stone Sword to improve your ability to defend against monsters. Question: What are the requirements for the top sub-task? What should the player do first? Answer: The requirements for the top sub-task (Craft a Stone Pickaxe) are as follows: 1. Collect Stone: The player must gather enough stone using a Wood Pickaxe. 2. Place Table: The player must have or craft a crafting table, which requires having wood in the inventory. 3. Make Stone Pickaxe: The player must go near the crafting table with enough wood and stone in the inventory. 28 The player should first ensure they have a crafting table placed. If not, they should place a crafting table using the wood in their inventory. Once the table is set, the player should gather more stone using their Wood Pickaxe, and then return to the table to craft the Stone Pickaxe. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority: 5/5 - Place Table (Requirement: Wood in inventory) Since the player has wood in their inventory, they should place a table to perform crafting actions. 2. Priority: 4/5 - Make Wood Pickaxe (Requirement: Nearby table; wood in inventory) With a table placed and wood available, the player should create a Wood Pickaxe to gather stone. 3. Priority: 3/5 - Move East or North-East (Requirement: Flat ground in the desired direction) The player should move towards the stone (east) or towards the path and other resources (north-east). 4. Priority: 2/5 - Do (Facing stone; have a Wood Pickaxe) Upon reaching the stone, the player should use their Wood Pickaxe to collect the stone. 5. Priority: 1/5 - Make Stone Pickaxe (Requirement: Nearby table; wood, stone in inventory) After acquiring enough stone, the player should return to the crafting table and make a Stone Pickaxe to gather higher-tier resources like iron. Question: For each action in the list, are the requirements met? Answer: 1. Place Table (Requirement: Wood in inventory) - Yes, the requirement is met. The player has 2 wood in their inventory. 2. Make Wood Pickaxe (Requirement: Nearby table; wood in inventory) - No, the requirement is not met yet. The player needs to place a table first. 3. Move East or North-East (Requirement: Flat ground in the desired direction) - Yes, the requirement is met. Flat ground is available in both the east and north-east directions. 4. Do (Facing stone; have a Wood Pickaxe) - No, the requirement is not met. The player needs to have a Wood Pickaxe first and needs to face stone to collect it. 5. Make Stone Pickaxe (Requirement: Nearby table; wood, stone in inventory) - No, the requirement is not met. The player needs to place a table, craft a Wood Pickaxe, and gather stone before making a Stone Pickaxe. Question: Did the last player action succeed? Why? Answer: Yes, the last player action succeeded. The player was initially facing a tree to the east, and after taking the do action, they now have an additional piece of wood in their inventory, indicating that they successfully chopped down the tree. Question: Choose the best executable action from above. Answer: The best executable action from the provided list is: Move East or North-East (Requirement: Flat ground in the desired direction) Since the player has the required flat ground in both the east and north-east directions, they can move toward the stone ( east) or toward the path and other resources (north-east). ============Step: 12, Cumulative Reward: 0.0============ You took action move_east. You see: - stone 3 steps to your east - path 4 steps to your north-east - tree 4 steps to your north-east - coal 6 steps to your north-east - iron 5 steps to your north-east You face grass at your front (east). Your status: - health: 9/9 - food: 9/9 - drink: 9/9 - energy: 9/9 Your inventory: - wood: 2 ------------ QA ------------ Question: Action Answer: Move East Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone resource which is used to craft stone tools and weapons; requires a wood pickaxe or better to collect. 2. Path: Allows easy movement and navigation; no requirements to interact. 3. Tree: Provides wood resource which is used to craft wooden tools and structures; requires an axe or hands to collect. 4. Coal: Provides coal resource which is used as fuel for smelting and crafting torches; requires a wood pickaxe or better to collect. 5. Iron: Provides iron resource which is used to craft iron tools and weapons; requires a stone pickaxe or better to collect. 29 6. Grass: Provides a surface to walk on and can be dug with a shovel to obtain dirt; has no direct use as a resource but can be cleared to create space for other structures. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_east. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Partially met. You have a wood pickaxe or better, but it is not specified that you currently have it equipped. 2. Path: Met. There are no requirements to interact with the path, and you can move or walk on it. 3. Tree: Partially met. You can collect wood with an axe or hands, but it is not specified that you currently have an axe equipped or are using your hands. 4. Coal: Partially met. You have a wood pickaxe or better, but it is not specified that you currently have it equipped. 5. Iron: Not met. You need a stone pickaxe or better to collect iron, and there is no indication that you currently have it. 6. Grass: Met. There are no requirements to interact with grass, and you can walk on it or clear it as needed. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Priority 4/5: Craft stone pickaxe - In order to collect iron and progress in the game, you need to craft a stone pickaxe. Since you already have wood in your inventory, and there is stone nearby, this should be your first priority. 2. Priority 3/5: Collect coal - With your wood pickaxe or better, collect coal from the nearby deposit. Coal is a useful resource for smelting and crafting torches, which will be beneficial as you progress in the game. 3. Priority 2/5: Collect iron - After crafting a stone pickaxe, use it to mine the nearby iron deposit. Collecting iron will enable you to craft more advanced tools and weapons, further improving your abilities in the game. Question: What are the requirements for the top sub-task? What should the player do first? Answer: For the top sub-task of crafting a stone pickaxe, the requirements are: 1. Collect stone: You will need stone to craft the stone pickaxe. There‚Äôs stone 3 steps to your east. 2. Place a table: You will need a table to craft the stone pickaxe. You already have wood in your inventory, so you can place a table. What the player should do first: 1. Move east to the stone location: To collect the stone, you need to move closer to it. Move 3 steps east to reach the stone. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: Here are the top 5 actions the player should take along with their requirements and priority (out of 5): 1. Move East (Priority: 1): Requirement: Flat ground right to the agent. Purpose: Get closer to the stone for crafting a stone pickaxe. 2. Do (Priority: 2): Requirement: Facing creature or material; have necessary tool. Purpose: Collect the stone when you reach it for crafting tools like a stone pickaxe. 3. Place Table (Priority: 3): Requirement: Wood in inventory. Purpose: Place a table to be able to craft a stone pickaxe. 4. Make Wood Pickaxe (Priority: 4): Requirement: Nearby table; wood in inventory. Purpose: Craft a wood pickaxe needed to collect stone. 5. Make Stone Pickaxe (Priority: 5): Requirement: Nearby table; wood, stone in inventory. Purpose: Craft a stone pickaxe to collect advanced materials like iron. Question: For each action in the list, are the requirements met? Answer: For each action in the list, let‚Äôs see if the requirements are met: 1. Move East (Priority: 1): Requirement: Flat ground right to the agent. Status: Met (You face grass at your front (east).) 2. Do (Priority: 2): Requirement: Facing creature or material; have necessary tool. Status: Not met yet (You need to be near stone and have the necessary tool.) 3. Place Table (Priority: 3): Requirement: Wood in inventory. Status: Met (Your inventory contains 2 wood.) 4. Make Wood Pickaxe (Priority: 4): Requirement: Nearby table; wood in inventory. Status: Not met yet (You need to place a table first.) 5. Make Stone Pickaxe (Priority: 5): Requirement: Nearby table; wood, stone in inventory. Status: Not met yet (You need to place a table and have stone in inventory.) Question: Did the last player action succeed? Why? Answer: 30 Yes, the last player action (move_east) succeeded because there was flat ground to the east of the player, allowing them to move in that direction. Question: Choose the best executable action from above. Answer: The best executable action from the list is: 1. Move East (Priority: 1) Requirement: Flat ground right to the agent. Status: Met (You face grass at your front (east).) ============Step: 13, Cumulative Reward: 0.0============ You took action move_east. You see: - stone 2 steps to your east - path 3 steps to your north-east - tree 3 steps to your north - coal 5 steps to your north-east - iron 4 steps to your north-east You face grass at your front (east). Your status: - health: 9/9 - food: 9/9 - drink: 9/9 - energy: 9/9 Your inventory: - wood: 2 ------------ QA ------------ Question: Action Answer: Place Table Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone resource for crafting tools and building materials; requires a wood pickaxe or better to collect. 2. Path: Not a resource, but provides easy navigation and movement across the terrain. 3. Tree: Provides wood resource for crafting tools and building materials; no specific requirement to collect, can be collected with hands or any tool. 4. Coal: Provides coal resource for fueling furnaces and smelting materials; requires a wood pickaxe or better to collect. 5. Iron: Provides iron resource for crafting advanced tools and weapons; requires a stone pickaxe or better to collect. 6. Grass: Not a resource, serves as a ground cover and visual element in the game environment. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_east. Question: For each object in the list, are the requirements met for interaction? Answer: Based on the current status and inventory: 1. Stone: Yes, the requirement is met, as the player has a wood pickaxe or better. 2. Path: Yes, the requirement is met, as the player can always move and navigate on the path. 3. Tree: Yes, the requirement is met, as the player can collect wood with their hands or any tool. 4. Coal: Yes, the requirement is met, as the player has a wood pickaxe or better. 5. Iron: No, the requirement is not met, as the player needs a stone pickaxe or better to collect iron, but currently only has a wood pickaxe. 6. Grass: Yes, the requirement is met, as the player can always interact with grass as a ground cover and visual element. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Craft a stone pickaxe (Priority: 5) - This task is most important to progress in the game because a stone pickaxe allows the player to collect iron, which is needed for crafting advanced tools and weapons. 2. Collect coal (Priority: 4) - Collecting coal should be the next priority to fuel furnaces for smelting iron once it‚Äôs collected. Coal is essential for advancing in the game and crafting higher-level tools and weapons. 3. Collect more wood (Priority: 3) - Gathering more wood is important, as it is a basic resource used for crafting tools, weapons, and building materials. The player should prioritize this task to ensure they have enough wood for future needs. Question: What are the requirements for the top sub-task? What should the player do first? Answer: The top sub-task is to craft a stone pickaxe, and the requirements for it are as follows: 1. Collect wood 2. Place a table 3. Make a wood pickaxe 4. Collect stone Since the player already has 2 pieces of wood in their inventory, they can do the following steps: 1. Place a table using the wood in the inventory. 2. Craft a wood pickaxe using the placed table. 3. Collect stone using the wood pickaxe. 4. Craft a stone pickaxe using the collected stone and the table. 31 Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1 - Place Table: Requires wood in inventory (the player already has 2 pieces of wood) 2. Priority 2 - Make Wood Pickaxe: Requires a nearby table (after placing one in Priority 1) 3. Priority 3 - Move East: Flat ground to the east of the player (to get closer to the stone) 4. Priority 4 - Move East: Flat ground to the east of the player (to reach the stone) 5. Priority 5 - Do: Facing stone and having a wood pickaxe to collect stone Question: For each action in the list, are the requirements met? Answer: 1. Place Table: Yes, the requirement is met as the player has 2 pieces of wood in their inventory. 2. Make Wood Pickaxe: Not yet, the player should first place a table (Priority 1 action) to meet the requirement. 3. Move East: Yes, the requirement is met as the player observes flat ground to the east. 4. Move East: Yes, the requirement is met as the player observes flat ground to the east. 5. Do: Not yet, the player should first make a wood pickaxe (Priority 2 action) and move closer to the stone (Priority 3 and 4 actions) to meet the requirements. Question: Did the last player action succeed? Why? Answer: Yes, the last player action succeeded because the player was able to move east, which is evident from the change in the player‚Äôs observations of the surroundings after taking the action. The player faced grass at the front (east), which indicates that there was flat ground allowing the player to move east. Question: Choose the best executable action from above. Answer: The best executable action from the above list is Priority 1 - Place Table, as the requirement for this action is already met with the player having 2 pieces of wood in their inventory. ============Step: 14, Cumulative Reward: 1.0============ You took action place_table. You see: - grass 1 steps to your west - stone 2 steps to your east - path 3 steps to your north-east - tree 3 steps to your north - coal 5 steps to your north-east - iron 4 steps to your north-east You face table at your front (east). Your status: - health: 9/9 - food: 9/9 - drink: 9/9 - energy: 9/9 You have nothing in your inventory. ------------ QA ------------ Question: Action Answer: Move North Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass: Provides no resource, no requirement to interact. 2. Stone: Provides stone resource when mined with a wood, stone, or iron pickaxe. 3. Path: Provides no resource, helps in navigation, no requirement to interact. 4. Tree: Provides wood resource when chopped with an axe, no requirement to interact. 5. Coal: Provides coal resource when mined with a wood, stone, or iron pickaxe. 6. Iron: Provides iron resource when mined with a stone or iron pickaxe. 7. Table: Provides crafting station for tools and weapons, requires wood to place. Question: What was the last action taken by the player? Answer: The last action taken by the player was placing a table (place_table). Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass: No requirements to interact, so yes, the requirements are met. 2. Stone: Requires a wood, stone, or iron pickaxe for mining. Currently, you don‚Äôt have a pickaxe, so the requirements are not met. 3. Path: No requirements to interact, so yes, the requirements are met. 4. Tree: Requires an axe to chop for wood. Currently, you don‚Äôt have an axe, so the requirements are not met. 5. Coal: Requires a wood, stone, or iron pickaxe for mining. Currently, you don‚Äôt have a pickaxe, so the requirements are not met. 6. Iron: Requires a stone or iron pickaxe for mining. Currently, you don‚Äôt have a pickaxe, so the requirements are not met. 7. Table: No requirements to interact as it‚Äôs already placed, so yes, the requirements are met. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Craft a Wood Pickaxe (Priority: 5/5) - Crafting a wood pickaxe allows you to mine stone, coal, and iron which are essential resources for progressing in the game. 2. Collect Stone (Priority: 4/5) - Once you have a wood pickaxe, collecting stone is important to create stone tools and weapons, as well as building structures like a furnace. 32 3. Mine Coal and Iron (Priority: 3/5) - After obtaining a pickaxe and collecting stone, mining coal and iron will provide you with the necessary resources to make better tools and weapons, including an iron pickaxe for obtaining diamonds. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Top Sub-task: Craft a Wood Pickaxe Requirements: 1. Nearby Table: You have already placed a table. 2. Wood in inventory: You currently have no wood in your inventory. What should the player do first? The player should collect more wood to fulfill the requirement for crafting a wood pickaxe. They can take the action move_north to approach the tree and then use the action do to collect the wood. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move North (Requirement: Flat ground above the agent) - The player should move north to approach the tree to collect more wood. 2. Priority 2: Do (Requirement: Facing creature or material; have necessary tool) - The player should perform the Do action when facing the tree to collect wood. No tool is necessary for collecting wood from the tree. 3. Priority 3: Move South (Requirement: Flat ground below the agent) - After collecting the wood, the player should move back south towards the table. 4. Priority 4: Make Wood Pickaxe (Requirement: Nearby Table; wood in inventory) - With enough wood in the inventory, the player should create a wood pickaxe using the previously placed table. 5. Priority 5: Move East (Requirement: Flat ground right to the agent) - After crafting the wood pickaxe, the player should move east towards the stone to use the pickaxe and collect stone. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Move North (Requirement: Flat ground above the agent) - Yes, the requirement is met. There is a flat ground above the agent (tree is 3 steps to the north). 2. Priority 2: Do (Requirement: Facing creature or material; have necessary tool) - No, the requirement is not met yet. The player needs to move closer to the tree first (move North). 3. Priority 3: Move South (Requirement: Flat ground below the agent) - Yes, the requirement is met. However, this action should only be performed after the player completes action 2. 4. Priority 4: Make Wood Pickaxe (Requirement: Nearby Table; wood in inventory) - Yes, the requirement is met. The player has a nearby table and enough wood in inventory. 5. Priority 5: Move East (Requirement: Flat ground right to the agent) - Yes, the requirement is met. Stone is 2 steps to the east, so there is flat ground to move east. However, this action should only be performed after the player completes action 4. Question: Did the last player action succeed? Why? Answer: Yes, the last player action succeeded because the player had wood in their inventory and they were able to place the table in front of them (east). Question: Choose the best executable action from above. Answer: The best executable action from above is Priority 1: Move North, as its requirements are currently met, and it is the first step in the suggested sequence of actions. ============Step: 15, Cumulative Reward: 0.0============ You took action move_north. You see: - stone 2 steps to your east - path 2 steps to your north-east - tree 2 steps to your north - coal 4 steps to your north-east - iron 3 steps to your north-east - table 2 steps to your south-east You face grass at your front (north). Your status: - health: 9/9 - food: 9/9 - drink: 9/9 - energy: 9/9 You have nothing in your inventory. ------------ QA ------------ Question: Action Answer: Move North Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. 33 Answer: 1. Stone: Resource provided is stone, requirement: using a wood pickaxe to collect. 2. Path: Resource provided is a way to travel quickly, requirement: none. 3. Tree: Resource provided is wood, requirement: using hands or a tool to chop it down. 4. Coal: Resource provided is coal, requirement: using a wood pickaxe or better to collect. 5. Iron: Resource provided is iron, requirement: using a stone pickaxe or better to collect. 6. Table: Resource provided is a crafting station, requirement: placing it using wood collected from trees. 7. Grass: Resource provided is a flat surface to walk or build upon, requirement: none. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_north. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: No, the requirement of having a wood pickaxe is not met as there is nothing in the inventory. 2. Path: Yes, the requirement of having no specific requirements is met. 3. Tree: Yes, you can interact using your hands to chop down the tree. 4. Coal: No, the requirement of having a wood pickaxe is not met as there is nothing in the inventory. 5. Iron: No, the requirement of having a stone pickaxe is not met as there is nothing in the inventory. 6. Table: No, you cannot interact with the table as it is 2 steps to your south-east. 7. Grass: Yes, you can interact with the grass as there are no specific requirements. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Chop down a tree to collect wood (Priority: 5/5) - Collecting wood is essential for crafting tools and building materials. 2. Craft a wood pickaxe at the table (Priority: 4/5) - This is important for collecting resources such as stone, coal, and iron. 3. Collect stone using the wood pickaxe (Priority: 4/5) - Stone is necessary for crafting stone tools and building structures. Note: Player first needs to move 2 steps south-east to interact with the table for crafting. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Top sub-task: Chop down a tree to collect wood. Requirements: 1. Move closer to the tree (2 steps north). 2. Face the tree. 3. Use the proper interaction (chop down the tree). The player should first move 2 steps north to get closer to the tree. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move North (2 steps) - Requirement: Flat ground above the agent. 2. Priority 2: Face the tree - Requirement: In proximity to the tree. 3. Priority 3: Chop down tree (Do action) - Requirement: Facing the tree. 4. Priority 4: Move south (2 steps) - Requirement: Flat ground below the agent. 5. Priority 5: Make Wood Pickaxe - Requirement: Nearby table; wood in inventory. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Move North (2 steps) - Yes, the requirement is met as there is flat ground above the agent. 2. Priority 2: Face the tree - No, the requirement is not yet met because the player must first move north to be in proximity to the tree. 3. Priority 3: Chop down tree (Do action) - No, the requirement is not met as the player is not yet facing the tree. 4. Priority 4: Move south (2 steps) - Yes, the requirement is met because there is flat ground below the agent. 5. Priority 5: Make Wood Pickaxe - No, the requirement is not met because the player does not yet have wood in their inventory. Question: Did the last player action succeed? Why? Answer: Yes, the last player action move_north succeeded because there was flat ground (grass) in the direction the player wanted to move (north), which met the requirements for the action. Question: Choose the best executable action from above. Answer: The best executable action from the list above is Priority 1: Move North (2 steps), as its requirement of having flat ground above the agent is met. ============Step: 16, Cumulative Reward: 0.0============ You took action move_north. You see: - grass 1 steps to your west - stone 3 steps to your south-east - path 1 steps to your east - coal 3 steps to your north-east - iron 2 steps to your north-east - table 3 steps to your south-east You face tree at your front (north). Your status: 34 - health: 9/9 - food: 9/9 - drink: 9/9 - energy: 9/9 You have nothing in your inventory. ------------ QA ------------ Question: Action Answer: Do Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass: Provides no resources but can be traversed with no requirements. 2. Stone: Provides stone as a resource, requires a wood pickaxe or better to collect. 3. Path: Provides no resources, can be used to travel easily between locations with no requirements. 4. Tree: Provides wood as a resource, requires a wood axe or simply using hands to collect. 5. Coal: Provides coal as a resource, requires a wood pickaxe or better to collect. 6. Iron: Provides iron as a resource, requires a stone pickaxe or better to collect. 7. Table: Provides a crafting surface for tools and weapons, requires wood to construct. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_north. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass: No requirements for interaction. Requirements met. 2. Stone: Requires a wood pickaxe or better to collect. Not met as the player has no pickaxe in their inventory. 3. Path: No requirements for interaction. Requirements met. 4. Tree: Requires a wood axe or simply using hands to collect. Requirements met, as the player can use their hands to chop wood. 5. Coal: Requires a wood pickaxe or better to collect. Not met as the player has no pickaxe in their inventory. 6. Iron: Requires a stone pickaxe or better to collect. Not met as the player has no pickaxe in their inventory. 7. Table: Requires wood to construct the table. Not met as the player has no wood in their inventory. However, there is an existing table in the player‚Äôs observation from step 30, which can be used without any requirements. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Collect Wood (Priority 5): The player should interact with the tree to collect wood, which is a basic resource that will help craft tools and weapons. 2. Craft a Wood Pickaxe (Priority 4): Using the existing table and the collected wood, the player should craft a wood pickaxe. This will allow the player to mine stone, coal, and iron. 3. Collect Stone (Priority 3): Once the wood pickaxe is crafted, the player should mine stone, which is an essential resource for crafting more advanced tools and weapons. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Requirements for the top sub-task (Collect Wood): 1. Be in proximity to the tree. 2. Face the tree. What should the player do first: The player is currently facing a tree (from Player Observation Step 32). So, the player should take the action Do to interact with the tree and collect wood. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Do - Facing tree; interact with the tree to collect wood. (Requirement: Facing the tree) 2. Priority 2: Move South - Move closer to the table for crafting. (Requirement: Flat ground below the agent) 3. Priority 3: Move East - Position yourself next to the table for crafting. (Requirement: Flat ground right to the agent) 4. Priority 4: Make Wood Pickaxe - Craft a wood pickaxe for collecting stone. (Requirement: Nearby table; wood in inventory) 5. Priority 5: Move North-East - Head towards the stone for collecting. (Requirement: Flat ground diagonally above and to the right of the agent) Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Do - Facing tree; interact with the tree to collect wood. (Requirement: Facing the tree) - Yes, the player is facing the tree. 2. Priority 2: Move South - Move closer to the table for crafting. (Requirement: Flat ground below the agent) - Yes, there is most likely flat ground below the agent (table is 3 steps to the south-east). 3. Priority 3: Move East - Position yourself next to the table for crafting. (Requirement: Flat ground right to the agent) - Yes, there is flat ground right to the agent (path is 1 step to the east). 4. Priority 4: Make Wood Pickaxe - Craft a wood pickaxe for collecting stone. (Requirement: Nearby table; wood in inventory) - The player needs to complete Priority 1 to obtain wood, which will meet this requirement. 5. Priority 5: Move North-East - Head towards the stone for collecting. (Requirement: Flat ground diagonally above and to the right of the agent) 35 - The player cannot verify if this requirement is met based on the given information. They should complete prior priorities first, which may reveal more information about the terrain. Question: Did the last player action succeed? Why? Answer: Yes, the last player action (move_north) succeeded because there was a flat ground in the north direction which allowed the player to move to that location. Question: Choose the best executable action from above. Answer: The best executable action from the list above is Priority 1: Do - Facing tree; interact with the tree to collect wood. ( Requirement: Facing the tree) ============Step: 17, Cumulative Reward: 0.0============ You took action do. You see: - stone 3 steps to your south-east - path 1 steps to your east - tree 3 steps to your north-west - coal 3 steps to your north-east - iron 2 steps to your north-east - table 3 steps to your south-east You face grass at your front (north). Your status: - health: 9/9 - food: 9/9 - drink: 9/9 - energy: 9/9 Your inventory: - wood: 1 ------------ QA ------------ Question: Action Answer: Move South Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone resource, requires a wood pickaxe or higher-tier pickaxe to collect. 2. Path: No resource provided, serves as a flat ground for movement. 3. Tree: Provides wood resource, can be collected by interacting with it (if within range) without any tool requirement. 4. Coal: Provides coal resource, requires a wood pickaxe or higher-tier pickaxe to collect. 5. Iron: Provides iron resource, requires a stone pickaxe or higher-tier pickaxe to collect. 6. Table: No resource provided, serves as a crafting station; requires wood to place. Question: What was the last action taken by the player? Answer: The last action taken by the player was do. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Yes, you have a wood pickaxe required to collect stone. 2. Path: Yes, you can move on the path as it serves as flat ground for movement. 3. Tree: Yes, you can interact with the tree without any tool requirement to collect wood. 4. Coal: Yes, you have a wood pickaxe required to collect coal. 5. Iron: No, you need to have a stone pickaxe or higher-tier pickaxe to collect iron. 6. Table: Yes, you can use the table for crafting, as you have the required wood in your inventory. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Priority 4: Craft a stone pickaxe - This will allow you to collect iron and other higher-tier resources. You already have enough wood and can collect stone with your current wood pickaxe. 2. Priority 3: Collect coal - Coal is essential for smelting iron in the furnace. You can collect coal with your current wood pickaxe. 3. Priority 2: Build a safe shelter - Constructing a shelter will protect you from monsters at night and provide a space for crafting, storing items, and resting. Find a suitable location and use wood, stone, or other materials for construction. Question: What are the requirements for the top sub-task? What should the player do first? Answer: The top sub-task is to craft a stone pickaxe. The requirements for crafting a stone pickaxe are: 1. Wood (which you already have in your inventory) 2. Stone (which you need to collect using your wood pickaxe) 3. A crafting table placed nearby (which you have seen 3 steps towards the south-east) To achieve the top sub-task, the player should first move near the crafting table (move south-east for 3 steps). Then, collect stone using the wood pickaxe (action do when facing stone). Finally, craft the stone pickaxe at the crafting table (action make_stone_pickaxe when facing the table). Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: Priority 1: Move South-East - Requirement: Flat ground to the south-east of the agent. 36 Priority 2: Move South-East - Requirement: Flat ground to the south-east of the agent. Priority 3: Move South-East - Requirement: Flat ground to the south-east of the agent. Priority 4: Do - Requirement: Facing stone and have the necessary tool (wood pickaxe). Priority 5: Make Stone Pickaxe - Requirement: Facing the crafting table and have wood, and stone in the inventory. Question: For each action in the list, are the requirements met? Answer: Priority 1: Move South-East - Requirement: Flat ground to the south-east of the agent. (YES, a path is observed 1 step to the east) Priority 2: Move South-East - Requirement: Flat ground to the south-east of the agent. (Cannot verify because the player‚Äôs observation after Priority 1 action has not been provided) Priority 3: Move South-East - Requirement: Flat ground to the south-east of the agent. (Cannot verify, same reason as Priority 2) Priority 4: Do - Requirement: Facing stone and have the necessary tool (wood pickaxe). (NO, player does not have the necessary tool, and they are not facing the stone) Priority 5: Make Stone Pickaxe - Requirement: Facing the crafting table and have wood, and stone in the inventory. (NO, the player has not collected stone, and they are not facing the crafting table) Question: Did the last player action succeed? Why? Answer: Yes, the last player action succeeded. The player was facing a tree at step 32 and took the action do. As a result, the player was able to collect wood, which is now in the inventory as shown in the observation at step 34. Question: Choose the best executable action from above. Answer: The best executable action from the list is Priority 1: Move South-East, as the requirement of having flat ground to the south-east of the agent is met with a path 1 step to the east. ============Step: 18, Cumulative Reward: 0.0============ You took action move_south. You see: - stone 2 steps to your east - path 2 steps to your north-east - tree 4 steps to your north-west - coal 4 steps to your north-east - iron 3 steps to your north-east - table 2 steps to your south-east You face grass at your front (south). Your status: - health: 9/9 - food: 9/9 - drink: 9/9 - energy: 9/9 Your inventory: - wood: 1 ------------ QA ------------ Question: Action Answer: Move East Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone resource, which can be used to craft tools, weapons, and build structures; requires a wood pickaxe or better to collect. 2. Path: Provides no resources, but serves as a marker for previously explored areas; no requirement. 3. Tree: Provides wood resource, which can be used to craft tools, weapons, and build structures; requires no specific tool for collection, but an axe is recommended for efficiency. 4. Coal: Provides coal resource, which can be used as fuel for smelting and crafting torches; requires a wood pickaxe or better to collect. 5. Iron: Provides iron resource, which can be used to craft stronger tools, weapons, and armor; requires a stone pickaxe or better to collect. 6. Table: Provides a crafting interface necessary for creating a wide range of tools, weapons, and other items; requires wood to craft. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_south. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: No, the requirements are not met as you don‚Äôt have a wood pickaxe or better in your inventory. 2. Path: Yes, the requirements are met as there are no specific requirements to interact with a path. 3. Tree: Yes, the requirements are met as you don‚Äôt need a specific tool to collect wood, although using an axe would be more efficient. 4. Coal: No, the requirements are not met as you don‚Äôt have a wood pickaxe or better in your inventory. 5. Iron: No, the requirements are not met as you don‚Äôt have a stone pickaxe or better in your inventory. 6. Table: Yes, the requirements are met as you have wood in your inventory to craft a table. However, you would need to place the table down to interact with it further for crafting. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 37 1. Craft a wood pickaxe (Priority: 5/5) - Crafting a wood pickaxe will allow you to collect important resources such as stone, coal, and iron. Since you have wood in your inventory and are close to a table, you can craft a wood pickaxe. 2. Collect stone (Priority: 4/5) - Once you have crafted a wood pickaxe, your next priority should be to gather stone. Stone is a valuable resource for crafting higher-tier tools, weapons, and building structures. You can then use collected stone to craft a stone pickaxe and other items. 3. Collect coal (Priority: 3/5) - After crafting a wood pickaxe and collecting stone, you should focus on collecting coal. Coal is essential for smelting metals (such as iron) and crafting torches, both of which will be important as you progress in the game. Question: What are the requirements for the top sub-task? What should the player do first? Answer: The requirements for the top sub-task, crafting a wood pickaxe, are: 1. Having wood in your inventory: You already have 1 wood in your inventory. 2. Being near a table: The table is 2 steps to your south-east. To complete this sub-task, you should first move to the table. To do that, take these steps: 1. Move east (facing east): The path 1 step to your east. 2. Move south-east (facing south): The table 1 step to your south. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move East (Requirement: Flat ground right to the agent) 2. Priority 2: Move South-East (Requirement: Flat ground below and to the right of the agent) 3. Priority 3: Place Table (Requirement: Wood in inventory) 4. Priority 4: Make Wood Pickaxe (Requirement: Nearby table and wood in inventory) 5. Priority 5: Move North-East (Requirement: Flat ground above and to the right of the agent, to get closer to stone for future actions) Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Move East (Requirement: Flat ground right to the agent) - Yes, the requirement is met as there is a path 2 steps to the north-east, so directly to the east should be flat ground. 2. Priority 2: Move South-East (Requirement: Flat ground below and to the right of the agent) - We don‚Äôt have enough information to determine if the requirement is met. 3. Priority 3: Place Table (Requirement: Wood in inventory) - Yes, the requirement is met as the player has 1 piece of wood in their inventory. 4. Priority 4: Make Wood Pickaxe (Requirement: Nearby table and wood in inventory) - Partially met. The player has wood in their inventory, but a table is not placed yet. 5. Priority 5: Move North-East (Requirement: Flat ground above and to the right of the agent, to get closer to stone for future actions) - Yes, the requirement is met as there is a path 2 steps to the north-east, so directly to the north- east should be flat ground. Question: Did the last player action succeed? Why? Answer: Yes, the last player action move_south succeeded because there was flat ground (grass) in the direction the player moved ( south), allowing the movement to happen without any obstacles. Question: Choose the best executable action from above. Answer: The best executable action from the list is Priority 1: Move East, since its requirement (flat ground right to the agent) is met, and it aligns with the player‚Äôs objectives of getting closer to stone and other resources. ============Step: 19, Cumulative Reward: 0.0============ You took action move_east. You see: - grass 1 steps to your west - path 1 steps to your north - tree 3 steps to your south - coal 3 steps to your north - iron 2 steps to your north - table 1 steps to your south You face stone at your front (east). Your status: - health: 9/9 - food: 9/9 - drink: 9/9 - energy: 9/9 Your inventory: - wood: 1 ------------ QA ------------ Question: Action Answer: Move South Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 38 1. Grass: The grass provides no resources but can be walked on safely. Requirement: None. 2. Stone: Stone can be used as a crafting material and provides a resource for crafting tools and shelters. Requirement: You need a wood pickaxe or higher to collect stone. 3. Path: The path provides no resources but can indicate safe or commonly used routes for navigation. Requirement: None. 4. Tree: Trees provide wood, which can be used for crafting many tools, weapons, and structures. Requirement: You need an axe or your hands to collect wood. 5. Coal: Coal is a resource used for fuel in furnaces and for crafting torches. Requirement: You need a wood pickaxe or higher to collect coal. 6. Iron: Iron is a resource used for crafting higher-tier tools, weapons, and armor. Requirement: You need a stone pickaxe or higher to collect iron. 7. Table: A table is an essential crafting station for making tools, weapons, and other items. Requirement: You need to collect wood to craft a table. Note: The list provided only considers objects specifically mentioned in the observations. Other objects such as monsters, bridges, or tunnels were not included as they were not observed in the given steps. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_east. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass: No requirements are needed for interaction with grass, so requirements are met. 2. Stone: A wood pickaxe or higher is required to collect stone. Currently, you do not have a wood pickaxe, so requirements are not met. 3. Path: No requirements are needed for interaction with the path, so requirements are met. 4. Tree: An axe or your hands are needed to collect wood. You can use your hands, so requirements are met. 5. Coal: A wood pickaxe or higher is required to collect coal. Currently, you do not have a wood pickaxe, so requirements are not met. 6. Iron: A stone pickaxe or higher is required to collect iron. Currently, you do not have a stone pickaxe, so requirements are not met. 7. Table: No requirements are needed for interaction with the table since you have already crafted one, so requirements are met. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Craft a Wood Pickaxe (Priority: 5/5) To collect stone, coal, and iron, a wood pickaxe is necessary. Crafting a wood pickaxe requires using the table and the wood in your inventory. 2. Collect Stone (Priority: 4/5) After crafting a wood pickaxe, you can collect stone. Stone is essential for crafting a stone pickaxe, which will eventually allow you to collect iron. 3. Craft a Stone Pickaxe (Priority: 3/5) Once you have collected enough stone, you can return to the table and craft a stone pickaxe. This upgraded tool will enable you to collect iron, which is needed for crafting higher-tier items. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Requirements for the top sub-task (Craft a Wood Pickaxe): 1. Have wood in your inventory (you currently have 1 wood). 2. Be near a table (the table is 1 step to your south). What the player should do first: Move south to approach the table. Then, craft the wood pickaxe using the wood in your inventory and the table. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move South (High priority) Requirement: Flat ground below the agent (which is true in the current situation) 2. Priority 2: Make Wood Pickaxe (High priority) Requirement: Nearby table; wood in inventory (you will be next to the table after step 1 and have 1 wood in your inventory ) 3. Priority 3: Move North (Medium priority) Requirement: Flat ground above the agent (will be true after you move south) 4. Priority 4: Move East (Medium priority) Requirement: Flat ground on the right side of the agent (true in the current situation) 5. Priority 5: Do (Medium-Low priority) Requirement: Facing a creature or material (like stone); have the necessary tool (you‚Äôll have the wooden pickaxe after step 2 and be facing the stone after meeting requirements of step 3 and 4) Question: For each action in the list, are the requirements met? 39 Answer: 1. Priority 1: Move South (High priority) Requirement: Flat ground below the agent Status: Requirement met (as seen in the latest player observation) 2. Priority 2: Make Wood Pickaxe (High priority) Requirement: Nearby table; wood in inventory Status: Requirement will be met after moving south (player will be next to the table and have 1 wood in inventory) 3. Priority 3: Move North (Medium priority) Requirement: Flat ground above the agent Status: Requirement will be met after moving south (as there is a path that was last seen 1 step to the north) 4. Priority 4: Move East (Medium priority) Requirement: Flat ground on the right side of the agent Status: Requirement met (as seen in the latest player observation) 5. Priority 5: Do (Medium-Low priority) Requirement: Facing a creature or material (like stone); have the necessary tool (wooden pickaxe) Status: Requirement will be met after making a wood pickaxe (step 2), and following steps 3 and 4 Question: Did the last player action succeed? Why? Answer: Yes, the last player action (move_east) succeeded. The player was able to move east because there was flat ground (grass) to the east of their previous position, allowing them to move in that direction. Question: Choose the best executable action from above. Answer: The best executable action from the list above is Priority 1: Move South, as its requirement is already met in the current situation (flat ground below the agent). ============Step: 20, Cumulative Reward: 0.0============ You took action move_south. You see: - grass 1 steps to your west - stone 1 steps to your east - path 1 steps to your north - tree 3 steps to your south - coal 3 steps to your north - iron 2 steps to your north You face table at your front (south). Your status: - health: 9/9 - food: 9/9 - drink: 8/9 - energy: 9/9 Your inventory: - wood: 1 ------------ QA ------------ Question: Action Answer: Make Wood Pickaxe Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass: Provides no resources but can be used to traverse the land with no requirements. 2. Stone: Provides stone resources for crafting various tools like stone pickaxe, stone sword, and furnaces; requires a wood pickaxe to collect it. 3. Path: Provides a flat surface for walking, no resources are gained, and there are no requirements to use it. 4. Tree: Provides wood resources for crafting various tools like wood pickaxe, wood sword, and placing a table; requires no tools to collect wood. 5. Coal: Provides a fuel resource for smelting iron in the furnace; requires a wood pickaxe to collect it. 6. Iron: Provides iron resources for crafting advanced tools like iron pickaxe and iron sword; requires a stone pickaxe to collect it. 7. Table: Allows the crafting of different tools and weapons; requires wood to place one. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_south. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass: No requirements for interaction; requirements met. 2. Stone: Requires a wood pickaxe to collect it; requirements not met as wood pickaxe is not in the current inventory. 3. Path: No requirements for walking on the path; requirements met. 4. Tree: No tools required to collect wood; requirements met. 5. Coal: Requires a wood pickaxe to collect it; requirements not met as wood pickaxe is not in the current inventory. 6. Iron: Requires a stone pickaxe to collect it; requirements not met as stone pickaxe is not in the current inventory. 7. Table: Already placed, so no requirements for interaction; requirements met. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Craft a wood pickaxe (Priority: 5): To be able to collect stone, coal, and improve your tools, you need to have a wood pickaxe. And since you have enough wood in your inventory and are close to a table, crafting one should be a top priority. 40 2. Collect coal (Priority: 4): Once you have a wood pickaxe, collecting coal is important, as it will be required to smelt iron in the furnace, which is necessary for crafting more advanced tools like iron pickaxe and iron sword. 3. Collect stone (Priority: 3): After crafting a wood pickaxe, collecting stone resources is necessary as it can be utilized for crafting a stone pickaxe, stone sword, and creating a furnace. Stone can also be used to build structures, such as bridges or walls, to improve your gameplay experience. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Requirements for the top sub-task (Craft a wood pickaxe): 1. Wood: The player needs to have wood in their inventory, which they already have (1 wood). 2. Table: The player needs a table nearby to craft the wood pickaxe. Since the player‚Äôs current observation shows that they are facing the table and they already have the required amount of wood in their inventory, the player can proceed to craft the wood pickaxe immediately. The player should first take the action make_wood_pickaxe at the table they are facing. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1 - Make Wood Pickaxe: Requirements - wood in inventory (1 wood), nearby table (facing table). This action is necessary for collecting stone. 2. Priority 2 - Move North: Requirements - flat ground above the agent. The player needs to move towards coal and iron to mine them. 3. Priority 3 - Move North: Repeated action - this will bring the player closer to coal and iron. 4. Priority 4 - Collect Coal: Requirements - wood pickaxe in player‚Äôs possession, and facing coal. Coal is essential to smelting iron and crafting advanced tools. 5. Priority 5 - Move South: Requirements - flat ground below the agent. After collecting coal, moving south takes the player closer to iron which is crucial for crafting iron tools and weapons. Question: For each action in the list, are the requirements met? Answer: 1. Make Wood Pickaxe: Yes, the requirements are met. The player has 1 wood in their inventory and is currently facing the table. 2. Move North: Yes, the requirements are met. There is a path one step to the north, indicating a flat ground. 3. Move North: Yes, after successfully completing the previous Move North action, the requirements for this repeated action should be met. The player will be one step closer to coal and iron. 4. Collect Coal: No, the requirements are not met yet. The player needs a wood pickaxe, which they will craft in Action 1. Additionally, they need to be facing coal; they will need to move north twice to reach the coal. 5. Move South: No, the immediate requirement is not met, as this action depends on the player completing the previous actions first. They will first need to collect coal at step 4 before returning south towards the iron. Question: Did the last player action succeed? Why? Answer: Yes, the last player action (move_south) succeeded. The player was able to move south because there was flat ground below the agent (in the south direction) and no obstacles in the way. Question: Choose the best executable action from above. Answer: The best executable action from the list above is Action 1 - Make Wood Pickaxe, as its requirements are currently met: wood in inventory (1 wood) and facing table. ============Step: 21, Cumulative Reward: 1.0============ You took action make_wood_pickaxe. You see: - grass 1 steps to your west - stone 1 steps to your east - path 1 steps to your north - tree 3 steps to your south - coal 3 steps to your north - iron 2 steps to your north You face table at your front (south). Your status: - health: 9/9 - food: 9/9 - drink: 8/9 - energy: 9/9 Your inventory: - wood_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move East Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 41 1. Grass: Provides no resources, can be walked on without any requirements. 2. Stone: Provides stone resource, requires a wood pickaxe or better to mine. 3. Path: Provides no resources, can be walked on without any requirements. 4. Tree: Provides wood resource, requires no tools to interact with, but having an axe speeds up the process. 5. Coal: Provides coal resource, requires a wood pickaxe or better to mine. 6. Iron: Provides iron resource, requires a stone pickaxe or better to mine. 7. Table: Provides a surface to craft items, requires wood to craft and place. 8. Wood_pickaxe (in inventory): Provides mining ability for stone and coal, requires wood to craft at a table. Question: What was the last action taken by the player? Answer: The last action taken by the player was make_wood_pickaxe. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass: Yes, the requirements are met for interaction as it can be walked on without any requirements. 2. Stone: Yes, the requirements are met for interaction since you have a wood_pickaxe in your inventory, which is needed to mine stone. 3. Path: Yes, the requirements are met for interaction as it can be walked on without any requirements. 4. Tree: Yes, the requirements are met for interaction as no tools are required to interact with trees, and having an axe would only speed up the process. 5. Coal: Yes, the requirements are met for interaction since you have a wood_pickaxe in your inventory, which is needed to mine coal. 6. Iron: No, the requirements are not met for interaction, as mining iron requires a stone pickaxe or better, and you currently only have a wood_pickaxe. 7. Table: Yes, the requirements are met for interaction as you already have a table placed in front of you. 8. Wood_pickaxe (in inventory): Yes, the requirements are met for interaction as you‚Äôve already crafted it at the table using wood. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Mine stone (Priority 5/5): Since you have a wood_pickaxe in your inventory, you should mine stone, which can be found 1 step to your east. Stone is essential for crafting stone tools, like a stone pickaxe and stone sword. 2. Mine coal (Priority 4/5): With a wood_pickaxe, you can mine coal, which is located 3 steps to your north. Coal is needed to smelt iron in a furnace, which will help you progress further in the game. 3. Craft a stone pickaxe (Priority 3/5): Once you have mined enough stone, return to the table and craft a stone pickaxe. A stone pickaxe will allow you to mine iron, which is essential for creating iron tools and weapons. Question: What are the requirements for the top sub-task? What should the player do first? Answer: For the top sub-task of mining stone: Requirements: 1. The player must have a wood_pickaxe in their inventory. As the player already has a wood_pickaxe in their inventory, they can proceed with mining the stone. The player should do the following first: 1. Move one step to the east to reach the stone. 2. Use the wood_pickaxe to mine the stone. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: Priority 1: Move East Requirement: Flat ground right to the agent. Priority 2: Do Requirement: Facing material (stone); have necessary tool (wood_pickaxe). Priority 3: Move North Requirement: Flat ground above the agent. Priority 4: Do Requirement: Facing material (coal); have necessary tool (wood_pickaxe). Priority 5: Move North Requirement: Flat ground above the agent. Question: For each action in the list, are the requirements met? Answer: Priority 1: Move East Requirement: Flat ground right to the agent. - Yes, the requirement is met. There is stone 1 step to the east. Priority 2: Do Requirement: Facing material (stone); have necessary tool (wood_pickaxe). - No, the requirement is not met. Though the player has a wood_pickaxe, they are not facing the stone. Priority 3: Move North Requirement: Flat ground above the agent. - Yes, the requirement is met. There is a path 1 step to the north. Priority 4: Do Requirement: Facing material (coal); have necessary tool (wood_pickaxe). - No, the requirement is not met. Though the player has a wood_pickaxe, they are not facing the coal. Priority 5: Move North Requirement: Flat ground above the agent. 42 - Yes, the requirement is met. There is a path 1 step to the north. Question: Did the last player action succeed? Why? Answer: Yes, the last player action succeeded because the player had the required wood in their inventory and had access to a nearby table. This allowed the player to craft a wood_pickaxe. Question: Choose the best executable action from above. Answer: The best executable action from the list above is Priority 1: Move East, as its requirement of having flat ground right to the agent is met. ============Step: 22, Cumulative Reward: 0.0============ You took action move_east. You see: - grass 1 steps to your west - path 1 steps to your north - tree 3 steps to your south - coal 3 steps to your north - iron 2 steps to your north - table 1 steps to your south You face stone at your front (east). Your status: - health: 9/9 - food: 9/9 - drink: 8/9 - energy: 9/9 Your inventory: - wood_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move North Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass: Provides no specific resources but can be used for landscape aesthetics; no requirement. 2. Stone: Provides stone resources used for crafting tools, weapons, and structures; requires a wood_pickaxe to collect. 3. Path: Provides easy navigation and movement; no requirement. 4. Tree: Provides wood resources used for crafting tools, weapons, and structures; requires an axe to collect. 5. Coal: Provides fuel for furnaces and torches; requires a wood_pickaxe to collect. 6. Iron: Provides iron resources used for crafting advanced tools, weapons, and structures; requires a stone_pickaxe to collect. 7. Table: Crafting station for tools, weapons, and other items; requires wood to craft and place. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_east. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass: No specific requirements for interaction; requirements met. 2. Stone: Requires a wood_pickaxe to collect; requirements met (wood_pickaxe in inventory). 3. Path: No specific requirements for interaction; requirements met. 4. Tree: Requires an axe to collect; requirements not met (no axe in inventory). 5. Coal: Requires a wood_pickaxe to collect; requirements met (wood_pickaxe in inventory). 6. Iron: Requires a stone_pickaxe to collect; requirements not met (no stone_pickaxe in inventory). 7. Table: Already placed and available for crafting; requirements met. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Collect Coal: High priority (5/5) - Collect coal for fuel in furnaces and creating torches. The player has the required wood_pickaxe in their inventory. 2. Collect Stone: High priority (4/5) - Collect stone resources to craft a stone_pickaxe and other stone tools, weapons, and structures. The player has the required wood_pickaxe in their inventory. 3. Craft Stone Tools (stone_pickaxe): Moderate priority (3/5) - Craft a stone_pickaxe after collecting enough stone for better mining capabilities and to collect iron. The player will need to collect stone first to meet the crafting requirements. Question: What are the requirements for the top sub-task? What should the player do first? Answer: The top sub-task is to Collect Coal. Its requirements are: 1. Have a wood_pickaxe, which the player already has in their inventory. 2. Locate coal available in the environment. The player should first locate and approach the coal in the environment. According to the latest observation, there is coal 3 steps to the player‚Äôs north. To achieve this sub-task, the player should move north to get closer to the coal. Once they are in front of the coal, they can use their wood_pickaxe to collect it. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: Here are the top 5 actions the player should take, along with their requirements and priority: 43 1. Priority 1 - Move North: (Requirement: Flat ground above the agent) Action: Move north towards the coal, which is 3 steps away according to the latest observation. 2. Priority 2 - Move North: (Requirement: Flat ground above the agent) Action: Move north once again to reach the coal, as it‚Äôs still 2 steps away. 3. Priority 3 - Move North: (Requirement: Flat ground above the agent) Action: Move north once more to finally reach the coal and be in front of it. 4. Priority 4 - Do: (Requirement: Facing the coal and have a wood_pickaxe) Action: Use the wood_pickaxe to collect the coal, which will be essential for smelting iron. 5. Priority 5 - Move South: (Requirement: Flat ground below the agent) Action: Move back south towards the crafting table, which can be used for further crafting tasks. These actions will ensure that the player collects the coal needed for the game progression and allow them to move on to other tasks, such as smelting iron and crafting more advanced tools and weapons. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1 - Move North: (Requirement: Flat ground above the agent) Yes, the requirement is met as there is a path 1 step to the player‚Äôs north, indicating flat ground. 2. Priority 2 - Move North: (Requirement: Flat ground above the agent) Based on the current observation, we don‚Äôt have enough information regarding the second step to the north. It will depend on the new observation after the player follows the first action. 3. Priority 3 - Move North: (Requirement: Flat ground above the agent) Similar to the second action, we don‚Äôt have enough information based on the current observation for the third step to the north. It will depend on new observations after following the first two actions. 4. Priority 4 - Do: (Requirement: Facing the coal and have a wood_pickaxe) Requirements for this action will be checked after the first three actions are completed. The player already has a wood_pickaxe in their inventory. 5. Priority 5 - Move South: (Requirement: Flat ground below the agent) This action should be possible once the player has reached the coal and collected it, as they‚Äôll be moving back to where they already navigated. Question: Did the last player action succeed? Why? Answer: Yes, the last player action, move_east, succeeded because there was a flat ground (path) to the east of the player, allowing them to move in that direction. Question: Choose the best executable action from above. Answer: The best executable action based on the current observation is Priority 1 - Move North, as the requirement of having flat ground above the agent is already met, with a path one step to the player‚Äôs north. ============Step: 23, Cumulative Reward: 0.0============ You took action move_north. You see: - grass 1 steps to your west - stone 2 steps to your south-east - path 1 steps to your east - tree 4 steps to your north-west - coal 2 steps to your north - table 2 steps to your south You face iron at your front (north). Your status: - health: 9/9 - food: 9/9 - drink: 8/9 - energy: 9/9 Your inventory: - wood_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Do Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: - Grass: Provides saplings for planting trees; no requirement to interact. - Stone: Provides stone for crafting and building; requires a wood pickaxe or better to collect. - Path: No resource provided; helps with navigation and movement. - Tree: Provides wood for crafting and building; requires any type of pickaxe to collect. - Coal: Provides coal for smelting and cooking; requires a wood pickaxe or better to collect. - Iron: Provides iron for crafting and smelting; requires a stone pickaxe or better to collect. - Table: Used for crafting various tools and items; no requirement to interact, but you need wood to place it. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_north. 44 Question: For each object in the list, are the requirements met for interaction? Answer: - Grass: Yes, there are no requirements to interact with grass. - Stone: Yes, the requirement to use a wood pickaxe or better is met, as you have a wood_pickaxe in your inventory. - Path: Yes, there are no requirements to interact with the path. - Tree: No, the requirement of having a pickaxe to collect wood is not met since you have a wood pickaxe (not suitable for chopping trees). You need an axe. - Coal: Yes, the requirement to use a wood pickaxe or better is met, as you have a wood_pickaxe in your inventory. - Iron: No, the requirement to use a stone pickaxe or better is not met since you have a wood_pickaxe in your inventory. You need a stone pickaxe or better. - Table: Yes, there are no requirements to interact with the table. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Collect coal (Priority: 5/5) - You meet the requirement of having a wood_pickaxe, so you can collect coal. Coal will be useful for smelting iron and cooking food later on. 2. Collect stone (Priority: 4/5) - You meet the requirement of having a wood_pickaxe, so you can collect stone. Collecting stone allows you to craft a stone pickaxe, necessary to mine iron. 3. Make a stone pickaxe (Priority: 3/5) - Once you collect enough stone, you should make a stone pickaxe at the table. This will allow you to collect iron and progress further in the game. Question: What are the requirements for the top sub-task? What should the player do first? Answer: The top sub-task is to collect coal. Here are the requirements for this task: - Have a wood_pickaxe or better tool (which you already have in your inventory) As the player is already facing coal and has a wood_pickaxe, they can proceed directly to the task. The player should perform the following action first: - Take the action do to use the wood_pickaxe to collect coal. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Action do - Requirement: Facing creature or material; have necessary tool. (The player is currently facing iron and has a wood pickaxe, so they can use it to collect coal first.) 2. Priority 2: Action make_iron_pickaxe - Requirement: Nearby table, furnace; wood, coal, and iron in inventory. (After collecting coal, the player should gather iron to craft an iron pickaxe.) 3. Priority 3: Action make_iron_sword - Requirement: Nearby table, furnace; wood, coal, and iron in inventory. (Once the player has enough resources, they can craft an iron sword to defend against monsters more efficiently.) 4. Priority 4: Action collect_diamond - Requirement: Make Iron Pickaxe. (With an iron pickaxe, the player can look for and mine diamonds to progress further in the game.) 5. Priority 5: Action move_south - Requirement: Flat ground below the agent. (The player might need to explore new areas. This movement can be alternated with other directions - move_west, move_east, move_north - to find diamonds and other resources.) Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Action do - The requirement is met, as the player is currently facing iron and has a wood_pickaxe in their inventory. They can use the wood_pickaxe to collect the iron. 2. Priority 2: Action make_iron_pickaxe - The requirements are not yet met, as the player still needs to collect coal and iron. The player should focus on gathering coal and iron before attempting to make an iron pickaxe. 3. Priority 3: Action make_iron_sword - The requirements are not yet met, as the player currently has only a wood_pickaxe and needs to collect coal and iron to craft an iron sword. 4. Priority 4: Action collect_diamond - The requirement is not met, as the player needs to first create an iron pickaxe to mine diamonds. 5. Priority 5: Action move_south - The requirement is met, as there is flat ground below the agent. The player can move south to explore new areas or search for resources. Question: Did the last player action succeed? Why? Answer: Yes, the last player action, move_north, succeeded because the player had a flat ground space available towards the north. This allowed the player to move in that direction without any hindrances. Question: Choose the best executable action from above. Answer: The best executable action from the list above is Priority 1: Action do - Since the player is facing iron and has a wood_pickaxe in their inventory, they can use it to collect the iron. ============Step: 24, Cumulative Reward: 0.0============ You took action do. You see: - grass 1 steps to your west - stone 2 steps to your south-east - path 1 steps to your east - tree 4 steps to your north-west - coal 2 steps to your north 45 - table 2 steps to your south You face iron at your front (north). Your status: - health: 9/9 - food: 9/9 - drink: 8/9 - energy: 9/9 Your inventory: - wood_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move North Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass: Provides no specific resources but is a flat ground useful for building or moving. No requirements. 2. Stone: Provides stone resource when mined with a wood pickaxe or better. Requires wood_pickaxe. 3. Path: Provides a flat surface to move or build upon. No requirements. 4. Tree: Provides wood resource when chopped using an appropriate tool. Requires wood pickaxe or better. 5. Coal: Provides coal resource for smelting when mined with a wood pickaxe or better. Requires wood_pickaxe. 6. Table: Allows crafting of tools and weapons. Requires wood to construct. 7. Iron: Provides iron resource when mined with a stone pickaxe or better. Requires stone_pickaxe. Question: What was the last action taken by the player? Answer: The last action taken by the player was do. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass: No requirements to interact, so yes, the requirements are met. 2. Stone: Requires a wood pickaxe to mine. Since you have a wood_pickaxe in your inventory, the requirements are met. 3. Path: No requirements to interact, so yes, the requirements are met. 4. Tree: Requires a wood pickaxe or better to chop. Since you have a wood_pickaxe in your inventory, the requirements are met. 5. Coal: Requires a wood pickaxe or better to mine. Since you have a wood_pickaxe in your inventory, the requirements are met. 6. Table: No requirements to interact with, so yes, the requirements are met. 7. Iron: Requires a stone pickaxe or better to mine. You currently only have a wood_pickaxe in your inventory, so the requirements are not met. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Priority 4/5: Collect coal by mining it with the wood pickaxe. This will allow you to smelt iron once you have a stone pickaxe and a furnace. 2. Priority 5/5: Mine the stone with the wood pickaxe to craft a stone pickaxe. This is a high-priority task because it enables you to mine iron and advance your tools and weapons. 3. Priority 3/5: Chop a tree to gather more wood for crafting and building, such as creating a shelter for protection during the night. Question: What are the requirements for the top sub-task? What should the player do first? Answer: For the top sub-task, which is to collect coal by mining it with the wood pickaxe, the requirements are: 1. A wood pickaxe in the inventory (already available). 2. Locate and face a coal block within reach. The player should first move 2 steps north to get closer to the coal block, and then use the wood pickaxe to mine it by taking the do action. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move North (2 steps) - Requirement: Flat ground above the agent. 2. Priority 2: Do - Requirement: Facing the coal block and having a wood_pickaxe in inventory. 3. Priority 3: Move South (2 steps) - Requirement: Flat ground below the agent. 4. Priority 4: Move West - Requirement: Flat ground left to the agent. 5. Priority 5: Make Stone Pickaxe - Requirement: Nearby table, wood and stone in inventory. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Move North (2 steps) - Yes, the requirement (flat ground above the agent) is met as there is a coal block 2 steps to the north. 2. Priority 2: Do - Yes, the requirements (facing a coal block and having a wood_pickaxe in inventory) are met after moving north 2 steps. 3. Priority 3: Move South (2 steps) - Yes, the requirement (flat ground below the agent) is met as there are flat paths to take. 4. Priority 4: Move West - Yes, the requirement (flat ground left to the agent) is met as there is grass block 1 step to the west. 5. Priority 5: Make Stone Pickaxe - No, the requirement (nearby table, wood and stone in inventory) is not met, as the player has no stone in the inventory. Question: Did the last player action succeed? Why? Answer: 46 It‚Äôs not clear if the last player action succeeded because the observations provided are identical before and after taking the action do. The observation may not include the changed status or collected resources which could indicate the success or failure of the action. Question: Choose the best executable action from above. Answer: The best executable action from the above list is Priority 1: Move North (2 steps), as its requirements are met and it brings the player closer to the coal block, which can be collected with the wood_pickaxe. ============Step: 25, Cumulative Reward: 0.0============ You took action move_north. You see: - grass 1 steps to your west - stone 2 steps to your south-east - path 1 steps to your east - tree 4 steps to your north-west - coal 2 steps to your north - table 2 steps to your south You face iron at your front (north). Your status: - health: 9/9 - food: 8/9 - drink: 8/9 - energy: 9/9 Your inventory: - wood_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move South Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass: Provides no resources, can be used as a flat surface to move on. 2. Stone: Provides stone resources, requires a wood_pickaxe or better to mine. 3. Path: Provides no resources, serves as a flat surface to move on. 4. Tree: Provides wood resources, requires no specific tools but mining speed may increase with an axe. 5. Coal: Provides coal resources, requires a wood_pickaxe or better to mine. 6. Table: Allows crafting of tools, weapons, and other items, requires wood to craft. 7. Iron: Provides iron resources, requires a stone_pickaxe or better to mine. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_north. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass: Yes, there are no specific requirements for interaction. 2. Stone: Yes, the wood_pickaxe in the player‚Äôs inventory meets the requirement for mining stone. 3. Path: Yes, there are no specific requirements for interaction. 4. Tree: Yes, no specific tools are required to interact with the tree, though having an axe may speed up the process. 5. Coal: Yes, the wood_pickaxe in the player‚Äôs inventory meets the requirement for mining coal. 6. Table: Yes, the table can be interacted with for crafting since it is already placed. 7. Iron: No, the requirement of a stone_pickaxe or better is not met as the player only has a wood_pickaxe in their inventory. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Craft a Stone Pickaxe (Priority 5): Mine stone (using the wood_pickaxe) and craft a stone_pickaxe at the table to meet the requirement for mining iron. 2. Mine Coal (Priority 4): Use the wood_pickaxe to mine the coal nearby, as coal is useful for smelting iron and creating better tools and weapons. 3. Mine and Collect Wood (Priority 3): Interact with the tree to collect wood resources, which are essential for crafting items, tools, and building structures. Question: What are the requirements for the top sub-task? What should the player do first? Answer: The requirements for the top sub-task (Craft a Stone Pickaxe) are: 1. Mine Stone: Use the wood_pickaxe to mine nearby stone. The player sees stone 2 steps to their south-east. 2. Access a Table: There is a table 2 steps to the player‚Äôs south. They need to be close to the table to craft a stone_pickaxe. The player should first move towards the stone (south-east) and mine it using their wood_pickaxe to collect enough stone resources for crafting a stone_pickaxe. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1 - Move South-East: This action has a flat ground requirement. The player needs to move south-east to approach the stone visible 2 steps away in that direction. 47 2. Priority 2 - Do: Facing the creature or material and having the necessary tool are the requirements. In this case, the player should use their wood_pickaxe to mine the stone they approached in the previous step. 3. Priority 3 - Move South: Flat ground is required. Since the table is 2 steps to the player‚Äôs south, moving south will bring the player closer to the table, which is needed for crafting. 4. Priority 4 - Make Stone Pickaxe: The requirements are that there must be a nearby table and that the player has wood and stone in their inventory. After collecting the stone in the previous steps, the player can now craft a stone_pickaxe while being close to the table. 5. Priority 5 - Drink: To restore the drink meter before it drops too low, the player needs to find a drinkable water source. This action requires a drink source like a lake or river within reach. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1 - Move South-East: Yes, the requirement of flat ground is met as there is a path one step to the player‚Äôs east and stone two steps to the player‚Äôs south-east. 2. Priority 2 - Do: Not yet, as the player has not moved to the stone yet. Once the player moves to the stone, the requirements of facing the material (stone) and having the necessary tool (wood_pickaxe) will be met. 3. Priority 3 - Move South: Yes, the requirement of flat ground is met. The table being two steps to the player‚Äôs south indicates that it is reachable. 4. Priority 4 - Make Stone Pickaxe: Not yet, as the player has not collected the stone yet. Once the player moves to the stone and collects it using the wood_pickaxe, the requirements of a nearby table and having wood and stone in the inventory will be met. 5. Priority 5 - Drink: No, the current observation does not provide information about a drinkable water source. The player needs to find a lake or river within reach before this requirement will be met. Question: Did the last player action succeed? Why? Answer: Yes, the last player action of move_north succeeded. In Player Observation Step 50, we can see that the player has moved to a new position facing the iron to their north. The action succeeded because there was likely flat ground to the north allowing the player to move in that direction. Question: Choose the best executable action from above. Answer: The best executable action from the list above is Priority 1 - Move South-East. The requirement of flat ground is met, and this action will bring the player closer to the stone they need to collect. ============Step: 26, Cumulative Reward: 0.0============ You took action move_south. You see: - grass 1 steps to your west - stone 1 steps to your east - path 1 steps to your north - tree 3 steps to your south - coal 3 steps to your north - iron 2 steps to your north You face table at your front (south). Your status: - health: 9/9 - food: 8/9 - drink: 8/9 - energy: 9/9 Your inventory: - wood_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move East Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass: Provides no specific resource. No requirements. 2. Stone: Provides stone resource. Requires a wood_pickaxe or better to collect. 3. Path: Provides no specific resource. No requirements. 4. Tree: Provides wood resource. Requires no specific tool or a wood_pickaxe or better to collect. 5. Coal: Provides coal resource. Requires a wood_pickaxe or better to collect. 6. Iron: Provides iron resource. Requires a stone_pickaxe or better to collect. 7. Table: Provides a crafting surface. Requires wood to create. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_south. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass: Yes, the requirements are met for interaction. You can interact with grass without any specific tool. 2. Stone: Yes, the requirements are met as you have a wood_pickaxe in your inventory, which is suitable for collecting stone. 3. Path: Yes, the requirements are met for interaction. You can move along the path without any specific tool. 4. Tree: Yes, the requirements are met as you have a wood_pickaxe in your inventory, which is suitable for collecting wood. 48 5. Coal: Yes, the requirements are met as you have a wood_pickaxe in your inventory, which is suitable for collecting coal. 6. Iron: No, the requirements are not met because you need a stone_pickaxe or better to collect iron, but you only have a wood_pickaxe. 7. Table: Yes, the requirements are met for interaction, as you can use the table to craft items with the resources in your inventory. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Collect Stone (Priority: 5/5): Collect stone using the wood_pickaxe to enable crafting of stone tools, such as a stone_pickaxe, which is required to mine iron. 2. Craft Stone Pickaxe (Priority: 4/5): Craft a stone_pickaxe using the resources collected (wood and stone) at the table. The stone_pickaxe will allow you to mine iron. 3. Collect Coal (Priority: 3/5): Use the wood_pickaxe to collect coal, which will be essential for smelting iron and other ores in the future. Question: What are the requirements for the top sub-task? What should the player do first? Answer: The requirements for the top sub-task (Collect Stone) are: 1. Have a wood_pickaxe (which the player already has in their inventory) To execute the top sub-task, the player should do the following first: 1. Move towards the stone: The player should move east to reach the stone located one step to the east. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: Priority 1: Move East -Requirement: Flat ground right to the agent. (To reach the stone) Priority 2: Do -Requirement: Facing creature or material; have necessary tool. (To mine the stone using the wood_pickaxe) Priority 3: Move West -Requirement: Flat ground left to the agent. (To return to the table) Priority 4: Make Stone Pickaxe -Requirement: Nearby table; wood, stone in inventory. (To upgrade the pickaxe) Priority 5: Move North -Requirement: Flat ground above of the agent. (To move towards the coal for future collection) Question: For each action in the list, are the requirements met? Answer: Priority 1: Move East - Requirement: Flat ground right to the agent. Yes, the requirement is met as there is a stone 1 step to the east. Priority 2: Do - Requirement: Facing creature or material; have a necessary tool. Since the player is not currently facing the stone (it is 1 step to the east), the requirement is not met yet. The player needs to complete priority 1 first to face the stone. Priority 3: Move West - Requirement: Flat ground left to the agent. Yes, the requirement is met as there is grass 1 step to the west. However, this action should be completed after collecting the stone (after completing priority 1 and 2). Priority 4: Make Stone Pickaxe - Requirement: Nearby table; wood, stone in inventory. Currently, the player has only a wooden pickaxe in their inventory but not the required materials to craft a stone pickaxe ( wood and stone). The requirement is not met yet. The player needs to collect stone in priority 2. Priority 5: Move North - Requirement: Flat ground above the agent. Yes, the requirement is met as there is a path 1 step to the north. However, this action should be taken after completing priorities 1, 2, 3, and 4 to make the best use of resources and available tools. Question: Did the last player action succeed? Why? Answer: Yes, the last player action succeeded. The player was able to move south because there was flat ground in the south direction, allowing the player to move from their previous position to the new one. Question: Choose the best executable action from above. Answer: The best executable action from the list above is: Priority 1: Move East - Requirement: Flat ground right to the agent. This action can be executed because there is a stone 1 step to the east, which meets the requirement of having flat ground right to the agent. ============Step: 27, Cumulative Reward: 0.0============ You took action move_east. You see: - grass 1 steps to your west - path 1 steps to your north - tree 3 steps to your south - coal 3 steps to your north - iron 2 steps to your north - table 1 steps to your south You face stone at your front (east). Your status: - health: 9/9 49 - food: 8/9 - drink: 8/9 - energy: 9/9 Your inventory: - wood_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Do Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass: Provides no specific resource, can be used as a general terrain for movement. Requirement: None. 2. Stone: Provides stone resource, used for crafting tools, weapons, and structures. Requirement: Wood pickaxe to collect. 3. Path: Provides no specific resource, serves as a ground indicator for previous player movement. Requirement: None. 4. Tree: Provides wood resource, used for crafting tools, weapons, and structures. Requirement: None, can be collected without a tool, but a wood pickaxe would be faster. 5. Coal: Provides coal resource, necessary for smelting iron in the furnace. Requirement: Wood pickaxe to collect. 6. Iron: Provides iron resource, used for crafting advanced tools, weapons, and structures. Requirement: Stone pickaxe to collect. 7. Table: Provides a crafting station for making tools, weapons, and structures in the game. Requirement: Wood to craft and place. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_east. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass: No specific requirements needed for interaction. Requirements met. 2. Stone: Requires a wood_pickaxe to collect. As a wood_pickaxe is available in the inventory, the requirements are met. 3. Path: No specific requirements needed for interaction. Requirements met. 4. Tree: No specific requirements to collect wood, but having a wood_pickaxe would be faster. A wood_pickaxe is available in the inventory, so the requirements are met. 5. Coal: Requires a wood_pickaxe to collect. A wood_pickaxe is available in the inventory, so requirements met. 6. Iron: Requires a stone_pickaxe to collect. The current inventory consists of a wood_pickaxe, so the requirements are not met. 7. Table: Already placed, no specific requirements needed for interaction. Requirements met. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Collect stone from the stone at the front (Priority: 5/5): Collecting stone will enable the player to create stone tools, such as a stone pickaxe, which is essential for gathering iron. 2. Use the table to craft a stone pickaxe (Priority: 4/5): Once the player has enough stone, crafting a stone pickaxe at the table is necessary to collect iron and progress further in the game. 3. Collect coal for smelting purposes (Priority: 3/5): Coal is required for smelting iron in the furnace. The coal is nearby, and the player has a wood_pickaxe to collect it. Collecting coal now will prevent backtracking later. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Requirements for the top sub-task (Collect stone from the stone at the front): 1. Have a wood pickaxe in the inventory. The player already has a wood_pickaxe in their inventory, which meets the requirement for this sub-task. The player should first take action do facing the stone at the front (east) with the wood_pickaxe to collect stone. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Action Do: Facing the stone, and having a wood_pickaxe in the inventory. (Requirement met) 2. Priority 2: Action Move North: Flat ground above the agent. (Requirement met) 3. Priority 3: Action Do: Facing coal, and having a wood_pickaxe in the inventory. (Requirement met after moving north) 4. Priority 4: Action Move North: Flat ground above the agent. (Requirement met after collecting coal) 5. Priority 5: Action Do: Facing iron, and having a stone_pickaxe in the inventory. (Requirement will be met after crafting a stone_pickaxe using collected stone and wood) Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Action Do: Facing the stone, and having a wood_pickaxe in the inventory. (Requirement met) 2. Priority 2: Action Move North: Flat ground above the agent. (Requirement met) 50 3. Priority 3: Action Do: Facing coal and having a wood_pickaxe in the inventory. (Requirement not met yet, agent needs to move north first) 4. Priority 4: Action Move North: Flat ground above the agent. (Requirement not met yet, agent needs to move north and collect coal first) 5. Priority 5: Action Do: Facing iron and having a stone_pickaxe in the inventory. (Requirement not met yet, agent needs to craft a stone_pickaxe using collected stone and wood) Question: Did the last player action succeed? Why? Answer: Yes, the last player action succeeded because the player was able to move east without any obstacles, as there was a path in that direction. Question: Choose the best executable action from above. Answer: The best executable action from above is Priority 1: Action Do: Facing the stone, and having a wood_pickaxe in the inventory. (Requirement met) ============Step: 28, Cumulative Reward: 1.0============ You took action do. You see: - grass 1 steps to your west - stone 2 steps to your south-east - tree 3 steps to your south - coal 3 steps to your north - iron 2 steps to your north - table 1 steps to your south You face path at your front (east). Your status: - health: 9/9 - food: 8/9 - drink: 8/9 - energy: 9/9 Your inventory: - stone: 1 - wood_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Make Stone Pickaxe Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass: Provides no resources; no requirements. 2. Path: Provides no resources; no requirements. 3. Tree: Provides wood for crafting tools and building structures; requires a wood_pickaxe to collect. 4. Coal: Provides fuel for smelting iron in a furnace; requires a wood_pickaxe to collect. 5. Iron: Provides material for crafting stronger tools and weapons; requires a stone_pickaxe to collect. 6. Stone: Provides material for crafting tools and building structures; requires a wood_pickaxe to collect. 7. Table: Provides a crafting station for creating tools, weapons, and other items; requires wood to craft and place. Question: What was the last action taken by the player? Answer: The last action taken by the player was do. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass: No requirements for interaction; requirements met. 2. Path: No requirements for interaction; requirements met. 3. Tree: Requires a wood_pickaxe to collect; you have a wood_pickaxe in your inventory, so the requirements are met. 4. Coal: Requires a wood_pickaxe to collect; you have a wood_pickaxe in your inventory, so the requirements are met. 5. Iron: Requires a stone_pickaxe to collect; you don‚Äôt have a stone_pickaxe in your inventory, so the requirements are not met. 6. Stone: Requires a wood_pickaxe to collect; you have a wood_pickaxe in your inventory, so the requirements are met. 7. Table: No requirements for interaction; requirements met. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Priority 4/5: Collect more stone by interacting with the stone 2 steps to your south-east, as it will help you craft a stone_pickaxe for mining iron. 2. Priority 3/5: Collect coal, 3 steps to your north, using your wood_pickaxe, as it‚Äôs needed for fuel to smelt iron in a furnace. 3. Priority 2/5: Craft a stone_pickaxe at the table 1 step to your south, once you have collected enough stone. You will need this to mine iron. Question: What are the requirements for the top sub-task? What should the player do first? Answer: The requirements for the top sub-task, which is collecting more stone, are: 1. The player must have a wood_pickaxe (already in the player‚Äôs inventory). 2. The player should be facing the stone or be able to reach it. The player should first move to the position of the stone, which is 2 steps to the south-east. Here‚Äôs what the player should do: 1. Take action move_south to move closer to the stone. 51 Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move South (Move_South) - Requirement: Flat ground below the agent. 2. Priority 2: Do (Do) - Requirement: Facing stone and have the necessary tool (wood_pickaxe) to collect it. 3. Priority 3: Move North (Move_North) - Requirement: Flat ground above the agent. 4. Priority 4: Make Stone Pickaxe (Make_Stone_Pickaxe) - Requirement: Nearby table and wood, stone in inventory. 5. Priority 5: Collect Iron (Do) - Requirement: Facing iron and have the necessary tool (stone_pickaxe) to collect it. Question: For each action in the list, are the requirements met? Answer: 1. Move South (Move_South) - Yes, the requirement is met. There is flat ground below the agent with a table 1 step to the south. 2. Do (Do) - Yes, the requirement is met. The agent is facing the path at their front (east), but they could face stone by moving south, and they have a wood_pickaxe in their inventory to collect the stone. 3. Move North (Move_North) - Yes, the requirement is met. There is flat ground above the agent with a path 1 step to the north. 4. Make Stone Pickaxe (Make_Stone_Pickaxe) - Yes, the requirements are met. The agent is next to a table (1 step to the south) and has wood and stone in their inventory. 5. Collect Iron (Do) - No, the requirement is not met. The agent must have a stone_pickaxe to collect iron, but they currently only have a wood_pickaxe in their inventory. They should first make a stone_pickaxe (Priority 4 action) before they can collect iron. Question: Did the last player action succeed? Why? Answer: Yes, the last player action succeeded. The player used the do action while facing stone with a wood_pickaxe in their inventory, allowing them to successfully collect the stone (1 stone added to the inventory). Question: Choose the best executable action from above. Answer: The best executable action from above is Priority 4: Make Stone Pickaxe (Make_Stone_Pickaxe), as it meets all the requirements: the agent is near a table (1 step to the south) and has wood and stone in their inventory. ============Step: 29, Cumulative Reward: 0.0============ You took action make_stone_pickaxe. You see: - grass 1 steps to your west - stone 2 steps to your south-east - tree 3 steps to your south - coal 3 steps to your north - iron 2 steps to your north - table 1 steps to your south You face path at your front (east). Your status: - health: 9/9 - food: 8/9 - drink: 8/9 - energy: 9/9 Your inventory: - stone: 1 - wood_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move North Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass: Provides saplings to plant for a steady food supply. Requires no additional tools to collect. 2. Stone: Provides stone for crafting stone tools, weapons, and building materials. Requires a wood_pickaxe or better to collect. 3. Tree: Provides wood for crafting tools, weapons, and building materials. Requires an axe or at least hands to collect. 4. Coal: Provides coal for smelting iron and cooking food. Requires a wood_pickaxe or better to collect. 5. Iron: Provides iron for crafting iron tools and weapons. Requires a stone_pickaxe or better to collect. 6. Table: Provides a crafting surface for making various tools and weapons. Requires wood to craft and place. Question: What was the last action taken by the player? Answer: The last action taken by the player was make_stone_pickaxe. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass: Yes, the requirements are met for interaction as no additional tools are needed to collect saplings. 2. Stone: Yes, the requirements are met for interaction as you have a wood_pickaxe in your inventory. 3. Tree: Yes, the requirements are met for interaction as you can use your hands to collect wood (although having an axe would be more efficient). 4. Coal: Yes, the requirements are met for interaction as you have a wood_pickaxe in your inventory. 5. Iron: Yes, the requirements are met for interaction as you have crafted a stone_pickaxe. 6. Table: Yes, the requirements are met for interaction as the table is already placed and can be used for crafting. 52 Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Priority 5/5: Collect Iron - Collecting iron will allow you to upgrade your tools and weapons, making it easier to defend yourself and progress further in the game. Since you have crafted a stone_pickaxe, you can now collect iron. 2. Priority 4/5: Collect Coal - Coal is essential for smelting iron and cooking food. Collecting coal with your wood_pickaxe will help you smelt the iron you collect and improve your resources. 3. Priority 3/5: Collect Wood - Wood is a basic resource needed for crafting new tools, weapons, and building materials. Collecting more wood from the nearby tree will ensure you have enough to craft any necessary items as you progress. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Requirements for the top sub-task (Collect Iron): - Make a Stone Pickaxe: You have already crafted a stone pickaxe in Player Observation Step 58. What should the player do first: - Move towards the iron: In the Player Observation Step 58, you see iron 2 steps to your north. You should move north twice to reach the iron. - Collect the iron: Once you are adjacent to the iron, use your stone_pickaxe to collect it by taking action ‚Äôdo‚Äô. This will add the iron resource to your inventory. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move North (Requirement: Flat ground above the agent) - Move North twice to reach the iron. 2. Priority 2: Do (Requirement: Facing creature or material; have necessary tool) - Use the stone_pickaxe to collect the iron once you are adjacent to it. 3. Priority 3: Move North (Requirement: Flat ground above the agent) - Move North to get close to the coal. 4. Priority 4: Do (Requirement: Facing creature or material; have necessary tool) - Use the wood_pickaxe to collect the coal once you are adjacent to it. 5. Priority 5: Make Iron Pickaxe (Requirement: Nearby table, furnace; wood, coal, iron in inventory) - Craft an Iron Pickaxe once you have collected enough iron and coal, and are close to a table and furnace. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Move North (Requirement: Flat ground above the agent) - Yes, the requirement is met, as there is flat ground above the agent. 2. Priority 2: Do (Requirement: Facing creature or material; have necessary tool) - The requirement is not met yet because the player needs to move north first and face the iron before using the stone_pickaxe to collect it. 3. Priority 3: Move North (Requirement: Flat ground above the agent) - Yes, the requirement is met, as there is flat ground above the agent. 4. Priority 4: Do (Requirement: Facing creature or material; have necessary tool) - The requirement is not met yet because the player needs to move north first and face the coal before using the wood_pickaxe to collect it. 5. Priority 5: Make Iron Pickaxe (Requirement: Nearby table, furnace; wood, coal, iron in inventory) - The requirement is not met yet because the player has not collected iron and coal. Once the player collects these resources and is near a table and furnace, this requirement will be met. Question: Did the last player action succeed? Why? Answer: Based on the observations provided, we cannot determine if the last action taken by the player to make_stone_pickaxe was successful or not. The observation report in Step 58 is the same as in Step 56, but we would need information about any changes in the inventory or messages from the game (e.g., stone_pickaxe added to inventory or a failed message ) to verify if the action was actually successful. Question: Choose the best executable action from above. Answer: The best executable action from the list above is Priority 1: Move North (Requirement: Flat ground above the agent). The requirement is met, so the player can move closer to the iron and coal. ============Step: 30, Cumulative Reward: 0.0============ You took action move_north. You see: - grass 1 steps to your west - stone 3 steps to your north-east - path 1 steps to your east - tree 4 steps to your north-west - coal 2 steps to your north - table 2 steps to your south You face iron at your front (north). Your status: - health: 9/9 - food: 8/9 - drink: 8/9 - energy: 8/9 53 Your inventory: - stone: 1 - wood_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Do Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass: Provides no specific resources, no requirement. 2. Stone: Provides stone, requires a wood_pickaxe or better to collect. 3. Path: Provides no resources, no requirement. 4. Tree: Provides wood, requires a wood_pickaxe or better to collect. 5. Coal: Provides coal, requires a wood_pickaxe or better to collect. 6. Table: Helps craft items, no requirement. 7. Iron: Provides iron, requires a stone_pickaxe or better to collect. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_north. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass: No specific interaction is required, so the requirements are met. 2. Stone: Yes, you have a wood_pickaxe in your inventory, so the requirements are met. 3. Path: No specific interaction is required, so the requirements are met. 4. Tree: Yes, you have a wood_pickaxe in your inventory, so the requirements are met. 5. Coal: Yes, you have a wood_pickaxe in your inventory, so the requirements are met. 6. Table: No specific interaction is required, so the requirements are met. 7. Iron: Yes, you have a stone_pickaxe in your inventory, so the requirements are met. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Collect Iron (Priority: 5/5): Using the stone_pickaxe in the inventory, collect iron, which is essential for crafting better tools and weapons. 2. Collect Coal (Priority: 4/5): Use the wood_pickaxe in the inventory to collect coal, which will be valuable for smelting iron and other ores in the furnace. 3. Collect Wood (Priority: 3/5): Use the wood_pickaxe in the inventory to collect more wood from the tree. Wood is a versatile resource for crafting, building, and making essential tools. Question: What are the requirements for the top sub-task? What should the player do first? Answer: For the top sub-task - Collect Iron: Requirements: - Have a Stone Pickaxe in the inventory (the player already has one) What should the player do first: - Use the Stone Pickaxe in the inventory to mine the iron located 1 step to the north. To do this, the player can take action Do since they are already facing the iron. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority: 1 - Action: Do Requirement: Facing iron and have a Stone Pickaxe in the inventory (the player is currently facing iron and has a Stone Pickaxe) 2. Priority: 2 - Action: Make Iron Pickaxe Requirement: Nearby table, furnace; wood, coal, and iron in inventory (player needs to collect iron and coal, and have a placed furnace) 3. Priority: 3 - Action: Make Iron Sword Requirement: Nearby table, furnace; wood, coal, and iron in inventory (player needs to have the collected iron smelted and a placed furnace) 4. Priority: 4 - Action: Place Furnace Requirement: Stone in inventory (the player has one stone, but may need more to craft a furnace) 5. Priority: 5 - Action: Do (for collecting coal) Requirement: Facing coal and have a Stone Pickaxe or Wood Pickaxe in inventory (the player has a Stone Pickaxe; they need to move to face the coal, which is 2 steps to the north) Question: For each action in the list, are the requirements met? Answer: 1. Priority: 1 - Action: Do (for collecting iron) Requirements met: Yes (the player is facing iron and has a Stone Pickaxe) 2. Priority: 2 - Action: Make Iron Pickaxe Requirements met: No (the player needs to collect iron and coal, and have a placed furnace) 3. Priority: 3 - Action: Make Iron Sword Requirements met: No (the player needs to have the collected iron smelted and a placed furnace) 4. Priority: 4 - Action: Place Furnace Requirements met: No (the player has one stone, but may need more to craft a furnace) 54 5. Priority: 5 - Action: Do (for collecting coal) Requirements met: No (the player has a Stone Pickaxe; they need to move to face the coal, which is 2 steps to the north) Question: Did the last player action succeed? Why? Answer: Yes, the last player action (move_north) succeeded because there was a flat ground to the north of the player, allowing them to move in that direction. Question: Choose the best executable action from above. Answer: The best executable action from the list above is: Priority: 1 - Action: Do (for collecting iron) Requirements met: Yes (the player is facing iron and has a Stone Pickaxe) ============Step: 31, Cumulative Reward: 0.0============ You took action do. You see: - grass 1 steps to your west - stone 3 steps to your north-east - path 1 steps to your east - tree 4 steps to your north-west - coal 2 steps to your north - table 2 steps to your south You face iron at your front (north). Your status: - health: 9/9 - food: 8/9 - drink: 8/9 - energy: 8/9 Your inventory: - stone: 1 - wood_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move West Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass: Provides saplings when collected, requires no tool. 2. Stone: Provides stone resource when collected, requires a wood pickaxe or a better tool. 3. Path: No resource provided, can be walked on without any tool. 4. Tree: Provides wood when collected, requires no tool. 5. Coal: Provides coal resource when collected, requires a wood pickaxe or a better tool. 6. Table: Provides crafting capability for tools and weapons, already placed and requires no tool. 7. Iron: Provides iron resource when collected, requires a stone pickaxe or a better tool. Question: What was the last action taken by the player? Answer: The last action taken by the player was do. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass: Yes, the requirements are met for interaction as no tool is required. 2. Stone: Yes, the requirements are met for interaction since you have a wood_pickaxe in your inventory. 3. Path: Yes, the requirements are met for interaction as no tool is required to walk on the path. 4. Tree: Yes, the requirements are met for interaction as no tool is required to collect wood. 5. Coal: Yes, the requirements are met for interaction since you have a wood_pickaxe in your inventory. 6. Table: Yes, the requirements are met for interaction as the table is already placed and requires no tool. 7. Iron: No, the requirements are not met for interaction as you need a stone pickaxe or better to collect iron, but you only have a wood_pickaxe in your inventory. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Craft a stone pickaxe (Priority: 5/5): You need a stone pickaxe to be able to collect iron. Gather more stone using the wood pickaxe and then craft the stone pickaxe at the table. 2. Collect coal (Priority: 4/5): Since you have a wood pickaxe, you can collect coal which will be required later for smelting iron using a furnace. 3. Collect more wood (Priority: 3/5): Wood is an essential resource to make tools and weapons, as well as for building structures. Collect more wood from trees to keep a sufficient supply in your inventory. Question: What are the requirements for the top sub-task? What should the player do first? Answer: The requirements for the top sub-task, Craft a stone pickaxe, are as follows: 1. Collect enough stone: You need at least 3 stone blocks. You have 1 stone in your inventory, so you need to collect 2 more using the wood pickaxe. 2. Have a crafting table nearby: You have a table 2 steps to your south, which you can use to craft the stone pickaxe. 3. Have a wood pickaxe: You already have a wood_pickaxe in your inventory, which is required to collect stone. 55 The player should first collect 2 more stone blocks. To do this, move towards a stone block, face it, and use the do action with the wood pickaxe equipped to collect the stone. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move West (Requirement: Flat ground left to the agent) - You should move west to approach the stone that is 3 steps to your north-east. 2. Priority 2: Move North (Requirement: Flat ground above of the agent) - After moving west, move north to get closer to the stone for collecting it. 3. Priority 3: Move East (Requirement: Flat ground right to the agent) - Move east to reach the stone block once you are closer after moving north. 4. Priority 4: Do (Facing creature or material; have necessary tool) - Face the stone block and use the do action to mine it with your wood pickaxe. Repeat this step for two stone blocks. 5. Priority 5: Make Stone Pickaxe (Nearby table; wood, stone in inventory) - After collecting enough stone, approach the table 2 steps to your south, and use the make stone pickaxe action to craft the tool. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Move West (Requirement: Flat ground left to the agent) - Yes, the requirement is met. There is grass 1 step to your west, representing flat ground to move onto. 2. Priority 2: Move North (Requirement: Flat ground above of the agent) - Yes, the requirement is met. The flat ground is confirmed after you move west in the previous step. 3. Priority 3: Move East (Requirement: Flat ground right to the agent) - Yes, the requirement is met. After moving west and then north, you have flat ground to the east with the stone block. 4. Priority 4: Do (Facing creature or material; have necessary tool) - Yes, the requirement is met. You have the wood_pickaxe in your inventory, and you will be facing the stone block after previous movements. 5. Priority 5: Make Stone Pickaxe (Nearby table; wood, stone in inventory) - Yes, the requirement is met. You will have enough stone in your inventory after mining, and the table is 2 steps to your south. Question: Did the last player action succeed? Why? Answer: It is not explicitly stated whether the do action succeeded or not. However, since the inventory and status of the player did not change between Step 60 and Step 62, it is possible that the action did not succeed. This might be because the player does not have the necessary tool (a stone pickaxe or better) to collect iron, and they attempted to collect iron with a wood pickaxe which is not sufficient for that task. Question: Choose the best executable action from above. Answer: The best executable action from the list above is Priority 1: Move West. The requirement for this action, flat ground to the agent‚Äôs left, is met as there is grass 1 step to the player‚Äôs west. ============Step: 32, Cumulative Reward: 0.0============ You took action move_west. You see: - stone 4 steps to your north-east - path 1 steps to your east - tree 3 steps to your north-west - coal 3 steps to your north-east - iron 2 steps to your north-east - table 3 steps to your south-east You face grass at your front (west). Your status: - health: 9/9 - food: 8/9 - drink: 8/9 - energy: 8/9 Your inventory: - stone: 1 - wood_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move North Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides resources to craft tools and build structures; requires a pickaxe (wood, stone, iron) to collect. 2. Path: Provides safe and clear walking space; no requirements. 3. Tree: Provides wood for crafting and construction; requires an axe (wood, stone, iron) to collect. 4. Coal: Provides fuel for smelting and crafting; requires a pickaxe (wood, stone, iron) to collect. 5. Iron: Provides resources for crafting stronger tools and weapons; requires a stone or iron pickaxe to collect. 6. Table: Allows crafting of tools and items; created using wood. 7. Grass: No direct resources, may contain hidden items or provide space for other objects; no requirements. 56 Question: What was the last action taken by the player? Answer: The last action taken by the player was move_west. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Yes, you have a wood_pickaxe in your inventory, which can be used to collect stone. 2. Path: Yes, there are no requirements for interacting with the path as it is already a clear walking space. 3. Tree: No, you don‚Äôt have an axe in your inventory. You need a wood, stone, or iron axe to collect wood from the tree. 4. Coal: Yes, you have a wood_pickaxe in your inventory, which can be used to collect coal. 5. Iron: No, you need a stone or iron pickaxe to collect iron. Your current wood_pickaxe is not strong enough. 6. Table: Yes, the table is available for crafting items, and you have the required resources (wood or stone) in your inventory for crafting some tools. 7. Grass: Yes, you can interact with grass without any requirements. However, there are no direct resources provided by grass. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Collect more stone to craft a stone pickaxe (Priority: 5) - Collecting more stone will allow the player to upgrade their pickaxe, allowing them to gather resources such as iron more efficiently. 2. Collect coal for smelting and crafting (Priority: 4) - Having coal in the inventory will be essential for smelting iron later on and crafting items that require fuel. 3. Find a source of water to drink (Priority: 3) - The player‚Äôs drink level is 8/9, and finding a water source will help replenish it to maintain their survival. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Top sub-task: Collect more stone to craft a stone pickaxe. Requirements: The player must have a wood pickaxe in their inventory (which they already have) and must find stone to mine. What should the player do first: The player should move towards the stone (4 steps to their north-east) and mine it using their wood pickaxe to collect more stone. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move North-East (Move_NE) Requirement: Flat ground diagonally to the north-east of the agent. 2. Priority 2: Move North-East (Move_NE) Requirement: Flat ground diagonally to the north-east of the agent. 3. Priority 3: Move North-East (Move_NE) Requirement: Flat ground diagonally to the north-east of the agent. 4. Priority 4: Move North-East (Move_NE) Requirement: Flat ground diagonally to the north-east of the agent. 5. Priority 5: Do (Mine stone with the wood_pickaxe) Requirement: Facing the stone and have the necessary tool (wood_pickaxe) in the inventory. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Move North-East (Move_NE) Requirement: Flat ground diagonally to the north-east of the agent. Met: Yes (path 1 step to the east and stone 4 steps to the north-east) 2. Priority 2: Move North-East (Move_NE) Requirement: Flat ground diagonally to the north-east of the agent. Met: Yes (after making the first move) 3. Priority 3: Move North-East (Move_NE) Requirement: Flat ground diagonally to the north-east of the agent. Met: Yes (after making the second move) 4. Priority 4: Move North-East (Move_NE) Requirement: Flat ground diagonally to the north-east of the agent. Met: Yes (after making the third move) 5. Priority 5: Do (Mine stone with the wood_pickaxe) Requirement: Facing the stone and have the necessary tool (wood_pickaxe) in the inventory. Met: Not yet (after making the fourth move, this condition will be satisfied). Question: Did the last player action succeed? Why? Answer: Yes, the last player action move_west succeeded because there was flat ground (grass) to the west of the player, allowing them to move in that direction. Question: Choose the best executable action from above. Answer: The best executable action from the list above is: Priority 1: Move North-East (Move_NE) Requirement: Flat ground diagonally to the north-east of the agent. ============Step: 33, Cumulative Reward: 0.0============ 57 You took action move_north. You see: - stone 3 steps to your north-east - path 2 steps to your south-east - tree 2 steps to your north-west - coal 2 steps to your north-east - iron 1 steps to your east - table 4 steps to your south-east You face grass at your front (north). Your status: - health: 9/9 - food: 8/9 - drink: 8/9 - energy: 8/9 Your inventory: - stone: 1 - wood_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move East Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone resource; requires a wood_pickaxe or better to collect. 2. Path: Provides easier movement; no requirements to use. 3. Tree: Provides wood resource; requires an axe or hands to collect. 4. Coal: Provides coal resource; requires a wood_pickaxe or better to collect. 5. Iron: Provides iron resource; requires a stone_pickaxe or better to collect. 6. Table: Provides crafting support for making tools and weapons; requires wood to create. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_north. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Yes, the requirements are met as you have wood_pickaxe in your inventory. 2. Path: Yes, the requirements are met as there are no specific requirements to use the path. 3. Tree: Yes, the requirements are met as you can collect wood with your hands, though having an axe would be more efficient. 4. Coal: Yes, the requirements are met as you have wood_pickaxe in your inventory. 5. Iron: Yes, the requirements are met as you have wood_pickaxe in your inventory, but you need a stone_pickaxe for more efficient and successful collection. 6. Table: Yes, the requirements are met as you have already placed a table 4 steps to your south-east. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Collect iron (Priority: 5/5): Since you are close to iron and have a wood_pickaxe, you should aim to collect the iron. However, you would want to craft a stone_pickaxe for more successful and efficient collection. 2. Craft a stone_pickaxe (Priority: 4/5): Before collecting the iron, it would be better to craft a stone_pickaxe. Since you have stone in your inventory, you can craft a stone_pickaxe at the table located 4 steps to your south-east. 3. Collect coal (Priority: 3/5): Coal is an important resource for smelting iron. Once you have the stone_pickaxe, you can collect coal more efficiently. The coal is 2 steps to your north-east. Question: What are the requirements for the top sub-task? What should the player do first? Answer: The requirements for the top sub-task (collect iron) are: 1. Have a stone_pickaxe or better (currently, the player only has a wood_pickaxe). To fulfill the requirement, the player should: 1. Craft a stone_pickaxe, which requires the player to be near the table. So, the player should first move to the table located 4 steps to their south-east and then craft a stone_pickaxe using the stone they have in their inventory. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move East (Requirement: Flat ground right to the agent) 2. Priority 2: Move South (Requirement: Flat ground below the agent) 3. Priority 3: Make Stone Pickaxe (Requirement: Nearby table; wood, stone in inventory) 4. Priority 4: Move North (Requirement: Flat ground above the agent) 5. Priority 5: Move East (Requirement: Flat ground right to the agent) These actions will guide the player towards the table, craft a stone_pickaxe, and then move towards the iron so they can collect it. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Move East (Requirement: Flat ground right to the agent) - Yes, the requirement is met, as the path is 2 steps to the south-east. 58 2. Priority 2: Move South (Requirement: Flat ground below the agent) - Yes, the requirement is met, as the path is 2 steps to the south-east. 3. Priority 3: Make Stone Pickaxe (Requirement: Nearby table; wood, stone in inventory) - No, the requirement is not met, as the table is 4 steps away to the south-east, and the player needs to move closer to the table first. 4. Priority 4: Move North (Requirement: Flat ground above the agent) - Yes, the requirement is met, as there is grass at the front (north). 5. Priority 5: Move East (Requirement: Flat ground right to the agent) - Yes, the requirement is met, as the path is 2 steps to the south-east. Question: Did the last player action succeed? Why? Answer: Yes, the last player action (move_north) succeeded. This is because there was flat ground (grass) in front of the player, which was a valid and open space for the player to move into. Question: Choose the best executable action from above. Answer: The best executable action from above is Priority 1: Move East since its requirement (flat ground right to the agent) is currently met. ============Step: 34, Cumulative Reward: 0.0============ You took action move_east. You see: - grass 1 steps to your west - stone 3 steps to your north-east - path 2 steps to your south-east - tree 2 steps to your north-west - coal 2 steps to your north-east - table 4 steps to your south-east You face iron at your front (east). Your status: - health: 9/9 - food: 8/9 - drink: 8/9 - energy: 8/9 Your inventory: - stone: 1 - wood_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move North Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass: Provides no resources. No requirements. 2. Stone: Provides stone resources. Requires a wood_pickaxe or better to collect. 3. Path: Provides no resources. No requirements. 4. Tree: Provides wood resources. Requires a wood_pickaxe or better to collect. 5. Coal: Provides coal resources. Requires a wood_pickaxe or better to collect. 6. Iron: Provides iron resources. Requires a stone_pickaxe or better to collect. 7. Table: Provides crafting functionality. Requires placing with wood in the inventory. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_east. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass: There are no requirements for interaction, so the requirements are met. 2. Stone: Requires a wood_pickaxe or better to collect. You have a wood_pickaxe in your inventory, so the requirements are met. 3. Path: There are no requirements for interaction, so the requirements are met. 4. Tree: Requires a wood_pickaxe or better to collect. You have a wood_pickaxe in your inventory, so the requirements are met. 5. Coal: Requires a wood_pickaxe or better to collect. You have a wood_pickaxe in your inventory, so the requirements are met. 6. Iron: Requires a stone_pickaxe or better to collect. You only have a wood_pickaxe in your inventory, so the requirements are not met. 7. Table: Requires placing with wood in the inventory. In this observation, placement is not required as the table is already placed, so the requirements for interaction are met. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Collect Coal: Priority 4/5. Since you have a wood_pickaxe and are near coal, it‚Äôs a good opportunity to collect the coal for later usage, such as smelting iron. 2. Collect more Stone: Priority 3/5. With the wood_pickaxe in your inventory, collecting more stone is possible, allowing you to craft a stone_pickaxe to collect iron later. 3. Move closer to the Table: Priority 2/5. As a crafting station, the table is important for future crafting activities, so being close to it can be helpful when you need to craft new items or tools. Note that the priorities are subjective and might vary according to the player‚Äôs preferences and goals. The top sub-tasks listed here are based on the current observation and resources available. 59 Question: What are the requirements for the top sub-task? What should the player do first? Answer: For the top sub-task of Collecting Coal: Requirements: - Have wood_pickaxe in your inventory (which you already have). - Reach the coal (2 steps to your north-east). The first thing the player should do is move towards the coal by heading north-east. To do this, follow these steps: 1. Move north. 2. Move east. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move North (Action 3) Requirement: Flat ground above the agent. 2. Priority 2: Move East (Action 2) Requirement: Flat ground right to the agent. 3. Priority 3: Do (Action 5) Requirement: Facing the coal; have a wood_pickaxe in inventory (which you already have). 4. Priority 4: Move to the table (Follow steps to reach the table) Requirements: Flat ground in the direction of the table. 5. Priority 5: Make Iron Pickaxe (Action 13) Requirements: Nearby table, furnace; wood, coal, and iron in inventory. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Move North (Action 3) Requirement: Flat ground above the agent. - Yes, the requirement is met as there is a grass block to the north. 2. Priority 2: Move East (Action 2) Requirement: Flat ground right to the agent. - No, the requirement is not met as there is an iron block to the east. 3. Priority 3: Do (Action 5) Requirement: Facing the coal; have a wood_pickaxe in inventory (which you already have). - No, the requirement is not met as you are currently facing the iron block, not the coal. 4. Priority 4: Move to the table (Follow steps to reach the table) Requirements: Flat ground in the direction of the table. - To determine if the requirements are met, you need to assess the current state and surrounding environment. In the current state, the table is 4 steps to your south-east, which means, you need to move around to get to it. As of now, in the current state, the path to the table is not obstructed, and you can move south-east. 5. Priority 5: Make Iron Pickaxe (Action 13) Requirements: Nearby table, furnace; wood, coal, and iron in inventory. - No, the requirements are not met as you currently only have a wood_pickaxe and stone in your inventory. You will need coal and iron, as well as a furnace, to make the iron pickaxe. Question: Did the last player action succeed? Why? Answer: Yes, the last player action succeeded because the player moved from their previous position to the east, where they are now facing iron. This indicates that there was flat ground to the east, allowing the player to move in that direction successfully. Question: Choose the best executable action from above. Answer: The best executable action from above is Priority 1: Move North (Action 3) since the requirement of flat ground above the agent is met. ============Step: 35, Cumulative Reward: 0.0============ You took action move_north. You see: - stone 2 steps to your east - path 3 steps to your south-east - tree 1 steps to your west - coal 1 steps to your east - iron 2 steps to your south-east You face grass at your front (north). Your status: - health: 9/9 - food: 8/9 - drink: 8/9 - energy: 8/9 Your inventory: - stone: 1 - wood_pickaxe: 1 ------------ QA ------------ Question: Action Answer: 60 Move South Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone resource; requires a wood pickaxe or better to collect. 2. Path: Provides no resource; can be used for movement. 3. Tree: Provides wood resource; requires no tool to collect. 4. Coal: Provides coal resource; requires a wood pickaxe or better to collect. 5. Iron: Provides iron resource; requires a stone pickaxe or better to collect. 6. Grass: Provides no resource; can be used for movement. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_north. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Yes, the requirement is met as you have a wood_pickaxe in your inventory. 2. Path: Yes, there are no requirements for interaction. 3. Tree: Yes, there are no tool requirements for collecting wood. 4. Coal: Yes, the requirement is met as you have a wood_pickaxe in your inventory. 5. Iron: No, the requirement of a stone_pickaxe is not met since you only have a wood_pickaxe. 6. Grass: Yes, there are no requirements for interaction. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Craft a stone pickaxe (Priority: 5/5): You have stone in your inventory, so you should move towards the table and craft a stone pickaxe to collect iron and other resources. 2. Collect more wood and stone (Priority: 4/5): To be able to craft more items and build structures, you need more wood and stone. You‚Äôre close to a tree and there‚Äôs stone nearby, so prioritize collecting these resources. 3. Collect coal (Priority: 3/5): With a wood_pickaxe in your inventory, you can collect coal. It will be useful for smelting iron and other ores in the future. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Requirements for crafting a stone pickaxe (top sub-task): 1. Move to a table: The table is mentioned to be 4 steps to your south-east in the player‚Äôs observations. 2. Have stone in your inventory: You already have 1 stone in your inventory. 3. Have a wood pickaxe in your inventory: You already have a wood_pickaxe in your inventory. What the player should do first: 1. Move towards the table by heading south-east to be within reach of the table for crafting. This can be done by following the path 3 steps to your south-east and then moving 1 step north-east. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1 - Move South: Flat ground below the agent. 2. Priority 2 - Move South: Flat ground below the agent. 3. Priority 3 - Move South: Flat ground below the agent. 4. Priority 4 - Move East: Flat ground right to the agent. 5. Priority 5 - Make Stone Pickaxe: Nearby table; wood, stone in inventory. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1 - Move South: Yes, the flat ground is below the agent. 2. Priority 2 - Move South: Yes, the flat ground is below the agent. 3. Priority 3 - Move South: Yes, the flat ground is below the agent. 4. Priority 4 - Move East: Yes, the flat ground is right to the agent. 5. Priority 5 - Make Stone Pickaxe: No, the agent needs a nearby table and a stone in the inventory, but the table is not nearby (it is 4 steps to the south-east). Question: Did the last player action succeed? Why? Answer: Yes, the last player action move_north succeeded because the player faced flat ground (grass) on the north side, which met the requirement for the move_north action. Question: Choose the best executable action from above. Answer: The best executable action from the list is Priority 1 - Move South, as the requirement of having flat ground below the agent is met. ============Step: 36, Cumulative Reward: 0.0============ You took action move_south. You see: - stone 3 steps to your north-east - path 2 steps to your south-east - tree 2 steps to your north-west - coal 2 steps to your north-east - iron 1 steps to your east - table 4 steps to your south-east You face grass at your front (south). Your status: - health: 9/9 61 - food: 8/9 - drink: 8/9 - energy: 8/9 Your inventory: - stone: 1 - wood_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move East Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone resource, requires a wood_pickaxe or better to collect. 2. Path: Provides a place to walk, no requirements for interaction. 3. Tree: Provides wood resource, requires no specific tool to collect, but using an axe will speed up the process. 4. Coal: Provides coal resource, requires a wood_pickaxe or better to collect. 5. Iron: Provides iron resource, requires a stone_pickaxe or better to collect. 6. Table: Provides a crafting surface to create various tools and weapons, requires wood to build and place. 7. Grass: No specific resource provided, no requirements for interaction. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_south. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Yes, the requirements are met since you have a wood_pickaxe in your inventory. 2. Path: Yes, no requirements to interact with the path. 3. Tree: Yes, no specific tool is required to collect wood from the tree, but having an axe would be more efficient. 4. Coal: Yes, the requirements are met since you have a wood_pickaxe in your inventory. 5. Iron: No, you need a stone_pickaxe or better to collect iron, but you currently only have a wood_pickaxe. 6. Table: Yes, you can interact with the table to craft tools and weapons if you have the necessary materials in your inventory. 7. Grass: Yes, no requirements to interact with the grass. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Priority 5: Craft a stone_pickaxe to collect iron. The current wood_pickaxe is not sufficient to collect the iron resource. Crafting a stone_pickaxe requires stone and wood, which are both available in the environment. 2. Priority 4: Collect coal using the wood_pickaxe. Coal is essential for fueling the furnace to smelt iron, which can then be used to create more advanced tools and weapons. 3. Priority 3: Gather wood from trees. Wood is a versatile resource for crafting numerous items, such as tools, weapons, and shelters. You will need it for crafting the stone_pickaxe and to create other essential items in the game. Question: What are the requirements for the top sub-task? What should the player do first? Answer: The requirements for the top sub-task (Craft a stone_pickaxe to collect iron) are: 1. Collect stone: The player already has one stone in the inventory but requires an additional stone to craft a stone_pickaxe. The player should locate and collect another stone using the wood_pickaxe. 2. Have a nearby table: The player needs to stand close to a table to craft the stone_pickaxe. There is a table mentioned 4 steps to the south-east in the Player Observation Step 72. The player should approach the table. The player should first move towards the stone, which is 3 steps to the north-east (from Player Observation Step 72), to collect it using the wood_pickaxe. Once the player has enough stone, they should head to the table to the south-east to craft the stone_pickaxe. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move East (Requirement: Flat ground right to the agent) - The player should move east to approach the stone (3 steps to the northeast from Player Observation Step 72). 2. Priority 2: Move North (Requirement: Flat ground above the agent) - After moving east in step 1, the player should move north to reach the stone. 3. Priority 3: Do (Requirement: Facing creature or material; have the necessary tool) - With the wood_pickaxe in the inventory, the player should use the Do action to collect the additional stone needed. 4. Priority 4: Move South-East (Requirement: Flat ground to the south-east of the agent) - After collecting the stone, the player should move towards the table (4 steps to the southeast from Player Observation Step 72) to craft the stone_pickaxe. 5. Priority 5: Make Stone Pickaxe (Requirement: Nearby table; wood, stone in inventory) - Once the player is near the table and has the required wood and stone in the inventory, the player should craft a stone_pickaxe using the Make Stone Pickaxe action. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Move East (Requirement: Flat ground right to the agent) - Yes, the requirement is met. 2. Priority 2: Move North (Requirement: Flat ground above the agent) - The requirement will be met after completing the first action (Move East). 3. Priority 3: Do (Requirement: Facing creature or material; have the necessary tool) - The requirement will be met after completing the first two actions (Move East and Move North). 62 4. Priority 4: Move South-East (Requirement: Flat ground to the south-east of the agent) - The requirement will be met after completing the first three actions (Move East, Move North, and Do). 5. Priority 5: Make Stone Pickaxe (Requirement: Nearby table; wood, stone in inventory) - The requirement will be met after completing the first four actions (Move East, Move North, Do, and Move South-East). The player will have the necessary stone and wood_pickaxe in their inventory and will be near the table. Question: Did the last player action succeed? Why? Answer: Yes, the last player action (move_south) succeeded. There were no obstacles in the way, and the player faced grass (flat ground) at the front (south), allowing them to move in that direction. Question: Choose the best executable action from above. Answer: The best executable action from the list is Priority 1: Move East (Requirement: Flat ground right to the agent) because the requirement is currently met. ============Step: 37, Cumulative Reward: 0.0============ You took action move_east. You see: - grass 1 steps to your west - stone 3 steps to your north-east - path 2 steps to your south-east - tree 2 steps to your north-west - coal 2 steps to your north-east - table 4 steps to your south-east You face iron at your front (east). Your status: - health: 9/9 - food: 8/9 - drink: 8/9 - energy: 8/9 Your inventory: - stone: 1 - wood_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move North Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass: Provides no resources, move to other locations with no requirements. 2. Stone: Provides stone resources, requires wood_pickaxe or better to collect. 3. Path: Provides no resources, move to other locations with no requirements. 4. Tree: Provides wood resources, requires interacting by hand (no tool requirement). 5. Coal: Provides coal resources, requires wood_pickaxe or better to collect. 6. Iron: Provides iron resources, requires stone_pickaxe or better to collect. 7. Table: Allows crafting of pickaxes and swords, requires wood to build. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_east. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass: Yes, requirements met (no requirements). 2. Stone: Yes, requirements met (wood_pickaxe in inventory). 3. Path: Yes, requirements met (no requirements). 4. Tree: Yes, requirements met (no tool requirement). 5. Coal: Yes, requirements met (wood_pickaxe in inventory). 6. Iron: No, requirements not met (requires stone_pickaxe or better, but only have wood_pickaxe in inventory). 7. Table: N/A (in_player already has a table in their inventory; interaction not needed). Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Priority 5: Collect wood from the tree (2 steps to the north-west) to craft a stone_pickaxe and other essential items. 2. Priority 4: Collect coal from the coal deposit (2 steps to the north-east) using the wood_pickaxe to fuel the furnace for smelting iron later. 3. Priority 3: Craft a stone_pickaxe after collecting enough wood and stone, which will allow you to mine the iron deposit seen in the current observation. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Requirements for the top sub-task (Collect wood from the tree): - Move to the tree located 2 steps to the north-west. What should the player do first: - To reach the tree, the player should move 2 steps to the north-west: move_north, and then move_west. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. 63 Answer: 1. Action: Move North (Priority: 1/5) Requirement: Flat ground above the agent. 2. Action: Move West (Priority: 2/5) Requirement: Flat ground left to the agent. 3. Action: Do (Priority: 3/5) Requirement: Facing the tree; have the necessary tool (wood_pickaxe in the inventory). 4. Action: Move South (Priority: 4/5) Requirement: Flat ground below the agent. 5. Action: Move East (Priority: 5/5) Requirement: Flat ground right to the agent. Question: For each action in the list, are the requirements met? Answer: 1. Action: Move North (Priority: 1/5) Requirement: Flat ground above the agent. Yes, the requirement is met. 2. Action: Move West (Priority: 2/5) Requirement: Flat ground left to the agent. Yes, the requirement is met. 3. Action: Do (Priority: 3/5) Requirement: Facing the tree; have the necessary tool (wood_pickaxe in the inventory). No, the requirement is not met as the agent is currently facing iron, not a tree. 4. Action: Move South (Priority: 4/5) Requirement: Flat ground below the agent. Yes, the requirement is met. 5. Action: Move East (Priority: 5/5) Requirement: Flat ground right to the agent. Yes, the requirement is met. Question: Did the last player action succeed? Why? Answer: Yes, the last player action succeeded. The player moved to the east because there was a flat ground (grass) in that direction, allowing them to move without any obstacles. Question: Choose the best executable action from above. Answer: The best executable action from above is: Action: Move North (Priority: 1/5) Requirement: Flat ground above the agent. ============Step: 38, Cumulative Reward: 0.0============ You took action move_north. You see: - stone 2 steps to your east - path 3 steps to your south-east - tree 1 steps to your west - coal 1 steps to your east - iron 2 steps to your south-east You face grass at your front (north). Your status: - health: 9/9 - food: 8/9 - drink: 8/9 - energy: 8/9 Your inventory: - stone: 1 - wood_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move East Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone resource for crafting tools, weapons, and other structures; requires a wood pickaxe or better to be collected. 2. Path: No specific resource provided; aids in easier navigation and can be used as a marker to identify previously visited places. 3. Tree: Provides wood resource for crafting tools, shelters, and fuel; requires no special tool to be collected, but an axe or better can speed up the collection process. 4. Coal: Provides coal resource for fueling furnaces; requires a wood pickaxe or better to be collected. 5. Iron: Provides iron resource for crafting higher-level tools, weapons, and armor; requires a stone pickaxe or better to be collected. 6. Grass: No specific resource provided; can be used as a flooring material or to create a grassy environment. Question: What was the last action taken by the player? 64 Answer: The last action taken by the player was move_north. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Yes, the requirements are met, as you have a wood_pickaxe in your inventory, which can be used to collect stone. 2. Path: Yes, the requirements are met, as there are no specific requirements to interact with a path; you can walk on it or follow it for navigation purposes. 3. Tree: Yes, the requirements are met, as there are no special tools needed to collect wood from the tree. However, using an axe would speed up the collection process, but you don‚Äôt currently have one. 4. Coal: Yes, the requirements are met, as you have a wood_pickaxe in your inventory, which can be used to collect coal. 5. Iron: Yes, the requirements are met, as you have a wood_pickaxe in your inventory, which can be used to collect iron. However, a stone pickaxe or better is required to collect iron, so you need to craft a stone_pickaxe first. 6. Grass: Yes, the requirements are met, as there are no specific requirements to interact with grass; you can walk on it, dig it up, or use it for decoration. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Craft a Stone Pickaxe (Priority: 5): Since the player already has a wood pickaxe, the next step is to upgrade to a stone pickaxe for better efficiency in mining and to be able to collect iron. The player can use the stone pickaxe to further progress in the game, as it unlocks more crafting options. 2. Collect Coal (Priority: 4): Coal is essential for fueling furnaces, and the player has a wood pickaxe, which can be used to collect coal. By collecting coal, the player can smelt iron and other ores, which are necessary for crafting higher -tier tools, weapons, and armor. 3. Collect Iron (Priority: 3): The player will need to collect iron to craft advanced tools and weapons, which are essential for better survival chances and to progress in the game. However, the player must craft a stone pickaxe first to be able to collect iron. Question: What are the requirements for the top sub-task? What should the player do first? Answer: The top sub-task is to craft a Stone Pickaxe. The requirements for this task are: 1. Collect Stone: The player needs to have enough stone in their inventory to craft a stone pickaxe. They already have 1 stone, but may need more, depending on the crafting recipe in the game. 2. Place Table (Crafting Table): The player needs to have a crafting table placed nearby to perform the crafting action for making a stone pickaxe. What the player should do first: 1. If the player does not have a crafting table yet, they should collect enough wood and craft a table (crafting table) first, and then place it in a convenient location. 2. If more stone is required, the player should use their wood_pickaxe to mine additional stone. 3. Once the player has enough stone and access to a crafting table, they should craft the stone pickaxe. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: Based on the most recent player observation (Step 76), here are the top 5 actions the player should take and the requirements for each action. I have also indicated their priority out of 5 (1 being the highest priority). 1. Priority 1: Collect Coal Action: Do Requirement: Facing coal; have a wood_pickaxe in the inventory. Reason: To smelt iron and eventually craft an iron pickaxe and sword. 2. Priority 2: Move East Action: Move East Requirement: Flat ground right of the agent (east). Reason: To be closer to the coal, stone, and iron, which are needed for crafting better tools and weapons. 3. Priority 3: Collect Stone Action: Do Requirement: Facing stone; have wood_pickaxe in the inventory. Reason: To have enough stone to craft a stone pickaxe and place a furnace, which are needed for later progress in the game . 4. Priority 4: Place Table (Crafting Table) Action: Place Table Requirement: Wood in inventory. Reason: To perform the crafting action for making a stone pickaxe and other tools and weapons. Note: If the player doesn‚Äôt have wood, they should first collect wood. 5. Priority 5: Craft Stone Pickaxe Action: Make Stone Pickaxe Requirement: Nearby table (crafting table); wood, stone in inventory. Reason: To collect iron and progress further in the game. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Collect Coal Action: Do Requirement: Facing coal; have a wood_pickaxe in the inventory. Are the requirements met? Partially. The player has a wood_pickaxe in their inventory, but they are not currently facing coal. They need to move east first to face the coal. 2. Priority 2: Move East Action: Move East Requirement: Flat ground right of the agent (east). Are the requirements met? Yes. There is no indication of obstacles to the east of the player so they can move east. 65 3. Priority 3: Collect Stone Action: Do Requirement: Facing stone; have wood_pickaxe in the inventory. Are the requirements met? Partially. The player has a wood_pickaxe in their inventory, but they are not facing stone. They need to move east first to approach the stone. 4. Priority 4: Place Table (Crafting Table) Action: Place Table Requirement: Wood in inventory. Are the requirements met? No. The player does not currently have wood in their inventory. They will need to collect wood before placing a table. 5. Priority 5: Craft Stone Pickaxe Action: Make Stone Pickaxe Requirement: Nearby table (crafting table); wood, stone in inventory. Are the requirements met? No. The player needs to have a nearby crafting table, as well as both wood and stone in their inventory. Currently, they only have one stone and no wood in their inventory. They also need to place a table first to meet the nearby table requirement. Question: Did the last player action succeed? Why? Answer: Yes, the last player action (move_north) succeeded. It succeeded because there was flat ground (grass) in the direction the player was moving (north), allowing the player to move there. Question: Choose the best executable action from above. Answer: The best executable action from the list above is: Priority 2: Move East Action: Move East Requirement: Flat ground right of the agent (east). This action is executable because there is no indication of obstacles to the east of the player, so they can move east. Moving east will also bring the player closer to the coal, stone, and iron, which are needed for crafting better tools and weapons. ============Step: 39, Cumulative Reward: 0.0============ You took action move_east. You see: - grass 1 steps to your north - stone 2 steps to your east - path 3 steps to your south-east - tree 1 steps to your west - iron 2 steps to your south-east You face coal at your front (east). Your status: - health: 9/9 - food: 8/9 - drink: 8/9 - energy: 8/9 Your inventory: - stone: 1 - wood_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Do Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass: Provides no specific resources but can be used as flat ground for movement or building. No requirements. 2. Stone: Provides stone resources, can be used in crafting tools and building structures. Requires a wood_pickaxe or better to mine. 3. Path: Provides a path for easier movement without obstructions. No requirements. 4. Tree: Provides wood resources, can be used in crafting various items and building shelters. Requires a wood_pickaxe or better to obtain wood. 5. Coal: Provides coal resources, can be used as fuel for smelting iron in a furnace. Requires a wood_pickaxe or better to mine. 6. Iron: Provides iron resources, can be used in crafting higher-tier tools and weapons. Requires a stone_pickaxe or better to mine. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_east. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass: Yes, there are no requirements for interacting with grass. 2. Stone: Yes, you have a wood_pickaxe in your inventory which meets the requirement to mine stone. 3. Path: Yes, there are no requirements for using the path. 4. Tree: Yes, you have a wood_pickaxe in your inventory which meets the requirement to obtain wood from the tree. 5. Coal: Yes, you have a wood_pickaxe in your inventory which meets the requirement to mine coal. 6. Iron: No, you need a stone_pickaxe or better to mine iron, and you currently only have a wood_pickaxe in your inventory. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. 66 Answer: 1. Craft a stone_pickaxe: Priority 5/5 - Crafting a stone_pickaxe will allow you to mine iron, which is essential for upgrading your tools and weapons. 2. Mine more stone: Priority 4/5 - Mining more stone will provide resources required to craft a stone_pickaxe and other stone tools or building structures. 3. Mine coal: Priority 3/5 - Mining coal will provide fuel for smelting iron in a furnace. While not immediately essential, it will be necessary once you have collected iron. Question: What are the requirements for the top sub-task? What should the player do first? Answer: For the top sub-task (Craft a stone_pickaxe), the requirements are: - Have stone in the inventory (at least 3 pieces) - Have wood in the inventory (at least 1 piece for the handle) - Be near a table The player has 1 stone in their inventory. They should first mine more stone (2 additional pieces) to meet the requirements of crafting a stone_pickaxe. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Do (mine coal) - Requirement: Facing coal and have a wood_pickaxe in the inventory. (Player has wood_pickaxe and is currently facing coal) 2. Priority 2: Move East - Requirement: Flat ground to the east of the player. 3. Priority 3: Do (mine stone) - Requirement: Facing stone and have a wood_pickaxe in the inventory. 4. Priority 4: Move West - Requirement: Flat ground to the west of the player. 5. Priority 5: Move South - Requirement: Flat ground to the south of the player. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Do (mine coal) - Yes, the requirements are met. The player has a wood_pickaxe in their inventory, and they‚Äôre currently facing coal. 2. Priority 2: Move East - Yes, the requirement is met. There is flat ground (stone) to the east of the player. 3. Priority 3: Do (mine stone) - No, the requirement is not met yet. The player is not facing stone at the moment. They need to move east first. 4. Priority 4: Move West - Yes, the requirement is met. The player can see flat ground (tree) to the west. 5. Priority 5: Move South - Yes, the requirement is met. There is flat ground to the south of the player. Question: Did the last player action succeed? Why? Answer: Yes, the last player action (move_east) succeeded because there was flat ground to the east of the player, allowing them to move in that direction. Question: Choose the best executable action from above. Answer: The best executable action from above is Priority 1: Do (mine coal). The requirements are met, as the player has a wood_pickaxe in their inventory and is currently facing coal. ============Step: 40, Cumulative Reward: 1.0============ You took action do. You see: - grass 1 steps to your north - stone 2 steps to your east - tree 1 steps to your west - coal 3 steps to your south-east - iron 2 steps to your south-east You face path at your front (east). Your status: - health: 9/9 - food: 8/9 - drink: 8/9 - energy: 8/9 Your inventory: - stone: 1 - coal: 1 - wood_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move East Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass: Resource - Saplings for planting, Requirement - None. 67 2. Stone: Resource - Stone for crafting tools and building materials, Requirement - Wood pickaxe or stronger. 3. Path: Resource - None, Requirement - None (it is a traversable terrain). 4. Tree: Resource - Wood for crafting tools and building materials, Requirement - None. 5. Coal: Resource - Coal for smelting and fuel, Requirement - Wood pickaxe or stronger. 6. Iron: Resource - Iron for crafting advanced tools and weapons, Requirement - Stone pickaxe or stronger. Question: What was the last action taken by the player? Answer: The last action taken by the player was do. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass: Yes, the requirements are met for interaction as grass can be collected with hands or any tool. 2. Stone: Yes, the requirements are met for interaction since you have a wood_pickaxe in your inventory. 3. Path: Yes, the requirements are met for interaction as it is a traversable terrain and allows you to move. 4. Tree: Yes, the requirements are met for interaction as trees can be chopped down with hands or any tool. 5. Coal: Yes, the requirements are met for interaction as you have a wood_pickaxe in your inventory. 6. Iron: No, the requirements are not met for interaction as you need a stone pickaxe or stronger to mine iron, and you only have a wood_pickaxe in your inventory. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Craft a Stone Pickaxe (Priority: 5/5) - Since you already have stone and a wood pickaxe in your inventory, crafting a stone pickaxe will allow you to collect iron and other advanced resources. 2. Collect more Stone (Priority: 4/5) - Gathering more stone will enable you to craft additional tools, weapons, and building materials, like stone swords and furnaces. 3. Collect Wood (Priority: 3/5) - Wood is an essential resource for crafting and building. Having more wood in your inventory will help you create tools, weapons, and shelters as needed. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Top Sub-task: Craft a Stone Pickaxe Requirements: 1. Nearby crafting table 2. Wood and stone in inventory (already have one stone) What should the player do first: 1. Collect more Stone: There is stone 2 steps to the east; move towards it and use the wood pickaxe to collect it. 2. Find or place a Crafting Table: If there is no crafting table nearby, use the collected wood to craft one and place it down. 3. Craft the Stone Pickaxe: Approach the crafting table and use the available wood and stone in the inventory to create a new stone pickaxe. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move East Requirement: Flat ground right to the agent. 2. Priority 2: Do (Collect Stone) Requirement: Facing stone (to the east), and have a wood_pickaxe in inventory. 3. Priority 3: Move West (till you find a Crafting Table or a suitable place for one) Requirement: Flat ground left to the agent. 4. Priority 4: Place Table (if no existing Crafting Table is found) Requirement: Wood in inventory. 5. Priority 5: Make Stone Pickaxe Requirement: Nearby table, wood and stone in inventory (collected in previous actions). Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Move East Requirement: Flat ground right to the agent. Status: Met (You face a path to the east) 2. Priority 2: Do (Collect Stone) Requirement: Facing stone (to the east), and have a wood_pickaxe in inventory. Status: Not Met (You are not facing stone) 3. Priority 3: Move West (till you find a Crafting Table or a suitable place for one) Requirement: Flat ground left to the agent. Status: Met (You see a tree one step to your west) 4. Priority 4: Place Table (if no existing Crafting Table is found) Requirement: Wood in inventory. Status: Not Met (No wood in inventory) 5. Priority 5: Make Stone Pickaxe Requirement: Nearby table, wood and stone in inventory (collected in previous actions). Status: Not Met (Table not found and wood not in inventory) Question: Did the last player action succeed? Why? Answer: Yes, the last player action succeeded. The player was able to collect coal because they were facing coal and had the necessary tool (wood_pickaxe) in their inventory. Question: Choose the best executable action from above. 68 Answer: The best executable action from the list above is: Priority 1: Move East Requirement: Flat ground right to the agent. Status: Met (You face a path to the east) ============Step: 41, Cumulative Reward: 0.0============ You took action move_east. You see: - grass 1 steps to your west - path 2 steps to your south - tree 2 steps to your west - lava 7 steps to your north-east - coal 2 steps to your south-east - iron 1 steps to your south You face stone at your front (east). Your status: - health: 9/9 - food: 8/9 - drink: 7/9 - energy: 8/9 Your inventory: - stone: 1 - coal: 1 - wood_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Do Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass: Provides no direct resources, but it allows you to move freely without obstacles. 2. Stone: Provides stone resources, requires a wood_pickaxe or better to mine. 3. Tree: Provides wood resources, requires using hands or an axe to chop/cut it down. 4. Lava: Hazardous, no resource provided. Stay away to avoid damage. 5. Coal: Provides coal resources, requires a wood_pickaxe or better to mine. 6. Iron: Provides iron resources, requires a stone_pickaxe or better to mine. 7. Path: Provides easier movement and navigation, no resources provided. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_east. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass: You can move on the grass freely, so the requirement of flat ground is met. 2. Stone: You have a wood_pickaxe in your inventory, so the requirement of having a wood_pickaxe or better is met for mining stone. 3. Tree: You can use your hands or an axe (if you had one) to chop/cut it down, so the requirement is met. 4. Lava: The requirement is to avoid it for your safety, so stay away and don‚Äôt interact with it. 5. Coal: You have a wood_pickaxe in your inventory, so the requirement of having a wood_pickaxe or better is met for mining coal. 6. Iron: You have a wood_pickaxe in your inventory, which is not sufficient for mining iron. You need a stone_pickaxe or better to meet the requirement. 7. Path: You can move on the path without any requirements, so the requirement is met for easier movement and navigation. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Craft a Stone Pickaxe (Priority: 5/5): You have 1 stone in your inventory, and with more stones, you can craft a stone pickaxe, which allows you to mine iron. 2. Collect more Stone (Priority: 4/5): Mine the stone you‚Äôre facing to gather more and be able to craft a stone pickaxe. 3. Mine Iron (Priority: 3/5): Once you have crafted a stone pickaxe, mine the iron that‚Äôs 1 step to your south to collect iron resources for future tool and weapon crafting. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Requirements for the top sub-task (Craft a Stone Pickaxe): 1. Collect 2 more stones (You currently have 1 stone in your inventory; a total of 3 stones are required). 2. Have a nearby crafting table. What should the player do first: 1. Mine the stone you‚Äôre facing (to the east) to collect more stones. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: Priority 1: Do (Mine stone) Requirements: Facing stone; have necessary tool (wood_pickaxe). Priority 2: Move West (To go back to the grass) Requirements: Flat ground (grass) to the west of the player. 69 Priority 3: Place a Table (Crafting table) Requirements: Enough collected wood in inventory. Priority 4: Make Stone Pickaxe (Upgrade to stone pickaxe) Requirements: Nearby table; collected wood and stone in inventory. Priority 5: Collect Drink (Restore thirst) Requirements: Be close to a water source like a lake. Question: For each action in the list, are the requirements met? Answer: Priority 1: Do (Mine stone) Requirements: Facing stone; have necessary tool (wood_pickaxe). Status: Requirements met (Player is facing stone and has a wood_pickaxe in inventory). Priority 2: Move West (To go back to the grass) Requirements: Flat ground (grass) to the west of the player. Status: Requirements met (Grass is 1 step to the west). Priority 3: Place a Table (Crafting table) Requirements: Enough collected wood in inventory. Status: Requirements not met (Player doesn‚Äôt have any wood in inventory). Priority 4: Make Stone Pickaxe (Upgrade to stone pickaxe) Requirements: Nearby table; collected wood and stone in inventory. Status: Requirements not met (Player doesn‚Äôt have a table, and there is no wood in inventory). Priority 5: Collect Drink (Restore thirst) Requirements: Be close to a water source like a lake. Status: Requirements not met (Player doesn‚Äôt see a water source in their current observation). Question: Did the last player action succeed? Why? Answer: Yes, the last player action succeeded because the player was able to move east without encountering any obstacles or issues. The player‚Äôs observation after the action indicates a change in the surroundings and the direction the player is facing, which confirms the successful movement. Question: Choose the best executable action from above. Answer: The best executable action from the list above is Priority 1: Do (Mine stone). The requirements for this action are met since the player is facing the stone and has a wood_pickaxe in their inventory. ============Step: 42, Cumulative Reward: 0.0============ You took action do. You see: - grass 1 steps to your west - stone 2 steps to your north-east - tree 2 steps to your west - lava 7 steps to your north-east - coal 2 steps to your south-east - iron 1 steps to your south You face path at your front (east). Your status: - health: 9/9 - food: 8/9 - drink: 7/9 - energy: 8/9 Your inventory: - stone: 2 - coal: 1 - wood_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move South Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass: Provides no resources. No requirements. 2. Path: Provides no resources. No requirements. 3. Tree: Provides wood resource. Requires a wood or better pickaxe to collect. 4. Lava: Provides no resources. Avoid it to prevent damage. 5. Coal: Provides fuel resource for furnaces. Requires a wood or better pickaxe to collect. 6. Iron: Provides iron resource for tools and weapons. Requires a stone or better pickaxe to collect. 7. Stone (in inventory): Provides stone resource for tools, weapons, and building materials. Requires a wood or better pickaxe to collect. Question: What was the last action taken by the player? Answer: The last action taken by the player was do. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass: No requirements for interaction, so yes, the requirements are met. 70 2. Path: No requirements for interaction, so yes, the requirements are met. 3. Tree: Requires a wood or better pickaxe to collect. You have a wood_pickaxe in your inventory, so yes, the requirements are met. 4. Lava: Interaction is not advised, as it can cause damage. So, the requirements for safe interaction are not met. 5. Coal: Requires a wood or better pickaxe to collect. You have a wood_pickaxe in your inventory, so yes, the requirements are met. 6. Iron: Requires a stone or better pickaxe to collect. You currently have a wood_pickaxe, so no, the requirements are not met. 7. Stone (in inventory): Requires a wood or better pickaxe to collect, which you already have. As it‚Äôs already in your inventory, there‚Äôs no need for interaction at the moment. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Collect more stone to create a stone pickaxe (Priority: 5/5). Crafting a stone pickaxe will allow you to collect iron, which is essential for more advanced tools and weapons. 2. Collect wood from the nearby tree (Priority: 4/5). Wood is a crucial resource for crafting additional tools, weapons, and structures (e.g., table and shelter). 3. Collect coal from the nearby coal deposit (Priority: 3/5). Gathering more coal will be helpful for smelting iron and other ores in a furnace. Question: What are the requirements for the top sub-task? What should the player do first? Answer: To accomplish the top sub-task of collecting more stone to create a stone pickaxe, the player needs to have a crafted wooden pickaxe, which they already have in their inventory, and be near a stone deposit. The player should first move to a stone deposit, face it, and then use the do action with the wooden pickaxe to collect stone. Once enough stone is collected, the player can craft a stone pickaxe at a table. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move South - Requirement: Flat ground below the agent. Reason: The player needs to get closer to the iron deposit, which is one step to the south. 2. Priority 2: Do - Requirement: Facing creature or material; have the necessary tool (wood_pickaxe). Reason: Once the player is close to the stone deposit, they should use the wooden pickaxe to collect more stone. 3. Priority 3: Move West - Requirement: Flat ground left to the agent. Reason: To find a suitable location to place a table for crafting. 4. Priority 4: Place Table - Requirement: Wood in inventory. Reason: The player needs a table to craft a stone pickaxe. 5. Priority 5: Make Stone Pickaxe - Requirement: Nearby table; wood and stone in inventory. Reason: Once the table is placed, the player can craft a stone pickaxe, which allows the collection of iron and more efficient collection of other materials. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Move South Requirement: Flat ground below the agent. Status: Met. The path is below the agent, providing flat ground for moving south. 2. Priority 2: Do Requirement: Facing creature or material; have the necessary tool (wood_pickaxe). Status: Not Met. The player is currently facing the path, not a resource. The player has the necessary tool, though. 3. Priority 3: Move West Requirement: Flat ground left to the agent. Status: Met. There is grass to the left (west) of the agent, allowing for movement in that direction. 4. Priority 4: Place Table Requirement: Wood in inventory. Status: Not Met. The player currently does not have wood in their inventory. They need to collect it first. 5. Priority 5: Make Stone Pickaxe Requirement: Nearby table; wood and stone in inventory. Status: Not Met. The player needs to have a table nearby, which is not currently placed. Additionally, the player needs wood in their inventory, which they don‚Äôt have at the moment. Question: Did the last player action succeed? Why? Answer: Yes, the last player action succeeded. The player took action do when facing stone and had a wood_pickaxe in their inventory, allowing them to collect the stone, which is evidenced by the increase in the stone count in their inventory from 1 to 2. Question: Choose the best executable action from above. Answer: The best executable action from the list above is Priority 1: Move South, as its requirement (flat ground below the agent) is met. ============Step: 43, Cumulative Reward: 0.0============ You took action move_south. You see: - grass 1 steps to your west - stone 2 steps to your north-east - path 1 steps to your east 71 - tree 2 steps to your west - lava 7 steps to your north-east - coal 2 steps to your south-east You face iron at your front (south). Your status: - health: 9/9 - food: 8/9 - drink: 7/9 - energy: 8/9 Your inventory: - stone: 2 - coal: 1 - wood_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move North Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass: Provides no specific resources; no requirements. 2. Stone: Provides stone resource; requires wood_pickaxe or a higher-level pickaxe to collect. 3. Path: Provides safe ground for movement; no requirements. 4. Tree: Provides wood resource; requires an axe or other appropriate tool to collect. 5. Lava: Hazardous, provides no resources; stay away from it to avoid damage. 6. Coal: Provides coal resource; requires wood_pickaxe or a higher-level pickaxe to collect. 7. Iron: Provides iron resource; requires stone_pickaxe or a higher-level pickaxe to collect. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_south. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass: No specific interaction requirements; requirements met. 2. Stone: Requires wood_pickaxe or a higher-level pickaxe to collect; requirements met (wood_pickaxe in inventory). 3. Path: No specific interaction requirements; requirements met. 4. Tree: Requires an axe or other appropriate tool to collect; requirements not met (no axe in inventory). 5. Lava: Hazardous, avoid interaction; no specific interaction requirements. 6. Coal: Requires wood_pickaxe or a higher-level pickaxe to collect; requirements met (wood_pickaxe in inventory). 7. Iron: Requires stone_pickaxe or a higher-level pickaxe to collect; requirements not met (wood_pickaxe in inventory, but stone_pickaxe is needed). Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Priority 5: Craft a stone_pickaxe - This will allow the collection of iron and enable the creation of more advanced tools and weapons. To do this, the player needs more stone (they have 2, but at least 3 are needed). 2. Priority 4: Collect wood - Collecting wood is essential for crafting items, such as tools and weapons, and building structures. The player should find an appropriate tool (e.g., an axe) to efficiently collect wood from the nearby tree. 3. Priority 3: Maintain food, drink, and energy levels - The player needs to keep an eye on these levels to ensure survival. They can collect more resources to secure food and drink supplies and sleep when their energy is low. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Top sub-task: Craft a stone_pickaxe Requirements: 1. Collect 3 stones (the player already has 2, so they need 1 more). 2. Use an existing table, or collect wood and place a table for crafting. 3. Use the table to craft the stone_pickaxe. What should the player do first: The player should first find and collect 1 more stone to fulfill the requirement of 3 stones. Since there is stone 2 steps to the north-east, the player can move in that direction and collect the stone. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1 - Move North: Flat ground above the agent. Requirement: To get closer to the stone which is 2 steps to the north-east. 2. Priority 2 - Move East: Flat ground right to the agent. Requirement: To reach the stone which was 2 steps to the north-east. 3. Priority 3 - Do: Facing creature or material; have necessary tool. Requirement: Facing the stone and having the required tool (wood_pickaxe) in the inventory to collect it. 4. Priority 4 - Move West: Flat ground left to the agent. Requirement: To head back towards the area where the player previously saw a table or suitable materials for crafting. 5. Priority 5 - Make Stone Pickaxe: Nearby table; wood, stone in inventory. Requirement: The player must have 3 pieces of stone, a wood_pickaxe, and access to a nearby table. After collecting the additional stone in step 3, the player will have all the necessary resources to craft the stone_pickaxe. Question: For each action in the list, are the requirements met? 72 Answer: 1. Priority 1 - Move North: The requirement of flat ground above the agent is met. 2. Priority 2 - Move East: The requirement of flat ground right to the agent is met. 3. Priority 3 - Do: The agent is not currently facing the stone, so this requirement is not yet met. The agent does have the necessary tool (wood_pickaxe) in their inventory, so this part of the requirement is met. 4. Priority 4 - Move West: The requirement of flat ground left to the agent is met. 5. Priority 5 - Make Stone Pickaxe: The player currently has only 2 pieces of stone in their inventory and needs 3. Therefore, this requirement is not met. The other requirements, which are having a wood_pickaxe and access to a nearby table, are met. Question: Did the last player action succeed? Why? Answer: Yes, the last player action move_south succeeded because there was an open space (flat ground) available to the south of the player, allowing them to move in that direction. Question: Choose the best executable action from above. Answer: The best executable action from the list is Priority 1 - Move North, as its requirement of flat ground above the agent is met. ============Step: 44, Cumulative Reward: 0.0============ You took action move_north. You see: - stone 1 steps to your east - path 1 steps to your south - tree 3 steps to your west - lava 5 steps to your north-east - coal 3 steps to your south-east - iron 2 steps to your south - cow 6 steps to your north-west You face grass at your front (north). Your status: - health: 9/9 - food: 8/9 - drink: 7/9 - energy: 8/9 Your inventory: - stone: 2 - coal: 1 - wood_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move East Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass: Provides no resources, no requirements. 2. Stone: Provides stone, requires wood_pickaxe to mine. 3. Path: Provides easier navigation, no requirements. 4. Tree: Provides wood, no requirements to start interaction. 5. Lava: Dangerous, can cause damage, no resources, avoid it. 6. Coal: Provides coal, requires wood_pickaxe to mine. 7. Iron: Provides iron, requires stone_pickaxe to mine. 8. Cow: Provides food, no requirements to start interaction. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_north. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass: No requirements to interact; requirements met. 2. Stone: Requires wood_pickaxe to mine; requirements met (wood_pickaxe in the inventory). 3. Path: No requirements; requirements met. 4. Tree: No requirements to start interaction; requirements met. 5. Lava: Avoid it; no requirements to meet. 6. Coal: Requires wood_pickaxe to mine; requirements met (wood_pickaxe in the inventory). 7. Iron: Requires stone_pickaxe to mine; requirements not met (no stone_pickaxe in the inventory). 8. Cow: No requirements for interaction; requirements met. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Craft a stone_pickaxe (Priority: 5): Collect more stone using a wood_pickaxe to craft a stone_pickaxe. 2. Mine iron (Priority: 4): After crafting a stone_pickaxe, mine the iron to collect it for making iron tools and weapons later. 3. Gather more food and drink (Priority: 3): Interact with the cow to collect food and find a water source to refill the drink meter. 73 Question: What are the requirements for the top sub-task? What should the player do first? Answer: Requirements for the top sub-task (Craft a stone_pickaxe): 1. Collect more stone: The player already has a wood_pickaxe in their inventory, so they can mine stone from nearby stone blocks. 2. Have a table: To craft a stone_pickaxe, the player needs a table. If the player doesn‚Äôt have one, they need to collect more wood and then place a table. What should the player do first: 1. Check if they have a table: If they don‚Äôt have one, they need to collect more wood to craft and place a table. 2. Mine stone with the wood_pickaxe: Collect more stone by using the wood_pickaxe on nearby stone blocks. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move East Requirement: Flat ground right to the agent. Reason: To get closer to the stone block and mine it for crafting a stone_pickaxe later. 2. Priority 2: Do Requirement: Facing creature or material; have necessary tool. Reason: Use the wood_pickaxe to mine the stone block when standing next to the stone block. 3. Priority 3: Move West Requirement: Flat ground left to the agent. Reason: If the player doesn‚Äôt have a table, they should move closer to the tree to collect wood. 4. Priority 4: Do Requirement: Facing creature or material; have necessary tool. Reason: Use the wood_pickaxe to chop down the tree when standing next to the tree, to collect wood for crafting a table. 5. Priority 5: Place Table Requirement: Wood in inventory. Reason: Place a table if the player has enough wood in their inventory, so they can later craft the stone_pickaxe using the table. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Move East Requirement: Flat ground right to the agent. Requirement Met: Yes (path 1 step to your east) 2. Priority 2: Do Requirement: Facing creature or material; have necessary tool. Requirement Met: Not yet (the player needs to move towards and face the stone block, which requires moving east) 3. Priority 3: Move West Requirement: Flat ground left to the agent. Requirement Met: Yes (grass 1 step to your west) 4. Priority 4: Do Requirement: Facing creature or material; have necessary tool. Requirement Met: Not yet (the player needs to move towards and face the tree, which requires moving west) 5. Priority 5: Place Table Requirement: Wood in inventory. Requirement Met: No (the player currently does not have wood in their inventory) Question: Did the last player action succeed? Why? Answer: Yes, the last player action (move_north) succeeded because there was flat ground (grass) in the north direction, which allowed the player to move without any obstacles. Question: Choose the best executable action from above. Answer: The best executable action from the list above is: Priority 1: Move East Requirement: Flat ground right to the agent. Requirement Met: Yes (path 1 step to your east) ============Step: 45, Cumulative Reward: 0.0============ You took action move_east. You see: - grass 1 steps to your west - path 1 steps to your south - tree 3 steps to your west - lava 5 steps to your north-east - coal 3 steps to your south-east - iron 2 steps to your south - cow 6 steps to your north-west You face stone at your front (east). Your status: - health: 9/9 - food: 8/9 - drink: 7/9 - energy: 8/9 74 Your inventory: - stone: 2 - coal: 1 - wood_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Place Table Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone resource; requires a wood_pickaxe or better to collect. 2. Grass: Can be turned into saplings for planting; no specific requirements to collect. 3. Path: Provides ease of movement; no specific requirements. 4. Tree: Provides wood resource; no specific requirements to collect. 5. Lava: Dangerous to touch, can be used as a fuel source; requires a container to safely collect. 6. Coal: Provides coal resource, essential for smelting; requires a wood_pickaxe or better to collect. 7. Iron: Provides iron resource, used to make stronger tools and weapons; requires a stone_pickaxe or better to collect. 8. Cow: Provides food when defeated; no specific requirements to defeat. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_east. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Yes, the requirements are met as the player has a wood_pickaxe in their inventory. 2. Grass: Yes, there are no specific requirements to collect grass. 3. Path: Yes, there are no specific requirements to interact with the path. 4. Tree: Yes, there are no specific requirements to collect wood from the tree. 5. Lava: No, the player does not have a container to safely collect lava. 6. Coal: Yes, the requirements are met as the player has a wood_pickaxe in their inventory. 7. Iron: No, the player does not yet have a stone_pickaxe or better to collect the iron. 8. Cow: Yes, there are no specific requirements to defeat the cow for food. However, having a weapon like a sword would be helpful. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Craft a stone_pickaxe (Priority: 5/5): Crafting a stone_pickaxe will allow the player to collect iron, which is essential for creating better tools and weapons. The player has the necessary wood_pickaxe and stone in their inventory to craft it near a table. 2. Collect iron (Priority: 4/5): Once the player has crafted a stone_pickaxe, they should collect iron to be able to craft upgraded tools and weapons. Iron is 2 steps to the south in the current observation. 3. Defeat the cow for food (Priority: 3/5): With sufficient food, the player can maintain their health and stay active in the game. The cow is 6 steps to their north-west, and while a weapon like a sword would be useful, it is not strictly necessary for defeating the cow. Question: What are the requirements for the top sub-task? What should the player do first? Answer: The requirements for the top sub-task (Craft a stone_pickaxe) are: 1. A nearby table: The player must be close to a table to craft a stone_pickaxe. 2. Stone in the inventory: The player needs to have stone in their inventory to create the tool. 3. Wood_pickaxe: Since the player already has a wood_pickaxe, they will be able to collect more stone if needed. The first thing the player should do is find or craft a table. As we don‚Äôt have any information about a table being nearby, the player should craft a table by placing it, as they have enough wood in their inventory to do so (mentioned in Player Observation Step 88). Once the table is crafted and placed, the player can then craft the stone_pickaxe. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Place Table (Requirement: Wood in inventory) The player should place a table to enable crafting the stone_pickaxe. They have enough wood in their inventory (based on Player Observation Step 88). 2. Priority 2: Make Stone Pickaxe (Requirements: Nearby table; wood, stone in inventory) After crafting the table, the player should use it to craft the stone_pickaxe. They have enough wood and stone in their inventory (based on Player Observation Step 90). 3. Priority 3: Move South (Requirement: Flat ground below the agent) The player should move south to get closer to both coal and iron resources since they will need more coal and iron for future crafting. 4. Priority 4: Do (Facing coal; wood_pickaxe or stone_pickaxe in hand) The player should mine the coal once they are adjacent to it. They require a wood_pickaxe or stone_pickaxe to mine the coal. The player currently has the wood_pickaxe and will have the stone_pickaxe after performing Priority 2. 5. Priority 5: Move South (Requirement: Flat ground below the agent) After collecting coal, the player should continue moving south toward the iron resource to mine it next. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Place Table (Requirement: Wood in inventory) Yes, the requirement is met. Based on Player Observation Step 88, the player has wood in their inventory. 2. Priority 2: Make Stone Pickaxe (Requirements: Nearby table; wood, stone in inventory) 75 This action will be available after the player performs Priority 1 (placing the table). Based on Player Observation Step 90, the player has enough wood and stone in their inventory. 3. Priority 3: Move South (Requirement: Flat ground below the agent) Yes, the requirement is met. Based on Player Observation Step 90, there is a path 1 step to the player‚Äôs south. 4. Priority 4: Do (Facing coal; wood_pickaxe or stone_pickaxe in hand) Yes, the requirements are met. Based on Player Observation Step 90, the player has a wood_pickaxe in hand. After performing Priority 2, the player will also have a stone_pickaxe. 5. Priority 5: Move South (Requirement: Flat ground below the agent) Yes, this requirement is met. Following Priority 3 (moving south once), the player will be closer to the iron resource. Based on Player Observation Step 90, there is flat ground (path) 1 step to the player‚Äôs south. Question: Did the last player action succeed? Why? Answer: Yes, the last player action (move_east) succeeded because there was flat ground (grass) to the east of the player, allowing them to move in that direction. Question: Choose the best executable action from above. Answer: The best executable action from the list above is Priority 1: Place Table (Requirement: Wood in inventory). The player has enough wood in their inventory, so they can place the table to enable crafting the stone_pickaxe. ============Step: 46, Cumulative Reward: 0.0============ You took action place_table. You see: - grass 1 steps to your west - path 1 steps to your south - tree 3 steps to your west - lava 5 steps to your north-east - coal 3 steps to your south-east - iron 2 steps to your south - cow 5 steps to your north-west You face stone at your front (east). Your status: - health: 9/9 - food: 8/9 - drink: 7/9 - energy: 8/9 Your inventory: - stone: 2 - coal: 1 - wood_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move South Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass: Provides a resource for planting saplings and growing crops; no requirements to interact with. 2. Path: Allows easy movement and traversal; no requirements to interact with. 3. Tree: Provides wood, a resource for crafting items; requires a tool or hand to chop down. 4. Lava: Can be used as a fuel in furnaces or as a means to dispose of items, but also poses a danger to touch; requires a bucket to collect. 5. Coal: Provides a resource for fuel in furnaces and torches; requires a wood or higher tier pickaxe to mine. 6. Iron: Provides a resource for crafting items and tools; requires a stone or higher tier pickaxe to mine. 7. Cow: Provides food when killed and leather for armor and crafting; requires a weapon or hand to kill. Question: What was the last action taken by the player? Answer: The last action taken by the player was place_table. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass: Yes, the requirements are met for interaction as no specific tools are needed. 2. Path: Yes, the requirements are met for interaction as no specific tools are needed. 3. Tree: Yes, the requirements are met for interaction as you have a wood_pickaxe in your inventory. 4. Lava: No, the requirements are not met for interaction as you need a bucket to safely collect it. 5. Coal: Yes, the requirements are met for interaction as you have a wood_pickaxe in your inventory. 6. Iron: Yes, the requirements are met for interaction as you have a wood_pickaxe in your inventory, which is enough to mine iron. 7. Cow: Yes, the requirements are met for interaction as you can attack it with your hand or the wood_pickaxe, although a sword would be more efficient. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Mine Iron (Priority: 5/5): Collect iron using the wood_pickaxe to upgrade tools and weapons. 2. Collect and Drink Water (Priority: 4/5): Restore the player‚Äôs thirst level by finding a water source and drinking from it. 3. Kill Cow for Food (Priority: 3/5): Attack the cow using your hand or wood_pickaxe to obtain food items for replenishing the player‚Äôs hunger. Question: What are the requirements for the top sub-task? What should the player do first? 76 Answer: Top Sub-task: Mine Iron Requirements: 1. Possess a wood or stone pickaxe. 2. Locate Iron blocks within the environment. 3. Face the Iron block and start mining. As the player meets the requirements already (having a wood_pickaxe in their inventory and iron 2 steps to the south), the first thing the player should do is move south two steps to reach the iron block. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move South (requirement: Flat ground below the agent) 2. Priority 2: Move South (requirement: Flat ground below the agent) 3. Priority 3: Do (requirement: Facing Iron block and have necessary tool - wood_pickaxe) 4. Priority 4: Move North (requirement: Flat ground above the agent) 5. Priority 5: Move North (requirement: Flat ground above the agent) Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Move South (requirement: Flat ground below the agent) - Yes, there is a path 1 step to the South. 2. Priority 2: Move South (requirement: Flat ground below the agent) - Yes, assuming that the first Move South is taken, there should be flat ground for the second move. 3. Priority 3: Do (requirement: Facing Iron block and have necessary tool - wood_pickaxe) - Yes, the player is facing the Iron block (2 steps to the South) and has a wood_pickaxe in their inventory. 4. Priority 4: Move North (requirement: Flat ground above the agent) - Yes, the flat ground will be available after the completion of the previous South moves and the Do action. 5. Priority 5: Move North (requirement: Flat ground above the agent) - Yes, assuming that the first Move North is taken, there should be flat ground for the second move in this direction. Question: Did the last player action succeed? Why? Answer: Yes, the last player action succeeded because based on the observation step 92, they placed the table. The player had the required wood in their inventory and the faced stone, which indicated that there was enough space for the table to be placed. Question: Choose the best executable action from above. Answer: The best executable action from the list is Priority 1: Move South (requirement: Flat ground below the agent), as it meets the requirement and brings the player closer to the iron block. ============Step: 47, Cumulative Reward: 0.0============ You took action move_south. You see: - grass 1 steps to your west - stone 2 steps to your north-east - path 1 steps to your east - tree 2 steps to your west - lava 7 steps to your north-east - coal 2 steps to your south-east You face iron at your front (south). Your status: - health: 9/9 - food: 8/9 - drink: 7/9 - energy: 8/9 Your inventory: - stone: 2 - coal: 1 - wood_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Do Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass - Resource provided: Block or sapling for planting. Requirement: None. 2. Stone - Resource provided: Stone material for crafting or building. Requirement: Wood pickaxe to collect. 3. Path - Resource provided: Movement without restriction. Requirement: None. 4. Tree - Resource provided: Wood for crafting, building, or making tools. Requirement: None. 5. Lava - Resource provided: Hazard to avoid. Requirement: None. Do not interact with lava. 6. Coal - Resource provided: Coal for smelting and crafting. Requirement: Wood pickaxe to collect. 7. Iron - Resource provided: Iron material for crafting, tools or weapons. Requirement: Stone pickaxe to collect. 8. Cow - Resource provided: Food and leather when killed. Requirement: Tool or weapon to defeat. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_south. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass - Requirement: None. Yes, the requirements are met for interaction. 77 2. Stone - Requirement: Wood pickaxe to collect. Yes, the requirements are met since you have a wood_pickaxe in your inventory. 3. Path - Requirement: None. Yes, the requirements are met for interaction. 4. Tree - Requirement: None. Yes, the requirements are met for interaction. 5. Lava - Requirement: None. Do not interact with lava, as it‚Äôs hazardous. 6. Coal - Requirement: Wood pickaxe to collect. Yes, the requirements are met, as you have a wood_pickaxe in your inventory. 7. Iron - Requirement: Stone pickaxe to collect. No, the requirements are not met since you only have a wood_pickaxe in your inventory. 8. Cow - Requirement: Tool or weapon to defeat. No, the requirements are not met since you don‚Äôt have a weapon in your inventory. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Craft a stone pickaxe (Priority: 5/5) - This will allow you to collect iron and upgrade your tools further. 2. Collect more wood (Priority: 4/5) - Wood is essential for crafting, making tools, and building structures, and having more in your inventory will be useful for future needs. 3. Defeat a cow and obtain food (Priority: 3/5) - While your food status is not critical right now, obtaining more food can help maintain your health and prepare for any combat situations that may arise. Note that you might first need to craft a weapon to make this task easier. Question: What are the requirements for the top sub-task? What should the player do first? Answer: The top sub-task‚Äôs requirements are: 1. Collect stone: You need stone to craft a stone pickaxe. You already have some stone in your inventory, but you might need a little more. 2. Place table: You need a table to craft the stone pickaxe. As the table is already placed, this requirement is fulfilled. 3. Make stone pickaxe: Craft the pickaxe using the table and available resources in your inventory. The first thing the player should do is to make sure they have enough stone in their inventory. If not, they should collect more using the wooden pickaxe. Once they have enough stone, the player should use the placed table to craft the stone pickaxe. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1 - Do: (Facing creature or material; have necessary tool) Requirement: Approach iron ore and use the wood_pickaxe in the inventory to collect more iron. 2. Priority 2 - Move East: (Flat ground right to the agent) Requirement: Move towards the coal deposit to mine it. 3. Priority 3 - Do: (Facing creature or material; have necessary tool) Requirement: Use the wood_pickaxe to collect coal. 4. Priority 4 - Make Stone Pickaxe: (Nearby table; wood, stone in inventory) Requirement: Make sure to have enough stone in inventory, then craft the stone pickaxe using the table. 5. Priority 5 - Make Iron Pickaxe: (Nearby table, furnace; wood, coal, iron in inventory) Requirement: Collect enough iron and coal, then craft the iron pickaxe using the table and furnace. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1 - Do: (Facing creature or material; have necessary tool) Requirements met: Yes, the player is facing iron ore and has a wood_pickaxe in their inventory. 2. Priority 2 - Move East: (Flat ground right to the agent) Requirements met: Yes, there is flat ground (path) to the east of the player. 3. Priority 3 - Do: (Facing creature or material; have necessary tool) Requirements met: No (only after Priority 2), the player needs to move towards the coal (east) before they can mine it with their wood_pickaxe. 4. Priority 4 - Make Stone Pickaxe: (Nearby table; wood, stone in inventory) Requirements met: No, the player does not have enough wood and stone in their inventory to create a stone pickaxe. 5. Priority 5 - Make Iron Pickaxe: (Nearby table, furnace; wood, coal, iron in inventory) Requirements met: No, the player does not have all the required resources in their inventory (iron, coal, and wood) to make an iron pickaxe. They also need to make sure the table and furnace are nearby. Question: Did the last player action succeed? Why? Answer: Yes, the last player action move_south succeeded because there was flat ground (path) in the south direction, which allowed the player to move to that location. Question: Choose the best executable action from above. Answer: The best executable action from the list above is Priority 1: Do: (Facing creature or material; have necessary tool) Requirements met: Yes, the player is facing iron ore and has a wood_pickaxe in their inventory. This action allows the player to collect more iron. ============Step: 48, Cumulative Reward: 0.0============ You took action do. You see: - grass 1 steps to your west 78 - stone 2 steps to your north-east - path 1 steps to your east - tree 2 steps to your west - lava 7 steps to your north-east - coal 2 steps to your south-east You face iron at your front (south). Your status: - health: 9/9 - food: 8/9 - drink: 7/9 - energy: 8/9 Your inventory: - stone: 2 - coal: 1 - wood_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move North Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass: Provides no resources. Requirements: None. 2. Stone: Provides stone resource. Requirements: Use a wood pickaxe or better to mine. 3. Path: Provides safe passage. Requirements: None. 4. Tree: Provides wood resource. Requirements: Use an ax, a chopping tool, or your hands to collect. 5. Lava: Provides light and heat, but can damage the player. Requirements: Do not touch or move too close to lava. 6. Coal: Provides coal resource. Requirements: Use a wood pickaxe or better to mine. 7. Iron: Provides iron resource. Requirements: Use a stone pickaxe or better to mine. Question: What was the last action taken by the player? Answer: The last action taken by the player was do. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass: Yes, the requirements are met for interaction. No specific tool is needed to interact with grass. 2. Stone: Yes, the requirements are met for interaction since the player has a wood_pickaxe in their inventory. 3. Path: Yes, the requirements are met for interaction. The player can move on the path. 4. Tree: Yes, the requirements are met for interaction. The player can collect wood from the tree without any specific tools or can use an ax if they have one. 5. Lava: The requirements are met only for observing and avoiding interaction. The player should not touch or move too close to lava. 6. Coal: Yes, the requirements are met for interaction since the player has a wood_pickaxe in their inventory. 7. Iron: No, the current requirements are not met for interaction, as the player would need a stone pickaxe or better to mine iron. The player only has a wood_pickaxe in their inventory. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Craft a stone pickaxe (Priority 5): Collect enough stone by mining with the wood pickaxe and craft a stone pickaxe using the collected stone. This will allow the player to mine the iron resource, among other resources. 2. Collect more coal (Priority 4): Mine the coal with the wood pickaxe to gather more coal for smelting iron and other possible uses in the future. 3. Collect wood/resources from the tree (Priority 3): Collect wood from the tree using either hands or an ax if available, as wood is a valuable resource for crafting tools and building shelters. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Top Sub-task: Craft a stone pickaxe Requirements: - Collect 3 pieces of stone using the wooden pickaxe - Create the stone pickaxe by using a crafting table (if not available, collect more wood to craft a table first) What the player should do first: - Look for nearby stone resources (there‚Äôs stone 2 steps to the north-east in the current observation) and mine them using the wooden pickaxe until 3 pieces of stone have been gathered. Later, locate a crafting table or create one if needed, and use it to craft the stone pickaxe. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move North-East (Move towards the stone) Requirement: Flat ground in the north-east direction. 2. Priority 2: Do (Mine the stone using the wooden pickaxe) Requirement: Facing the stone and having a wooden pickaxe in the inventory. 3. Priority 3: Move to Crafting Table (Move towards a crafting table or find a suitable place to place one) Requirement: Flat ground in the direction of a crafting table or a suitable location. 4. Priority 4: Place Table (Place a crafting table) Requirement: Wood in the inventory (if a crafting table isn‚Äôt already present at the location). 5. Priority 5: Make Stone Pickaxe (Craft the stone pickaxe) Requirement: Nearby table and at least 3 pieces of stone and 1 piece of wood in the inventory. 79 Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Move North-East (Move towards the stone) Requirement: Flat ground in the north-east direction. Status: Requirement met (stone is 2 steps to the north-east) 2. Priority 2: Do (Mine the stone using the wooden pickaxe) Requirement: Facing the stone and having a wooden pickaxe in the inventory. Status: Requirement NOT met (currently facing iron, not stone) 3. Priority 3: Move to Crafting Table (Move towards a crafting table or find a suitable place to place one) Requirement: Flat ground in the direction of a crafting table or a suitable location. Status: Requirement met (path 1 step to the east, suitable location for a crafting table) 4. Priority 4: Place Table (Place a crafting table) Requirement: Wood in the inventory (if a crafting table isn‚Äôt already present at the location). Status: Requirement NOT met (no wood currently in the inventory) 5. Priority 5: Make Stone Pickaxe (Craft the stone pickaxe) Requirement: Nearby table and at least 3 pieces of stone and 1 piece of wood in the inventory. Status: Requirement NOT met (currently have only 2 stones and no wood in inventory, no table mentioned in the observation) Question: Did the last player action succeed? Why? Answer: It is unclear if the last player action succeeded, as there is no change in the player‚Äôs inventory or observations between Step 94 and Step 96. The player‚Äôs wood_pickaxe should be sufficient to mine iron, but without more information, we cannot determine if the action succeeded or failed. Question: Choose the best executable action from above. Answer: The best executable action from the list above is: Priority 1: Move North-East (Move towards the stone) Requirement: Flat ground in the north-east direction. Status: Requirement met (stone is 2 steps to the north-east) ============Step: 49, Cumulative Reward: 0.0============ You took action move_north. You see: - stone 1 steps to your east - path 1 steps to your south - tree 3 steps to your west - lava 5 steps to your north-east - coal 3 steps to your south-east - iron 2 steps to your south - cow 6 steps to your north-west You face grass at your front (north). Your status: - health: 9/9 - food: 8/9 - drink: 7/9 - energy: 8/9 Your inventory: - stone: 2 - coal: 1 - wood_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move East Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone resource, requires a wood_pickaxe or better to collect. 2. Path: No resources provided but allows easier movement. 3. Tree: Provides wood resource, requires no specific tool, but using an axe is more efficient. 4. Lava: Can be used as a fuel source, but requires a bucket to collect and caution as it can damage your health. 5. Coal: Provides coal resource, requires a wood_pickaxe or better to collect. 6. Iron: Provides iron resource, requires a stone_pickaxe or better to collect. 7. Cow: Provides food (meat) resource, requires no specific tool, attacking it until it drops the resource. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_north. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Yes, the requirements are met as you have a wood_pickaxe in your inventory. 2. Path: Yes, there are no specific requirements to interact with a path. 3. Tree: Yes, there are no specific requirements to interact with a tree. 4. Lava: No, the requirements are not met as you do not have a bucket in your inventory. 5. Coal: Yes, the requirements are met as you have a wood_pickaxe in your inventory. 6. Iron: No, the requirements are not met as you need a stone_pickaxe or better, and you only have a wood_pickaxe. 7. Cow: Yes, there are no specific requirements to interact with a cow. 80 Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Priority 5/5: Craft a stone_pickaxe to collect iron - Find or gather more stone to meet the requirements for crafting a stone_pickaxe. Having a stone_pickaxe will allow you to collect iron. 2. Priority 4/5: Collect wood from the nearby tree - Wood is necessary for crafting various tools and building materials. As there is a nearby tree, it would be convenient to collect more wood. 3. Priority 3/5: Find a water source to drink - Your drink level is a little low (7/9). To increase this, you should locate a water source and drink water to replenish your drink level. Question: What are the requirements for the top sub-task? What should the player do first? Answer: The requirements for the top sub-task, crafting a stone_pickaxe, are: 1. Collect at least 3 units of stone - The player has 2 units of stone in their inventory; they need to collect one more unit. 2. Have a wood_pickaxe - The player already meets this requirement with 1 wood_pickaxe in their inventory. 3. Access to a crafting table - The player can craft a table using wood and place it, or they can find an existing crafting table. The player should first find and interact with the nearby stone by using their wood_pickaxe to gather at least one more unit of stone. This way, they will have enough stone to craft the stone_pickaxe. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1 - Move East: The player needs to be on flat ground to their right (east) to complete this action. This will get the player closer to the stone that they need to collect. 2. Priority 2 - Do: The player must face the stone and have the necessary tool (wood_pickaxe) to collect it. Since the player already has a wood_pickaxe in their inventory, they can collect the stone by completing this action. 3. Priority 3 - Move West: To return to their initial position, the player needs flat ground to their left (west). 4. Priority 4 - Place Table: The player must have wood in their inventory to complete this action. They should place the table to create a crafting surface. 5. Priority 5 - Make Stone Pickaxe: The player needs access to a table, and they should have at least 3 units of stone in their inventory by now. Crafting a stone_pickaxe requires the table and the stone they‚Äôve collected. Question: For each action in the list, are the requirements met? Answer: 1. Move East: Yes, the requirement for flat ground to the player‚Äôs right (east) is met, as there is a path 1 step to the player‚Äôs east. 2. Do (Collect Stone): No, the requirement for facing the stone is not met. The player must face east to face the stone instead of facing grass (north) as they currently are. 3. Move West: Yes, the requirement for flat ground to the player‚Äôs left (west) is met, as there is grass 1 step to the player‚Äôs west. 4. Place Table: No, the requirement for having wood in the player‚Äôs inventory is not met. The player must collect wood first. 5. Make Stone Pickaxe: No, the requirements for having access to a table and 3 units of stone in the inventory are not met. The player must first collect more stone and wood, then craft and place a table. Question: Did the last player action succeed? Why? Answer: Yes, the last player action move_north succeeded because there was flat ground (grass) on the north side of the player, allowing them to move in that direction. Question: Choose the best executable action from above. Answer: The best executable action from the list above is to Move East because the requirement of flat ground to the player‚Äôs right (east) is met, as there is a path 1 step to the player‚Äôs east. ============Step: 50, Cumulative Reward: 0.0============ You took action move_east. You see: - grass 1 steps to your west - path 1 steps to your south - tree 3 steps to your west - lava 5 steps to your north-east - coal 3 steps to your south-east - iron 2 steps to your south - cow 7 steps to your north-west You face stone at your front (east). Your status: - health: 9/9 - food: 8/9 - drink: 7/9 - energy: 8/9 Your inventory: 81 - stone: 2 - coal: 1 - wood_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move West Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass (1 step to your west): Provides no resource. No requirements. 2. Path (1 step to your south): Provides no resource. No requirements. 3. Tree (3 steps to your west): Provides wood. Requires wood_pickaxe to collect. 4. Lava (5 steps to your north-east): Provides no resource. Dangerous to approach, avoid. 5. Coal (3 steps to your south-east): Provides coal. Requires wood_pickaxe to collect. 6. Iron (2 steps to your south): Provides iron. Requires stone_pickaxe to collect. 7. Cow (7 steps to your north-west): Provides food. No specific requirements, just approach and interact. Note: Stone is also in the current observation, at the player‚Äôs front (east). However, since the player is standing directly in front of it, I excluded it from this list. Stone provides stone and requires a wood_pickaxe to collect. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_east. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass (1 step to your west): No requirements, interaction possible. 2. Path (1 step to your south): No requirements, interaction possible. 3. Tree (3 steps to your west): Requires wood_pickaxe to collect. The requirement is met as the player has a wood_pickaxe in their inventory. 4. Lava (5 steps to your north-east): Dangerous to approach, avoid. Interaction is not recommended. 5. Coal (3 steps to your south-east): Requires wood_pickaxe to collect. The requirement is met as the player has a wood_pickaxe in their inventory. 6. Iron (2 steps to your south): Requires stone_pickaxe to collect. The requirement is not met as the player only has a wood_pickaxe in their inventory. 7. Cow (7 steps to your north-west): No specific requirements, just approach and interact. Interaction possible. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Priority 4/5: Collect more wood from the tree (3 steps to your west) using the wood_pickaxe in your inventory. Wood is an essential resource for crafting, and it is crucial to have a sufficient amount. 2. Priority 3/5: Collect coal from the coal deposit (3 steps to your south-east) using the wood_pickaxe in your inventory. Coal is needed for smelting iron and other resources in a furnace. 3. Priority 5/5: Craft a stone_pickaxe using the collected stone and wood, which will be required to collect the iron (2 steps to your south) and other valuable resources. You will need to locate a crafting table or create one if you haven ‚Äôt done so yet. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Requirements for the top sub-task (Collect more wood from the tree): 1. Wood_pickaxe: The player already has a wood_pickaxe in their inventory. 2. Proximity to the tree: The tree is 3 steps to the player‚Äôs west. What should the player do first: The player should first move towards the tree by taking 3 steps to the west. Once adjacent to the tree, the player can then use the wood_pickaxe to collect more wood. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: Priority 1: Action: Move West (towards the tree for wood) Requirement: Flat ground left to the agent Note: Move West action might be performed multiple times (up to 3 steps) to reach the tree. Priority 2: Action: Do (to collect wood using wood_pickaxe) Requirement: Facing the tree; have the wood_pickaxe in the inventory Priority 3: Action: Move South (approach a path containing resources) Requirement: Flat ground below the agent Priority 4: Action: Do (use wood_pickaxe to collect coal and iron) Requirement: Facing coal or iron; have the wood_pickaxe in the inventory Priority 5: Action: Sleep (to restore energy) Requirement: Energy level is below maximum Question: For each action in the list, are the requirements met? Answer: Priority 1: Action: Move West (towards the tree for wood) Requirement: Flat ground left to the agent - The requirement is met as there is grass 1 step to the west. 82 Priority 2: Action: Do (to collect wood using wood_pickaxe) Requirement: Facing the tree; have the wood_pickaxe in the inventory - The requirement is not met yet as the player is not facing the tree. The player needs to move closer to the tree and face it before this requirement is met. Priority 3: Action: Move South (approach a path containing resources) Requirement: Flat ground below the agent - The requirement is met as there is a path 1 step to the south. Priority 4: Action: Do (use wood_pickaxe to collect coal and iron) Requirement: Facing coal or iron; have the wood_pickaxe in the inventory - The requirement is not met yet as the player is not facing coal or iron. The player needs to move closer to the coal or iron and face it before this requirement is met. Priority 5: Action: Sleep (to restore energy) Requirement: Energy level is below maximum - The requirement is met as the player‚Äôs energy is currently at 8/9. Question: Did the last player action succeed? Why? Answer: Yes, the last player action (move_east) succeeded because there was flat ground (grass) to the agent‚Äôs east, allowing the agent to move in that direction. The player now faces a stone at their front (east). Question: Choose the best executable action from above. Answer: The best executable action from the list above is: Priority 1: Action: Move West (towards the tree for wood) Requirement: Flat ground left to the agent ============Step: 51, Cumulative Reward: 0.0============ You took action move_west. You see: - stone 2 steps to your east - path 2 steps to your south-east - tree 2 steps to your west - lava 6 steps to your north-east - coal 4 steps to your south-east - iron 3 steps to your south-east - cow 6 steps to your north-west You face grass at your front (west). Your status: - health: 9/9 - food: 7/9 - drink: 7/9 - energy: 8/9 Your inventory: - stone: 2 - coal: 1 - wood_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move West Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass: No resource provided; walkable with no requirements. 2. Stone: Provides stone resource; requires a wood_pickaxe or better to mine. 3. Path: No resource provided; walkable with no requirements. 4. Tree: Provides wood resource; can be chopped with any tools, but better tools speed up the process. 5. Lava: Dangerous; does not provide any resources and must be avoided. Can cause damage or death when getting too close. 6. Coal: Provides coal resource; requires a wood_pickaxe or better to mine. 7. Iron: Provides iron resource; requires a stone_pickaxe or better to mine. 8. Cow: Provides food when killed; can be killed with any weapon, but better weapons increase the damage dealt. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_west. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass: Yes, the requirements are met for interaction since there are no requirements to walk on grass. 2. Stone: Yes, the requirements are met for interaction as you have a wood_pickaxe in your inventory. 3. Path: Yes, the requirements are met for interaction since there are no requirements to walk on the path. 4. Tree: Yes, the requirements are met for interaction, as any tool can be used to chop down a tree (even bare hands), although better tools will speed up the process. 5. Lava: There are no requirements to interact with lava, but it is dangerous and should be avoided. So, the requirements are met for interaction, but it is not recommended. 6. Coal: Yes, the requirements are met for interaction as you have a wood_pickaxe in your inventory. 83 7. Iron: No, the requirements are not met for interaction as iron requires a stone_pickaxe or better to mine, and you only have a wood_pickaxe. 8. Cow: Yes, the requirements are met for interaction, as any weapon or tool can be used to kill a cow, although better weapons will increase the damage dealt. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Priority 4/5: Craft a stone_pickaxe: Since you have enough stone in your inventory, crafting a stone_pickaxe will allow you to mine iron and advance further in the game. 2. Priority 4/5: Collect wood: Collecting wood will enable you to craft additional tools, a table, and construct shelter. Wood is a versatile resource that is essential for progressing in the game. 3. Priority 3/5: Kill a cow and collect food: Your food level is at 7/9, so you‚Äôll need to replenish it soon. Killing a cow and collecting food will ensure you stay healthy, and it can also prevent the risk of running out of food in critical situations. Question: What are the requirements for the top sub-task? What should the player do first? Answer: The top sub-task is crafting a stone_pickaxe. The requirements for this task are: 1. Having wood and stone in your inventory. (You already have 2 stones, but you need wood.) 2. Being near a table to craft the pickaxe. Before the player can craft a stone_pickaxe, they should first collect wood which is a necessary resource for crafting. The wood can be collected by approaching a tree (there‚Äôs one 2 steps to the west) and using the wood_pickaxe. After collecting wood, the player should ensure that they are near a table to craft the stone_pickaxe. If there is no table nearby, the player may need to place one using the wood they collected. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move West (Requirement: Flat ground left to the agent) Reason: To get closer to the tree (2 steps to the west) in order to collect wood. 2. Priority 2: Do (Facing creature or material; have necessary tool) Reason: To use the wood_pickaxe on the tree to collect wood once you are near it and facing it. 3. Priority 3: Place Table (Requirement: Wood in inventory) Reason: Once you have collected wood, place a table to use for crafting. 4. Priority 4: Make Stone Pickaxe (Requirement: Nearby table; wood, stone in inventory) Reason: To craft the stone_pickaxe which will allow the player to collect iron and progress in the game. 5. Priority 5: Move South-East (Requirement: Flat ground below and right to the agent) Reason: To get closer to iron (3 steps to your south-east) after crafting the stone_pickaxe, which will be used to collect iron. Question: For each action in the list, are the requirements met? Answer: 1. Move West: Yes, the requirement of flat ground left to the agent is met since the player faces grass to the west. 2. Do: Not yet, the player needs to be facing the tree and have the required tool (wood_pickaxe is in inventory) to collect wood. 3. Place Table: No, the requirement of having wood in the inventory is not met. The player needs to collect wood first. 4. Make Stone Pickaxe: Not yet, the player needs a nearby table for crafting, and although stone is in the inventory, the player needs to collect wood and place the table first. 5. Move South-East: Yes, the requirement for the flat ground below, and right to the agent is met; this direction leads towards the iron. However, the player should first complete the crafting of a stone_pickaxe before collecting iron. Question: Did the last player action succeed? Why? Answer: Yes, the last player action move_west succeeded because the player was able to move from facing stone to facing grass, as mentioned in the observations. There was flat ground (grass) to the west of the player, which allowed the player to move in that direction successfully. Question: Choose the best executable action from above. Answer: The best executable action from the list above is Move West because the requirement of flat ground left to the agent is met and it brings the player closer to the tree to collect wood, which is essential for crafting and progressing in the game. ============Step: 52, Cumulative Reward: 0.0============ You took action move_west. You see: - grass 1 steps to your north - stone 3 steps to your east - path 3 steps to your south-east - lava 7 steps to your north-east - coal 5 steps to your south-east - iron 4 steps to your south-east - cow 5 steps to your north-west You face tree at your front (west). Your status: 84 - health: 9/9 - food: 7/9 - drink: 7/9 - energy: 8/9 Your inventory: - stone: 2 - coal: 1 - wood_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move West Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass: Resource: Provides no specific resource. Requirement: No requirement. 2. Stone: Resource: Provides stone when mined with a pickaxe. Requirement: Needs a pickaxe to mine. 3. Path: Resource: Provides easier movement or navigation. Requirement: Requires flat ground to be built. 4. Lava: Resource: Can be used as a fuel source in a furnace. Requirement: Requires a bucket to collect. 5. Coal: Resource: Provides coal when mined with a pickaxe, used in smelting and creating torches. Requirement: Needs a pickaxe to mine. 6. Iron: Resource: Provides iron ore when mined with a pickaxe, used to create iron tools and weapons. Requirement: Needs a stone_pickaxe or better to mine. 7. Cow: Resource: Provides meat for food and leather for armor when killed. Requirement: Needs to be killed, preferably using a weapon like a sword. 8. Tree: Resource: Provides wood when chopped down, used for crafting various items and tools. Requirement: Needs to be chopped down, preferably using an axe. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_west. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass: Interaction: Can walk over or look at. Requirements met: Yes. 2. Stone: Interaction: Mine to collect stone. Requirements met: Yes, you have a wood_pickaxe in your inventory. 3. Path: Interaction: Walk on or follow. Requirements met: Yes, no specific requirements to interact with a path. 4. Lava: Interaction: Collect using a bucket. Requirements met: No, a bucket is needed to collect lava. 5. Coal: Interaction: Mine to collect coal. Requirements met: Yes, you have a wood_pickaxe in your inventory. 6. Iron: Interaction: Mine to collect iron ore. Requirements met: No, a stone_pickaxe or better is needed to mine iron. 7. Cow: Interaction: Kill for resources. Requirements met: Yes, but using a weapon like a sword is more efficient. 8. Tree: Interaction: Chop down for wood. Requirements met: Yes, but using an axe is more efficient. Currently, you don‚Äôt have an axe, but you can still chop down the tree using your hands or other tools. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Create a stone_pickaxe: Priority: 5/5 85 Reason: A stone_pickaxe will allow you to mine iron ore and collect more resources efficiently. Since you have the necessary stone and a wood_pickaxe, crafting a stone_pickaxe should be your top priority. 2. Collect more wood: Priority: 4/5 Reason: Wood is essential for crafting numerous items and tools in the game. You‚Äôre currently facing a tree, and although you don‚Äôt have an axe, you can still collect wood using your hands or another tool. 3. Pursue and kill a cow for food and leather: Priority: 3/5 Reason: Your food level is 7/9, and killing a cow will provide meat for sustenance and leather for armor. It‚Äôs not a top priority but still important to ensure your survival in the game. Using a weapon like a sword will make this task more efficient. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Top Sub-task: Create a stone_pickaxe Requirements: 1. A crafting table - You need a crafting table to create more advanced tools like the stone_pickaxe. 2. Stone - You already have two pieces of stone in your inventory, which is sufficient to craft a stone_pickaxe. 3. Wood - You need wood or wooden planks to create tool handles. Since you already have a wood_pickaxe, it is likely you have crafted with wood before, so it is assumed you know the process of turning wood into planks. What should the player do first? 1. Build a crafting table if you haven‚Äôt already. To craft a table, collect wood from a tree, convert the wood into wooden planks, and then use four wooden planks to craft a table. 2. Once the crafting table is built, place it in front of you (if not already there). 3. Interact with the crafting table, and use the available stone and wood in your inventory to create a stone_pickaxe. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move West (Requirement: Flat ground left to the agent.) - You are currently facing a tree to your west, so move west to collect wood. 2. Priority 2: Do (Facing creature/item, i.e., tree; have necessary tool, i.e., wood_pickaxe.) - Collect wood from the tree in front of you using your wood_pickaxe. 3. Priority 3: Place Table (Requirement: Wood in inventory.) - Once you have collected enough wood and converted it into wooden planks, create a crafting table and place it in front of you. 4. Priority 4: Make Stone Pickaxe (Requirement: Nearby table; wood, stone in inventory.) - Interact with the placed table, and use the available stone and wood in your inventory to create a stone_pickaxe. 5. Priority 5: Collect Iron (Requirement: Make Stone Pickaxe.) - After crafting a stone_pickaxe, use it to collect iron in your environment, which is 4 steps to your south-east. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Move West (Requirement: Flat ground left to the agent.) - Yes, the requirement is met. There is a flat ground (grass) 1 step to your north, and you can move west. 2. Priority 2: Do (Facing creature/item, i.e., tree; have necessary tool, i.e., wood_pickaxe) - Yes, the requirements are met. The tree is directly in front of you, and you have a wood_pickaxe in your inventory. 3. Priority 3: Place Table (Requirement: Wood in inventory.) - No, the requirement is not met yet. You need to first perform action Priority 2 (collect wood) before having the necessary wood in your inventory to place a table. 4. Priority 4: Make Stone Pickaxe (Requirement: Nearby table; wood, stone in inventory.) - No, the requirement is not met yet. You need to first perform actions Priority 2 (collect wood) and Priority 3 (place table) before being able to make a stone_pickaxe. 5. Priority 5: Collect Iron (Requirement: Make Stone Pickaxe.) - No, the requirement is not met yet. You need to first perform actions Priority 2 (collect wood), Priority 3 (place table ), and Priority 4 (make stone_pickaxe) before you can collect iron. Question: Did the last player action succeed? Why? Answer: Yes, the last player action (move_west) succeeded because there was a clear path for the player to move in the west direction, and nothing was blocking their way. The player‚Äôs observation after taking the action shows that they have successfully moved one step to the west. Question: Choose the best executable action from above. Answer: The best executable action from above is Priority 1: Move West (Requirement: Flat ground left to the agent). The requirement is met as there is a flat ground to the west, allowing the player to move in the desired direction. ============Step: 53, Cumulative Reward: 0.0============ You took action move_west. You see: - grass 1 steps to your north - stone 3 steps to your east - path 3 steps to your south-east - lava 7 steps to your north-east - coal 5 steps to your south-east - iron 4 steps to your south-east 86 - cow 5 steps to your north-west You face tree at your front (west). Your status: - health: 9/9 - food: 7/9 - drink: 7/9 - energy: 8/9 Your inventory: - stone: 2 - coal: 1 - wood_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Do Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass: Resource provided - No specific resources. Requirement - None. 2. Stone: Resource provided - Stone for crafting tools and building. Requirement - Wood pickaxe or better. 3. Path: Resource provided - Easier movement, no resources. Requirement - None. 4. Lava: Resource provided - Can be a light source, dangerous, provides no resources. Requirement - Avoid contact. 5. Coal: Resource provided - Fuel for smelting in a furnace. Requirement - Wood pickaxe or better. 6. Iron: Resource provided - Iron for crafting better tools and weapons. Requirement - Stone pickaxe or better. 7. Cow: Resource provided - Food (meat) for restoring health. Requirement - Defeat cow to collect resource. 8. Tree (facing west): Resource provided - Wood for crafting tools, weapons and building. Requirement - Interact with tree ( use hands or tools to cut). Question: What was the last action taken by the player? Answer: The last action taken by the player was move_west. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass: Requirements met, as there are no specific requirements for interacting with grass. 2. Stone: Requirements met, as you have a wood_pickaxe in your inventory, which is required to mine stone. 3. Path: Requirements met, as there are no specific requirements for walking on a path. 4. Lava: Requirements met for avoiding contact, do not interact with lava as it can be dangerous. 5. Coal: Requirements met, as you have a wood_pickaxe in your inventory, which is required to mine coal. 6. Iron: Requirements not met, as you need a stone pickaxe or better to mine iron; you only have a wood_pickaxe. 7. Cow: Requirements met, as there are no special requirements to interact with or defeat a cow. 8. Tree (facing west): Requirements met, as you can interact with the tree using your hands or tools to cut it down (you have a wood_pickaxe in your inventory). Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Gather more wood by cutting down the tree you are facing (Priority: 5/5) - Wood is essential for crafting more tools, weapons, and building structures. 2. Mine more stone with your wood pickaxe (Priority: 4/5) - Stone is needed for crafting better tools such as a stone pickaxe, which is necessary for mining iron. 3. Defeat the cow nearby to collect meat (Priority: 3/5) - The meat will provide food to restore health when needed. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Requirements for the top sub-task (Gather more wood by cutting down the tree): 1. Face a tree - The player is currently facing a tree, so this requirement is met. 2. Have a tool capable of cutting wood - The player has a wood_pickaxe in their inventory. Since the player is already facing a tree and has a wood_pickaxe in their inventory, they can proceed with the sub-task. The player should take the following action first: - Use the wood_pickaxe on the tree to gather wood. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Do - Use the wood_pickaxe on the tree to gather wood. Requirement: Facing a tree and have a wood_pickaxe in your inventory (both requirements are currently met). 2. Priority 2: Move East - Move closer to the stone and other resources. Requirement: Flat ground to the east of the player. 3. Priority 3: Make Stone Pickaxe - Craft a better pickaxe for gathering resources like iron. Requirement: A nearby table; wood and stone in inventory (player will need more wood and stone). 4. Priority 4: Do - Collect coal and iron by using the stone_pickaxe. Requirement: Facing coal or iron, and have a stone_pickaxe in your inventory (when stone_pickaxe is crafted). 5. Priority 5: Place Furnace - Place a furnace for smelting iron. Requirement: Stone in inventory (player will need more stone). Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Do - Use the wood_pickaxe on the tree to gather wood. Requirements met: Yes, the player is facing a tree and has a wood_pickaxe in their inventory. 87 2. Priority 2: Move East - Move closer to the stone and other resources. Requirements met: Yes, there is flat ground to the east of the player. 3. Priority 3: Make Stone Pickaxe - Craft a better pickaxe for gathering resources like iron. Requirements met: No, the player needs a nearby table and more wood and stone in their inventory. 4. Priority 4: Do - Collect coal and iron by using the stone_pickaxe. Requirements met: No, the player needs to have a stone_pickaxe in their inventory, which has not been crafted yet. 5. Priority 5: Place Furnace - Place a furnace for smelting iron. Requirements met: No, the player needs more stone in their inventory to place a furnace. Question: Did the last player action succeed? Why? Answer: It is impossible to determine if the last player action succeeded since both Player Observation Step 104 and Player Observation Step 106 are identical. The situation remains the same in both steps, which indicates that either the action was unsuccessful, or the environment and player‚Äôs status did not change as a result of the action. It‚Äôs recommended to check the game‚Äôs feedback or response after each action to understand if the action succeeded or not. Question: Choose the best executable action from above. Answer: The best executable action from the list above is: Priority 1: Do - Use the wood_pickaxe on the tree to gather wood. Requirements met: Yes, the player is facing a tree and has a wood_pickaxe in their inventory. ============Step: 54, Cumulative Reward: 0.0============ You took action do. You see: - stone 3 steps to your east - path 3 steps to your south-east - tree 1 steps to your south - lava 7 steps to your north-east - coal 5 steps to your south-east - iron 4 steps to your south-east - cow 4 steps to your north-west You face grass at your front (west). Your status: - health: 9/9 - food: 7/9 - drink: 7/9 - energy: 8/9 Your inventory: - wood: 1 - stone: 2 - coal: 1 - wood_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move East Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass: Provides no resources; no requirement for interaction. 2. Stone: Provides stone resource; requires wood_pickaxe or better to collect. 3. Path: Provides no resources; can facilitate movement without any requirements. 4. Tree: Provides wood resource; can be collected using wood_pickaxe or better. 5. Lava: Provides no resources; must be avoided to prevent damage. 6. Coal: Provides coal resource; requires wood_pickaxe or better to collect. 7. Iron: Provides iron resource; requires stone_pickaxe or better to collect. 8. Cow: Provides food; can be chased and eaten to increase food level. Question: What was the last action taken by the player? Answer: The last action taken by the player was do. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass: No requirements for interaction. Requirements met. 2. Stone: Requires wood_pickaxe or better to collect. As the player has wood_pickaxe in their inventory, requirements met. 3. Path: Can facilitate movement without any requirements, Requirements met. 4. Tree: Can be collected using wood_pickaxe or better. The player has wood_pickaxe in their inventory. Requirements met. 5. Lava: Must be avoided to prevent damage. There are no requirements for interaction, but it‚Äôs recommended to avoid the lava. 6. Coal: Requires wood_pickaxe or better to collect. The player has wood_pickaxe in their inventory. Requirements met. 7. Iron: Requires stone_pickaxe or better to collect. The player only has a wood_pickaxe, so requirements are not met. 8. Cow: Can be chased and eaten to increase food level. No requirements for interaction. Requirements met. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Priority 4/5: Collect more stone using the wood_pickaxe to help create better tools and build structures. The player has 2 stone in inventory and needs more for crafting stone_pickaxe and other advanced tools or building bridges. 88 2. Priority 3/5: Chase and eat the cow to increase the food level. The current food level is 7/9, and eating a cow can help restore it to full. 3. Priority 5/5: Craft a stone_pickaxe once enough stone is collected. This will enable the player to collect iron resources, which is required for crafting stronger tools and weapons. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Requirements for the top sub-task (collect more stone): 1. Have a wood_pickaxe (already in the player‚Äôs inventory) 2. Locate stone resources (already identified 3 steps to the east) What should the player do first: The player should move east to reach the stone resources. After reaching the stone, use the wood_pickaxe to collect more stone. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move East - Requirement: Flat ground to the right of the agent (Player observed stone 3 steps to the east). 2. Priority 2: Do - Requirement: Facing material (stone) and have a necessary tool (wood_pickaxe is in the player‚Äôs inventory). 3. Priority 3: Move East - Requirement: Flat ground to the right of the agent (To explore further after collecting stone). 4. Priority 4: Move South - Requirement: Flat ground below the agent (To explore and potentially find more resources like iron and coal). 5. Priority 5: Make Stone Pickaxe - Requirement: Nearby table, wood and stone in inventory (Player has wood & stone, would need to place or find a table). Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Move East - Yes, the requirement is met. There is flat ground to the right of the agent since the player observed stone 3 steps to the east. 2. Priority 2: Do - Not yet, the player needs to move closer to the stone and face it. The wood_pickaxe is in the player‚Äôs inventory, which fulfills the tool requirement. 3. Priority 3: Move East - Yes, the requirement is met, as there is flat ground to the right of the agent. 4. Priority 4: Move South - Yes, the requirement is met, as there is flat ground below the agent with a tree 1 step to the south. 5. Priority 5: Make Stone Pickaxe - Not currently, the player has wood and stone in their inventory, but they need to place or find a table in order to craft the stone pickaxe. Question: Did the last player action succeed? Why? Answer: Yes, the last player action do succeeded because the player faced a tree and had a wood_pickaxe in their inventory. As a result, the player collected wood, which is now present in their inventory. Question: Choose the best executable action from above. Answer: The best executable action from above is Priority 1: Move East, as its requirement of flat ground to the right of the agent is met. ============Step: 55, Cumulative Reward: 0.0============ You took action move_east. You see: - stone 2 steps to your east - path 2 steps to your south-east - tree 2 steps to your south-west - lava 6 steps to your north-east - coal 4 steps to your south-east - iron 3 steps to your south-east - cow 4 steps to your north-west You face grass at your front (east). Your status: - health: 9/9 - food: 7/9 - drink: 7/9 - energy: 8/9 Your inventory: - wood: 1 - stone: 2 - coal: 1 - wood_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Place Table Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. 89 Answer: 1. Stone: Provides stone resource, requires a wood_pickaxe or better to mine. 2. Path: Provides a route for movement, no requirements. 3. Tree: Provides wood resource, requires no tools or any tool to collect. 4. Lava: Hazardous; avoid, it can cause damage or death, no requirements. 5. Coal: Provides coal resource, requires a wood_pickaxe or better to mine. 6. Iron: Provides iron resource, requires a stone_pickaxe or better to mine. 7. Cow: Provides food when defeated, no specific requirements. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_east. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Yes, the requirements are met as you have a wood_pickaxe in your inventory. 2. Path: Yes, the requirements are met as there are no specific requirements for moving along the path. 3. Tree: Yes, the requirements are met as you don‚Äôt need any specific tool to collect wood from the tree. 4. Lava: The requirement to avoid interaction is met, as there‚Äôs no need to interact with the lava. 5. Coal: Yes, the requirements are met as you have a wood_pickaxe in your inventory. 6. Iron: No, the requirements are not met as you need a stone_pickaxe to mine iron, but you only have a wood_pickaxe in your inventory. 7. Cow: Yes, the requirements are met as there are no specific requirements for interacting with a cow. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Craft a Stone Pickaxe (Priority: 5/5): This task is essential as it will allow you to mine iron, which will lead to crafting better tools and weapons. 2. Collect Coal (Priority: 4/5): This task is important because coal is needed for smelting iron, which will help you craft iron tools and weapons, enhancing your progress in the game. 3. Collect Iron (Priority: 3/5): This task is of moderate priority as it requires a Stone Pickaxe to mine the iron. Once mined, you will be able to smelt it and craft more advanced tools and weapons. Question: What are the requirements for the top sub-task? What should the player do first? Answer: The top sub-task is to craft a Stone Pickaxe. The requirements for this task are: 1. Place Table: The player must have a table placed to perform crafting actions. 2. Collect Wood: The player needs enough wood in their inventory to create the pickaxe handle. 3. Collect Stone: The player needs enough stone in their inventory to create the pickaxe head. The player should first place a Table if they don‚Äôt have one in their immediate vicinity. Since the player has enough wood and stone in their inventory, they can proceed to craft a Stone Pickaxe by interacting with the placed Table. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Place Table (Requirement: Wood in inventory) Since the player has enough wood in their inventory, they should place a Table to perform crafting actions. 2. Priority 2: Make Stone Pickaxe (Requirements: Nearby table, wood, and stone in inventory) With the Table placed, the player can craft a Stone Pickaxe using the available wood and stone in their inventory. 3. Priority 3: Move East (Requirement: Flat ground right to the agent) Moving east will bring the player closer to resources such as stone, coal, and iron. This will be helpful for future tasks and crafting. 4. Priority 4: Collect Drink (Requirement: No specific requirement) Since the player‚Äôs thirst level is 7/9, they should find a water source, such as a lake or a river, and drink from it to restore their thirst. 5. Priority 5: Collect Iron (Requirement: Make Stone Pickaxe) As the player already crafted a Stone Pickaxe, they can now collect iron ore, which will be useful for crafting more advanced tools and weapons. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Place Table (Requirement: Wood in inventory) - Yes, the requirement is met. The player has 1 wood in their inventory. 2. Priority 2: Make Stone Pickaxe (Requirements: Nearby table, wood, and stone in inventory) - No, the requirement is partially met. The player has 1 wood and 2 stone in their inventory, but they need to place the table first. 3. Priority 3: Move East (Requirement: Flat ground right to the agent) - Yes, the requirement is met. The player faces flat ground to the east, so they can move in that direction. 4. Priority 4: Collect Drink (Requirement: No specific requirement) - Yes, the player can collect a drink, but they need to find a water source such as a lake or river first. 5. Priority 5: Collect Iron (Requirement: Make Stone Pickaxe) - No, the requirement is not met yet. The player needs to make a Stone Pickaxe first. After completing Priority 2, this requirement will be met. Question: Did the last player action succeed? Why? Answer: Yes, the last player action move_east succeeded because there was flat ground (grass) to the east of the player, allowing them to move in that direction without any obstacles. Question: Choose the best executable action from above. Answer: 90 The best executable action from the list above is Priority 1: Place Table (Requirement: Wood in inventory). Since the player has 1 wood in their inventory, they can place a table to perform crafting actions. ============Step: 56, Cumulative Reward: 0.0============ You took action place_table. You see: - stone 2 steps to your east - path 2 steps to your south-east - tree 2 steps to your south-west - lava 6 steps to your north-east - coal 4 steps to your south-east - iron 3 steps to your south-east - cow 3 steps to your west You face grass at your front (east). Your status: - health: 9/9 - food: 7/9 - drink: 7/9 - energy: 8/9 Your inventory: - wood: 1 - stone: 2 - coal: 1 - wood_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move South Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone resource; requires a wood_pickaxe or better to mine it. 2. Path: Provides easy navigation; no requirements. 3. Tree: Provides wood resource; no specific requirements, but having an axe can speed up the process. 4. Lava: Hazard to avoid; provides a natural light source and can be used to smelt items with a furnace if collected with a bucket. 5. Coal: Provides fuel for smelting; requires a wood_pickaxe or better to mine it. 6. Iron: Provides essential material for better tools and weapons; requires a stone_pickaxe or better to mine it. 7. Cow: Provides food resource and leather; no specific requirements, but having a sword can make it easier to kill the cow. Question: What was the last action taken by the player? Answer: The last action taken by the player was place_table. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Yes, requirements met, as you have a wood_pickaxe in your inventory. 2. Path: Yes, requirements met, as there are no specific requirements to navigate the path. 3. Tree: Yes, requirements met, as there are no specific requirements to interact with the tree, although having an axe would speed up the process. 4. Lava: Yes and No, requirements for interaction (avoidance) are met because you can stay away from it, but for collection (using a bucket for smelting), the requirement of a bucket is not met. 5. Coal: Yes, requirements met, as you have a wood_pickaxe in your inventory. 6. Iron: Yes, requirements met, as you have a stone_pickaxe in your inventory. 7. Cow: Yes, requirements met, as there are no specific requirements to interact with the cow, although having a sword would make it easier to kill the cow. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Collect Iron (Priority: 5/5): Mine the iron to craft better tools and weapons, as you already have a stone_pickaxe in your inventory. 2. Collect more wood (Priority: 4/5): Interact with the tree to gather wood resources needed for crafting tools, weapons, and other essential items. 3. Hunt the cow (Priority: 3/5): Kill the cow to gather food to replenish your food supply and leather for crafting armor. This action becomes more important as the food level decreases. Question: What are the requirements for the top sub-task? What should the player do first? Answer: For the top sub-task, which is to collect iron, the requirements are as follows: 1. Have a proper tool: In this case, the player should have a stone_pickaxe or higher to mine iron effectively. Since the player already has a stone_pickaxe in their inventory, they can proceed with the task of collecting iron. The player should do the following first: 1. Move towards the iron deposit: Navigate towards the iron, which is 3 steps to the south-east. Once adjacent to the iron block, use the stone_pickaxe to mine the iron ore. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move South-East (Action 4 - Move South): Requirement: Flat ground below the agent. 91 Reason: To navigate towards the iron deposit in the south-east direction, the player should first move one step to the south. 2. Priority 2: Move East (Action 2 - Move East): Requirement: Flat ground right to the agent. Reason: After moving south, move one step to the east to reach the iron deposit. 3. Priority 3: Do (Action 5 - Do): Requirement: Facing iron ore and equipped with the necessary tool (stone_pickaxe). Reason: Use the stone_pickaxe to mine the iron ore once adjacent to it. 4. Priority 4: Move West (Action 1 - Move West): Requirement: Flat ground left to the agent. Reason: After collecting the iron ore, move back to the previously placed table, which will require moving one step to the west. 5. Priority 5: Make Iron Pickaxe (Action 13 - Make Iron Pickaxe): Requirement: Nearby table, furnace; wood, coal, and iron in inventory. Reason: With iron ore in inventory, the next priority is to craft a more durable and efficient iron pickaxe using the table and furnace. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Move South-East (Action 4 - Move South): The requirement of having a flat ground below the agent is met, as there is no obstacle mentioned in the observation. 2. Priority 2: Move East (Action 2 - Move East): The requirement for this action is met as well, since the player will be on flat ground after moving south in the previous step. 3. Priority 3: Do (Action 5 - Do): The requirement is currently not met, as the player first needs to move south and east to reach the iron ore deposit. Once the player is adjacent to the iron ore deposit and equipped with the stone_pickaxe, the requirement will be met. 4. Priority 4: Move West (Action 1 - Move West): Once the player has moved south and east, this requirement will be met, as the player will be on flat ground after moving back to the table. 5. Priority 5: Make Iron Pickaxe (Action 13 - Make Iron Pickaxe): The player has a nearby table placed, but the furnace‚Äôs presence is not mentioned. The coal and wood requirements are met, but the player first needs to mine the iron to meet the iron requirement. The action is partially viable, and the player should focus on mining the iron and setting up a furnace to meet all the requirements. Question: Did the last player action succeed? Why? Answer: Yes, the last player action succeeded. The player placed a table because they had enough wood in their inventory (1 wood) and met the requirements to place the table. Question: Choose the best executable action from above. Answer: The best executable action from the list above is Priority 1: Move South (Action 4 - Move South), as its requirement of having flat ground below the agent is currently met. This action takes the player towards the iron deposit. ============Step: 57, Cumulative Reward: 0.0============ You took action move_south. You see: - stone 3 steps to your north-east - path 1 steps to your east - tree 1 steps to your west - coal 3 steps to your south-east - iron 2 steps to your south-east - cow 4 steps to your north-west You face grass at your front (south). Your status: - health: 9/9 - food: 7/9 - drink: 7/9 - energy: 8/9 Your inventory: - wood: 1 - stone: 2 - coal: 1 - wood_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Make Stone Pickaxe Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone resource; requires a wood pickaxe to collect. 2. Path: Provides a flat surface to travel on; no requirements. 3. Tree: Provides wood resource; can be collected with any type of pickaxe or bare hands. 4. Coal: Provides coal resource; requires a wood pickaxe to collect. 5. Iron: Provides iron resource; requires a stone pickaxe to collect. 6. Cow: Provides food; no specific tool requirement, can be defeated with any weapon or bare hands. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_south. 92 Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Yes, the requirement of having a wood pickaxe is met (wood_pickaxe: 1 in inventory). 2. Path: Yes, no requirements to interact with a path. 3. Tree: Yes, no specific tool requirement, can be collected with any pickaxe (wood_pickaxe: 1 in inventory) or bare hands. 4. Coal: Yes, the requirement of having a wood pickaxe is met (wood_pickaxe: 1 in inventory). 5. Iron: No, the requirement for a stone pickaxe is not met (inventory shows only a wood_pickaxe, not a stone_pickaxe). 6. Cow: Yes, can be defeated with any weapon (including bare hands), so no specific tool requirement is needed. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Craft a stone pickaxe (Priority: 5/5) - Requirement: Nearby table (already placed) and stone in inventory (2 stones available). 2. Collect iron (Priority: 4/5) - Requirement: Requires a stone pickaxe (to be crafted to meet the requirement). 3. Increase food and drink levels (Priority: 3/5) - Requirement: Defeat a cow for food and find a water source to drink. - Alternatively, find other food sources (such as growing fruits) to increase food level. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Top sub-task: Craft a stone pickaxe Requirements: - Nearby table: Already placed in the previous steps. - Stone in inventory: The player has 2 stones available in their inventory. What should the player do first: - The player should craft a stone pickaxe using the available stone resources and the placed table. To do that, they must stand close to the table and use the make_stone_pickaxe action. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Make Stone Pickaxe Requirement: Nearby table and stone in inventory (Player has 2 stones and a table placed nearby) 2. Priority 2: Move East Requirement: Flat ground right to the agent (Player‚Äôs observation mentions a path 1 step to the east, which is flat ground ) 3. Priority 3: Move South-East Requirement: Flat ground southeast of the agent (Player‚Äôs observation mentions coal and iron ores in the south-east direction) 4. Priority 4: Do (Mine Coal and Iron) Requirement: Facing coal or iron ore (Player should face the coal or iron ore they encountered while moving south-east); have a stone pickaxe (Player crafts a stone pickaxe in priority 1 action) 5. Priority 5: Move to Furnace and Table Requirement: Flat ground leading back to the furnace and table placed earlier (Player should retrace their steps to reach the furnace and table to smelt the iron) Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Make Stone Pickaxe Requirements met: Yes, the player has a table placed nearby and has 2 stones in their inventory. 2. Priority 2: Move East Requirements met: Yes, the player‚Äôs observation mentions a path 1 step to the east, which is flat ground. 3. Priority 3: Move South-East Requirements met: It cannot be determined from the current observations if there is flat ground southeast. However, the player can move east and then south to reach the same location. 4. Priority 4: Do (Mine Coal and Iron) Requirements met: Not yet, the player needs to craft a stone pickaxe (Priority 1) and then move to the coal or iron ore location (Priority 3). 5. Priority 5: Move to Furnace and Table Requirements met: It cannot be determined from the current observations if there is a direct flat ground leading back to the furnace and table. However, the player can retrace their steps to reach the furnace and table, fulfilling this requirement after performing the previous actions. Question: Did the last player action succeed? Why? Answer: Yes, the last player action (move_south) succeeded because there was flat ground (grass) in the direction the player wanted to move, which met the requirement for this action. Question: Choose the best executable action from above. Answer: The best executable action from the above list is Priority 1: Make Stone Pickaxe, as its requirements are met with a nearby table and 2 stones in the player‚Äôs inventory. ============Step: 58, Cumulative Reward: 0.0============ You took action make_stone_pickaxe. You see: 93 - stone 3 steps to your north-east - path 1 steps to your east - tree 1 steps to your west - coal 3 steps to your south-east - iron 2 steps to your south-east - cow 4 steps to your north-west You face grass at your front (south). Your status: - health: 9/9 - food: 7/9 - drink: 7/9 - energy: 8/9 Your inventory: - wood: 1 - stone: 2 - coal: 1 - wood_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move South Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone resource; requires a wood_pickaxe or better to obtain. 2. Path: No direct resources; allows easier movement and navigation. 3. Tree: Provides wood resource; requires no tools to obtain but can be collected faster with an axe. 4. Coal: Provides coal resource; requires a wood_pickaxe or better to obtain. 5. Iron: Provides iron resource; requires a stone_pickaxe or better to obtain. 6. Cow: Provides food when killed; requires a weapon to effectively defeat, but can be killed without tools. Question: What was the last action taken by the player? Answer: The last action taken by the player was make_stone_pickaxe. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Yes, the requirements are met as you have a wood_pickaxe in your inventory. 2. Path: Yes, no tool requirements are necessary to interact with the path, and you can simply move onto it. 3. Tree: Yes, the requirements are met, and you can interact with the tree even without any tools. 4. Coal: Yes, the requirements are met as you have a wood_pickaxe in your inventory. 5. Iron: Yes, the requirements are met because you just made a stone_pickaxe. 6. Cow: Yes, the requirements are met as you can interact and defeat the cow with or without a weapon (although using a weapon would be more efficient). Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Collect Iron (Priority: 5/5): Collect iron using the stone_pickaxe, as it is a valuable resource for crafting stronger tools and weapons. 2. Collect more Wood (Priority: 4/5): Collect more wood from the nearby tree, as it is a necessary resource for crafting various objects and building structures. 3. Defeat Cow (Priority: 3/5): Defeat the cow to obtain food to replenish your food level when needed. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Requirements for the top sub-task (Collect Iron): - Have a stone pickaxe. The player already has a stone_pickaxe in their inventory, so they should do the following first: - Move towards the iron by taking action move_southeast. - Once near the iron, use the stone_pickaxe to collect the iron. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1 - Move Southeast: Flat ground adjacent to the agent in the southeast direction. Requirement: Move closer to the iron and coal. 2. Priority 2 - Do (Collect Iron): Face the iron and have a stone_pickaxe in the inventory. Requirement: Collect iron to eventually make an iron pickaxe and sword. 3. Priority 3 - Move West: Flat ground adjacent to the agent in the west direction. Requirement: Move closer to the tree after collecting iron. 4. Priority 4 - Do (Collect Wood): Face the tree and have a wood or stone pickaxe in the inventory. Requirement: Collect more wood for crafting tools, weapons or building a table. 5. Priority 5 - Move Northwest: Flat ground adjacent to the agent in the northwest direction. Requirement: Move closer to the cow, to eventually chase it or eat it for restoring health. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1 - Move Southeast: Yes, the requirement is met because the player only needs flat ground in the southeast direction, which is available. 2. Priority 2 - Do (Collect Iron): No, the requirement is not yet met because the player first needs to move closer to the iron and equip the stone_pickaxe to collect iron. 94 3. Priority 3 - Move West: Yes, the requirement is met because the player only needs flat ground in the west direction, which is available. 4. Priority 4 - Do (Collect Wood): No, the requirement is not yet met because the player first needs to move closer to the tree, and also equip either a wood or stone pickaxe to collect the wood. 5. Priority 5 - Move Northwest: Yes, the requirement is met because the player only needs flat ground in the northwest direction, which is available. Question: Did the last player action succeed? Why? Answer: I cannot determine if the last player action succeeded because the observation for Step 115 is missing. The observation jumps from Step 114 to Step 116, skipping the step where the action make_stone_pickaxe would be hinged on its success or failure. Question: Choose the best executable action from above. Answer: The best executable action from the list above is Priority 1 - Move Southeast because the requirement is met and it brings the player closer to important resources such as iron and coal. ============Step: 59, Cumulative Reward: 0.0============ You took action move_south. You see: - stone 3 steps to your east - path 2 steps to your north-east - tree 2 steps to your north-west - coal 2 steps to your east - iron 1 steps to your east - table 4 steps to your south-east - cow 4 steps to your north-west You face grass at your front (south). Your status: - health: 9/9 - food: 7/9 - drink: 7/9 - energy: 8/9 Your inventory: - wood: 1 - stone: 2 - coal: 1 - wood_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move East Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: Stone: Provides stone resources; requires a wood_pickaxe or better to mine. Path: Provides easier movement; no requirements. Tree: Provides wood resources; requires a wood_pickaxe or better to chop. Coal: Provides coal resources; requires a wood_pickaxe or better to mine. Iron: Provides iron resources; requires a stone_pickaxe or better to mine. Table: Provides a crafting surface; no requirements. Cow: Provides food (meat) when killed; no specific requirement to kill, but a weapon (e.g., wood_sword, stone_sword) is recommended. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_south. Question: For each object in the list, are the requirements met for interaction? Answer: Stone: Yes, requirements met. You have a wood_pickaxe in your inventory. Path: Yes, requirements met. No specific requirements for paths. Tree: Yes, requirements met. You have a wood_pickaxe in your inventory. Coal: Yes, requirements met. You have a wood_pickaxe in your inventory. Iron: Yes, requirements met. Although not mentioned, we can assume you have crafted a stone_pickaxe after taking the action make_stone_pickaxe in Step 116. Table: Yes, requirements met. No specific requirements for tables. Cow: Yes, requirements met. No specific requirement to kill a cow, but having a weapon would help. Since you have collected wood and stone before, we can assume you have the necessary resources to craft a weapon if needed. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Priority 5: Collect Iron using the stone_pickaxe to advance in crafting tools and weapons, as iron is a valuable resource. 2. Priority 4: Mine Coal with the wood_pickaxe to gather resources for smelting iron and other materials. 3. Priority 3: Chop down the Tree using the wood_pickaxe to gather more wood, which is essential for crafting tools, weapons, and building structures. Question: What are the requirements for the top sub-task? What should the player do first? Answer: For the top sub-task (Collect Iron using the stone_pickaxe), the requirements are: 1. Having a stone_pickaxe in the inventory. 95 The player already has a stone_pickaxe in their inventory. To begin the top sub-task, the player should first move towards the iron, which is currently one step to the player‚Äôs east. The player should take action: move_east. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move East (Requirement: Flat ground right to the agent) Action: The player should move east to approach the iron. 2. Priority 2: Do (Requirement: Facing creature or material; have the necessary tool) Action: Once the player reaches the iron and faces it, they should use the stone_pickaxe to collect the iron. 3. Priority 3: Move West (Requirement: Flat ground left to the agent) Action: After collecting the iron, move west to return to the starting position near the table. 4. Priority 4: Move South (Requirement: Flat ground below the agent) Action: Move south towards the table to be in its proximity to craft items. 5. Priority 5: Make Iron Pickaxe (Requirement: Nearby table, furnace; wood, coal, and iron in inventory) Action: Once near the table and having collected the required resources, the player should make an iron pickaxe. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Move East (Requirement: Flat ground right to the agent) - Yes, the requirement is met. The player can move east towards the iron. 2. Priority 2: Do (Requirement: Facing creature or material; have the necessary tool) - No, the requirement is not fully met yet. The player must move east and face the iron before this action can be taken. The player has the necessary tool (stone_pickaxe) in their inventory. 3. Priority 3: Move West (Requirement: Flat ground left to the agent) - Yes, the requirement is met. However, this action should only be taken after completing action 2 (collecting the iron). 4. Priority 4: Move South (Requirement: Flat ground below the agent) - Yes, the requirement is met. The player can move south after completing action 3. 5. Priority 5: Make Iron Pickaxe (Requirement: Nearby table, furnace; wood, coal, and iron in inventory) - No, the requirement is not fully met yet. The player needs to collect iron first (action 2) and be near the table (action 4) to complete this action. The player has wood and coal in their inventory already. Question: Did the last player action succeed? Why? Answer: Yes, the last player action move_south succeeded because there was flat ground below the agent, allowing them to move in that direction. Question: Choose the best executable action from above. Answer: The best executable action from above is Priority 1: Move East. The requirement of flat ground right to the agent is met, and moving east will bring the player closer to the iron. ============Step: 60, Cumulative Reward: 0.0============ You took action move_east. You see: - grass 1 steps to your west - stone 3 steps to your east - path 2 steps to your north-east - tree 2 steps to your north-west - coal 2 steps to your east - table 4 steps to your south-east - cow 5 steps to your north-west You face iron at your front (east). Your status: - health: 9/9 - food: 7/9 - drink: 7/9 - energy: 8/9 Your inventory: - wood: 1 - stone: 2 - coal: 1 - wood_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move South Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone resource, requires a wood_pickaxe or better to collect. 2. Path: No resource provided, no requirements, helps you navigate through the game world. 3. Tree: Provides wood resource, requires no specific tool but any type of axe will speed up the process. 4. Coal: Provides coal resource, requires a wood_pickaxe or better to collect. 5. Iron: Provides iron resource, requires a stone_pickaxe or better to collect. 6. Table: Provides a crafting interface, no direct resource, has a requirement of having wood in the inventory to place. 96 7. Cow: Provides food (in the form of beef) when killed, no specific tool required but weapons like swords make the process faster. 8. Grass: No resource provided, no requirements, serves as a flat surface in the game world. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_east. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Yes, the requirements are met as you have a wood_pickaxe in your inventory. 2. Path: Yes, the requirements are met as there are no specific requirements to interact with a path. 3. Tree: Yes, the requirements are met as there is no specific requirement for collection, although having an axe would make the process faster. 4. Coal: Yes, the requirements are met as you have a wood_pickaxe in your inventory. 5. Iron: Yes, the requirements are met as you have a wood_pickaxe in your inventory, but a stone_pickaxe is recommended for more efficient collection. 6. Table: The requirements are met if you want to interact with the table since you have wood in your inventory, but if you want to place a new table, you may need more wood. 7. Cow: Yes, the requirements are met as there‚Äôs no specific requirement for interaction; however, having a weapon like a sword is more efficient. 8. Grass: Yes, the requirements are met as there are no specific requirements to interact with grass. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Craft a Stone Pickaxe (Priority: 5/5): Crafting a stone pickaxe is essential for collecting iron more efficiently. Since you already have the required wood and stone in your inventory, you can use the nearby table to craft the pickaxe. 2. Collect Iron (Priority: 4/5): With your new stone_pickaxe, collect the iron in front of you. Iron is valuable for crafting more advanced tools and weapons, such as an iron pickaxe or iron sword. 3. Gather More Food and Drink (Priority: 3/5): Your food and drink levels are at 7/9 each. Though this is not an immediate concern, replenishing these resources by finding more cows and water sources should be kept in mind to maintain your health and efficiency in the game. Question: What are the requirements for the top sub-task? What should the player do first? Answer: The requirements for the top sub-task (Craft a Stone Pickaxe) are: 1. Collect Wood: You already have 1 wood in your inventory. 2. Collect Stone: You already have 2 stone in your inventory. 3. Make a Wood Pickaxe: You already have a wood_pickaxe in your inventory. 4. Place Table: You see a table 4 steps to your south-east, which you can use for crafting. What the player should do first: Since you already have the required materials (wood and stone) and a table nearby, you can move towards the table and craft a Stone Pickaxe. To do this, move 4 steps towards the south-east to reach the table, and then craft the Stone Pickaxe. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move South - Requirement: Flat ground below the agent. 2. Priority 2: Move East - Requirement: Flat ground right to the agent. 3. Priority 3: Move South - Requirement: Flat ground below the agent. 4. Priority 4: Move East - Requirement: Flat ground right to the agent. 5. Priority 5: Make Stone Pickaxe - Requirement: Nearby table; wood, stone in inventory. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Move South - Requirement: Flat ground below the agent. (Yes, the agent faces grass at the front which is considered flat ground) 2. Priority 2: Move East - Requirement: Flat ground right to the agent. (Yes, there is grass 1 step to the west, which means there is flat ground to move to the east) 3. Priority 3: Move South - Requirement: Flat ground below the agent. (Can‚Äôt determine from the current observation, as the player needs to perform priority 1 and 2 before this action) 4. Priority 4: Move East - Requirement: Flat ground right to the agent. (Can‚Äôt determine from the current observation, as the player needs to perform priority 1 to 3 before this action) 5. Priority 5: Make Stone Pickaxe - Requirement: Nearby table; wood, stone in inventory. (Partial, the agent has wood and stone in the inventory, but the agent needs to move closer to the table which is 4 steps to the south-east) Question: Did the last player action succeed? Why? Answer: Yes, the last player action (move_east) succeeded because there was flat ground (grass) to the east of the player, allowing them to move in that direction. Question: Choose the best executable action from above. Answer: The best executable action from above is Priority 1: Move South, as its requirement (flat ground below the agent) is met. ============Step: 61, Cumulative Reward: 0.0============ You took action move_south. You see: - stone 4 steps to your south-east - path 1 steps to your east - tree 3 steps to your north-west - coal 3 steps to your north-east - iron 2 steps to your north-east - table 3 steps to your south-east 97 You face grass at your front (south). Your status: - health: 9/9 - food: 7/9 - drink: 7/9 - energy: 7/9 Your inventory: - wood: 1 - stone: 2 - coal: 1 - wood_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move South Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone resource for crafting tools and building; requires a wood_pickaxe or better to collect. 2. Path: Provides easier movement and navigation; no requirement to interact with. 3. Tree: Provides wood resource for crafting tools and building; requires any type of pickaxe to collect. 4. Coal: Provides coal resource for smelting and crafting; requires a wood_pickaxe or better to collect. 5. Iron: Provides iron resource for crafting advanced tools and weapons; requires a stone_pickaxe or better to collect. 6. Table: Provides a crafting surface for creating tools and weapons; no requirement to interact with. 7. Grass: No resource, only an indicator for open area or flat ground; no requirement to interact with. 8. Cow: Provides food resource upon defeating; no requirement to interact with other than using tools or weapons to defeat. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_south. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Yes, the requirement is met. The player has a wood_pickaxe in their inventory, which is suitable for collecting stone. 2. Path: Yes, there is no requirement to interact with the path. The player can simply walk on it. 3. Tree: Yes, the requirement is met. The player has a wood_pickaxe in their inventory, which can be used to collect wood from the tree. 4. Coal: Yes, the requirement is met. The player has a wood_pickaxe in their inventory, which is suitable for collecting coal. 5. Iron: No, the requirement is not met. The player needs a stone_pickaxe or better to collect iron, but they currently only have a wood_pickaxe in their inventory. 6. Table: Yes, there is no requirement to interact with the table. The player can use it to craft tools and weapons if they are near it. 7. Grass: Yes, there is no requirement to interact with grass. The player can simply walk on it or ignore it. 8. Cow: Yes, the requirement is met. The player can use their wood_pickaxe or other weapons to defeat the cow and obtain food. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Craft a stone_pickaxe (priority: 5) - The player should craft a stone_pickaxe to be able to collect iron, which is essential for making better tools and weapons. 2. Collect more wood (priority: 4) - The player should collect more wood to ensure they have enough resources to craft additional tools, weapons, and structures such as a furnace. 3. Defeat the cow and obtain food (priority: 3) - The player‚Äôs food level is not critical yet, but defeating the cow and obtaining food would be beneficial for maintaining their food level. Question: What are the requirements for the top sub-task? What should the player do first? Answer: The requirements for crafting a stone_pickaxe are: 1. Be near a table. 2. Have wood and stone in the inventory. The player already has wood and stone in their inventory. The first thing the player should do is move towards the table, which is 3 steps to the south-east. Once the player is near the table, they can craft the stone_pickaxe. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move South-East (Requirement: Flat ground in the South-East direction) 2. Priority 2: Move South-East (Requirement: Flat ground in the South-East direction) 3. Priority 3: Move South-East (Requirement: Flat ground in the South-East direction) 4. Priority 4: Make Stone Pickaxe (Requirement: Nearby table; wood and stone in inventory) 5. Priority 5: Move North-East (Requirement: Flat ground in the North-East direction) Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Move South-East (Requirement: Flat ground in the South-East direction) - Yes, there is a path 1 step to your East. 2. Priority 2: Move South-East (Requirement: Flat ground in the South-East direction) - Cannot determine from the current observation as it is beyond visible range; take Priority 1 action first. 3. Priority 3: Move South-East (Requirement: Flat ground in the South-East direction) - Cannot determine from the current observation as it is beyond visible range; take Priority 1 and 2 actions first. 4. Priority 4: Make Stone Pickaxe (Requirement: Nearby table; wood and stone in inventory) - Yes, the table is 3 steps to your South-East, and you have wood and stone in your inventory. 5. Priority 5: Move North-East (Requirement: Flat ground in the North-East direction) - Yes, there is a path 1 step to your East, which is diagonally North-East. 98 Question: Did the last player action succeed? Why? Answer: Yes, the last player action succeeded. The player moved south because there was flat ground (grass) in that direction, which met the requirement for moving south: Move South: Flat ground below the agent. Question: Choose the best executable action from above. Answer: The best executable action from above is Priority 1: Move South-East (Requirement: Flat ground in the South-East direction). ============Step: 62, Cumulative Reward: 0.0============ You took action move_south. You see: - stone 3 steps to your south-east - path 2 steps to your north-east - tree 4 steps to your north-west - coal 4 steps to your north-east - iron 3 steps to your north-east - table 2 steps to your south-east You face grass at your front (south). Your status: - health: 9/9 - food: 7/9 - drink: 6/9 - energy: 7/9 Your inventory: - wood: 1 - stone: 2 - coal: 1 - wood_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move South Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone resource, requires a wood or higher-level pickaxe to collect. 2. Path: No resource provided, provides easier movement without energy consumption. 3. Tree: Provides wood resource, requires an axe or interaction with hands to collect. 4. Coal: Provides coal resource, requires a wood or higher-level pickaxe to collect. 5. Iron: Provides iron resource, requires a stone or higher-level pickaxe to collect. 6. Table: No resource to collect, but provides the ability to craft pickaxes and swords using collected resources. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_south. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Yes, the requirements are met for interaction as you have a wood_pickaxe in your inventory. 2. Path: Yes, the requirements are met for interaction as no specific tool or item is required to use the path. 3. Tree: Yes, the requirements are met for interaction since you can collect wood using your hands, although having an axe would be more efficient. 4. Coal: Yes, the requirements are met for interaction as you have a wood_pickaxe in your inventory. 5. Iron: No, the requirements are not met for interaction as you need a stone or higher-level pickaxe, but you only have a wood_pickaxe. 6. Table: Yes, the requirements are met for interaction since having collected resources and being near the table allows crafting of pickaxes and swords. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Craft a stone pickaxe (Priority: 5/5): Collect more stone using your wood_pickaxe, then craft a stone pickaxe at the table. It will allow you to collect iron and be more efficient. 2. Collect more wood from the tree (Priority: 4/5): Collecting more wood will help you craft additional tools or build structures, and it‚Äôs useful for smelting iron in the furnace later. 3. Gather coal (Priority: 3/5): Collect coal using your wood_pickaxe as it can be used as a fuel source for the furnace and is necessary for smelting iron. Note: While priorities are given out of 5, these top 3 sub-tasks have different levels of importance relative to each other. Question: What are the requirements for the top sub-task? What should the player do first? Answer: For the top sub-task (Craft a stone pickaxe), the requirements are: 1. Collect more stone: You already have a wood_pickaxe in your inventory and two stones, so you‚Äôll need to collect additional stones (a total of 3 stones are required). Locate and mine stone by moving closer to it and using your wood_pickaxe. 2. Craft a stone pickaxe at the table: You need to be near the table to craft the stone pickaxe. The table is 2 steps to your south-east. 99 To complete this top sub-task, the player should first move towards the stone (3 steps to your south-east) and use the wood_pickaxe to collect more stone. Once enough stone is collected (total of 3), move towards the table (2 steps south -east from your current position) and craft the stone pickaxe. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move South-East (Action: Move South) Requirement: Flat ground below of the agent. 2. Priority 2: Move East (Action: Move East) Requirement: Flat ground right to the agent. 3. Priority 3: Do (Use Wood Pickaxe on stone) Requirement: Facing stone; have a wood_pickaxe in the inventory. 4. Priority 4: Move West (Action: Move West) Requirement: Flat ground left to the agent. 5. Priority 5: Make Stone Pickaxe (Action: Make Stone Pickaxe) Requirement: Nearby table; wood and stone in inventory. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Move South-East (Action: Move South) Requirement: Flat ground below of the agent. - Yes, the requirement is met since the player is currently facing grass (flat ground) to the south. 2. Priority 2: Move East (Action: Move East) Requirement: Flat ground right to the agent. - Yes, the requirement is met since there is a path (flat ground) 1 step to the east in Step 122 observation. 3. Priority 3: Do (Use Wood Pickaxe on stone) Requirement: Facing stone; have a wood_pickaxe in the inventory. - No, the requirement is not met as the player is not currently facing stone. 4. Priority 4: Move West (Action: Move West) Requirement: Flat ground left to the agent. - Not enough information to determine if the requirement is met, as there is no mention of flat ground to the west. 5. Priority 5: Make Stone Pickaxe (Action: Make Stone Pickaxe) Requirement: Nearby table; wood and stone in inventory. - No, the requirement is not met as the player is not currently near the table (2 steps to the south-east in Step 124 observation). Question: Did the last player action succeed? Why? Answer: Yes, the last player action (move_south) succeeded because there was flat ground (grass) to the south of the player‚Äôs position, allowing them to move in that direction. Question: Choose the best executable action from above. Answer: The best executable action from the above list is Priority 1: Move South-East (Action: Move South), as the requirement of having flat ground below the agent is met. ============Step: 63, Cumulative Reward: 0.0============ You took action move_south. You see: - stone 2 steps to your east - path 3 steps to your north-east - tree 3 steps to your south-east - coal 5 steps to your north-east - iron 4 steps to your north-east - table 1 steps to your east You face grass at your front (south). Your status: - health: 9/9 - food: 7/9 - drink: 6/9 - energy: 7/9 Your inventory: - wood: 1 - stone: 2 - coal: 1 - wood_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move East Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone resource, requires a wood_pickaxe or better to collect. 2. Path: No resources provided, serves as a convenient route to travel. 3. Tree: Provides wood resource, requires no tools to collect but a tool like an axe would speed up the process. 100 4. Coal: Provides coal resource, requires a wood_pickaxe or better to collect. 5. Iron: Provides iron resource, requires a stone_pickaxe or better to collect. 6. Table: Provides a crafting station for making tools and weapons, requires wood to craft. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_south. Question: For each object in the list, are the requirements met for interaction? Answer: Based on the current status and inventory, here is the list of objects and whether their requirements for interaction are met: 1. Stone: Yes, you have a wood_pickaxe in your inventory which is required to collect stone. 2. Path: Yes, no specific requirements needed for walking on the path. 3. Tree: Yes, no tools are required to collect wood from the tree, although having an axe would make the process faster. 4. Coal: Yes, you have a wood_pickaxe in your inventory which is required to collect coal. 5. Iron: No, you need a stone_pickaxe or better to collect iron, and you only have a wood_pickaxe in your inventory. 6. Table: Yes, you already have a table nearby, so you can use it for crafting if you have the required resources. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Craft a Stone Pickaxe (Priority: 5/5) To collect iron and other valuable resources, you need to craft a stone pickaxe using the nearby table and the stone you have in your inventory. 2. Collect more Stone (Priority: 4/5) As you currently have only 2 pieces of stone in your inventory, you should collect more to craft additional stone tools and weapons. 3. Collect Wood from the Tree (Priority: 3/5) Collect more wood from the nearby tree to craft more tools, weapons, and build other necessary structures. Though you currently have 1 piece of wood, having more wood will help ensure you have enough resources for future needs. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Requirements for the top sub-task (Craft a Stone Pickaxe): 1. Wood: You already have 1 piece of wood in your inventory, which is enough for crafting a stone pickaxe. 2. Stone: You have 2 pieces of stone in your inventory, which is enough for crafting a stone pickaxe. 3. A nearby table: There‚Äôs a table 1 step to your east. What should the player do first: Move one step to the east to access the table, and then craft a stone pickaxe using the wood and stone in your inventory. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move East - Flat ground right of the agent. Requirement: Must be standing directly left of the table. 2. Priority 2: Make Stone Pickaxe - Nearby table; wood, stone in inventory. Requirement: Must be near the table, and have enough wood and stone in the inventory. 3. Priority 3: Move North - Flat ground above the agent. Requirement: There should be a flat ground above the agent. 4. Priority 4: Do (mine coal) - Facing coal; have necessary tool (stone pickaxe). Requirement: Must be facing coal and have a stone pickaxe in the inventory. 5. Priority 5: Move East - Flat ground right of the agent. Requirement: There should be a flat ground right of the agent. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Move East - Flat ground right of the agent. Requirement met: Yes, the player is directly left of the table. 2. Priority 2: Make Stone Pickaxe - Nearby table; wood, stone in inventory. Requirement met: Yes, the player is near the table and has enough wood and stone in the inventory. 3. Priority 3: Move North - Flat ground above the agent. Requirement met: The observation doesn‚Äôt provide information about the terrain above the agent, so we cannot determine if this requirement is met. 4. Priority 4: Do (mine coal) - Facing coal; have necessary tool (stone pickaxe). Requirement met: No, the player does not currently have a stone pickaxe in their inventory; they need to make one first. 5. Priority 5: Move East - Flat ground right of the agent. Requirement met: The observation doesn‚Äôt provide information about the terrain right of the agent, so we cannot determine if this requirement is met. Question: Did the last player action succeed? Why? Answer: Yes, the last player action of move_south succeeded. There were no obstacles or requirements preventing the player from moving in that direction, and the player‚Äôs observation in Step 126 shows that they had successfully moved south. Question: Choose the best executable action from above. Answer: The best executable action from above is: Priority 1: Move East - Flat ground right of the agent. Requirement met: Yes, the player is directly left of the table. 101 ============Step: 64, Cumulative Reward: 0.0============ You took action move_east. You see: - grass 1 steps to your west - stone 2 steps to your east - path 3 steps to your north-east - tree 3 steps to your south-east - coal 5 steps to your north-east - iron 4 steps to your north-east You face table at your front (east). Your status: - health: 9/9 - food: 7/9 - drink: 6/9 - energy: 7/9 Your inventory: - wood: 1 - stone: 2 - coal: 1 - wood_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Make Stone Pickaxe Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass: Provides no resource. No requirement. 2. Stone: Provides stone resource. Requires wood_pickaxe to collect. 3. Path: Provides no resource. No requirement. 4. Tree: Provides wood resource. Requires an axe or wood_pickaxe to collect. 5. Coal: Provides coal resource. Requires wood_pickaxe or stone_pickaxe to collect. 6. Iron: Provides iron resource. Requires stone_pickaxe to collect. 7. Table: Provides a surface for crafting tools and weapons. No requirement to use. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_east. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass: No requirements for interaction. Requirements met. 2. Stone: Requires wood_pickaxe to collect. Requirements met (wood_pickaxe is in inventory). 3. Path: No requirements for interaction. Requirements met. 4. Tree: Requires an axe or wood_pickaxe to collect. Requirements met (wood_pickaxe is in inventory). 5. Coal: Requires wood_pickaxe or stone_pickaxe to collect. Requirements met (wood_pickaxe is in inventory). 6. Iron: Requires stone_pickaxe to collect. Requirements not met (stone_pickaxe is not in inventory). 7. Table: No requirement to use. Requirements met. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Priority: 5 - Craft a Stone Pickaxe: To collect iron, the player needs a stone_pickaxe. The player has enough stone and a table to craft it. 2. Priority: 4 - Collect Iron: Once the player crafts the stone_pickaxe, they should collect iron to craft more advanced tools and weapons. 3. Priority: 3 - Find a Water Source: As the player‚Äôs drink level is 6/9, they should look for a water source to restore their thirst. Question: What are the requirements for the top sub-task? What should the player do first? Answer: The requirements for the top sub-task (Craft a Stone Pickaxe) are: - A nearby table: The player needs a table to craft tools, and they are already facing a table in their current observation. - Stone in inventory: The player needs stone to craft the stone pickaxe, and they have 2 stone in their inventory. The player already has all the required items and is in the right position for the top sub-task. The player should now craft a Stone Pickaxe by using the table in front of them. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Make Stone Pickaxe (Requirement: Nearby table; wood, stone in inventory) - The player is already facing the table and has the required wood and stone in their inventory. Crafting a Stone Pickaxe will help them collect valuable resources like iron. 2. Priority 2: Move North (Requirement: Flat ground above of the agent) - The player should move north to approach the coal and iron, which are valuable resources for crafting more advanced tools and weapons. 3. Priority 3: Move East (Requirement: Flat ground right to the agent) - After moving north, the player should move east to get closer to the coal and iron deposits, allowing them to collect the resources when they have the stone pickaxe equipped. 4. Priority 4: Do (Requirement: Facing creature or material; have necessary tool) 102 - After reaching the coal and iron deposits, the player should use their Stone Pickaxe to collect these resources. This will allow them to craft more advanced items in the future, such as an Iron Pickaxe or an Iron Sword. 5. Priority 5: Drink (Requirement: No requirements) - The player has a drink level of 6/9, which is not critical yet, but they should start looking for a water source to replenish their thirst in the near future. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Make Stone Pickaxe (Requirement: Nearby table; wood, stone in inventory) - Yes, the player is already facing the table, and they have wood and stone in their inventory, so this requirement is met . 2. Priority 2: Move North (Requirement: Flat ground above of the agent) - Yes, there is no mention of obstacles or irregular terrain to the north in the player‚Äôs observation, so this requirement is met. 3. Priority 3: Move East (Requirement: Flat ground right to the agent) - Yes, moving east from the current position would be possible as there is no obstacle mentioned in the observation to the east. So, this requirement is met. 4. Priority 4: Do (Requirement: Facing creature or material; have necessary tool) - This requirement is not yet met, since the player first needs to move closer to the coal and iron resources and have the stone pickaxe equipped. 5. Priority 5: Drink (Requirement: No requirements) - Yes, the player can perform this action as there are no requirements to meet. However, currently, a water source is not mentioned in the observation, so the player needs to find one to perform this action effectively. Question: Did the last player action succeed? Why? Answer: Yes, the last player action succeeded. The player was able to move east because there was flat ground and no obstacles in that direction, as indicated in the observation after taking the action. The player is now facing a table to the east. Question: Choose the best executable action from above. Answer: The best executable action from the list is Priority 1: Make Stone Pickaxe (Requirement: Nearby table; wood, stone in inventory). The player meets the requirements since they are facing the table and have the required wood and stone in their inventory. Crafting a Stone Pickaxe will help them collect valuable resources like coal and iron in the future. ============Step: 65, Cumulative Reward: 1.0============ You took action make_stone_pickaxe. You see: - grass 1 steps to your west - stone 2 steps to your east - path 3 steps to your north-east - tree 3 steps to your south-east - coal 5 steps to your north-east - iron 4 steps to your north-east You face table at your front (east). Your status: - health: 9/9 - food: 7/9 - drink: 6/9 - energy: 7/9 Your inventory: - stone: 1 - coal: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move North Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass: Provides no specific resources. Requirements: none. 2. Stone: Provides stone resources. Requirements: wood_pickaxe or stone_pickaxe to collect. 3. Path: No resources provided; it‚Äôs a navigational terrain. Requirements: none. 4. Tree: Provides wood resources. Requirements: wood_pickaxe or stone_pickaxe to collect. 5. Coal: Provides coal resources. Requirements: wood_pickaxe or stone_pickaxe to collect. 6. Iron: Provides iron resources. Requirements: stone_pickaxe to collect. 7. Table: Used for crafting tools and weapons. Requirements: wood to make and place. 8. Wood_pickaxe: Collect wood and stone; used to make a stone_pickaxe. Requirements: wood and a table to make. 9. Stone_pickaxe: Collect stone and iron; used to make an iron_pickaxe. Requirements: wood, stone, and a table to make. Question: What was the last action taken by the player? Answer: The last action taken by the player was make_stone_pickaxe. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass: Yes, the requirements are met for interaction as there are no specific requirements. 103 2. Stone: Yes, the requirements are met for interaction as you have both a wood_pickaxe and a stone_pickaxe in your inventory. 3. Path: Yes, the requirements are met for interaction as there are no specific requirements. 4. Tree: Yes, the requirements are met for interaction as you have both a wood_pickaxe and a stone_pickaxe in your inventory. 5. Coal: Yes, the requirements are met for interaction as you have both a wood_pickaxe and a stone_pickaxe in your inventory. 6. Iron: Yes, the requirements are met for interaction since you have a stone_pickaxe in your inventory. 7. Table: Yes, the requirements are met for interaction as you have wood in your inventory and the table is already placed. 8. Wood_pickaxe: The requirements are already met, as the wood_pickaxe is in your inventory. 9. Stone_pickaxe: The requirements are already met, as the stone_pickaxe is in your inventory. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Collect iron (Priority: 5/5): This is a high priority task since you have a stone_pickaxe in your inventory, and collecting iron will help you progress further in the game by crafting iron tools and weapons. 2. Collect more coal (Priority: 4/5): As you only have one coal in your inventory, collecting more will ensure you have enough resources to smelt iron later on. This is essential for making iron tools and weapons. 3. Collect wood and stone (Priority: 3/5): This is a medium priority task as having more wood and stone in the inventory will allow you to craft additional tools, weapons, and build shelters as needed. It‚Äôs also required for further advancements in the game. Question: What are the requirements for the top sub-task? What should the player do first? Answer: For the top sub-task, which is collecting iron, the requirements are: 1. Locate the iron ore: In the player‚Äôs observation (step 130), iron is 4 steps to the north-east. 2. Use the stone_pickaxe: The player has a stone_pickaxe in their inventory, which is needed to mine the iron ore efficiently. To start this sub-task, the player should first move towards the iron ore. As it is 4 steps to the north-east in the current step, the player should move north-east to get closer to the iron ore. They may have to do a combination of moving east and moving north or move diagonally if the game allows it. Once they reach the iron ore, they can use the stone_pickaxe to collect it. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move North (Action 3) - Requirement: Flat ground above the agent. This action moves the player closer to the iron ore which is 4 steps to the north-east. 2. Priority 2: Move East (Action 2) - Requirement: Flat ground right to the agent. This action continues moving the player toward the iron ore, completing the diagonal move with a combination of moving north and moving east. 3. Priority 3: Do (Action 5) - Requirement: Facing creature or material; have the necessary tool. This action allows the player to mine the iron ore after they have reached it using the stone_pickaxe they already have in their inventory. 4. Priority 4: Move South (Action 4) - Requirement: Flat ground below the agent. This action moves the player back towards the table after collecting the iron ore so they can craft additional items if needed or progress further in the game. 5. Priority 5: Move West (Action 1) - Requirement: Flat ground left to the agent. This action continues moving the player back towards the table or allows them to explore other areas after gathering the iron ore. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Move North (Action 3) - Yes, the requirements are met as flat ground is mentioned to be 3 steps to the north- east (path). 2. Priority 2: Move East (Action 2) - Yes, the requirements are met as flat ground is mentioned to have stone 2 steps to the east. 3. Priority 3: Do (Action 5) - Not yet, the player needs to reach the iron ore first by moving north and east as per priority 1 and 2 actions. Once the player is facing the iron ore, they have the necessary tool (stone_pickaxe) in their inventory to mine it. 4. Priority 4: Move South (Action 4) - The requirement would be met after the player has reached the iron ore and collected it. Currently, there is a tree mentioned to be 3 steps to the south-east. 5. Priority 5: Move West (Action 1) - Yes, the requirements are met as flat ground is mentioned to have grass 1 step to the west. Question: Did the last player action succeed? Why? Answer: Yes, the last player action succeeded because the player met the requirements for making a stone pickaxe. They were facing a table (which was to their east) and had the necessary resources in their inventory, including wood and stone. Question: Choose the best executable action from above. Answer: The best executable action from the list above is Priority 1: Move North (Action 3) since its requirement of flat ground above the agent is met, and it moves the player closer to the iron ore. ============Step: 66, Cumulative Reward: 0.0============ You took action move_north. You see: - stone 3 steps to your south-east - path 2 steps to your north-east 104 - tree 4 steps to your north-west - coal 4 steps to your north-east - iron 3 steps to your north-east - table 2 steps to your south-east You face grass at your front (north). Your status: - health: 9/9 - food: 7/9 - drink: 6/9 - energy: 7/9 Your inventory: - stone: 1 - coal: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move North Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass: Provides no resources, requires no specific tools or actions to interact with. 2. Stone: Provides stone resource, requires a wood_pickaxe or better to collect. 3. Path: Provides no resources, serves as a navigational aid and can be used without any requirement. 4. Tree: Provides wood resource, requires no specific tool to interact with but using an axe would be more efficient. 5. Coal: Provides coal resource, requires a wood_pickaxe or better to collect. 6. Iron: Provides iron resource, requires a stone_pickaxe or better to collect. 7. Table: Provides a crafting surface, requires wood to make and place. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_north. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass: Yes, the requirements are met for interaction as grass requires no specific tools or actions to interact with. 2. Stone: Yes, the requirements are met for interaction as you possess a wood_pickaxe and a stone_pickaxe, both of which can collect stone. 3. Path: Yes, the requirements are met for interaction as the path can be used for navigation without any requirement. 4. Tree: Yes, the requirements are met for interaction as no specific tool is needed to interact with a tree, though using an axe would be more efficient. Currently, you don‚Äôt have an axe, but you can still interact with it. 5. Coal: Yes, the requirements are met for interaction as you possess a wood_pickaxe and a stone_pickaxe, both of which can collect coal. 6. Iron: Yes, the requirements are met for interaction as you possess a stone_pickaxe, which can collect iron. 7. Table: Yes, the requirements are met for interaction as you already made and placed a table. You can use it for crafting without any additional requirements. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Collect iron (Priority 5/5): This is the highest priority task since you have a stone_pickaxe capable of collecting iron, and collecting iron allows you to craft essential tools and weapons like iron pickaxes and iron swords. 2. Collect coal (Priority 4/5): This task is important because coal is needed to smelt iron in a furnace. You already have one coal in your inventory, but collecting more coal ensures you have enough fuel for smelting tasks. 3. Increase food and drink (Priority 3/5): Your food and drink levels are not dangerously low yet, but it‚Äôs essential to stay aware. Look for opportunities to collect drink from a nearby lake or interact with passive mobs such as cows or other sources of food to replenish your supplies. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Top sub-task: Collect iron Requirements: 1. Stone pickaxe (already in inventory) 2. Locate iron deposits (iron is 3 steps to your north-east) What should the player do first: 1. Move towards the iron deposit by taking action move_north-east. Once the player is near the iron deposit, they should face it directly. 2. Use the stone_pickaxe to collect the iron by taking action do. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Move North-East (Priority 1) Requirement: Flat ground diagonally up-right. 2. Do (Priority 2) Requirement: Facing the iron deposit; stone_pickaxe in inventory. 3. Move South-East (Priority 3) Requirement: Flat ground diagonally down-right (to return to the table). 4. Make Iron Pickaxe (Priority 4) Requirement: Nearby table, furnace; wood, coal, and collected iron in inventory. 5. Move toward Coal Deposit (Priority 5) 105 Requirement: Identify the best direction to reach the coal deposit visible 4 steps to your north-east (possible actions: move_north, move_east or any combination). Question: For each action in the list, are the requirements met? Answer: 1. Move North-East (Priority 1) Requirement: Flat ground diagonally up-right. - The requirement for this action is met, as you can move north-east. 2. Do (Priority 2) Requirement: Facing the iron deposit; stone_pickaxe in inventory. - The requirement for this action is not yet met, as you are not currently facing the iron deposit. 3. Move South-East (Priority 3) Requirement: Flat ground diagonally down-right (to return to the table). - The requirement for this action is met, as the table is 2 steps to your south-east, and presumably there is flat ground that you previously moved across. 4. Make Iron Pickaxe (Priority 4) Requirement: Nearby table, furnace; wood, coal, and collected iron in inventory. - The requirement for this action is not met since you haven‚Äôt collected iron yet and possibly haven‚Äôt placed a furnace. 5. Move toward Coal Deposit (Priority 5) Requirement: Identify the best direction to reach the coal deposit visible 4 steps to your north-east (possible actions: move_north, move_east or any combination). - The requirement for this action cannot be determined without knowing if flat ground is available between current position and coal deposit. You need to choose the best path based on the terrain (move_north or move_east). Question: Did the last player action succeed? Why? Answer: Yes, the last player action succeeded. The move_north action was successful because there was flat ground (grass) in the direction of the movement (north), allowing the player to move to that location. Question: Choose the best executable action from above. Answer: The best executable action from above is to move North-East (Priority 1), as it has flat ground diagonally up-right, and the requirement for this action is met. ============Step: 67, Cumulative Reward: 0.0============ You took action move_north. You see: - stone 4 steps to your south-east - path 1 steps to your east - tree 3 steps to your north-west - coal 3 steps to your north-east - iron 2 steps to your north-east - table 3 steps to your south-east - cow 6 steps to your north-west You face grass at your front (north). Your status: - health: 9/9 - food: 7/9 - drink: 6/9 - energy: 7/9 Your inventory: - stone: 1 - coal: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move East Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides resources for crafting stone tools and a furnace; requires a wood_pickaxe to collect. 2. Path: Provides easier movement; no requirements. 3. Tree: Provides wood for crafting tools, weapons, and structures; requires a wood_pickaxe or stone_pickaxe to collect. 4. Coal: Provides fuel for smelting iron in a furnace; requires a wood_pickaxe or stone_pickaxe to collect. 5. Iron: Provides resources for crafting iron tools and weapons; requires a stone_pickaxe to collect. 6. Table: Provides a crafting station for making tools and weapons; requires wood to craft and place. 7. Cow: Provides food for restoring health and hunger; requires a weapon or tool to defeat and collect meat. 8. Grass: Blocks the path; no resources provided, can be dug or moved around; no requirements. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_north. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Yes, the requirements are met, as you have a wood_pickaxe and a stone_pickaxe in your inventory. 2. Path: Yes, the requirements are met. No specific tool or resource is needed to utilize the path. 3. Tree: Yes, the requirements are met, as you have a wood_pickaxe and a stone_pickaxe in your inventory. 4. Coal: Yes, the requirements are met, as you have a wood_pickaxe and a stone_pickaxe in your inventory. 106 5. Iron: Yes, the requirements are met, as you have a stone_pickaxe in your inventory. 6. Table: Yes, the requirements are met. It‚Äôs available for crafting since you placed it earlier. 7. Cow: Yes, the requirements are met. You can use your wood_pickaxe, stone_pickaxe, or craft a suitable weapon to defeat and collect meat. 8. Grass: Yes, the requirements are met. You can dig through or move around it without any specific tool or resource. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Collect Iron (Priority: 5/5): Collecting iron is essential as it allows the creation of iron tools and weapons, leading to better performance and advancement in the game. 2. Improve Food and Drink (Priority: 4/5): Increase your food and drink levels by consuming food (e.g., defeating the cow and eating its meat) and finding a water source to drink. This will sustain you in the game longer and keep your health, hunger, and thirst levels maintained. 3. Craft a Wood or Stone Sword (Priority: 3/5): Crafting a wood or stone sword can increase your combat abilities and improve your defense against monsters. This will increase your chances of survival and help you to accomplish other tasks more efficiently. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Top Sub-task: Collect Iron Requirements: 1. Locate the iron ore: You need to find iron ore blocks in the game environment. 2. Use Stone Pickaxe: You must have a stone_pickaxe in your inventory. (You already have it) What should the player do first? The player should move 2 steps to the north-east to reach the iron block and then use the stone_pickaxe to collect the iron ore. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move East Requirement: Flat ground right to the agent. (path 1 step to your east) 2. Priority 2: Move North Requirement: Flat ground above of the agent. (iron 2 steps to your north-east) 3. Priority 3: Do Requirement: Facing the iron ore; have stone_pickaxe in the inventory. 4. Priority 4: Locate a source of water to collect drink Requirement: Find a lake or river in the player‚Äôs surroundings. 5. Priority 5: Move towards the water source Requirement: Clear path towards the discovered water source for the player to walk to. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Move East Requirement: Flat ground right to the agent. (path 1 step to your east) - Yes, the requirement is met as there‚Äôs a path 1 step to the east. 2. Priority 2: Move North Requirement: Flat ground above of the agent. (iron 2 steps to your north-east) - Yes, the requirement is met as there are 2 more steps to reach the iron ore. 3. Priority 3: Do Requirement: Facing the iron ore; have stone_pickaxe in the inventory. - The requirement for having a stone_pickaxe in the inventory is met. However, the player needs to face the iron ore before the Do action can be taken to mine the ore. 4. Priority 4: Locate a source of water to collect drink Requirement: Find a lake or river in the player‚Äôs surroundings. - Currently, there‚Äôs no information on a water source in the player‚Äôs surroundings, so this requirement is not met. 5. Priority 5: Move towards the water source Requirement: Clear path towards the discovered water source for the player to walk to. - As there‚Äôs no water source discovered yet, this requirement is not met. Question: Did the last player action succeed? Why? Answer: Yes, the last player action succeeded because the player was able to move north without any obstacles or issues, as indicated by the change in the player‚Äôs observations and surroundings after the action was taken. Question: Choose the best executable action from above. Answer: The best executable action from the list above is Priority 1: Move East, as it has a flat ground right to the agent, and the requirement is met with the path 1 step to the east. ============Step: 68, Cumulative Reward: 0.0============ You took action move_east. You see: - grass 1 steps to your west - stone 3 steps to your south-east - tree 4 steps to your north-west - coal 2 steps to your north-east 107 - iron 1 steps to your north - table 2 steps to your south - cow 7 steps to your north-west You face path at your front (east). Your status: - health: 9/9 - food: 7/9 - drink: 6/9 - energy: 7/9 Your inventory: - stone: 1 - coal: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move North Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass: Provides no direct resources, but can be traversed easily. Requirement: None. 2. Stone: Provides stone resource, used for crafting various tools and building materials. Requirement: Wood pickaxe or better to collect. 3. Tree: Provides wood resource, used for crafting tools, building materials, and creating a table. Requirement: No tools needed, but having an axe may speed up the process. 4. Coal: Provides coal resource, used for smelting metal ores in a furnace. Requirement: Wood pickaxe or better to collect. 5. Iron: Provides iron resource, smelt it in a furnace to make iron ingots, used for crafting tools and weapons. Requirement: Stone pickaxe or better to collect. 6. Table: Allows you to craft various tools and weapons with the resources gathered. Requirement: Wood to craft the table. 7. Path: Provides an easy movement between locations; not a resource but more of an environmental feature. Requirement: None. 8. Cow: Provides food when killed. Requirement: No tools needed, but having a weapon like a wooden or stone sword is more efficient. 9. Wood Pickaxe (in inventory): Used for gathering stone and coal. Requirement: Wood crafted at a table. 10. Stone Pickaxe (in inventory): Used for gathering iron and better materials. Requirement: Stone and wood crafted at a table. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_east. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass: No requirements to interact with, so yes, the requirements are met. 2. Stone: Requires a wood pickaxe or better to collect. You have a wood_pickaxe and a stone_pickaxe in your inventory, so yes, the requirements are met. 3. Tree: No tools needed, but having an axe may speed up the process. You don‚Äôt have an axe, but you can still interact with the tree, so yes, the requirements are met. 4. Coal: Requires a wood pickaxe or better to collect. You have a wood_pickaxe and a stone_pickaxe in your inventory, so yes, the requirements are met. 5. Iron: Requires a stone pickaxe or better to collect. You have a stone_pickaxe in your inventory, so yes, the requirements are met. 6. Table: The table is already present in the environment, so there are no requirements to interact with it. Yes, the requirements are met. 7. Path: No requirements to interact with, so yes, the requirements are met. 8. Cow: No tools needed, but having a weapon is more efficient. You don‚Äôt have a weapon, but you can still interact with the cow, so yes, the requirements are met. 9. Wood Pickaxe (in inventory): Already in your inventory and can be used to gather stone and coal. Yes, the requirements are met. 10. Stone Pickaxe (in inventory): Already in your inventory and can be used to gather iron and better materials. Yes, the requirements are met. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Priority 5/5: Collect iron. Since you have a stone_pickaxe, you can collect the iron 1 step to the north to craft more advanced tools and weapons, such as an iron pickaxe or an iron sword. 2. Priority 4/5: Collect coal. With coal in your inventory, you will be able to smelt the iron ore in a furnace. You already have one coal in your inventory, but collecting more will come in handy for future smelting tasks. The coal is 2 steps to your north-east. 3. Priority 3/5: Chase and kill the cow 7 steps to your north-west to obtain food. Your food level is currently at 7/9, so it is not an immediate concern. However, collecting food from the cow will be beneficial to keep your food supply stable. You can interact with the cow without any tools, but crafting a weapon such as a wooden or stone sword may make the task more efficient. Question: What are the requirements for the top sub-task? What should the player do first? Answer: The top sub-task is to collect iron. The requirements for this task are: 1. Having a stone pickaxe, which you already possess in your inventory. 2. Locating iron ore, which is 1 step to your north. Since you have met both requirements, the first thing the player should do is move north. Then, the player can use the stone_pickaxe to collect the iron ore. 108 Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: Priority 1: Action: Move North Requirements: Flat ground above the agent. Reason: To move closer to the iron ore. Priority 2: Action: Do Requirements: Facing iron ore (after moving North) and have necessary tool (stone_pickaxe). Reason: To collect iron ore using the stone_pickaxe. Priority 3: Action: Move South Requirements: Flat ground below the agent. Reason: To move closer to the table (2 steps to the south) for crafting the iron pickaxe. Priority 4: Action: Make Iron Pickaxe Requirements: Nearby table (after moving South), furnace, wood, coal, collected iron. Reason: To craft an iron pickaxe to collect diamond. Priority 5: Action: Move North Requirements: Flat ground above the agent. Reason: To move back to the area with coal and search for diamond. Question: For each action in the list, are the requirements met? Answer: Priority 1: Action: Move North Requirements: Flat ground above the agent. Status: Requirements met, as you face grass at your front (north). Priority 2: Action: Do Requirements: Facing iron ore (after moving North) and having a necessary tool (stone_pickaxe). Status: Requirements met once you move north. You have a stone_pickaxe in your inventory. Priority 3: Action: Move South Requirements: Flat ground below the agent. Status: Requirements will be met after completing Priority 2, as you can move back. Priority 4: Action: Make Iron Pickaxe Requirements: Nearby table (after moving South), furnace, wood, coal, collected iron. Status: Partially met. You are missing a furnace in your inventory or placed nearby. You will need to place a furnace or craft one before fully meeting the requirements for making an iron pickaxe. Priority 5: Action: Move North Requirements: Flat ground above the agent. Status: Requirements will be met after completing Priority 3 and returning south. Question: Did the last player action succeed? Why? Answer: Yes, the last player action (move_east) succeeded. The player was able to move east because there was a path- a flat ground surface- in the east direction, allowing the player to move in that direction. Question: Choose the best executable action from above. Answer: The best executable action from the list above is Priority 1: Action: Move North Requirements: Flat ground above the agent. Since the requirements are met (flat ground with grass above the agent), the player should move north to get closer to the iron ore. ============Step: 69, Cumulative Reward: 0.0============ You took action move_north. You see: - grass 1 steps to your west - stone 3 steps to your south-east - path 1 steps to your east - tree 4 steps to your north-west - coal 2 steps to your north-east - table 2 steps to your south - cow 7 steps to your north-west You face iron at your front (north). Your status: - health: 9/9 - food: 7/9 - drink: 6/9 - energy: 7/9 109 Your inventory: - stone: 1 - coal: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Do Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass: Provides no specific resources, but can be used to navigate through the environment. No requirements. 2. Stone: Provides stone resource for crafting tools and building structures. Requires a wood pickaxe or better to mine. 3. Path: No resources provided, used for navigation. No requirements. 4. Tree: Provides wood resource for crafting tools and building structures. Requires a tool or hands to collect. 5. Coal: Provides coal resource for smelting metals in a furnace. Requires a wood pickaxe or better to mine. 6. Table: Provides a crafting station for creating tools and weapons. No requirements. 7. Iron: Provides iron resource for crafting advanced tools and weapons. Requires a stone pickaxe or better to mine. 8. Cow: Provides food for restoring hunger when killed. No requirements. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_north. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass: No requirements for interaction. Requirements met. 2. Stone: Requires a wood pickaxe or better to mine. You have a wood_pickaxe and a stone_pickaxe in your inventory. Requirements met. 3. Path: No requirements for interaction. Requirements met. 4. Tree: Requires a tool or hands to collect. You have a wood_pickaxe and a stone_pickaxe in your inventory. Requirements met. 5. Coal: Requires a wood pickaxe or better to mine. You have a wood_pickaxe and a stone_pickaxe in your inventory. Requirements met. 6. Table: No requirements for interaction. Requirements met. 7. Iron: Requires a stone pickaxe or better to mine. You have a stone_pickaxe in your inventory. Requirements met. 8. Cow: No requirements for interaction. Requirements met. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Collect Iron: Interact with the iron in front of you to gather the resource for crafting advanced tools and weapons. Priority: 5/5. 2. Collect Coal: Mine the coal 2 steps to your north-east since it is needed for smelting metals in a furnace. Priority: 4/5. 3. Restore Drink: Find a water source or lake and drink from it to restore your thirst, which is currently at 6/9. Priority: 3/5. Question: What are the requirements for the top sub-task? What should the player do first? Answer: For the top sub-task: Collect Iron, the requirements are as follows: - Be in proximity to the iron ore. - Have a stone pickaxe or higher-tier pickaxe in the inventory. The player already fulfills both requirements, as the iron is one step to the north and the player has a stone_pickaxe in their inventory. Thus, the player should take the following action first: - Interact with the iron in front (north) using the stone_pickaxe to collect the iron ore. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Do (Interact with Iron) Requirement: Facing iron ore; have a stone pickaxe or higher in the inventory. Reason: To collect more iron for crafting better tools and weapons. 2. Priority 2: Move West Requirement: Flat ground to the west of the agent. Reason: To return to the table where the player can craft new items. 3. Priority 3: Make Iron Pickaxe Requirement: Nearby table; iron, coal, and a furnace in the inventory. Reason: To create a stronger pickaxe that can collect diamond. 4. Priority 4: Make Iron Sword Requirement: Nearby table, furnace; iron and coal in the inventory. Reason: To create a stronger sword for defending against stronger monsters. 5. Priority 5: Do (Attack Cow) Requirement: Facing a cow; have a sword in the inventory. Reason: To obtain food to restore the player‚Äôs food meter. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Do (Interact with Iron) Requirement: Facing iron ore; have a stone pickaxe or higher in the inventory. Are requirements met? Yes, the player is facing iron and has a stone_pickaxe. 2. Priority 2: Move West 110 Requirement: Flat ground to the west of the agent. Are requirements met? Yes, there is grass one step to the west of the player. 3. Priority 3: Make Iron Pickaxe Requirement: Nearby table; iron, coal, and a furnace in the inventory. Are requirements met? Not yet, the player needs to collect iron and then go to the table and furnace to attempt crafting it. 4. Priority 4: Make Iron Sword Requirement: Nearby table, furnace; iron and coal in the inventory. Are requirements met? Not yet, the player needs to collect iron and then go to the table and furnace to attempt crafting it. 5. Priority 5: Do (Attack Cow) Requirement: Facing a cow; have a sword in the inventory. Are requirements met? No, the player is not currently facing a cow and does not possess a sword in the inventory. Question: Did the last player action succeed? Why? Answer: Yes, the last player action succeeded. The player moved north because there was a flat ground (path) in that direction, allowing the player to take the move_north action. Question: Choose the best executable action from above. Answer: The best executable action from the list above is Priority 1: Do (Interact with Iron). The player is currently facing iron ore and has a stone_pickaxe in their inventory, meeting the requirements for this action. ============Step: 70, Cumulative Reward: 1.0============ You took action do. You see: - grass 1 steps to your west - stone 3 steps to your south-east - tree 4 steps to your north-west - coal 2 steps to your north-east - table 2 steps to your south - cow 6 steps to your north-west You face path at your front (north). Your status: - health: 9/9 - food: 7/9 - drink: 6/9 - energy: 7/9 Your inventory: - stone: 1 - coal: 1 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Place Furnace Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass: Resource it provides - None (mainly a surface in the game) Requirement - No requirements 2. Stone: Resource it provides - Stone (used for crafting tools and building structures) Requirement - Need a wood_pickaxe or better tool to collect 3. Tree: Resource it provides - Wood (used for crafting tools and building structures) Requirement - No specific requirements, just approach and interact 4. Coal: Resource it provides - Coal (used for smelting iron) Requirement - Need a wood_pickaxe or better tool to collect 5. Table: Resource it provides - Tool and weapon crafting station Requirement - Need to have collected wood and crafted the table 6. Cow: Resource it provides - Food (cow meat to restore health) Requirement - Approach and interact to obtain food 7. Path: Resource it provides - Easier navigation Requirement - No requirements 8. Iron: Resource it provides - Iron (used for crafting better tools and weapons) 111 Requirement - Need a stone_pickaxe or better tool to collect Question: What was the last action taken by the player? Answer: The last action taken by the player was do. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass: Requirements met - Yes, there are no requirements for interacting with grass. 2. Stone: Requirements met - Yes, the player has a wood_pickaxe and a stone_pickaxe in their inventory, which can be used to collect stone. 3. Tree: Requirements met - Yes, there are no specific requirements for interacting with trees, and the player can approach to collect wood. 4. Coal: Requirements met - Yes, the player has a wood_pickaxe and a stone_pickaxe in their inventory, which can be used to collect coal. 5. Table: Requirements met - Yes, the player already has access to the table, which can be used for crafting tools and weapons. 6. Cow: Requirements met - Yes, the player can approach the cow and interact to obtain food. 7. Path: Requirements met - Yes, there are no requirements to interact with a path, and the player can use it for easier navigation. 8. Iron: Requirements met - Yes, the player has a stone_pickaxe in their inventory, which can be used to collect iron. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Smelt Iron and craft Iron tools (Priority: 5/5) Since the player has collected iron, they should focus on smelting it using the furnace and crafting better tools such as an iron pickaxe and an iron sword which will help in collecting more resources and defending against monsters. 2. Restore Food and Drink levels (Priority: 4/5) The player‚Äôs food (7/9) and drink (6/9) levels are not at their maximum. They should focus on finding a source of water to drink and approach the cow or other food sources to restore their food level. 3. Collect more resources (Priority: 3/5) The player should continue to collect more resources such as wood, stone, and coal to ensure they can craft more tools, weapons, and structures for survival as the game progresses. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Requirements for the top sub-task (Smelt Iron and craft Iron tools): - Place a Furnace: The player needs to place a furnace, which requires stone in their inventory (already available). - Smelt Iron: The player needs coal (already available) to smelt the collected iron in the furnace. - Craft Iron tools: The player needs to use the nearby table, smelted iron, and available wood to craft an iron pickaxe and an iron sword. The player should first place a furnace (action: place_furnace) near the table. Then, use the furnace to smelt the iron with the coal they have collected (action: smelt_iron). Finally, once the iron is smelted, they should craft iron tools, i. e., an iron pickaxe (action: make_iron_pickaxe) and an iron sword (action: make_iron_sword), using the nearby table. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Place Furnace (action: place_furnace) Requirement: Stone in inventory (already available) 2. Priority 2: Smelt Iron (action: smelt_iron) Requirement: Furnace placed, iron and coal in inventory (all available) 3. Priority 3: Make Iron Pickaxe (action: make_iron_pickaxe) Requirements: Nearby table, smelted iron and wood in inventory (assuming smelted iron will be available after priority 2 is completed) 4. Priority 4: Make Iron Sword (action: make_iron_sword) Requirements: Nearby table, smelted iron and wood in inventory (same as above) 5. Priority 5: Drink (action: drink) Requirement: Access to a drinkable water source (like a lake), as the player‚Äôs drink level is 6/9, getting closer to dehydration. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Place Furnace (action: place_furnace) Requirement: Stone in inventory - Yes (1 stone available) 2. Priority 2: Smelt Iron (action: smelt_iron) Requirement: Furnace placed - Not yet, needs to complete priority 1 action first Iron and coal in inventory - Yes (1 iron and 1 coal available) 3. Priority 3: Make Iron Pickaxe (action: make_iron_pickaxe) Requirements: Nearby table - Yes, table is 2 steps to the south 112 Smelted iron and wood in inventory - Not yet, needs to complete priority 2 action first (smelting iron) 4. Priority 4: Make Iron Sword (action: make_iron_sword) Requirements: Nearby table - Yes, table is 2 steps to the south Smelted iron and wood in inventory - Not yet, needs to complete priority 2 action first (smelting iron) 5. Priority 5: Drink (action: drink) Requirement: Access to a drinkable water source - Not mentioned in the recent player observation steps, so cannot be confirmed at this time. The player needs to find a water source for this requirement to be met. Question: Did the last player action succeed? Why? Answer: Yes, the last player action succeeded. The player was able to collect iron from the object they were facing (iron at their front/north). The indication of success is that their inventory now contains 1 iron. Question: Choose the best executable action from above. Answer: The best executable action from the list above is Priority 1: Place Furnace (action: place_furnace), as the requirement of having stone in the inventory is already met. ============Step: 71, Cumulative Reward: 0.0============ You took action place_furnace. You see: - grass 1 steps to your west - stone 3 steps to your south-east - tree 4 steps to your north-west - coal 2 steps to your north-east - table 2 steps to your south - cow 6 steps to your north-west You face path at your front (north). Your status: - health: 9/9 - food: 7/9 - drink: 6/9 - energy: 7/9 Your inventory: - stone: 1 - coal: 1 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move West Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass: Provides no resources, no requirement. 2. Stone: Provides stone resource, requires a wood_pickaxe or higher to collect. 3. Tree: Provides wood resource, requires a wood_pickaxe or higher to collect. 4. Coal: Provides coal resource, requires a wood_pickaxe or higher to collect. 5. Table: Provides crafting capability for tools and weapons, requires wood to construct. 6. Cow: Provides food resource, requires any type of sword or tool for attacking to collect. 7. Path: Provides easier navigation, no requirement. Question: What was the last action taken by the player? Answer: The last action taken by the player was placing a furnace (place_furnace). Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass: No requirements to interact with grass, so the requirements are met. 2. Stone: Requires a wood_pickaxe or higher to collect. You have a wood_pickaxe and a stone_pickaxe in your inventory, so the requirements are met. 3. Tree: Requires a wood_pickaxe or higher to collect. You have a wood_pickaxe and a stone_pickaxe in your inventory, so the requirements are met. 4. Coal: Requires a wood_pickaxe or higher to collect. You have a wood_pickaxe and a stone_pickaxe in your inventory, so the requirements are met. 5. Table: No requirements to interact with the table as it is already constructed, so the requirements are met. 6. Cow: Requires any type of sword or tool for attacking to collect. You have a wood_pickaxe and a stone_pickaxe in your inventory, which can be used to attack, so the requirements are met. 7. Path: No requirements to interact with the path, so the requirements are met. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Priority 4/5: Collect more coal: Coal is useful for smelting iron and cooking food. You have only 1 coal in your inventory. Use your wood_pickaxe or stone_pickaxe to collect the coal 2 steps to your north-east. 2. Priority 5/5: Increase food supplies: Your food level is 7/9, which could be improved. Attack the cow 6 steps to your north-west using your wood_pickaxe or stone_pickaxe to obtain food resources. 3. Priority 3/5: Collect more iron: Iron is required for crafting better tools and weapons. You have only 1 iron in your inventory. Find a source of iron and use your stone_pickaxe to collect more. 113 Question: What are the requirements for the top sub-task? What should the player do first? Answer: For the top sub-task (Collect more coal): Requirements: 1. Locate nearby coal: You already see coal 2 steps to your north-east. 2. Ensure the wood_pickaxe or stone_pickaxe is in your inventory: You have both wood_pickaxe and stone_pickaxe in your inventory. What should the player do first: 1. Move towards the coal: Move 2 steps to the north-east to reach the coal. 2. Use either the wood_pickaxe or the stone_pickaxe to collect the coal: Perform the ‚Äôdo‚Äô action facing the coal with the pickaxe equipped. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move North-East Requirement: Flat ground 2 steps to the north-east (towards the coal). 2. Priority 2: Do (Collect the coal) Requirement: Facing the coal and having either the wood_pickaxe or the stone_pickaxe in your inventory. 3. Priority 3: Move West Requirement: Flat ground 1 step to the west (towards the grass). 4. Priority 4: Drink (from the lake) Requirement: Be near a lake to restore the drink level. 5. Priority 5: Go towards the cow and chase it Requirement: Flat ground towards the 6 steps to your north-west (move towards cow). Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Move North-East Requirement: Flat ground 2 steps to the north-east (towards the coal). Status: Unknown. The flat ground towards the coal is not specified in the observation. Further exploration or movement might reveal it. 2. Priority 2: Do (Collect the coal) Requirement: Facing the coal and having either the wood_pickaxe or the stone_pickaxe in your inventory. Status: Not met. You are facing north while the coal is to your north-east, and you are not close enough to it. 3. Priority 3: Move West Requirement: Flat ground 1 step to the west (towards the grass). Status: Met. There is flat ground 1 step to the west. 4. Priority 4: Drink (from the lake) Requirement: Be near a lake to restore the drink level. Status: Not met. A lake is not mentioned in the recent observations. You need to find a lake to fulfill this requirement. 5. Priority 5: Go towards the cow and chase it Requirement: Flat ground towards the 6 steps to your north-west (move towards cow). Status: Unknown. The observation does not provide enough information about the terrain in the direction of the cow. You would have to explore to determine that. Question: Did the last player action succeed? Why? Answer: The player action cannot be determined as successful or unsuccessful from the given observations as there is no clear indication of whether the furnace was actually placed. However, we can infer that the player attempted to place the furnace, and no failure message or signs of failure were mentioned. Question: Choose the best executable action from above. Answer: The best executable action from the above list is Priority 3: Move West, as its requirement of having flat ground 1 step to the west is met based on the provided observations. ============Step: 72, Cumulative Reward: 0.0============ You took action move_west. You see: - stone 4 steps to your south-east - path 1 steps to your east - tree 3 steps to your north-west - coal 3 steps to your north-east - table 3 steps to your south-east - cow 5 steps to your north-west You face grass at your front (west). Your status: - health: 9/9 - food: 7/9 - drink: 6/9 - energy: 7/9 Your inventory: - stone: 1 - coal: 1 - iron: 1 114 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move North Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone resource; requires a wood or higher-level pickaxe to collect. 2. Path: Provides ground for movement; no requirements. 3. Tree: Provides wood resource; requires an axe or hands to collect. 4. Coal: Provides coal resource for smelting and cooking; requires a wood or higher-level pickaxe to collect. 5. Table: Allows crafting of higher-level tools and weapons; requires wood to craft. 6. Grass: Provides space for movement; no requirements. 7. Cow: Provides food (meat) when killed; requires a weapon or hand to kill. 8. Wood Pickaxe (inventory): Allows collection of stone and coal resources; requires wood to craft. 9. Stone Pickaxe (inventory): Allows collection of iron resources; requires stone to craft. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_west. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Yes, the requirements are met as you have both a wood pickaxe and a stone_pickaxe in your inventory. 2. Path: Yes, the requirements are met as you can simply move on the path. 3. Tree: Yes, the requirements are met as you can use your hands to collect wood from the tree. 4. Coal: Yes, the requirements are met as you have both a wood pickaxe and a stone_pickaxe in your inventory. 5. Table: Yes, the requirements are met as crafting has already been done, and you can interact with the table for further crafting. 6. Grass: Yes, the requirements are met as you can simply move on the grass. 7. Cow: Yes, the requirements are met as you can use your hands or craft a weapon to kill the cow. 8. Wood Pickaxe (inventory): N/A, as it‚Äôs already in your inventory, no further interaction is needed. 9. Stone Pickaxe (inventory): N/A, as it‚Äôs already in your inventory, no further interaction is needed. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Priority 4/5: Increase food supply by either killing the cow or finding more food sources. You currently have 7/9 food, and maintaining your food supply is vital for survival. 2. Priority 3/5: Drink water to replenish thirst. You currently have 6/9 drink, and staying well-hydrated is important for maintaining optimal health and energy levels. 3. Priority 2/5: Find or craft an axe to collect wood from the tree more efficiently. While you can use your hands to collect wood, an axe will make the process faster and easier. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Requirements for the top sub-task (Increase food supply by killing the cow): 1. Get closer to the cow: It is currently 5 steps to your north-west. 2. Equip a suitable weapon, like a sword, if available: Your current inventory includes a wood_pickaxe and a stone_pickaxe. The player should first craft a weapon if they don‚Äôt have one (e.g., a wood or stone sword, which requires collecting wood or stone and using a crafting table). If the player already has a weapon, they should move towards the cow (north-west ) and attack it to kill it and collect food (meat). Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move North-West (Requirement: Flat ground in the north-west direction) - Move towards the cow to get closer and be able to kill it for food. 2. Priority 2: Make Wood Sword (Requirement: Nearby table; wood in inventory) - Craft a wood sword to attack and kill the cow effectively. 3. Priority 3: Move North (Requirement: Flat ground to the north) - Move north to approach the cow if moving north-west is not possible due to obstacles. 4. Priority 4: Move West (Requirement: Flat ground to the west) - Move west to approach the cow if moving north-west is not possible due to obstacles. 5. Priority 5: Do (Facing creature or material; have necessary tool) - Attack and kill the cow once the player is close enough and has a suitable weapon equipped. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Move North-West (Requirement: Flat ground in the north-west direction) - Yes, the requirement is met as there is a flat ground towards the north-west direction where the cow is located. 2. Priority 2: Make Wood Sword (Requirement: Nearby table; wood in inventory) - No, the requirement is not met as the player does not have wood in their inventory. 3. Priority 3: Move North (Requirement: Flat ground to the north) - Yes, the requirement is met as there is a flat ground to the north of the player. 4. Priority 4: Move West (Requirement: Flat ground to the west) - Yes, the requirement is met as there is a flat ground to the west of the player. 5. Priority 5: Do (Facing creature or material; have necessary tool) - No, the requirement is not met as the player is not facing a creature or material and does not have a suitable weapon for attacking the cow. Question: Did the last player action succeed? Why? Answer: Yes, the last player action succeeded. The move_west action was successful because there was flat ground (grass) to the west of the player‚Äôs position, allowing the player to move in that direction. Question: Choose the best executable action from above. Answer: 115 The best executable action from above is Priority 1: Move North-West, as it meets the requirement of having flat ground in the north-west direction, and it brings the player closer to the cow, which is the current goal. ============Step: 73, Cumulative Reward: 0.0============ You took action move_north. You see: - stone 3 steps to your east - path 1 steps to your east - tree 2 steps to your north-west - coal 2 steps to your east - table 4 steps to your south-east - cow 4 steps to your north-west You face grass at your front (north). Your status: - health: 9/9 - food: 7/9 - drink: 6/9 - energy: 7/9 Your inventory: - stone: 1 - coal: 1 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move East Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone resource and requires a wood pickaxe or better to collect it. 2. Path: No resources provided, but allows easy movement and navigation without any requirements. 3. Tree: Provides wood resource and requires no tools or simply any tool to collect it (wooden, stone, or iron). 4. Coal: Provides coal resource, which is used as fuel for smelting, and requires a wood pickaxe or better to collect it. 5. Table: No resources provided, but it enables crafting of items and tools. No requirements to use it. 6. Cow: Provides food (meat) when defeated and requires no specific tool; any weapon or tool is suitable for defeating it. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_north. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Yes, the requirements are met as you have both a wood_pickaxe and a stone_pickaxe in your inventory. 2. Path: Yes, the requirements are met as you only need flat ground to move, and the path offers that. 3. Tree: Yes, the requirements are met since you can collect wood with any tool or even without a tool. You have a wood_pickaxe and a stone_pickaxe, both suitable for collecting wood. 4. Coal: Yes, the requirements are met as you have both a wood_pickaxe and a stone_pickaxe in your inventory, which are suitable for collecting coal. 5. Table: Yes, the requirements are met as you do not need any specific tool to interact with the table. 6. Cow: Yes, the requirements are met as you can defeat a cow with any weapon or tool, and you have a wood_pickaxe and a stone_pickaxe, both suitable for defeating the cow. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Priority 4/5: Collect more resources such as wood, stone, coal, and iron to improve tools and weapons, create shelter, and craft necessary items (e.g., craft an iron sword and pickaxe). 2. Priority 5/5: Defeat the cow to obtain food (meat) and replenish your food level, which is currently at 7/9. 3. Priority 3/5: Find a water source to drink from and refill your drink level, which is currently at 6/9. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Top sub-task: Collect more resources such as wood, stone, coal, and iron to improve tools and weapons, create shelter, and craft necessary items (e.g., craft an iron sword and pickaxe). Requirements: 1. Use the wood_pickaxe to collect more stone. 2. Use the stone_pickaxe to collect more coal and iron. What the player should do first: 1. Move towards the stone and coal you see in your surroundings (stone 3 steps to your east, and coal 2 steps to your east). 2. Use the respective pickaxes (wood_pickaxe for stone and stone_pickaxe for coal) to collect these resources. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move East (Requirement: Flat ground right to the agent) - Move closer to the stone and coal resources. 2. Priority 2: Do (Facing stone; wood_pickaxe in inventory) - Collect the stone using the wood_pickaxe. 116 3. Priority 3: Move East (Requirement: Flat ground right to the agent) - Move further closer to the coal resource. 4. Priority 4: Do (Facing coal; stone_pickaxe in inventory) - Collect the coal using the stone_pickaxe. 5. Priority 5: Move towards the table (Multiple Move actions required, Requirement: Flat ground in the moving direction) - Find and approach the table to craft better tools and weapons after successfully collecting resources. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Move East (Requirement: Flat ground right to the agent) - Yes, the requirement is met. There is a path 1 step to the player‚Äôs east. 2. Priority 2: Do (Facing stone; wood_pickaxe in inventory) - No, the requirement is not met. The player needs to move closer to the stone and face it first. 3. Priority 3: Move East (Requirement: Flat ground right to the agent) - Yes, the requirement is met. There is a path 1 step to the player‚Äôs east. 4. Priority 4: Do (Facing coal; stone_pickaxe in inventory) - No, the requirement is not met. The player needs to move closer to the coal and face it first. 5. Priority 5: Move towards the table (Multiple Move actions required, Requirement: Flat ground in the moving direction) - Yes, the requirements are met. The player can move closer to the table by moving towards it through available paths. Question: Did the last player action succeed? Why? Answer: Yes, the last player action move_north succeeded because the player was facing grass in the north direction, and there was flat ground available for the player to move to. Question: Choose the best executable action from above. Answer: The best executable action from the list is Priority 1: Move East (Requirement: Flat ground right to the agent), as the requirement is met, and it brings the player closer to valuable resources (stone and coal). ============Step: 74, Cumulative Reward: 0.0============ You took action move_east. You see: - grass 1 steps to your west - stone 2 steps to your east - path 1 steps to your north - tree 3 steps to your north-west - table 3 steps to your south - cow 4 steps to your north-west You face coal at your front (east). Your status: - health: 9/9 - food: 7/9 - drink: 6/9 - energy: 7/9 Your inventory: - stone: 1 - coal: 1 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Do Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass: Provides no resources, requires no tools to interact. 2. Stone: Provides stone, requires wood_pickaxe or better to collect. 3. Path: Provides no resources, helps navigate without using energy. 4. Tree: Provides wood, requires a wood_pickaxe or better to collect. 5. Table: Provides a surface to craft tools and weapons, requires wood to place. 6. Cow: Provides food, requires attacking or killing to collect meat. 7. Coal: Provides coal to be used in furnace for smelting, requires a wood_pickaxe or better to collect. 8. Iron: Provides iron for crafting advanced tools and weapons, requires a stone_pickaxe or better to collect. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_east. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass: Yes, the requirements are met for interaction since there are no tools required. 2. Stone: Yes, the requirements are met for interaction as you have a wood_pickaxe and a stone_pickaxe in your inventory. 3. Path: Yes, the requirements are met for interaction, as paths can be navigated freely without using energy. 4. Tree: Yes, the requirements are met for interaction as you have a wood_pickaxe and a stone_pickaxe in your inventory. 5. Table: Yes, the requirements are met for interaction as it has already been placed, and you can use it for crafting. 117 6. Cow: Yes, the requirements are met for interaction, you can attack or kill the cow to collect meat (using a weapon would be more effective but it is not required). 7. Coal: Yes, the requirements are met for interaction as you have a wood_pickaxe and a stone_pickaxe in your inventory. 8. Iron: Yes, the requirements are met for interaction as you have a stone_pickaxe in your inventory which is required for collecting iron. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Collect more resources (Priority: 5/5): Collect more coal, iron, and wood to craft better tools, weapons, and build a shelter. This is essential for survival and progressing further in the game. 2. Craft an Iron Sword (Priority: 4/5): With the iron and coal resources in your inventory, use the table and furnace to craft an iron sword. This will help you defend against monsters more effectively. 3. Find a water source and drink (Priority: 4/5): Your drink level is 6/9, so it is important to find a water source and replenish your thirst to stay healthy and maintain stamina. Question: What are the requirements for the top sub-task? What should the player do first? Answer: The top sub-task is to collect more resources. Requirements for collecting resources: 1. Coal: Use the stone_pickaxe to mine coal from coal blocks. 2. Iron: Use the stone_pickaxe to mine iron from iron blocks. 3. Wood: Chop down trees with any pickaxe or by hand to gather wood. The player should first mine the coal block in front of them (to the east) using the stone_pickaxe. After collecting the coal, they can proceed to gather iron and chop down trees nearby for wood. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Do - Mine Coal Requirement: Facing a coal block and having a stone_pickaxe in the inventory. 2. Priority 2: Move East - Approach Stone Requirement: Flat ground to the east of the agent. 3. Priority 3: Do - Mine Stone Requirement: Facing a stone block and having a stone_pickaxe in the inventory. 4. Priority 4: Move North-West - Approach Tree Requirement: Flat ground in the north-west direction from the agent. 5. Priority 5: Do - Chop Tree (Collect Wood) Requirement: Facing a tree and having any pickaxe or empty hand. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Do - Mine Coal Yes, the requirements are met. The player is facing a coal block (east) and has a stone_pickaxe in their inventory. 2. Priority 2: Move East - Approach Stone Yes, the requirements are met. There is flat ground to the east of the player, and the stone is 2 steps away. 3. Priority 3: Do - Mine Stone Not yet, the player needs to move east first to face the stone block. Once they do, they can use the stone_pickaxe in their inventory to mine the stone. 4. Priority 4: Move North-West - Approach Tree Yes, the requirements are met. There is flat ground in the north-west direction, leading the player towards the tree. 5. Priority 5: Do - Chop Tree (Collect Wood) Not yet, the player needs to move north-west first to face the tree. Once they do, they can use their pickaxe or empty hand to chop the tree and collect wood. Question: Did the last player action succeed? Why? Answer: Yes, the last player action succeeded. The player was able to move east because there was flat ground (grass) in that direction, allowing the player to move without any obstacles in the way. Question: Choose the best executable action from above. Answer: The best executable action from the list is Priority 1: Do - Mine Coal, since the requirements are met (player is facing the coal block and has a stone_pickaxe in their inventory). ============Step: 75, Cumulative Reward: 0.0============ You took action do. You see: - grass 1 steps to your west - stone 2 steps to your east - tree 3 steps to your north-west - table 3 steps to your south - cow 4 steps to your north-west You face path at your front (east). Your status: 118 - health: 9/9 - food: 7/9 - drink: 6/9 - energy: 7/9 Your inventory: - stone: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move South Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass: Provides no resources but is a flat ground for movement; no requirements. 2. Stone: Provides stone resource when mined with a pickaxe; requires a pickaxe. 3. Tree: Provides wood resource when chopped with an axe; requires an axe. 4. Table: Allows crafting of tools and weapons; requires wood in the inventory. 5. Cow: Provides food (restores hunger) when killed; no specific requirements, but a weapon is helpful. 6. Path: Flat ground for movement; no requirements. 7. Coal: Provides fuel for smelting and crafting; requires a pickaxe. 8. Iron: Provides iron resource when mined with a stone or iron pickaxe; requires a stone or iron pickaxe. Question: What was the last action taken by the player? Answer: The last action taken by the player was do. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass: Yes, the requirements are met for interaction as there are no specific requirements to interact with grass. 2. Stone: Yes, the requirements are met since you have a stone_pickaxe in your inventory. 3. Tree: No, the requirements are not met as you need an axe, which you currently don‚Äôt have in your inventory. 4. Table: Yes, the requirements are met for interacting with the table since you have wood and stone in your inventory to craft tools or weapons if needed. 5. Cow: Yes, the requirements are met for interacting with the cow, although having a weapon could make it easier. 6. Path: Yes, the requirements are met to interact with the path as there are no specific requirements for interaction. 7. Coal: Yes, the requirements are met since you have a stone_pickaxe in your inventory. 8. Iron: Yes, the requirements are met as you have a stone_pickaxe in your inventory. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Priority 4/5: Craft an iron pickaxe and iron sword using the iron, coal, and table. This will allow you to mine diamonds and defend yourself more effectively against monsters. 2. Priority 3/5: Find a source of water and drink to restore your thirst. Keep an eye out for a lake or river while exploring. 3. Priority 2/5: Locate and chop down a tree to collect wood so you can expand your shelter, craft more tools, and build bridges to cross water sources. You‚Äôll need an axe to chop wood efficiently. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Requirements for the top sub-task (Craft an iron pickaxe and iron sword): 1. Iron (already in inventory) 2. Coal (already in inventory) 3. Nearby table (3 steps to the south) What should the player do first: 1. Move 3 steps to the south to get close to the table. 2. Use the table to craft an iron pickaxe and an iron sword using the iron and coal in the inventory. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move South (Requirement: Flat ground below the agent) - Approach the table. 2. Priority 2: Move South (Requirement: Flat ground below the agent) - Continue moving towards the table. 3. Priority 3: Move South (Requirement: Flat ground below the agent) - Reach the table. 4. Priority 4: Make Iron Pickaxe (Requirement: Nearby table, furnace; wood, coal, iron in inventory) - Craft the iron pickaxe. 5. Priority 5: Make Iron Sword (Requirement: Nearby table, furnace; wood, coal, iron in inventory) - Craft the iron sword. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Move South - Yes, the requirement (Flat ground below the agent) is met as there is no obstacle mentioned below the agent. 2. Priority 2: Move South - Yes, the requirement (Flat ground below the agent) is met as the agent will have moved south in the previous step and there is no obstacle mentioned between the agent and the table. 3. Priority 3: Move South - Yes, the requirement (Flat ground below the agent) is met as the agent will have moved south in the previous steps and the table is mentioned to be 3 steps south from the agent‚Äôs current position. 4. Priority 4: Make Iron Pickaxe - It‚Äôs unclear if the requirement (Nearby table, furnace; wood, coal, iron in inventory) is fully met, as the agent has a nearby table and the necessary materials (coal, iron) in the inventory, but the presence of a furnace is not mentioned in the observations. 5. Priority 5: Make Iron Sword - Similar to the previous action, it‚Äôs unclear if the requirement (Nearby table, furnace; wood, coal, iron in inventory) is fully met, as the agent has a nearby table and the necessary materials (coal, iron) in the inventory, but the presence of a furnace is not mentioned in the observations. Question: Did the last player action succeed? Why? 119 Answer: Yes, the last player action succeeded. The player was able to use the do action to collect coal because they were facing the coal and had the necessary tools in their inventory (wood_pickaxe or stone_pickaxe) to mine it. As a result, their inventory now shows 2 coal instead of 1. Question: Choose the best executable action from above. Answer: The best executable action from above is Priority 1: Move South, as its requirement (Flat ground below the agent) is met and there is no obstacle mentioned below the agent. This action will bring the agent closer to the table. ============Step: 76, Cumulative Reward: 0.0============ You took action move_south. You see: - stone 3 steps to your south-east - path 1 steps to your north - tree 4 steps to your north-west - table 2 steps to your south - cow 5 steps to your north-west You face grass at your front (south). Your status: - health: 9/9 - food: 7/9 - drink: 6/9 - energy: 7/9 Your inventory: - stone: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move West Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone resource; requires a wood or stone pickaxe to collect. 2. Path: No resources provided; no requirement. 3. Tree: Provides wood resource; requires a wood or stone pickaxe to collect. 4. Table: Crafting station; requires wood in the inventory to create. 5. Cow: Provides food when defeated; no specific requirement to interact with. 6. Grass: No resources provided; no requirement. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_south. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Yes, the requirements are met for interaction as you have both a wood and stone pickaxe in your inventory. 2. Path: Yes, the requirements are met for interaction as there are no specific requirements needed. 3. Tree: Yes, the requirements are met for interaction as you have both a wood and stone pickaxe in your inventory. 4. Table: Yes, the requirements are met for interaction as you have wood in your inventory and the table is close enough for crafting. 5. Cow: Yes, the requirements are met for interaction as there are no specific requirements needed to interact with a cow. 6. Grass: Yes, the requirements are met for interaction as there are no specific requirements needed. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Collect more resources (Priority: 5/5): This includes collecting more wood, stone, and iron to continue crafting useful tools and weapons, as well as building shelters. 2. Improve food and drink levels (Priority: 4/5): Approach the cow and defeat it to obtain food, and look for a water source to drink from to increase your food and drink levels. 3. Craft better tools and weapons (Priority: 3/5): Use the nearby table to craft more advanced tools and weapons, such as an iron pickaxe, to enhance your ability to collect resources and defend yourself against monsters. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Requirements for the top sub-task (Collect more resources): 1. Move to resource locations: Approach the tree for wood, stone or iron for mining. 2. Use appropriate tools: Wood_pickaxe for mining stone, Stone_pickaxe for mining iron. 3. Free inventory space: Ensure that there is enough space in the inventory to collect new resources. The player should first move towards the tree to collect more wood. To do this, move three steps to the north-west where the tree is located. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1 - Move West (Requirement: Flat ground to the west): Move one step to the west to get closer to the tree. 120 2. Priority 2 - Move North (Requirement: Flat ground to the north): Move one step to the north, to position yourself closer to the tree. 3. Priority 3 - Move North (Requirement: Flat ground to the north): Move one more step to the north, reaching the tree and getting ready to collect wood. 4. Priority 4 - Do (Requirement: Facing creature or material; have necessary tool): Collect wood from the tree using your wood_pickaxe. 5. Priority 5 - Move West (Requirement: Flat ground to the west): Move one step to the west towards the stone, preparing for mining. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1 - Move West (Requirement: Flat ground to the west): Yes, the requirement is met as there is grass one step to the west. 2. Priority 2 - Move North (Requirement: Flat ground to the north): Yes, there is a path one step to the north, fulfilling the requirement. 3. Priority 3 - Move North (Requirement: Flat ground to the north): This cannot be confirmed yet, as the next step will reveal whether or not there is flat ground to the north. 4. Priority 4 - Do (Requirement: Facing creature or material; have necessary tool): This cannot be confirmed yet, as we need to verify if the player will be directly facing the tree after moving north. The player has the necessary tool - wood_pickaxe. 5. Priority 5 - Move West (Requirement: Flat ground to the west): This cannot be confirmed yet, as more steps need to be taken before determining whether there is flat ground to the west. Question: Did the last player action succeed? Why? Answer: Yes, the last player action (move_south) succeeded because there was flat ground (grass) in the direction of the action ( south), allowing the player to move there. Question: Choose the best executable action from above. Answer: The best executable action from the list above is Priority 1 - Move West, since it has met its requirement with flat ground (grass) to the west. ============Step: 77, Cumulative Reward: 0.0============ You took action move_west. You see: - stone 4 steps to your south-east - path 1 steps to your east - tree 3 steps to your north-west - table 3 steps to your south-east - cow 4 steps to your north-west You face grass at your front (west). Your status: - health: 9/9 - food: 6/9 - drink: 6/9 - energy: 7/9 Your inventory: - stone: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move South Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone resource; requires stone or iron pickaxe to collect. 2. Path: Provides easy movement; no requirement to interact. 3. Tree: Provides wood resource; requires wood or stone axe to collect. 4. Table: Provides crafting platform; no requirement to interact. 5. Cow: Provides food resource when defeated; requires a weapon (wood, stone, or iron sword) to defeat. 6. Grass: Provides no resource; no requirement to interact. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_west. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Yes, requirements met; you have a stone_pickaxe in your inventory. 2. Path: Yes, requirements met; no interaction needed, and you can continue moving. 3. Tree: No, requirements not met; you need a wood or stone axe to collect wood, but you don‚Äôt have one in your inventory. 4. Table: Yes, requirements met; you can interact with the table for crafting purposes. 5. Cow: No, requirements not met; you need a weapon (wood, stone, or iron sword) to defeat the cow, but you don‚Äôt have one in your inventory. 6. Grass: Yes, requirements met; no interaction needed, and you can continue moving. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Craft a weapon (wood, stone, or iron sword) to defeat the cow and obtain food. Priority: 5/5. 2. Collect wood from the tree by crafting a wood or stone axe. Priority: 4/5. 121 3. Move closer to the table and use it for crafting. Priority: 3/5. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Top sub-task: Craft a weapon (wood, stone, or iron sword) to defeat the cow and obtain food. Requirements: 1. Wood sword: Nearby table and wood in inventory. 2. Stone sword: Nearby table, wood, and stone in inventory. 3. Iron sword: Nearby table, furnace, wood, coal, and iron in inventory. Since the player has wood, stone, coal, and iron in their inventory, they can craft an iron sword. First, the player should move closer to the table (move south-east) and use it for crafting the iron sword (make_iron_sword action). Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move South-East (move_south_east) - Requirement: Flat ground south-east to the agent. 2. Priority 2: Move South-East (move_south_east) - Requirement: Flat ground south-east to the agent after completing the first action. 3. Priority 3: Make Iron Sword (make_iron_sword) - Requirement: Nearby table, furnace; wood, coal, and iron in inventory. 4. Priority 4: Move North-West (move_north_west) - Requirement: Flat ground north-west to the agent after crafting the iron sword. 5. Priority 5: Do (do) using the iron sword to attack the cow - Requirement: Facing the cow and having the iron sword in the inventory. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Move South-East (move_south_east) - Yes, there is flat ground in the south-east direction of the agent. 2. Priority 2: Move South-East (move_south_east) - Cannot determine at this moment, as this depends on the results of the previous action. If there is still flat ground south-east after completing the first action, then the requirement will be met. 3. Priority 3: Make Iron Sword (make_iron_sword) - Yes, the agent has a table nearby to the south-east, the agent has the required materials (wood, coal, and iron) in the inventory, and presumably there will be a furnace nearby after completing the first two actions of moving south-east. 4. Priority 4: Move North-West (move_north_west) - Cannot determine at this moment, this depends on the results of the previous actions. If there is a flat ground in the north-west direction of the agent after crafting the iron sword, then the requirement will be met. 5. Priority 5: Do (do) using the iron sword to attack the cow - Cannot determine at this moment, as this depends on the results of the previous actions. If the agent is facing the cow after crafting the iron sword and moving north-west, the requirement will be met, as the agent will have the iron sword in their inventory. Question: Did the last player action succeed? Why? Answer: Yes, the last player action, move_west, succeeded because there was a flat ground (grass) to the west of the player‚Äôs position, allowing them to move in that direction. Question: Choose the best executable action from above. Answer: The best executable action from the list above is Priority 1: Move South-East (move_south_east) because its requirements are currently met: there is flat ground in the south-east direction of the agent. ============Step: 78, Cumulative Reward: 0.0============ You took action move_south. You see: - stone 3 steps to your south-east - path 2 steps to your north-east - tree 4 steps to your north-west - table 2 steps to your south-east - cow 5 steps to your north-west You face grass at your front (south). Your status: - health: 9/9 - food: 6/9 - drink: 6/9 - energy: 7/9 Your inventory: - stone: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move East Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: - Resource it provides: Stone blocks for crafting tools and building structures. - Requirement: Stone pickaxe for collecting. 122 2. Path: - Resource it provides: Easy navigation and movement throughout the game. - Requirement: No specific requirements. 3. Tree: - Resource it provides: Wood for crafting tools, weapons, and building structures. - Requirement: Wood or better pickaxe for collecting. 4. Table: - Resource it provides: Crafting surface for creating different tools and items. - Requirement: Wood (for crafting the table initially) and proximity to the table to craft items. 5. Cow: - Resource it provides: Food (meat) to restore health and hunger. - Requirement: A weapon (e.g., a sword) to defeat the cow and collect its meat. 6. Grass: - Resource it provides: Space for building structures and planting crops. - Requirement: No specific requirement. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_south. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: - Requirements met: Yes, you have a stone_pickaxe in your inventory, which is sufficient for collecting stone. 2. Path: - Requirements met: Yes, there are no specific requirements to interact with a path, and you can navigate easily on it. 3. Tree: - Requirements met: Yes, you have a wood_pickaxe in your inventory, which is sufficient for collecting wood from the tree. 4. Table: - Requirements met: Yes, you have proximity to the table (2 steps southeast). You can craft items using the table. 5. Cow: - Requirements met: No, you do not have a sword in your inventory to defeat the cow and collect meat. 6. Grass: - Requirements met: Yes, there are no specific requirements to interact with grass, and you can build structures or plant crops on it. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Craft a weapon (e.g., a wood or stone sword) to defeat the cow and collect food. - Priority: 5/5 2. Collect more wood and stone, as they are essential for crafting various tools and structures. - Priority: 4/5 3. Locate a water source to drink from and replenish your drink meter. - Priority: 3/5 Question: What are the requirements for the top sub-task? What should the player do first? Answer: Requirements for the top sub-task (Craft a weapon to defeat the cow and collect food): 1. Wood or stone to craft a weapon (wood sword or stone sword) 2. A crafting table to craft the weapon What should the player do first: Since the player already has sufficient wood and stone in their inventory, they should first approach the crafting table (2 steps to the south-east) and then craft a weapon (either a wood sword or a stone sword) using the materials in their inventory. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Move East (Priority 1): Requirement - Flat ground right to the agent. 2. Move East (Priority 2): Requirement - Flat ground right to the agent. 3. Make Stone Sword (Priority 3): Requirement - Nearby table; wood, stone in inventory. 4. Move West (Priority 4): Requirement - Flat ground left to the agent. 5. Move West (Priority 5): Requirement - Flat ground left to the agent. Question: For each action in the list, are the requirements met? Answer: 1. Move East (Priority 1): Requirement - Flat ground right to the agent. (YES, path is 2 steps to the north-east) 2. Move East (Priority 2): Requirement - Flat ground right to the agent. (YES, path is 2 steps to the north-east) 3. Make Stone Sword (Priority 3): Requirement - Nearby table; wood, stone in inventory. (NO, wood is not in the inventory) 4. Move West (Priority 4): Requirement - Flat ground left to the agent. (YES, the previous step indicates grass to the west) 5. Move West (Priority 5): Requirement - Flat ground left to the agent. (YES, the previous step indicates grass to the west) Question: Did the last player action succeed? Why? Answer: Yes, the last player action (move_south) succeeded because there was flat ground (grass) in the direction the player moved, which met the requirement for moving in that direction. Question: Choose the best executable action from above. Answer: 123 The best executable action from above is Move East (Priority 1), as its requirement of flat ground right to the agent is met with the path 2 steps to the north-east. ============Step: 79, Cumulative Reward: 0.0============ You took action move_east. You see: - grass 1 steps to your west - stone 2 steps to your south-east - tree 3 steps to your south - table 1 steps to your south You face path at your front (east). Your status: - health: 9/9 - food: 6/9 - drink: 6/9 - energy: 7/9 Your inventory: - stone: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move South Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass: Resource it provides: None Requirement: None 2. Stone: Resource it provides: Stone Requirement: Stone Pickaxe or higher to collect 3. Path: Resource it provides: None Requirement: None 4. Tree: Resource it provides: Wood Requirement: Wood Pickaxe or higher to collect 5. Table: Resource it provides: Crafting station Requirement: None 6. Cow: Resource it provides: Food Requirement: Defeat the Cow for food Question: What was the last action taken by the player? Answer: The last action taken by the player was move_east. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass: Requirements met: Yes, you can interact with grass with no tools or requirements. 2. Stone: Requirements met: Yes, you have a Stone Pickaxe in your inventory, which is suitable for collecting stone. 3. Path: Requirements met: Yes, you can interact with a path without any specific requirements or tools. 4. Tree: Requirements met: Yes, you have a Wood Pickaxe in your inventory, which is suitable for collecting wood from the tree. 5. Table: Requirements met: Yes, you can interact with the table to craft items as long as you have the necessary resources in your inventory. 6. Cow: Requirements met: Partially. You can interact with the cow by defeating it, but you don‚Äôt currently have a weapon (i.e., a sword) in your inventory to make it easier. However, you can still attempt to defeat the cow without a weapon. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Craft a weapon (Iron Sword or Stone Sword) to defend against monsters and to defeat the cow more easily. Priority: 5/5 124 2. Collect more stone and iron with the Stone Pickaxe to upgrade your tools and weapons, and to craft more building materials. Priority: 4/5 3. Gather wood from the tree using the Wood Pickaxe to ensure you have enough resources for crafting and building. Priority: 3/5 Question: What are the requirements for the top sub-task? What should the player do first? Answer: For the top sub-task Craft a weapon (Iron Sword or Stone Sword): Requirements: - Have a nearby table - Have necessary resources in inventory (wood and stone for Stone Sword, wood, coal, and iron for Iron Sword) Since the player already has a table 1 step to the south, necessary resources for a Stone Sword, and a furnace is not in their inventory, which is required for an Iron Sword: The player should do the following first: Move to the table (move_south) and craft a Stone Sword (make_stone_sword). Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move South Requirement: Flat ground below the agent. 2. Priority 2: Make Stone Sword Requirement: Nearby table; wood, stone in inventory. 3. Priority 3: Move West (towards the cow) Requirement: Flat ground left to the agent. 4. Priority 4: Move West (continue towards the cow until it‚Äôs reachable) Requirement: Flat ground left to the agent. 5. Priority 5: Do (attack the cow for food) Requirement: Facing the cow; have a weapon (Stone Sword). Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Move South Requirement: Flat ground below the agent. Status: Requirement met. 2. Priority 2: Make Stone Sword Requirement: Nearby table; wood, stone in inventory. Status: Requirement met (table 1 step to the south, wood_pickaxe, and 1 stone in inventory). 3. Priority 3: Move West (towards the cow) Requirement: Flat ground left to the agent. Status: Cannot confirm (cow is not directly west; would require moving northwest). 4. Priority 4: Move West (continue towards the cow until it‚Äôs reachable) Requirement: Flat ground left to the agent. Status: Cannot confirm (same issue as Priority 3). 5. Priority 5: Do (attack the cow for food) Requirement: Facing the cow; have a weapon (Stone Sword). Status: Requirements not met (player needs to create a Stone Sword and reach the cow). Question: Did the last player action succeed? Why? Answer: Yes, the last player action (move_east) succeeded because there was a flat ground (path) to the east, allowing the player to move in that direction. Question: Choose the best executable action from above. Answer: The best executable action from the list above is Priority 1: Move South, because its requirement of having flat ground below the agent is met. ============Step: 80, Cumulative Reward: 0.0============ You took action move_south. You see: - grass 1 steps to your west - stone 2 steps to your south-east - path 1 steps to your north - tree 3 steps to your south You face table at your front (south). Your status: - health: 9/9 - food: 6/9 - drink: 6/9 - energy: 7/9 Your inventory: - stone: 1 - coal: 2 125 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move South Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass: - Resource it provides: None directly, but it can be replaced with other objects. - Requirement: None. 2. Stone: - Resource it provides: Stone material for crafting tools, weapons, and building structures. - Requirement: Stone Pickaxe or higher-tier pickaxe to collect. 3. Path: - Resource it provides: None directly, but it indicates accessible movement tiles. - Requirement: None. 4. Tree: - Resource it provides: Wood for crafting tools, weapons, and building structures. - Requirement: Wood Pickaxe or higher-tier pickaxe to collect. 5. Table: - Resource it provides: Crafting station to create tools and weapons. - Requirement: Wood in inventory and an available space to place. Your status (not objects, but useful information): - Health, Food, Drink, Energy levels, and Inventory Question: What was the last action taken by the player? Answer: The last action taken by the player was move_south. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass: - Requirement: None. - Are requirements met? Yes. 2. Stone: - Requirement: Stone Pickaxe or higher-tier pickaxe to collect. - Are requirements met? Yes, you have a Stone Pickaxe in your inventory. 3. Path: - Requirement: None. - Are requirements met? Yes. 4. Tree: - Requirement: Wood Pickaxe or higher-tier pickaxe to collect. - Are requirements met? Yes, you have a Wood Pickaxe in your inventory. 5. Table: - Requirement: Wood in inventory and an available space to place. - Are requirements met? The table is already placed, and you have a Wood Pickaxe to collect more wood if needed. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Collect more wood from the Tree (Priority: 4/5) - You have the Wood Pickaxe needed, and more wood will allow crafting additional tools and structures. 2. Collect more Stone from the Stone source (Priority: 4/5) - With the Stone Pickaxe in your inventory, collecting more stone will allow crafting and upgrading tools and weapons. 3. Replenish Food and Drink levels (Priority: 3/5) - You have 6/9 Food and 6/9 Drink, so consider finding a water source to drink and searching for food (such as fruits or animals) to maintain your energy levels. Note: These priorities are out of 5, with 5 being the highest priority. Your current situation doesn‚Äôt have any urgent tasks (5/5 priority), but these are important to progress in the game. Question: What are the requirements for the top sub-task? What should the player do first? Answer: The top sub-task is to collect more wood from the Tree. Requirements for collecting more wood: 1. Have a Wood Pickaxe (already in your inventory) Since you already have a Wood Pickaxe in your inventory, the first step the player should do is: 1. Move towards the tree by moving 3 steps south. Once you are in front of the tree, use the Wood Pickaxe to collect more wood. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move South (Action: Move South) - Requirement: Flat ground below the agent. 2. Priority 2: Move South (Action: Move South) - Requirement: Flat ground below the agent. 126 3. Priority 3: Move South (Action: Move South) - Requirement: Flat ground below the agent. 4. Priority 4: Collect Wood (Action: Do) - Requirement: Facing the tree and have a necessary tool (Wood Pickaxe) in the inventory. 5. Priority 5: Make a Wood Sword (Action: Make Wood Sword) - Requirement: Nearby table and wood in inventory. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Move South (Action: Move South) - Requirement: Flat ground below the agent. - Requirement Met: Yes 2. Priority 2: Move South (Action: Move South) - Requirement: Flat ground below the agent. - Requirement Met: Cannot be determined, as we can‚Äôt see what is below the agent after moving south in the first action. 3. Priority 3: Move South (Action: Move South) - Requirement: Flat ground below the agent. - Requirement Met: Cannot be determined, as we can‚Äôt see what is below the agent after moving south in the previous actions. 4. Priority 4: Collect Wood (Action: Do) - Requirement: Facing the tree and have a necessary tool (Wood Pickaxe) in the inventory. - Requirement Met: Partially. The player has a Wood Pickaxe in the inventory, but they‚Äôre not currently facing the tree - they‚Äôre facing a table. 5. Priority 5: Make a Wood Sword (Action: Make Wood Sword) - Requirement: Nearby table and wood in inventory. - Requirement Met: No, There is no wood in the inventory. Question: Did the last player action succeed? Why? Answer: Yes, the last player action (move_south) succeeded because there was no obstacle or hindrance in the path, and the player had enough energy to perform the action. The player moved closer to the table, which is now in front of them (south). Question: Choose the best executable action from above. Answer: The best executable action from the given list is Priority 1: Move South (Action: Move South), as its requirement of flat ground below the agent is met. ============Step: 81, Cumulative Reward: 0.0============ You took action move_south. You see: - grass 1 steps to your west - stone 2 steps to your south-east - path 1 steps to your north - tree 3 steps to your south You face table at your front (south). Your status: - health: 9/9 - food: 6/9 - drink: 6/9 - energy: 7/9 Your inventory: - stone: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Make Stone Sword Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass: It provides fibers for crafting. Requirements: Cut or pluck the grass using hands or tools. 2. Stone: It provides materials for crafting tools and building structures. Requirements: Collect using a pickaxe or break with a tool, such as a wood or stone pickaxe. 3. Path: It provides a convenient surface to walk on and direction guide. Requirements: None, it is a terrain feature. 4. Tree: It provides wood for crafting tools, weapons, and furniture. Requirements: Chop down using an axe or cut with a tool, such as a wood or stone ax. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_south. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass: Yes, the requirements are met, as you can interact with grass using your hands or tools you have available, such as a wood_pickaxe. 2. Stone: Yes, the requirements are met, as you have a stone_pickaxe in your inventory which can be used to collect stone. 3. Path: Yes, the requirements are met, as there are no requirements to interact with the path. You can simply walk on it. 4. Tree: No, the requirements are not met, as you do not have an axe in your inventory to chop down the tree. You would need to craft an axe for this interaction. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Priority 5: Craft an axe for cutting trees by first crafting a table and then using the available materials (wood, stone) to create an axe. This will allow you to collect more wood for crafting and building purposes. 2. Priority 4: Collect more stone using your stone_pickaxe to have enough resources for future crafting and building projects, such as making stronger weapons and shelter. 3. Priority 3: Replenish your drink and food levels by finding a water source (e.g., lake) to drink from, and search for food sources (such as fruits, vegetables or hunt animals) to ensure that you maintain sufficient energy and health. 127 Question: What are the requirements for the top sub-task? What should the player do first? Answer: For the top sub-task of crafting an axe, the requirements are: 1. Having a table placed to craft on. 2. Having sufficient wood or stone (depending on the type of axe being crafted) in the inventory. 3. Accessing the table to create the axe. Since the player already has a table in front of them, they should perform the following steps: 1. Approach the table. 2. Use the resources in the inventory (wood and/or stone) to craft an axe. But first, the player must approach the table by interacting with it, which can be done by standing next to it and facing it. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: From the list of all actions, these are the top 5 actions the player should prioritize: 1. Priority 1: Make Stone Axe (Requirement: Nearby table; wood and stone in inventory) 2. Priority 2: Collect more Wood (Requirement: Make Stone Axe or Wood Axe) 3. Priority 3: Make Wood Sword or Stone Sword (Requirement: Nearby table; wood and/or stone in inventory) 4. Priority 4: Collect more Stone (Requirement: Make Stone Pickaxe) 5. Priority 5: Collect Iron (Requirement: Make Stone Pickaxe) These priorities ensure that the player crafts the necessary tools, gathers resources, and enhances their defensive capabilities in the game. Question: For each action in the list, are the requirements met? Answer: From the most recent player observation and the provided inventory, let‚Äôs evaluate each action‚Äôs requirements: 1. Make Stone Axe Requirement: Nearby table; wood and stone in inventory Status: Not met (player lacks wood and a stone axe is not listed in the actions) 2. Collect more Wood Requirement: Make Stone Axe or Wood Axe Status: Not met (player lacks wood to make an axe, and the list of actions does not contain axe crafting) 3. Make Wood Sword or Stone Sword Requirement: Nearby table; wood and/or stone in inventory Status: Met for Stone Sword (player has a table nearby and stone in inventory) 4. Collect more Stone Requirement: Make Stone Pickaxe Status: Met (player has a stone pickaxe in inventory) 5. Collect Iron Requirement: Make Stone Pickaxe Status: Met (player has a stone pickaxe in inventory) Among the listed actions, actions 3, 4, and 5 have their requirements met. However, it is important to note that the original list of actions needs to be updated to include axe crafting and resource collection. Question: Did the last player action succeed? Why? Answer: It is ambiguous whether the last player action succeeded or not, as the observations at step 160 and step 162 are identical. We cannot confirm if the move_south action had any effect on the player‚Äôs position in the game or if they reached their desired location. Question: Choose the best executable action from above. Answer: Based on the met requirements from the list of actions above, the best executable action for the player now is: Make Stone Sword (Requirement: Nearby table; wood and/or stone in inventory) ============Step: 82, Cumulative Reward: 0.0============ You took action make_stone_sword. You see: - grass 1 steps to your west - stone 2 steps to your south-east - path 1 steps to your north - tree 3 steps to your south You face table at your front (south). Your status: - health: 9/9 - food: 6/9 - drink: 6/9 - energy: 7/9 Your inventory: - stone: 1 - coal: 2 128 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move West Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass Resource provided: None Requirement: None 2. Stone Resource provided: Stone (needed for crafting tools, weapons, and furnace) Requirement: Stone pickaxe or better to collect 3. Path Resource provided: None Requirement: None 4. Tree Resource provided: Wood (used for crafting tools, weapons, and other structures) Requirement: Wood pickaxe or better to collect 5. Table Resource provided: Enables crafting of tools and weapons Requirement: Wood to build and place As for the player‚Äôs inventory: 6. Wood Pickaxe Resource provided: Ability to collect wood and stone Requirement: Wood to craft 7. Stone Pickaxe: Resource provided: Ability to collect iron and better materials Requirement: Stone to craft 8. Coal Resource provided: Fuel for smelting iron Requirement: Wood pickaxe or better to collect 9. Iron Resource provided: Used to craft stronger tools and weapons Requirement: Stone pickaxe and furnace to collect and smelt 10. Stone Sword (newly crafted) Resource provided: Enhanced weapon to defend against monsters Requirement: Stone to craft Question: What was the last action taken by the player? Answer: The last action taken by the player was make_stone_sword. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass Interaction requirement: None Requirements met: Yes 2. Stone Interaction requirement: Stone pickaxe or better to collect Requirements met: Yes (player has a stone_pickaxe in their inventory) 3. Path Interaction requirement: None Requirements met: Yes 4. Tree Interaction requirement: Wood pickaxe or better to collect Requirements met: Yes (player has a wood_pickaxe in their inventory) 5. Table Interaction requirement: Wood to build and place Requirements met: Yes, the table is already placed As for the player‚Äôs inventory: 6. Wood Pickaxe Interaction requirement: Wood to craft Requirements met: Yes, the wood pickaxe is already crafted 7. Stone Pickaxe: Interaction requirement: Stone to craft Requirements met: Yes, the stone pickaxe is already crafted 8. Coal Interaction requirement: Wood pickaxe or better to collect Requirements met: Yes (player has a wood_pickaxe in their inventory) 129 9. Iron Interaction requirement: Stone pickaxe and furnace to collect and smelt Requirements met: Yes, player has a stone_pickaxe and furnace placement available 10. Stone Sword (newly crafted) Interaction requirement: Stone to craft Requirements met: Yes, the stone sword is already crafted Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Priority 4/5: Collect more resources Sub-task: Gather more stone, wood, and iron to improve the player‚Äôs inventory and be prepared for crafting additional tools, weapons, or structures. This will help the player advance and be better equipped to handle any threats. 2. Priority 5/5: Restore food and drink levels Sub-task: Find a source of food (such as hunting animals or foraging for plants) and water (such as drinking from a lake) to keep the player‚Äôs food and drink levels sustainable. Maintaining proper food and drink levels is crucial for the player‚Äôs survival. 3. Priority 3/5: Explore the surrounding area Sub-task: Investigate the environment to find valuable resources, potential shelter locations, and detect any possible threats. Exploring the area can yield new opportunities for resource gathering, maintaining a steady food supply, or discovering interesting locations. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Top sub-task: Collect more resources. Requirements: 1. Utilize appropriate tools (wood_pickaxe, stone_pickaxe) to efficiently collect resources. 2. Identify the location of resources (wood from trees, stone from rocks, and iron from iron ores) in the environment. What the player should do first: 1. Identify the nearest resource locations by observing the surroundings. 2. Move towards the resource location and use the correct tool for the specific resource (e.g., use the wood_pickaxe for collecting wood and the stone_pickaxe for collecting stone and iron). 3. Continuously keep an eye on the environment for new resource locations or potential threats while gathering. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move towards resource location (Action: Move West, East, North, or South) Requirement: Flat ground in the direction of the resource. 2. Priority 2: Collect Wood (Action: Do) Requirement: Facing a tree and have the wood_pickaxe in inventory. 3. Priority 3: Collect Stone (Action: Do) Requirement: Facing a stone block and have the stone_pickaxe in inventory. 4. Priority 4: Collect Iron (Action: Do) Requirement: Facing an iron ore block and have the stone_pickaxe in inventory. 5. Priority 5: Sleep (Action: Sleep) Requirement: Energy level is below maximum. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Move towards resource location (Action: Move West, East, North, or South) Requirement: Flat ground in the direction of the resource. Yes, the requirement is met. There is grass 1 step to the west, a path 1 step to the north, and a tree 3 steps to the south, which all indicate flat ground in those directions. 2. Priority 2: Collect Wood (Action: Do) Requirement: Facing a tree and have the wood_pickaxe in inventory. No, the requirement is not met. Although the player has a wood_pickaxe in inventory, they are not facing a tree. 3. Priority 3: Collect Stone (Action: Do) Requirement: Facing a stone block and have the stone_pickaxe in inventory. No, the requirement is not met. Although the player has a stone_pickaxe in inventory, they are not facing a stone block. 4. Priority 4: Collect Iron (Action: Do) Requirement: Facing an iron ore block and have the stone_pickaxe in inventory. No, the requirement is not met. The player has a stone_pickaxe in inventory, but they are not facing an iron ore block. 5. Priority 5: Sleep (Action: Sleep) Requirement: Energy level is below maximum. Yes, the requirement is met. The player‚Äôs energy is 7/9, which is below maximum. Question: Did the last player action succeed? Why? Answer: It is unclear whether the last player action succeeded or not, as the observation provided after the action doesn‚Äôt show the stone sword in the player‚Äôs inventory. However, the player met the requirements by having a nearby table and sufficient resources. Question: Choose the best executable action from above. Answer: The best executable action from the list above is Priority 1: Move towards resource location. The player should choose one of the directions: Move West, Move East, Move North, or Move South that will bring them towards a resource location, as there is flat ground in those directions, and the requirement is met. 130 ============Step: 83, Cumulative Reward: 0.0============ You took action move_west. You see: - stone 3 steps to your south-east - path 2 steps to your north-east - tree 4 steps to your north-west - table 2 steps to your south-east You face grass at your front (west). Your status: - health: 9/9 - food: 6/9 - drink: 5/9 - energy: 7/9 Your inventory: - stone: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Sleep Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: - Resource it provides: Stone is used for crafting stone tools and building structures. - Requirement: A wood pickaxe to collect it. 2. Path: - Resource it provides: Provides easier movement and navigation. - Requirement: None. 3. Tree: - Resource it provides: Wood for crafting tools, weapons, and building structures. - Requirement: No specific tool is required, but an axe would make it more efficient. 4. Table: - Resource it provides: Enables crafting of tools, weapons, and other items. - Requirement: Placing it requires wood in your inventory. 5. Grass: - Resource it provides: Can be used for crafting or creating a path. - Requirement: None. Note that in the most recent observation, you do not see saplings, cows, water sources, or monsters. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_west. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: - Requirement: A wood pickaxe to collect it. - Are requirements met? Yes, you have a wood_pickaxe in your inventory. 2. Path: - Requirement: None. - Are requirements met? Yes, no requirements are needed to interact with the path. 3. Tree: - Requirement: No specific tool is required, but an axe would make it more efficient. - Are requirements met? Yes, you can interact with the tree without a specific tool, but having an axe would be better. 4. Table: - Requirement: Placing it requires wood in your inventory. - Are requirements met? Not applicable in this case, as you already see a table in the environment. You can interact with the table by crafting tools and weapons with the available resources in your inventory. 5. Grass: - Requirement: None. - Are requirements met? Yes, no requirements are needed to interact with the grass. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Restore food and drink levels (Priority: 5/5) Sub-tasks: - Find and consume a cow or other food sources, such as fruits from trees, to increase your food level. - Locate a lake or water source to replenish your drink level. 2. Increase your inventory of resources (Priority: 4/5) Sub-tasks: - Collect more stone using your wood_pickaxe or stone_pickaxe. 131 - Gather wood from the tree to create more tools and structures. 3. Upgrade tools and weapons (Priority: 3/5) Sub-tasks: - Craft an iron pickaxe and an iron sword using the iron in your inventory. This may require collecting more iron as well. - Return to the table you face to your south-east to craft the upgraded tools and weapons. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Top Sub-task: Restore food and drink levels (Priority: 5/5) Requirements: 1. Find a food source (cow, fruit, etc.) to increase your food level. 2. Locate a water source (lake, river, etc.) to replenish your drink level. The player should first find a food source to increase their food level. They can do this by exploring their surroundings, moving towards a cow, or looking for fruit-bearing trees. Once they have located a food source, they can consume it to increase their food level. After taking care of their food needs, the player should focus on finding a water source like a lake or river, and consume water from it to restore their drink level. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Action: Move (Priority: 4/5) Requirement: Locate a food source (such as a cow or fruit-bearing tree) in any direction (west, east, north, or south) 2. Action: Do (Priority: 4/5) Requirement: Face the food source (cow or fruit) and have the necessary tool or interaction (eat fruit, chase cow) 3. Action: Move (Priority: 3/5) Requirement: Locate a water source (lake, river) in any direction (west, east, north, or south) 4. Action: Drink (Priority: 3/5) Requirement: Face a water source (lake, river) 5. Action: Sleep (Priority: 2/5) Requirement: Energy level is below maximum, and find a safe place to rest (shelter or safe distance from monsters) Question: For each action in the list, are the requirements met? Answer: 1. Action: Move (Priority: 4/5) Requirement: Locate a food source (such as a cow or fruit-bearing tree) in any direction (west, east, north, or south) Status: Not met, as there is no visible food source in the player‚Äôs current observations. 2. Action: Do (Priority: 4/5) Requirement: Face the food source (cow or fruit) and have the necessary tool or interaction (eat fruit, chase cow) Status: Not met, as there is no visible food source in the player‚Äôs current observations. 3. Action: Move (Priority: 3/5) Requirement: Locate a water source (lake, river) in any direction (west, east, north, or south) Status: Not met, as there is no visible water source in the player‚Äôs current observations. 4. Action: Drink (Priority: 3/5) Requirement: Face a water source (lake, river) Status: Not met, as there is no visible water source in the player‚Äôs current observations. 5. Action: Sleep (Priority: 2/5) Requirement: Energy level is below maximum, and find a safe place to rest (shelter or safe distance from monsters) Status: Partially met. Energy level is below maximum (7/9), but the player needs to find a safe place to rest. Question: Did the last player action succeed? Why? Answer: Yes, the last player action (move_west) succeeded because there was flat ground (grass) to the west of the player, allowing them to move in that direction. Question: Choose the best executable action from above. Answer: The best executable action from above is: 5. Action: Sleep (Priority: 2/5) Requirement: Energy level is below maximum, and find a safe place to rest (shelter or safe distance from monsters) However, the player still needs to find a safe place to rest before executing this action. ============Step: 84, Cumulative Reward: 0.0============ You took action sleep. You see: - stone 3 steps to your south-east - path 2 steps to your north-east - tree 4 steps to your north-west - table 2 steps to your south-east You face grass at your front (west). Your status: - health: 9/9 - food: 6/9 - drink: 5/9 - energy: 7/9 132 Your inventory: - stone: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Place Furnace Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone resource, requires a wood_pickaxe or better to collect. 2. Path: No resources, allows easier navigation and movement. 3. Tree: Provides wood resource, can be collected with any tool or bare hands. 4. Table: Allows crafting of tools and weapons, requires wood to be constructed. 5. Grass: No resources, serves as terrain. 6. Coal (inventory): Used for smelting iron in the furnace, requires a wood_pickaxe or better to collect. 7. Iron (inventory): Used for crafting iron tools and weapons, requires a stone_pickaxe or better to collect and a furnace to smelt. 8. Wood_pickaxe (inventory): Used for collecting stone and coal, requires wood to craft. 9. Stone_pickaxe (inventory): Used for collecting iron, requires stone and wood to craft. Question: What was the last action taken by the player? Answer: The last action taken by the player was sleep. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Yes, you have a wood_pickaxe and stone_pickaxe in your inventory. 2. Path: There are no requirements for interaction, as it‚Äôs for easier navigation. 3. Tree: Yes, you can collect wood with any tool or your bare hands. 4. Table: Yes, it‚Äôs already constructed and can be used for crafting. 5. Grass: There are no requirements for interaction, as it‚Äôs just terrain. 6. Coal (inventory): Interaction not applicable, since it‚Äôs already collected. 7. Iron (inventory): Interaction not applicable, since it‚Äôs already collected. 8. Wood_pickaxe (inventory): Interaction not applicable, as it‚Äôs a tool in your inventory. 9. Stone_pickaxe (inventory): Interaction not applicable, as it‚Äôs a tool in your inventory. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Increase Drink (Priority: 5) - Find a water source to replenish your thirst, which is currently at 5/9. 2. Increase Food (Priority: 4) - Hunt animals like cows or gather plants to increase your food, which is currently at 6/9. 3. Collect more resources (Priority: 3) - Gather more stone, iron, and coal to craft better tools and weapons, and prepare for smelting iron using the furnace. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Top sub-task: Increase Drink (Priority: 5) Requirements: Find a water source (e.g., lake, river) and interact with it to drink and replenish thirst. First step: The player should explore the surroundings in search of a water source like a lake, river, or any other form of drinkable water. Once found, the player should interact with the water source to drink and restore their thirst levels. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 5 - Move West/East/North/South: Flat ground in the chosen direction; The player should explore their surroundings in search of a water source to replenish their drink levels, as it is the top priority right now. 2. Priority 4 - Make Iron Sword: Nearby table, furnace; Wood, coal, iron in inventory; Crafting an iron sword will be useful in defending against monsters and improving combat capabilities. 3. Priority 3 - Place Furnace: Stone in inventory; Placing a furnace will allow the player to smelt iron and progress in the game. 4. Priority 2 - Noop: Always applicable; If no immediate actions are required and there‚Äôs no imminent danger, the player may choose to pause and look for their next move. 5. Priority 1 - Sleep: Energy level is below maximum; Although the player has 7/9 energy, consider finding a safe place to sleep to restore their energy back to full when it drops further. Question: For each action in the list, are the requirements met? Answer: 1. Move West/East/North/South: The requirements are met, as there is flat ground available in each direction. 2. Make Iron Sword: The requirements are NOT met, as there is no nearby furnace. The player must first place a furnace to craft an iron sword. 3. Place Furnace: The requirements are met, as the player has enough stone in their inventory. 4. Noop: The requirements are met, as this action is always applicable. 5. Sleep: The requirements are NOT met, as the player‚Äôs energy level is not below maximum. The player has 7/9 energy currently. Question: Did the last player action succeed? Why? 133 Answer: It is unclear whether the last player action, sleep, succeeded because the energy level remains the same at 7/9 in both Player Observation Step 166 and Player Observation Step 168. Question: Choose the best executable action from above. Answer: The best executable action from the list above is Place Furnace since the requirements are met, and it will help the player progress in the game by allowing them to smelt iron. ============Step: 85, Cumulative Reward: 0.0============ You took action place_furnace. You see: - stone 3 steps to your south-east - path 2 steps to your north-east - tree 4 steps to your north-west - table 2 steps to your south-east You face grass at your front (west). Your status: - health: 9/9 - food: 6/9 - drink: 5/9 - energy: 7/9 Your inventory: - stone: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move East Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone resource when mined with a pickaxe; requires a pickaxe (wood or higher) to mine. 2. Path: Provides no resources directly; requires clear and flat ground to form. 3. Tree: Provides wood resource when chopped down; requires an axe (wood or higher) to chop. 4. Table: Provides a surface for crafting items; requires wood to build and place. 5. Grass: Provides no resources directly; requires a tool like a hoe to clear or turn into farmland. Note: The furnace is missing from the list since it was placed in step 170, so adding it here. 6. Furnace: Provides the ability to smelt/convert ores (like iron and coal) into useful items; requires stone to build and ores (e.g. iron or coal) for smelting. Question: What was the last action taken by the player? Answer: The last action taken by the player was place_furnace. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Yes, the requirements are met for interaction. You have a stone_pickaxe in your inventory, which can be used to mine the stone. 2. Path: Yes, the requirements are met for interaction. You can walk on the path as there‚Äôs no specific tool required. 3. Tree: No, the requirements are not met for interaction. You need an axe (wood or higher) to chop down the tree, but you don‚Äôt have one in your inventory. 4. Table: Yes, the requirements are met for interaction. You can craft items at the table. 5. Grass: Yes, the requirements are met for interaction. While you don‚Äôt have a hoe to clear or turn grass into farmland, you can still move over it without any issues. Note: Adding the furnace to the answer. 6. Furnace: Yes, the requirements are met for interaction. You have coal and iron in your inventory, which can be used in the furnace for smelting. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Smelt iron in the furnace (Priority: 5/5): You have the required coal and iron in your inventory, so using the furnace to smelt iron would allow you to craft better items, such as an iron sword or iron pickaxe. 2. Drink water to restore thirst (Priority: 4/5): Your drink level is at 5/9, which means it‚Äôs getting low. Finding water to drink should be a priority to avoid dehydration. 3. Find food to restore hunger (Priority: 4/5): Your food level is at 6/9, so finding a source of food like a cow or a fruit would help restore your hunger and maintain good health. Question: What are the requirements for the top sub-task? What should the player do first? Answer: The requirements for the top sub-task (smelt iron in the furnace) are: 1. Have a furnace placed (already accomplished). 2. Have coal in your inventory (already accomplished with 2 coal). 3. Have iron in your inventory (already accomplished with 1 iron). 134 As all the requirements are already met, the player should first approach the placed furnace and then use it to smelt the iron using the coal they have in their inventory. This will create an iron ingot, which can then be used to craft better items such as an iron sword or an iron pickaxe. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move East - Requirement: Flat ground right to the agent. Action: Move towards the placed furnace, which is 2 steps to the south-east. 2. Priority 2: Do - Requirement: Facing creature or material; have necessary tool. Action: Use the furnace to smelt the iron using coal in the inventory. 3. Priority 3: Make Iron Pickaxe - Requirements: Nearby table, furnace; wood, coal, iron in inventory. Action: Craft an iron pickaxe by using resources available in the inventory and using the table. 4. Priority 4: Collect Drink - Requirement: No requirements. Action: Find a water source, like a lake or river, to drink and restore the drink meter. 5. Priority 5: Eat Plant - Requirements: Place Plant. Action: Place a sapling to grow food, wait for the plants to grow, and then eat to restore the food meter. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Move East - Requirement: Flat ground right to the agent. Yes, the requirement is met. There is flat ground to the east, so the player can move in that direction. 2. Priority 2: Do - Requirement: Facing creature or material; have necessary tool. Yes, the requirements are met as the player will be facing the furnace after moving east. The player has the necessary coal and iron in the inventory to smelt iron. 3. Priority 3: Make Iron Pickaxe - Requirements: Nearby table, furnace; wood, coal, iron in inventory. Yes, the requirements are met. The player will be near a furnace after moving east. A table is also nearby, and the player has wood, coal, and iron in the inventory. 4. Priority 4: Collect Drink - Requirement: No requirements. Partially met. The player can act on this action, but there is no visible water source currently in the observation. The player needs to find a water source to collect a drink. 5. Priority 5: Eat Plant - Requirements: Place Plant. No, the requirement is not met, as there is no sapling in the player‚Äôs inventory to place and grow a plant. The player needs to find and collect saplings to place and grow a plant for food. Question: Did the last player action succeed? Why? Answer: There is not enough information provided to determine if the last player action, place_furnace, succeeded or not. The observation does not mention the furnace being successfully placed, so we cannot determine its success without more information. Question: Choose the best executable action from above. Answer: The best executable action from the list is: Priority 1: Move East - Requirement: Flat ground right to the agent. This action can be executed immediately as the requirement is met, and it brings the player closer to the placed furnace and table. ============Step: 86, Cumulative Reward: 0.0============ You took action move_east. You see: - stone 3 steps to your south-east - path 2 steps to your north-east - tree 4 steps to your north-west - table 2 steps to your south-east You face grass at your front (west). Your status: - health: 9/9 - food: 6/9 - drink: 5/9 - energy: 7/9 Your inventory: - stone: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move West Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone, requires a wood or stone pickaxe to collect. 135 2. Path: Provides passage/travel, requires flat ground to interact with. 3. Tree: Provides wood, requires a wood or stone axe to collect. 4. Table: Provides crafting station, requires wood to craft. 5. Grass: Decorative element, can be walked on. 6. Iron: Provides iron, requires a stone pickaxe to collect. 7. Coal: Provides coal, which is used as a fuel source, requires a wood or stone pickaxe to collect. 8. Wood pickaxe: Provides ability to collect stone and coal, requires a table to craft. 9. Stone pickaxe: Provides ability to collect iron and other advanced resources, requires a table to craft. 10. Furnace (unseen in step 172 but placed in step 170): Provides smelting abilities for metals like iron and coal, requires stone to craft. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_east. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Yes, the player has a wood_pickaxe and a stone_pickaxe in their inventory to collect stone. 2. Path: Yes, the path requires flat ground to interact with, and its presence indicates that the requirement is met. 3. Tree: No, the player does not currently possess a wood or stone axe to collect wood from the tree. 4. Table: Yes, the player has already placed a table in a previous step, indicating the requirement of wood to craft was met. 5. Grass: Yes, grass can be walked on and does not have any specific requirements for interaction. 6. Iron: Yes, the player has a stone_pickaxe in their inventory that can be used to collect iron. 7. Coal: Yes, the player has a wood_pickaxe and a stone_pickaxe in their inventory to collect coal. 8. Wood pickaxe: Yes, the player has crafted a wood pickaxe in a previous step, meeting the requirement of a table to craft. 9. Stone pickaxe: Yes, the player has crafted a stone pickaxe in a previous step, meeting the requirement of a table to craft. 10. Furnace: Yes, the player placed a furnace in step 170, indicating the requirement of stone to craft was met. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Collect more iron (Priority: 5/5): The player currently has only one piece of iron in their inventory. Collecting more iron will enable them to craft better tools and weapons such as an iron sword, which will help them defeat stronger monsters. 2. Find and drink water (Priority: 4/5): The player‚Äôs drink level is at 5/9, which is not critical but needs attention soon. Increasing their drink level will ensure the player avoids dehydration and maintains optimal health in the game. 3. Collect wood and craft an axe (Priority: 3/5): The player currently lacks a wood or stone axe to collect wood from trees. Since wood is a crucial resource for creating tools, weapons, and shelters, obtaining an axe and collecting wood should be one of the next tasks to accomplish. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Top Sub-task: Collect more iron. Requirements: 1. Locate an iron deposit. 2. Have a stone pickaxe (or better) to mine the iron. The player already has a stone_pickaxe in their inventory, which can be used to mine iron. What should the player do first: 1. Explore the environment to find an iron deposit. 2. Once an iron deposit is found, use the stone_pickaxe to mine the iron. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move (North, South, East, or West) - Requirement: Flat ground in the desired direction. - To explore the environment and find an iron deposit. 2. Priority 2: Move (North, South, East, or West) - Requirement: Flat ground in the desired direction. - To continue exploring the environment and get closer to the iron deposit. 3. Priority 3: Move (North, South, East, or West) - Requirement: Flat ground in the desired direction. - To reach the iron deposit. 4. Priority 4: Do (mine iron) - Requirement: Facing iron deposit; have necessary tool (stone_pickaxe or better). - Mine the iron deposit using the stone_pickaxe. 5. Priority 5: Move (North, South, East, or West) - Requirement: Flat ground in the desired direction. - To return to the player‚Äôs base or a safe location after collecting the iron. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Move (North, South, East, or West) - Requirement: Flat ground in the desired direction. - Yes, the requirement is met, as the player faces grass to their west, which is flat ground. 2. Priority 2: Move (North, South, East, or West) - Requirement: Flat ground in the desired direction. - The specific direction cannot be determined. However, there should be at least one flat ground location available for the player to move to by choosing a suitable direction. 3. Priority 3: Move (North, South, East, or West) - Requirement: Flat ground in the desired direction. - Similar to Priority 2, the specific direction cannot be determined, but there should be at least one flat ground location available for the player to move to by choosing a suitable direction. 4. Priority 4: Do (mine iron) - Requirement: Facing iron deposit; have necessary tool (stone_pickaxe or better). - No, the requirement is not met. The player is not currently facing an iron deposit and they face grass at their front ( west). 136 5. Priority 5: Move (North, South, East, or West) - Requirement: Flat ground in the desired direction. - As with Priority 2 and 3, the specific direction cannot be determined, but there should be at least one flat ground location available for the player to move to by choosing a suitable direction. Question: Did the last player action succeed? Why? Answer: Yes, the last player action (move_east) succeeded because there was flat ground to the east of the player, allowing them to move in that direction. Question: Choose the best executable action from above. Answer: The best executable action from above is Priority 1: Move (North, South, East, or West) - Requirement: Flat ground in the desired direction. In this case, the player can move west as there is flat ground (grass) in that direction. This action will allow the player to explore the environment and find an iron deposit. ============Step: 87, Cumulative Reward: 0.0============ You took action move_west. You see: - stone 3 steps to your south-east - path 2 steps to your north-east - tree 4 steps to your north-west - table 2 steps to your south-east - cow 5 steps to your north-west You face grass at your front (west). Your status: - health: 9/9 - food: 6/9 - drink: 5/9 - energy: 7/9 Your inventory: - stone: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move West Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: - Stone: Provides stone resource; requires a wood_pickaxe or better to collect. - Path: Provides easier movement and navigation; no requirements to use. - Tree: Provides wood resource; requires a wood_pickaxe or better to collect. - Table: Crafting station for making tools and weapons; requires wood to craft. - Cow: Provides food (meat) when defeated; requires a weapon, such as a wood_sword or better, to defeat. - Grass: A basic terrain feature; no resources or requirements. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_west. Question: For each object in the list, are the requirements met for interaction? Answer: - Stone: Yes, the requirements are met as you have a wood_pickaxe and a stone_pickaxe in your inventory, which can be used to collect stone. - Path: Yes, the requirements (no requirements) are met, and you can walk on the path for easier movement. - Tree: Yes, the requirements are met as you have a wood_pickaxe in your inventory, which can be used to collect wood. - Table: Yes, the requirements (having wood) are met, as you already have a table placed 2 steps to your south-east that you can interact with for crafting. - Cow: No, the requirements are not met yet, as you do not have a weapon like a wood_sword in your inventory to defeat the cow for food. - Grass: Yes, the requirements (no requirements) are met, and you can walk on the grass. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Craft a wood_sword (Priority: 5) - Crafting a wood_sword will allow you to defeat the cow, providing food and helping to restore your food level. 2. Collect wood from the tree (Priority: 4) - Collecting wood is essential for crafting new items, such as a wood_sword, and building structures. 3. Collect more stone (Priority: 3) - Collecting additional stone would be beneficial for crafting more advanced tools, weapons, and building materials, such as a furnace or stone_sword. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Requirements for the top sub-task (Craft a wood_sword): 1. Have wood in your inventory - You will need wood to craft the wood_sword. 2. Have access to a table - You will need a table nearby to craft the wood_sword. What the player should do first: 137 Since you already have a table at 2 steps to your south-east, you should collect wood from the tree that is 4 steps to your north-west. To do this, you can move towards the tree by moving north-west and then use your wood_pickaxe to collect wood. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move West (Requirement: Flat ground left to the agent) Purpose: To move towards the tree to collect wood. 2. Priority 2: Move West (Requirement: Flat ground left to the agent) Purpose: To continue moving towards the tree to collect wood. 3. Priority 3: Move North (Requirement: Flat ground above the agent) Purpose: To reach the tree to collect wood. 4. Priority 4: Do (Facing creature or material; have necessary tool) Requirement: Face the tree and have wood_pickaxe in inventory. Purpose: Use wood_pickaxe to collect wood from the tree. 5. Priority 5: Move South (Requirement: Flat ground below the agent) Purpose: To move back towards the table for crafting after collecting wood. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Move West (Requirement: Flat ground left to the agent) Yes, the requirement is met. The player faces grass, which is flat ground on the left. 2. Priority 2: Move West (Requirement: Flat ground left to the agent) The requirement is likely met due to the presence of grass in the front (west). However, the player needs to complete Priority 1 action and reevaluate the surroundings for flat ground after moving. 3. Priority 3: Move North (Requirement: Flat ground above the agent) Since the current observation only shows the immediate surroundings, the requirement might be met after moving west twice. The player needs to update their observation after moving west to confirm if there‚Äôs flat ground above. 4. Priority 4: Do (Facing creature or material; have necessary tool) Requirement: Face the tree and have wood_pickaxe in inventory. For this action, the player has the required wood_pickaxe in the inventory. However, they need to reach the tree by completing Priority 1, 2, and 3 actions before they can face the tree and execute this action. 5. Priority 5: Move South (Requirement: Flat ground below the agent) Like Priority 3 action, this action‚Äôs requirement will need to be confirmed after the player updates their observation after completing Priority 1, 2, 3, and 4 actions. Currently, the player‚Äôs surroundings aren‚Äôt fully known. Question: Did the last player action succeed? Why? Answer: Yes, the last player action move_west succeeded because there were no obstacles or restrictions preventing the player from moving in that direction, and their energy level allowed them to perform the action. Question: Choose the best executable action from above. Answer: The best executable action from the list above is Priority 1: Move West (Requirement: Flat ground left to the agent) as the requirement is currently met, and it will take the player closer to the tree to collect wood. ============Step: 88, Cumulative Reward: 0.0============ You took action move_west. You see: - stone 3 steps to your south-east - path 2 steps to your north-east - tree 4 steps to your north-west - table 2 steps to your south-east - cow 6 steps to your north-west You face grass at your front (west). Your status: - health: 9/9 - food: 6/9 - drink: 5/9 - energy: 7/9 Your inventory: - stone: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move South Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone resource; requires a wood_pickaxe or better to collect. 2. Path: No resource provided; allows easier navigation with no requirements. 3. Tree: Provides wood resource; requires an empty hand or any tool to collect. 138 4. Table: Allows crafting tools and weapons; requires wood or stone to craft and place. 5. Cow: Provides food when defeated; requires a weapon or empty hand to defeat. 6. Grass: No resource provided; can be traversed with no requirements. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_west. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Yes, the requirements are met as the player has a wood_pickaxe and a stone_pickaxe in the inventory. 2. Path: Yes, the requirements are met since there is no specific requirement to navigate the path. 3. Tree: Yes, the requirements are met as the player has an empty hand and can also use the wood_pickaxe or stone_pickaxe to collect wood. 4. Table: Yes, the player can interact with the table to craft tools and weapons as they have wood and stone resources in their inventory. 5. Cow: Yes, the player can interact with the cow to obtain food, as they can use an empty hand or the wood_pickaxe or stone_pickaxe to defeat it. 6. Grass: Yes, the requirements are met as the player can traverse the grass with no specific requirements. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Priority: 5/5 - Increase drink level: The player should find and drink water from a lake or another source to restore their thirst, as the current drink level is 5/9. 2. Priority: 4/5 - Increase food level: The player should consider defeating the cow to obtain food, as their food level is 6/9. Alternatively, they can collect saplings and grow fruits to increase their food supply. 3. Priority: 3/5 - Collect more resources: The player should collect more stone, wood, and possibly iron to craft better tools and weapons, build shelters, or create other useful items. Question: What are the requirements for the top sub-task? What should the player do first? Answer: The requirements for the top sub-task (Increase drink level) are: 1. Finding a water source such as a lake, river, or other body of water. To complete this top sub-task, the player should do the following first: 1. Explore the surroundings by moving either north, east, or south (since the stone is located to the south-east, the water source may be found in that direction) in search of a water source. Keep an eye out for visible water sources, and once found, approach and drink from it to increase the drink level. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1 - Move South (or East): Requirement: Flat ground below (or right) of the agent. This action is required to explore the surroundings and find a water source to increase the drink level. 2. Priority 2 - Drink from Water Source: Requirement: Finding a water source (lake or river) nearby. This action replenishes the player‚Äôs drink level. 3. Priority 3 - Move towards the Cow: Requirement: Flat ground in the direction of the cow (north-west). This action gets the player closer to the cow to increase the food level by interacting with the cow. 4. Priority 4 - Interact with the Cow: Requirement: Facing the cow and having necessary tools (wood sword, stone sword or iron sword). This action allows the player to obtain food by interacting with the cow. 5. Priority 5 - Eat Food: Requirement: Food in inventory (obtained from the cow). This action increases the player‚Äôs food level and restores health points. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1 - Move South (or East): The requirement for moving south or east is having flat ground below or right of the agent. The requirements are met, as there is no indication of obstacles in the southern or eastern directions. 2. Priority 2 - Drink from Water Source: Drinking from water source requires finding a water source nearby. As there is no water source mentioned in the given observations, the requirement is not met. 3. Priority 3 - Move towards the Cow: The requirement for moving towards the cow is having flat ground in the north-west direction. The observation does not mention any obstacles in the north-west direction, so the requirement is met. 4. Priority 4 - Interact with the Cow: The requirement for interacting with the cow includes facing the cow and having necessary tools (wood sword, stone sword, or iron sword). The player is not currently facing the cow and does not possess any swords in the inventory. Therefore, the requirement is not met. 5. Priority 5 - Eat Food: The requirement for eating food is having food in the inventory. The player does not have any food in the inventory currently, so the requirement is not met. Question: Did the last player action succeed? Why? Answer: Yes, the last player action move_west succeeded because there were no objects or obstacles blocking the player‚Äôs path to the west, and the ground was flat, allowing them to move in that direction. Question: Choose the best executable action from above. Answer: The best executable action from the list is Priority 1 - Move South (or East) because its requirement of flat ground below ( or right) of the agent is met, allowing the player to explore their surroundings and possibly find a water source or other resources. 139 ============Step: 89, Cumulative Reward: 0.0============ You took action move_south. You see: - stone 3 steps to your south-east - path 2 steps to your north-east - tree 4 steps to your north-west - table 2 steps to your south-east - cow 6 steps to your north-west You face grass at your front (west). Your status: - health: 9/9 - food: 6/9 - drink: 5/9 - energy: 7/9 Your inventory: - stone: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Do Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone for crafting tools, weapons, and furnaces. Requirement: Stone pickaxe to collect. 2. Path: Provides a route to travel between different locations. Requirement: None. 3. Tree: Provides wood for crafting tools and structures. Requirement: Wood pickaxe to collect. 4. Table: Provides a surface for crafting tools, weapons, and other items. Requirement: Wood to craft. 5. Cow: Provides food to restore the player‚Äôs hunger. Requirement: Wood sword or stronger to defeat. 6. Grass: Provides no resource. Requirement: None. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_south. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Yes, the requirements are met as you have a stone_pickaxe in your inventory. 2. Path: Yes, there are no requirements for interacting with the path. 3. Tree: Yes, the requirements are met as you have a wood_pickaxe in your inventory. 4. Table: Yes, the requirements are met as you have a table in your vicinity (2 steps to your south-east). 5. Cow: Yes, the requirements are met as you have a wood sword or stronger (stone_pickaxe) in your inventory. 6. Grass: Yes, there are no requirements for interacting with grass. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Priority 5/5: Restore drink - Your drink level is at 5/9. Find a water source to drink and replenish your hydration. 2. Priority 4/5: Restore food - Your food level is at 6/9. Defeat the cow you see nearby (6 steps to your north-west) to collect and eat meat. 3. Priority 3/5: Collect resources - Collect more stone (3 steps to your south-east), wood (from the tree 4 steps to your north-west), and iron to improve tools and craft more items. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Top sub-task: Restore drink Requirements: - Find a water source (lake, river, or well) to drink from. What should the player do first: - Move to a water source to drink and replenish your hydration. You may need to explore your surroundings to find one. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move (North, South, East, or West) - Requirement: Flat ground in the direction of movement. This action is essential for the player to explore their surroundings, find resources and water sources. 2. Priority 2: Collect Drink - Requirement: Facing a water source (lake, river, or well). It is necessary to maintain hydration levels. 3. Priority 3: Make Wood Pickaxe - Requirement: Nearby table; wood in inventory. Crafting a wood pickaxe allows the player to gather essential resources like stone and coal. 4. Priority 4: Collect Wood - Requirement: No requirements. The player should collect wood as it is a basic resource needed for crafting tools, weapons, and creating shelters. 5. Priority 5: Make Wood Sword - Requirement: Nearby table; wood in inventory. Crafting a wood sword provides the player with a basic weapon to defend themselves against monsters. Question: For each action in the list, are the requirements met? Answer: 140 1. Move (North, South, East, or West): Yes, the requirement for flat ground in the direction of movement is met. The player can move in any direction as long as there is flat ground. 2. Collect Drink: No, the requirement of facing a water source is not met currently. The player will need to find a water source (lake, river, or well) to satisfy the requirement. 3. Make Wood Pickaxe: No, the requirement of having wood in the inventory is not met. The player already has a wood_pickaxe in the inventory, so this action is unnecessary. 4. Collect Wood: Yes, there is no specific requirement for collecting wood. However, the player needs to move closer to the tree mentioned in the observation (4 steps to the north-west) before attempting to collect wood. 5. Make Wood Sword: No, the requirement of having wood in inventory is not met. The player needs to collect wood before attempting to craft a wood sword. Question: Did the last player action succeed? Why? Answer: Yes, the last player action succeeded. The player moved south because there were no obstacles or restrictions mentioned in the player‚Äôs observation, indicating that the path was clear and the action could be executed without any issues. Question: Choose the best executable action from above. Answer: The best executable action from the list above is to Move (North, South, East, or West) as the requirement for flat ground in the desired direction is met. Specifically, the player can move towards the tree by moving North or West to collect wood, which will help fulfill the requirements for other actions. ============Step: 90, Cumulative Reward: 0.0============ You took action do. You see: - stone 3 steps to your south-east - path 2 steps to your north-east - tree 4 steps to your north-west - table 2 steps to your south-east - cow 5 steps to your north-west You face grass at your front (west). Your status: - health: 9/9 - food: 6/9 - drink: 5/9 - energy: 7/9 Your inventory: - stone: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move North Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: 3 steps to your south-east Resource provided: Collect more stones for crafting tools and building. Requirement: Stone pickaxe 2. Path: 2 steps to your north-east Resource provided: None, a path helps you navigate through the terrain easily. Requirement: None 3. Tree: 4 steps to your north-west Resource provided: Wood for crafting tools, weapons, and building shelters. Requirement: Wood pickaxe 4. Table: 2 steps to your south-east Resource provided: Crafting station for making advanced tools and weapons. Requirement: Wood to build the table 5. Cow: 5 steps to your north-west Resource provided: Food to restore your health. Requirement: Wood or better sword for killing the cow Question: What was the last action taken by the player? Answer: The last action taken by the player was do. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: 3 steps to your south-east Requirement: Stone pickaxe Requirement met: Yes, you have a stone_pickaxe in your inventory. 2. Path: 2 steps to your north-east Requirement: None 141 Requirement met: Yes, no special requirement needed for interaction. 3. Tree: 4 steps to your north-west Requirement: Wood pickaxe Requirement met: Yes, you have a wood_pickaxe in your inventory. 4. Table: 2 steps to your south-east Requirement: Wood to build the table Requirement met: Yes, the table is already built and can be used for crafting. 5. Cow: 5 steps to your north-west Requirement: Wood or better sword for killing the cow Requirement met: No, you currently do not have a wood or better sword in your inventory. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Craft a wood sword (Priority: 5) Sub-task: Use the table to craft a wood sword, which will allow you to kill the cow for food and defend yourself from monsters. 2. Collect more wood (Priority: 4) Sub-task: Chop down the tree located 4 steps to your north-west using your wood_pickaxe to gather more wood for crafting and building purposes. 3. Drink water (Priority: 3) Sub-task: Find a water source such as a lake, to drink and replenish your thirst level, which is currently at 5/9. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Top Sub-task: Craft a wood sword Requirements: - Wood in inventory (currently missing) - Nearby crafting table (already available, 2 steps to the south-east) What should the player do first: 1. Move towards the tree (4 steps to the north-west) to collect more wood. 2. Use your wood_pickaxe to chop down the tree to get the required wood. 3. Return to the crafting table (2 steps south-east) and craft a wood sword using the collected wood. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move North (Move towards the tree) Requirement: Flat ground above the agent. 2. Priority 2: Move West (Move towards the tree) Requirement: Flat ground left to the agent. 3. Priority 3: Do (Chop down the tree with the wood_pickaxe) Requirement: Facing the tree (creature or material), and have the necessary tool (wood_pickaxe). 4. Priority 4: Move South (Move back to the crafting table) Requirement: Flat ground below the agent. 5. Priority 5: Make Wood Sword (Craft a wood sword at the crafting table) Requirement: Nearby table and wood in inventory. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Move North (Move towards the tree) Requirement: Flat ground above the agent. Status: Yes, there is a path 2 steps to the agent‚Äôs north-east, so moving north is possible. 2. Priority 2: Move West (Move towards the tree) Requirement: Flat ground left to the agent. Status: Yes, the agent is currently facing grass to the west, so moving west is possible. 3. Priority 3: Do (Chop down the tree with the wood_pickaxe) Requirement: Facing the tree (creature or material), and have the necessary tool (wood_pickaxe). Status: No, the agent is currently facing grass and not the tree. The agent needs to move closer to the tree and face it before executing this action. 4. Priority 4: Move South (Move back to the crafting table) Requirement: Flat ground below the agent. Status: Yes, the agent has just moved north (step 178), so moving south is possible, as there should be flat ground below the agent. 5. Priority 5: Make Wood Sword (Craft a wood sword at the crafting table) Requirement: Nearby table and wood in inventory. Status: No, the agent does not currently have wood in their inventory. The agent needs to chop down the tree to obtain wood before executing this action. Question: Did the last player action succeed? Why? Answer: It‚Äôs not clear if the last player action do succeeded, as there is no immediate change or result mentioned in the following observation. The player faced grass at their front (west) before and after the action, and there is no mention of an interaction with the grass or any item being used. There might not have been a valid target or action for the do command in this particular situation. Question: Choose the best executable action from above. Answer: 142 The best executable action from the list above is Priority 1: Move North (Move towards the tree), as it meets the requirement (flat ground above the agent) and allows the player to progress towards collecting wood, which is necessary for crafting a wood sword. ============Step: 91, Cumulative Reward: 0.0============ You took action move_north. You see: - stone 3 steps to your south-east - path 2 steps to your north-east - tree 4 steps to your north-west - table 2 steps to your south-east You face grass at your front (west). Your status: - health: 9/9 - food: 6/9 - drink: 5/9 - energy: 7/9 Your inventory: - stone: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move West Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone resource, requires a wood or stone pickaxe to collect. 2. Path: Provides a flat surface for walking, no requirement to interact. 3. Tree: Provides wood resource, requires an axe or any tool to collect. 4. Table: Provides a surface for crafting, no requirement to interact. 5. Grass: Provides no resources, no requirement to interact. 6. Cow (not visible in Step 182): Provides food, requires any melee weapon or tool to hunt. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_north. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Yes, the requirements are met as you have both a wood_pickaxe and a stone_pickaxe in your inventory. 2. Path: Yes, there are no requirements to interact, and you can walk on the path. 3. Tree: Yes, the requirements are met as you have wood_pickaxe and stone_pickaxe that can be used to collect wood. 4. Table: Yes, there are no requirements to interact with the table, and you can use it for crafting. 5. Grass: Yes, there are no requirements to interact with the grass. 6. Cow (not visible in Step 182): Yes, the requirements are met as you have a wood_pickaxe and stone_pickaxe, which can be used as melee weapons for hunting. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Priority 5: Find and drink from a water source (lake or river) to restore the drink meter, which is currently at 5/9. 2. Priority 4: Collect more wood from the tree to create more tools, weapons, or shelter. 3. Priority 3: Find and interact with the cow to gather food and restore the food meter, which is currently at 6/9. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Requirements for the top sub-task (Find and drink from a water source): 1. Locate a water source such as a lake or river within the game. 2. Approach the water source. 3. Interact with the water source to drink and restore the drink meter. The player should first locate a water source in the game by exploring the surroundings, then move towards the water source to approach it. Once near the water source, the player should interact with it to drink and restore their drink meter. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move West (Flat ground left to the agent) - This action allows the player to explore the surroundings in the hope of finding a water source. 2. Priority 2: Move East (Flat ground right to the agent) - Similar to the previous action, this action allows the player to explore the surroundings and potentially find a water source. 3. Priority 3: Move North (Flat ground above of the agent) - Moving north can also help the player explore their surroundings and locate a water source. 4. Priority 4: Move South (Flat ground below the agent) - Like the other movement actions, moving south can help the player find a water source. 5. Priority 5: Drink (Facing a water source) - Once the player finds a water source and faces it, they should take this action to restore their drink meter. 143 Note: The player should try the movement actions in different sequences to increase the chances of finding a water source, rather than following the order 1-4 directly. Question: For each action in the list, are the requirements met? Answer: For the current player observation (Step 182), the requirements for each listed action are as follows: 1. Priority 1: Move West (Flat ground left to the agent) - The requirement is met as there is flat ground (grass) to the west. 2. Priority 2: Move East (Flat ground right to the agent) - Requirement unknown, as the player observation does not provide information about the east direction. 3. Priority 3: Move North (Flat ground above the agent) - Requirement already met in the most recent step when the player moved north. Based on the current player observation, there might still be flat ground to move further north, but it‚Äôs not directly mentioned. 4. Priority 4: Move South (Flat ground below the agent) - The requirement is met since the player has just moved from the south position and the ground is flat there. 5. Priority 5: Drink (Facing a water source) - The requirement is not met because the player observation does not yet show a water source. Question: Did the last player action succeed? Why? Answer: Yes, the last player action (move_north) succeeded because there was flat ground available for the player to move north, as mentioned in the observation: path 2 steps to your north-east and no obstacles were blocking the player‚Äôs way. Question: Choose the best executable action from above. Answer: The best executable action from the list above is Priority 1: Move West (Flat ground left to the agent) because there is flat ground (grass) to the west as mentioned in the player‚Äôs observation, and it allows the player to explore the surroundings in search of resources like a water source. ============Step: 92, Cumulative Reward: 0.0============ You took action move_west. You see: - stone 3 steps to your south-east - path 2 steps to your north-east - tree 4 steps to your north-west - table 2 steps to your south-east - cow 5 steps to your north-west You face grass at your front (west). Your status: - health: 9/9 - food: 6/9 - drink: 5/9 - energy: 7/9 Your inventory: - stone: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move North Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone resource; requires a wood_pickaxe or better to collect it. 2. Path: Provides easier movement and navigation; no requirements to interact with. 3. Tree: Provides wood resource; requires a wood_pickaxe or better to collect it. 4. Table: Provides crafting possibilities; no requirements to interact with. 5. Cow: Provides food when defeated; requires a weapon, such as a wood or stone sword, to defeat it. 6. Grass: Can be used for landscaping or building purposes; no requirements to interact with. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_west. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Yes, you have a wood_pickaxe and a stone_pickaxe in your inventory, either of which can be used to collect the stone. 2. Path: Yes, there are no specific requirements to interact with the path, as it simply makes movement and navigation easier. 3. Tree: Yes, you have a wood_pickaxe in your inventory, which can be used to collect wood from the tree. 4. Table: Yes, there are no specific requirements to interact with the table; it can be used for crafting when you are in its vicinity. 5. Cow: Yes, you can interact with the cow to defeat it and obtain food. While you don‚Äôt currently have a sword in your inventory, you can craft one using resources and the table, or attempt to defeat the cow using any other available tools or methods. 144 6. Grass: Yes, there are no specific requirements to interact with the grass, and it can be used for various purposes, such as landscaping or building. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Priority 5/5: Craft a weapon, such as a wood or stone sword, using the table to improve your ability to defeat the cow and potentially other threats. This will provide you with food and increase your chances of survival. 2. Priority 4/5: Collect wood from the tree using your wood_pickaxe. Wood is an essential resource for crafting and building, expanding your options for items to use and shelter. 3. Priority 3/5: Collect stone from the stone block using your stone_pickaxe to gather more resources for crafting advanced tools, weapons, or building materials. This will allow you to progress further in the game and increase your overall capabilities. Question: What are the requirements for the top sub-task? What should the player do first? Answer: For the top sub-task of crafting a weapon (wood or stone sword), the requirements are: 1. Have a nearby table, which is already 2 steps to the south-east of the player. 2. Have the necessary materials in the inventory: - For a wood sword: wood. - For a stone sword: wood and stone (you have 1 stone in your inventory already). Since you don‚Äôt have wood in your inventory currently, the first thing you should do is collect wood from the tree 4 steps to your north-west using your wood_pickaxe. Once you‚Äôve collected enough wood, move to the table, and craft a weapon of your choice (either a wood or stone sword). Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Action - Move North (3 times): Requirement - Flat ground above the agent. Purpose: Reach the tree in order to collect wood with the wood_pickaxe. 2. Priority 2: Action - Do: Requirement - Facing the tree; have wood_pickaxe in the inventory. Purpose: Collect wood from the tree using the wood_pickaxe. 3. Priority 3: Action - Move South (3 times): Requirement - Flat ground below the agent. Purpose: Move back to the table (2 steps to the south-east) to craft a weapon. 4. Priority 4: Action - Do: Requirement - Facing the table; have necessary materials (wood or wood & stone) and tools in the inventory. Purpose: Create a weapon (wood or stone sword) at the table. 5. Priority 5: Action - Move North, East, or West (based on situation): Requirement - Flat ground in the desired direction. Purpose: Explore the environment, look for resources or targets, and prepare for potential combat using the newly crafted weapon. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Action - Move North (3 times): Requirement - Flat ground above the agent. Are requirements met? Yes. You can move north as there is flat ground above the agent. 2. Priority 2: Action - Do: Requirement - Facing the tree; have wood_pickaxe in the inventory. Are requirements met? No. You need to reach the tree first by moving north 3 times, as suggested in priority 1. 3. Priority 3: Action - Move South (3 times): Requirement - Flat ground below the agent. Are requirements met? Not yet. You need to complete priority 1 and 2 actions before moving south, as suggested. 4. Priority 4: Action - Do: Requirement - Facing the table; have necessary materials (wood or wood & stone) and tools in the inventory. Are requirements met? Not yet. You need to collect wood by performing priorities 1 and 2 actions first, and then move south as suggested in priority 3. 5. Priority 5: Action - Move North, East, or West (based on situation): Requirement - Flat ground in the desired direction. Are requirements met? Yes, but not recommended at this point, since priorities 1-4 actions should be completed first to ensure you have collected resources and crafted a weapon. Question: Did the last player action succeed? Why? Answer: Yes, the last player action (move_west) succeeded. It succeeded because there was flat ground (grass) in front of the player‚Äô s direction (west), which allowed them to move in that direction. Question: Choose the best executable action from above. Answer: The best executable action from the list above is Priority 1: Action - Move North (3 times). The requirement of having flat ground above the agent is met, and this action will help the player reach the tree to collect wood. ============Step: 93, Cumulative Reward: 0.0============ You took action move_north. You see: - stone 3 steps to your south-east - path 2 steps to your north-east - tree 4 steps to your north-west - table 2 steps to your south-east - cow 5 steps to your north-west You face grass at your front (west). 145 Your status: - health: 9/9 - food: 6/9 - drink: 5/9 - energy: 7/9 Your inventory: - stone: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move West Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone resource, requires a wood or stone pickaxe to mine. 2. Path: Provides easier movement and traveling, no requirements. 3. Tree: Provides wood resource, requires an axe or hands to chop down. 4. Table: Provides a surface for crafting tools and items, requires wood to craft. 5. Cow: Provides food (meat) resource and leather, requires a weapon or hands to kill. 6. Grass: Provides a basic terrain, no direct resources, and no requirements. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_north. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Yes, the requirements are met for interaction as you have both a wood_pickaxe and a stone_pickaxe in your inventory, which can be used to mine stone. 2. Path: Yes, the requirements for interacting with the path are met, as there are no specific requirements to move on it. You can move freely. 3. Tree: No, the requirements for chopping down a tree are not met because you don‚Äôt have an axe in your inventory. However, you can still try to collect wood using your hands, although it may take longer and be less efficient. 4. Table: Yes, the requirements to interact with the table are met because you have the necessary materials in your inventory to craft items on the table. 5. Cow: Yes, the requirements to interact with the cow are met as you can use your hands to fight even though a weapon would be more efficient. Since you have a stone_pickaxe, it can also be used as an improvised weapon to attack the cow. 6. Grass: Yes, the requirements for interacting with the grass are met; it‚Äôs a basic terrain with no specific requirements. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Gather more wood (Priority: 4/5): Wood is essential for crafting tools and items in the game. You currently do not have wood in your inventory, making it a high priority to gather more wood for future use. 2. Drink water (Priority: 5/5): Your thirst level is at 5/9, which means it is important to find a water source and drink from it to restore your thirst and avoid negative effects due to dehydration. This is the highest priority task. 3. Find food (Priority: 3/5): Your food level is currently 6/9, and it is important to maintain a good food supply to avoid starvation. Although you can see a cow in your surroundings, prioritize finding and hunting animals or harvesting plants for food to keep your levels up. Question: What are the requirements for the top sub-task? What should the player do first? Answer: The top sub-task is to gather more wood. The requirements for this task are: 1. Find a tree: Trees are the source of wood in the game. Currently, the player can see a tree 4 steps to their north-west. What the player should do first: 1. Move towards the tree: The player needs to go 4 steps north-west to reach the tree. They can accomplish this by going west and north alternately or continuously going in one direction, followed by the other until they are in front of the tree. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move West (Requirement: Flat ground left to the agent) - Move towards the tree that is 4 steps to the north- west. 2. Priority 2: Move North (Requirement: Flat ground above the agent) - Continue moving towards the tree, which is to the north-west. 3. Priority 3: Move West (Requirement: Flat ground left to the agent) - Keep moving towards the tree if it still is not directly in front of the player. 4. Priority 4: Move North (Requirement: Flat ground above the agent) - Continue moving towards the tree until it is directly in front of the player. 5. Priority 5: Do (Requirement: Facing creature or material; have necessary tool) - Use the wood_pickaxe to gather wood from the tree once the player is facing it. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Move West (Requirement: Flat ground left to the agent) - Yes, the requirement is met as the player is currently facing grass to the west, which indicates flat ground. 2. Priority 2: Move North (Requirement: Flat ground above the agent) - Yes, the requirement is met as the player was able to move north in the previous step without any issues, indicating flat ground. 3. Priority 3: Move West (Requirement: Flat ground left to the agent) - Yes, the requirement is met since the player is facing grass to the west, indicating flat ground. 146 4. Priority 4: Move North (Requirement: Flat ground above the agent) -Yes, the requirement is met as the player previously moved north without any issues, indicating flat ground. 5. Priority 5: Do (Requirement: Facing creature or material; have necessary tool) - This requirement can only be determined once the player is in front of the tree. If the tree is directly in front of the player, and they have a wood_pickaxe in their inventory (which they do), then the requirement is met. Question: Did the last player action succeed? Why? Answer: Yes, the last player action succeeded. The action move_north doesn‚Äôt have any specific requirements other than having a flat ground above the agent, and nothing in the observation suggests any obstacle preventing the player from moving north. Therefore, the action was successful. Question: Choose the best executable action from above. Answer: The best executable action from the list above is Priority 1: Move West. The requirement of flat ground left to the agent is met since the player is facing grass to the west, which indicates flat ground. This action brings the player closer to the tree, which is 4 steps to the north-west. ============Step: 94, Cumulative Reward: 0.0============ You took action move_west. You see: - stone 3 steps to your south-east - path 2 steps to your north-east - tree 4 steps to your north-west - table 2 steps to your south-east - cow 5 steps to your north-west You face grass at your front (west). Your status: - health: 9/9 - food: 6/9 - drink: 5/9 - energy: 7/9 Your inventory: - stone: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move West Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone resource, required for crafting stone tools, weapons, and building structures. Requirement: wood_pickaxe or better to collect. 2. Path: Does not provide direct resources, but it can help navigate the terrain more easily. 3. Tree: Provides wood resource, required for crafting wooden tools, weapons, and other structures. Requirement: any pickaxe to collect. 4. Table: Provides a surface for crafting tools and weapons. Requirement: wood in inventory to place the table. 5. Cow: Provides food resource when defeated, which helps restore health. Requirement: any weapon/ tool to chase and defeat the cow. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_west. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Yes, the requirements are met. You have a wood_pickaxe and a stone_pickaxe in your inventory, which can be used to collect stone. 2. Path: Yes, the requirements are met. You can walk on the path to navigate the terrain as there are no restrictions. 3. Tree: Yes, the requirements are met. You have a wood_pickaxe and a stone_pickaxe in your inventory, which can be used to collect wood from the tree. 4. Table: Yes, the requirements are met. The table is already placed and can be used to craft tools and weapons, as long as you have the necessary materials in your inventory. 5. Cow: Yes, the requirements are met. Although you don‚Äôt have a sword in your inventory, you can still chase and defeat the cow using your pickaxes (wood_pickaxe or stone_pickaxe). Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Priority 5/5: Drink water to restore thirst, as your current thirst level is at 5/9. The player should find a water source like a lake or river and interact with it to quench thirst. 2. Priority 4/5: Collect wood from the tree, as your inventory lacks wood. Wood is essential for crafting wooden tools, weapons, and structures. It can be collected by interacting with the tree using a wood_pickaxe or stone_pickaxe. 147 3. Priority 3/5: Chase and defeat the cow to obtain food and restore health. Although your health is at its maximum (9/9), food is needed to maintain it, and your current food level is 6/9. You can use your wood_pickaxe or stone_pickaxe to chase and defeat the cow. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Requirements for the top sub-task (Drink water to restore thirst): 1. Locate a water source such as a lake or river in the game environment. 2. Have enough energy to move towards the water source. The player should first explore the surrounding area to locate a water source like a lake or river. When found, the player should move towards it and interact with it to drink water and restore thirst. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1 - Move West: Requirement: Flat ground left to the agent. (This is based on the most recent in-game observation where the player is facing grass (west). Going west would allow the player to explore more and potentially find a water source.) 2. Priority 2 - Move North: Requirement: Flat ground above of the agent. (Exploring north could increase the chances of finding a water source, fulfilling the drink objective.) 3. Priority 3 - Move East: Requirement: Flat ground right to the agent. (By exploring east, the player may come across a water source or other needed resources.) 4. Priority 4 - Move South: Requirement: Flat ground below the agent. (Going south would further the exploration and could yield a water source or other valuable assets.) 5. Priority 5 - Do (Drink Water): Requirement: Facing a water source like a lake or river at the agent‚Äôs front. (This action would be taken once the player has found a water source and faced it. Drinking water would restore the player‚Äôs thirst levels.) Question: For each action in the list, are the requirements met? Answer: 1. Move West: Yes, the requirement is met. The player is currently facing grass (west) which indicates flat ground left to the agent. 2. Move North: Based on the player observation, there is no information about what‚Äôs directly north, so it‚Äôs unclear if there is flat ground above the agent. However, there is a path 2 steps to the north-east and a tree 4 steps to the north-west, which may indicate that moving north could be possible. 3. Move East: Yes, the requirement is met. There is a path 2 steps to the agent‚Äôs north-east and flat ground is right to the agent. 4. Move South: Based on the player observation, there is no information about what‚Äôs directly south, so it‚Äôs unclear if there is flat ground below the agent. However, there is a stone 3 steps to the agent‚Äôs south-east and a table 2 steps to the agent‚Äôs south-east, which may indicate that moving south could be possible. 5. Do (Drink Water): No, the requirement is not met as the player is currently facing grass (west) and there is no water source at the agent‚Äôs front that the player can drink from. The player must first locate a water source and face it to fulfill this requirement. Question: Did the last player action succeed? Why? Answer: Yes, the last player action (move_west) succeeded because there was flat ground to the west of the player, allowing them to move in that direction without any obstacles. Question: Choose the best executable action from above. Answer: The best executable action from above is Move West because the requirement is met, as the player is currently facing grass ( west) which indicates flat ground left to the agent. This action will allow the player to explore and potentially find valuable resources such as a water source. ============Step: 95, Cumulative Reward: 0.0============ You took action move_west. You see: - stone 3 steps to your south-east - path 2 steps to your north-east - tree 4 steps to your north-west - table 2 steps to your south-east - cow 5 steps to your north-west You face grass at your front (west). Your status: - health: 9/9 - food: 6/9 - drink: 5/9 - energy: 8/9 Your inventory: - stone: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ 148 Question: Action Answer: Move East Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone - Provides resource: stone; Requirement: stone_pickaxe to collect. 2. Path - Provides resource: none; Requirement: none. 3. Tree - Provides resource: wood; Requirement: wood_pickaxe to collect. 4. Table - Provides resource: none; Requirement: used for crafting tools and weapons. 5. Cow - Provides resource: food and leather; Requirement: a weapon to defeat (e.g., wood, stone, or iron sword). 6. Grass - Provides resource: none; Requirement: none. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_west. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone - Yes, the requirements are met as you have a stone_pickaxe in your inventory. 2. Path - Yes, there are no requirements for interacting with the path. 3. Tree - Yes, the requirements are met, as you have a wood_pickaxe in your inventory. 4. Table - Yes, the requirements are met, as you have crafted various tools already, and the table is available for further crafting. 5. Cow - Partially met, you don‚Äôt currently have a weapon (wood, stone, or iron sword) in your inventory, but you can craft one using the table. 6. Grass - Yes, there are no requirements for interacting with the grass. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Craft a weapon (e.g., wood, stone, or iron sword) to defeat the cow and obtain food - Priority: 5/5, as your food level is 6/9, and you need to address this to maintain your health. 2. Collect wood from the tree using your wood_pickaxe to craft more items and tools - Priority: 4/5, considering the tree‚Äôs proximity, it would be good to gather more wood resources for future crafting. 3. Drink water from a nearby water source to increase your drink level - Priority: 3/5, as your drink level is 5/9, addressing this soon will ensure your survival in the game. Question: What are the requirements for the top sub-task? What should the player do first? Answer: The top sub-task is crafting a weapon (wood, stone, or iron sword) to defeat the cow and obtain food. Requirements for crafting a weapon are: 1. Wood Sword: Nearby table and wood in inventory. 2. Stone Sword: Nearby table, wood, and stone in inventory. 3. Iron Sword: Nearby table, furnace, wood, coal, and iron in inventory. Based on your inventory and available resources, you currently have enough resources to craft a Stone Sword (you have a wood, stone, and a nearby table). What the player should do first: 1. Move to the nearby table by going east two steps. 2. Craft the Stone Sword at the table (since you already have wood and stone in your inventory). Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move East - Requirement: Flat ground right to the agent. (Move towards the table) 2. Priority 2: Move East - Requirement: Flat ground right to the agent. (Move to the table position) 3. Priority 3: Make Stone Sword - Requirements: Nearby table; wood, stone in inventory. (Craft the Stone Sword) 4. Priority 4: Move West - Requirement: Flat ground left to the agent. (Move towards the cow) 5. Priority 5: Move North - Requirement: Flat ground above of the agent. (To reach the cow to defeat and get food) Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Move East - Requirement: Flat ground right to the agent. (Move towards the table) - Yes, the requirement is met. 2. Priority 2: Move East - Requirement: Flat ground right to the agent. (Move to the table position) - Yes, the requirement is met (assuming the ground remains flat after taking the first move east action). 3. Priority 3: Make Stone Sword - Requirements: Nearby table; wood, stone in inventory. (Craft the Stone Sword) - Yes, the requirements are met (after moving to the table). 4. Priority 4: Move West - Requirement: Flat ground left to the agent. (Move towards the cow) - Yes, the requirement is met. 5. Priority 5: Move North - Requirement: Flat ground above of the agent. (To reach the cow to defeat and get food) - The requirement will be met if the ground remains flat after moving towards the cow. Question: Did the last player action succeed? Why? Answer: Yes, the last player action, move_west, succeeded. It succeeded because there was flat ground (grass) to the west of the player, allowing them to move in that direction. Question: Choose the best executable action from above. Answer: The best executable action from above is Priority 1: Move East - Moving towards the table, as the requirement of flat ground right to the agent is met. 149 ============Step: 96, Cumulative Reward: 0.0============ You took action move_east. You see: - stone 3 steps to your south-east - path 2 steps to your north-east - tree 4 steps to your north-west - table 2 steps to your south-east - cow 5 steps to your north-west You face grass at your front (west). Your status: - health: 9/9 - food: 6/9 - drink: 5/9 - energy: 8/9 Your inventory: - stone: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move West Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone as a resource, which can be used for crafting tools, weapons, and building structures. Requirement: Stone pickaxe or higher to collect. 2. Path: Provides ease of movement and navigation. No direct resources provided. No requirements. 3. Tree: Provides wood as a resource for crafting tools, weapons, and building structures. Requirement: Wood or higher level of pickaxe to collect. 4. Table: Provides a surface for crafting various tools and weapons using the resources collected. Requirement: Wood to build and place the table. 5. Cow: Provides food as a resource when defeated, helping to replenish the hunger bar. Requirement: Defeat the cow using a weapon (e.g., wood sword, stone sword, iron sword). Question: What was the last action taken by the player? Answer: The last action taken by the player was move_east. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Yes, the requirements are met for interaction because you have a stone_pickaxe in your inventory, which is suitable for collecting stone. 2. Path: Yes, the requirements are met for interaction as there are no specific requirements for using the path. You can simply move along it for easier navigation. 3. Tree: Yes, the requirements are met for interaction because you have a wood_pickaxe in your inventory, which is suitable for collecting wood from the tree. 4. Table: Yes, the requirements are met for interaction because the table is already placed 2 steps to your south-east. You can interact with it to craft items given you have the necessary resources. 5. Cow: Yes, the requirements are met for interaction, although you don‚Äôt have a specific weapon in your inventory. You can try to defeat the cow using your pickaxes or craft a weapon such as a wood sword, stone sword, or iron sword first for a more efficient interaction. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Priority 5: Replenish thirst by finding a source of water (lake or river) and interacting with it to collect a drink, as your current drink level is 5/9. 2. Priority 4: Increase your food supply by defeating the cow 5 steps to your north-west, which will provide you with more food to restore your hunger bar, currently at 6/9. 3. Priority 3: Craft a weapon (e.g., wood sword or stone sword) at the table 2 steps to your south-east to improve your ability to defend yourself and defeat creatures like the cow more efficiently. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Requirements for the top sub-task (Replenish thirst): - Find a source of water (lake or river) - Interact with the water source to collect a drink What should the player do first: The player should begin searching for a water source by observing their surroundings and then move toward it. If the player already knows the location of a nearby water source, such as a lake or river, they should start moving in that direction. Exploring the environment will help the player locate a suitable water source to replenish their thirst. 150 Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move West (Requirement: Flat ground left to the agent) - The player currently faces grass to the west, and moving can help them explore the environment and find a water source. 2. Priority 2: Move North (Requirement: Flat ground above the agent) - If west is not the right direction towards a water source, moving north can help the player explore the environment and find a water source. 3. Priority 3: Move South (Requirement: Flat ground below the agent) - If west and north are not suitable directions, explore the environment by moving south to find water. 4. Priority 4: Move East (Requirement: Flat ground right to the agent) - Returning to the starting point and moving east will further help the player explore the environment to find a water source. 5. Priority 5: Do (Requirement: Facing creature or material; have necessary tool) - Once the player finds a water source, they should interact with it to collect a drink to replenish their thirst. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Move West - Yes, the requirement is met. The player is currently facing grass to the west, which is flat ground. 2. Priority 2: Move North - Yes, the requirement is met. There is flat ground above the agent as no obstacle is mentioned in the north direction. 3. Priority 3: Move South - Yes, the requirement is met. There is flat ground below the agent since no obstacle is mentioned in the south direction. 4. Priority 4: Move East - Yes, the requirement is met. The player has just moved from east to west, so there must be flat ground to the east. 5. Priority 5: Do - No, the requirement is not met. The player has not discovered a water source to face and interact with yet. Question: Did the last player action succeed? Why? Answer: Yes, the last player action (move_east) succeeded because there was flat ground to the east, which allowed the player to move in that direction. Question: Choose the best executable action from above. Answer: The best executable action from above is Priority 1: Move West. The requirement is met, as there is flat ground to the agent‚Äô s left (west), and it will help the player explore the environment in search of a water source. ============Step: 97, Cumulative Reward: 0.0============ You took action move_west. You see: - stone 3 steps to your south-east - path 2 steps to your north-east - tree 4 steps to your north-west - table 2 steps to your south-east You face grass at your front (west). Your status: - health: 9/9 - food: 6/9 - drink: 5/9 - energy: 8/9 Your inventory: - stone: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move East Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone material, which can be used to craft tools and weapons; requires a wood_pickaxe or a stone_pickaxe to collect. 2. Path: Provides a clear walkable area without any resources. 3. Tree: Provides wood material, which can be used for crafting and building; requires no particular tool to collect, although using an axe may speed up the process. 4. Table: Provides a surface to craft tools, weapons, and other items; requires wood to build and place. 5. Grass: Acts as a simple terrain element, no specific resources or requirements. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_west. Question: For each object in the list, are the requirements met for interaction? Answer: 151 1. Stone: Yes, the requirements are met because you have a wood_pickaxe and a stone_pickaxe in your inventory. 2. Path: Yes, there are no specific requirements to interact with a path. You can walk on it freely. 3. Tree: Yes, there are no specific requirements to interact with a tree and collect wood from it. Although using an axe may speed up the process, it is not a requirement. 4. Table: Yes, the requirements are met because the table is already built and placed. You can use it for crafting without any additional requirements. 5. Grass: Yes, there are no specific requirements to interact with grass as it is just a terrain element. You can walk on it freely. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Priority 4/5: Find water and drink to restore thirst (drink: 5/9). Drinking water is essential to maintain your in-game survival. 2. Priority 3/5: Find food or hunt a cow (5 steps to your north-west) to restore food level (food: 6/9). Your food level is not high, and improving it will help ensure your survival. 3. Priority 2/5: Collect resources (wood, stone, iron) and craft better tools or weapons, like an iron pickaxe or sword. It will offer better efficiency and protection from monsters in the game. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Top Sub-task: Find water and drink to restore thirst. Requirements: - Locate a water source such as a lake, river, or stream. - Move towards the water source. - Interact with the water source to drink. What should the player do first: The player should start by locating a water source in their immediate surroundings by exploring their environment. Once a water source is found, they should move towards it and interact with it to drink and restore their thirst level. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move East (Requirement: Flat ground right to the agent) - Move in the east direction to get closer to the path and table. 2. Priority 2: Move North (Requirement: Flat ground above of the agent) - Move in the north direction searching for a water source to restore thirst and also to get closer to the tree for collecting wood if needed. 3. Priority 3: Move West (Requirement: Flat ground left to the agent) - Move in the west direction to explore the environment and potentially find a water source. 4. Priority 4: Move South (Requirement: Flat ground below the agent) - Move in the south direction to explore the environment and potentially find a water source. 5. Priority 5: Do (Requirement: Facing creature or material; have a necessary tool) - Interact with the water source if found while exploring, using the necessary tool (if any) to drink and restore thirst. Question: For each action in the list, are the requirements met? Answer: 1. Move East: Yes, the requirement for moving east (flat ground right to the agent) is met, as the player can see a path 2 steps to their north-east. 2. Move North: Yes, the requirement for moving north (flat ground above the agent) is met, as the player sees grass at their front (west), suggesting flat ground is available for movement in all cardinal directions. 3. Move West: Yes, the requirement for moving west (flat ground left to the agent) is met, as seen in Player Observation Step 194, where the agent took action move_west. 4. Move South: Yes, the requirement for moving south (flat ground below the agent) is met, as the player sees grass at their front (west), suggesting flat ground is available for movement in all cardinal directions. 5. Do: Currently, the requirement for Do action (facing creature or material; have necessary tool) is not met, as the player is only facing grass, and there is no mention of a nearby water source or the tool needed to interact with it. The player will need to move and explore to find the water source before this requirement is met. Question: Did the last player action succeed? Why? Answer: Yes, the last player action move_west succeeded. The player was able to move in the west direction since there was flat ground (grass) in front of them, allowing them to change their position. Question: Choose the best executable action from above. Answer: The best executable action from the list above is Move East as it will bring the player closer to the path and the table, and it meets the requirement of having flat ground to the right of the agent. ============Step: 98, Cumulative Reward: 0.0============ You took action move_east. You see: - stone 3 steps to your south-east - path 2 steps to your north-east - tree 4 steps to your north-west - table 2 steps to your south-east You face grass at your front (west). Your status: 152 - health: 9/9 - food: 6/9 - drink: 5/9 - energy: 8/9 Your inventory: - stone: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move North Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: - Resource it provides: Stone material for crafting tools and building structures. - Requirement: Use a wood_pickaxe or better to collect the stone. 2. Path: - Resource it provides: Faster and easier movement across the terrain. - Requirement: No specific requirement, just walk on it. 3. Tree: - Resource it provides: Wood material for crafting tools and building structures. - Requirement: Use any type of pickaxe or axe to collect the wood. 4. Table: - Resource it provides: A place to craft items such as tools and weapons. - Requirement: Stand near the table to access the crafting interface. 5. Grass: - Resource it provides: Can be collected to create pathways or other landscape features. - Requirement: Use any type of pickaxe or shovel to collect the grass. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_east. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: - Requirements met: Yes, you have a wood_pickaxe and a stone_pickaxe in your inventory. You can use either to collect the stone. 2. Path: - Requirements met: Yes, you can walk on the path as there are no specific requirements for interaction. 3. Tree: - Requirements met: Yes, you have a wood_pickaxe and a stone_pickaxe in your inventory. While using an axe would be more efficient, you can still use either pickaxe to collect the wood from the tree. 4. Table: - Requirements met: Yes, you can interact with the table to craft items as long as you stand near it. 5. Grass: - Requirements met: Yes, you have a wood_pickaxe and a stone_pickaxe in your inventory. While using a shovel would be more efficient, you can still use either pickaxe to collect the grass. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Increase food and drink levels (Priority: 5) - Sub-task: Find and eat food (e.g. collect fruits, vegetables, or hunt animals) to increase your food level. - Sub-task: Find a water source (e.g. lake, river) to drink from and increase your drink level. 2. Collect resources for crafting and building (Priority: 4) - Sub-task: Collect stone and wood from nearby materials to improve and create tools, weapons, and structures. - Sub-task: Mine coal and iron if available to upgrade your tools and weapons. 3. Ensure safety and energy (Priority: 3) - Sub-task: Build or find a shelter to protect yourself from potential threats and rest. - Sub-task: Rest (e.g. sleep) when your energy level is low to recover and maintain high performance. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Requirements for the top sub-task (Increase food and drink levels): 1. Find sources of food such as fruits, vegetables, or animals (e.g., cows) for hunting. 2. Locate a water source such as a lake or a river for drinking. The player should first try to find food since it has a slightly lower level (6/9) compared to the drink level (5/9). Look for plants with fruits or vegetables nearby, or hunt animals like cows to get food items, and then consume them to increase the food level. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: Priority 1: Action - Move North Requirement: Flat ground above the agent 153 Rationale: Moving towards the tree 4 steps to the north-west might lead to finding fruits, which can be a source of food. Priority 2: Action - Do Requirement: Facing creature or material; have necessary tool Rationale: If a fruit source is located and the player is facing it, they can collect the fruits using the Do action. Priority 3: Action - Eat Plant Requirement: Place Plant Rationale: After collecting fruits, the player can consume them to increase their food level. Priority 4: Action - Move East or Move South Requirement: Flat ground right to the agent (for Move East) and Flat ground below the agent (for Move South) Rationale: The player should explore towards the east or south, as the path two steps to the north-east may lead to a water source. Priority 5: Action - Collect Drink Requirement: No requirements Rationale: If a water source (like a lake) is found, the player should collect the drink to increase their drink level. Question: For each action in the list, are the requirements met? Answer: Priority 1: Action - Move North Requirements are met: The requirement is flat ground above the agent, and there is no indication that there is an obstruction. Priority 2: Action - Do Requirements are NOT met: The player is currently facing grass, not a creature or material. Priority 3: Action - Eat Plant Requirements are NOT met: The player has not yet placed a plant, so they cannot eat it. Priority 4: Action - Move East or Move South Requirements are met: Flat ground right to the agent and flat ground below the agent. The player took action move_east in the last observation, indicating the path is clear. Priority 5: Action - Collect Drink Requirements are NOT met: The player has not yet found a water source to collect a drink. Question: Did the last player action succeed? Why? Answer: Yes, the last player action (move_east) succeeded. The action succeeded because there was flat ground (grass) to the east of the player, allowing them to move in that direction. Question: Choose the best executable action from above. Answer: The best executable action from the list above is Priority 1: Action - Move North, as the requirements are met and it allows the player to move closer to the tree, potentially finding fruits as a food source. ============Step: 99, Cumulative Reward: 0.0============ You took action move_north. You see: - stone 3 steps to your south-east - path 2 steps to your north-east - tree 4 steps to your north-west - table 2 steps to your south-east You face grass at your front (west). Your status: - health: 9/9 - food: 6/9 - drink: 5/9 - energy: 8/9 Your inventory: - stone: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move East Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: - Stone: Provides stone resource, requires wood_pickaxe or stone_pickaxe to collect. - Path: Provides a clear passage to travel on, no requirements to interact with. - Tree: Provides wood resource, requires a wood_pickaxe or stone_pickaxe to collect. - Table: Allows crafting of tools and weapons; requires wood to create, and items such as wood, stone, coal, and iron to craft tools and weapons. - Grass: A basic ground type; no specific resources provided or requirements to interact with. Your inventory resources and their uses: - Stone: Used to craft stone tools, weapons, and furnaces. - Coal: Used as fuel to smelt iron in a furnace. - Iron: Used to craft iron tools and weapons. 154 - Wood_pickaxe: Used to collect wood and stone resources. - Stone_pickaxe: Used to collect wood, stone, and iron resources. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_north. Question: For each object in the list, are the requirements met for interaction? Answer: Based on your inventory and the available objects: - Stone: Yes, the requirements are met since you have a wood_pickaxe and a stone_pickaxe to collect stone. - Path: Yes, the requirements are met as there are no specific requirements to interact with the path, you can simply walk on it. - Tree: Yes, the requirements are met since you have a wood_pickaxe and a stone_pickaxe to collect wood. - Table: As the table is already placed, there are no additional requirements to interact with it. You can use it to craft tools and weapons if you have the necessary resources in your inventory. - Grass: There are no specific requirements to interact with grass, so the requirements are met. In summary, the requirements are met for interaction with all objects in the current observation. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Priority 4/5: Collect more resources. Since your inventory is relatively low on some resources, consider collecting more stones, wood, and iron. This will be helpful for crafting additional tools or weapons in the future. 2. Priority 5/5: Drink water to replenish your thirst. Your drink level is currently 5/9, so finding water in a nearby lake or a water source to drink should be a priority to prevent dehydration. 3. Priority 3/5: Craft better tools or weapons. If you collect enough resources, especially iron, you might want to craft an iron pickaxe and an iron sword for better efficiency and combat. For this, you will need more iron and a furnace to smelt it. Question: What are the requirements for the top sub-task? What should the player do first? Answer: For the top sub-task (Collect more resources): Requirements: 1. Locate nearby resources such as stones, wood, or iron deposits. 2. Ensure you have the correct tools to collect the resources (wood_pickaxe for stone, stone_pickaxe for iron). 3. Inventory space to hold the collected resources. What should the player do first: Find and approach nearby resource deposits, such as stones or wood from a tree. If you locate iron deposits, use your stone_pickaxe to collect it. If it‚Äôs stone you‚Äôre after, use your wood_pickaxe for efficient collection. Make sure to keep an eye on your inventory to ensure you have space for the collected resources. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move East (Action 2) - Requirement: Flat ground right to the agent. Move towards the table to access crafting capabilities. 2. Priority 2: Move South-East (Action not listed) or combine Move South (Action 4) and Move East (Action 2) - Requirement: Flat ground in the desired direction(s). Approach the stone resource to collect more stones. 3. Priority 3: Do (Action 5) - Requirement: Facing stone resource and have a necessary tool (wood_pickaxe). Collect more stone using the wood_pickaxe. 4. Priority 4: Move North-East (Action not listed) or combine Move North (Action 3) and Move East (Action 2) - Requirement: Flat ground in the desired direction(s). Head towards the path to explore and find more resources. 5. Priority 5: Do (Action 5) - Requirement: Facing tree resource and have a necessary tool (wood_pickaxe). Collect more wood from the tree using the wood_pickaxe. Question: For each action in the list, are the requirements met? Answer: 1. Move East (Priority 1): Yes, the requirement is met. The agent is on flat ground and can move to the right (east). 2. Move South-East (Priority 2) or combine Move South and Move East: Yes, the requirement is met. The agent can move south and east separately to reach the stone resource since the game does not have a direct south-east action. 3. Do (Priority 3): Yes, the requirement is met. When the agent gets to the stone resource and stands in front of it, the agent has the wood_pickaxe tool, which is needed to collect stone. 4. Move North-East (Priority 4) or combine Move North and Move East: Yes, the requirement is met. The agent can move north and east separately to reach the path since the game does not have a direct north-east action. 5. Do (Priority 5): Partially. The agent is not currently facing the tree, but upon moving and adjusting its position, the agent will be able to fulfill this requirement. The agent has a wood_pickaxe tool, which is needed to collect wood. Question: Did the last player action succeed? Why? Answer: Yes, the last player action succeeded. The player was able to move north because there was flat ground above the agent, allowing them to move in that direction without any obstacles. Question: Choose the best executable action from above. Answer: 155 The best executable action from the list above is Priority 1: Move East (Action 2). The requirement for this action (flat ground right to the agent) is met, and it brings the player closer to the table, allowing them to access crafting capabilities. ============Step: 100, Cumulative Reward: 0.0============ You took action move_east. You see: - stone 3 steps to your south-east - path 2 steps to your north-east - tree 4 steps to your north-west - table 2 steps to your south-east You face grass at your front (west). Your status: - health: 9/9 - food: 6/9 - drink: 5/9 - energy: 8/9 Your inventory: - stone: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move South Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone resource, requires a wood_pickaxe or better to collect. 2. Path: Provides a flat area to walk on, no specific requirements to interact with. 3. Tree: Provides wood resource, requires no specific tool to collect, but using a tool like an axe is more efficient. 4. Table: Provides a crafting area to create tools and other items, requires wood to be placed and built. 5. Grass: No specific resource, serves as a flat surface for movement and building. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_east. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Yes, the requirements are met, as you have a wood_pickaxe and a stone_pickaxe in your inventory. 2. Path: Yes, the requirements are met, as no specific requirements are needed to interact with the path. 3. Tree: Yes, the requirements are met, although you don‚Äôt have an axe, you can still collect wood without a specific tool. 4. Table: Yes, the requirements are met, as it is already placed nearby and can be used for crafting purposes. 5. Grass: Yes, the requirements are met, as no specific requirements are needed to interact with grass. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Collect more resources (Priority: 5) - Gather wood, stone, and iron to craft better tools and build better constructions. This is a high priority for progress in the game. 2. Increase food and drink levels (Priority: 4) - Find food sources like animals and plants to raise your food and drink meters. This is important to maintain good health and continue playing. 3. Craft additional tools or weapons if needed (Priority: 3) - Using the table, create any necessary tools or weapons to defend yourself and gather resources more efficiently. This has a medium priority and should be pursued after securing essential resources and food. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Top sub-task: Collect more resources Requirements: 1. Use appropriate tools (wood_pickaxe, stone_pickaxe) to collect specific resources (stone, coal, iron) more efficiently. 2. Locate and approach the desired resources (wood, stone, iron). What should the player do first: 1. Determine which resource is the highest priority based on the player‚Äôs current needs and inventory. 2. Locate the nearest source of the desired resource. 3. Approach and use the appropriate tool (if available) to collect the resource efficiently. If the tool is not available, craft it using the materials in inventory, if possible. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move South - Flat ground below the agent. Requirement: Orient yourself in the direction of the stone, which is 3 steps to your south-east. 2. Priority 2: Move East - Flat ground right to the agent. Requirement: Continue moving toward the stone resource, which is currently 3 steps to your south-east. 3. Priority 3: Do - Facing creature or material; have the necessary tool. 156 Requirement: Once you are close enough and facing the stone, use the stone_pickaxe from your inventory to collect the stone efficiently. 4. Priority 4: Move North (toward the water source) - Flat ground above the agent. Requirement: Increase your drink value by finding a water source. The water source‚Äôs location has to be determined. 5. Priority 5: Collect Drink - Requires finding a water source. Requirement: Once you have reached the water source, use the action Collect Drink to increase your drink value. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Move South - The requirement is met as there is flat ground below the agent, and the stone is 3 steps to the south-east. 2. Priority 2: Move East - The requirement is met as there is flat ground to the right of the agent, and this move will bring the agent closer to the stone. 3. Priority 3: Do - The requirement is not yet met. The agent needs to move closer to the stone (south-east) and face it before using the stone_pickaxe to collect the stone. 4. Priority 4: Move North - The requirement is partially met. There is flat ground above the agent, but the exact location of the water source is still unknown. The agent should explore northward after collecting the stone. 5. Priority 5: Collect Drink - The requirement is not yet met. The agent has not located a water source to collect a drink from. The agent must find a water source before using the action Collect Drink. Question: Did the last player action succeed? Why? Answer: Yes, the last player action of moving east succeeded. The move was successful because there was flat ground in the east direction that allowed the player to move. Question: Choose the best executable action from above. Answer: The best executable action from the list above is Priority 1: Move South, as it has met the requirement of having flat ground below the agent, and it will bring the player closer to the stone resource. ============Step: 101, Cumulative Reward: 0.0============ You took action move_south. You see: - stone 3 steps to your south-east - path 2 steps to your north-east - tree 4 steps to your north-west - table 2 steps to your south-east - cow 6 steps to your north-west You face grass at your front (west). Your status: - health: 9/9 - food: 6/9 - drink: 5/9 - energy: 8/9 Your inventory: - stone: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move South Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone as a resource, which can be used to craft tools and build structures. Requires a wood_pickaxe or stronger to collect. 2. Path: Provides no resources. Requires no requirements, it is just a terrain feature which may be easier to traverse. 3. Tree: Provides wood as a resource, which can be used to craft tools, weapons, and furniture. Requires a wood_pickaxe or stronger to collect. 4. Table: Provides a crafting surface. Requires wood to craft and place first. 5. Cow: Provides meat as a resource, which can be used as a food source to restore health. Requires no special tools to chase and defeat/eat. 6. Grass: Provides no resources. Requires no requirements, it is just a terrain feature. 7. Wood_pickaxe (in inventory): Provides the ability to collect resources like wood and stone. Requires wood to craft it. 8. Stone_pickaxe (in inventory): Provides the ability to collect resources like iron. Requires wood and stone to craft it. 9. Coal (in inventory): Provides fuel for the furnace to smelt iron. Requires a wood_pickaxe or stronger to collect. 157 10. Iron (in inventory): Provides the ability to craft iron tools and weapons. Can be collected with a stone_pickaxe or stronger. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_south. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Yes, the requirements are met as you have a wood_pickaxe and a stone_pickaxe in your inventory. 2. Path: Yes, there are no requirements to interact with the path, and it can be traversed freely. 3. Tree: Yes, the requirements are met as you have a wood_pickaxe in your inventory, which can be used to collect wood. 4. Table: Yes, the requirements are met as the table has already been placed, and you can use it for crafting. 5. Cow: Yes, there are no special tool requirements to interact with the cow, and it can be chased and defeated. 6. Grass: Yes, there are no requirements to interact with grass, and you can walk through it. 7. Wood_pickaxe (in inventory): Yes, the requirements were met when you crafted it, and it can now be used for collecting resources. 8. Stone_pickaxe (in inventory): Yes, the requirements were met when you crafted it, and it can now be used for collecting resources. 9. Coal (in inventory): Yes, the requirements were met when you collected it, and it can now be used as fuel in a furnace. 10. Iron (in inventory): Yes, the requirements were met when you collected it, and it can now be used to craft iron tools and weapons. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Priority 4/5: Collect more iron with the stone_pickaxe for crafting iron tools and weapons. Look for iron ore and continue collecting to strengthen your equipment. 2. Priority 5/5: Find a water source to drink, as your current drink level is 5/9. Drinking from a lake, river, or another water source will help restore your thirst level. 3. Priority 3/5: Chase and defeat/eat the cow 6 steps to your north-west to restore your health and food levels, as your current food level is 6/9. This will help maintain your character‚Äôs overall health status. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Requirements for the top sub-task (Collect more iron): 1. Find an iron ore vein. 2. Use the stone_pickaxe in the inventory to collect the iron ore. The player should first move towards the stone that is 3 steps to the south-east, as there is a chance it could be an iron ore vein. Once the player reaches the stone, they should use the stone_pickaxe to collect the iron ore if it is indeed an iron vein. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1 - Move South (Requirement: Flat ground below the agent) 2. Priority 2 - Move East (Requirement: Flat ground right to the agent) 3. Priority 3 - Move East (Requirement: Flat ground right to the agent) 4. Priority 4 - Do (Requirement: Facing iron or stone; have stone_pickaxe in inventory) 5. Priority 5 - Move North to find a water source for drinking (Requirement: Flat ground above the agent) Question: For each action in the list, are the requirements met? Answer: 1. Priority 1 - Move South: Yes, the requirement (flat ground below the agent) is met as the player just moved south and there is no indication of obstacles below them. 2. Priority 2 - Move East: Yes, the requirement (flat ground right to the agent) is met as there is no mention of obstacles to the player‚Äôs right (east). 3. Priority 3 - Move East: Yes, the requirement (flat ground right to the agent) is met as there is no mention of obstacles to the east. However, after performing the second priority action (Move East), observe the surroundings to ensure that the path remains clear. 4. Priority 4 - Do: The requirement (facing iron or stone; have stone_pickaxe in inventory) is partially met. The player has a stone_pickaxe in their inventory, but they need to face iron or stone. After performing the previous actions (Move South and Move East), they will likely be facing the stone they saw at step 200. 5. Priority 5 - Move North to find a water source for drinking: The requirement (flat ground above the agent) is met at the current position, but the visibility of a water source is unknown. The player will need to move north and observe their surroundings to locate a water source. Question: Did the last player action succeed? Why? Answer: Yes, the last player action move_south succeeded because there was flat ground to the south of the player, allowing them to move in that direction. Question: Choose the best executable action from above. Answer: The best executable action from the list is Priority 1 - Move South, as its requirement (flat ground below the agent) is met, and it helps the player progress towards the stone they previously saw. ============Step: 102, Cumulative Reward: 0.0============ You took action move_south. 158 You see: - stone 3 steps to your south-east - path 2 steps to your north-east - tree 4 steps to your north-west - table 2 steps to your south-east You face grass at your front (west). Your status: - health: 9/9 - food: 6/9 - drink: 5/9 - energy: 8/9 Your inventory: - stone: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move West Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone resource; requires a wood_pickaxe or better to mine it. 2. Path: Provides a flat ground for easy movement; no requirements. 3. Tree: Provides wood resource; requires a wood_pickaxe or better to chop it down. 4. Table: Provides a surface for crafting tools and weapons; requires wood to craft. 5. Grass: Provides a space for placing objects or walking; no requirements. Note: The cow mentioned in step 202 is not present in step 204, so it is not included in the current observation list. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_south. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Yes, the requirements are met for interaction, as you have both a wood_pickaxe and a stone_pickaxe in your inventory. 2. Path: Yes, the requirements are met for interaction, as there are no specific requirements for interacting with a path. 3. Tree: Yes, the requirements are met for interaction, as you have a wood_pickaxe in your inventory. 4. Table: Yes, the requirements are met for interaction, as it is already placed in the environment. 5. Grass: Yes, the requirements are met for interaction, as there are no specific requirements for interacting with grass. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Increase food level: Eat a cow or gather more food sources, like fruits (Priority: 4 out of 5). 2. Increase drink level: Find a lake or water source to drink from (Priority: 4 out of 5). 3. Collect more resources such as stone, iron, and wood: Collect more resources to create better tools, weapons, and structures (Priority: 3 out of 5). Question: What are the requirements for the top sub-task? What should the player do first? Answer: Requirements for the top sub-task (Increase food level): - Find a food source like a cow or gather fruits from trees. The player should first: - Locate a nearby cow or fruit-bearing tree and approach it. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move West (Requirement: Flat ground to the west of the agent) - To approach the tree in the north-west direction to potentially collect fruits. 2. Priority 2: Move North (Requirement: Flat ground to the north of the agent) - After approaching the tree for fruit, head towards the cow in the north-west direction. 3. Priority 3: Do (Requirement: Facing cow) - To chase the cow and consume it for food restoration. 4. Priority 4: Move East (Requirement: Flat ground to the east of the agent) - To approach the table in the south-east direction. 5. Priority 5: Make Stone Sword (Requirement: Nearby table, wood and stone in inventory) - To craft a stone sword for better defense against monsters. Question: For each action in the list, are the requirements met? Answer: 1. Move West - Requirement: Flat ground to the west of the agent. - Is the requirement met? Yes, the player faces grass at their front (west), so the ground is flat. 2. Move North - Requirement: Flat ground to the north of the agent. - Is the requirement met? Yes, the player moved south in the last two steps, so flat ground is expected to the north. 159 3. Do (chase cow) - Requirement: Facing cow - Is the requirement met? No, currently, the player is not facing a cow and needs to approach it first. 4. Move East - Requirement: Flat ground to the east of the agent. - Is the requirement met? Yes, there‚Äôs a path 2 steps to the player‚Äôs north-east, so flat ground is expected in the east direction. 5. Make Stone Sword - Requirement: Nearby table, wood and stone in inventory - Is the requirement met? No, the player has only 1 stone in the inventory, and they need 2 stones to make a stone sword. Question: Did the last player action succeed? Why? Answer: Yes, the last player action (move_south) succeeded. We can determine this because the player‚Äôs observation in step 204 reflects the changes in the environment after moving south, and there are no indications of any issues or obstacles preventing the player from taking this action. Question: Choose the best executable action from above. Answer: The best executable action from the list provided is to Move West. This action meets the requirement of having flat ground to the west of the agent, as the player faces grass at their front (west). ============Step: 103, Cumulative Reward: 0.0============ You took action move_west. You see: - stone 3 steps to your south-east - path 2 steps to your north-east - tree 4 steps to your north-west - table 2 steps to your south-east You face grass at your front (west). Your status: - health: 9/9 - food: 6/9 - drink: 5/9 - energy: 8/9 Your inventory: - stone: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move South Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone resource, requires a wood_pickaxe to collect. 2. Path: No resource provided, no requirement. 3. Tree: Provides wood resource, requires a wood_pickaxe to collect. 4. Table: Allows crafting of tools and weapons, requires wood in inventory for placement. 5. Grass: No resource provided, no requirement. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_west. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Yes, the requirements of having a wood_pickaxe to collect stone are met, as the player has one in their inventory. 2. Path: There are no requirements for interacting with the path. 3. Tree: Yes, the requirements of having a wood_pickaxe to collect wood are met, as the player has one in their inventory. 4. Table: Yes, the player has a table nearby, so they can interact with it to craft tools and weapons if they have the necessary resources in their inventory. 5. Grass: There are no requirements for interacting with the grass. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Collect more resources (Priority: 4/5): Since the player‚Äôs inventory is relatively low on stone and iron, it would be beneficial to collect more resources. 2. Restore food and drink levels (Priority: 5/5): The player‚Äôs food and drink levels are 6/9 and 5/9, respectively. Restoring these levels should be a priority to maintain health and survival. 3. Craft better tools and weapons (Priority: 3/5): The player has a wood_pickaxe and a stone_pickaxe. Crafting better tools, such as an iron_pickaxe, and better weapons can improve their ability to collect resources and defend themselves against potential threats. However, this depends on the availability of required resources. Question: What are the requirements for the top sub-task? What should the player do first? 160 Answer: Top Sub-Task: Collect more resources Requirements: 1. Locate and approach resource nodes (stone, iron, coal), while being mindful of any potential threats (monsters, falling hazards). 2. Use the appropriate tool (wood_pickaxe for stone and coal, stone_pickaxe for iron) for efficient and effective resource collection. 3. Monitor inventory space to avoid overfilling and being unable to carry additional resources. First action: The player should navigate to the stone they see 3 steps to their south-east and use their stone_pickaxe to collect it. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move South-East (Action 3) - Requirements: Flat ground diagonal to the agent. Rationale: The stone resource is 3 steps to the south-east, and moving in that direction will get the player closer. 2. Priority 2: Move South (Action 4) - Requirements: Flat ground below the agent. Rationale: After moving south-east, the stone should be closer to the south. Moving south will directly bring the player to the stone resource. 3. Priority 3: Do (Action 5) - Requirements: Facing the stone resource (3 steps south-east); have the stone_pickaxe (already in the inventory). Rationale: To collect the stone resource, the player needs to face the stone and use the stone_pickaxe to mine it. 4. Priority 4: Move North-East (Action 2) - Requirements: Flat ground diagonal to the agent. Rationale: After collecting the stone, the player should navigate back to the table seen 2 steps south-east, and north- east will be the best way to return. 5. Priority 5: Place Furnace (Action 9) - Requirements: Stone in inventory (will be collected after mining the stone). Rationale: With the gathered stone, the player will be able to place a furnace near the table, allowing smelting and crafting of iron tools and weapons. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Move South-East (Action 3) - Requirements: Flat ground diagonal to the agent. Yes, the requirements are met. The player can move south-east to get closer to the stone. 2. Priority 2: Move South (Action 4) - Requirements: Flat ground below the agent. No, the requirements are currently not met. After moving south-east, the player might have the flat ground below them, and then they can move south. 3. Priority 3: Do (Action 5) - Requirements: Facing the stone resource (3 steps south-east); have the stone_pickaxe (already in the inventory). No, the requirements are currently not met. The player needs to be near and facing the stone resource first, which will be possible after moving south-east and then south. 4. Priority 4: Move North-East (Action 2) - Requirements: Flat ground diagonal to the agent. No, the requirements are currently not met. The player first has to move south-east, south, and mine the stone before they can move northeast towards the table. 5. Priority 5: Place Furnace (Action 9) - Requirements: Stone in inventory (will be collected after mining the stone). No, the requirements are currently not met. The player needs to successfully mine the stone, and then they can place the furnace near the table. Question: Did the last player action succeed? Why? Answer: Yes, the last player action (move_west) succeeded. The player was able to move west because there was flat ground (grass) in front of the player, allowing them to move in that direction. Question: Choose the best executable action from above. Answer: The best executable action from above is Priority 1: Move South-East (Action 3) as it has its requirements met: there is flat ground diagonal to the agent. This action will bring the player closer to the stone resource. ============Step: 104, Cumulative Reward: 0.0============ You took action move_south. You see: - stone 3 steps to your south-east - path 2 steps to your north-east - tree 4 steps to your north-west - table 2 steps to your south-east You face grass at your front (west). Your status: - health: 9/9 - food: 6/9 - drink: 5/9 - energy: 8/9 Your inventory: - stone: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 161 ------------ QA ------------ Question: Action Answer: Move East Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone resource for crafting tools, weapons, and building; requires a wood_pickaxe or better to collect it. 2. Path: Does not provide any resources, acts as an indication of direction or a route for navigation. 3. Tree: Provides wood resource for crafting tools, weapons, and building; can be collected by hand or using a wood_pickaxe or better. 4. Table: Does not provide resources but acts as necessary tool to craft tools and weapons; requires wood to be crafted. 5. Grass: Does not provide any notable resources or interact; acts as a visually distinguishable terrain. In the current observation, the aforementioned objects can be utilized in the following manner: - Stone: Collect using wood_pickaxe or stone_pickaxe as the user already has them in their inventory. - Path: Use as guidance to navigate the environment. - Tree: Collect wood with wood_pickaxe or stone_pickaxe. - Table: Use it to craft tools and weapons. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_south. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Yes, the requirements are met for interaction. The player has both wood_pickaxe and stone_pickaxe in their inventory, which are enough to collect stone. 2. Path: Yes, the requirements are met for interaction. The player can follow the path as there is no specific requirement to interact with a path. 3. Tree: Yes, the requirements are met for interaction. The player has a wood_pickaxe and stone_pickaxe, which can be used to collect wood from the tree. 4. Table: Yes, the requirements are met for interaction. The player can use the nearby table to craft tools and weapons as needed. 5. Grass: Yes, the requirements are met for interaction, but grass does not contribute any notable resources or interactions. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Priority 4/5: Increase drink level - The player‚Äôs drink level is at 5/9, which should be increased to maintain a healthy status. The player should search for a water source (e.g., lake) and collect water to drink. 2. Priority 3.5/5: Increase food level - The player‚Äôs food level is at 6/9, and it would be beneficial to find a food source like an animal (e.g., cow) or plant to increase their food level and maintain good health. 3. Priority 3/5: Collect more resources - The player should continue to gather more resources such as stone, wood, and iron to have a sufficient supply that would help in crafting more advanced tools and weapons or building shelters in the long run. This can be done by interacting with stones, trees, and potentially finding iron ores in the environment. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Requirements for the top sub-task (Increase drink level): 1. Locate a water source (e.g., lake, river, or pond) in the surroundings. 2. Approach the water source. 3. Collect drinkable water from it. What should the player do first: The player should first start exploring the environment to find a water source. They can move in any direction (north, east, south, or west) until they locate a water source nearby. Once located, they should approach the water source and collect drinkable water to increase their drink level. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move East (Requirement: Flat ground right to the agent) - This will help the player explore and find a water source to increase their drink level. 2. Priority 2: Move North (Requirement: Flat ground above the agent) - This action will also aid in exploring the environment and finding a water source. 3. Priority 3: Move South (Requirement: Flat ground below the agent) - Similar to the previous actions, this will help the player continue searching for water. 4. Priority 4: Move West (Requirement: Flat ground left to the agent) - This action will help in exploration and locating water sources, as well. 5. Priority 5: Sleep (Requirement: Energy level is below maximum) - Once the energy level drops further, the player can use the sleep action to recover their energy, which will be necessary to maintain exploration and other required activities. Question: For each action in the list, are the requirements met? Answer: 1. Move East: Yes, the requirements are met as there is flat ground right to the agent. 2. Move North: Yes, the requirements are met as there is flat ground above the agent. 162 3. Move South: Yes, the requirements are met as there is flat ground below the agent (player just moved south in the last observation). 4. Move West: Yes, the requirements are met as there is flat ground left to the agent (player just moved west in the observation before the last one). 5. Sleep: No, the requirements are not met because the energy level is currently 8 out of 9, which is not below the maximum. Question: Did the last player action succeed? Why? Answer: Yes, the last player action succeeded. The move_south action was successful because there was flat ground below the agent, allowing them to move in the south direction as per the requirements listed for that action. Question: Choose the best executable action from above. Answer: The best executable action from above is Move East, as it meets the requirements and will help the player explore and potentially find a water source to increase their drink level. ============Step: 105, Cumulative Reward: 0.0============ You took action move_east. You see: - stone 3 steps to your south-east - path 2 steps to your north-east - tree 4 steps to your north-west - table 2 steps to your south-east You face grass at your front (west). Your status: - health: 9/9 - food: 6/9 - drink: 5/9 - energy: 8/9 Your inventory: - stone: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move West Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone resource when mined with a wood or stone pickaxe. Requirement: Wood or stone pickaxe. 2. Path: Doesn‚Äôt provide any resource, but helps with navigation and movement. Requirement: None. 3. Tree: Provides wood resource when chopped with an ax or a pickaxe. Requirement: Ax or pickaxe. 4. Table: Enables crafting of tools and weapons from collected resources. Requirement: Must be placed on flat ground. 5. Grass: Doesn‚Äôt provide any resource directly, but can be dug to collect dirt and clear the land for farming or building. Requirement: Shovel (optional). Question: What was the last action taken by the player? Answer: The last action taken by the player was move_east. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Yes, the requirements are met as you have a wood_pickaxe and stone_pickaxe in your inventory, allowing you to mine the stone. 2. Path: Yes, the requirements are met, as no specific tools or items are needed to navigate and move on the path. 3. Tree: Yes, the requirements are met, as you have a wood_pickaxe in your inventory that can be used to chop the tree and collect wood. 4. Table: Yes, the requirements are met, as the table is already placed on flat ground, allowing you to use it for crafting tools and weapons from collected resources. 5. Grass: Yes, the requirements are met as you don‚Äôt need any specific tools to interact with grass, although having a shovel would be more efficient for clearing land and collecting dirt. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Priority 4/5: Find and drink water to restore the drink level - Your drink level is currently 5/9, so finding water and drinking it should be a priority to avoid dehydration. 2. Priority 3/5: Collect more stone and iron - Having more stone and iron will enable you to craft better tools and weapons. You currently have only 1 stone and 1 iron in your inventory, so gathering more is essential. 163 3. Priority 2/5: Locate a food source to restore the food level - Your food level is currently 6/9. Although not an immediate concern, finding a food source soon will ensure that you‚Äôre prepared to restore your food level later when needed. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Requirements for the top sub-task (Find and drink water to restore the drink level): 1. Locate a water source, such as a lake or a river. 2. Approach the water source. 3. Drink from the water source. The player should first locate a water source in their surroundings by exploring the area. Once a water source is found, the player should move towards it and drink from the water source to increase their drink level. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: Priority 1: Action: Move West Requirement: Flat ground left to the agent. Priority 2: Action: Move East Requirement: Flat ground right to the agent. Priority 3: Action: Move North Requirement: Flat ground above of the agent. Priority 4: Action: Move South Requirement: Flat ground below the agent. Priority 5: Action: Sleep Requirement: Energy level is below the maximum. The player should focus on moving in different directions (North, South, East, and West) to explore the surroundings and find a water source. Once their energy level is low, they should sleep to restore their energy. Question: For each action in the list, are the requirements met? Answer: For the top 5 actions listed, let‚Äôs check if their requirements are met: Priority 1: Action: Move West Requirement: Flat ground left to the agent. Yes, the requirement is met since the player faces grass at their front (west). Priority 2: Action: Move East Requirement: Flat ground right to the agent. Yes, the requirement is met since the player was able to move east in the most recent step, and no obstacles are mentioned. Priority 3: Action: Move North Requirement: Flat ground above of the agent. Yes, the requirement is met since the player was able to move south in the previous step, and there are no obstacles mentioned in the current observation. Priority 4: Action: Move South Requirement: Flat ground below the agent. Yes, the requirement is met since the player was able to move south two steps ago without any obstacles being mentioned. Priority 5: Action: Sleep Requirement: Energy level is below maximum. Yes, the requirement is met since the player‚Äôs energy level is 8/9, which is below the maximum. Question: Did the last player action succeed? Why? Answer: It seems that the last player action, move_east, succeeded because the observation after the action indicates that the player‚Äôs position changed, and there are no negative outcomes mentioned in the observation. Question: Choose the best executable action from above. Answer: The best executable action from the above list is: Priority 1: Action: Move West Requirement: Flat ground left to the agent. This action is chosen because the player faces grass at their front (west), and it allows the player to explore their surroundings and find additional resources, water sources, or potential shelter locations. ============Step: 106, Cumulative Reward: 0.0============ You took action move_west. You see: - stone 3 steps to your south-east - path 2 steps to your north-east - tree 4 steps to your north-west - table 2 steps to your south-east You face grass at your front (west). Your status: - health: 9/9 - food: 6/9 - drink: 5/9 164 - energy: 9/9 Your inventory: - stone: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move East Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone resource, can be mined with a wood or stone pickaxe. 2. Path: Provides no resource but allows for easy movement with no requirements. 3. Tree: Provides wood resource, can be chopped down with an ax or simply collected with your hands. 4. Table: Provides a crafting surface for creating tools and weapons, requires having a table in your inventory to place it. In front of you (west): 5. Grass: Provides no resource but can be removed or flattened with a shovel or by other methods, no requirements for interacting with it. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_west. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Yes, the requirements are met for interaction since you have both a wood_pickaxe and a stone_pickaxe in your inventory. 2. Path: Yes, the requirements are met for interaction as there are no specific requirements to move along the path. 3. Tree: Yes, the requirements are met for interaction, you can collect wood directly by interacting with the tree even without having an axe. 4. Table: Yes, the requirements are met since the table is already placed, and you can interact with it to craft tools and weapons. In front of you (west): 5. Grass: Yes, the requirements are met for interaction, although you don‚Äôt have a shovel, grass can be removed or flattened by other methods or simply walked over without any barriers. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Priority 5: Find a water source to drink from and replenish your thirst, as your current drink level is at 5/9. 2. Priority 4: Locate a food source such as a cow or fruits to increase your food level, which currently stands at 6/9. 3. Priority 3: Collect more resources, such as stone, wood, and iron, to enhance your tools and weapons or to create new ones, for better gameplay experience and survival. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Requirements for the top sub-task (Find a water source to drink from): 1. Locate a water source, such as a lake or river, while exploring the game world. 2. Approach the water source and face the water directly. The player should first prioritize locating a water source. They can do this by exploring the game world, moving in various directions (north, east, south, or west) while keeping an eye on any visible lakes, rivers, or other bodies of water in the environment. Once they find a water source, they should approach it and take a drink to replenish their thirst. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1 - Move East: Requirements - Flat ground right to the agent. This action will bring the player closer to the table and stone observed in their current position. 2. Priority 2 - Move South: Requirements - Flat ground below the agent. Moving south will also bring the player closer to the stone and the table. 3. Priority 3 - Make Iron Pickaxe: Requirements - Nearby table, furnace; wood, coal, iron in inventory. Assuming the player has access to a furnace, this action will allow them to upgrade their pickaxe. 4. Priority 4 - Move North: Requirements - Flat ground above the agent. Exploring the area might help the player find a water source or other helpful resources. 5. Priority 5 - Move West: Requirements - Flat ground left to the agent. This action allows the player to explore and possibly find new resources or water sources. The player should also be prepared to change direction if an obstacle is encountered. Question: For each action in the list, are the requirements met? Answer: 1. Move East: Yes, the requirements are met. Flat ground is right to the player. 2. Move South: Yes, the requirements are met. Flat ground is below the player. 3. Make Iron Pickaxe: Partially met. The player has wood, coal, and iron in their inventory. However, it‚Äôs unclear whether the player currently has access to a furnace. The player has to be nearby the table and the furnace to craft the iron pickaxe. 165 4. Move North: Yes, the requirements are met. Flat ground is above the player. 5. Move West: Yes, the requirements are met. Flat ground is left to the player. Question: Did the last player action succeed? Why? Answer: Yes, the last player action (move_west) succeeded because the player was able to change their position without any obstacles or restrictions mentioned in the observation. The observation shows that the player moved from facing grass at their front (west) in step 210 to facing grass again at their front (west) in step 212. Question: Choose the best executable action from above. Answer: The best executable action from above is to Move East. This action meets the requirements and brings the player closer to the table and stone, which are important for crafting and building. ============Step: 107, Cumulative Reward: 1.0============ You took action move_east. You see: - grass 1 steps to your west - stone 2 steps to your south-east - tree 3 steps to your south - table 1 steps to your south You face path at your front (east). Your status: - health: 9/9 - food: 6/9 - drink: 5/9 - energy: 9/9 Your inventory: - stone: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move South Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass: Provides no direct resources but can be used as a location marker or to be traversed; no requirements. 2. Stone: Provides stone resources for crafting tools and building; requires a wood pickaxe or better to be mined. 3. Path: Provides guidance and ease of travel in the game; no requirements. 4. Tree: Provides wood resources for crafting tools and building; requires any tool or bare hands to be chopped down. 5. Table: Provides a surface to craft tools and weapons; requires wood to be crafted initially. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_east. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass: Yes, the requirements are met for interaction as there are no specific requirements to interact with grass. 2. Stone: Yes, the requirements are met for interaction as the player has a wood_pickaxe and a stone_pickaxe in their inventory. 3. Path: Yes, the requirements are met for interaction as there are no specific requirements to travel along the path. 4. Tree: Yes, the requirements are met for interaction as the player can use any tool or their bare hands to chop down the tree. 5. Table: Yes, the requirements are met for interaction as the player already has a table placed in their environment. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Collect more resources (Priority: 5/5) - Chop down the tree for more wood - Mine stone using the stone_pickaxe (faster than the wood_pickaxe) - Consider how to collect more iron, as the player currently has only one piece 2. Improve the player‚Äôs health, food, and drink levels (Priority: 4/5) - Find food, such as fruits or hunt animals, to increase the food level - Drink from a water source, like a lake or river, to increase the drink level - Ensure the player avoids monsters and dangerous situations to maintain health 3. Craft better tools and weapons (Priority: 3/5) - Use the table to craft necessary or improved items - Consider crafting an iron sword or other iron tools when more iron is collected - Keep an eye on the durability of the current tools and prepare to replace them when needed Question: What are the requirements for the top sub-task? What should the player do first? Answer: Requirements for the top sub-task (Collect more resources): 1. Tree nearby to chop for wood 2. Stone nearby to mine 3. Appropriate tools in the inventory (wood_pickaxe and stone_pickaxe) 166 Since the player already has the necessary tools and is near both a tree and stone, the player should first: 1. Move south towards the tree to chop it for more wood. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move South (Requirement: Flat ground below the agent) 2. Priority 2: Do (Requirement: Facing tree; have wood_pickaxe) 3. Priority 3: Move South-East (Requirement: Flat ground to the south-east of the agent) 4. Priority 4: Do (Requirement: Facing stone; have stone_pickaxe) 5. Priority 5: Move to a water source and drink (Requirement: At a water source; thirst level below maximum) Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Move South (Requirement: Flat ground below the agent) - Yes, the requirement is met. 2. Priority 2: Do (Requirement: Facing tree; have wood_pickaxe) - No, the player is not facing a tree. 3. Priority 3: Move South-East (Requirement: Flat ground to the south-east of the agent) - Yes, the requirement is met. 4. Priority 4: Do (Requirement: Facing stone; have stone_pickaxe) - No, the player is not facing stone. 5. Priority 5: Move to a water source and drink (Requirement: At a water source; thirst level below maximum) - No, the player is not at a water source. Question: Did the last player action succeed? Why? Answer: Yes, the last player action move_east succeeded. The player moved from one location (facing grass) to another location ( facing a path), and the observation shows the change in scenery and objects around the player after the move. There were no obstacles or restrictions mentioned, so the move was executed successfully. Question: Choose the best executable action from above. Answer: The best executable action from the list above is Priority 1: Move South, since its requirement (Flat ground below the agent ) is met. ============Step: 108, Cumulative Reward: 0.0============ You took action move_south. You see: - grass 1 steps to your west - stone 2 steps to your south-east - path 1 steps to your north - tree 3 steps to your south You face table at your front (south). Your status: - health: 9/9 - food: 6/9 - drink: 5/9 - energy: 9/9 Your inventory: - stone: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move East Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass: Resource provided: Can be used to create paths or collect seeds for farming. Requirement: Generally, no specific requirements to interact with grass. 2. Stone: Resource provided: Can be used to craft stone tools and build structures. Requirement: Requires a wood_pickaxe or better to collect stone. 3. Path: Resource provided: A guiding passage between different locations. Requirement: No specific requirement to interact, mainly used for navigation. 4. Tree: Resource provided: Provides wood for crafting tools, weapons, and structures. Requirement: Can be collected using any tool, but using an axe (wooden or better) is more efficient. 5. Table: Resource provided: A crafting station to create tools and weapons. Requirement: Must have wooden material to craft a table. To use, stand adjacent to the table and interact with required materials in inventory. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_south. 167 Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass: Requirements met: Yes, you can interact with grass without any specific tool or requirement. 2. Stone: Requirements met: Yes, since you have both a wood_pickaxe and a stone_pickaxe in your inventory, you can interact with the stone to collect it. 3. Path: Requirements met: Yes, you can freely move along the path for navigation without any specific requirement. 4. Tree: Requirements met: Although you do not have an axe, you can still interact with the tree using either the wood_pickaxe or stone_pickaxe from your inventory, but it will be less efficient than using an axe. 5. Table: Requirements met: Yes, you are adjacent to the table and can interact with it using the required materials in your inventory for crafting purposes. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Craft an iron_pickaxe and iron_sword (Priority: 5/5) To achieve these goals, you would need more iron and to place a furnace. Once the furnace is placed, use the coal in the inventory for smelting additional iron. 2. Increase food and drink levels (Priority: 4/5) Find sources of food (e.g., cows, fruits) and water (e.g., lakes, rivers). Interact with them to consume food and drink in order to restore your food and drink levels. 3. Collect more resources (Priority: 3/5) Gather more wood, stone, and other essential resources to ensure you have enough materials for future crafting, building, and surviving potential threats. Question: What are the requirements for the top sub-task? What should the player do first? Answer: To complete the top sub-task of crafting an iron_pickaxe and iron_sword, the player needs to meet the following requirements: 1. Collect more iron: The player currently has 1 iron in their inventory. Crafting an iron_pickaxe and iron_sword requires a total of 5 iron (3 for the pickaxe, 2 for the sword). To collect more iron, the player should use their stone_pickaxe to mine iron ores. 2. Place a furnace: The player needs a furnace to smelt the iron ores. The player has enough stone in their inventory (1) to craft a furnace. The player should place their furnace in a nearby suitable location. 3. Smelt iron ores into iron ingots: Once the furnace is placed, the player can use the coal (2) in their inventory to smelt the iron ores into iron ingots. 4. Craft iron_pickaxe and iron_sword: With sufficient iron ingots and a placed furnace, the player can then use the nearby table to craft the iron_pickaxe and iron_sword. The first thing the player should do is place the furnace in a suitable location, as they already have enough stone in their inventory to craft it. Then, they can proceed with collecting more iron using their stone_pickaxe. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Place Furnace (Requirement: Stone in inventory) The player has enough stone in their inventory to craft a furnace, which is needed for smelting iron ores later. 2. Priority 2: Move East (Requirement: Flat ground right to the agent) The player should start exploring their surroundings to locate iron ores which are necessary for crafting an iron_pickaxe and iron_sword. 3. Priority 3: Move South (Requirement: Flat ground below the agent) Continuing exploration in search of iron ores, the player should move in different directions. 4. Priority 4: Do (Requirement: Facing creature or material; have necessary tool) Once the player locates iron ores, they should use their stone_pickaxe to mine them for collecting more iron. 5. Priority 5: Move North (Requirement: Flat ground above the agent) As part of exploring the surroundings and possibly finding more resources, the player can move in this direction as well. Question: For each action in the list, are the requirements met? Answer: 1. Place Furnace: Yes, the requirement is met. The player has 1 stone in their inventory, which is enough to place a furnace. 2. Move East: Yes, the requirement is met. The player faces a path (flat ground) to their east. 3. Move South: No, the requirement is not met at this moment due to the player facing a table. The player needs to face flat ground to the south to move in that direction. 4. Do: No, the requirement is not met. The player has not found any iron ores and is not facing any creature or material to interact with. 5. Move North: Yes, the requirement is met. The player has a path (flat ground) 1 step to their north, which makes it possible to move in that direction. 168 Question: Did the last player action succeed? Why? Answer: Yes, the last player action (move_south) succeeded because there was a clear path with no obstacles in the south direction, allowing the player to move in that direction. Question: Choose the best executable action from above. Answer: The best executable action from the provided list is action 2: Move East, as the player faces a path (flat ground) in the east direction and it allows the player to explore their surroundings, possibly finding more resources. ============Step: 109, Cumulative Reward: 0.0============ You took action move_east. You see: - grass 1 steps to your west - path 1 steps to your north - tree 4 steps to your south-west - table 2 steps to your south-west You face stone at your front (east). Your status: - health: 9/9 - food: 6/9 - drink: 5/9 - energy: 9/9 Your inventory: - stone: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move West Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass: Provides no specific resources. It can be used to build paths or walk on. Requirements: Flat ground. 2. Stone: Provides stone resource when mined with a pickaxe (wooden or better). Requirements: A pickaxe to mine and collect the stone. 3. Path: Allows easier movement and navigation. Provides no specific resources. Requirements: Flat ground to walk on. 4. Tree: Provides wood resource when chopped with an axe or tool. Requirements: An axe or tool to chop and collect the wood. 5. Table: Used for crafting items such as pickaxes, swords, and other tools. Requirements: Wood to craft the table itself. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_east. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass: Yes, the requirements are met for interaction as it is on flat ground and can be walked upon or used to build paths. 2. Stone: Yes, the requirements are met for interaction since you have both a wood_pickaxe and a stone_pickaxe in your inventory. 3. Path: Yes, the requirements are met for interaction as it is on flat ground, and you can walk on it. 4. Tree: The requirements for interaction are partially met. Although you have tools such as pickaxes in your inventory, you do not have an axe, which would be more effective for chopping wood. You can still attempt to collect wood using a pickaxe, but it would be less efficient than using an axe. 5. Table: Yes, the requirements are met for interaction because the table is already crafted using wood, and it can be used to craft items such as pickaxes, swords, and other tools. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Find a water source and drink to restore the thirst level (Priority: 5/5) Since the player‚Äôs drink level is 5/9, finding a water source to replenish their thirst should be a high priority. 2. Collect more wood from a tree (Priority: 4/5) Wood is essential for crafting various tools and objects. Although the player currently has pickaxes, obtaining more wood will be useful for future crafting and building. 3. Craft a furnace and smelt iron (Priority: 3/5) The player has enough coal and iron in their inventory to smelt more iron, but they need to craft a furnace first. Smelting iron will allow them to craft an iron pickaxe or sword, which is more effective than their current stone tools. 169 Question: What are the requirements for the top sub-task? What should the player do first? Answer: Top sub-task: Find a water source and drink to restore the thirst level. Requirements: 1. Locate a water source such as a lake, pond, or river. 2. Approach the water source. 3. Drink the water to replenish thirst levels. First, the player should explore the environment to find a water source. Once they have located a nearby water source, the player should move towards it and drink from it to restore their thirst level. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move West (Requirement: Flat ground left to the agent) - To explore and search for a water source. 2. Priority 2: Move East (Requirement: Flat ground right to the agent) - To explore and search for a water source. 3. Priority 3: Move North (Requirement: Flat ground above of the agent) - To explore and search for a water source. 4. Priority 4: Move South (Requirement: Flat ground below the agent) - To explore and search for a water source. 5. Priority 5: Do (Facing creature or material; have necessary tool) - This action is to drink water once they have found and approached it. However, the player should only perform this action when facing a water source and have no tool requirements needed to drink water. Question: For each action in the list, are the requirements met? Answer: 1. Move West: Yes, the requirement is met as there is flat ground (grass) 1 step to the agent‚Äôs west. 2. Move East: Yes, the requirement is met since there is flat ground at agent‚Äôs east side. 3. Move North: Yes, the requirement is met as there is flat ground (path) 1 step to the agent‚Äôs north. 4. Move South: Yes, the requirement is met since there is flat ground at agent‚Äôs south side. 5. Do (drinking water): No, the requirements are not met since the player is currently not facing a water source. The player needs to find and approach a water source before attempting to drink water. Question: Did the last player action succeed? Why? Answer: Yes, the last player action (move_east) succeeded because there was a flat ground (path) to the east of the player, allowing them to move in that direction. Question: Choose the best executable action from above. Answer: The best executable action from the above list is Move West, as it meets the requirement of having flat ground to the agent‚Äô s west (grass) and allows the player to explore and search for a water source. ============Step: 110, Cumulative Reward: 0.0============ You took action move_west. You see: - stone 2 steps to your south-east - path 1 steps to your north - tree 3 steps to your south - table 1 steps to your south You face grass at your front (west). Your status: - health: 9/9 - food: 6/9 - drink: 5/9 - energy: 9/9 Your inventory: - stone: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move East Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone resources for crafting tools, weapons, and placing blocks; requires a wood_pickaxe or better to collect. 2. Grass: No resources provided and no requirements. 3. Path: No resources provided and no requirements. 4. Tree: Provides wood resources for crafting tools, weapons, and other objects; requires no specific tool to collect, but an axe is more efficient. 5. Table: Allows crafting of tools and weapons; requires wood to place one. 170 Resources not in the immediate observation but in your inventory: 6. Coal: Used to smelt iron, and cooking food; requires a wood_pickaxe or better to collect. 7. Iron: Used to craft better tools and weapons; requires a stone_pickaxe or better to collect, and a furnace with coal to smelt it. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_west. Question: For each object in the list, are the requirements met for interaction? Answer: Based on the current observation and inventory, here is the list of objects and whether the requirements are met for interaction: 1. Stone: Yes, you have a wood_pickaxe and stone_pickaxe in your inventory, allowing you to interact with the stone. 2. Grass: Yes, no specific requirements are needed to interact with the grass. 3. Path: Yes, no specific requirements are needed to interact with the path. 4. Tree: Yes, although you don‚Äôt have an axe in your inventory, you can still interact with the tree and collect wood. 5. Table: Yes, the table is in your surroundings, allowing you to craft tools and weapons. Resources not in the immediate observation but in your inventory: 6. Coal: You have coal in your inventory, but you cannot directly interact with it in your current environment. 7. Iron: You have iron in your inventory, but you cannot directly interact with it in your current environment. However, you can smelt the iron using a furnace and coal once you place a furnace, which you can craft given the stone in your inventory. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Crafting and placing a Furnace (Priority: 5/5) - Crafting a furnace will allow you to smelt iron and create better tools and weapons. You have enough stone in your inventory to craft a furnace. 2. Smelting Iron (Priority: 4/5) - Once the furnace is placed, smelt the iron from your inventory using the coal you have. This will allow you to craft an iron pickaxe and iron sword, which will help you gather resources faster and be better prepared for combat. 3. Collecting Wood (Priority: 3/5) - You‚Äôll need more wood resources for crafting additional items, fueling the furnace, and building other structures. Find a nearby tree and gather wood. Although it‚Äôs not necessary, crafting an axe will make wood collection faster. While not in the top 3, consider increasing your food and drink levels in the near future to avoid negative effects on your health and energy. Question: What are the requirements for the top sub-task? What should the player do first? Answer: For the top sub-task (Crafting and placing a Furnace): Requirements: - Have enough stone in the inventory (at least 8) - Be near a placed table Since you already have 1 stone in your inventory, the first thing the player should do is: 1. Collect 7 more stones using the stone_pickaxe. Find and move towards stone blocks in your surroundings to mine them with your pickaxe. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: Priority 1: Move East - Requirement: Flat ground right to the agent. Reason: Move back towards the stone block to mine more stone. Priority 2: Do (Mine Stone) - Requirement: Facing stone and have a necessary tool (stone_pickaxe). Reason: Mine the stone block to collect more stone and reach the required amount for crafting a furnace. Priority 3: Move North (Optional) - Requirement: Flat ground above the agent. Reason: This action helps explore new locations in case the current surroundings do not have enough stone blocks. Priority 4: Move West (Optional) - Requirement: Flat ground left to the agent. Reason: This action is also helpful for exploring new locations if not enough stone blocks are found nearby. Priority 5: Make Furnace - Requirement: Nearby table; having at least 8 stone in the inventory. Reason: Once you have collected enough stone, craft a furnace by standing near the table and utilizing the acquired resources. Please note that the priority 3 and 4 actions are optional, as they depend on whether there are enough stone blocks in the immediate surroundings to collect the required materials for the furnace. Question: For each action in the list, are the requirements met? Answer: Priority 1: Move East - Requirement: Flat ground right to the agent. - Yes, the requirement is met as the player had just moved west from a flat ground. Priority 2: Do (Mine Stone) - Requirement: Facing stone and have a necessary tool (stone_pickaxe). - In the Player Observation Step 220, the player faces grass. So, the player must first move east (Priority 1) to face the stone block. The player has a stone_pickaxe in their inventory, so they have the necessary tool. Priority 3: Move North (Optional) - Requirement: Flat ground above the agent. - Yes, the requirement is met as there is a path 1 step to the north. Priority 4: Move West (Optional) - Requirement: Flat ground left to the agent. - Yes, the requirement is met since grass is mentioned in Player Observation Step 220 when the player moved west. 171 Priority 5: Make Furnace - Requirement: Nearby table; having at least 8 stone in the inventory. - The player is currently near a table, but they only have 1 stone in their inventory. The requirement is not met yet. The player needs to perform Priority 2 action (Do - Mine Stone) until they have enough stone. Question: Did the last player action succeed? Why? Answer: Yes, the last player action (move_west) succeeded. It succeeded because the player was able to move to a location with flat ground (grass) to their west without any obstacles or restrictions. Question: Choose the best executable action from above. Answer: The best executable action from the list above is Priority 1: Move East, as the requirement is met (flat ground right to the agent), and it will position the player to face the stone block, which is essential for the following actions. ============Step: 111, Cumulative Reward: 0.0============ You took action move_east. You see: - grass 1 steps to your west - path 1 steps to your north - tree 4 steps to your south-west - table 2 steps to your south-west You face stone at your front (east). Your status: - health: 9/9 - food: 6/9 - drink: 5/9 - energy: 9/9 Your inventory: - stone: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Do Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass (1 step to the west): Provides no resources. No requirements to interact with it. 2. Path (1 step to the north): Provides no resources. No requirements to interact with it. 3. Tree (4 steps to the south-west): Provides wood. Requires a wood pickaxe or better to chop it down. 4. Table (2 steps to the south-west): Allows crafting of tools and weapons. Requires wood to craft items. 5. Stone (facing east): Provides stone. Requires a wood pickaxe or better to mine it. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_east. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass (1 step to the west): No requirements to interact with it. So, yes the requirements are met. 2. Path (1 step to the north): No requirements to interact with it. So, yes the requirements are met. 3. Tree (4 steps to the south-west): Requires a wood pickaxe or better to chop it down. The player has a wood_pickaxe and a stone_pickaxe in the inventory. So, yes the requirements are met. 4. Table (2 steps to the south-west): Requires wood to craft items. The player‚Äôs inventory does not have wood for crafting. So, no the requirements are not met. 5. Stone (facing east): Requires a wood pickaxe or better to mine it. The player has a wood_pickaxe and a stone_pickaxe in the inventory. So, yes the requirements are met. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Mine Stone (Priority: 5/5): The player is facing a stone, and since they have a stone_pickaxe in their inventory, they should mine the stone to collect more stone resources. 2. Collect Wood (Priority: 4/5): The player needs wood to be able to craft items at the table. They should move towards the tree and chop it down using their wood_pickaxe or stone_pickaxe to collect wood. 3. Restore Food and Drink (Priority: 3/5): The player‚Äôs food is at 6/9, and drink is at 5/9. They should hunt for food sources, such as cows or fruit, and find a water source, like a lake or river, to increase their food and drink levels. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Requirements for the top sub-task (Mine Stone): 1. Face the stone: The player is already facing the stone (east direction). 172 2. Have a pickaxe in inventory: The player has both wood_pickaxe and stone_pickaxe in their inventory. What should the player do first: The player should use their stone_pickaxe to mine the stone they are facing. Thus, the first step is to take action ‚Äôdo‚Äô with their stone_pickaxe to mine and collect the stone. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Do (stone_pickaxe) Requirement: Facing stone (already facing stone in the east direction), have a pickaxe in inventory (stone_pickaxe is present in the player‚Äôs inventory) 2. Priority 2: Move North Requirement: Flat ground to the north of the agent (there is a path 1 step to the north) 3. Priority 3: Place Furnace Requirement: Stone in inventory (after mining the stone in priority 1, the player will have the required stones) 4. Priority 4: Make Iron Sword Requirement: Nearby table, furnace (needs to be placed as per action in priority 3), wood, coal, and iron in inventory ( coal and iron are already in the player‚Äôs inventory) 5. Priority 5: Sleep Requirement: Energy level is below maximum (once the energy level becomes lower) Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Do (stone_pickaxe) Requirements Met: Yes, the player is facing stone and has a stone_pickaxe in their inventory. 2. Priority 2: Move North Requirements Met: Yes, there is a flat ground (path) to the north of the agent. 3. Priority 3: Place Furnace Requirements Met: No, the player currently has only 1 stone in their inventory. However, after mining the stone in Priority 1, the player will obtain enough stone to place a furnace. 4. Priority 4: Make Iron Sword Requirements Met: No, the player needs to place the furnace first (Priority 3) and then also have a table nearby. Once a furnace is placed and a table is nearby, this requirement will be met. 5. Priority 5: Sleep Requirements Met: No, the player‚Äôs energy level is currently at maximum (9/9). The requirement will be met once the energy level decreases. Question: Did the last player action succeed? Why? Answer: Yes, the last player action succeeded because there were no obstructions or limitations preventing the player from moving east. The player was able to move east and face a stone in front of them. Question: Choose the best executable action from above. Answer: The best executable action from the above list is Priority 1: Do (stone_pickaxe), as the requirements are met. The player is facing the stone and has a stone_pickaxe in their inventory. ============Step: 112, Cumulative Reward: 0.0============ You took action do. You see: - grass 1 steps to your west - stone 1 steps to your south - tree 4 steps to your south-west - table 2 steps to your south-west You face path at your front (east). Your status: - health: 9/9 - food: 6/9 - drink: 5/9 - energy: 9/9 Your inventory: - stone: 2 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move South Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass: Resource provided is none, Requirement: None 2. Stone: Resource provided is Stone, Requirement: Wood pickaxe or Stone pickaxe 3. Tree: Resource provided is wood, Requirement: None 173 4. Table: Resource provided is crafting area, Requirement: wood 5. Path: Resource provided is easy walkable terrain, Requirement: None Current inventory resources: 1. Stone: 2 2. Coal: 2 3. Iron: 1 4. Wood_pickaxe: 1 5. Stone_pickaxe: 1 Question: What was the last action taken by the player? Answer: The last action taken by the player was do. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass: Requirements met for interaction? Yes 2. Stone: Requirements met for interaction? Yes (you have a wood_pickaxe and stone_pickaxe in your inventory) 3. Tree: Requirements met for interaction? Yes 4. Table: Requirements met for interaction? Yes (it‚Äôs already placed in the environment) 5. Path: Requirements met for interaction? Yes (it‚Äôs a walkable terrain) Current inventory resources: 1. Stone: 2 2. Coal: 2 3. Iron: 1 4. Wood_pickaxe: 1 5. Stone_pickaxe: 1 You can interact with all objects mentioned in the list as their requirements have been met. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Collect more resources: Priority 4/5 - Interact with nearby tree to gather wood, and with stone to gather more stone. 2. Address the Food and Drink needs: Priority 5/5 - Find and consume food, such as hunting cows or growing plants, to restore food levels. - Find a water source, such as a lake, and drink to restore drink levels. 3. Craft advanced tools and weapons: Priority 3/5 - Use the table to craft an Iron Sword and Iron Pickaxe for better combat and resource collection. (Requires more iron, usage of the furnace for smelting, and coal). The highest priority should be addressing food and drink needs while collecting more resources and crafting advanced tools and weapons being secondary objectives. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Top Sub-Task: Address the Food and Drink needs: Priority 5/5 Requirements: - Restore Food Level: Find and consume food, such as hunting cows or growing plants. - Restore Drink Level: Find a water source, such as a lake, and drink. First Step: The player should focus on restoring their food level. They can achieve this by hunting cows or growing and consuming plants. To do this, they can search the area for cows, saplings, or plantations to obtain food. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Action: Move West (Priority: 3/5) Requirement: Flat ground left to the agent. Reason: Move towards the tree to collect wood for crafting, farming, or building. 2. Action: Make Wood Sword (Priority: 2/5) Requirement: Nearby table; wood in inventory. Reason: Crafting a wood sword will help the player defend themselves against monsters. 3. Action: Place Plant (Priority: 4/5) Requirement: Sapling in inventory. Reason: Placing a plant will allow the player to grow and collect food to restore the food level. 4. Action: Move South (Priority: 1/5) Requirement: Flat ground below the agent. Reason: Approach the table to craft tools or weapons, and move closer to potential water sources. 5. Action: Move East (Priority: 5/5) Requirement: Flat ground right to the agent. Reason: Search for a water source to drink and restore the drink level. Question: For each action in the list, are the requirements met? Answer: 1. Action: Move West Requirement: Flat ground left to the agent. Met? Yes, there is grass 1 step to the west, so the requirement is met. 2. Action: Make Wood Sword Requirement: Nearby table; wood in inventory. Met? No, the player does not have wood in their inventory, so the requirement is not met. 3. Action: Place Plant 174 Requirement: Sapling in inventory. Met? No, the player does not have a sapling in their inventory, so the requirement is not met. 4. Action: Move South Requirement: Flat ground below the agent. Met? Yes, there is a stone 1 step to the south, so the requirement is met. 5. Action: Move East Requirement: Flat ground right to the agent. Met? Yes, there is a path at the front (east) of the player, so the requirement is met. Question: Did the last player action succeed? Why? Answer: Yes, the last player action succeeded. The player used the do action while facing stone and had the necessary tool (either a wood_pickaxe or a stone_pickaxe) in their inventory. As a result, they were able to collect the stone, which increased their stone inventory from 1 to 2. Question: Choose the best executable action from above. Answer: The best executable action from the above list is: Action: Move South Requirement: Flat ground below the agent. This action meets the requirement as there is a stone 1 step to the south. It will also bring the player closer to the table and potential water sources. ============Step: 113, Cumulative Reward: 0.0============ You took action move_south. You see: - grass 1 steps to your west - path 1 steps to your north - tree 4 steps to your south-west - table 2 steps to your south-west You face stone at your front (south). Your status: - health: 9/9 - food: 6/9 - drink: 5/9 - energy: 9/9 Your inventory: - stone: 2 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Do Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass: - Resource provided: Saplings (by doing with empty hands). - Requirement: None. 2. Stone: - Resource provided: Stone (by doing with a pickaxe). - Requirement: A pickaxe (wood, stone, or iron). 3. Path: - Resource provided: None. - Requirement: None. 4. Tree: - Resource provided: Wood (by doing with an axe or empty hands). - Requirement: None or an axe to collect more efficiently. 5. Table: - Resource provided: Crafting capabilities (Allows crafting of tools and weapons by doing). - Requirement: Wood in inventory, previously placed. In your inventory: 6. Wood_pickaxe: - Resource provided: Allows mining of stone resources. - Requirement: Crafting with wood at a table. 7. Stone_pickaxe: - Resource provided: Allows mining of iron resources, mines stone faster. - Requirement: Crafting with stone and wood at a table. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_south. 175 Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass: - Requirements met: Yes, you can interact with grass using empty hands to collect saplings. 2. Stone: - Requirements met: Yes, you have a wood_pickaxe and a stone_pickaxe in your inventory, allowing you to mine stone resources. 3. Path: - Requirements met: N/A (No interaction with path). 4. Tree: - Requirements met: Yes, you can interact with the tree using empty hands or an axe (not in the inventory) to collect wood . 5. Table: - Requirements met: Yes, the table is placed, and you have resources in your inventory to craft tools and weapons by interacting with it. In your inventory: 6. Wood_pickaxe: - Requirements met: Yes, the wood_pickaxe has already been crafted and can be used to mine stone resources. 7. Stone_pickaxe: - Requirements met: Yes, the stone_pickaxe has already been crafted and can be used to mine iron and stone resources more efficiently. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Priority 4/5: Collect more iron by mining the stone you‚Äôre facing using the stone_pickaxe, as you have only one iron in the inventory. This will help you progress further by crafting better tools and weapons. 2. Priority 3/5: Collect wood by doing with the tree 4 steps to your south-west. You‚Äôll need the wood for crafting tools and weapons or building shelters. 3. Priority 4/5: Increase food and drink supplies to maintain health. You can achieve this by finding saplings from grass and planting them to grow fruits, and by finding a water source to drink. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Requirements for the top sub-task (Collect more iron by mining the stone you‚Äôre facing using the stone_pickaxe): 1. Facing the stone: You are already facing the stone at your front (south). 2. Having a stone_pickaxe in the inventory: You have a stone_pickaxe in your inventory. What should the player do first: Since you are already facing the stone and have the stone_pickaxe in your inventory, you can start mining the stone in front of you. To do this, use the do action with the stone_pickaxe equipped. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1 (Highest): Action Do (Mine the stone you‚Äôre facing using the stone_pickaxe) Requirement: Facing the stone and having a stone_pickaxe in the inventory (both requirements met from the last observation ). 2. Priority 2: Action Move West (Get closer to the tree) Requirement: Flat ground left to the agent (grass 1 step to your west). 3. Priority 3: Action Do (Chop down the tree to collect more wood) Requirement: Facing the tree and having a wood_pickaxe in the inventory (wood_pickaxe already in inventory, move closer to the tree first). 4. Priority 4: Action Move North (Head back to the table) Requirement: Flat ground above the agent (path 1 step to your north). 5. Priority 5: Action Sleep (Restore energy) Requirement: Energy level is below maximum (currently at 9/9 energy, perform other actions to decrease energy before taking this action). Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Action Do (Mine the stone you‚Äôre facing using the stone_pickaxe) - Are the requirements met? Yes, the agent is facing the stone and has a stone_pickaxe in their inventory. 2. Priority 2: Action Move West (Get closer to the tree) - Are the requirements met? Yes, there is flat ground (grass) one step to the agent‚Äôs west. 3. Priority 3: Action Do (Chop down the tree to collect more wood) - Are the requirements met? No, although the agent has a wood_pickaxe in their inventory, they‚Äôre not facing the tree yet. The agent must move closer to the tree first. 4. Priority 4: Action Move North (Head back to the table) - Are the requirements met? Yes, there is flat ground (path) one step to the agent‚Äôs north. 5. Priority 5: Action Sleep (Restore energy) - Are the requirements met? No, the agent‚Äôs energy level is currently at its maximum (9/9). The agent needs to perform other actions to decrease their energy before taking this action. 176 Question: Did the last player action succeed? Why? Answer: Yes, the last player action move_south succeeded because there was a flat ground (path) in the south direction that allowed the player to move. Question: Choose the best executable action from above. Answer: The best executable action from the list above is Priority 1: Action Do (Mine the stone you‚Äôre facing using the stone_pickaxe), as it has all the requirements met (facing the stone and having a stone_pickaxe in the inventory). ============Step: 114, Cumulative Reward: 0.0============ You took action do. You see: - grass 1 steps to your west - stone 2 steps to your south - tree 4 steps to your south-west - table 2 steps to your south-west You face path at your front (south). Your status: - health: 9/9 - food: 5/9 - drink: 5/9 - energy: 9/9 Your inventory: - stone: 3 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move East Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass: Provides saplings when interacted with, no specific requirement. 2. Path: Helps with navigation and movement, no specific requirement. 3. Tree: Provides wood when interacted with a wood_pickaxe or better. 4. Table: Allows crafting of tools and weapons, requires wood or better materials in inventory. 5. Stone: Provides more stone when interacted with a wood_pickaxe, can be used for crafting tools, furnaces, and weapons. 6. Wood_pickaxe: Used to interact with resources such as stone, requires crafting at a table with wood. 7. Stone_pickaxe: Used to interact with resources like coal and iron, requires crafting at a table with wood and stone. Question: What was the last action taken by the player? Answer: The last action taken by the player was do. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass: Yes, the requirements are met for interaction as there is no specific requirement to interact with grass. 2. Path: Yes, the requirements are met for interaction; there are no specific requirements to navigate or move along the path. 3. Tree: Yes, the requirements are met with a wood_pickaxe in the inventory. 4. Table: Yes, the requirements are met as there are wood and stone materials in the inventory to craft tools and weapons. 5. Stone: Yes, the requirements are met with a wood_pickaxe or better (e.g., a stone_pickaxe) in the inventory. 6. Wood_pickaxe: The wood_pickaxe is already in the inventory, so there is no need to craft a new one. 7. Stone_pickaxe: The stone_pickaxe is already in the inventory, so there is no need to craft a new one. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Improve Food and Drink levels (Priority: 5/5) - The player‚Äôs food and drink levels are at 5/9 each, and it‚Äôs essential to maintain these levels for survival. The player should interact with grass to get saplings, grow fruits, or find animals to eat and drink water from a lake or river. 2. Craft an Iron Pickaxe (Priority: 4/5) - The player needs to collect more iron and smelt it in a furnace to craft an Iron Pickaxe. This will allow collecting higher-level resources like Diamond. 3. Build a Shelter (Priority: 3/5) - To protect the player from potential threats and provide a safe place to rest, building a shelter using the resources at hand could improve survival chances. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Requirements for the top sub-task (Improve Food and Drink levels): 1. Find a source of food, either by locating fruit-bearing plants or animals like cows. 2. Find a source of drink, such as a lake or river where the player can replenish their thirst. First, the player should focus on finding a source of food. They can interact with grass to get saplings and grow fruit plants or search for animals like cows to consume for food. Once a reliable food source is found, the player should then look for a water source like a lake or river to maintain their drink levels. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 177 1. Priority 1: Move East (Requirement: Flat ground right to the agent) - As there is no food source or water visible, the player should explore their surroundings by moving East. 2. Priority 2: Move West (Requirement: Flat ground left to the agent) - If East does not lead to any food or water source, the player can explore by moving West. 3. Priority 3: Move North (Requirement: Flat ground above the agent) - If East and West do not bring the player closer to a food or water source, moving North can help find resources. 4. Priority 4: Move South (Requirement: Flat ground below the agent) - If the first three directions yield no results, the player should try moving South. 5. Priority 5: Do (Requirement: Facing creature or material; have the necessary tool) - When the player finds a food source like a fruit-bearing plant, saplings, or a cow, or a water source, they can use the Do action to interact with the resource to improve their food and drink levels. The player should have the appropriate tool or inventory space to perform the action. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Move East (Requirement: Flat ground right to the agent) - Yes, the requirements are met as there is no mention of any obstacle to the East. 2. Priority 2: Move West (Requirement: Flat ground left to the agent) - Yes, the requirements are met as there is grass to the West, which is flat and walkable. 3. Priority 3: Move North (Requirement: Flat ground above the agent) - Yes, the requirements are met as there is a path to the North, which is flat and walkable. 4. Priority 4: Move South (Requirement: Flat ground below the agent) - Yes, the requirements are met as there is no mention of any obstacle to the South. 5. Priority 5: Do (Requirement: Facing creature or material; have the necessary tool) - No, the requirements are currently not met, as there is no mention of a food source, water source, or any other resources the player should interact with in their immediate surroundings. Question: Did the last player action succeed? Why? Answer: Yes, the last player action succeeded. The player took the do action while facing stone using a stone_pickaxe (which is in the inventory), allowing them to mine the stone. As a result, the stone count in the inventory increased from 2 to 3. Question: Choose the best executable action from above. Answer: The best executable action from the list above is Priority 1: Move East (Requirement: Flat ground right to the agent). It meets the requirements and will allow the player to explore their surroundings in search of food and drink sources. ============Step: 115, Cumulative Reward: 0.0============ You took action move_east. You see: - grass 2 steps to your west - stone 1 steps to your south - tree 5 steps to your south-west - table 3 steps to your south-west You face path at your front (east). Your status: - health: 9/9 - food: 5/9 - drink: 4/9 - energy: 9/9 Your inventory: - stone: 3 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move South Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass: Provides no resources, but it can be a flat ground for movement. Requirement: No specific requirement. 2. Stone: Provides stone resource for crafting tools, weapons, and building structures. Requirement: Wood pickaxe or a better pickaxe to collect. 3. Tree: Provides wood resource for crafting tools and building structures. Requirement: No specific tool required to collect; using hands is sufficient. 4. Table: Provides a surface for crafting tools and weapons. Requirement: Wood resource to build. 5. Path: Provides a clear direction for walking and exploring. Requirement: Flat ground for movement. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_east. Question: For each object in the list, are the requirements met for interaction? Answer: 178 1. Grass: Yes, the requirements are met as there is flat ground for movement. 2. Stone: Yes, the requirements are met as you have both a wood pickaxe and a stone_pickaxe in your inventory. 3. Tree: Yes, the requirements are met as no specific tool is required to collect wood; using hands is sufficient. 4. Table: Yes, the requirements are met as you‚Äôve already built the table using wood resources. 5. Path: Yes, the requirements are met as there is flat ground for movement. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Priority 4/5: Refill your drink status: Find a lake or water source to drink from, as your current drink status is 4/9. 2. Priority 3/5: Collect more wood: Locate trees and collect wood, as it is a basic resource required for building and crafting. 3. Priority 3/5: Craft a furnace: Use the stone resources in your inventory to craft a furnace for smelting iron and other ores. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Requirements for the top sub-task (Refill your drink status): 1. Locate a water source, such as a lake or river. 2. Position yourself near the water source. The player should first locate a water source nearby, such as a lake or river, and then move towards it to drink and replenish their drink status. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move South (Requirement: Flat ground below the agent) - Move towards the stone, as it will be useful for crafting and building. 2. Priority 2: Do (Requirement: Facing creature or material; have necessary tool) - Use the stone_pickaxe in the inventory to collect more stone once you are facing it. 3. Priority 3: Move West (Requirement: Flat ground left to the agent) - Head back towards the table after collecting stone, as it will be required for crafting. 4. Priority 4: Move toward a water source (Requirement: Flat ground in the direction of the water source) - Locate a water source (lake or river) and move closer to it to refill drink status. 5. Priority 5: Collect Drink (Requirement: At a water source) - Once near the water source, drink to replenish drink status. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Move South (Requirement: Flat ground below the agent) - Yes, the requirement is met. There is a flat ground below the agent, and moving south will bring the agent closer to the stone. 2. Priority 2: Do (Requirement: Facing creature or material; have necessary tool) - No, the requirement is not met yet. The agent needs to move south first to face the stone, and then the requirement will be met since the agent has a stone_pickaxe in the inventory. 3. Priority 3: Move West (Requirement: Flat ground left to the agent) - Yes, the requirement is met. There is a flat ground to the west of the agent, and moving west will bring the agent closer to the table. 4. Priority 4: Move toward a water source (Requirement: Flat ground in the direction of the water source) - We cannot determine if the requirement is met, as the current observation does not mention a nearby water source. Further exploration is needed to find a water source and check if there is flat ground leading towards it. 5. Priority 5: Collect Drink (Requirement: At a water source) - No, the requirement is not met. The agent needs to find a water source and move to its location before being able to collect a drink. Question: Did the last player action succeed? Why? Answer: Yes, the last player action succeeded because there was flat ground (path) in the direction the player was facing (east), which allowed the player to move east without any obstructions or requirements unmet. Question: Choose the best executable action from above. Answer: The best executable action from the list above is Priority 1: Move South, as it has met the requirement of having flat ground below the agent, and it will bring the player closer to the stone resource. ============Step: 116, Cumulative Reward: 0.0============ You took action move_south. You see: - grass 2 steps to your west - path 1 steps to your west - tree 5 steps to your south-west - table 3 steps to your south-west You face stone at your front (south). Your status: - health: 9/9 - food: 5/9 - drink: 4/9 - energy: 9/9 179 Your inventory: - stone: 3 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Do Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: - Grass: Provides no direct resources but can be used to create paths or clear land. No requirements. - Stone: Provides stone resource when mined, which can be used to craft tools and build structures. Requires a wood or stone pickaxe to mine. - Path: Provides no resources but allows easier movement. No requirements. - Tree: Provides wood resource when chopped, used in crafting or building. Requires a wood or stone axe (not mentioned in previous instructions) to chop. - Table: A crafting station that allows crafting of advanced tools and items, already placed. No requirements for interaction. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_south. Question: For each object in the list, are the requirements met for interaction? Answer: - Grass: No requirements for interaction, so the requirements are met. - Stone: Requires a wood or stone pickaxe to mine. You have both a wood_pickaxe and a stone_pickaxe in your inventory; thus, the requirements are met. - Path: No requirements for interaction, so the requirements are met. - Tree: Requires a wood or stone axe (not mentioned in previous instructions) to chop. Currently, you don‚Äôt have an axe in your inventory; thus, the requirements are not met. - Table: No requirements for interaction, so the requirements are met. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Priority 4/5: Collect more resources - Mine the stone to increase your stone resources. You already have a wood_pickaxe and a stone_pickaxe, which meet the requirement for mining stone. 2. Priority 5/5: Replenish food and drink - Your food and drink levels are 5/9 and 4/9, respectively. Find a source of food and drink, like a cow or a lake, to maintain a healthy state. 3. Priority 3/5: Craft additional tools and weapons - Use the table in proximity to craft more tools or weapons (e.g., an iron pickaxe or iron sword), which can help you acquire more valuable resources and defend against threats. You might need to collect more iron and wood for crafting. Question: What are the requirements for the top sub-task? What should the player do first? Answer: For the top sub-task, Collect more resources, the requirements are: 1. Having an appropriate tool to mine the stone: Since the player already has a wood_pickaxe and a stone_pickaxe in their inventory, this requirement is met. The player should first use either their wood_pickaxe or stone_pickaxe to mine the stone by facing the stone and taking the action Do. This action will help increase the player‚Äôs stone resources, which can later be used for crafting items or building structures. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Do (Mine the stone) - Requirement: Facing the stone and having the necessary tool (wood_pickaxe or stone_pickaxe) in the inventory. 2. Priority 2: Move West (Towards the table) - Requirement: Flat ground to the west of the agent. 3. Priority 3: Make Iron Pickaxe - Requirement: Nearby table, furnace, and having wood, coal, and iron in the inventory. 4. Priority 4: Move North (Explore the area) - Requirement: Flat ground above the agent. 5. Priority 5: Move South (Explore the area) - Requirement: Flat ground below the agent. Question: For each action in the list, are the requirements met? Answer: 1. Do (Mine the stone) - Yes, requirements are met as the player is facing the stone and has a stone_pickaxe in their inventory. 2. Move West (Towards the table) - Yes, requirements are met as there is a flat ground (path) to the west of the agent. 3. Make Iron Pickaxe - No, requirements are not met since the player is not near a table or a furnace. 4. Move North (Explore the area) - No, requirements are not met as the player is facing the stone at their front (south). 5. Move South (Explore the area) - Yes, requirements are met as there is a flat ground (stone) below the agent. Question: Did the last player action succeed? Why? Answer: Yes, the last player action to move_south succeeded because there was flat ground in the south direction, allowing the player to move there. 180 Question: Choose the best executable action from above. Answer: The best executable action from the list is to Do (Mine the stone) since the player is facing the stone and has the necessary tool (stone_pickaxe) in their inventory. This action meets all the requirements and would help the player collect more resources for crafting or building. ============Step: 117, Cumulative Reward: 0.0============ You took action do. You see: - grass 2 steps to your west - stone 2 steps to your north - tree 5 steps to your south-west - table 3 steps to your south-west You face path at your front (south). Your status: - health: 9/9 - food: 5/9 - drink: 4/9 - energy: 9/9 Your inventory: - stone: 4 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move West Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass: Provides no resources directly but can be used as flat ground for movement. No requirement to interact with it. 2. Path: Provides no resources directly, it is flat ground for movement. No requirement to interact with it. 3. Tree: Provides wood resource which can be used to craft tools, weapons, and other items. Requires wood_pickaxe to be collected. 4. Table: Provides a surface for crafting tools and weapons. No additional resources can be obtained from it directly. No requirement to interact with it. 5. Stone (collected): Provides stone resource which can be used to craft tools, weapons, and other items. Requires wood_pickaxe or stone_pickaxe to be collected. Additionally, since you have collected the stone during Player Observation Step 234, in your inventory, you have: 6. Coal: Provides fuel for smelting materials in a furnace. Requires wood_pickaxe or stone_pickaxe to be collected. 7. Iron: Provides a resource for crafting advanced tools and weapons. Requires stone_pickaxe to be collected. 8. Wood pickaxe: Provides a tool for collecting wood and stone resources. Requires wood and a table for crafting. 9. Stone_pickaxe: Provides a tool for collecting stone, coal, and iron resources. Requires wood, stone, and a table for crafting. Question: What was the last action taken by the player? Answer: The last action taken by the player was do. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass: No requirements for interaction, so it‚Äôs met. 2. Path: No requirements for interaction, so it‚Äôs met. 3. Tree: Requires a wood_pickaxe to collect the wood resource. You have a wood_pickaxe in your inventory, so the requirement is met. 4. Table: No requirements for interaction, so it‚Äôs met. 5. Stone (collected): Requires a wood_pickaxe or stone_pickaxe to collect. You have both a wood_pickaxe and stone_pickaxe in your inventory, so the requirement was met when you collected it. For the items in your inventory: 6. Coal: Requires a wood_pickaxe or stone_pickaxe to collect. You have both a wood_pickaxe and stone_pickaxe in your inventory, so the requirement was met when you collected it. 7. Iron: Requires a stone_pickaxe to collect. You have a stone_pickaxe in your inventory, so the requirement was met when you collected it. 8. Wood pickaxe: You‚Äôve already crafted this, so the requirement of wood and a table was met previously. 9. Stone_pickaxe: You‚Äôve already crafted this, so the requirement of wood, stone, and a table was met previously. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Priority 5/5: Increase food and drink levels - Find a source of food (e.g., cows, plants, or fruit) and water (e.g., lakes or rivers) to restore your food (5/9) and drink (4/9) levels, so you can maintain health and energy. 2. Priority 4/5: Craft a furnace - You already have sufficient stone (4) in your inventory, and crafting a furnace will allow you to smelt iron and produce advanced tools and weapons, such as an iron pickaxe and iron sword. 3. Priority 3/5: Collect more iron and coal - To make the most out of crafting a furnace, gather more iron and coal using your stone_pickaxe. This will allow you to create advanced tools and weapons for improved efficiency and combat capabilities. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Requirements for the top sub-task (Increase food and drink levels): 181 1. Locate a source of food: Look for cows, plants, or fruit that can be collected and consumed to restore your food levels. 2. Locate a source of water: Find a lake or river where you can drink water to restore your drink levels. What should the player do first: Since both food and drink levels are essential for maintaining good health and energy, the player should start by locating a nearby source of food or water. If the player sees a cow, plant, or fruit in their vicinity, they should prioritize moving towards it to collect food. If there‚Äôs a lake or river nearby, the player should move towards it to drink water. If multiple sources are available, the player can choose based on proximity and the ease of reaching them. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move West (Requirement: Flat ground left to the agent) - Moving west will bring the player closer to the grass, which may provide food (plants or fruit) to restore their food levels. 2. Priority 2: Do (Requirement: Facing creature or material; have the necessary tool) - If the player encounters a cow or another source of food, they can perform ‚ÄôDo‚Äô to collect food. 3. Priority 3: Move South (Requirement: Flat ground below the agent) - Moving south will bring the player closer to the tree, which may also provide food (fruit) or wood for crafting purposes. 4. Priority 4: Drink (Requirement: Facing a water source, such as a lake or river) - If the player comes across a water source, they should drink from it to restore their drink levels. 5. Priority 5: Sleep (Requirement: Energy level is below maximum) - While the current energy level is at maximum, it‚Äôs essential to remember to sleep when the energy level decreases, ensuring good health and productivity. Question: For each action in the list, are the requirements met? Answer: 1. Move West: Yes, the requirement for flat ground to the left of the agent is met since there‚Äôs a path 1 step to the west. 2. Do: Currently, the player is not facing any creature or material like a cow or plant required for this action, so the requirement is not met. 3. Move South: Yes, the requirement for flat ground below the agent is met since there‚Äôs a path to the south of the player. 4. Drink: The player‚Äôs observation does not mention any water sources in sight, so the requirement for the ‚ÄôDrink‚Äô action is not met. 5. Sleep: No, the requirement is not met since the player‚Äôs energy level is currently at the maximum (9/9). Question: Did the last player action succeed? Why? Answer: Yes, the last player action succeeded. The player was facing a stone at their front (south) and used the do action, which resulted in successfully collecting the stone. This can be confirmed by the increase in the stone count in the inventory from 3 to 4. Question: Choose the best executable action from above. Answer: The best executable action from the above list is Move West since its requirement of having flat ground to the left of the agent is met. ============Step: 118, Cumulative Reward: 0.0============ You took action move_west. You see: - stone 2 steps to your south - path 1 steps to your north - tree 4 steps to your south-west - table 2 steps to your south-west You face grass at your front (west). Your status: - health: 9/9 - food: 5/9 - drink: 4/9 - energy: 9/9 Your inventory: - stone: 4 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move West Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone resource; requires a wood_pickaxe or stone_pickaxe for collection. 2. Path: No resource provided; requires no action as it‚Äôs open ground for movement. 3. Tree: Provides wood resource; requires a wood_pickaxe or stone_pickaxe for collection. 4. Table: Allows crafting of tools and weapons; requires wood in inventory for crafting. 182 5. Grass: No immediate resource provided; can be cleared with a pickaxe or dug up, used for pathways or creating flat ground for construction. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_west. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Yes, the requirements for interacting with the stone are met, as the player has both a wood_pickaxe and a stone_pickaxe in their inventory. 2. Path: Yes, the requirements for interacting with the path are met, as it is open ground and doesn‚Äôt require any special tools for movement. 3. Tree: Yes, the requirements for interacting with the tree are met, as the player has both a wood_pickaxe and a stone_pickaxe in their inventory. 4. Table: Yes, the requirements for interacting with the table are met, as the player has wood and stone in their inventory, which can be used for crafting tools and weapons. 5. Grass: Yes, the requirements for interacting with the grass are met, as the player has both a wood_pickaxe and a stone_pickaxe in their inventory, which can be used to clear the grass or dig it up. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Improve food and drink levels (Priority: 5/5): The player‚Äôs food level is at 5/9, and their drink level is at 4/9. To avoid depletion, find and consume food and drink resources to replenish these levels. 2. Collect more wood (Priority: 4/5): Wood is essential for crafting tools, weapons, and shelter. The player should interact with nearby trees using their wood_pickaxe or stone_pickaxe to collect more wood. 3. Craft an iron pickaxe or iron sword (Priority: 3/5): The player has some iron in their inventory. Crafting an iron pickaxe or iron sword requires more iron, coal, and a furnace. This task involves locating additional iron and coal, as well as creating a furnace if not nearby. The iron tools will help progress further in the game and provide better defense. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Top Sub-task: Improve food and drink levels Requirements: 1. Find a source of food, such as animals or plants that can be consumed. 2. Find a source of drink, such as a lake, river or other water body. What should the player do first? 1. The player should prioritize finding sources of food and drink nearby. They can start by looking for animals like cows or fruit-bearing plants in their surroundings and collecting them. 2. Then, the player should consume the food and drink they have collected to replenish their levels and maintain their survival in the game. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: Top 5 actions the player should take, along with their requirements and priority: 1. Priority 1: Move West Requirement: Flat ground left to the agent Reason: There is grass to the west, and the player may find more food and drink resources in the vicinity. 2. Priority 2: Move South Requirement: Flat ground below the agent Reason: The player will likely find food resources like fruit-bearing plants and animals near the trees in the south-west. 3. Priority 3: Do (if facing a food source) Requirement: Facing creature or material; have necessary tool Reason: If the player finds a food source like a cow or fruit, they should interact with it to obtain the food. 4. Priority 4: Do (if facing a water body) Requirement: Facing a water body; no necessary tool Reason: If the player finds a water body like a lake or river, they should interact with it to obtain drink. 5. Priority 5: Noop Requirement: Always applicable Reason: This action will skip an agent‚Äôs turn, applies when none of the other actions are possible or necessary. Question: For each action in the list, are the requirements met? Answer: For the provided player observation, let‚Äôs determine if the requirements for each action in the list are met: 1. Priority 1: Move West Requirement: Flat ground left to the agent Status: Met (there is grass 1 step to the west) 2. Priority 2: Move South Requirement: Flat ground below the agent Status: Met (there is a path 1 step to the south) 3. Priority 3: Do (if facing a food source) Requirement: Facing creature or material; have necessary tool Status: Not met (the player is facing grass, not a food source) 4. Priority 4: Do (if facing a water body) Requirement: Facing a water body; no necessary tool Status: Not met (the player is facing grass, not a water body) 183 5. Priority 5: Noop Requirement: Always applicable Status: Met (noop can always be used if other actions aren‚Äôt necessary or possible) Question: Did the last player action succeed? Why? Answer: Yes, the last player action (move_west) succeeded. The action was successful because the player was able to move from their initial position to a new position one step to the west, as indicated by the change in their surroundings and the updated observation. Question: Choose the best executable action from above. Answer: The best executable action from the list above is Priority 1: Move West, since its requirement (flat ground left to the agent) is met and has the highest priority among the possible actions. ============Step: 119, Cumulative Reward: 0.0============ You took action move_west. You see: - stone 3 steps to your south-east - path 1 steps to your north - tree 3 steps to your south - table 1 steps to your south You face grass at your front (west). Your status: - health: 9/9 - food: 5/9 - drink: 4/9 - energy: 9/9 Your inventory: - stone: 4 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move South Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone resource, requires a wood or stone pickaxe to collect. 2. Path: Provides a passable route, no requirements to traverse. 3. Tree: Provides wood resource, can be collected with an axe or a wood or stone pickaxe. 4. Table: Allows crafting of tools and weapons, requires wood to craft and place. 5. Grass: Provides no resource, can be walked on with no requirements. Note: The observation also mentions the player‚Äôs inventory and status. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_west. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Yes, the requirements are met as the player has a wood_pickaxe and a stone_pickaxe in their inventory. 2. Path: Yes, the requirements are met as the player can simply move on the path without any additional tools or resources needed. 3. Tree: Partially, the player has a wood_pickaxe and a stone_pickaxe which can be used to collect wood, but ideally, an axe would be more efficient. However, the player does not have an axe currently in their inventory. 4. Table: Yes, the requirements are met as the player has already crafted and placed a table within proximity (1 step to the south). 5. Grass: Yes, the requirements are met as the player can walk on grass without any additional tools or resources needed. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Collect more wood (Priority: 4/5) - Wood is essential for crafting tools and building structures. The player currently doesn‚Äôt have wood in their inventory, so it‚Äôs an important task. 2. Drink water (Priority: 3/5) - The player‚Äôs drink level is 4 out of 9, which means they should prioritize finding a water source like a lake or river to refill their drink level soon. 3. Find and collect more iron (Priority: 3/5) - The player only has one iron in their inventory, and they‚Äôll need more to craft better tools and weapons such as an iron pickaxe and an iron sword. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Top sub-task: Collect more wood Requirements: 1. Locate a tree. 2. Use an appropriate tool (wood_pickaxe or stone_pickaxe) in the inventory. 3. Carry out the action to collect wood. 184 The player should first locate a tree. In the recent observation, there is a tree 3 steps to the player‚Äôs south. The player should move towards it to collect more wood. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move South (towards the tree) Requirement: Flat ground below the agent. 2. Priority 2: Move South (continue moving towards the tree) Requirement: Flat ground below the agent. 3. Priority 3: Do (collect wood from the tree) Requirement: Facing the tree; having a wood_pickaxe or stone_pickaxe in the inventory. 4. Priority 4: Locate water source (increase drink) Requirement: Flat ground in any direction and visibility to search for a water source. 5. Priority 5: Collect Drink (drink water to restore thirst) Requirement: Facing a water source. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Move South (towards the tree) Requirement: Flat ground below the agent. Yes, the requirement is met. 2. Priority 2: Move South (continue moving towards the tree) Requirement: Flat ground below the agent. Yes, the requirement is met after completing the first action. 3. Priority 3: Do (collect wood from the tree) Requirement: Facing the tree; having a wood_pickaxe or stone_pickaxe in the inventory. Yes, the requirements are met after completing the first two actions, as the player has a wood_pickaxe and a stone_pickaxe in the inventory. 4. Priority 4: Locate water source (increase drink) Requirement: Flat ground in any direction and visibility to search for a water source. Based on the current observation (steps 236 and 238), the requirement cannot be determined since a water source is not currently visible. 5. Priority 5: Collect Drink (drink water to restore thirst) Requirement: Facing a water source. Currently, the requirement is not met as there is no water source visible in the player‚Äôs observations. Question: Did the last player action succeed? Why? Answer: Yes, the last player action (move_west) succeeded because there was flat ground (grass) to the west of the player, allowing them to move in that direction. Question: Choose the best executable action from above. Answer: The best executable action from the list is Priority 1: Move South (towards the tree), as its requirement (flat ground below the agent) is met. ============Step: 120, Cumulative Reward: 0.0============ You took action move_south. You see: - grass 1 steps to your west - stone 3 steps to your south-east - path 1 steps to your north - tree 3 steps to your south You face table at your front (south). Your status: - health: 9/9 - food: 5/9 - drink: 4/9 - energy: 9/9 Your inventory: - stone: 4 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move West Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone resource, requires a wood pickaxe or better for collecting. 2. Path: Provides a clear and flat area to move through, no requirements. 3. Tree: Provides wood resource, requires an appropriate tool like an axe to collect, but can also be collected by hand albeit slower. 185 4. Grass: Provides no resources but can be cleared for building or farming, no requirements. 5. Table: Provides the ability to craft advanced tools, weapons, and items, requires wood for crafting. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_south. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Yes, the requirements are met for interaction since you have both a wood_pickaxe and a stone_pickaxe in your inventory. 2. Path: Yes, the requirements are met for interaction as there are no specific requirements for moving through a path. 3. Tree: Yes, the requirements are met for interaction since there are no absolute requirements to collect wood. However, having an axe would make the process more efficient. 4. Grass: Yes, the requirements are met for interaction as there are no requirements for clearing grass. 5. Table: Yes, the requirements are met for interaction since you have wood, stone, coal, and iron in your inventory, which can be used to craft tools, weapons, and items at the table. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Priority 5/5: Replenish your drink and food levels by finding a water source to drink from and food resources like plants or animals to eat. Your current food level is 5/9 and drink level is 4/9. 2. Priority 4/5: Craft items at the nearby table using your available resources to improve your tools, weapons, or build helpful objects (e.g., an iron pickaxe or iron sword). 3. Priority 3/5: Collect more resources such as wood, stone, and iron to expand your inventory, improve your tools, and gain the ability to craft more advanced items. Be cautious of your energy levels and prioritize rest if needed. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Top sub-task requirements: Replenish your drink and food levels. 1. Find a water source: Explore the surrounding area to locate a lake, river or another source of water. When you‚Äôre near a water source, interact with it (use the action Collect Drink) to restore your drink level. 2. Find food resources: Look for fruit-bearing plants, or hunt animals like cows which can be eaten when defeated. When you have food items in your inventory, use the actions Place Plant and Eat Plant, or Eat Cow to restore your food level. First steps: Start by looking for a water source in your vicinity (move in any of the four directions). As you explore, keep an eye out for food resources. Once you locate a water source, interact with it to collect drink and restore your thirst level. Many of the actions that involve movement and exploration can be carried out simultaneously, so exploring the surroundings should be the first priority. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move (in any direction: West, East, North, South) - Requirement: Flat ground in the chosen direction. This will help you explore the surrounding area and locate a water source and food resources. 2. Priority 2: Collect Drink - Requirement: A water source like a lake or river nearby. Quench your thirst by interacting with the water source to increase your drink level. 3. Priority 3: Collect Sampling or Defeat Cow - Requirement: Finding fruit-bearing plants or encountering cows. Collect saplings from plants or defeat cows to obtain food resources. 4. Priority 4: Place Plant or Eat Cow - Requirement: Sapling or cow meat in the inventory. Use the obtained food resources from the previous action to replenish your food level. 5. Priority 5: Eat Plant - Requirement: Placed plant in your vicinity. Consume the growing fruits to further satisfy your food needs and ensure your survival in the game. Question: For each action in the list, are the requirements met? Answer: Based on the player‚Äôs most recent observation (Step 240), let‚Äôs analyze if the requirements are met for the top 5 actions: 1. Move (in any direction: West, East, North, South): Yes, the requirement of flat ground in the chosen direction is met. The player can move West to grass, North to a path, or East from their current position. 2. Collect Drink: No, the current observation does not mention any water sources like lakes or rivers nearby. The player may need to explore more to find a water source. 3. Collect Sampling or Defeat Cow: No, the current observation does not mention fruit-bearing plants or cows nearby. The player may need to explore more to find food resources. 4. Place Plant or Eat Cow: No. The player does not have any saplings or cow meat in their inventory. 5. Eat Plant: No, the current observation does not mention any placed plants in the vicinity for the player to consume fruits. Question: Did the last player action succeed? Why? Answer: Yes, the last player action (move_south) succeeded because there was a flat ground (table) available in front of the player at the south direction, and the player was able to move there without any restrictions or obstacles. Question: Choose the best executable action from above. Answer: The best executable action from the list above is: 1. Move (in any direction: West, East, North, South) 186 As the requirements for this action are met, the player can choose to move West towards grass, North to a path, or East from their current position to explore the surroundings and potentially locate resources. ============Step: 121, Cumulative Reward: 0.0============ You took action move_west. You see: - stone 4 steps to your south-east - path 2 steps to your north-east - tree 4 steps to your north-west - table 2 steps to your south-east You face grass at your front (west). Your status: - health: 9/9 - food: 5/9 - drink: 4/9 - energy: 9/9 Your inventory: - stone: 4 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move North Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone resources, requires a wood pickaxe or better to collect. 2. Path: Provides ease of movement, no requirements to interact. 3. Tree: Provides wood resources, requires an axe or tool capable of chopping wood. 4. Table: Provides a crafting surface, requires wood to craft and place. 5. Grass: Aesthetic element, no specific resource or requirement. 6. Inventory (items): - Stone: Used to craft tools and structures, requires collecting with a pickaxe. - Coal: Used as fuel for furnaces, requires collecting with a pickaxe. - Iron: Used to craft advanced tools and items, requires collecting with a stone pickaxe and smelting. - Wood_pickaxe: Tool for collecting stone resources, requires wood to craft. - Stone_pickaxe: Tool for collecting iron resources, requires stone and wood to craft. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_west. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Yes, you have a wood_pickaxe and a stone_pickaxe in your inventory, so you can collect stone. 2. Path: Yes, no specific requirements are needed to interact with the path. 3. Tree: No, you don‚Äôt have an axe or a tool capable of chopping wood in your inventory. 4. Table: Yes, the table is already placed, and you can use it for crafting. 5. Grass: Yes, though there is no specific interaction or resource provided by grass. 6. Inventory (items): - Stone: Yes, you have already collected stone. - Coal: Yes, you have already collected coal. - Iron: Yes, you have already collected iron. - Wood_pickaxe: Yes, you have a wood_pickaxe in your inventory. - Stone_pickaxe: Yes, you have a stone_pickaxe in your inventory. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Collect wood (Priority: 5/5) - Collecting wood is essential for crafting tools, weapons, and building materials. You are currently lacking an axe, so this should be a top priority. 2. Find water source (Priority: 4/5) - Your drink level is 4/9, so finding a water source to replenish your thirst will be important to avoid dehydration. 3. Craft and consume food (Priority: 4/5) - Your food level is 5/9, and securing a food source and raising your food level will help maintain your health and energy levels. Crafting or finding food should be a priority. Question: What are the requirements for the top sub-task? What should the player do first? Answer: For the top sub-task (Collect wood): Requirements: - Locate a tree to collect wood. - Ensure the wood_pickaxe or another compatible tool is in the inventory or hand. What should the player do first: - The player should first locate a tree nearby to collect wood from. In the observation, it was mentioned that there‚Äôs a tree 4 steps to their north-west. The player can start by moving in that direction to reach the tree. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 187 1. Priority: 1 - Action: Move North Requirement: Flat ground above of the agent. 2. Priority: 2 - Action: Move West Requirement: Flat ground left to the agent. 3. Priority: 3 - Action: Move West (Repeat once more to reach the tree) Requirement: Flat ground left to the agent. 4. Priority: 4 - Action: Do (Collect wood from the tree) Requirement: Facing the tree; Having a wood_pickaxe or another compatible tool. 5. Priority: 5 - Action: Move East / Move South (Returning to the table to craft items) Requirement: Flat ground right to the agent (for Move East) or Flat ground below the agent (for Move South). Question: For each action in the list, are the requirements met? Answer: 1. Priority: 1 - Action: Move North Requirement: Flat ground above of the agent. Status: Met (There is a path 2 steps to the north-east) 2. Priority: 2 - Action: Move West Requirement: Flat ground left to the agent. Status: Met (There is grass at the agent‚Äôs front) 3. Priority: 3 - Action: Move West (Repeat once more to reach the tree) Requirement: Flat ground left to the agent. Status: Met (Assuming there is flat ground continuing westward toward the tree) 4. Priority: 4 - Action: Do (Collect wood from the tree) Requirement: Facing the tree; Having a wood_pickaxe or another compatible tool. Status: Met (The agent has a wood_pickaxe in their inventory) 5. Priority: 5 - Action: Move East / Move South (Returning to the table to craft items) Requirement: Flat ground right to the agent (for Move East) or Flat ground below the agent (for Move South). Status: Met (There is a path 2 steps to the north-east and a table 2 steps to the south-east) Question: Did the last player action succeed? Why? Answer: Yes, the last player action (move_west) succeeded because there was flat ground (grass) available to the west of the player‚Äô s position, allowing them to move in that direction. Question: Choose the best executable action from above. Answer: The best executable action from the list above is: Priority: 1 - Action: Move North Requirement: Flat ground above of the agent. ============Step: 122, Cumulative Reward: 0.0============ You took action move_north. You see: - stone 4 steps to your north-east - path 1 steps to your east - tree 3 steps to your north-west - table 3 steps to your south-east You face grass at your front (north). Your status: - health: 9/9 - food: 5/9 - drink: 4/9 - energy: 9/9 Your inventory: - stone: 4 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move East Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone resource, requires a wood_pickaxe or better to collect. 2. Path: Provides a flat ground to walk on, requires no interaction. 3. Tree: Provides wood resource, requires a wood_pickaxe or better to collect. 4. Table: Allows crafting tools and weapons, requires wood to craft. 5. Grass (in front): Can be walked on, no resources, requires no interaction. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_north. 188 Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Yes, the player has a wood_pickaxe and a stone_pickaxe for collecting stone. 2. Path: Yes, the player can walk on the path without any additional requirements. 3. Tree: Yes, the player has a wood_pickaxe for collecting wood. 4. Table: Yes, the player already has a table nearby and can use it for crafting. 5. Grass (in front): Yes, the player can walk on the grass without any additional requirements. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Collect more resources (Priority 4/5): Focus on gathering more stone, wood, coal, and iron to improve tools, weapons, and create new structures. 2. Increase food and drink levels (Priority 5/5): Player‚Äôs food and drink levels are low. Search for sources of food, such as cows, and sources of water, such as lakes, to replenish food and drink levels. 3. Craft better tools and weapons (Priority 3/5): Use the collected resources to upgrade tools (e.g., crafting an iron pickaxe) and weapons (e.g., crafting an iron sword) at the nearby table once enough resources are gathered. Question: What are the requirements for the top sub-task? What should the player do first? Answer: For the top sub-task (Collect more resources), the requirements are: - Wood: Use a wood_pickaxe or stone_pickaxe to interact with trees. - Stone: Use the stone_pickaxe to interact with stone blocks. - Coal: Use the stone_pickaxe to interact with coal deposits. - Iron: Use the stone_pickaxe to interact with iron deposits. The first action the player should do is move towards the nearest resources to gather them. Since there‚Äôs stone 4 steps to the north-east and a tree 3 steps to the north-west, the player should head to either resource and use the appropriate pickaxe to collect it. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority: Move East (5/5) Requirement: Flat ground to the east of the agent. 2. Priority: Move North-East (4/5) Requirement: Flat ground in the north-east direction from the agent. 3. Priority: Do (Use stone_pickaxe on stone) (3/5) Requirement: Facing the stone block and having a stone_pickaxe equipped. 4. Priority: Do (Use stone_pickaxe on tree) (2/5) Requirement: Facing the tree and having a stone_pickaxe equipped. 5. Priority: Move North (1/5) Requirement: Flat ground to the north of the agent. Question: For each action in the list, are the requirements met? Answer: 1. Move East (5/5) Requirement: Flat ground to the east of the agent. Status: Yes, the requirement is met. There is a path 1 step to the east. 2. Move North-East (4/5) Requirement: Flat ground in the north-east direction from the agent. Status: No, the requirement is not met. There is no mention of flat ground in the north-east direction. 3. Do (Use stone_pickaxe on stone) (3/5) Requirement: Facing the stone block and having a stone_pickaxe equipped. Status: No, the requirement is not met. The agent is not currently facing the stone block. 4. Do (Use stone_pickaxe on tree) (2/5) Requirement: Facing the tree and having a stone_pickaxe equipped. Status: No, the requirement is not met. The agent is not currently facing the tree. 5. Move North (1/5) Requirement: Flat ground to the north of the agent. Status: Yes, the requirement is met. The agent is currently facing grass at their front (north). Question: Did the last player action succeed? Why? Answer: Yes, the last player action move_north succeeded because there was flat ground (grass) to the north, allowing the player to move in that direction without any obstacles. Question: Choose the best executable action from above. Answer: The best executable action from the given list is Move East (priority 5/5) since it has a flat ground (path) to the east of the agent, and the requirement for this action is met. ============Step: 123, Cumulative Reward: 0.0============ You took action move_east. You see: - grass 1 steps to your west - stone 3 steps to your north-east - tree 4 steps to your north-west - table 2 steps to your south 189 You face path at your front (east). Your status: - health: 9/9 - food: 5/9 - drink: 4/9 - energy: 9/9 Your inventory: - stone: 4 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move North Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass: - Resource it provides: Saplings (when interacting with grass, there‚Äôs a chance to find saplings) - Requirement: Interact (no specific tool required) 2. Stone: - Resource it provides: Stone (basic crafting material) - Requirement: Interact with a Wood or Stone Pickaxe 3. Path: - Resource it provides: None (serves as a way to easily move around) - Requirement: None 4. Tree: - Resource it provides: Wood (basic crafting material) - Requirement: Interact with a Wood or Stone Pickaxe 5. Table: - Resource it provides: Crafting station (allows crafting of tools and weapons) - Requirement: Interact (no specific tool required) Question: What was the last action taken by the player? Answer: The last action taken by the player was move_east. Question: For each object in the list, are the requirements met for interaction? Answer: Based on your current inventory and player status, let‚Äôs check if the requirements for interaction are met for each object: 1. Grass: - Requirement: Interact (no specific tool required) - Requirements met: Yes 2. Stone: - Requirement: Interact with a Wood or Stone Pickaxe - Requirements met: Yes, you have both a Wood and Stone Pickaxe in your inventory. 3. Path: - Requirement: None - Requirements met: Yes, there are no specific requirements needed to move along the path. 4. Tree: - Requirement: Interact with a Wood or Stone Pickaxe - Requirements met: Yes, you have both a Wood and Stone Pickaxe in your inventory. 5. Table: - Requirement: Interact (no specific tool required) - Requirements met: Yes Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Replenish drink (priority: 5/5): Your current drink level is 4/9, and it‚Äôs crucial to ensure your survival. Find a water source or collect drinks to increase your drink level. 2. Replenish food (priority: 4/5): Your current food level is 5/9. To maintain high energy and health, you should find food resources, such as collecting fruits, hunting animals, or growing crops to increase your food level. 3. Collect more materials (priority: 3/5): Continue gathering resources like wood and iron to prepare for crafting more advanced tools or constructing shelters. This would also help in the defense against monsters and make it easier to achieve game objectives. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Top Sub-task: Replenish drink (priority: 5/5) Requirements: 1. Find a water source (lake, river, etc.) or collect drink items (water bottles, fresh fruits, etc.) 2. Inventory space to store the collected drinks, if necessary What should the player do first: 190 The player should search for a nearby water source (lake or river) to drink directly from it, or alternatively, look for drink items such as water bottles and fresh fruits to consume and replenish their drink level. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Move North (Priority: 5/5) Requirement: Flat ground above of the agent. 2. Move South (Priority: 4/5) Requirement: Flat ground below the agent. 3. Move East (Priority: 3/5) Requirement: Flat ground right to the agent. 4. Move West (Priority: 2/5) Requirement: Flat ground left to the agent. 5. Do (Priority: 1/5) Requirement: Facing creature or material; have necessary tool. Question: For each action in the list, are the requirements met? Answer: 1. Move North (Priority: 5/5) Requirement: Flat ground above of the agent. Yes, the requirement is met: You face grass at your front (north). 2. Move South (Priority: 4/5) Requirement: Flat ground below the agent. Yes, the requirement is met: There‚Äôs a table 2 steps to your south. 3. Move East (Priority: 3/5) Requirement: Flat ground right to the agent. Yes, the requirement is met: You face path at your front (east). 4. Move West (Priority: 2/5) Requirement: Flat ground left to the agent. Yes, the requirement is met: There‚Äôs grass 1 step to your west. 5. Do (Priority: 1/5) Requirement: Facing creature or material; have necessary tool. No, the requirement is not met: You face path at your front (east), which doesn‚Äôt require any tool or interaction. Question: Did the last player action succeed? Why? Answer: Yes, the last player action move_east succeeded. The action succeeded because there was a path in front of the player ( east), allowing them to move in that direction without any obstacles blocking their way. Question: Choose the best executable action from above. Answer: The best executable action from above is Move North with priority 5/5. The requirement for this action is met, as you face grass at your front (north), which means there is flat ground above the agent. ============Step: 124, Cumulative Reward: 0.0============ You took action move_north. You see: - grass 1 steps to your west - stone 2 steps to your east - tree 3 steps to your north-west - table 3 steps to your south - cow 5 steps to your north-west You face path at your front (north). Your status: - health: 9/9 - food: 5/9 - drink: 4/9 - energy: 9/9 Your inventory: - stone: 4 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move East Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass: - Resource: None - Requirement: None 2. Stone: 191 - Resource: Stone (for making tools and building) - Requirement: Wood or Stone Pickaxe to collect 3. Tree: - Resource: Wood (for making tools, crafting tables and building) - Requirement: Any tool (wooden or stone) can be used to collect 4. Table: - Resource: Crafting station for tools and weapons - Requirement: Must have wood to craft a table 5. Cow: - Resource: Food (restores health) - Requirement: Must be nearby and defeated to obtain food 6. Path: - Resource: Provides direction for movement - Requirement: Flat ground for smooth movement Question: What was the last action taken by the player? Answer: The last action taken by the player was move_north. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass: - Requirements met: Yes, you can interact with grass anytime as there are no specific requirements. 2. Stone: - Requirements met: Yes, you have both a wood_pickaxe and a stone_pickaxe in your inventory, which allows you to collect stone. 3. Tree: - Requirements met: Yes, you have wood_pickaxe and stone_pickaxe in your inventory, which can be used to collect wood from the tree. 4. Table: - Requirements met: Yes, the table is already placed, so you can interact with it to craft tools and weapons. 5. Cow: - Requirements met: No, the cow is currently 5 steps away to your north-west; you need to be closer to interact with and defeat it for food. 6. Path: - Requirements met: Yes, the path has flat ground, so you can interact with it and move in any direction. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Priority 4/5: Collect more resources: - Approach and interact with the nearby stone to collect more stone with your stone_pickaxe, which can be used for crafting and building. 2. Priority 5/5: Find a water source: - As your drink level is 4/9, finding a water source and interacting with it to restore your drink level should be a priority. 3. Priority 3/5: Obtain food: - Since your food level is 5/9, either approach a tree to collect more wood or defeat the cow to obtain food, restoring your health or food level as needed. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Top Sub-task: Collect more resources Requirements: - Be close to the stone (2 steps to the east) - Have a suitable pickaxe (you have a stone_pickaxe in the inventory) What should the player do first: - Move 2 steps east to reach the stone. Once in front of the stone, use your stone_pickaxe to start collecting more stone resources. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Move East (Priority: 5/5) Requirement: Flat ground right to the agent. 2. Move East (Priority: 4/5) Requirement: Flat ground right to the agent. 3. Do (Priority: 3/5) Requirement: Facing stone (after moving east twice); have stone_pickaxe available in the inventory. 4. Move West (Priority: 2/5) Requirement: Flat ground left to the agent. 5. Move South (Priority: 1/5) Requirement: Flat ground below the agent. Question: For each action in the list, are the requirements met? Answer: 192 1. Move East (Priority: 5/5) Requirement: Flat ground right to the agent. - Yes, the requirements are met; there is a path to the east. 2. Move East (Priority: 4/5) Requirement: Flat ground right to the agent. - The requirements for this action can only be determined after taking the first action (Move East). We cannot currently determine if the requirements are met. 3. Do (Priority: 3/5) Requirement: Facing stone (after moving east twice); have stone_pickaxe available in the inventory. - The requirements for this action can only be determined after taking the first two actions (Move East twice). We cannot determine if the requirements are met at this moment. 4. Move West (Priority: 2/5) Requirement: Flat ground left to the agent. - Yes, the requirements are met; there is grass to the west. 5. Move South (Priority: 1/5) Requirement: Flat ground below the agent. - Yes, the requirements are met; there is a path to the south. Question: Did the last player action succeed? Why? Answer: Yes, the last player action succeeded because there was a flat path (grass) in the north direction, allowing the player to move north without any obstructions. Question: Choose the best executable action from above. Answer: The best executable action from the list is to Move East (Priority: 5/5) because its requirements are met, and it has the highest priority. ============Step: 125, Cumulative Reward: 0.0============ You took action move_east. You see: - grass 2 steps to your west - path 1 steps to your west - tree 4 steps to your north-west - table 4 steps to your south-west - cow 7 steps to your north-west You face stone at your front (east). Your status: - health: 9/9 - food: 5/9 - drink: 4/9 - energy: 9/9 Your inventory: - stone: 4 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move North Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass: Provides no direct resources, serves as a decoration and a walkable path. Requirements: None. 2. Stone: Provides stone resource when mined. Requirements: Needs a wood_pickaxe or better to mine. 3. Path: Provides a clear and straightforward path to travel. Requirements: None. 4. Tree: Provides wood resource when chopped. Requirements: Needs any type of axe to chop. 5. Table: Crafting station to create tools, weapons, or other structures. Requirements: Needs wood in inventory to place. 6. Cow: Provides food when defeated. Requirements: Needs a weapon or tool capable of defeating the animal. 7. Iron: Provides iron resource when mined, but not present in the current observation. Requirements: Needs a stone_pickaxe or better to mine. Note: Coal is not in the current observation but is in the inventory. It serves to smelt iron when used in a furnace. Requirements: Needs a wood_pickaxe or better to mine. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_east. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass: No requirements needed for interaction. You can move and walk on the grass. 193 2. Stone: Requirements are met. You have a wood_pickaxe and a stone_pickaxe in your inventory. You can mine the stone. 3. Path: No requirements needed for interaction. You can move and walk on the path. 4. Tree: Not in the immediate vicinity (4 steps to your north-west). Once in range, the requirement of an axe would be needed, which you currently don‚Äôt have in your inventory. 5. Table: Not in the immediate vicinity (4 steps to your south-west). Once in range, no further requirements needed for interaction. 6. Cow: Not in the immediate vicinity (7 steps to your north-west). Once in range, you have a wood_pickaxe and a stone_pickaxe that can be used to defeat the cow for food, although a sword would be more efficient. 7. Iron: Not present in the current observation but previously mentioned. Once in range, you have a stone_pickaxe in your inventory that meets the requirement to mine iron. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Priority 5/5: Increase drink level: Your drink level is at 4/9, which needs improvement. You should find a water source like a lake or river and drink from it to increase your drink level. 2. Priority 4/5: Increase food level: Your food level is at 5/9. You should approach the cow (7 steps to your north-west) and use a pickaxe to defeat it for food, though using a sword would be more efficient. Alternatively, locate other food sources such as saplings for plants or fruits. 3. Priority 3/5: Collect more resources: Gather additional stone, coal, and iron to craft better tools, weapons, and structures. The stone is present in your immediate vicinity, you can mine it using the stone_pickaxe. For coal and iron, you should explore the surroundings to find their deposits. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Top Sub-task: Increase drink level Requirements: 1. Locate a water source such as a lake or river. What the player should do first: 1. The player should explore their surroundings to find a water source. They can try moving in different directions ( move_north, move_east, move_south, or move_west) to look for a lake or river in the in-game observations. Once the water source is found, the player can approach it and drink from it to increase their drink level. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: Priority 1: Action: Move North/East/South/West Requirement: Flat ground in the desired direction (choose the direction based on in-game observations to find a water source ). Priority 2: Action: Collect Drink Requirement: Being near a water source, such as a lake or river. Priority 3: Action: Move North/East/South/West Requirement: Flat ground in the desired direction (choose the direction based on in-game observations to find food or resources). Priority 4: Action: Eat Cow or Eat Plant Requirement: Cow, plant, or a collected food item in the inventory. Priority 5: Action: Sleep Requirement: Energy level below maximum; being in a safe location away from monsters. Question: For each action in the list, are the requirements met? Answer: Priority 1: Action: Move North/East/South/West Requirement: Flat ground in the desired direction Status: Yes, the requirement is met, as there are flat grounds in several directions. Priority 2: Action: Collect Drink Requirement: Being near a water source Status: No, the requirement is not met since there‚Äôs no water source mentioned in the player‚Äôs observations. Priority 3: Action: Move North/East/South/West Requirement: Flat ground in the desired direction Status: Yes, the requirement is met, as there is flat ground in several directions. Priority 4: Action: Eat Cow or Eat Plant Requirement: Cow, plant, or a collected food item in the inventory Status: No, the requirement is not met as there is no cow, plant, or collected food item in the inventory. Priority 5: Action: Sleep Requirement: Energy level below maximum; being in a safe location away from monsters 194 Status: Yes, the requirement is met as the energy level is 9/9, and no monsters are mentioned in the player‚Äôs observations. However, the current energy level is at maximum, so this action is not necessary. Question: Did the last player action succeed? Why? Answer: Yes, the last player action (move_east) succeeded because there was flat ground (path) to the east of the player, allowing the player to move in that direction without any obstruction. Question: Choose the best executable action from above. Answer: The best executable action from the list is Priority 1: Action: Move North/East/South/West Requirement: Flat ground in the desired direction The player can choose a direction based on in-game observations to explore and find a water source, food, or additional resources. ============Step: 126, Cumulative Reward: 0.0============ You took action move_north. You see: - grass 2 steps to your west - path 1 steps to your west - tree 3 steps to your west - lava 6 steps to your north-east - cow 7 steps to your north-west You face stone at your front (north). Your status: - health: 9/9 - food: 5/9 - drink: 4/9 - energy: 9/9 Your inventory: - stone: 4 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move West Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass: Provides no direct resources, but flat terrain for walking. No requirements. 2. Path: Provides no direct resources, but flat terrain for walking. No requirements. 3. Tree: Provides wood and saplings for crafting and planting. Requires a wood pickaxe or better to chop down. 4. Lava: Provides no direct resources, but can be dangerous and cause damage. Requires caution when approaching or crossing. 5. Cow: Provides food when killed. Requires a weapon to kill, ideally a sword. 6. Stone (facing): Provides stone for crafting tools and building materials. Requires a wood pickaxe or better to mine. 7. Stone (facing): Provides stone for crafting tools and building materials. Requires a wood pickaxe or better to mine. 8. Inventory Stone: Provides crafting materials for tools and structures. Obtained by mining stone. 9. Inventory Coal: Provides fuel for smelting iron. Obtained by mining coal. 10. Inventory Iron: Provides materials for crafting iron tools and weapons. Obtained by mining iron with a stone pickaxe or better. 11. Inventory Wood Pickaxe: Provides the ability to mine stone, coal, and iron. Crafted with wood. 12. Inventory Stone Pickaxe: Provides the ability to mine iron and diamond. Crafted with stone and wood. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_north. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass: Yes, the requirements for walking on flat terrain are met. 2. Path: Yes, the requirements for walking on flat terrain are met. 3. Tree: Yes, the requirements for chopping down a tree are met, as you have a wood_pickaxe in your inventory. 4. Lava: Yes, the requirement for caution when approaching or crossing lava are met, but it is advised to stay away from it, as it can cause damage. 5. Cow: Yes, the requirements for killing a cow are met, though you don‚Äôt have a sword, using a wood or stone pickaxe can still be used to kill the cow for food. 6. Stone (facing): Yes, the requirements for mining stone are met, as you have a wood_pickaxe in your inventory. 7. Stone (facing): Yes, the requirements for mining stone are met, as you have a wood_pickaxe in your inventory. 8. Inventory Stone: Yes, the requirements for using stone in crafting are met as you have collected stone. 9. Inventory Coal: Yes, the requirements for using coal as fuel for smelting are met, as you have collected coal. 10. Inventory Iron: Yes, the requirements for crafting iron tools are met. You have collected iron, and you have a stone_pickaxe and coal in your inventory, which are needed to smelt the iron into a usable form. 11. Inventory Wood Pickaxe: Yes, the requirements for using the wood_pickaxe to mine stone, coal, and iron are met. 12. Inventory Stone Pickaxe: Yes, the requirements for using the stone_pickaxe to mine iron and diamond are met. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Priority 5/5: Increase your food and drink levels - You have low food (5/9) and drink (4/9) levels. You can kill the cow (7 steps to your north-west) for food and find a source of water to restore your drink levels. 195 2. Priority 4/5: Craft an iron sword and iron pickaxe - You have iron in your inventory, but it needs to be smelted using a furnace and coal. If you don‚Äôt already have a furnace, craft one using stone in your inventory. After smelting the iron, craft an iron sword and iron pickaxe using the smelted iron, as they will be more effective for combat and mining. 3. Priority 3/5: Collect more resources - Mine the facing stone for additional building materials and find more coal and iron to create more advanced tools, weapons, and armor. Keep exploring your surroundings for valuable resources such as diamonds using your stone_pickaxe. Question: What are the requirements for the top sub-task? What should the player do first? Answer: The requirements for the top sub-task (Increasing your food and drink levels) are: 1. Killing the cow for food: You need to have a weapon, such as a wood, stone, or iron sword, to kill the cow effectively. In your inventory, you already have a wood_pickaxe and a stone_pickaxe, which can be used as makeshift weapons to kill the cow. 2. Finding a source of water to drink: You need to find a drinkable water source, such as a lake or river, and drink from it to restore your drink level. What the player should do first: 1. Approach the cow: Move towards the cow (7 steps to your north-west) to get in a closer range for attacking. 2. Kill the cow: Use your wood_pickaxe, stone_pickaxe, or (if available) a sword to kill the cow and collect the meat. 3. Find a water source: Explore the environment to locate a lake or river. 4. Drink water: Approach the water source and drink from it to restore your drink level. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move West (Move towards the cow and water source) Requirement: Flat ground left to the agent. 2. Priority 2: Move North (Continue moving towards the cow and possibly the water source) Requirement: Flat ground above the agent. 3. Priority 3: Do (Kill the cow and collect meat) Requirement: Facing the cow and having a necessary tool in inventory (wood_pickaxe or stone_pickaxe). 4. Priority 4: Move West/North/East/South (Find a water source by exploring the environment) Requirement: Flat ground in the direction the agent wants to move. 5. Priority 5: Collect Drink (Drink water to restore the drink level) Requirement: Facing a drinkable water source like a lake or river. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Move West Requirement: Flat ground left to the agent. Yes, the requirements are met. There is a path 1 step to the west. 2. Priority 2: Move North Requirement: Flat ground above the agent. Yes, the requirements are met. The agent moved north in the previous step, and the ground seems to be flat. 3. Priority 3: Do (Kill the cow and collect meat) Requirement: Facing the cow and having a necessary tool in inventory (wood_pickaxe or stone_pickaxe). Not yet. The agent is currently facing stone and 7 steps away from the cow. The wood_pickaxe or stone_pickaxe can be used for this action when the agent is closer and facing the cow. 4. Priority 4: Move West/North/East/South (Find a water source by exploring the environment) Requirement: Flat ground in the direction the agent wants to move. Yes, the requirements are met for moving west and north. Flat ground is located in both directions. Moving east and south are not ideal as they move the agent away from the cow and potential water source. 5. Priority 5: Collect Drink (Drink water to restore the drink level) Requirement: Facing a drinkable water source like a lake or river. No, the agent hasn‚Äôt found a drinkable water source yet. The agent needs to explore the world to discover a water source first. Question: Did the last player action succeed? Why? Answer: Yes, the last player action (move_north) succeeded because there was flat ground available to the north, allowing the player to move in that direction. Question: Choose the best executable action from above. Answer: The best executable action from above is Priority 1: Move West. This action meets the requirements (flat ground to the west) and moves the player closer to the cow and the potential water source. ============Step: 127, Cumulative Reward: 0.0============ You took action move_west. You see: - stone 2 steps to your north-east - path 1 steps to your south 196 - tree 2 steps to your west - lava 7 steps to your north-east You face grass at your front (west). Your status: - health: 9/9 - food: 5/9 - drink: 4/9 - energy: 9/9 Your inventory: - stone: 4 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move West Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: - Stone: Provides stone material, requires a wood or stone pickaxe to collect. - Grass: No direct resources, but can be turned into a path or used to build a shelter. - Path: No direct resources, provides accessible ground for movement. - Tree: Provides wood, requires a wood or stone pickaxe to collect. - Lava: Dangerous, no direct resources, but can be used for smelting if you have a bucket. - Cow: Provides food, requires a wood, stone, or iron sword to defeat and collect meat. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_west. Question: For each object in the list, are the requirements met for interaction? Answer: - Stone: Yes, the requirements are met since you have both a wood_pickaxe and a stone_pickaxe in your inventory. - Grass: Yes, you can interact with grass without any specific tool requirements. - Path: Yes, you can move on the path without any requirements. - Tree: Yes, you have both a wood_pickaxe and a stone_pickaxe in your inventory to collect wood from the tree. - Lava: No, you currently do not have a bucket to interact with the lava for smelting purposes. - Cow: No, you do not have a wood, stone, or iron sword in your inventory to defeat the cow and collect its meat. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Priority 4/5: Craft a sword (wood, stone, or iron) to defeat the cow and collect meat to increase the food level. 2. Priority 4/5: Find a source of water or drinkable liquid to restore the drink level. 3. Priority 3/5: Collect more resources like wood and iron to build better tools and weapons or craft shelter. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Requirements for crafting a sword (wood, stone, or iron): For a wood sword: 1. Collect wood. 2. Have access to a placed crafting table. For a stone sword: 1. Collect wood and stone. 2. Have access to a placed crafting table. For an iron sword: 1. Collect wood, stone, coal, and iron. 2. Have access to a placed crafting table and a placed furnace. The player should first check their inventory for the resources required for each type of sword. If they have enough wood, they can immediately craft the wood sword. If not, they should focus on gathering wood first. If the player has wood and stone in their inventory, they should craft the stone sword instead, as it is a better option. Lastly, if the player has wood, stone, coal, and iron in their inventory and has access to a furnace, they should aim for the iron sword. If they don‚Äôt have a furnace, they can craft one using the stone in their inventory and then smelt the iron using the coal. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move West - Flat ground left to the agent; Grass is observed at the front. Requirements: Ability to reach the tree observed 2 steps to the west. 2. Priority 2: Do - Facing creature or material; have necessary tool; Chop down the tree in order to get wood. Requirements: Face the tree you have approached. 3. Priority 3: Place Table - Wood in inventory; Place the crafting table after collecting wood from the tree. Requirements: Sufficient space to place the table on the flat ground. 4. Priority 4: Make Wood Sword - Nearby table; wood in inventory; Craft a wood sword using the placed crafting table. Requirements: Enough wood to craft the sword; within reach of the placed crafting table. 197 5. Priority 5: Make Stone Sword - Nearby table; wood, stone in inventory; Craft a stone sword using the placed crafting table. Requirements: Enough wood and stone to craft the sword; within reach of the placed crafting table. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Move West - Yes, the requirements for this action are met. The agent has flat ground to the west (grass), so the agent can move in that direction. 2. Priority 2: Do - Currently, the requirements for this action are not met. The agent needs to first move west and be facing the tree before performing the Do action to chop down the tree. 3. Priority 3: Place Table - No, the requirements for this action are not met. The agent needs to collect wood from a tree first by performing action 2. 4. Priority 4: Make Wood Sword - No, the requirements for this action are not met. The agent needs to have enough wood in their inventory and needs to place a table (action 3) before being able to craft a wood sword. 5. Priority 5: Make Stone Sword - No, the requirements for this action are not met. The agent needs to have enough wood and stone in their inventory (from previous actions) and needs to place a table (action 3) before being able to craft a stone sword. Question: Did the last player action succeed? Why? Answer: Yes, the last player action succeeded. The player successfully moved west because there was a flat ground (grass) in the direction they moved, allowing for unrestricted movement in that direction. Question: Choose the best executable action from above. Answer: The best executable action from the list above is: Priority 1: Move West - This action can be executed since the agent has flat ground (grass) to the west, allowing the agent to move in that direction. ============Step: 128, Cumulative Reward: 0.0============ You took action move_west. You see: - grass 1 steps to your north - stone 3 steps to your north-east - path 1 steps to your east You face tree at your front (west). Your status: - health: 9/9 - food: 5/9 - drink: 4/9 - energy: 9/9 Your inventory: - stone: 4 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Do Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass: Provides saplings when collected; requires no tools to collect. 2. Stone: Provides stone material when collected; requires a wood_pickaxe or better to collect. 3. Path: Provides no resources but facilitates movement. 4. Tree: Provides wood when collected; requires a wood_pickaxe or better to collect. In the current observation: - Grass is 1 step to the north and can be collected for saplings without any tools required. - Stone is 3 steps to the north-east and can be collected for stone material with a wood_pickaxe or better. - Path is 1 step to the east and provides no resources but can be used for easier movement. - Tree is directly west of the player and can be collected for wood with a wood_pickaxe or better. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_west. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass: Yes, the requirements are met for interaction. You do not need any tools to collect saplings from the grass. 2. Stone: Yes, the requirements are met for interaction. You have both a wood_pickaxe and a stone_pickaxe in your inventory, which can be used to collect the stone material. 3. Path: Yes, the requirements are met for interaction. No tools or materials are needed to walk on the path. 4. Tree: Yes, the requirements are met for interaction. You have a wood_pickaxe in your inventory that can be used to collect wood from the tree. 198 Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Priority 4/5: Collect wood from the tree to the west. Wood is an essential resource for crafting various tools, weapons, and structures. 2. Priority 3/5: Collect saplings from the grass to the north. Saplings can be planted to grow more trees for a renewable source of wood. 3. Priority 2/5: Collect more stone material from the stone to the north-east. Stone can be used for crafting more advanced tools, weapons, and structures. Note: In the current situation, the player should also consider finding food and drink sources as their food and drink levels are getting low. However, there are no immediate sources in the current observation. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Requirements for the top sub-task (collect wood from the tree to the west): 1. Face the tree at the west. 2. Have a necessary tool to chop the tree, such as a wood pickaxe or a stone pickaxe. The player should first face the tree to the west to fulfill the first requirement. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Do (Chop down the tree) Requirement: Face the tree to the west and have a necessary tool, such as a wood pickaxe or a stone_pickaxe. 2. Priority 2: Make Wooden Sword Requirement: Nearby table and wood in inventory. 3. Priority 3: Drink Requirement: Find a water source, like a lake or river. 4. Priority 4: Eat Requirement: Find food sources like fruits, vegetables, or animals to hunt. 5. Priority 5: Sleep Requirement: Energy level is below maximum; find a safe place to rest. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Do (Chop down the tree) Requirement: Face the tree to the west and have a necessary tool, such as a wood pickaxe or a stone_pickaxe. Are the requirements met? Yes, the player is currently facing the tree and has a wood_pickaxe and a stone_pickaxe in their inventory. 2. Priority 2: Make Wooden Sword Requirement: Nearby table and wood in the inventory. Are the requirements met? No, the player does not have a table nearby, and there is no wood in their inventory. 3. Priority 3: Drink Requirement: Find a water source, like a lake or river. Are the requirements met? No, the player does not currently see a water source in their surroundings. 4. Priority 4: Eat Requirement: Find food sources like fruits, vegetables, or animals to hunt. Are the requirements met? No, the player does not currently have any food items in their inventory or see any food sources in their surroundings. 5. Priority 5: Sleep Requirement: Energy level is below maximum; find a safe place to rest. Are the requirements met? No, the player‚Äôs energy level is currently at the maximum (9/9). Question: Did the last player action succeed? Why? Answer: Yes, the last player action succeeded. The player moved west because there were no obstacles in the way, and the action was applicable according to the game rules. Question: Choose the best executable action from above. Answer: The best executable action from the list above is: Priority 1: Do (Chop down the tree) Requirement: Face the tree to the west and have a necessary tool, such as a wood pickaxe or a stone_pickaxe. ============Step: 129, Cumulative Reward: 0.0============ You took action do. You see: - stone 3 steps to your north-east - path 1 steps to your east - tree 4 steps to your west - cow 5 steps to your north-west You face grass at your front (west). Your status: - health: 9/9 199 - food: 5/9 - drink: 4/9 - energy: 9/9 Your inventory: - wood: 1 - stone: 4 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move West Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: 3 steps to your north-east - Resource provided: stone, which can be used to craft tools and build structures. - Requirement: Stone needs to be extracted using a pickaxe, preferably a wood_pickaxe or better. 2. Path: 1 step to your east - Resource provided: No direct resources, but paths may lead to other resources or locations. - Requirement: None. 3. Tree: 4 steps to your west - Resource provided: wood, which can be used as basic material for crafting tools and structures. - Requirement: Wood can be collected by chopping down a tree. No specific tool requirement, but using an axe speeds up the process. 4. Cow: 5 steps to your north-west - Resource provided: meat, which can be cooked and consumed to restore food points. - Requirement: To get meat, the cow needs to be killed, preferably using a weapon like a sword. 5. Grass: at your front (west) - Resource provided: grass provides no direct resources, but can be cleared to make room for structures or crops. - Requirement: To clear grass, simply walk over it or use any tool. Additional resources from the current observation: 6. Wood: 1 (in your inventory) - Resource provided: can be used as a crafting material for tools and structures. - Requirement: Collected from trees. 7. Stone: 4 (in your inventory) - Resource provided: can be used for crafting tools and building structures. - Requirement: Collected from stone using a pickaxe. 8. Coal: 2 (in your inventory) - Resource provided: used as fuel for smelting materials in a furnace, such as iron. - Requirement: Collected from coal deposits using a pickaxe. 9. Iron: 1 (in your inventory) - Resource provided: used to craft stronger tools and weapons. - Requirement: Collected from iron deposits using a stone_pickaxe or better. Question: What was the last action taken by the player? Answer: The last action taken by the player was do. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: 3 steps to your north-east - Yes, the requirement for interaction is met. You have a stone_pickaxe in your inventory, which can be used to extract the stone. 2. Path: 1 step to your east - Yes, no specific requirements for interaction. You can simply walk on the path by moving east. 3. Tree: 4 steps to your west - Yes, although it‚Äôs prefered to use an axe to speed up the process, you can still interact with the tree with your hands or other tools to collect wood. 4. Cow: 5 steps to your north-west - The requirement for interaction (a weapon like a sword) is not fully met. You have wood and stone materials in your inventory, so you can craft a wood_sword or stone_sword first to interact more efficiently. 5. Grass: at your front (west) - Yes, the requirement for interaction is met. You can simply walk over it or use any tool to clear it. Based on the resources in your inventory: 6. Wood: 1 (in your inventory) - Yes, the requirement for interaction (collected from trees) is already met, so the wood is available for use. 7. Stone: 4 (in your inventory) - Yes, the requirement for interaction (collected from stone using a pickaxe) is already met, so the stone is available for use. 8. Coal: 2 (in your inventory) - Yes, the requirement for interaction (collected from coal deposits using a pickaxe) is already met, so the coal is available for use. 200 9. Iron: 1 (in your inventory) - Yes, the requirement for interaction (collected from iron deposits using a stone_pickaxe or better) is already met, so the iron is available for use. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Priority 4/5: Craft a weapon (wood_sword or stone_sword) Since you have the necessary materials (wood and stone) in your inventory, crafting a weapon will help you efficiently interact with the cow to collect meat for restoring food points. 2. Priority 3/5: Collect more wood from the tree You have only 1 unit of wood in your inventory, and considering the importance of wood as a basic crafting material, collecting more wood from the nearby tree should be a priority. 3. Priority 5/5: Find and drink water to restore drink points Your drink points are at 4/9, indicating that you need to find a water source (like a lake or river) and drink from it to maintain your hydration levels. Prioritize this task to avoid negative effects from dehydration. Question: What are the requirements for the top sub-task? What should the player do first? Answer: For the top sub-task (crafting a weapon - wood_sword or stone_sword), the requirements are: 1. A nearby crafting table 2. Adequate resources in the inventory (wood and stone) Since you currently have wood and stone in your inventory, you need to place a crafting table first. To do this, complete the following steps: 1. Craft a table using your wood: make sure you have at least 2 units of wood in your inventory (currently, you have only 1 unit). 2. Place a table: After crafting the table, find a suitable location and place the table. Once you have placed the table, interact with it to craft a wooden sword or a stone sword to complete the top sub-task. Remember that you need more wood for crafting the table, so focus on collecting wood from the nearby tree before placing the table. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1 - Move West: Requirement - Flat ground left to the agent. (To get closer to the tree for collecting more wood) 2. Priority 2 - Do: Requirement - Facing creature or material; have necessary tool. (To collect wood from the tree with your wood_pickaxe) 3. Priority 3 - Place Table: Requirement - Wood in inventory. (To place a crafting table, after collecting the required wood ) 4. Priority 4 - Make Wood Sword or Make Stone Sword: Requirement - Nearby table; wood and/or stone in inventory. (To craft a weapon to defend yourself) 5. Priority 5 - Move North or North-West: Requirement - Flat ground above or above-left of the agent. (To approach the cow for a possible food source) Question: For each action in the list, are the requirements met? Answer: 1. Move West: Yes, the requirement of flat ground is met, as you are facing grass in front of you (west). 2. Do: Yes, the requirement is met because you have a necessary tool (wood_pickaxe) in your inventory and are facing a tree (material). 3. Place Table: Yes, the requirement is met because you have wood in your inventory. 4. Make Wood Sword or Make Stone Sword: Partially met, as you have wood and stone in your inventory. The requirement for the nearby table is not met yet since you still need to place the crafting table (action 3). 5. Move North or North-West: Yes, the requirement is met as there is flat ground above you (north), and the cow is 5 steps to your north-west, which also implies flat ground. Question: Did the last player action succeed? Why? Answer: Yes, the last player action do succeeded. This can be inferred because the player‚Äôs inventory now has an additional wood, which indicates that the player successfully chopped down the tree that was in front of them (west). Question: Choose the best executable action from above. Answer: The best executable action from the list above is Move West. The requirement of flat ground is met, as you are facing grass in front of you (west), and it allows you to get closer to the tree for collecting more wood. ============Step: 130, Cumulative Reward: 0.0============ You took action move_west. You see: - stone 4 steps to your north-east - path 2 steps to your east - tree 3 steps to your west - cow 4 steps to your north-west You face grass at your front (west). Your status: - health: 9/9 - food: 5/9 - drink: 4/9 201 - energy: 9/9 Your inventory: - wood: 1 - stone: 4 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move North Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone resource; requires a wood or stone pickaxe to collect. 2. Path: Does not provide resources; allows for easier movement. 3. Tree: Provides wood resource; requires a wood or stone pickaxe or an axe to collect. 4. Cow: Provides food (meat) when killed; requires a weapon, like a sword or bow, to kill. 5. Grass: Provides no direct resources; can be used for empty spaces to move or build on. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_west. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Yes, the requirements are met as the player has both wood_pickaxe and stone_pickaxe in their inventory. 2. Path: Yes, no specific requirements needed to interact with the path. The player can walk on it. 3. Tree: Yes, the requirements are met as the player has both wood_pickaxe and stone_pickaxe in their inventory. An axe would be more efficient, but it is not necessary. 4. Cow: The player has not crafted a sword yet, but they have the necessary materials (wood and stone) to craft one. So, currently, the requirements are not met for interaction, but the player can craft a weapon to meet the requirement. 5. Grass: Yes, no specific requirements needed to interact with grass. The player can walk on it or build on it. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Craft a weapon (wood or stone sword) to kill the cow for food. Priority: 5/5, as the player‚Äôs food level is currently at 5/9. 2. Approach and collect wood from the tree to gather more building and crafting materials. Priority: 4/5, as wood is a crucial resource for various tasks, and the player currently has only 1 wood in their inventory. 3. Find a water source to replenish the player‚Äôs drink level. Priority: 4/5, as the player‚Äôs drink level is currently at 4/9, and it will need to be replenished soon. Question: What are the requirements for the top sub-task? What should the player do first? Answer: The requirements for the top sub-task (Craft a weapon to kill the cow for food) are: 1. Have enough wood or stone in the inventory. 2. Place a table (if not already placed) to use for crafting. The player currently has 1 wood and 4 stone in their inventory, which is enough to craft either a wood or stone sword. Since the player has enough materials, they should first ensure that a crafting table is placed. If there is no existing table in the vicinity, the player should place one using the wood in their inventory. After that, the player can proceed to craft either a wood or stone sword using the placed table. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1 - Place Table (Requirement: Wood in inventory; Player has 1 wood) 2. Priority 2 - Make Wood Sword (Requirement: Nearby table; wood in inventory; Player has 1 wood) 3. Priority 3 - Make Stone Sword (Requirement: Nearby table; wood and stone in inventory; Player has 1 wood, 4 stone) 4. Priority 4 - Move North (Requirement: Flat ground above the agent; path or grass above the agent) 5. Priority 5 - Move West (Towards the cow; Requirement: Flat ground to the agent‚Äôs left; path or grass to the agent‚Äôs west) 1) Place a table to be able to craft a weapon 2) Make a wood sword to kill the cow using available wood in inventory 3) Alternatively, make a stone sword since a stone sword is stronger and the player has enough stone 4) Move north towards the cow to get closer for interaction 5) Move west towards the cow to reach it before the player‚Äôs food depletes Question: For each action in the list, are the requirements met? Answer: 1. Place Table - Yes, the requirement of having wood in the inventory is met (Player has 1 wood). 2. Make Wood Sword - No, the requirement of having a nearby table is not met since the player has not placed a table yet. The wood requirement is met (Player has 1 wood). 3. Make Stone Sword - No, the requirement of having a nearby table is not met since the player has not placed a table yet. The wood and stone requirements are met (Player has 1 wood and 4 stone). 4. Move North - Yes, the flat ground above the agent is met since there is either a path or grass above the player. 5. Move West - Yes, the flat ground to the agent‚Äôs left is met since there is either a path or grass to the player‚Äôs west. Question: Did the last player action succeed? Why? Answer: Yes, the last player action move_west succeeded because there was flat ground (grass) to the west of the player, allowing them to move in that direction. Question: Choose the best executable action from above. Answer: 202 The best executable action from the list is Move North since its requirements are met, and it will bring the player closer to the cow. ============Step: 131, Cumulative Reward: 0.0============ You took action move_north. You see: - stone 3 steps to your east - path 3 steps to your south-east - tree 4 steps to your west - lava 7 steps to your north-east - cow 3 steps to your north-west You face grass at your front (north). Your status: - health: 9/9 - food: 5/9 - drink: 4/9 - energy: 9/9 Your inventory: - wood: 1 - stone: 4 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move West Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone resource, requires a wood or better pickaxe to mine. 2. Path: Provides no direct resources, but might lead to other locations or resources. 3. Tree: Provides wood resource, requires an axe or can be punched to collect. 4. Lava: No direct resource, but can be used as a fuel source if you have a bucket to collect it. 5. Cow: Provides meat and leather when killed, requires a weapon or tool to attack. 6. Grass: Provides wheat seeds when broken, requires no tool to collect. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_north. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Yes, you have a wood_pickaxe and a stone_pickaxe in your inventory, so you can mine the stone. 2. Path: Yes, there are no requirements to follow a path; you can simply walk along it. 3. Tree: Yes, while you do not have an axe, you can still gather wood by punching the tree with your hands (no tool required ). 4. Lava: No, you do not have a bucket in your inventory to collect the lava as a fuel source. 5. Cow: Yes, you can attack the cow with a weapon (like the stone_pickaxe in your inventory) or even with your hands. 6. Grass: Yes, there are no requirements to collect wheat seeds from grass; you can break it with any tool or your hands. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Collect more wood from the tree (Priority: 4/5) - Gathering additional wood is important for crafting tools, shelters, and other items in the game. 2. Follow the path to find other resources or locations (Priority: 3/5) - Exploring the path may lead you to other valuable resources, and it might be worth your time to investigate. 3. Kill the cow for meat and leather (Priority: 2/5) - Killing the cow will provide you with food (meat) and possibly leather, useful for crafting armor and increasing your survival chances. However, make sure to preserve some cows for breeding purposes. Question: What are the requirements for the top sub-task? What should the player do first? Answer: The requirements for the top sub-task (Collect more wood from the tree) are: 1. Be within reach of a tree. 2. Have a tool (preferably an axe) or use your hands to collect wood. Given the current situation, the first thing the player should do is move towards the tree, which is 4 steps to the west. Then, use the wood_pickaxe or your hands to gather wood from the tree. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move West: Requirement: You have flat ground to your west. (This will bring you closer to the tree, which is 4 steps west) 2. Priority 2: Move West (again): Requirement: Same as step 1. (Continuing to move towards the tree) 3. Priority 3: Move West (one more time): Requirement: Same as step 1. (You will be right in front of the tree) 203 4. Priority 4: Do (Gather wood from the tree): Requirement: You are facing a tree and are within reach; have a wood_pickaxe, an axe (if available), or use your hands. 5. Priority 5: Move South: Requirement: You have flat ground to your south. (Returning to the path to proceed further) Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Move West: Requirement: You have flat ground to your west. (This will bring you closer to the tree, which is 4 steps west) - Yes, the requirement is met; you face grass at your front (west). 2. Priority 2: Move West (again): Requirement: Same as step 1. (Continuing to move towards the tree) - Cannot be determined from the current observation. You need to observe your surroundings after completing Priority 1 action. 3. Priority 3: Move West (one more time): Requirement: Same as step 1. (You will be right in front of the tree) - Same as Priority 2 action, we cannot determine if the requirement is met from the current observation. Observe the surroundings after completing Priority 2 action. 4. Priority 4: Do (Gather wood from the tree): Requirement: You are facing a tree and are within reach; have a wood_pickaxe, an axe (if available), or use your hands. - Cannot be determined from the current observation. You need to observe your surroundings after completing Priority 3 action to confirm if the requirement is met. 5. Priority 5: Move South: Requirement: You have flat ground to your south. (Returning to the path to proceed further) - Yes, the requirement is met; since you have just moved north in the previous step, the ground to your south should be flat and navigable. Question: Did the last player action succeed? Why? Answer: Yes, the last player action move_north succeeded because there was flat ground (grass) in the north direction where the player was facing, allowing the player to move there. Question: Choose the best executable action from above. Answer: The best executable action from the list is Priority 1: Move West because its requirement (having flat ground to your west) is met, and it will bring you closer to the tree for gathering wood. ============Step: 132, Cumulative Reward: 0.0============ You took action move_west. You see: - stone 4 steps to your east - path 4 steps to your south-east - tree 3 steps to your west - cow 3 steps to your north-west You face grass at your front (west). Your status: - health: 9/9 - food: 5/9 - drink: 4/9 - energy: 9/9 Your inventory: - wood: 1 - stone: 4 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Place Table Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone resource; requires a wood_pickaxe or better to collect. 2. Path: Provides easier movement; no requirement to use. 3. Tree: Provides wood resource; requires no specific tool to collect, but a wood_pickaxe or better is recommended. 4. Lava: Dangerous, avoid getting too close; no direct resource provided. 5. Cow: Provides food when defeated; no specific tool required, but using a sword or other weapon is recommended. 6. Grass: Provides a place to walk on; no requirement to use. 7. Wood_pickaxe (in inventory): Used for collecting wood and stone; requires wood to craft. 8. Stone_pickaxe (in inventory): Used for collecting iron and better materials; requires wood and stone to craft. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_west. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Yes, the requirements are met. You have a wood_pickaxe and stone_pickaxe in your inventory, which allows you to collect stone. 2. Path: Yes, the requirements are met. The path provides easier movement, and you can walk on it without any specific tool or requirement. 204 3. Tree: Yes, the requirements are met. You have a wood_pickaxe in your inventory, which can be used to collect wood from the tree more efficiently. 4. Lava: N/A, interaction is not recommended as lava is dangerous and you should avoid getting too close. 5. Cow: Yes, the requirements are met. Although no specific tool is required, using a weapon to defeat the cow for food is recommended. You can create a sword with the materials in your inventory. 6. Grass: Yes, the requirements are met. You can walk on the grass without any specific tool or requirement. 7. Wood_pickaxe (in inventory): N/A, this object is already crafted and in your inventory. 8. Stone_pickaxe (in inventory): N/A, this object is already crafted and in your inventory. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Priority 4/5: Craft a weapon (such as a wood or stone sword) using materials in your inventory to protect yourself and defeat the cow for food, as your food level is 5/9. 2. Priority 5/5: Locate and drink from the closest water source (lake, river, etc.) as your drink level is 4/9. 3. Priority 3/5: Collect more wood and stone resources by interacting with the nearby tree and stone objects to build a shelter and prepare for future crafting needs. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Requirements for crafting a weapon (wood or stone sword): - A table to craft the weapon - Sufficient wood and stone in the inventory Since you already have enough wood and stone in your inventory, the first thing you should do is to place a table using your available wood. Afterwards, you can use the table to craft a weapon, either a wood or stone sword, to protect yourself and defeat the cow for food. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Place Table (Priority 1): - Requirement: Wood in inventory 2. Make Stone Sword (Priority 2): - Requirement: Nearby table and wood, stone in inventory 3. Move North (Priority 3): - Requirement: Flat ground above the agent 4. Perform Do with Stone Sword (Priority 4): - Requirement: Facing the cow and having a stone sword 5. Drink from a nearby water source or lake (Priority 5): - Requirement: Locate and face water source These actions will allow the player to set up a crafting table, create a weapon to defend themselves, get closer to the cow, defeat the cow for food, and find and drink water to replenish their thirst. Question: For each action in the list, are the requirements met? Answer: 1. Place Table (Priority 1): - Requirement: Wood in inventory - Met: Yes (player has 1 wood) 2. Make Stone Sword (Priority 2): - Requirement: Nearby table and wood, stone in inventory - Met: No (player needs to place the table first) 3. Move North (Priority 3): - Requirement: Flat ground above the agent - Met: Yes (player faces grass to the north) 4. Perform Do with Stone Sword (Priority 4): - Requirement: Facing the cow and having a stone sword - Met: No (player needs to make a stone sword first and get closer to the cow) 5. Drink from a nearby water source or lake (Priority 5): - Requirement: Locate and face water source - Met: No (player needs to find and face a water source) Question: Did the last player action succeed? Why? Answer: Yes, the last player action succeeded. The player was able to move west because there was flat ground (grass) in front of the player in that direction. Question: Choose the best executable action from above. Answer: The best executable action from the above list is: 1. Place Table (Priority 1): - Requirement: Wood in inventory - Met: Yes (player has 1 wood) ============Step: 133, Cumulative Reward: 0.0============ You took action place_table. You see: - stone 4 steps to your east 205 - path 4 steps to your south-east - tree 3 steps to your west - cow 2 steps to your north You face grass at your front (west). Your status: - health: 9/9 - food: 5/9 - drink: 4/9 - energy: 9/9 Your inventory: - wood: 1 - stone: 4 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move West Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone resource, requires a wood or better pickaxe to collect. 2. Path: Provides easier movement, no requirements to interact. 3. Tree: Provides wood resource, requires an axe or hands to collect. 4. Cow: Provides food resource, requires a sword or other weapon to defeat. 5. Grass: Provides no critical resources, no interaction requirements. Question: What was the last action taken by the player? Answer: The last action taken by the player was place_table. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Yes, the requirements are met since you have a wood_pickaxe and a stone_pickaxe in your inventory. 2. Path: Yes, the requirements are met as there are no specific requirements to interact with the path. 3. Tree: Yes, the requirements are met even though you don‚Äôt have an axe, you can still collect wood using your hands. 4. Cow: Yes, the requirements are met even though you don‚Äôt have a sword, you can use other means to defeat the cow (such as the wood or stone pickaxe) to obtain food. 5. Grass: Yes, the requirements are met as there are no specific requirements to interact with the grass. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Collect more wood (Priority: 5/5) - Wood is essential for crafting more tools, and you only have one piece of wood in your inventory. Collecting more wood would allow you to build more advanced tools like a sword for defense or an axe for faster wood collection. 2. Restore drink level (Priority: 4/5) - Your drink level is low at 4/9. Find a clean water source like a lake or river and drink from it to restore your thirst level. 3. Defeat the cow for food (Priority: 3/5) - Your food level is at 5/9, which is not critical yet, but defeating the cow would provide you with a food resource to restore your health later when needed. Use one of your pickaxes as a weapon until you can craft a sword for more efficient combat. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Requirements for the top sub-task (Collect more wood): 1. Locate a nearby tree. 2. Have a tool for chopping wood, such as a wood/stone pickaxe or craft an axe for more efficient wood collection if you have enough materials. What should the player do first: - The player should first move towards the nearby tree, which is 3 steps to their west; move_west for 3 steps in a row to reach the tree. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move West Requirement: Flat ground to the west of the agent Purpose: Reach the tree 3 steps to the west for collecting additional wood 2. Priority 2: Move West Requirement: Flat ground to the west of the agent Purpose: Continue moving towards the tree for collecting additional wood 3. Priority 3: Move West Requirement: Flat ground to the west of the agent Purpose: Reach the tree for collecting additional wood 4. Priority 4: Do Requirement: Facing a tree and having a necessary tool, such as a wood or stone pickaxe, which the player already has in their inventory Purpose: Chop down the tree and collect wood 5. Priority 5: Drink Requirement: Must be facing or standing next to a drinkable water source such as a lake or river 206 Purpose: Restore the player‚Äôs thirst level Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Move West Requirement: Flat ground to the west of the agent Status: Met - The player faces grass at their front (west), indicating the ground is flat. 2. Priority 2: Move West Requirement: Flat ground to the west of the agent Status: Can‚Äôt be determined from the current observation - After the player moves west one step, we will need to analyze the new observation to check if the ground is still flat to the west. 3. Priority 3: Move West Requirement: Flat ground to the west of the agent Status: Can‚Äôt be determined from the current observation - The player must move twice before checking if the ground is still flat to the west. 4. Priority 4: Do Requirement: Facing a tree and having a necessary tool, such as a wood or stone pickaxe, which the player already has in their inventory Status: Partially met - The player has the necessary tools (wood_pickaxe and stone_pickaxe) in their inventory. The player must move closer to the tree and face it before they can use ‚ÄôDo‚Äô to chop down the tree. 5. Priority 5: Drink Requirement: Must be facing or standing next to a drinkable water source such as a lake or river Status: Not met - The current observation does not mention any drinkable water sources nearby. Question: Did the last player action succeed? Why? Answer: Yes, the last player action succeeded because the player had enough wood in their inventory to place a table, and there were no obstacles or restrictions mentioned in the observations that would prevent them from doing so. Question: Choose the best executable action from above. Answer: The best executable action from the list above is Priority 1: Move West, as its requirement of flat ground to the west of the agent is met. ============Step: 134, Cumulative Reward: 0.0============ You took action move_west. You see: - path 5 steps to your south-east - tree 2 steps to your west - cow 3 steps to your north-east You face grass at your front (west). Your status: - health: 9/9 - food: 5/9 - drink: 4/9 - energy: 9/9 Your inventory: - wood: 1 - stone: 4 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Make Stone Sword Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: The stone provides material for crafting tools, weapons, and furnaces. The requirement to collect stone is to have a wood pickaxe. 2. Path: The path is not a resource provider, but it serves as a safe passage to navigate the game world without facing resistance from the terrain. 3. Tree: The tree provides wood, which is needed for crafting tools, weapons, and furniture. No specific requirements are needed to collect wood, but having an axe can speed up the process. 4. Cow: The cow provides food (meat) to restore the player‚Äôs food level. The requirement to collect food from the cow is to have a weapon, like a wood or stone sword, to defeat it. 5. Grass: Grass does not provide any resources directly but can be a flat surface to move on or place items. No requirements are needed to interact with grass. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_west. Question: For each object in the list, are the requirements met for interaction? Answer: 207 1. Stone: Yes, the requirements are met for interaction, as the player has a wood_pickaxe in their inventory. 2. Path: As there are no requirements for interacting with the path, this can be considered as met. 3. Tree: Yes, the requirements are met for interaction. While there‚Äôs no specific requirement for collecting wood, having an axe can speed up the process. However, even without an axe, the player can still collect wood. 4. Cow: The player does not have a sword (wood or stone) in their inventory, so the requirements for interaction with the cow (to collect food) are not met. 5. Grass: As there are no requirements for interacting with grass, this can be considered as met. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Craft a weapon (Priority: 5/5): Crafting either a wood sword or a stone sword should be the player‚Äôs top priority as they need a weapon to defend themselves and defeat cows to collect food. 2. Collect food (Priority: 4/5): The player has a low food level (5/9), so defeating a cow is crucial for obtaining food and replenishing their food meter. This task will become possible once the player has crafted a weapon. 3. Collect drink (Priority: 3/5): The player‚Äôs drink level is at 4/9, so finding a water source, like a lake or river, will help replenish their thirst. This task can be performed while focusing on crafting a weapon and collecting food. Question: What are the requirements for the top sub-task? What should the player do first? Answer: For the top sub-task (Crafting a weapon), the requirements are: 1. Crafting a Wood Sword: - Requires a nearby placed table - Wood in inventory (which the player already has: 1 wood) 2. Crafting a Stone Sword: - Requires a nearby placed table - Wood and stone in inventory (which the player already has: 1 wood and 4 stone) The player already placed a table in Step 266, and they have the necessary materials in their inventory. Therefore, the player should craft a weapon (either a wood or stone sword) first using the placed table. Crafting a stone sword would be more effective, as it is a stronger weapon compared to the wood sword. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Make Stone Sword - Requirements: Nearby placed table, wood, and stone in inventory (player has: 1 wood, 4 stone, and placed table) 2. Priority 2: Move North-East - Requirements: Flat ground to the north-east of the agent (player faces grass in front, and there‚Äôs a cow 3 steps to the north-east) 3. Priority 3: Do (attack cow) - Requirements: Facing a creature (cow); have necessary tool (stone sword) (player will have stone sword after Priority 1, and cow nearby after Priority 2) 4. Priority 4: Eat Cow - Requirements: No specific requirements (player‚Äôs current food level is 5/9, eating cow will restore health) 5. Priority 5: Move South-East - Requirements: Flat ground to the south-east of the agent (there‚Äôs a path 5 steps to the player‚Äôs south-east) Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Make Stone Sword - Yes, requirements are met: the player has a nearby placed table, wood (1), and stone (4) in the inventory. 2. Priority 2: Move North-East - Yes, requirements are met: the player faces grass, and there‚Äôs a flat ground in the north-east direction. 3. Priority 3: Do (attack cow) - The requirements will be met after completing Priority 1 and Priority 2 actions: the player will have a stone sword, and the cow will be nearby after moving north-east. 4. Priority 4: Eat Cow - The requirements will be met after completing Priority 3 action: the player will attack and defeat the cow to eat it and restore health. 5. Proiirty 5: Move South-East - Yes, the requirements are met: the player has a flat ground to the south-east direction, and there‚Äôs a path 5 steps away . Question: Did the last player action succeed? Why? Answer: Yes, the last player action, move_west, succeeded because there was flat ground (grass) to the west, allowing the player to move in that direction. Question: Choose the best executable action from above. Answer: The best executable action from the list is Priority 1: Make Stone Sword, as the requirements are met and it is the first priority action. The player has a nearby placed table, wood (1), and stone (4) in the inventory, which are required for crafting the stone sword. 208 ============Step: 135, Cumulative Reward: 0.0============ You took action make_stone_sword. You see: - path 5 steps to your south-east - tree 2 steps to your west - cow 3 steps to your north-east You face grass at your front (west). Your status: - health: 9/9 - food: 5/9 - drink: 4/9 - energy: 9/9 Your inventory: - wood: 1 - stone: 4 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move West Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Path: Provides a way to navigate the terrain with ease. No requirement. 2. Tree: Provides wood when chopped. Requires a wood or better pickaxe to chop. 3. Cow: Provides food when killed. Requires a weapon (e.g., wood/stone/iron sword) to kill. 4. Grass: Provides no resources. No requirement. This is what the player currently faces. Note: The player‚Äôs inventory and status are not objects in the observation, but provide information about the player‚Äôs resources and health. Question: What was the last action taken by the player? Answer: The last action taken by the player was make_stone_sword. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Path: No requirement to interact. The path is 5 steps to your south-east, so the player can move towards it. 2. Tree: Requires a wood or better pickaxe to chop. The player has both a wood_pickaxe and stone_pickaxe in their inventory, so the requirements are met. 3. Cow: Requires a weapon to kill. Although the player just made a stone sword in the previous step, the current observation does not show the stone sword in the player‚Äôs inventory. This observation might be outdated or there might be an error in the game state. Based on this observation, the requirements are not met. 4. Grass: No resource provided and no requirement for interaction. The player can move forward (west) without any issue. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Priority 4/5: Find a source of water to drink. The player‚Äôs thirst level is only 4/9, so finding water would be crucial to replenish their thirst. 2. Priority 3/5: Chopping the tree to collect more wood. The player only has 1 wood in their inventory, and having more wood would be helpful for future crafting and building activities. 3. Priority 5/5: Check the player‚Äôs inventory for the recently crafted stone sword. If the sword is missing, try crafting another stone sword to be equipped for any combat situations that might arise, such as defending against monsters or killing the cow for food. The player‚Äôs food level is 5/9, so hunting the cow could help to replenish this resource. Question: What are the requirements for the top sub-task? What should the player do first? Answer: For the top sub-task of finding a source of water to drink: Requirements: 1. Locate a body of water such as a lake, river, or pond. 2. Have an empty container to collect the water or be close enough to drink directly from the source. The player should first explore their surroundings to locate a body of water nearby. They can move in any direction (north, south, east, or west) to find a water source. Once they find a water source, they should interact with it to drink and replenish their thirst level. If they have an empty container, they can use it to collect and store water for later consumption. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move North, East, South, or West (depending on the direction of the water source) - Requirement: Flat ground in the chosen direction. 2. Priority 2: Drink water (Do) - Requirement: Facing a water source (lake, river, or pond); close enough to interact. 3. Priority 3: Move North, East, South, or West (to approach a tree for collecting wood) - Requirement: Flat ground in the chosen direction. 209 4. Priority 4: Collect Wood (Do) - Requirement: Facing a tree; have the necessary tool (wood_pickaxe) in the inventory. 5. Priority 5: Craft a Wood Sword (make_wood_sword) - Requirement: Nearby table; wood in the inventory. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Move North, East, South, or West (to find a water source) - Yes, the requirement of flat ground in the chosen direction is met. However, the player needs to discover a water source first. 2. Priority 2: Drink water (Do) - No, the requirement of facing a water source is not met. The player needs to find a water source before they can drink. 3. Priority 3: Move North, East, South, or West (to approach a tree for collecting wood) - Yes, the requirement of flat ground in the chosen direction is met. The tree is 2 steps to the west. 4. Priority 4: Collect Wood (Do) - No, the player is not currently facing a tree. They must move closer to the tree and face it to meet the requirement. 5. Priority 5: Craft a Wood Sword (make_wood_sword) - No, the requirement of having a nearby table is not met. The player needs to place a table first to craft a wood sword. Question: Did the last player action succeed? Why? Answer: It is unclear whether the last player action make_stone_sword succeeded, as there is no indication of success or failure in the provided observations. However, the player‚Äôs inventory does not show a stone sword, which suggests that the action might not have succeeded. Question: Choose the best executable action from above. Answer: The best executable action from the list above is Priority 3: Move West (to approach a tree for collecting wood), as it satisfies the requirement of flat ground in the chosen direction and helps the player get closer to a valuable resource. ============Step: 136, Cumulative Reward: 0.0============ You took action move_west. You see: - grass 1 steps to your north - cow 4 steps to your north-east You face tree at your front (west). Your status: - health: 9/9 - food: 5/9 - drink: 3/9 - energy: 9/9 Your inventory: - wood: 1 - stone: 4 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Make Wood Sword Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Path: The path provides easy navigation and requires no interaction. 2. Tree (2 steps to the west): The tree provides wood when chopped with a wood or stone pickaxe. The requirement is having a wood_pickaxe or stone_pickaxe in your inventory. 3. Cow (4 steps to the north-east): The cow provides food when killed. The requirement is having a wood, stone, or iron sword in your inventory to kill the cow. 4. Grass (1 step to the north): The grass provides no significant resource but can be cleared for navigation or construction. Your inventory resources: 5. Wood: Wood is a basic crafting material and is required for crafting items like pickaxes, swords, and tables. 6. Stone: Stone is a crafting material and is required for crafting items like stone pickaxes, swords, and furnaces. 7. Coal: Coal is a fuel resource used for smelting iron in the furnace. 8. Iron: Iron is a crafting material and is required for crafting items like iron pickaxes and swords. 9. Wood_pickaxe: The wood pickaxe allows you to collect stone and coal. It requires wood for crafting. 10. Stone_pickaxe: The stone pickaxe allows you to collect iron and has a faster chopping speed. It requires wood and stone for crafting. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_west. Question: For each object in the list, are the requirements met for interaction? Answer: 210 1. Path: Yes, the requirements are met for interaction as there are no additional requirements to use the path. 2. Tree (2 steps to the west): Yes, the requirements are met for interaction since you have both a wood_pickaxe and a stone_pickaxe in your inventory. 3. Cow (4 steps to the north-east): The requirements for interaction are not met since you do not have a wood, stone, or iron sword in your inventory to kill the cow. 4. Grass (1 step to the north): Yes, the requirements are met for interaction as there are no additional requirements to clear or walk over the grass. Your inventory resources: 5. Wood: Yes, the requirements are met for using wood as a crafting material in recipes that call for it. 6. Stone: Yes, the requirements are met for using stone as a crafting material in recipes that call for it. 7. Coal: Yes, the requirements are met for using coal as a fuel resource in the furnace. 8. Iron: Yes, the requirements are met for using iron as a crafting material in recipes that call for it. 9. Wood_pickaxe: Yes, the requirements are met for using the wood pickaxe since you have one in your inventory. 10. Stone_pickaxe: Yes, the requirements are met for using the stone pickaxe since you have one in your inventory. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Increase food level (Priority: 5/5): Since the food level is 5/9, it is important to find and kill a cow or develop another food source to restore the food level. 2. Increase drink level (Priority: 4/5): The drink level is 3/9, which is low, and the player should look for a water source like a lake or river to drink from and restore the drink level. 3. Craft a sword (Priority: 3/5): Crafting a wood, stone, or iron sword is necessary to defend against monsters and kill the cow for food. The player has enough resources in their inventory to craft a sword at a table. Question: What are the requirements for the top sub-task? What should the player do first? Answer: The top sub-task is to increase the food level. The requirements for this task are: 1. Locate a food source, such as a cow or a fruit, to kill or harvest. 2. Have a weapon (wood, stone, or iron sword) to kill the cow. The player should first craft a sword since they already have the necessary resources in their inventory. They will need to find and place a table, and then craft the sword using the materials available. Once they have a sword, they can kill the cow, which is 4 steps to their north-east, to obtain food and increase their food level. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Make Wood Sword (Priority 5): This action requires the player to be near a table and have wood in their inventory. The player currently has 1 wood in their inventory, which is enough to make a wood sword. This action will provide the player with a weapon to defend themselves and kill the cow for food. 2. Move North (Priority 4): This action requires a flat ground above of the agent. The player wants to get closer to the cow, which is 4 steps to their north-east. Moving north will bring the player one step closer to the cow. 3. Move East (Priority 3): This action requires a flat ground to the right of the agent. After moving north, moving east will bring the player even closer to the cow, which is their primary target for obtaining food. 4. Do (Priority 2): This action requires the player to face a creature (in this case, the cow) and have the necessary tool ( the wood sword they crafted). Once the player is close enough to the cow and facing it, they can perform the Do action to kill the cow and collect food. 5. Sleep (Priority 1): This action requires the player‚Äôs energy level to be below maximum. After obtaining food from the cow, the player may choose to sleep (when necessary) to restore energy and allow time for other resources (like trees, fruits, etc.) to spawn. However, this should only be done when it is safe to do so (e.g., near a shelter or a protected area). Question: For each action in the list, are the requirements met? Answer: 1. Make Wood Sword: Yes, the requirements are met. The player has 1 wood in their inventory, and they have previously built a table (from previous observations). 2. Move North: Yes, the requirements are met. The flat ground above the agent (grass) is available for the player to move north. 3. Move East: Yes, the requirements are met. After moving north, the flat ground would be available to the agent‚Äôs right for them to move east. 4. Do: No, the requirements are not met yet. The player first needs to get closer to the cow (by performing the Move North and Move East actions) and face the cow before they can perform the Do action using the wood sword. 5. Sleep: Yes, the requirements are met. The player‚Äôs energy level is currently 9/9, which is below the maximum. They can sleep when it is deemed necessary and safe to do so. However, it is not currently an urgent action. Question: Did the last player action succeed? Why? Answer: Yes, the last player action move_west succeeded. The player was able to move west because there were no obstacles in the way and the ground was flat. Question: Choose the best executable action from above. 211 Answer: The best executable action from the list above is: 1. Make Wood Sword: The player has 1 wood in their inventory, and they have previously built a table. Crafting a wood sword will provide the player with a weapon to defend themselves and kill the cow for food. ============Step: 137, Cumulative Reward: 0.0============ You took action make_wood_sword. You see: - grass 1 steps to your north - cow 5 steps to your north-east You face tree at your front (west). Your status: - health: 9/9 - food: 5/9 - drink: 3/9 - energy: 8/9 Your inventory: - wood: 1 - stone: 4 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move North Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass: Provides no resource but can be used as a flat ground to move on; no requirement. 2. Cow: Provides food when the player decides to eat it; requires wood sword (crafted in previous step) to be able to eat the cow. 3. Tree: Provides wood when the player decides to collect it; requires wood_pickaxe in inventory (already available). 4. Wood (in inventory): Required for crafting wood swords, wood pickaxes, or placing tables; obtained from trees. 5. Stone (in inventory): Required for crafting stone swords, stone pickaxes, or placing furnaces; obtained using wood_pickaxe or stone_pickaxe on stone block. 6. Coal (in inventory): Required for smelting and crafting iron tools and weapons; obtained using wood_pickaxe or stone_pickaxe on coal block. 7. Iron (in inventory): Required for crafting iron tools and weapons; obtained using stone_pickaxe on iron block. 8. Wood_pickaxe (in inventory): Used for collecting resources like wood, stone, and coal; no requirement. 9. Stone_pickaxe (in inventory): Used for collecting resources like stone, coal, and iron; requires crafting at the table with wood and stone available in inventory. Question: What was the last action taken by the player? Answer: The last action taken by the player was making a wood sword. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass: No specific interaction required, the requirement for moving on grass (flat ground surrounding the player) is met. 2. Cow: Yes, the wood_sword is available in the inventory, so the player can interact with and eat the cow. 3. Tree: Yes, the wood_pickaxe is available in the inventory, so the player can interact with and collect wood from the tree. 4. Wood (in inventory): N/A (already collected) 5. Stone (in inventory): N/A (already collected) 6. Coal (in inventory): N/A (already collected) 7. Iron (in inventory): N/A (already collected) 8. Wood_pickaxe (in inventory): N/A (already crafted) 9. Stone_pickaxe (in inventory): N/A (already crafted) Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Drink water to restore thirst (Priority: 5/5): Locate a nearby lake or river to drink water, as the player‚Äôs thirst level is at 3/9. 2. Collect more wood (Priority: 4/5): Collect wood from the tree in front of the player (to the west) using the wood_pickaxe to ensure enough resources for crafting and building in the future. 3. Eat the cow to restore food (Priority: 3/5): Move towards the cow by going north-east and eat the cow using the wood_sword to restore the player‚Äôs food level, which is currently at 5/9. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Top Sub-Task: Drink water to restore thirst (Priority: 5/5) Requirements: 1. Locate a nearby lake or river as the source of water. 2. Move towards the water source. The player should first locate a nearby lake or river as a source of water to drink from. Once the water source is found, the player should move towards it in order to drink and restore their thirst level. 212 Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Action: Move East (Priority: 5/5) Requirement: Flat ground right to the agent Reason: Move towards the water source for drinking. 2. Action: Move North (Priority: 5/5) Requirement: Flat ground above the agent Reason: Move towards the water source for drinking. 3. Action: Move West (Priority: 4/5) Requirement: Flat ground left to the agent Reason: Explore the surroundings and look for water sources, if not found to the east or north. 4. Action: Move South (Priority: 4/5) Requirement: Flat ground below the agent Reason: Explore the surroundings and look for water sources, if not found to the east or north. 5. Action: Do (Priority: 3/5) Requirement: Facing creature or material; have necessary tool Reason: Interact with any creatures or materials that can be helpful for survival, like collecting resources or defending against monsters. Question: For each action in the list, are the requirements met? Answer: 1. Action: Move East Requirement: Flat ground right to the agent Yes, the requirement is met as there is no information indicating that the ground to the agent‚Äôs right is not flat. 2. Action: Move North Requirement: Flat ground above the agent Yes, the requirement is met as the agent can see grass one step to the north, indicating that the ground is flat. 3. Action: Move West Requirement: Flat ground left to the agent Yes, the requirement is met since the agent successfully took this action in the previous step (Step 272). 4. Action: Move South Requirement: Flat ground below the agent There is no information about the ground to the agent‚Äôs south in the player observations. Thus, it is not possible to determine if the requirement is met. 5. Action: Do Requirement: Facing creature or material; have necessary tool The agent is currently facing a tree (material), but there is no information about whether the agent has the necessary tool (wood_axe) in the inventory. Thus, it is not possible to determine if the requirement is met. Question: Did the last player action succeed? Why? Answer: It‚Äôs not clear if the last player action succeeded, as there is no mention of a wood sword in the inventory in the Player Observation Step 274. Additionally, the observation numbers seem to skip from 272 to 274, so there might be missing information. Question: Choose the best executable action from above. Answer: The best executable action from the list is to Move North, as it meets the requirement (flat ground above the agent) and brings the player closer to the water source for drinking. ============Step: 138, Cumulative Reward: 0.0============ You took action move_north. You see: - grass 1 steps to your west - cow 3 steps to your east You face tree at your front (north). Your status: - health: 9/9 - food: 5/9 - drink: 3/9 - energy: 8/9 Your inventory: - wood: 1 - stone: 4 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move East Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass: 213 Resource it provides: A flat ground for moving and placing objects. Requirement: None. 2. Cow: Resource it provides: Food (meat) when defeated. Requirement: A weapon (wood sword, stone sword, or iron sword) to defeat the cow. 3. Tree: Resource it provides: Wood when chopped down. Requirement: A tool (wood pickaxe, stone pickaxe, or iron pickaxe) to chop down the tree. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_north. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass: Requirements met: Yes, the grass can be moved on or used for placing objects without any requirements. 2. Cow: Requirements met: Yes, you have a wood sword in your inventory which can be used to defeat the cow and collect food. 3. Tree: Requirements met: Yes, you have a wood_pickaxe and a stone_pickaxe in your inventory, both can be used to chop down the tree and collect wood. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Drink water to restore thirst (Priority: 5/5) Your drink level is currently at 3/9, so finding a source of water like a lake should be a priority to avoid dehydration. 2. Defeat the cow to collect food (Priority: 4/5) Your food level is at 5/9, and defeating the cow will provide you with meat to increase your food supply. 3. Chop down the tree to collect more wood (Priority: 3/5) Although you currently have one wood in your inventory, collecting more wood will allow you to craft additional tools and build items as needed. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Top sub-task: Drink water to restore thirst (Priority: 5/5) Requirements: Find a water source such as a lake or river and drink from it. What should the player do first: Explore the area by moving in different directions (north, south, east, or west) to locate a water source. Once a water source is found, approach it and perform the drink action to restore the thirst level. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Action: Move East (Priority: 5/5) Requirement: Flat ground to the right (east) of the agent. Purpose: Move closer to the cow, which could be used as a food source. 2. Action: Move North (Priority: 4/5) Requirement: Flat ground above (north) of the agent. Purpose: Explore the area to find a water source to restore thirst. 3. Action: Move West (Priority: 3/5) Requirement: Flat ground to the left (west) of the agent. Purpose: Search for a water source and other resources in the opposite direction. 4. Action: Move South (Priority: 2/5) Requirement: Flat ground below (south) of the agent. Purpose: Explore the surroundings to find a water source, food source or other resources. 5. Action: Sleep (Priority: 1/5) Requirement: Energy level is below maximum. Purpose: Restore energy levels, although currently the energy level is not a priority as it‚Äôs at 8/9. Question: For each action in the list, are the requirements met? Answer: 1. Action: Move East Requirement: Flat ground to the right (east) of the agent. Status: Met, since there was no mention of an obstacle to the east. 2. Action: Move North Requirement: Flat ground above (north) of the agent. Status: Met, as the agent successfully moved north in the previous observation step. 3. Action: Move West Requirement: Flat ground to the left (west) of the agent. Status: Met, since there was no mention of an obstacle to the west. 4. Action: Move South Requirement: Flat ground below (south) of the agent. Status: Met, since there was no mention of an obstacle to the south. 5. Action: Sleep Requirement: Energy level is below maximum. 214 Status: Not Met, as the agent‚Äôs energy level is currently 8/9, and sleeping would only be needed when energy levels are lower or closer to depletion. Question: Did the last player action succeed? Why? Answer: Yes, the last player action (move_north) succeeded because there was flat ground (grass) to the north of the player, allowing them to move in that direction. Question: Choose the best executable action from above. Answer: The best executable action from the list is to move east (Action 1) as it has the highest priority (5/5) and its requirement is met. This action helps the player move closer to the cow, which can be used as a food source. ============Step: 139, Cumulative Reward: 0.0============ You took action move_east. You see: - path 6 steps to your south-east - tree 2 steps to your north-west - cow 2 steps to your east You face grass at your front (east). Your status: - health: 9/9 - food: 5/9 - drink: 3/9 - energy: 8/9 Your inventory: - wood: 1 - stone: 4 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Do Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass: Provides no resources, no requirement. 2. Path: Provides no resources, no requirement. 3. Tree: Provides wood, requires wood_pickaxe or stone_pickaxe. 4. Cow: Provides food, requires wood_sword or stone_sword. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_east. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass: No requirements needed for interaction; requirements met. 2. Path: No requirements needed for interaction; requirements met. 3. Tree: Requires wood_pickaxe or stone_pickaxe; you have a wood_pickaxe and a stone_pickaxe, so requirements met. 4. Cow: Requires wood_sword or stone_sword; you don‚Äôt have either of them, so requirements not met. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Craft a wood_sword or a stone_sword (Priority: 5) - This will allow you to interact with and obtain resources from the cow, providing food to restore your food meter. 2. Find a water source to drink from (Priority: 4) - Drinking from a water source will help restore your drink meter, ensuring your survival. 3. Collect more wood (Priority: 3) - Wood is a crucial resource for crafting various essential tools and items; you currently have only 1 unit of wood, so collecting more will be useful. Question: What are the requirements for the top sub-task? What should the player do first? Answer: For the top sub-task, which is crafting a wood_sword or a stone_sword, the requirements are as follows: 1. Wood Sword: - Place a crafting table (requires wood in inventory) - Wood (2 units) in inventory 2. Stone Sword: - Place a crafting table (requires wood in inventory) - Wood (1 unit) and stone (2 units) in inventory Since the player already has 1 unit of wood and 4 units of stone, they can craft a stone_sword. However, the player needs to have a crafting table. What the player should do first: 1. Place a crafting table using the wood from their inventory. 2. Craft a stone_sword using the wood and stone in their inventory. 215 Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Place Table (Place_Table) Requirement: Wood in inventory (Player has 1 unit of wood) 2. Priority 2: Make Stone Sword (Make_Stone_Sword) Requirement: Nearby table; wood (1 unit) and stone (2 units) in inventory (Player has a table, 1 unit of wood, and 4 units of stone) 3. Priority 3: Move to Cow (Move_East) Requirement: Flat ground right to the agent (The cow is 2 steps to the player‚Äôs east) 4. Priority 4: Defeat Cow (Do) Requirement: Facing the creature and having a necessary tool (Player needs to be facing the cow and have a sword) 5. Priority 5: Drink Water (Collect_Drink) Requirement: Player near a water source (Player‚Äôs thirst level is 3/9, so drinking water should be a priority) Question: For each action in the list, are the requirements met? Answer: 1. Place Table (Place_Table): Yes, the requirement is met as the player has 1 unit of wood in their inventory. 2. Make Stone Sword (Make_Stone_Sword): No, the requirement is not met because the player needs a nearby table. However, since the player has the necessary materials (1 unit of wood and 4 units of stone), they can first place the table and then make the stone sword. 3. Move to Cow (Move_East): Yes, the requirement is met as the cow is 2 steps to the player‚Äôs east and there is flat ground. 4. Defeat Cow (Do): No, the requirement is not met because the player needs to have a sword and be facing the cow. Once the player has crafted the stone sword and is facing the cow, they can complete this action. 5. Drink Water (Collect_Drink): No, the requirement is not met because the player is not close to a water source. They need to find a water source first. Question: Did the last player action succeed? Why? Answer: Yes, the last player action succeeded. The player moved east because there was a grass, which is a flat ground, in front of the player, allowing them to move in that direction. Question: Choose the best executable action from above. Answer: The best executable action from the list above is Move to Cow (Move_East), as the requirement is met with flat ground and the cow is 2 steps to the player‚Äôs east. ============Step: 140, Cumulative Reward: 1.0============ You took action do. You see: - path 6 steps to your south-east - tree 2 steps to your north-west - cow 3 steps to your south-east You face grass at your front (east). Your status: - health: 9/9 - food: 4/9 - drink: 3/9 - energy: 8/9 Your inventory: - sapling: 1 - wood: 1 - stone: 4 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Place Table Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Path: The path provides easier navigation and no specific resources. Requirement: None. 2. Tree: The tree provides wood as a resource. Requirement: Wood pickaxe. 3. Grass: Grass may contain saplings, no specific resources. Requirement: None. 4. Cow: The cow provides food when defeated. Requirement: Weapon, such as wood, stone, or iron sword. 5. Sapling (in inventory): Sapling can be placed to grow trees and provide wood. Requirement: None. Question: What was the last action taken by the player? Answer: The last action taken by the player was do. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Path: No requirements to interact with the path, so yes, the requirements are met. 216 2. Tree: You have a wood_pickaxe and a stone_pickaxe in your inventory, so yes, the requirements are met to interact with the tree. 3. Grass: No requirements to interact with the grass, so yes, the requirements are met. 4. Cow: You don‚Äôt have a sword in your inventory, so the requirements to interact with the cow (defeat it) are not met. 5. Sapling (in inventory): There are no requirements to interact with the sapling in your inventory, so the requirements are met. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Craft a wood or stone sword to defeat the cow for food. Priority: 5/5, as the player‚Äôs food level is low. 2. Find a source of water or a lake to collect drink and restore the player‚Äôs thirst. Priority: 4/5, as the player‚Äôs drink level is also low. 3. Place the sapling to grow more trees to collect wood later. Priority: 3/5, as this would provide a steady supply of wood but is not as urgent as food and drink. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Requirements for the top sub-task (Craft a wood or stone sword to defeat the cow for food): - Wood or stone in inventory (the player has both) - A nearby table, which has not been placed yet The player should first place the table. To do this, the player should perform the action Place Table since there is wood in the inventory. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Place Table (Requirement: Wood in inventory) 2. Priority 2: Make Wood Sword (Requirement: Nearby table, wood in inventory) or Make Stone Sword (Requirement: Nearby table, wood and stone in inventory) 3. Priority 3: Move South-East until the player is near the cow. (Requirement: Flat ground in the south-east direction) 4. Priority 4: Do (Use the crafted sword to defeat the cow for food) (Requirement: Facing the cow, have the sword equipped) 5. Priority 5: Collect Drink by drinking from a lake (Requirement: Near a water source) Question: For each action in the list, are the requirements met? Answer: 1. Place Table: Yes, the requirement is met. The player has 1 wood in their inventory. 2. Make Wood Sword or Make Stone Sword: Yes, the requirements are met for both. The player has 1 wood and 4 stones in their inventory. However, after placing the table in action 1, the player will need to choose between making a Wood Sword or a Stone Sword. 3. Move South-East until the player is near the cow: Yes, the requirement is met. The player can move on flat ground in the south-east direction towards the cow. 4. Do (Use the crafted sword to defeat the cow for food): The requirement could be met if the player had a crafted sword. Currently, the player will need to craft a sword in action 2 before taking this action. 5. Collect Drink by drinking from a lake: The requirement is partially unclear. The player needs to be near a water source, which is not mentioned in the player‚Äôs observation. However, if the player finds a water source, they can meet this requirement. Question: Did the last player action succeed? Why? Answer: The last player action do did succeed, as it resulted in the player obtaining a sapling, as indicated by the inventory update in Player Observation Step 280. The player likely interacted with the grass in front of them to collect the sapling. Question: Choose the best executable action from above. Answer: The best executable action from the list above is Priority 1: Place Table, as the requirement (wood in inventory) is met, and it is the first action to perform in the prescribed sequence. ============Step: 141, Cumulative Reward: 0.0============ You took action place_table. You see: - path 6 steps to your south-east - tree 2 steps to your north-west - cow 3 steps to your south-east You face grass at your front (east). Your status: - health: 9/9 - food: 4/9 - drink: 3/9 - energy: 8/9 Your inventory: - sapling: 1 - wood: 1 - stone: 4 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Make Stone Sword Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. 217 Answer: 1. Path: The path provides a clear and safe passage to move around. Requirement: Clear ground with no obstacles. 2. Tree: The tree provides wood, which is needed for crafting various tools, weapons, and structures. Requirement: Cutting down using a wood_pickaxe or better tool. 3. Cow: The cow provides food (meat) to restore the player‚Äôs health. Requirement: Defeating using any type of sword or a ranged weapon. 4. Grass: Grass indicates an unoccupied space, which can be useful for building or planting saplings. Requirement: Clearing the grass using a tool or placing an object on it. 5. Table (as placed in step 282): The table allows the crafting of various tools and weapons. Requirement: Collect wood to craft and place the table. Individual resources provided: - Path: None - Tree: Wood - Cow: Food (meat) - Grass: Space for building - Table: Crafting platform Question: What was the last action taken by the player? Answer: The last action taken by the player was placing a table (place_table). Question: For each object in the list, are the requirements met for interaction? Answer: 1. Path: Yes, the requirements for interaction are met as it provides a clear passage for movement. 2. Tree: Yes, the requirements for interaction are met as you have a wood_pickaxe in your inventory, which can be used to cut down the tree for wood. 3. Cow: Yes, the requirements for interaction are met because the cow can be defeated using any weapon, although you do not currently have a sword in your inventory, you can still craft one using wood or stone at the table. 4. Grass: Yes, the requirements for interaction are met as it indicates a space that can be used for building or planting saplings. 5. Table: Yes, the requirements for interaction are met since you have the necessary resources in your inventory (wood, stone, coal, iron, wood_pickaxe, and stone_pickaxe) to craft items at the table. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Craft a weapon to defeat the cow and replenish food (Priority: 5/5): Having a weapon, such as a wood or stone sword, increases your ability to protect yourself and gather food resources. Crafting a weapon should be a high priority. 2. Increase drink levels to avoid dehydration (Priority: 4/5): Your current drink level is 3/9, and seeking a water source or collecting a drink item will help avoid negative effects from dehydration. This is an important task, but not as urgent as having a weapon for defense and hunting. 3. Plant the sapling to grow a tree and ensure a steady supply of wood (Priority: 3/5): Planting the sapling will eventually provide more wood resources for crafting and building. While it is beneficial in the long run, it is not an immediate necessity like having a weapon and increasing your drink levels. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Top Sub-Task: Craft a weapon to defeat the cow and replenish food. Requirements: 1. Be near a placed table (already placed in Step 282) 2. Have wood or stone in your inventory (you have 1 wood and 4 stones) As the player already has a placed table and the necessary resources in their inventory, they can proceed to craft a weapon. Since they have both wood and stone available, it‚Äôs recommended to craft a stone sword for better efficiency and durability. First action: Craft a Stone Sword (Action: Make Stone Sword) by using the nearby table and stone from the inventory. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Make Stone Sword (Requires nearby table and stone in inventory) Action: Craft a Stone Sword using the nearby table and the stone from your inventory for better efficiency and durability in defeating the cow. 2. Priority 2: Move South (Requires flat ground below the agent) Action: Move closer to the cow for 2 steps until it is right next to the cow. 3. Priority 3: Do (Requires facing creature or material and having the necessary tool) Action: Face the cow and use the Stone Sword to defeat it in order to replenish your food supply. 4. Priority 4: Collect Drink (No requirements) Action: Find water (such as a lake or river) and drink it to restore your thirst levels. 5. Priority 5: Place Plant (Requires sapling in inventory) Action: Plant the sapling collected in your inventory to secure a steady food supply of growing fruits in the future. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Make Stone Sword (Requires nearby table and stone in inventory) Requirements met: Yes. You have placed a table in your previous step, and you also have 4 stones in your inventory. 2. Priority 2: Move South (Requires flat ground below the agent) Requirements met: Yes. There are no indications of obstacles below the agent, so flat ground can be assumed and the player can move south to approach the cow. 3. Priority 3: Do (Requires facing creature or material and having the necessary tool) Requirements met: Not yet. You will have to move closer to the cow and craft the Stone Sword to be able to do this action. 218 4. Priority 4: Collect Drink (No requirements) Requirements met: Yes. There are no specific requirements for this action. However, you will need to find a source of water like a lake or river before you can perform this action. 5. Priority 5: Place Plant (Requires sapling in inventory) Requirements met: Yes. You have a sapling in your inventory, which you can plant on the ground. Question: Did the last player action succeed? Why? Answer: Yes, the last player action succeeded. The player placed a table (place_table) and it was successful because the player had the required wood in their inventory. Question: Choose the best executable action from above. Answer: The best executable action from the list above is: Priority 1: Make Stone Sword (Requires nearby table and stone in inventory) ============Step: 142, Cumulative Reward: 0.0============ You took action make_stone_sword. You see: - path 6 steps to your south-east - tree 2 steps to your north-west - cow 3 steps to your south-east You face grass at your front (east). Your status: - health: 9/9 - food: 4/9 - drink: 3/9 - energy: 8/9 Your inventory: - sapling: 1 - wood: 1 - stone: 4 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Place Furnace Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Path (6 steps to the south-east): Provides easier movement and navigation; no requirements. 2. Tree (2 steps to the north-west): Provides wood when chopped down; requires a wood_pickaxe or better tool to chop. 3. Cow (3 steps to the south-east): Provides food when killed; requires a weapon (e.g., wood_sword, stone_sword) to kill efficiently. 4. Grass (facing east): Can be cleared for building or collecting saplings; no requirements. In the inventory: 5. Sapling: Can be planted to grow more trees; requires an open space on the ground. 6. Wood: Can be used for crafting and building; requires collecting from trees. 7. Stone: Can be used for crafting and building; requires collecting with a wood_pickaxe or better tool. 8. Coal: Can be used in a furnace to smelt materials; requires collecting with a wood_pickaxe or better tool. 9. Iron: Can be used to craft better tools and weapons; requires collecting with a stone_pickaxe and smelting in a furnace with coal. 10. Wood Pickaxe: Can be used to collect stone, coal and break blocks; requires crafting with wood. 11. Stone Pickaxe: Can be used to collect iron and break blocks; requires crafting with stone and wood. Question: What was the last action taken by the player? Answer: The last action taken by the player was make_stone_sword. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Path (6 steps to the south-east): Yes, the path requires no specific tool or interaction. You can move along the path freely. 2. Tree (2 steps to the north-west): Yes, you have a wood_pickaxe and a stone_pickaxe available in your inventory for chopping down the tree. 3. Cow (3 steps to the south-east): Yes, after making the stone_sword in your previous action, you have a suitable weapon to kill the cow efficiently. 4. Grass (facing east): Yes, there are no specific requirements to clear the grass. In the inventory: 5. Sapling: Yes, you can plant the sapling in an open space on the ground. 6. Wood: Already collected, no further interaction needed. 7. Stone: Already collected, no further interaction needed. 8. Coal: Already collected, no further interaction needed. 9. Iron: Yes, you have coal and iron to smelt in a furnace, but you will need to place the furnace first. 10. Wood Pickaxe: Already crafted, no further interaction needed. 11. Stone Pickaxe: Already crafted, no further interaction needed. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. 219 Answer: 1. Place the furnace and smelt the iron (Priority: 5) - Placing the furnace and smelting the iron will enable you to craft better tools and weapons, essential for advancing in the game. 2. Drink water and eat food (Priority: 4) - Your food and drink levels are at 4/9 and 3/9 respectively. It is important to replenish them to maintain your health and energy. 3. Plant the sapling (Priority: 3) - Planting the sapling will establish a renewable source of wood, which will be useful for crafting, building, and creating more tools and weapons in the future. Question: What are the requirements for the top sub-task? What should the player do first? Answer: For the top sub-task, the requirements are: 1. Collect stone: You already have 4 stones in your inventory, which is enough to craft a furnace. 2. Place the furnace: Since you have the necessary stones, you can place the furnace. 3. Collect coal: You have 2 coal in your inventory, which can be used as a fuel source for smelting the iron. 4. Collect iron: You already have 1 iron in your inventory. Given the requirements, the player should first place the furnace as they already have the necessary resources in their inventory. After placing the furnace, they can then proceed to smelt the iron using the collected coal as fuel. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Place Furnace Requirement: Stone in inventory (you already have 4 stones) 2. Priority 2: Move West Requirement: Flat ground left to the agent (assuming flat ground is available; if not, choose alternative suitable direction to find water) 3. Priority 3: Move West (or another suitable direction) Requirement: Flat ground left to the agent (keep moving in search of water, adjust the direction as needed) 4. Priority 4: Collect Drink Requirement: Reaching a water source like a lake (after moving towards the water) 5. Priority 5: Eat Cow Requirement: No requirements (a cow is within 3 steps to your south-east) Note: These priorities are based on your current status, which indicates that your drink is at 3/9 and food is at 4/9. Therefore, it‚Äôs important to find a water source and consume food to avoid health issues. Placing the furnace is the first priority to progress in crafting advanced tools. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Place Furnace Requirement: Stone in inventory (you already have 4 stones) Status: Requirements met 2. Priority 2: Move West Requirement: Flat ground left to the agent (assuming flat ground is available; if not, choose alternative suitable direction to find water) Status: Unable to determine if requirements are met based on the given information about the surroundings; make sure flat ground exists in the desired direction. 3. Priority 3: Move West (or another suitable direction) Requirement: Flat ground left to the agent (keep moving in search of water, adjust the direction as needed) Status: Same as Priority 2, unable to determine without additional information about the surroundings. 4. Priority 4: Collect Drink Requirement: Reaching a water source like a lake (after moving towards the water) Status: Requirements not currently met; you need to find a water source (lake or river) first. 5. Priority 5: Eat Cow Requirement: No requirements (a cow is within 3 steps to your south-east) Status: Requirements met Question: Did the last player action succeed? Why? Answer: Yes, the last player action make_stone_sword succeeded, because the player had the necessary requirements for the action. The player had wood and stone in their inventory and was close to a table, which are the requirements for making a stone sword. Question: Choose the best executable action from above. Answer: The best executable action from the list above is Priority 1: Place Furnace. The requirements for this action are met as you have enough stone (4) in your inventory. ============Step: 143, Cumulative Reward: 1.0============ You took action place_furnace. You see: - grass 1 steps to your west - path 6 steps to your south-east - tree 2 steps to your north-west - cow 3 steps to your south-east You face furnace at your front (east). 220 Your status: - health: 9/9 - food: 4/9 - drink: 3/9 - energy: 8/9 Your inventory: - sapling: 1 - wood: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move South Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Path: Provides a way to move quickly; no requirements. 2. Tree: Provides wood when chopped; requires a wood or stone pickaxe. 3. Cow: Provides food (meat) when killed; requires a wood or stone sword. 4. Grass: Currently no resources provided; no requirements. 5. Furnace: Provides a way to smelt iron and cook food; requires stone and being placed. Question: What was the last action taken by the player? Answer: The last action taken by the player was placing the furnace (action: place_furnace). Question: For each object in the list, are the requirements met for interaction? Answer: 1. Path: Yes, the requirements are met for interaction; you can move quickly on the path. 2. Tree: Yes, the requirements are met for interaction; you have a wood_pickaxe and stone_pickaxe in your inventory. 3. Cow: Yes, the requirements are met for interaction; you can use your newly crafted stone sword to kill the cow for food. 4. Grass: Yes, the requirements are met for interaction; no specific tool or action is needed. 5. Furnace: Yes, the requirements are met for interaction; the furnace has been placed and can be used for smelting iron or cooking food. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Increase Food and Drink levels: Priority 4.5/5 - Kill the cow for food (meat) - Find a water source to drink from 2. Smelt Iron: Priority 4/5 - Use the furnace to smelt iron with the available coal in your inventory 3. Explore and Collect more resources: Priority 3.5/5 - Chop the tree for more wood - Keep searching for additional resources such as stone, coal, and iron Question: What are the requirements for the top sub-task? What should the player do first? Answer: Top sub-task: Increase Food and Drink levels Requirements for the top sub-task: 1. Kill the cow for food (meat): - Approach the cow 3 steps to your south-east. - Use your stone sword (or any available weapon) to kill the cow. - Collect the dropped meat. 2. Find a water source to drink from: - Explore the area to locate a lake, river, or any other water source. - Approach the water source and drink from it to restore your drink level. The player should first approach the cow to kill it and collect meat to increase the food level. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move South-East (3 steps) - Requirement: Flat ground in the south-east direction. - This action will bring the player closer to the cow for food. 2. Priority 2: Do (kill the cow with the stone sword) - Requirement: Facing the cow, having the stone sword in inventory. - This action will kill the cow and provide meat to increase the food level. 3. Priority 3: Move (explore) - Requirement: Flat ground in any direction, energy level is not depleted. - The player needs to explore the area to find a water source, which is essential to increase the drink level. 4. Priority 4: Move (approach the water source) - Requirement: Flat ground in the appropriate direction towards the water source. - This action will bring the player close to the water source for drinking. 5. Priority 5: Drink - Requirement: Standing next to a lake or river, or any other water source. - This action will increase the player‚Äôs drink level and help in survival. Question: For each action in the list, are the requirements met? Answer: Based on the current observations, let‚Äôs check if the requirements for each action are met: 221 1. Priority 1: Move South-East (3 steps) - Requirement: Flat ground in the south-east direction. - Requirement met, as there is a path 6 steps to the south-east and there is no mention of obstacles. 2. Priority 2: Do (kill the cow with the stone sword) - Requirement: Facing the cow, having the stone sword in inventory. - Requirement partially met. The player has a stone sword in inventory, but they need to reach the cow‚Äôs position and face it first. 3. Priority 3: Move (explore) - Requirement: Flat ground in any direction, energy level is not depleted. - Requirement met, as the player has 8/9 energy and there‚Äôs flat ground in multiple directions. 4. Priority 4: Move (approach the water source) - Requirement: Flat ground in the appropriate direction towards the water source. - Requirement not met because the player has not discovered a water source yet. 5. Priority 5: Drink - Requirement: Standing next to a lake or river, or any other water source. - Requirement not met because the player has not found a water source yet. Question: Did the last player action succeed? Why? Answer: Yes, the last player action (place_furnace) succeeded. The player had the required resources in their inventory (stone) and was facing a valid location to place the furnace. Question: Choose the best executable action from above. Answer: The best executable action from the list above is Priority 1: Move South-East (3 steps), as the requirements are fully met. There is a flat ground in the south-east direction and no obstacles mentioned. This action will bring the player closer to the cow for food. ============Step: 144, Cumulative Reward: 0.0============ You took action move_south. You see: - path 5 steps to your south-east - tree 2 steps to your west - furnace 2 steps to your north-east - cow 2 steps to your east You face grass at your front (south). Your status: - health: 9/9 - food: 4/9 - drink: 3/9 - energy: 8/9 Your inventory: - sapling: 1 - wood: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move West Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Path: Provides a clear walkway to navigate through the environment. Requirement: None. 2. Tree: Provides wood resource when chopped down with a wood pickaxe or better. Requirement: Wood pickaxe or better. 3. Furnace: Allows smelting of iron using coal. Requirement: Stone, coal, and iron. 4. Cow: Provides food resource when killed. Requirement: Weapon or tool to kill the cow. 5. Grass: Doesn‚Äôt provide any specific resources, but can be used to navigate through the environment or place saplings/ items. Requirement: None. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_south. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Path: Yes, the requirements are met as there are no specific requirements for interaction. 2. Tree: Yes, the requirements are met as you have a wood_pickaxe in your inventory. 3. Furnace: Yes, the requirements are met as you have stone, coal, and iron in your inventory. 4. Cow: Yes, the requirements are met as you have a wood_pickaxe that can be used as a tool to kill the cow, although it is not the most efficient weapon. 5. Grass: Yes, the requirements are met as there are no specific requirements for interaction. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Priority 5: Collect more iron using the stone_pickaxe, to make an iron sword for better combat efficiency. 2. Priority 4: Kill the cow with the wood_pickaxe to increase the food supply. 3. Priority 3: Find a water source and drink to increase the drink level. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Requirements for the top sub-task (collect more iron using the stone_pickaxe): 222 1. Locate a source of iron ore. 2. Equip the stone_pickaxe. The player should first locate a source of iron ore to mine. To do this, they can explore the surroundings (move to different directions) and search for iron ore veins in caves, cliffs, or underground areas. Once they locate the iron ore, they should equip the stone_pickaxe and use it to mine the iron ore. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Move West (Priority: 1) - Requirement: Flat ground left to the agent. The player should move to a location where they are more likely to find iron ore. 2. Move North (Priority: 2) - Requirement: Flat ground above of the agent. Exploring surroundings to locate iron ore. 3. Move East (Priority: 3) - Requirement: Flat ground right to the agent. Further exploration to locate iron ore. 4. Move South (Priority: 4) - Requirement: Flat ground below the agent. Expanding exploration to increase the likelihood of finding iron ore. 5. Do (mine iron ore) (Priority: 5) - Requirement: Facing the iron ore vein; have the necessary tool (stone_pickaxe). Mining iron ore once it is located during exploration. Question: For each action in the list, are the requirements met? Answer: 1. Move West - Yes, the requirement is met since there is grass 1 step to the west. 2. Move North - No, the requirement is not met as there is a tree 2 steps to the north-west which might be blocking north movement. 3. Move East - Yes, the requirement is met since the cow is 2 steps to the east, indicating there is an open space for movement. 4. Move South - Yes, the requirement is met since the agent currently faces grass to the south. 5. Do (mine iron ore) - No, the requirement is not met as the player has not located any iron ore vein in their current surroundings. Question: Did the last player action succeed? Why? Answer: Yes, the last player action succeeded. The action was to move south, and the observation after the action shows a change in the surrounding environment, indicating a successful move. The player now faces grass at their front (south), and the furnace is now 2 steps to the player‚Äôs north-east. Question: Choose the best executable action from above. Answer: The best executable action from above is Move West. ============Step: 145, Cumulative Reward: 0.0============ You took action move_west. You see: - grass 1 steps to your north - furnace 3 steps to your north-east - cow 3 steps to your east You face tree at your front (west). Your status: - health: 9/9 - food: 4/9 - drink: 3/9 - energy: 8/9 Your inventory: - sapling: 1 - wood: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move East Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Path: Provides a clear path to travel or move around. Requirement: None. 2. Tree: Provides wood when chopped down. Requirement: Wood pickaxe or better. 3. Furnace: Provides the ability to smelt items such as iron ore. Requirement: Coal and items to smelt, like iron ore. 4. Cow: Provides food (meat) when killed. Requirement: Weapon (wood sword or better). 5. Grass: Does not provide any resources. Requirement: None. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_west. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Path: Yes, the requirements for interacting with a path are met, as there are no specific tools needed to move along the path. 2. Tree: Yes, the requirements for interacting with a tree are met, as the player has a wood_pickaxe in their inventory, which is needed to chop down a tree to collect wood. 223 3. Furnace: Partially, the player has a furnace and coal in their inventory, which are required to smelt items. However, the player only has 1 iron which may not be enough to smelt a new item. 4. Cow: Yes, the requirements for interacting with a cow are met, as the player can use their wood_pickaxe or stone_pickaxe as a makeshift weapon to kill the cow and collect meat. 5. Grass: Yes, there are no requirements for interacting with grass, as it does not provide any resources. The player can simply move onto or over the grass. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Priority 5: Collect food - Kill the cow and collect meat to increase the food level. This is a top priority as the player‚Äô s food level is currently 4/9. 2. Priority 4: Collect wood - Chop down the tree using the wood_pickaxe to gather wood. Additional wood will allow the player to craft more tools or build structures. 3. Priority 3: Collect drink - Find a water source (e.g., lake, river) to drink for restoring the drink level. Currently, the drink level is 3/9, which will need to be replenished soon. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Top sub-task: Collect food - Kill the cow and collect meat to increase the food level. Requirements: The player should have a weapon, preferably a sword (wood, stone, or iron) to kill the cow more efficiently. However, a weapon is not strictly necessary, as the player can still attempt to kill the cow with tools like the pickaxe or even without any equipment by using their hands. What should the player do first: Since the cow is currently 3 steps to the east, the player should move eastward to approach the cow. Once close enough, the player can try to attack and kill the cow using a sword, a tool, or their hands to collect the meat. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority: 1 - Action: Move East Requirement: Flat ground to the east of the agent. 2. Priority: 2 - Action: Move East Requirement: Flat ground to the east of the agent. 3. Priority: 3 - Action: Move East Requirement: Flat ground to the east of the agent. 4. Priority: 4 - Action: Do (Attack the cow) Requirement: Facing the cow; having a weapon, like a sword or a tool, like a pickaxe (although not strictly necessary). 5. Priority: 5 - Action: Sleep Requirement: Energy level is below maximum. Question: For each action in the list, are the requirements met? Answer: 1. Priority: 1 - Action: Move East Requirement: Flat ground to the east of the agent. Status: Met (Player‚Äôs observation indicates a flat ground to the east) 2. Priority: 2 - Action: Move East Requirement: Flat ground to the east of the agent. Status: Unknown (Not enough information from the current observation, player must move east first) 3. Priority: 3 - Action: Move East Requirement: Flat ground to the east of the agent. Status: Unknown (Not enough information from the current observation, player must move east twice) 4. Priority: 4 - Action: Do (Attack the cow) Requirement: Facing the cow; having a weapon, like a sword or a tool, like a pickaxe (although not strictly necessary). Status: Partially met (Player has a wood_pickaxe and stone_pickaxe in inventory, but not currently facing the cow, need to move east first) 5. Priority: 5 - Action: Sleep Requirement: Energy level is below maximum. Status: Unmet (Player‚Äôs energy level is at 8/9, sufficient to continue without sleep for now) Question: Did the last player action succeed? Why? Answer: Yes, the last player action succeeded. The player moved west because there were no obstacles or restrictions preventing them from doing so. Question: Choose the best executable action from above. Answer: The best executable action from the above list is: Priority: 1 - Action: Move East Requirement: Flat ground to the east of the agent. Status: Met (Player‚Äôs observation indicates a flat ground to the east) ============Step: 146, Cumulative Reward: 0.0============ You took action move_east. You see: 224 - path 5 steps to your south-east - tree 2 steps to your west - furnace 2 steps to your north-east - cow 2 steps to your east You face grass at your front (east). Your status: - health: 9/9 - food: 4/9 - drink: 3/9 - energy: 8/9 Your inventory: - sapling: 1 - wood: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Do Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass - Resource: None, Requirement: No requirements to interact. 2. Furnace - Resource: Used for smelting iron and other materials, Requirement: Requires stone to craft and place. 3. Cow - Resource: Provides food (meat) when killed, Requirement: No requirements to interact; can use a tool or weapon to kill for food. 4. Tree - Resource: Provides wood when chopped down, Requirement: Requires a wood pickaxe, stone pickaxe, or higher level tool to chop down. 5. Path - Resource: None, Requirement: No requirements to interact; can move along the path for easier navigation. 6. Wood Pickaxe - Resource: Tool for chopping down trees and collecting stone, Requirement: Requires wood to craft. 7. Stone Pickaxe - Resource: Tool for collecting iron, Requirement: Requires stone and wood to craft. 8. Sapling - Resource: Can be used to grow trees when planted, Requirement: No requirements to interact; can be collected when found or obtained by chopping down trees. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_east. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass - Yes, the requirements are met for interaction as there are no specific requirements to interact with grass. 2. Furnace - Yes, the requirements are met for interaction as you have collected stone and placed a furnace on the map. 3. Cow - Yes, the requirements are met for interaction as there are no specific requirements to interact with a cow. You can use a weapon or tool to kill it for food. 4. Tree - Yes, the requirements are met for interaction as you have a wood_pickaxe and a stone_pickaxe in your inventory that can be used to chop down the tree and collect wood. 5. Path - Yes, the requirements are met for interaction as there are no specific requirements to interact or move along the path. 6. Wood Pickaxe - Yes, the requirements are met, as you have wood in your inventory and have already crafted a wood_pickaxe. 7. Stone Pickaxe - Yes, the requirements are met, as you have wood and stone in your inventory and have already crafted a stone_pickaxe. 8. Sapling - Yes, the requirements are met for interaction as there are no specific requirements to interact with a sapling. You can plant it to grow a tree. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Priority 4/5: Drink water to restore thirst - With a thirst level of 3/9, the player should prioritize finding a water source and drinking from it to stay hydrated. 2. Priority 4/5: Collect food and eat - The player‚Äôs food level is 4/9, which indicates that they should focus on finding a stable food source. The cow nearby can be killed to provide meat for immediate consumption, and the sapling can be planted to grow more trees, which could eventually provide fruits. 3. Priority 3/5: Collect more resources - As the player has only 1 wood, 2 coal, and 1 iron in their inventory, they should continue collecting resources such as iron, stone, and wood for crafting items and expanding the shelter. Chopping down trees and mining iron are potential sub-tasks to achieve this goal. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Top sub-task: Drink water to restore thirst. Requirements: 1. Find a water source, such as a lake, river, or well. 2. Approach the water source (move towards it using move_north, move_south, move_east, or move_west based on its relative location). 3. Drink water when standing next to the water source. What should the player do first: The player should first scout for a water source nearby. If no water source is immediately visible, they should explore the surrounding areas by moving in different directions until they locate one. Once a water source is found, the player should approach and drink from it to restore their thirst level. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 225 1. Priority 1: Move (move_north, move_south, move_east, or move_west) - Requirement: Flat ground in the respective direction. This action is a priority as it would help the player explore the environment and locate resources, such as water sources or trees. 2. Priority 2: Drink - Requirement: Standing next to a water source. Drinking is a priority as it will restore the player‚Äôs thirst level, which is currently low (3/9). 3. Priority 3: Do (chop down a tree) - Requirement: Facing a tree; have the necessary tool (wood_pickaxe, which the player has in their inventory). This action will help the player gather wood, an essential resource for crafting and building shelter. 4. Priority 4: Sleep - Requirement: Energy level is below maximum. Sleeping will restore the player‚Äôs energy, although the energy level is still high (8/9) so it could be done later. 5. Priority 5: Make Wood Sword - Requirement: Nearby table; wood in inventory. Crafting a wood sword is important for self- defense against potential threats like zombies and skeletons, but it‚Äôs a slightly lower priority than finding water and collecting wood as the player‚Äôs health level is currently full (9/9). Question: For each action in the list, are the requirements met? Answer: 1. Move (move_north, move_south, move_east, or move_west): Yes, the requirements are met. The player can choose a direction with flat ground (such as move_north towards the grass) to explore the environment. 2. Drink: No, the requirements are not met. The player needs to be standing next to a water source to drink, which is not the case in the current observation. 3. Do (chop down a tree): Yes, the requirements are met. The player is facing a tree in the west direction and has a wood_pickaxe in their inventory. 4. Sleep: No, the requirement is not met. Although the player‚Äôs energy level is below maximum, it is still quite high (8/9), so sleeping would not provide much benefit at this time. 5. Make Wood Sword: Yes, the requirements are met. The player has wood in their inventory, but they will need to place a table first (using wood from the inventory) before making the wood sword. Question: Did the last player action succeed? Why? Answer: Yes, the last player action (move_east) succeeded. It succeeded because there was flat ground (grass) to the east of the player, allowing them to move in that direction. Question: Choose the best executable action from above. Answer: The best executable action from the list above is chopping down a tree. To do this, the player should take the Do action, which has met requirements: The player is facing a tree and has a wood_pickaxe in their inventory. This action will help gather more wood, an essential resource for crafting and building shelter. ============Step: 147, Cumulative Reward: 0.0============ You took action do. You see: - grass 1 steps to your west - path 5 steps to your south-east - tree 2 steps to your west - furnace 2 steps to your north-east You face cow at your front (east). Your status: - health: 9/9 - food: 4/9 - drink: 3/9 - energy: 8/9 Your inventory: - sapling: 1 - wood: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move South Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass: Provides no specific resources; requires no requirements to interact with. 2. Path: Provides easy and flat terrain for movement; requires no requirements to be accessed. 3. Tree: Provides wood resource for crafting; requires wood_pickaxe or better to collect wood. 4. Furnace: Provides a tool to smelt resources like iron; requires stone and crafting to place. 5. Cow: Provides food when hunted; requires any type of weapon (e.g., wood_sword, stone_sword) to effectively hunt it. In the current observation, the player faces a cow, which can be hunted for food. Question: What was the last action taken by the player? Answer: The last action taken by the player was do. 226 Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass: No specific requirements for interaction, so it‚Äôs met. 2. Path: No specific requirements for accessing, so it‚Äôs met. 3. Tree: Requires a wood_pickaxe or better to collect wood; the player has a wood_pickaxe and a stone_pickaxe in their inventory, so the requirement is met. 4. Furnace: Already placed on the map, so no requirements needed for interaction; it‚Äôs met. To smelt resources with the furnace, the player needs coal, which they already have, so that requirement is also met. 5. Cow: Requires any type of weapon (e.g., wood_sword, stone_sword) to effectively hunt; the player doesn‚Äôt have a sword in their inventory, so the requirement is not met. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Craft a sword for hunting and self-defense (Priority: 5/5) - Use the existing wood or stone to craft a wood_sword or a stone_sword at a nearby table to effectively hunt the cow and protect yourself from monsters. 2. Hunt the cow and increase food supply (Priority: 4/5) - Once a sword is crafted, hunt the cow to replenish your food and maintain your health. 3. Find a water source to drink and replenish thirst (Priority: 3/5) - Your drink level is currently low, so finding a water source to drink from should be a priority to avoid dehydration. Question: What are the requirements for the top sub-task? What should the player do first? Answer: The top sub-task is to craft a sword for hunting and self-defense. The requirements for it are: 1. Locate a nearby crafting table or place a table using your wood inventory. 2. If you have enough wood, create a wood_sword at the table. 3. If you have enough stone, create a stone_sword at the table, which is preferred due to its better durability and damage. The player should first locate a nearby crafting table or place one using the available wood in their inventory. Then, depending on the available resources (wood or stone) in the inventory, the player should craft either a wood_sword or a stone_sword at the table. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move South (5 steps): Flat ground below the agent. This action will help the player reach the path for better navigation. 2. Priority 2: Drink: Find a water source to drink from as the player‚Äôs current drink level is low (3/9). 3. Priority 3: Do: Facing cow at front (east); no tool required for hunting. This action will provide food to the player. 4. Priority 4: Place Furnace: Stone in inventory. The player will need a furnace to smelt iron later. 5. Priority 5: Make Iron Sword: Nearby table, furnace; wood, coal, iron in inventory. Crafting an iron sword will improve the player‚Äôs defense and hunting capabilities. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Move South (5 steps): Yes, the requirement of flat ground below the agent is met. 2. Priority 2: Drink: The requirement of finding a water source is not met in the current observations. 3. Priority 3: Do: Yes, the requirement of facing cow at front (east) is met, and no tool is required for hunting. 4. Priority 4: Place Furnace: Yes, the requirement of having stone in the inventory is met. 5. Priority 5: Make Iron Sword: No, the requirement of having a nearby table is not met in the current observations. Also, the player has only 1 iron in their inventory which may not be enough to craft an iron sword. Question: Did the last player action succeed? Why? Answer: The last player action appears to have succeeded, as the player is now facing a cow at the front (east). This indicates that the do action made the player interact with the cow, as intended. Question: Choose the best executable action from above. Answer: The best executable action from above is Priority 1: Move South (5 steps) since the requirement of flat ground below the agent is met. ============Step: 148, Cumulative Reward: 0.0============ You took action move_south. You see: - path 4 steps to your east - tree 1 steps to your west - furnace 3 steps to your north-east - cow 2 steps to your north-east You face grass at your front (south). Your status: - health: 9/9 - food: 4/9 - drink: 3/9 - energy: 8/9 Your inventory: - sapling: 1 - wood: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ 227 Question: Action Answer: Move North Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass: Resource - It doesn‚Äôt provide any resources. Requirement - A clear area to build or interact with. 2. Path: Resource - It helps with navigating through the game world. Requirement - None. 3. Tree: Resource - Provides wood when cut down, can be used for crafting. Requirement - Wood pickaxe. 4. Furnace: Resource - Smelts metals and cooks food, such as iron and coal. Requirement - Stone to craft and place. 5. Cow: Resource - Provides food when killed. Requirement - Any weapon to kill it or bare hands. 6. Sapling (inventory): Resource - Can be planted to grow trees for wood. Requirement - None, already in inventory. 7. Wood (inventory): Resource - Used for crafting and building. Requirement - None, already in inventory. 8. Coal (inventory): Resource - Fuel for smelting metals and cooking food in a furnace. Requirement - None, already in inventory. 9. Iron (inventory): Resource - Used for crafting metal tools and weapons. Requirement - None, already in inventory. 10. Wood Pickaxe (inventory): Resource - Tool to collect stone and wood. Requirement - None, already in inventory. 11. Stone Pickaxe (inventory): Resource - Tool to collect iron and mine faster. Requirement - None, already in inventory. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_south. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass: Yes, the requirements are met for interaction as there are no specific requirements to interact with grass. 2. Path: Yes, the requirements are met for interaction as there are no specific requirements to interact with or follow a path. 3. Tree: Yes, the requirements are met for interaction as you have the wood pickaxe in your inventory, which is needed to cut down the tree. 4. Furnace: Yes, the requirements are met for interaction as you have the necessary resources (coal and iron) in your inventory to use the furnace for smelting. 5. Cow: Yes, the requirements are met for interaction as you can use any weapon, such as a wood pickaxe, stone pickaxe, or even your bare hands to kill the cow and obtain food. 6. Sapling (inventory): Yes, the requirements are met for interaction as the sapling is already in your inventory and can be planted without any specific requirements. 7. Wood (inventory): Yes, the requirements are met for interaction as the wood is already in your inventory and can be used for crafting and building without any specific requirements. 8. Coal (inventory): Yes, the requirements are met for interaction as the coal is already in your inventory and can be used as fuel in the furnace without any specific requirements. 9. Iron (inventory): Yes, the requirements are met for interaction as the iron is already in your inventory and can be smelted in the furnace and used for crafting without any specific requirements. 10. Wood Pickaxe (inventory): Yes, the requirements are met for interaction as the wood pickaxe is already in your inventory and can be used to collect resources without any specific requirements. 11. Stone Pickaxe (inventory): Yes, the requirements are met for interaction as the stone pickaxe is already in your inventory and can be used to collect resources without any specific requirements. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Regain Food and Drink: Priority 5/5 Sub-tasks: - Kill the cow to obtain meat. - Cook the meat using the furnace and coal as fuel. - Eat the cooked meat to regain food points. - Locate a water source nearby and drink to regain thirst points. 2. Plant Sapling and Grow Tree: Priority 4/5 Sub-tasks: - Find a suitable location to plant the sapling. - Plant the sapling and watch it grow into a tree, which will provide more wood for crafting. 3. Craft Iron Tools: Priority 3/5 Sub-tasks: - Smelt the iron in the furnace using coal as fuel. - Find a table to use for crafting. - Craft an iron pickaxe and iron sword to collect resources more efficiently and fight monsters more effectively. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Requirements for top sub-task (Regain Food and Drink): - Find a cow to obtain meat. - Have access to a furnace and coal for cooking meat. - Locate a water source nearby to drink. What should the player do first? 1. Approach the cow that is 2 steps to the north-east. 2. Kill the cow to obtain meat. 3. Go to the furnace 3 steps to the north-east. 4. Cook the meat using the furnace and coal as fuel. 5. Eat the cooked meat to regain food points. 6. Locate a water source nearby and drink to regain thirst points. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move North-East: Requirement: Flat ground in the north-east direction. 2. Priority 2: Do (Kill Cow): Requirement: Facing cow and have a weapon or tool. 3. Priority 3: Move North-East: Requirement: Flat ground in the north-east direction. 4. Priority 4: Place Furnace: Requirement: Stone in inventory. 5. Priority 5: Make Iron Sword: Requirement: Nearby table, furnace; wood, coal, and iron in inventory. 228 Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Move North-East: Requirement: Flat ground in the north-east direction. (Yes, the observation mentioned the furnace 3 steps to your north-east) 2. Priority 2: Do (Kill Cow): Requirement: Facing cow and have a weapon or tool. (Not yet, you face grass towards the south) 3. Priority 3: Move North-East: Requirement: Flat ground in the north-east direction. (Yes, the observation mentioned the cow 2 steps to your north-east) 4. Priority 4: Place Furnace: Requirement: Stone in inventory. (Not met, there is no stone in the inventory) 5. Priority 5: Make Iron Sword: Requirement: Nearby table, furnace; wood, coal, and iron in inventory. (Not met, you don‚Äôt have a nearby table and haven‚Äôt crafted the furnace yet) Question: Did the last player action succeed? Why? Answer: Yes, the last player action succeeded. The player moved south because there was flat ground (grass) in front of them, and there were no obstructions blocking their path. Question: Choose the best executable action from above. Answer: The best executable action from above is Priority 1: Move North-East, as its requirement of having flat ground in the north- east direction is met. ============Step: 149, Cumulative Reward: 0.0============ You took action move_north. You see: - path 5 steps to your south-east - tree 2 steps to your west - furnace 2 steps to your north-east - cow 2 steps to your south-east You face grass at your front (north). Your status: - health: 9/9 - food: 4/9 - drink: 3/9 - energy: 8/9 Your inventory: - sapling: 1 - wood: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move West Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Path: Provides faster movement across the terrain; no specific requirements. 2. Tree: Provides wood for crafting and building; requires a wood pickaxe or better to collect. 3. Furnace: Allows smelting of iron and other ores for better tools and weapons; requires stone to craft and place. 4. Cow: Provides food to restore hunger; requires defeating the cow to collect. 5. Grass: Decorative, no specific resources; no specific requirements. 6. Sapling (inventory): Can be planted to grow more trees; requires placing on suitable ground. 7. Wood (inventory): Used for crafting and building; requires collecting from trees. 8. Coal (inventory): Used as fuel for furnaces to smelt ores; requires mining with a wood pickaxe or better. 9. Iron (inventory): Used for crafting better tools and weapons; requires mining with a stone pickaxe or better and smelting with a furnace. 10. Wood pickaxe (inventory): Basic tool for mining stone and coal; requires crafting with wood. 11. Stone pickaxe (inventory): Better tool for mining iron and coal; requires crafting with wood and stone. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_north. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Path: No interaction required; requirements met as it‚Äôs part of the terrain. 2. Tree: Yes, requirements met; the wood_pickaxe in the inventory can be used to collect wood from the tree. 3. Furnace: Yes, requirements met; the furnace has already been placed and can be used for smelting. 4. Cow: Yes, requirements met; no specific tool required to defeat the cow, although a weapon would make it easier. 5. Grass: Yes, requirements met; no specific interaction needed with grass. 6. Sapling (inventory): Yes, requirements met; sapling can be placed on suitable ground. 7. Wood (inventory): Already collected, no further interaction required. 8. Coal (inventory): Already collected, no further interaction required. 9. Iron (inventory): Already collected, no further interaction required. 10. Wood pickaxe (inventory): Already crafted, can be used for mining stone and coal. 11. Stone pickaxe (inventory): Already crafted, can be used for mining iron and coal. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Priority 5/5: Find a source of water (lake, river) to drink and restore the thirst level. 2. Priority 4/5: Defeat the cow to collect food, and consume it to restore the hunger level. 3. Priority 3/5: Use the sapling from the inventory to plant a tree to ensure a future wood resource. 229 Question: What are the requirements for the top sub-task? What should the player do first? Answer: Requirements for the top sub-task (Find a source of water to drink): 1. Locate water source: Explore the surroundings to find a lake or river. What should the player do first: 1. Move around the area (move_north, move_south, move_east, move_west) to explore and locate a water source. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Move West (Priority: 5): Requirement - Flat ground left to the agent. (Explore surroundings to find a water source) 2. Move East (Priority: 4): Requirement - Flat ground right to the agent. (Explore surroundings to find a water source) 3. Move North (Priority: 3): Requirement - Flat ground above of the agent. (Explore surroundings to find a water source) 4. Move South (Priority: 2): Requirement - Flat ground below the agent. (Explore surroundings to find a water source) 5. Do (Priority: 1): Facing creature or material; have necessary tool. (Interact with the found water source to drink and restore thirst) Question: For each action in the list, are the requirements met? Answer: 1. Move West: Yes, the requirement is met as there is flat ground left to the agent. 2. Move East: Yes, the requirement is met as there is flat ground right to the agent. 3. Move North: Yes, the requirement is met as there is flat ground above the agent. 4. Move South: Yes, the requirement is met as there is flat ground below the agent. 5. Do: No, the requirement is not met. The player currently does not face a creature or material to interact with, and the necessary tool (water source) to restore thirst is not found yet. Question: Did the last player action succeed? Why? Answer: Yes, the last player action succeeded. The player was able to move north because there was a flat grassy ground in the north direction, allowing the player to move in that direction. Question: Choose the best executable action from above. Answer: The best executable action from above is Move West. This action meets the requirement of having flat ground to the left of the agent, allowing the player to continue exploring the surroundings in search of a water source to restore thirst. ============Step: 150, Cumulative Reward: 0.0============ You took action move_west. You see: - grass 1 steps to your north - furnace 3 steps to your north-east - cow 2 steps to your east You face tree at your front (west). Your status: - health: 9/9 - food: 4/9 - drink: 3/9 - energy: 8/9 Your inventory: - sapling: 1 - wood: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move East Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Tree: Provides wood when chopped down. Requirement: Wood pickaxe or a stronger tool. 2. Furnace: Smelts iron and other ores, cooks food. Requirement: Have or collect stone to craft, also requires coal or other fuel source to operate. 3. Cow: Provides food (meat) when killed. Requirement: Any weapon or tool to attack and defeat the cow. 4. Grass: Used to breed animals and create paths. Requirement: None or a tool such as a shovel for more efficient collection. 5. Path: No resource provided directly, helps in navigation. Requirement: None. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_west. Question: For each object in the list, are the requirements met for interaction? 230 Answer: 1. Tree: Yes, the requirements are met for interaction as the player has a wood pickaxe and a stone pickaxe in their inventory. 2. Furnace: Yes, the requirements are met for interaction as the player has collected stone, coal, and iron in their inventory. 3. Cow: Yes, the requirements are met for interaction as the player can use their stone_pickaxe or wood_pickaxe as a weapon to attack and defeat the cow. 4. Grass: Yes, the requirements are met for interaction since no specific tool is required, although having a tool like a shovel would make collection more efficient. 5. Path: Yes, the requirements are met for interaction as there are no specific requirements to simply walk on or follow the path. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Priority 5/5: Get more food - The player‚Äôs food level is currently 4/9, so they should prioritize killing the cow to obtain meat, which can be cooked in the furnace for additional food points. 2. Priority 4/5: Find a water source - The player‚Äôs drink level is 3/9, which is low. Locating a water source to restore their thirst is essential for survival. 3. Priority 3/5: Chop down the tree - Collect more wood from the tree to expand the player‚Äôs resource inventory, which can be used for crafting or building shelters. Question: What are the requirements for the top sub-task? What should the player do first? Answer: For the top sub-task of getting more food, here are the requirements and the steps the player should follow: Requirements: 1. Kill the cow. 2. Obtain raw meat. 3. Cook the raw meat in a furnace. The player should first approach the cow, which is now 2 steps to their east. Then, they should use an appropriate weapon, such as a wood or stone sword, to kill the cow and obtain the raw meat. Once they have the raw meat, they can cook it in the furnace (now 3 steps to their north-east) using coal from their inventory as fuel. This will provide them with cooked meat, which will restore more food points when eaten. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move East (2 steps) Requirement: Flat ground right to the agent Reason: Approach the cow that is 2 steps to the east. 2. Priority 2: Make Wood Sword (or Stone Sword if available) Requirement: Nearby table; wood (or wood and stone) in inventory Reason: Equip a weapon to kill the cow. 3. Priority 3: Do (Kill the cow) Requirement: Facing creature (cow); have necessary weapon (wood or stone sword) Reason: Kill the cow to obtain raw meat for food. 4. Priority 4: Move North-East (3 steps) Requirement: Flat ground in north-east direction Reason: Approach the furnace (3 steps to the north-east) for cooking raw meat. 5. Priority 5: Do (Cook the raw meat) Requirement: Facing furnace; raw meat and coal in inventory Reason: Cook the raw meat using the furnace and coal to obtain cooked meat, to restore more food points when eaten. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Move East (2 steps) Requirement: Flat ground right to the agent Answer: Yes, the requirements are met. The agent can move east. 2. Priority 2: Make Wood Sword (or Stone Sword if available) Requirement: Nearby table; wood (or wood and stone) in inventory Answer: No, the requirements are not met. The agent does not have a table nearby. 3. Priority 3: Do (Kill the cow) Requirement: Facing creature (cow); have necessary weapon (wood or stone sword) Answer: No, the requirements are not met. The agent does not have a sword to kill the cow. 4. Priority 4: Move North-East (3 steps) Requirement: Flat ground in north-east direction Answer: Yes, the requirements are met. The agent can move north-east to approach the furnace. 5. Priority 5: Do (Cook the raw meat) Requirement: Facing furnace; raw meat and coal in inventory Answer: No, the requirements are not met. The agent does not have raw meat in their inventory (cow needs to be killed first). Question: Did the last player action succeed? Why? Answer: Yes, the last player action succeeded. The player was able to move west because there was no obstacle blocking their path, and they had enough energy to perform the action. Question: Choose the best executable action from above. Answer: The best executable action from the above list is Priority 1: Move East (2 steps) since it meets the requirement of having flat ground right to the agent. This action will allow the player to approach the cow, which is 2 steps to the east. 231 ============Step: 151, Cumulative Reward: 0.0============ You took action move_east. You see: - path 5 steps to your south-east - tree 2 steps to your west - furnace 2 steps to your north-east - cow 2 steps to your south-east You face grass at your front (east). Your status: - health: 9/9 - food: 4/9 - drink: 3/9 - energy: 8/9 Your inventory: - sapling: 1 - wood: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move South Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Path: Provides a clear space to walk on, no requirements. 2. Tree: Provides wood when chopped, requires a wood_pickaxe or better tool. 3. Furnace: Allows smelting of iron and cooking of food (requires coal as a fuel source), requires stone to create. 4. Grass: Doesn‚Äôt provide any specific resources, can be used to build on or for placing plants, no requirements. 5. Cow: Provides meat for food when killed, requires any weapon (wood sword or better) to defeat. 6. Sapling (inventory): Can be placed on grass to grow into a tree, no requirements. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_east. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Path: Yes, the requirements are met as there are no specific requirements for interacting with a path. 2. Tree: Yes, the requirements are met as you have a wood_pickaxe in your inventory. 3. Furnace: Yes, the requirements are met as you have coal in your inventory. 4. Grass: Yes, the requirements are met as there are no specific requirements for interaction with grass. 5. Cow: Yes, the requirements are met as you have a wood_pickaxe in your inventory, which can be used as a weapon. 6. Sapling (inventory): Yes, the requirements are met since there is grass in your environment and there are no specific requirements for placing a sapling. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Drink water to restore thirst level (Priority: 5/5) - Your drink level is at 3/9, and increasing it is essential for survival. 2. Eat food or kill the cow for meat to restore the food level (Priority: 4/5) - Your food level is at 4/9, and eating will replenish it and help maintain your health. 3. Chop the tree to obtain more wood for crafting and building (Priority: 3/5) - Wood is a basic resource used for crafting various items and building structures, which will be useful in progressing the game. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Top Sub-task: Drink water to restore thirst level Requirements: Find a water source (like a lake, river, or well) to drink from. What should the player do first: The player should explore the surroundings to find a water source and then move towards it to drink water and restore their thirst level. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1 - Action: Move South (towards the cow) Requirement: Flat ground below the agent. 2. Priority 2 - Action: Move East (to find a water source) Requirement: Flat ground right to the agent. 3. Priority 3 - Action: Do (to drink water from the water source) Requirement: Facing the water source; have no immediate danger from monsters. 4. Priority 4 - Action: Move West (to approach the tree) Requirement: Flat ground left to the agent. 5. Priority 5 - Action: Do (to collect wood from the tree) 232 Requirement: Facing the tree; have a wood_pickaxe in inventory. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1 - Action: Move South (towards the cow) Requirement: Flat ground below the agent. Met: Yes, there is no obstruction reported below the agent in the observation. 2. Priority 2 - Action: Move East (to find a water source) Requirement: Flat ground right to the agent. Met: Yes, there is grass in the agent‚Äôs path, so the ground is flat. 3. Priority 3 - Action: Do (to drink water from the water source) Requirement: Facing the water source; have no immediate danger from monsters. Met: No, a water source is not observed in the player‚Äôs observations. 4. Priority 4 - Action: Move West (to approach the tree) Requirement: Flat ground left to the agent. Met: Yes, the agent has just moved from the west, so the ground is flat. 5. Priority 5 - Action: Do (to collect wood from the tree) Requirement: Facing the tree; have a wood_pickaxe in inventory. Met: Yes, the agent is facing the tree and has a wood_pickaxe in their inventory. Question: Did the last player action succeed? Why? Answer: Yes, the last player action (move_east) succeeded. It succeeded because there was flat grassland (grass) in front of the player, allowing them to move in the east direction without any obstruction. Question: Choose the best executable action from above. Answer: The best executable action from above is Priority 1 - Action: Move South (towards the cow), as it has the highest priority and its requirement is met. ============Step: 152, Cumulative Reward: 0.0============ You took action move_south. You see: - path 4 steps to your east - tree 1 steps to your west - furnace 3 steps to your north-east - cow 2 steps to your south-east You face grass at your front (south). Your status: - health: 9/9 - food: 4/9 - drink: 3/9 - energy: 8/9 Your inventory: - sapling: 1 - wood: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move East Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Path: Provides a clear route to travel through the game without obstacles; no requirements. 2. Tree: Provides wood for crafting tools, weapons, and shelter; requires a wood pickaxe or better to collect wood. 3. Furnace: Allows smelting of iron and other ores, as well as cooking food; requires collecting stone and crafting a furnace. 4. Cow: Provides food (meat) upon defeating it, which can be cooked and consumed to restore the food meter; requires no tools, but a weapon is recommended. 5. Grass: Can be collected and converted into dirt, which is useful for building and creating farmland for growing crops; requires no tools. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_south. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Path: Yes, the requirements are met for interaction, as there are no specific requirements to travel on the path. 2. Tree: Yes, the requirements are met for interaction since you have a wood_pickaxe in your inventory. 3. Furnace: Yes, the requirements are met for interaction, as you are within visible proximity to the furnace, which means you can access it. 4. Cow: Yes, the requirements are met for interaction. While no tools are specifically required, you have a wood_pickaxe and a stone_pickaxe that can be used as makeshift weapons to defeat the cow. 233 5. Grass: Yes, the requirements are met for interaction since no tools are specifically needed to interact with grass. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Priority 4/5: Restore the drink meter by finding a water source and drinking from it. This is essential for maintaining the player‚Äôs overall well-being. 2. Priority 3/5: Approach and defeat the cow to obtain meat, which can be cooked and consumed to restore the food meter. 3. Priority 2/5: Collect more wood from the nearby tree using the wood_pickaxe. Wood is a crucial resource for crafting various items and building structures. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Requirements for the top sub-task (Restore the drink meter by finding a water source and drinking from it): 1. Locate a nearby water source such as a lake, river, or pond. 2. Approach the water source. 3. Drink from the water source to restore the drink meter. The player should first locate a water source in their surroundings. If a water source is not immediately visible, they can explore the environment by moving in different directions until they find a suitable source. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: Priority 1: Move East (Requirement: Flat ground right to the agent) - The player should move towards the path since water sources are often found along paths. Priority 2: Move South (Requirement: Flat ground below the agent) - The player should continue moving to explore the area in search of a water source. Priority 3: Move West (Requirement: Flat ground left to the agent) - If the player has not yet found a water source, they can try moving in another direction to find one. Priority 4: Move North (Requirement: Flat ground above the agent) - As a final exploration option, the player can move in the opposite direction of their current path to search for a water source. Priority 5: Drink (Requirement: Facing a water source) - Once the player has found a water source, such as a lake or a river, they should drink from the water source to restore their drink meter. Question: For each action in the list, are the requirements met? Answer: Priority 1: Move East (Requirement: Flat ground right to the agent) - Yes, the requirement for this action is met. The agent is currently on flat grass, and there is no obstacle mentioned to the agent‚Äôs right (east). Priority 2: Move South (Requirement: Flat ground below the agent) - Yes, the requirement for this action is met. The agent just moved to the south from the previous step, indicating flat ground in that direction, and there is no obstacle directly in front of (south) the agent. Priority 3: Move West (Requirement: Flat ground left to the agent) - Yes, the requirement for this action is met. The agent is currently on flat grass, and there is no obstacle mentioned to the agent‚Äôs left (west). Priority 4: Move North (Requirement: Flat ground above the agent) - Yes, the requirement for this action is met. The agent is currently on flat grass, and there is no obstacle mentioned to the agent‚Äôs north. Priority 5: Drink (Requirement: Facing a water source) - No, the requirement for this action is not met. Based on the most recent two steps of the player‚Äôs in-game observation, the player is not currently facing a water source. The agent should continue to explore (moving east, south, west, or north) in search of water before attempting to drink. Question: Did the last player action succeed? Why? Answer: Yes, the last player action succeeded. The player moved south because there was flat ground (grass) in the south direction, allowing the player to move to that location. Question: Choose the best executable action from above. Answer: The best executable action from the above list is Priority 1: Move East, since the requirement (flat ground right to the agent) is met and it takes the player towards the path where water sources are often found. ============Step: 153, Cumulative Reward: 0.0============ You took action move_east. You see: - stone 5 steps to your north-east - path 3 steps to your east - tree 2 steps to your west - furnace 2 steps to your north - cow 2 steps to your south You face grass at your front (east). Your status: 234 - health: 9/9 - food: 4/9 - drink: 3/9 - energy: 8/9 Your inventory: - sapling: 1 - wood: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move South Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone resource; requires a wood pickaxe or better to mine. 2. Path: Provides easier movement across the terrain; no requirements. 3. Tree: Provides wood resource; requires punching or using an axe to chop down. 4. Furnace: Provides a location for smelting iron and cooking food; requires stone to craft and place. 5. Cow: Provides food when killed; requires a weapon or hands to kill. 6. Grass: Provides no resources; no requirements. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_east. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Yes, the requirements are met as you have a wood_pickaxe and a stone_pickaxe in your inventory. 2. Path: Yes, the requirements are met since there are no specific requirements for interacting with a path. 3. Tree: Yes, the requirements are met as you can punch the tree or use an axe to chop it down. 4. Furnace: Yes, the requirements are met as the furnace is already placed and you have coal and iron in your inventory for smelting. 5. Cow: Yes, the requirements are met as you can use a weapon or your hands to kill the cow for food. 6. Grass: Yes, the requirements are met as there are no specific requirements to interact with grass. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Priority 5/5: Collect more food and drink to increase your food and drink levels. Killing the cow nearby for food and finding a water source to increase your drink level. 2. Priority 4/5: Use the furnace to smelt the iron in your inventory, using the coal as fuel. This will allow you to craft better tools and weapons. 3. Priority 3/5: Chop down the tree to your west to collect more wood, which can be used for crafting additional items or structures in the future. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Requirements for the top sub-task (Collect more food and drink): 1. Killing the cow nearby for food: No specific requirements, just approach the cow and use one of your weapons to kill it, which will allow you to collect meat. 2. Finding a water source to increase your drink level: Finding a lake or river will provide a source for you to collect water and increase your drink level. You do not need any specific items to interact with water sources, just walk up to it and drink. The player should first approach the cow 2 steps to the south and attempt to kill it using a weapon like the wood or stone pickaxe to obtain meat. This will address the immediate concern of low food levels. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move South (Requirement: Flat ground below the agent) - Move towards the cow to kill it for food. 2. Priority 2: Do (Requirement: Facing creature or material; have necessary tool) - Kill the cow using your stone_pickaxe or wood_pickaxe when you reach it. 3. Priority 3: Move to find a water source (Possible Actions: Move West, Move East, Move North, Move South; Requirement: Flat ground in the direction of movement) - Look around for a nearby water source, like a lake or a river, to increase your drink level. 4. Priority 4: Do (Requirement: Facing creature or material) - Drink water from the water source once you‚Äôve found it. 5. Priority 5: Do (Requirement: Furnace nearby, coal and iron in inventory) - Smelt Iron using the furnace you saw 2 steps to your north (3 steps after moving towards the cow) to progress towards crafting an iron sword and pickaxe. Question: For each action in the list, are the requirements met? Answer: 1. Move South: Yes, the requirement (Flat ground below the agent) is met, as you face grass to your south. 2. Do (Kill the cow): No, the requirement is not met yet because you are not facing the cow. You need to move closer and face the cow before you can use this action. 235 3. Move to find a water source: Yes, the requirement (Flat ground in the direction of movement) is met for all possible actions (Move West, Move East, Move North, Move South). However, the actual water source location is unknown, so trial and possible exploration are needed. 4. Do (Drink water): No, the requirement (Facing a water source) is not met, as you haven‚Äôt found a water source yet. You need to find a water source before you can use this action. 5. Do (Smelt Iron): No, the requirement (Furnace nearby, coal and iron in inventory) is partially met - you have coal and iron in your inventory, but you are not close enough to the furnace (2 steps to your north). You need to move closer to the furnace before you can use this action. Question: Did the last player action succeed? Why? Answer: Yes, the last player action succeeded. The player moved east because there was flat ground (grass) to the east, allowing them to move in that direction. Question: Choose the best executable action from above. Answer: The best executable action from the above list is to move south (Priority 1) because the requirement (Flat ground below the agent) is met, and it will bring you closer to the cow, which you can kill for food. ============Step: 154, Cumulative Reward: 0.0============ You took action move_south. You see: - grass 1 steps to your west - stone 6 steps to your north-east - path 3 steps to your east - tree 3 steps to your north-west - table 6 steps to your south-east - furnace 3 steps to your north You face cow at your front (south). Your status: - health: 9/9 - food: 4/9 - drink: 3/9 - energy: 8/9 Your inventory: - sapling: 1 - wood: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move East Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone resource; requires a wood_pickaxe or better tool to collect. 2. Path: No resource provided; serves as a route for easy movement. 3. Tree: Provides wood resource; can be collected with bare hands or any tool. 4. Furnace: Provides the ability to smelt iron and cook food; requires stone to build. 5. Cow: Provides food upon defeating; no requirements for defeating, but a weapon (wood_sword, stone_sword, or iron_sword) is recommended. 6. Grass: No significant resource provided; can be trampled or removed if needed. 7. Table: Provides a surface for crafting tools and weapons; requires wood to build. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_south. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Yes, requirements met. You have a wood_pickaxe and a stone_pickaxe in your inventory, so you can collect the stone. 2. Path: Yes, requirements met. The path is accessible and can be walked upon with no specific requirements. 3. Tree: Yes, requirements met. You can collect wood either with your bare hands or using a tool. 4. Furnace: Yes, requirements met. You have already placed the furnace and can use it for smelting or cooking with coal as a fuel, which you have in your inventory. 5. Cow: Yes, requirements met. You can defeat the cow to get food without any specific requirements. A weapon is preferred but not necessary. 6. Grass: Yes, requirements met. You can trample or remove the grass without any specific requirements. 7. Table: Partially met. You have wood in your inventory, which is needed for building the table. To interact with it, you need to be adjacent to the table, which is currently six steps away. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Priority 5/5: Increase your food and drink levels. Defeat the cow in front of you to obtain food, and find water (lake or river) to drink and replenish your thirst. 2. Priority 4/5: Smelt the iron in the furnace (3 steps to your north) using the coal in your inventory. This will allow you to create better tools and weapons. 236 3. Priority 3/5: Build and place a table using the wood in your inventory, so you can craft tools and weapons without having to travel to the distant table. Question: What are the requirements for the top sub-task? What should the player do first? Answer: The requirements for the top sub-task (defeating the cow to obtain food and finding water to drink) are: 1. Defeat the cow - Ensure you have a weapon equipped, such as the wood or stone sword. If you don‚Äôt have a weapon yet, craft one first using a table. Next, face the cow and use the Do action to defeat it. Once defeated, collect food drops from the cow. 2. Find water - Locate a nearby water source, like a lake or a river. It may require exploring the area by moving in different directions until you find water. Once found, use the Collect Drink action to drink water and replenish your thirst level. The player should first focus on defeating the cow in front of them to obtain food. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: Based on the current situation, the top 5 actions the player should take are: 1. Priority 1: Make Wood Sword (Requirement: Nearby table; wood in inventory) - Craft a wood sword to defend yourself against the cow and any upcoming monsters. 2. Priority 2: Do (Requirement: Facing creature or material; have necessary tool) - Use the crafted wood sword to defeat the cow, obtaining food in the process. 3. Priority 3: Move East (Requirement: Flat ground right to the agent) - Move towards the path to the east to search for a water source. 4. Priority 4: Collect Drink (Requirement: Near water source) - Find and drink water from a water source like a lake or river to replenish your thirst. 5. Priority 5: Place Furnace (Requirement: Stone in inventory) - Place the furnace to smelt iron, allowing you to eventually craft better tools and weapons such as the iron pickaxe and iron sword. Question: For each action in the list, are the requirements met? Answer: 1. Make Wood Sword: The requirement nearby table is not met, as the table is 6 steps to the southeast. The player needs to be closer to the table. Other requirements are met (wood in inventory). 2. Do: The player facing the cow, but they don‚Äôt have the necessary tool (wood sword) in their inventory. The requirement to have a wood sword is not met. 3. Move East: The requirement is met, as there is flat ground to the east of the player. 4. Collect Drink: Currently, the player hasn‚Äôt discovered a water source nearby. The requirement of being near a water source is not met. 5. Place Furnace: The requirement of having stone in the inventory is not met as the player currently doesn‚Äôt have any stones in their inventory. Question: Did the last player action succeed? Why? Answer: Yes, the last player action (move_south) succeeded because there was a clear path to the south, allowing the player to move in that direction. Question: Choose the best executable action from above. Answer: The best executable action from the list above is: Move East (Requirement: Flat ground right to the agent) - Move towards the path to the east to search for a water source. ============Step: 155, Cumulative Reward: 0.0============ You took action move_east. You see: - stone 4 steps to your east - path 2 steps to your east - tree 4 steps to your north-west - table 5 steps to your south-east - furnace 4 steps to your north-west - cow 2 steps to your south-west You face grass at your front (east). Your status: - health: 9/9 - food: 4/9 - drink: 3/9 - energy: 8/9 Your inventory: - sapling: 1 - wood: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 237 ------------ QA ------------ Question: Action Answer: Move South Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Resource it provides: Stone is used to craft stone pickaxes, furnaces, and stone swords. Requirement: You need a wood pickaxe to collect stone. 2. Path: Resource it provides: Paths don‚Äôt provide resources but allow you to move easily between locations. Requirement: No requirement. 3. Tree: Resource it provides: Trees provide wood, which is essential for crafting tools and building structures. Requirement: No requirement to interact, but you need an axe or a similar tool to break the tree and collect wood. 4. Table: Resource it provides: The table is used to craft various tools and weapons, e.g., pickaxes and swords. Requirement: You need wood to craft a table. 5. Furnace: Resource it provides: The furnace is used to smelt iron from iron ores (requires coal) and can be used to create iron tools and weapons. Requirement: You need stone to craft a furnace. 6. Cow: Resource it provides: Cows provide food (meat) to replenish your food levels. Requirement: No requirement to interact, but you need a weapon, like a sword, to kill the cow and collect meat. 7. Grass: Resource it provides: Grass does not provide any significant resources but can be used as an indication of a flat, walkable surface. Requirement: No requirement. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_east. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Requirement for interaction: Wood pickaxe Requirement met: Yes, you have a wood_pickaxe in your inventory. 2. Path: Requirement for interaction: None Requirement met: Yes, no requirements to interact with the path. 3. Tree: Requirement for interaction: Axe or similar tool Requirement met: No, you don‚Äôt have an axe in your inventory but you have a wood_pickaxe that may work. 4. Table: Requirement for interaction: None Requirement met: Yes, no requirements to interact with the table. 5. Furnace: Requirement for interaction: None Requirement met: Yes, no requirements to interact with the furnace. 6. Cow: Requirement for interaction: Weapon (e.g., sword) Requirement met: No, you don‚Äôt have a sword in your inventory. 7. Grass: Requirement for interaction: None Requirement met: Yes, no requirements to interact with the grass. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Craft a weapon (Priority: 5/5) To defend yourself against monsters and attack the cow for food, you need to craft a weapon, such as a wood sword or a stone sword. You have wood and stone in your inventory to do so. 2. Increase food and drink levels (Priority: 4/5) Your food level is 4/9 and drink level is 3/9. After crafting a weapon, you should kill the cow for meat to increase your food level. Additionally, you should find a water source like a lake or river to drink from to replenish your drink level. 3. Collect more resources (Priority: 3/5) You need more resources like wood, stone, and iron to craft better tools and weapons. Collect wood from trees using your wood_pickaxe and stone from nearby stone using your stone_pickaxe. Look for iron ores once you have an ample supply of wood and stone. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Top Sub-task: Craft a weapon 238 Requirements: 1. A nearby crafting table: You have a table 5 steps to your south-east. 2. Necessary materials in your inventory: You have 1 wood and 1 stone. What should the player do first: Move to the crafting table by going south-east. Once you‚Äôre near the table, interact with it, and craft a weapon (either a wood sword with the available wood, or a stone sword using the available stone). Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move South-East - Requirement: Flat ground towards the south-east direction - Purpose: To approach the crafting table. 2. Priority 2: Make Stone Sword - Requirement: Nearby table; wood, stone in inventory - Purpose: To craft a stronger weapon for battling monsters. 3. Priority 3: Move West or North to find a water source - Requirement: Flat ground to the north or west - Purpose: To collect water for drinking and restoring thirst. 4. Priority 4: Collect Drink - Requirement: Facing a water source - Purpose: To restore thirst and maintain a healthy status. 5. Priority 5: Eat Cow - Requirement: Be near a cow - Purpose: To restore food levels and maintain a healthy status. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Move South-East - Requirements met: Yes, as there is no obstruction mentioned, the player can move in the south-east direction to approach the crafting table. 2. Priority 2: Make Stone Sword - Requirements met: No, the player is not currently near a table, and there is no stone in the inventory. The player needs to move closer to the table and collect stone to make a stone sword. 3. Priority 3: Move West or North to find a water source - Requirements met: Partially, the player can move west or north, as there are flat grounds in these directions. However, it is uncertain if there is a water source in these directions. 4. Priority 4: Collect Drink - Requirements met: No, the player needs to find and face a water source before collecting a drink. It is not mentioned whether the player is currently near a water source. 5. Priority 5: Eat Cow - Requirements met: No, the player needs to move closer to the cow mentioned two steps to the south-west from player‚Äôs current position, and then the requirement will be met. Question: Did the last player action succeed? Why? Answer: Yes, the last player action, move_east, succeeded because there was flat ground (grass) to the east of the player, allowing them to move in that direction without any obstacles. Question: Choose the best executable action from above. Answer: The best executable action from the list above is Priority 1: Move South-East. The requirements are met, and it will help the player to approach the crafting table. ============Step: 156, Cumulative Reward: 0.0============ You took action move_south. You see: - stone 5 steps to your north-east - path 2 steps to your east - tree 5 steps to your north-west - table 4 steps to your south-east - cow 1 steps to your west You face grass at your front (south). Your status: - health: 9/9 - food: 4/9 - drink: 3/9 - energy: 8/9 Your inventory: - sapling: 1 - wood: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action 239 Answer: Place Plant Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone as a resource for crafting tools and building materials. Requires a wood pickaxe or stronger to collect. 2. Path: Provides no direct resources but helps with navigation and movement. No specific requirements. 3. Tree: Provides wood for crafting tools, building materials, and fuel. Requires a wood_pickaxe or stronger to collect. 4. Table: Provides a surface for crafting various tools and weapons. Requires wood to craft and place. 5. Furnace: Provides a place to smelt ores (such as iron) and process certain materials. Requires stone to craft and place. 6. Cow: Provides food when killed. No specific tool requirement, but a weapon like a wood sword or stronger is recommended to defeat it more efficiently. 7. Grass: No direct resource provided. No specific requirements, can be walked on or replaced with other blocks. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_south. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Yes, the requirements are met for interaction. You have a wood_pickaxe and a stone_pickaxe in your inventory which can be used to collect stone. 2. Path: Yes, the requirements are met for interaction. No specific requirements are needed for paths, as they are just for navigation and movement. 3. Tree: Yes, the requirements are met for interaction. You have a wood_pickaxe in your inventory, which can be used to collect wood from the tree. 4. Table: Not applicable, as the table has already been placed, but you meet the requirements to craft one since you have wood in your inventory. 5. Furnace: Not applicable, as the furnace has already been placed, but you meet the requirements to craft one since you have stone in your inventory. 6. Cow: Yes, the requirements are met for interaction. Although you don‚Äôt have a sword in your inventory, you can still interact with and defeat the cow without it; however, having a weapon would make it more efficient. 7. Grass: Yes, the requirements are met for interaction. Grass does not have any specific requirements, and you can walk on it or replace it with other blocks. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Priority 4/5: Collect drink to restore thirst. Your drink level is at 3/9, which is relatively low. You should find a water source like a lake or river to drink from, so you don‚Äôt get dehydrated in the game. 2. Priority 3/5: Increase food level. Your food level is at 4/9, which is not critical, but it‚Äôs important to maintain a steady food supply. Consider interacting with the cow or find another source of food like fruit to keep your energy up. 3. Priority 2/5: Collect more resources (wood and iron) for crafting and upgrading tools. You have a few resources in your inventory, but gathering more wood and iron will allow you to craft better tools and weapons, as well as build more complex structures for shelter and other purposes. It would be ideal to collect more wood from the nearby tree and use your stone_pickaxe to collect more iron. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Top sub-task: Collect drink to restore thirst. Requirements: Find a water source like a lake or river to drink from. What should the player do first: Start by exploring your surroundings to locate a water source. You can move in any direction (west, east, north, or south) to look for a lake or river. Keep an eye on your observation messages for hints of water nearby. Once you find the water source, approach it and drink from it to restore your thirst level. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move East, South, North, or West (chosen based on proximity to water or other resources) Requirement: Flat ground in the direction the agent moves. 2. Priority 2: Drink (Do) Requirement: Facing the water source (lake or river) and be close enough to interact with it. 3. Priority 3: Make Wood Sword (for protection) Requirement: Nearby table and wood in inventory. 4. Priority 4: Place Plant (to grow food) Requirement: Sapling in inventory. 5. Priority 5: Eat Plant (to restore food) Requirement: Facing a fully grown plant (sapling turned into a fruit-bearing plant). Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Move East, South, North, or West Requirement: Flat ground in the direction the agent moves. Status: Met - the agent can move in any direction with flat ground observed. 2. Priority 2: Drink (Do) Requirement: Facing the water source (lake or river) and be close enough to interact with it. Status: Not met - no water source is currently observed. 3. Priority 3: Make Wood Sword (for protection) Requirement: Nearby table and wood in inventory. 240 Status: Not met - there‚Äôs a table observed, but it‚Äôs far (5 steps south-east). However, the player already has 1 wood in inventory. 4. Priority 4: Place Plant (to grow food) Requirement: Sapling in inventory. Status: Met - the player has a sapling in their inventory. 5. Priority 5: Eat Plant (to restore food) Requirement: Facing a fully grown plant (sapling turned into a fruit-bearing plant). Status: Not met - no fully grown plant is currently observed. Question: Did the last player action succeed? Why? Answer: Yes, the last player action succeeded. The move_south action was successful because there was flat ground (grass) in the direction the player wanted to move (south) and the player had enough energy to perform the action. Question: Choose the best executable action from above. Answer: The best executable action from the list above is Priority 4: Place Plant (to grow food), as its requirements are met and the player has a sapling in their inventory. ============Step: 157, Cumulative Reward: 1.0============ You took action place_plant. You see: - grass 1 steps to your north - stone 5 steps to your north-east - path 2 steps to your east - tree 5 steps to your north-west - table 4 steps to your south-east - cow 1 steps to your west You face plant at your front (south). Your status: - health: 9/9 - food: 4/9 - drink: 2/9 - energy: 8/9 Your inventory: - wood: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Do Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone resource; requires a wood pickaxe or better to collect. 2. Path: Provides ease of movement; no requirements. 3. Tree: Provides wood resource; requires no tool or a wood axe to collect. 4. Table: Allows crafting of tools and weapons; requires wood to make and place. 5. Cow: Provides food (meat) when defeated; no tool required, but a weapon makes it easier. 6. Grass: No resources; no requirements. 7. Plant: Will grow and provide food; requires sapling to place, time and protection to grow. Question: What was the last action taken by the player? Answer: The last action taken by the player was place_plant. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Yes, the requirements for interaction are met as you have a wood_pickaxe and a stone_pickaxe in your inventory. 2. Path: Yes, there are no specific requirements to interact with the path. 3. Tree: Yes, the requirements for interaction are met as you don‚Äôt need a tool to collect wood or you can use an axe (not in your inventory currently). 4. Table: Yes, the requirements for interaction are met since you have wood in your inventory and you can place a table if needed. 5. Cow: Yes, the requirements for interaction are met as you can defeat the cow without a tool or by using a weapon (not in your inventory currently). 6. Grass: Yes, there are no specific requirements to interact with grass. 7. Plant: Yes, the requirements for interaction with the plant are met since you have placed the sapling and it is now growing. Protection and time are required for the plant to grow fully. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Find a water source and drink: Priority 5/5 - With the drink level at 2/9, finding a water source and drinking from it is essential to prevent dehydration. 2. Eat food to replenish hunger: Priority 4/5 - The food level is low at 4/9, and the player needs to eat food, such as defeating the cow and eating its meat, to maintain good health. 241 3. Craft a weapon (wood/stone sword) for self-defense: Priority 3/5 - Although the immediate environment seems safe, the player should craft a weapon by interacting with the table to be prepared for any potential threats from hostile creatures. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Top Sub-task: Find a water source and drink. Requirements: Locate a water source (such as a lake, river, or pond) and be close enough to interact with it. What should the player do first: The player should start by exploring the surrounding area, moving in different directions to find a water source. Once located, stand at the water‚Äôs edge and take the action drink to restore the drink level. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move (Direction) - Requirement: Flat ground in the direction the player chooses (North, East, South, or West). This action is essential for exploring the environment and searching for resources like water sources, wood, and stones. 2. Priority 2: Drink - Requirement: Near a water source (such as a lake or river). This action is significant for restoring the player‚Äôs drink level and maintaining their overall survival. 3. Priority 3: Make Wood Pickaxe - Requirement: Nearby table and wood in inventory. Crafting a wood pickaxe allows the player to collect stone and other essential materials for further crafting and progress in the game. 4. Priority 4: Collect Wood - Requirement: None. Collecting wood is fundamental for creating various crafting stations, tools, and shelter. It is also required for making a wood pickaxe, which is indispensable for gathering more advanced resources. 5. Priority 5: Place Table - Requirement: Wood in inventory. Placing a table enables the player to craft tools such as pickaxes and swords, essential for gathering resources and defending against monsters. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Move (Direction) - Yes, the requirements are met for any direction with flat ground. The player can move North, East, South, or West based on their choice and explore their environment. 2. Priority 2: Drink - No, the requirement is not met as there is no mention of a water source (such as a lake or river) in the player‚Äôs current observation. 3. Priority 3: Make Wood Pickaxe - No, the requirement is not met because the player already has a wood_pickaxe in their inventory. 4. Priority 4: Collect Wood - Yes, the requirement is met. There is a tree 5 steps to the player‚Äôs north-west. The player can move towards the tree, and with the wood_pickaxe, collect more wood. 5. Priority 5: Place Table - No, the requirement is not met because there is already a table 4 steps to the player‚Äôs south- east. Since the table is in the player‚Äôs proximity, there is no need to place another table. Question: Did the last player action succeed? Why? Answer: Yes, the last player action place_plant succeeded because the player had a sapling in their inventory, which allowed them to place the plant in the environment. Question: Choose the best executable action from above. Answer: The best executable action from the list above is Priority 1: Move (Direction). The player can choose a direction with flat ground and explore their environment, such as moving towards the tree to collect more wood or searching for a water source to drink from. ============Step: 158, Cumulative Reward: 0.0============ You took action do. You see: - stone 5 steps to your north-east - path 2 steps to your east - tree 5 steps to your north-west - table 4 steps to your south-east - cow 2 steps to your south-west You face grass at your front (south). Your status: - health: 9/9 - food: 4/9 - drink: 2/9 - energy: 8/9 Your inventory: - wood: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move West 242 Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: - Stone: Provides stone resource, requires wood or stone pickaxe to collect. - Path: Provides a walking area, no requirements. - Tree: Provides wood, requires any type of pickaxe to collect. - Table: Craftable object (already created), provides a crafting surface to make tools and weapons, requires wood to create. - Cow: Provides food, requires any weapon or tool to defeat. - Grass: Provides no resource, can be walked on, no requirements. Question: What was the last action taken by the player? Answer: The last action taken by the player was do. Question: For each object in the list, are the requirements met for interaction? Answer: - Stone: Yes, the requirements are met as you have a wood_pickaxe and a stone_pickaxe in your inventory. - Path: Yes, the requirements are met as there is no restriction for walking on the path. - Tree: Yes, the requirements are met as you have a wood_pickaxe and a stone_pickaxe in your inventory. - Table: Yes, the requirements are met as the table is already created and can be used for crafting. - Cow: Yes, the requirements are met as you can use any weapon or tool in your inventory to defeat the cow. - Grass: Yes, the requirements are met as there are no restrictions for walking on or interacting with grass. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Drink water to restore thirst (Priority: 5/5) - Your drink level is currently 2/9, and it is essential to maintain hydration in the game. 2. Eat food to restore hunger (Priority: 4/5) - Your food level is currently 4/9. Defeating the cow nearby and eating its resources can help increase your food level. 3. Collect more resources, such as wood and stone, to craft better tools and weapons (Priority: 3/5) - This will help improve your in-game abilities and enable you to face challenges more effectively. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Top sub-task: Drink water to restore thirst (Priority: 5/5) Requirements: Locate a source of water, such as a lake, river, or well, to drink from. What the player should do first: The player should explore their surroundings, moving in different directions to find a nearby water source. Once a water source is found, the player should approach it and perform the action to drink the water and restore their thirst level. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority: 5/5 Action: Move West, East, North, or South Requirement: Flat ground in the chosen direction Purpose: Explore the surroundings to find a water source 2. Priority: 4/5 Action: Do Requirement: Facing a water source Purpose: Drink water to restore thirst level 3. Priority: 4/5 Action: Move West, East, North, or South Requirement: Flat ground in the chosen direction Purpose: Approach a cow to restore the food level 4. Priority: 3/5 Action: Do Requirement: Facing a cow Purpose: Eat a cow to restore the food level 5. Priority: 2/5 Action: Sleep Requirement: Energy level is below maximum Purpose: Restore energy level Question: For each action in the list, are the requirements met? Answer: 1. Action: Move West, East, North, or South Requirement: Flat ground in the chosen direction Status: Met - All directions have flat ground for movement 2. Action: Do Requirement: Facing a water source Status: Not met - The player is not currently facing a water source 3. Action: Move West, East, North, or South Requirement: Flat ground in the chosen direction Status: Met - All directions have flat ground for movement 4. Action: Do Requirement: Facing a cow Status: Not met - The player is not currently facing a cow 5. Action: Sleep 243 Requirement: Energy level is below maximum Status: Not met - Player‚Äôs energy level is 8/9, which is not below maximum Question: Did the last player action succeed? Why? Answer: It is not clear whether the last player action do succeeded, as the provided observation does not specify the intended result of the action or any changes in the player‚Äôs environment, inventory, or status after performing the action. Question: Choose the best executable action from above. Answer: The best executable action from the list is the first action: Action: Move West, East, North, or South Requirement: Flat ground in the chosen direction This action has its requirements met, and the player can explore the surroundings to find a water source. ============Step: 159, Cumulative Reward: 0.0============ You took action move_west. You see: - stone 7 steps to your north-east - path 3 steps to your east - tree 4 steps to your north-west - table 5 steps to your south-east - cow 1 steps to your south You face grass at your front (west). Your status: - health: 9/9 - food: 4/9 - drink: 2/9 - energy: 8/9 Your inventory: - wood: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Do Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone, a resource needed for crafting tools and furnaces; requires a wood pickaxe or higher to collect. 2. Path: Flat ground that makes it easier to walk; no requirements, provides ease of movement. 3. Tree: Provides wood, a resource for crafting, building, and fuel; requires an axe or chopping tool to collect. 4. Table: A crafting station for crafting tools and weapons; requires wood to build and place. 5. Cow: Provides food (meat) for restoring health; requires defeating the cow to collect meat. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_west. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Yes, the requirements are met for interaction as you have both a wood_pickaxe and a stone_pickaxe in your inventory. 2. Path: Yes, the requirements are met for interaction as there are no specific requirements for interacting with a path. 3. Tree: No, the requirements for interaction are not met, as you don‚Äôt have an axe or chopping tool in your inventory. 4. Table: Yes, the requirements are met for interaction as you have wood in your inventory. 5. Cow: Yes, the requirements are met for interaction, but you don‚Äôt have a specific tool or weapon to defeat the cow, which might make the process easier or faster. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Obtain drinking water (Priority: 5/5) - Your current drink level is low (2/9), so finding a water source like a lake, river, or well to quench your thirst is crucial for survival. 2. Collect food (Priority: 4/5) - Your current food level is at 4/9, meaning you need to find more food, such as by defeating the cow to collect meat, or growing and harvesting plants to maintain your health. 3. Craft necessary tools/weapons (Priority: 3/5) - Crafting an axe for chopping wood and a sword for defeating monsters like zombies, skeletons, and spiders faster will help you progress in the game and keep you safe. You already have wood and stone in your inventory, which can be used to craft an axe and/or a sword. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Requirements for the top sub-task (Obtain drinking water): 1. Find a water source like a lake, river, or well. First, the player should explore the surroundings to locate a nearby water source. The player can move in different directions (west, east, north, or south) to search for a water source. Once they find a water source, they should approach it and interact with it to drink the water and replenish their thirst. 244 Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: Priority 1: Action: Move (North, South, East, or West) Requirement: Flat ground in the direction the player is moving. Priority 2: Action: Collect Drink Requirement: Player facing a water source (lake, river, or well). Priority 3: Action: Do (interact with cow) Requirement: Player facing a cow; have necessary tool (like a sword). Priority 4: Action: Sleep Requirement: Energy level is below maximum. Priority 5: Action: Do (interact with tree) Requirement: Player facing a tree; have necessary tool (wood_pickaxe or stronger). Question: For each action in the list, are the requirements met? Answer: Priority 1: Action: Move (North, South, East, or West) Requirement: Flat ground in the direction the player is moving. Requirement Met: Yes. The player can move in any direction, as there are no obstacles mentioned. Priority 2: Action: Collect Drink Requirement: Player facing a water source (lake, river, or well). Requirement Met: No. There is no mention of a water source in the player‚Äôs observations. Priority 3: Action: Do (interact with cow) Requirement: Player facing a cow; have necessary tool (like a sword). Requirement Met: No. The player is not currently facing the cow. Priority 4: Action: Sleep Requirement: Energy level is below maximum. Requirement Met: Yes. The player‚Äôs energy is at 8/9. Priority 5: Action: Do (interact with tree) Requirement: Player facing a tree; have necessary tool (wood_pickaxe or stronger). Requirement Met: No. The player is not currently facing the tree and has no stronger tool than wood_pickaxe. Question: Did the last player action succeed? Why? Answer: Yes, the last player action succeeded. The player successfully moved west because there was flat ground (grass) in that direction, allowing the player to move. Question: Choose the best executable action from above. Answer: The best executable action from above is: Priority 1: Action: Move (North, South, East, or West) Requirement: Flat ground in the direction the player is moving. Requirement Met: Yes. The player can move in any direction, as there are no obstacles mentioned. ============Step: 160, Cumulative Reward: 0.0============ You took action do. You see: - stone 7 steps to your north-east - path 3 steps to your east - tree 4 steps to your north-west - table 5 steps to your south-east - cow 2 steps to your south You face grass at your front (west). Your status: - health: 9/9 - food: 4/9 - drink: 2/9 - energy: 8/9 Your inventory: - wood: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ 245 Question: Action Answer: Move North Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone resource when mined; requires a wood or better pickaxe to mine. 2. Path: No specific resources; facilitates easier navigation between locations. 3. Tree: Provides wood resource when chopped; requires a wood or better axe to chop down. 4. Table: Aims for crafting tools and weapons; requires wood to craft. 5. Cow: Provides food when killed; no specific requirement to kill, but using a weapon like a wood or better sword is helpful. Question: What was the last action taken by the player? Answer: The last action taken by the player was do. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Yes, the requirements are met for interaction as you have a wood_pickaxe and a stone_pickaxe in your inventory. 2. Path: Yes, the requirements are met for interaction as there are no specific requirements to navigate paths. 3. Tree: No, the requirements are not met for interaction as you don‚Äôt have an axe in your inventory. You need a wood or better axe to chop down the tree. 4. Table: Yes, the requirements are met for interaction as you have wood in your inventory, which is required to craft most tools and weapons. 5. Cow: Yes, the requirements are met for interaction. Although you don‚Äôt have a sword in your inventory, you can still try to kill the cow using other means, but having a wood or better sword would be more efficient. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Priority 4/5: Increase drink level - Find a water source such as a lake or river to restore your character‚Äôs thirst level. 2. Priority 4/5: Increase food level - Kill the nearby cow to obtain food, increasing your character‚Äôs food level. 3. Priority 3/5: Make a sword - Interact with the table and craft a sword, either wood, stone, or iron, depending on the resources available, to efficiently kill the cow and defend against potential monsters. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Top sub-task: Increase drink level - Find a water source such as a lake or river to restore your character‚Äôs thirst level. Requirements for the top sub-task: - Locate a water source in the environment. What the player should do first: - Explore the environment by moving in different directions (north, east, south, or west) to search for a water source. Once found, interact with the water source to drink and restore thirst levels. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move North/East/South/West (choose the direction that leads to a potential water source) Requirement: Flat ground in the chosen direction 2. Priority 2: Collect Drink (to restore thirst) Requirement: Facing a water source such as a lake or river 3. Priority 3: Move North/East/South/West (to find more wood and food sources) Requirement: Flat ground in the chosen direction 4. Priority 4: Do (to collect wood or gather food from trees, cows, or any other source) Requirement: Facing the resource (tree or cow) and having the necessary tool (if required) 5. Priority 5: Eat Cow or Eat Plant (to restore food level) Requirement: For Eat Cow, a dead cow as a food source; for Eat Plant, a grown plant as a food source Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Move North/East/South/West (choose the direction that leads to a potential water source) Requirement: Flat ground in the chosen direction - The requirement is met, as there is flat ground (grass) in the front (west) direction. 2. Priority 2: Collect Drink (to restore thirst) Requirement: Facing a water source such as a lake or river - The requirement is NOT met, as the player is not currently facing a water source. 3. Priority 3: Move North/East/South/West (to find more wood and food sources) Requirement: Flat ground in the chosen direction - The requirement is met, as there is flat ground (grass) in the front (west) direction. 4. Priority 4: Do (to collect wood or gather food from trees, cows, or any other source) Requirement: Facing the resource (tree or cow) and having the necessary tool (if required) - The requirement is NOT met, as the player is facing grass and not a resource to collect. 5. Priority 5: Eat Cow or Eat Plant (to restore food level) Requirement: For Eat Cow, a dead cow as a food source; for Eat Plant, a grown plant as a food source - The requirement is NOT met, as the player does not have a dead cow or a grown plant in their inventory. Question: Did the last player action succeed? Why? Answer: 246 It is unclear if the last player action do succeeded because there is no specified interaction or context provided. The player is facing grass, and there are no indications of any changes to their surroundings or inventory after taking the do action. It is possible that the do action did not perform anything relevant due to the lack of context or interaction. Question: Choose the best executable action from above. Answer: The best executable action from the list above is: Priority 1: Move North/East/South/West (choose the direction that leads to a potential water source) Requirement: Flat ground in the chosen direction Since the player is currently facing flat ground (grass) to the west, this action can be executed. The player should choose a direction that leads them towards a potential water source. ============Step: 161, Cumulative Reward: 0.0============ You took action move_north. You see: - stone 6 steps to your north-east - path 3 steps to your east - tree 3 steps to your north-west - table 6 steps to your south-east - furnace 3 steps to your north - cow 3 steps to your south You face grass at your front (north). Your status: - health: 9/9 - food: 4/9 - drink: 2/9 - energy: 8/9 Your inventory: - wood: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move South Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone resource; requires a wood_pickaxe or better to collect. 2. Path: No resource provided; aids in navigation and movement. 3. Tree: Provides wood resource; can be collected barehanded or with tools. 4. Table: Crafting station; requires wood to craft. 5. Furnace: Smelting station; requires stone to craft. 6. Cow: Provides food when defeated; no specific requirements for defeating. 7. Grass: No significant resource provided; no requirements. 8. Iron, coal, and wood in your inventory: Used to craft and smelt tools and weapons; collect them from the environment with the appropriate tools. 9. Wood_pickaxe: Basic tool for collecting stone; requires wood to craft. 10. Stone_pickaxe: Improved tool for collecting iron; requires stone to craft. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_north. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Yes, the requirements are met as you have both a wood_pickaxe and a stone_pickaxe in your inventory. 2. Path: Yes, as there are no specific requirements to interact with the path; just walk on it. 3. Tree: Yes, you can interact with the tree to collect wood either barehanded or using a tool from your inventory. 4. Table: Yes, the table is present in the environment, and you can use it to make tools or weapons with available resources in your inventory. 5. Furnace: Yes, the furnace is present in the environment, and you can use it to smelt iron with coal using your available resources. 6. Cow: Yes, you can interact with the cow either by attacking it barehanded or using one of your pickaxes as an improvised weapon. However, having a sword would be more effective. 7. Grass: Yes, you can interact with the grass by walking over it, but it does not provide any significant resources. 8. Iron, coal, and wood in your inventory: Yes, you can use these resources to craft and smelt tools and weapons as long as there is a table and furnace available. 9. Wood_pickaxe: Yes, you can use the wood_pickaxe in your inventory to collect stone. 10. Stone_pickaxe: Yes, you can use the stone_pickaxe to collect iron. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Priority 4/5 - Find drinkable water: As drink: 2/9, you are low on drink points, and finding a source of drinkable water such as a lake or river is essential to prevent any negative effects. 2. Priority 3/5 - Collect more wood and craft a weapon: Since you have a limited amount of wood and no weapon, collecting more wood from the nearby tree and crafting a weapon (such as a wood sword) at the available table is important for self-defense against possible threats like monsters. 247 3. Priority 2/5 - Defeat the cow for food: As food: 4/9, you may want to replenish food points soon. Engaging the nearby cow and defeating it will provide you with food resources to help maintain your health and energy levels. Question: What are the requirements for the top sub-task? What should the player do first? Answer: The top sub-task is to find drinkable water. Requirements: - Locate a source of drinkable water such as a lake or river on the map. - Move towards the identified water source using move actions (move_north, move_south, move_east, or move_west). What should the player do first: - Scan the surroundings in the player observation step to locate a water source (lake, river, or any other form of drinkable water) that may not be visible in the current observation. If a water source is spotted, the player should start moving toward it using appropriate move actions. If no water source is visible, continue exploring the area in different directions while keeping an eye out for any water sources. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: Based on the current situation, here are the top 5 actions the player should take, along with their requirements and priority: 1. Priority 1: Move towards a water source to restore the drink level (Action: Move East, Move West, Move North or Move South). Requirements: Flat ground in the direction of the water source. 2. Priority 2: Drink water to restore the drink level (Action: Do). Requirements: Facing the water source and be adjacent to it. 3. Priority 3: Move towards the cow to retrieve food (Action: Move East, Move West, Move North or Move South). Requirements: Flat ground in the direction of the cow. 4. Priority 4: Interact with the cow to retrieve more food (Action: Do). Requirement: Facing the cow and being adjacent to it. 5. Priority 5: Move towards the table and/or furnace to craft necessary tools and items (Action: Move East, Move West, Move North or Move South). Requirements: Flat ground in the direction of the table and/or furnace. Question: For each action in the list, are the requirements met? Answer: Based on the player‚Äôs current situation: 1. Priority 1: Move towards a water source to restore the drink level (Action: Move East, Move West, Move North or Move South). Requirements: Flat ground in the direction of the water source. Requirements met? No, there‚Äôs no mention of a water source in the player‚Äôs observation steps. 2. Priority 2: Drink water to restore the drink level (Action: Do). Requirements: Facing the water source and be adjacent to it. Requirements met? No, as there is no mention of a water source in the player‚Äôs observation steps. 3. Priority 3: Move towards the cow to retrieve food (Action: Move East, Move West, Move North, or Move South). Requirements: Flat ground in the direction of the cow. Requirements met? Yes, the player can move south to approach the cow as there‚Äôs flat ground in the south direction. 4. Priority 4: Interact with the cow to retrieve more food (Action: Do). Requirement: Facing the cow and being adjacent to it. Requirements met? Not yet, the player needs to move towards the cow first (following Priority 3 action). 5. Priority 5: Move towards the table and/or furnace to craft necessary tools and items (Action: Move East, Move West, Move North or Move South). Requirements: Flat ground in the direction of the table and/or furnace. Requirements met? Yes, the player can move southeast to approach the table or north to approach the furnace as there‚Äôs flat ground in those directions. Question: Did the last player action succeed? Why? Answer: Yes, the last player action (move_north) succeeded because there was flat ground (grass) in the north direction, allowing the player to move there. Question: Choose the best executable action from above. Answer: The best executable action from above is Priority 3: Move towards the cow to retrieve food (Action: Move South). The requirements for this action are met as there is flat ground in the direction of the cow. ============Step: 162, Cumulative Reward: 0.0============ You took action move_south. You see: - stone 7 steps to your north-east - path 3 steps to your east - tree 4 steps to your north-west - table 5 steps to your south-east - cow 2 steps to your south You face grass at your front (south). Your status: - health: 9/9 - food: 4/9 - drink: 2/9 - energy: 8/9 Your inventory: 248 - wood: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move East Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone, which can be used to craft tools and build structures; requires a wood pickaxe or higher to mine. 2. Path: Provides easier navigation with no resource; no requirement for interaction. 3. Tree: Provides wood, which is essential for crafting tools, weapons, and building structures; requires an axe, or it can be collected by hand. 4. Table: Provides a surface for crafting tools and weapons; requires wood to craft. 5. Furnace: Provides a heat source for smelting ores and cooking food; requires stone to craft. 6. Cow: Provides meat/food for restoring health and hunger; requires a weapon or can be killed using hands. 7. Grass: Provides no direct resources but can be used for navigation or clearing space; no requirement for interaction. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_south. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Yes, the requirements are met as the player has a wood_pickaxe and a stone_pickaxe in their inventory. 2. Path: Yes, the requirements are met as there are no specific requirements for interaction with a path. 3. Tree: Yes, the requirements are met since wood can be collected by hand, though having an axe would be more efficient. 4. Table: Yes, the requirements are met as the player has wood in their inventory to craft or place a table. 5. Furnace: Yes, the requirements are met as the player has stone in their inventory to craft or place a furnace. 6. Cow: Yes, the requirements are met since the player can use their hands or a weapon (wood_pickaxe or stone_pickaxe) to kill the cow for meat. 7. Grass: Yes, the requirements are met as there are no specific requirements for interaction with grass. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Find or gather water to restore the player‚Äôs thirst (drink: 2/9) - Priority: 5/5 2. Obtain food by killing the cow for meat or finding other food sources to restore the player‚Äôs hunger (food: 4/9) - Priority: 4/5 3. Craft an axe to efficiently gather wood from the tree, which can be used for crafting more tools, weapons, and building structures - Priority: 3/5 Question: What are the requirements for the top sub-task? What should the player do first? Answer: The top sub-task is to find or gather water to restore the player‚Äôs thirst. The requirements for this task include: 1. Approach a water source, such as a lake or river. 2. Interact with the water source to drink water. 3. Ensure the player‚Äôs safety while drinking, as enemies could approach during this action. The player should first locate and head towards a water source. Since there isn‚Äôt one visible in the current observations, the player should explore the surroundings to find a water source (e.g., moving east along the path or examining other directions). Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move East (Requirement: Flat ground right to the agent) - To explore the surroundings and possibly locate a water source. 2. Priority 2: Move North (Requirement: Flat ground above of the agent) - To further explore the surroundings in search of a water source, if not found after moving east. 3. Priority 3: Move West (Requirement: Flat ground left to the agent) - To continue exploring and finding a water source if not found after moving north. 4. Priority 4: Move South (Requirement: Flat ground below the agent) - To search in a different direction if the water source isn‚Äôt found after moving west. 5. Priority 5: Do (Facing creature or material; have necessary tool) - Interaction with a water source to drink water or other useful resources once they are found. This will depend on the player‚Äôs location and surroundings. Question: For each action in the list, are the requirements met? Answer: 1. Move East: Yes, the requirement of flat ground right to the agent is met. The player can move east, as there is a path 3 steps to the east. 2. Move North: Yes, the requirement of flat ground above of the agent is met. The player already moved north in Step 322. 3. Move West: Yes, the requirement of flat ground left to the agent is met. The player can move west, as there is a tree 4 steps to the north-west. 4. Move South: Yes, the requirement of flat-ground below the agent is met. The player can move south and already performed this action in Step 324. 5. Do: This action is dependent on the player‚Äôs location and the object the player is facing. Currently, the player is facing grass to the south, and there is no specific material or creature to interact with. Therefore, the requirement for the Do action is not met at this moment. Question: Did the last player action succeed? Why? Answer: Yes, the last player action (move_south) succeeded. The action was successful because there was flat ground below the agent, allowing them to move in the south direction. 249 Question: Choose the best executable action from above. Answer: The best executable action from the list above is to move east (Priority 1), as the requirement of flat ground right to the agent is met and it may lead to finding a water source or other resources. ============Step: 163, Cumulative Reward: 0.0============ You took action move_east. You see: - stone 5 steps to your north-east - path 2 steps to your east - tree 5 steps to your north-west - table 4 steps to your south-east - cow 2 steps to your south You face grass at your front (east). Your status: - health: 9/9 - food: 4/9 - drink: 2/9 - energy: 8/9 Your inventory: - wood: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move South Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone resource, requires a wood or better pickaxe to mine. 2. Path: No direct resource, allows easier movement across the terrain. 3. Tree: Provides wood resource, requires a wood or better pickaxe to chop down. 4. Table: No direct resource, allows crafting tools and weapons, requires wood to craft. 5. Cow: Provides food (meat) resource when defeated, no specific requirement to chase or defeat. 6. Grass: No direct resource, indicates a ground surface to walk on. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_east. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Yes, the requirements are met for interaction as you possess a wood_pickaxe and a stone_pickaxe in your inventory. 2. Path: Yes, the requirements are met for walking on the path as there are no specific requirements. 3. Tree: Yes, the requirements are met for interaction as you possess a wood_pickaxe and a stone_pickaxe in your inventory. 4. Table: Yes, the requirements are met for crafting tools and weapons as you have wood and pickaxes in your inventory. 5. Cow: Yes, the requirements are met for interaction as there are no specific requirements to chase or defeat the cow. 6. Grass: Yes, the requirements are met for walking on grass as you are already able to move around the terrain. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Increase drink level: Priority 5/5 - As the player‚Äôs drink level is 2/9, finding a water source and drinking water should be a top priority. 2. Increase food level: Priority 4/5 - As the player‚Äôs food level is 4/9, either defeating the cow to get meat or finding other food sources to eat and improve the food level is essential. 3. Craft Iron Pickaxe or Sword: Priority 3/5 - With iron, coal, and wood in the inventory and a table nearby, the player can prioritize crafting an iron pickaxe or iron sword to gather more advanced resources or defend against monsters more effectively. The player must find a furnace or place one to smelt the iron. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Top sub-task: Increase drink level Requirements: 1. Find a water source (e.g., lake, river) and be close to it. What should the player do first: 1. The player should search for a nearby water source by exploring the surroundings. Once the water source is found, the player should move closer to it to be able to drink and increase their drink level. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move towards the water source (Action: Move West, Move East, Move North, or Move South) Requirement: Identify the direction the water source is located in, and make sure there is flat ground in that direction. 2. Priority 2: Drink water to increase the drink level (Action: Do) Requirement: Facing the water source and be close enough to it. 250 3. Priority 3: Move closer to the cow (Action: Move West, Move East, Move North, or Move South) Requirement: Identify the direction of the cow and ensure there is flat ground in that direction. 4. Priority 4: Hunt the cow to get meat (Action: Do) Requirement: Face the cow, and have a wood, stone, or iron sword in your inventory to kill the cow. 5. Priority 5: Increase food level by eating meat (Action: Eat Cow) Requirement: Have the cow‚Äôs meat in your inventory after killing the cow. Question: For each action in the list, are the requirements met? Answer: 1. Move towards the water source (Action: Move West, Move East, Move North, or Move South) The water source‚Äôs direction is not mentioned in the observations. So the requirement for choosing the correct direction is not met currently. 2. Drink water to increase the drink level (Action: Do) The water source is not mentioned in the observations; hence the requirement of facing and being close enough to the water source is not met. 3. Move closer to the cow (Action: Move West, Move East, Move North, or Move South) Yes, the cow is 2 steps to the south of the player, and the direction is known. The requirement for this action is met. 4. Hunt the cow to get meat (Action: Do) The player needs to face the cow and have a wood, stone, or iron sword in their inventory. The player does not currently have a sword in their inventory, so the requirement for this action is not met. 5. Increase food level by eating meat (Action: Eat Cow) The player has not hunted a cow yet, so they do not have the cow‚Äôs meat in their inventory. The requirement for this action is not met. Question: Did the last player action succeed? Why? Answer: Yes, the last player action (move_east) succeeded because there was flat ground (grass) in front of the player, allowing them to move east without any obstacles or restrictions. Question: Choose the best executable action from above. Answer: The best executable action from the list above is: 3. Move closer to the cow (Action: Move South) The requirement for this action is met, as the cow is 2 steps to the south of the player and the direction is known. ============Step: 164, Cumulative Reward: 0.0============ You took action move_south. You see: - grass 1 steps to your west - stone 5 steps to your south-east - path 3 steps to your north-east - tree 5 steps to your south-east - table 3 steps to your south-east You face cow at your front (south). Your status: - health: 9/9 - food: 4/9 - drink: 2/9 - energy: 8/9 Your inventory: - wood: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move North Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone resource, requires a wood or higher-tier pickaxe to collect. 2. Path: Provides nothing but faster movement, no requirement. 3. Tree: Provides wood resource, requires a wood or higher-tier axe to collect (not available in your inventory). 4. Table: Provides a crafting area for making tools and weapons, no requirement. 5. Grass: Provides nothing, no requirement. 6. Cow: Provides food (eat cow) once defeated, no requirement. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_south. 251 Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Yes, the requirements are met for interaction as you have a wood_pickaxe and stone_pickaxe in your inventory. 2. Path: Yes, the requirements are met for interaction as there are no specific requirements for using the path. 3. Tree: No, the requirements are not met for interaction because an axe is required to collect wood from the tree and it‚Äôs not available in your inventory. 4. Table: Yes, the requirements are met for interaction as you can craft items with the table and you have necessary resources in your inventory. 5. Grass: Yes, the requirements are met for interaction as there are no specific requirements for interacting with grass. 6. Cow: Yes, the requirements are met for interaction as you don‚Äôt need any specific tools to defeat the cow and get food. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Increase drink level (Priority: 5/5): The player‚Äôs drink level is at 2/9, so finding a water source and drinking from it should be a high priority to avoid dehydration. 2. Defeat and eat cow (Priority: 4/5): The player‚Äôs food level is at 4/9, which indicates a need for food. Defeating the cow and consuming it will help replenish the food level. 3. Craft better tools and weapons (Priority: 3/5): The player has some basic resources in their inventory. They should be encouraged to collect more resources and utilize the table to craft better tools and weapons, which will help in survival and efficient resource-gathering. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Top Sub-Task: Increase drink level (Priority 5/5) Requirements: - Locate a water source, like a river or lake - Approach the water source - Interact with the water source to drink from it The player should first find a water source. In the current observations, there is no water source visible, so the player should explore their surroundings by moving in various directions until they discover a water source, such as a river or lake. Once found, the player should approach the water source and interact with it to drink and replenish their drink level. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Action: Move North (Priority: 4/5) Requirement: Flat ground above the agent. Reason: To explore surroundings in search of a water source for drinking and increase the drink level. 2. Action: Move West (Priority: 4/5) Requirement: Flat ground left of the agent. Reason: To explore surroundings in search of a water source for drinking, and increase the drink level. 3. Action: Move East (Priority: 4/5) Requirement: Flat ground right of the agent. Reason: To explore surroundings in search of a water source for drinking and increase the drink level. 4. Action: Move South (Priority: 4/5) Requirement: Flat ground below the agent. Reason: To explore surroundings in search of a water source for drinking, and increase the drink level. 5. Action: Do (Priority: 3/5) Requirement: Facing creature or material, and have the necessary tool. Reason: To interact with creatures or materials based on the situation, such as attacking monsters, mining resources, or interacting with a water source once found. Question: For each action in the list, are the requirements met? Answer: 1. Action: Move North Requirement: Flat ground above the agent. Requirements Met: Yes (Player Observation Step 328: You took action move_south, which means the agent moved from the North ) 2. Action: Move West Requirement: Flat ground left of the agent. Requirements Met: Yes (Player Observation Step 328: You see grass 1 step to your west) 3. Action: Move East Requirement: Flat ground right of the agent. Requirements Met: Yes (Player Observation Step 326: You took action move_east, which means the agent moved from the East) 4. Action: Move South Requirement: Flat ground below the agent. Requirements Met: Yes (Player Observation Step 328: You face cow at your front (south), which means there is a flat ground below the agent) 5. Action: Do Requirement: Facing creature or material, and have the necessary tool. Requirements Met: Partially (Player Observation Step 328: You face the cow at your front (south), but the necessary tool to interact with the cow, like a sword or an axe, is not yet in the inventory) Question: Did the last player action succeed? Why? Answer: Yes, the last player action (move_south) succeeded because the player was able to change their position from step 326 to step 328, moving closer to the cow as described in the observation. There were no obstacles or restrictions preventing the player from moving south, which is why the action succeeded. 252 Question: Choose the best executable action from above. Answer: The best executable action from the list above is Move North, as the requirement of flat ground above the agent is met, and it allows the player to explore the surroundings in search of a water source for drinking. ============Step: 165, Cumulative Reward: 0.0============ You took action move_north. You see: - stone 5 steps to your north-east - path 2 steps to your east - tree 5 steps to your north-west - table 4 steps to your south-east - cow 2 steps to your south You face grass at your front (north). Your status: - health: 9/9 - food: 4/9 - drink: 2/9 - energy: 8/9 Your inventory: - wood: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move East Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone resource, requires a wood pickaxe or better to collect. 2. Path: No resource. No requirement. 3. Tree: Provides wood resource, which can be collected by hand, but an axe is more efficient. 4. Table: No resources provided. No requirement except to be placed with wood in inventory. 5. Cow: Provides food (meat) when killed, may require any weapon to kill efficiently, but hand-to-hand combat is also possible. 6. Grass: No resources provided. No requirement. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_north. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Yes, the requirements are met as you have a wood_pickaxe and a stone_pickaxe in your inventory. 2. Path: Yes, there are no requirements for interaction. 3. Tree: Yes, the requirements are met as you can collect wood by hand, although using an axe would be more efficient. 4. Table: Yes, the requirements are met as it has already been placed and can be interacted with. 5. Cow: Yes, the requirements are met since you can attack it by hand or use a crafted weapon (which is not available in your inventory currently). 6. Grass: Yes, there are no requirements for interaction. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Priority 4/5: Find and drink water - Your drink level is at 2/9, so finding a water source and drinking from it should be a priority to avoid thirst. 2. Priority 3/5: Hunt the cow for food - Your food level is at 4/9, and hunting the nearby cow provides meat, which can be used as food. This task is not as urgent as finding water, but it‚Äôs still essential to maintain your food level. 3. Priority 2/5: Collect more wood from the tree - You have only 1 wood in your inventory, and collecting more wood could be helpful for crafting more tools, weapons, or building shelters. This task has a lower priority than finding water and hunting the cow since it doesn‚Äôt directly affect your survival. Question: What are the requirements for the top sub-task? What should the player do first? Answer: The top sub-task is finding and drinking water. Requirements: 1. Locate a water source, such as a lake or river. What should the player do first: 1. Explore the area and search for a water source. The player can move in different directions (west, east, north, and south ) to discover new terrains and find a water source. Once the water source is found, the player should approach it and drink from it to restore their thirst level. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1 - Move East: Flat ground right to the agent. Requirement: Look for a water source in the east direction. 253 2. Priority 2 - Move North: Flat ground above of the agent. Requirement: If moving east doesn‚Äôt reveal a water source, change the direction to north and continue the search. 3. Priority 3 - Move West: Flat ground left to the agent. Requirement: If moving north doesn‚Äôt reveal a water source, change the direction to west and continue the search. 4. Priority 4 - Move South: Flat ground below the agent. Requirement: If moving west doesn‚Äôt reveal a water source, change the direction to south and continue the search. 5. Priority 5 - Drink: At the water source (lake or river). Requirement: Successfully find a water source, approach it, and drink from it to restore the player‚Äôs thirst level. Question: For each action in the list, are the requirements met? Answer: 1. Move East: Yes, the requirement is met as there is flat ground (path) 2 steps to the east of the player. 2. Move North: Yes, the requirement is met as there is flat ground (grass) right in front of the player (north). 3. Move West: Yes, the requirement is met as there is flat ground (grass) 1 step to the west of the player. 4. Move South: Yes, the requirement is met as there is flat ground (grass) and a cow 2 steps to the south of the player. 5. Drink: No, the requirement is not met as there is currently no visible water source (lake or river) in the player‚Äôs surroundings. The player needs to explore the area by moving in various directions to find a water source. Question: Did the last player action succeed? Why? Answer: Yes, the last player action (move_north) succeeded because there was flat ground (grass) in front of the player (north) that allowed them to move without any obstruction. Question: Choose the best executable action from above. Answer: The best executable action from above is to Move East because there is flat ground (path) 2 steps to the east of the player, and it allows the player to explore and search for a water source. ============Step: 166, Cumulative Reward: 0.0============ You took action move_east. You see: - grass 1 steps to your west - stone 4 steps to your north-east - tree 6 steps to your north-west - table 3 steps to your south-east - cow 3 steps to your south-west You face path at your front (east). Your status: - health: 9/9 - food: 3/9 - drink: 2/9 - energy: 8/9 Your inventory: - wood: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move West Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone resource; requires a wood_pickaxe or better tool. 2. Path: Provides a path to follow for easy navigation; no requirements. 3. Tree: Provides wood resource; requires a wood_pickaxe or better tool. 4. Table: Allows crafting of tools and weapons; requires collected wood to craft. 5. Cow: Provides food (meat) when hunted; requires a weapon (wood_sword, stone_sword, or better) to kill efficiently. 6. Grass: A basic terrain, no resources provided; no requirements. 7. Iron: Acquired from the player‚Äôs inventory; provides material to craft better tools and weapons; requires a stone_pickaxe or better to collect from an iron ore (not visible in the current observation). Question: What was the last action taken by the player? Answer: The last action taken by the player was move_east. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Yes, the requirements are met as the player has both a wood_pickaxe and a stone_pickaxe in their inventory. 2. Path: Yes, the requirements are met as there are no requirements for interacting with the path. 3. Tree: Yes, the requirements are met since the player has a wood_pickaxe in their inventory. 4. Table: The table is already placed, so interaction requirements depend on the crafting the player wants to perform. The player has wood and iron in their inventory, which is sufficient for some interactions (e.g., crafting a wood sword or an iron sword). 5. Cow: The player does not currently have a weapon in their inventory to efficiently hunt the cow. They would need a wood_sword, stone_sword, or better. 254 6. Grass: Yes, the requirements are met as there are no requirements for interacting with the grass. 7. Iron: The player already has iron in their inventory. If they encounter iron ore, they can mine it efficiently since they possess a stone_pickaxe. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Find water and drink to restore thirst. Priority: 5/5 (as drink level is 2/9) 2. Hunt the cow or find another food source to increase food level. Priority: 4/5 (as food level is 3/9) 3. Craft a weapon, such as a wood or iron sword, using the table to prepare for potential combat or hunting. Priority: 3/5 ( as the player doesn‚Äôt currently have a weapon in their inventory) Question: What are the requirements for the top sub-task? What should the player do first? Answer: Requirements for the top sub-task (Find water and drink to restore thirst): 1. Locate a source of water such as a lake or river 2. Approach the water source 3. Interact with the water source to drink What should the player do first: The first thing the player should do is search for a nearby water source in their surroundings. If not immediately visible, they should explore the environment while keeping their eyes open for a water source. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1 - Move West, East, North, or South: Look for a water source while exploring (Requirement: Flat ground in the respective direction) 2. Priority 2 - Drink: Restore thirst by drinking from the water source (Requirement: Facing the water source when found) 3. Priority 3 - Move West, East, North, or South: Approach the cow spotted in the surroundings (Requirement: Flat ground in the respective direction) 4. Priority 4 - Do: Interact with the cow to obtain food to restore hunger (Requirement: Facing the cow; no specific tool needed) 5. Priority 5 - Sleep: Restore energy by sleeping if energy decreases further (Requirement: Energy level is below maximum) Question: For each action in the list, are the requirements met? Answer: 1. Priority 1 - Move West, East, North, or South: Yes, the requirements are met. The player can move in any direction with flat ground. 2. Priority 2 - Drink: No, the requirements are not met yet. The player has not found a water source to drink from. 3. Priority 3 - Move West, East, North, or South: Yes, the requirements are met. The player can move in any direction with flat ground to approach the cow. 4. Priority 4 - Do: No, the requirements are not met yet. The player needs to approach the cow first and face it before interacting to obtain food. 5. Priority 5 - Sleep: Yes, the requirements are met. The player‚Äôs energy level is at 8/9, which means it‚Äôs below maximum, and they can sleep to restore energy. Question: Did the last player action succeed? Why? Answer: Yes, the last player action (move_east) succeeded because there was a path in front of the player to the east, allowing the player to move in that direction. Question: Choose the best executable action from above. Answer: The best executable action from the list is Priority 1 - Move West, East, North, or South: Look for a water source while exploring since the player needs to find a water source to drink and restore thirst. The requirement of flat ground in the respective direction is met. ============Step: 167, Cumulative Reward: 0.0============ You took action move_west. You see: - stone 5 steps to your north-east - path 2 steps to your east - tree 5 steps to your north-west - table 4 steps to your south-east - cow 1 steps to your south You face grass at your front (west). Your status: - health: 9/9 - food: 3/9 - drink: 2/9 - energy: 8/9 Your inventory: - wood: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move North Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone resource; requires a wood_pickaxe or better to collect. 255 2. Path: Provides no resource; can be walked on without any requirement. 3. Tree: Provides wood resource; requires a wood_pickaxe or better to collect. 4. Table: Provides crafting abilities; requires wood to build. 5. Cow: Provides food when defeated; requires no specific tool, but a sword is recommended for easier defeat. 6. Grass: Provides no resource; can be quickly converted to path by walking over it. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_west. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Yes, the requirements are met for interaction, as the player has a wood_pickaxe and a stone_pickaxe in their inventory. 2. Path: Yes, the requirements are met for interaction; the player can walk on the path without any need for specific tools or resources. 3. Tree: Yes, the requirements are met for interaction, as the player has a wood_pickaxe in their inventory. 4. Table: The table is not nearby (4 steps to the south-east), but once in proximity, the player can interact with it, as they have wood in their inventory to craft items. 5. Cow: Yes, the requirements are met for interaction; the player can defeat the cow without a specific tool or weapon, although using a sword would make it easier. 6. Grass: Yes, the requirements are met for interaction; the player can walk over the grass to convert it into a path without any need for specific tools or resources. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Find water and drink to replenish thirst. Priority: 5/5 2. Acquire more food by defeating the cow or finding other food sources. Priority: 4/5 3. Locate a safe shelter or build one to protect the player from any potential threats. Priority: 4/5 Question: What are the requirements for the top sub-task? What should the player do first? Answer: Requirements for the top sub-task (Find water and drink to replenish thirst): Locate a water source such as a lake or river and interact with it to drink water and replenish the thirst level. What should the player do first: The player should explore their surroundings to locate a water source nearby. Moving in different directions, such as north, east, south, or west, may help them find water faster. Once the water source is found, the player should interact with it to drink water and replenish their thirst level. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move North, East, South, or West (Requirements: Flat ground in the chosen direction) and The player should move in different directions to find a water source for drinking. 2. Priority 2: Drink (Requirements: Facing a water source like a lake or river) and The player should drink from the water source once found to replenish their thirst level. 3. Priority 3: Move towards the cow (Requirements: Flat ground in the chosen direction) - The player should move in the direction of the cow to hunt it for food. 4. Priority 4: Do (Requirements: Facing creature or material; have necessary tool) and The player should face the cow and perform the ‚ÄôDo‚Äô action to hunt it for food. 5. Priority 5: Eat Cow (Requirements: No specific requirements) and The player should eat the hunted cow to restore their food level. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Move North, East, South, or West (Requirements: Flat ground in the chosen direction) and Yes, the requirements are met for all directions since the player faces flat ground in each direction. 2. Priority 2: Drink (Requirements: Facing a water source like a lake or river) and No, the requirements are not met as the player has not found a water source for drinking yet. 3. Priority 3: Move towards the cow (Requirements: Flat ground in the chosen direction) - Yes, the requirements are met as there is a cow one step to the player‚Äôs south, and flat ground is present. 4. Priority 4: Do (Requirements: Facing creature or material; have necessary tool) and No, the requirements are not met, as the player is not yet facing the cow. 5. Priority 5: Eat Cow (Requirements: No specific requirements) and No, the requirements are not complete as the player hasn‚Äô t hunted the cow and obtained its meat yet. Question: Did the last player action succeed? Why? Answer: Yes, the last player action succeeded. The player was able to move west because there was grass at their front (west) and no obstacles blocking their movement. Question: Choose the best executable action from above. Answer: The best executable action from the list above is Priority 1: Move North, East, South, or West (Requirements: Flat ground in the chosen direction). In this case, the player should move south towards the cow since it‚Äôs one step to the player‚Äôs south and there is flat ground available. ============Step: 168, Cumulative Reward: 0.0============ You took action move_north. You see: - stone 4 steps to your east 256 - path 2 steps to your east - tree 4 steps to your north-west - table 5 steps to your south-east - furnace 4 steps to your north-west - cow 3 steps to your south-west You face grass at your front (north). Your status: - health: 9/9 - food: 3/9 - drink: 2/9 - energy: 7/9 Your inventory: - wood: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move East Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone resource; requires a wood_pickaxe or better to collect. 2. Path: Provides easier movement; no requirement. 3. Tree: Provides wood resource; requires a wood_pickaxe or better to collect. 4. Table: Allows crafting of tools and weapons; requires wood to place. 5. Furnace: Allows smelting of iron; requires stone to place and coal as fuel. 6. Cow: Provides food when defeated; no specific tool requirement. 7. Grass: No resource provided; no requirement. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_north. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Yes, the requirements are met for interaction as you have a wood_pickaxe and a stone_pickaxe in your inventory. 2. Path: Yes, the requirements are met for interaction as there are no specific requirements for moving on the path. 3. Tree: Yes, the requirements are met for interaction as you have a wood_pickaxe in your inventory. 4. Table: Yes, the requirements are met for interaction as you have wood in your inventory, and the table is placed in the game. 5. Furnace: Yes, the requirements are met for interaction as you have coal and iron in your inventory for smelting, and the furnace is placed in the game. 6. Cow: Yes, the requirements are met for interaction as there are no specific tool requirements for interacting with a cow. 7. Grass: Yes, the requirements are met for interaction as there are no specific requirements for interacting with grass. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Drink water (Priority: 5/5): With the player‚Äôs drink level at 2/9, it‚Äôs crucial to find a water source to restore the thirst level and avoid negative effects on health and energy. 2. Eat food (Priority: 4/5): The player‚Äôs food level is at 3/9, which indicates a need to restore it soon. Defeating the cow nearby and consuming it would help increase the food level and maintain the player‚Äôs health. 3. Collect more wood (Priority: 3/5): Wood is essential for crafting tools, weapons, and building materials. The player currently has only one piece of wood in their inventory. Chopping down the nearby tree would provide more wood for the player‚Äôs needs. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Requirements for the top sub-task (drink water): 1. Locate a water source such as a lake or river. 2. Move to the water source. The player should first locate a water source nearby. Since the observation does not mention any water source, the player should explore the surroundings by moving to the east, west, north, or south, searching for and moving towards a lake or river to drink and replenish their thirst level. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority: 5 - Move East (Flat ground right to the agent): This action will help you explore your surroundings and potentially locate a water source. Requirement: flat ground to the east. 2. Priority: 4 - Move West (Flat ground left to the agent): This action will also help you explore your surroundings and potentially locate a water source. Requirement: flat ground to the west. 3. Priority: 3 - Move North (Flat ground above of the agent): This action will help you explore your surroundings and find a water source. Requirement: flat ground to the north. 4. Priority: 2 - Move South (Flat ground below the agent): This action will help you explore your surroundings and locate a water source. Requirement: flat ground to the south. 5. Priority: 1 - Do (Facing creature or material; have necessary tool): This action will allow you to interact with the environment, such as collecting resources or combatting monsters. Depending on the situation and the objects present, 257 requirements may vary. For example, if you‚Äôre facing a cow, you‚Äôll need a tool, such as a sword or a pickaxe to defeat it to get food. Question: For each action in the list, are the requirements met? Answer: 1. Priority: 5 - Move East (Flat ground right to the agent): Yes, the requirements are met as there is flat ground to the east. 2. Priority: 4 - Move West (Flat ground left to the agent): Yes, the requirements are met as there is flat ground to the west. 3. Priority: 3 - Move North (Flat ground above of the agent): Yes, the requirements are met as there is flat ground to the north. 4. Priority: 2 - Move South (Flat ground below the agent): Yes, the requirements are met as there is flat ground to the south. 5. Priority: 1 - Do (Facing creature or material; have necessary tool): The current observation shows that you are facing grass, which does not require any particular action or tool. The requirements are not met for any meaningful action at the moment. Question: Did the last player action succeed? Why? Answer: Yes, the last player action (move_north) succeeded because there was flat ground (grass) in the north direction, allowing the player to move in that direction. Question: Choose the best executable action from above. Answer: The best executable action from above is Priority 5 - Move East (Flat ground right to the agent). This action will help you explore your surroundings and potentially locate a water source. The requirement of flat ground to the east is met. ============Step: 169, Cumulative Reward: 0.0============ You took action move_east. You see: - grass 1 steps to your west - stone 3 steps to your east - tree 5 steps to your north-west - table 4 steps to your south-east - furnace 5 steps to your north-west - cow 5 steps to your south-west You face path at your front (east). Your status: - health: 9/9 - food: 3/9 - drink: 2/9 - energy: 7/9 Your inventory: - wood: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Do Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass: Provides no resources, no requirement. 2. Stone: Provides stone resource, requires a wood_pickaxe or better to collect. 3. Tree: Provides wood resource, requires an empty hand or an axe to collect. 4. Path: Provides no resources, no requirement. 5. Table: Craft and place using wood. Required for crafting higher-level tools and weapons. 6. Furnace: Craft and place using stone. Required for smelting iron. 7. Cow: Provides food (meat) when killed, no requirement to interact with it. 8. Player‚Äôs Inventory: Holds the collected resources and crafted items, updated as the player interacts with objects and crafts. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_east. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass: No requirements for interaction; requirements met. 2. Stone: Requires a wood_pickaxe or better to collect; requirements met (player has wood_pickaxe and stone_pickaxe). 3. Tree: Requires an empty hand or an axe to collect; requirements met (player can use an empty hand). 4. Path: No requirements for interaction; requirements met. 5. Table: Crafted and placed using wood, required for crafting higher-level tools and weapons; requirements met (player has wood in inventory). 6. Furnace: Crafted and placed using stone, required for smelting iron; requirements met (player has stone_pickaxe to collect more stone if needed). 7. Cow: No requirement to interact with it; requirements met. 258 8. Player‚Äôs Inventory: Holds the collected resources and crafted items; requirements met as the player interacts with objects and crafts. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Priority 4/5: Drink water (from lake or collect Drink) to restore the player‚Äôs thirst (current thirst level: 2/9). 2. Priority 5/5: Collect food (kill cow or grow fruits) to restore the player‚Äôs food level (current food level: 3/9). 3. Priority 3/5: Collect more resources such as wood and stone to craft better tools, weapons, and build shelter. Question: What are the requirements for the top sub-task? What should the player do first? Answer: The top sub-task is to drink water to restore the player‚Äôs thirst. Requirements: Find a water source like a lake, pond, or a river nearby. What should the player do first: The player should explore the environment and locate a water source. Once found, the player can drink from it to restore their thirst. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move (Direction: West, East, North, or South) - Requirement: Flat ground in the chosen direction. The player should explore the environment and locate a water source. 2. Priority 2: Drink - Requirement: Be adjacent to a water source like a lake, pond, or river. Once the player is next to a water source, they should drink to restore their thirst. 3. Priority 3: Move (Direction: West, East, North, or South) - Requirement: Flat ground in the chosen direction. The player should continue exploring the environment and locate a tree for collecting wood, a food source, or a shelter to recover energy, given the low food and energy levels. 4. Priority 4: Do (Collect wood, chase cow, or other action) - Requirement: Facing the desired resource/material; have the necessary tool (if applicable). Engage in an action to collect wood, food, or any other necessary resources, depending on what the player has located. 5. Priority 5: Sleep - Requirement: Energy level is below maximum. The player should find a safe place (like a shelter or cave) and sleep to recover energy when it is low. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Move (Direction: West, East, North, or South) - Yes, the requirements are met. The player can move to explore and locate a water source. The player can move in any direction where there is flat ground. 2. Priority 2: Drink - No, the requirements are not met, as the player hasn‚Äôt found a water source yet. 3. Priority 3: Move (Direction: West, East, North, or South) - Yes, the requirements are met. The player can continue exploring the environment and locate more resources such as wood or food, or find a shelter to recover energy. 4. Priority 4: Do (Collect wood, chase cow, or other action) - Partially met, the player has a wood_pickaxe and stone_pickaxe in the inventory, which can help collect wood or stone. However, the player is not yet close to a tree to collect more wood, and although they see a cow, it is 5 steps away. 5. Priority 5: Sleep - Yes, the requirements are met. The player‚Äôs energy level is below maximum, so they can sleep. However, the player must find a safe place to sleep first, like a shelter or cave. Question: Did the last player action succeed? Why? Answer: Yes, the last player action (move_east) succeeded because there was a flat path in the east direction, allowing the player to move there without any obstacles. Question: Choose the best executable action from above. Answer: The best executable action from the list above is Priority 1: Move (Direction: West, East, North, or South). The player can move to explore the environment and locate a water source or other resources. This action can be executed since there is flat ground for movement in various directions. ============Step: 170, Cumulative Reward: 0.0============ You took action do. You see: - grass 1 steps to your west - stone 3 steps to your east - tree 5 steps to your north-west - table 4 steps to your south-east - furnace 5 steps to your north-west - cow 6 steps to your south-west You face path at your front (east). Your status: - health: 9/9 - food: 3/9 - drink: 2/9 - energy: 7/9 Your inventory: - wood: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 259 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move East Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass: It provides no specific resources and has no requirement. 2. Stone: It provides the stone resource and requires a pickaxe (wood or better) to mine. 3. Tree: It provides wood resource and requires an axe or hands (though it‚Äôs slower) to chop it down. 4. Table: It‚Äôs a crafting station that enables crafting tools and weapons. It requires wood to make and place. 5. Furnace: It‚Äôs a smelting station that allows smelting iron and other ores. It requires stone to make and place. 6. Cow: It provides food (meat) when killed and has no specific requirement. Question: What was the last action taken by the player? Answer: The last action taken by the player was do. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass: No requirements, so they are met. You can interact with it. 2. Stone: Requires a pickaxe (wood, stone, or iron) to mine. You have both wood and stone pickaxes in your inventory, so requirements are met. 3. Tree: Requires an axe or hands to chop it down. You don‚Äôt have an axe in your inventory, but you can use your hands, so you can still interact with it. 4. Table: Requires wood to make and place. You have 1 wood in your inventory, so requirements are met if you want to make another table. 5. Furnace: Requires stone to make and place. You don‚Äôt have stone in your inventory, so if you want to make another furnace, you need to collect stone first. 6. Cow: No specific requirement for interaction. You can interact with it. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Collect Drink (Priority 5/5): Your drink level is at 2/9, which is critical. You should find a water source like a lake or river to collect drink and replenish your thirst. 2. Collect Food (Eat Cow) (Priority 4/5): Your food level is 3/9, which is low. You should kill the nearby cow and collect meat to eat and increase your food level. 3. Collect Stone (Priority 3/5): As you currently have no stone in your inventory, you should collect stone using your pickaxe for future crafting or building purposes. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Top Sub-task: Collect Drink Requirements: Find a water source like a lake or river to collect drink. The player should first look for a water source in their surroundings. If not visible, the player can try moving in different directions (north, south, east, or west) to explore the environment and locate a water source. Once found, the player should move towards the water source and collect drink to replenish their thirst level. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move East (Move closer to the water source) Requirement: Flat ground right to the agent. 2. Priority 2: Move West (Move closer to the water source) Requirement: Flat ground left to the agent. 3. Priority 3: Move North (Move closer to the water source) Requirement: Flat ground above of the agent. 4. Priority 4: Move South (Move closer to the water source) Requirement: Flat ground below the agent. 5. Priority 5: Collect Drink (Replenish thirst level) Requirement: Facing water source (lake or river). Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Move East (Move closer to the water source) Requirements met: Yes, flat ground is present to the right of the agent. 2. Priority 2: Move West (Move closer to the water source) Requirements met: Yes, flat ground is present to the left of the agent. 3. Priority 3: Move North (Move closer to the water source) Requirements met: Unknown, as the player‚Äôs observation does not provide information about northward conditions. 4. Priority 4: Move South (Move closer to the water source) Requirements met: Unknown, as the player‚Äôs observation does not provide information about southward conditions. 5. Priority 5: Collect Drink (Replenish thirst level) Requirements met: No, the player is not currently facing a water source (lake or river). They need to move closer to a water source first. Question: Did the last player action succeed? Why? Answer: 260 It is not clear if the last player action do succeeded because there is no information about the intended outcome or what the player was trying to do. The surrounding environment and the player‚Äôs status and inventory remain unchanged between steps 338 and 340, which indicates that nothing significant occurred as a result of the action. It‚Äôs possible that the do action was not valid for the current context or lacked a specific target. Question: Choose the best executable action from above. Answer: The best executable action from the list above is Priority 1: Move East (Move closer to the water source), since its requirement is met with flat ground present to the right of the agent. ============Step: 171, Cumulative Reward: 0.0============ You took action move_east. You see: - grass 1 steps to your west - stone 2 steps to your east - table 3 steps to your south - furnace 6 steps to your north-west - cow 7 steps to your south-west You face path at your front (east). Your status: - health: 9/9 - food: 3/9 - drink: 2/9 - energy: 7/9 Your inventory: - wood: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Do Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass: Provides no resources but indicates flat ground for movement; no requirements. 2. Stone: Provides stone resource for crafting tools, weapons, and placing on the ground; requires a wood or stone pickaxe to collect. 3. Table: Allows crafting of tools and weapons; requires wood to craft. 4. Furnace: Allows smelting of iron for crafting iron tools and weapons; requires stone to craft. 5. Cow: Provides food when defeated, which helps restore food level; no requirements to interact. 6. Path: Flat ground for movement; no requirements. 7. Wood Pickaxe (inventory): Allows collecting stone and coal resources; requires wood and a table to craft. 8. Stone Pickaxe (inventory): Allows collecting iron resources; requires wood, stone, and a table to craft. 9. Wood (inventory): Basic resource for crafting tools, weapons, and placing on the ground; can be collected from trees. 10. Coal (inventory): Used for smelting iron in a furnace; can be collected using a wood or stone pickaxe. 11. Iron (inventory): Used to craft iron tools and weapons; obtained after smelting iron ore in a furnace using coal. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_east. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass: No requirements for interaction, so the requirements are met. 2. Stone: Requires a wood or stone pickaxe to collect; you have both a wood_pickaxe and a stone_pickaxe in your inventory, so the requirements are met. 3. Table: No requirements for interaction, so the requirements are met. However, crafting tools and weapons on the table requires specific resources in the inventory. 4. Furnace: No requirements for interaction, so the requirements are met. However, smelting iron in the furnace requires coal in the inventory. 5. Cow: No requirements for interaction, so the requirements are met. 6. Path: No requirements for interaction, so the requirements are met. 7. Wood Pickaxe (inventory): No requirements for interaction, so the requirements are met. 8. Stone Pickaxe (inventory): No requirements for interaction, so the requirements are met. 261 9. Wood (inventory): Cannot interact with wood directly in the inventory, but it can be used to craft. 10. Coal (inventory): Cannot interact with coal directly in the inventory, but it can be used for smelting. 11. Iron (inventory): Cannot interact with iron directly in the inventory, but it can be used to craft iron tools and weapons (with access to a table and a furnace). Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Restore drink level: Your drink level is currently at 2/9, which is low, putting this task at high priority. Find a water source, like a lake or a river, to drink from and restore your drink level. Priority: 5/5. 2. Restore food level: Your food level is at 3/9, which is also low. Defeat the cow you spotted to get food, then eat it to restore your food level. This task is of medium-high priority. Priority: 4/5. 3. Craft Iron Sword and Iron Pickaxe: You currently have some iron to craft stronger tools and weapons (iron_pickaxe and iron_sword), but you may need more iron. Locate more iron and coal if needed, use your furnace to smelt the iron, and craft the tools at a table. This task is of medium priority since you already have a stone_pickaxe and a wood_pickaxe. Priority: 3/5. Question: What are the requirements for the top sub-task? What should the player do first? Answer: For the top sub-task, which is to restore the drink level, the requirements are: 1. Find a water source, such as a lake or a river. 2. Drink the water to restore your drink level. To accomplish this, the player should first move towards the nearest water source. If a water source is not immediately visible, the player should explore the surroundings to locate one. Once found, the player can drink the water to restore their drink level. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: Based on the player‚Äôs current status and inventory, the top 5 actions they should take are: Priority 1: Action: Move (in any direction West, East, North, or South) Requirement: Flat ground in the chosen direction. Purpose: To explore the surroundings and locate a water source to drink from. Priority 2: Action: Do Requirement: Facing a water source to drink from. Purpose: To drink water and restore the drink level. Priority 3: Action: Do Requirement: Facing a tree, and having the necessary tool (wood_pickaxe) in inventory. Purpose: To collect more wood for crafting and building. Priority 4: Action: Make Wood Sword Requirement: Nearby table; wood in inventory. Purpose: To create a weapon for defending against any encountered monsters. Priority 5: Action: Move (in any direction West, East, North, or South) Requirement: Flat ground in the chosen direction. Purpose: To find and chase a cow to restore the food level by eating it. Question: For each action in the list, are the requirements met? Answer: Priority 1: Action: Move (in any direction West, East, North, or South) Requirement: Flat ground in the chosen direction. - Requirements Met: Yes, there is flat ground to the west and east, which the player can move to. Priority 2: Action: Do Requirement: Facing a water source to drink from. - Requirements Met: No, the player has not located a water source in the current observations. Priority 3: Action: Do Requirement: Facing a tree, and having the necessary tool (wood_pickaxe) in inventory. - Requirements Met: Partially, the player has a wood_pickaxe in their inventory, but a tree is not directly in front of them. Priority 4: Action: Make Wood Sword Requirement: Nearby table; wood in inventory. - Requirements Met: Yes, the player has 1 wood in their inventory, and there is a table 3 steps to the south. Priority 5: Action: Move (in any direction West, East, North, or South) Requirement: Flat ground in the chosen direction. - Requirements Met: Yes, there is flat ground to the west and east, which the player can move to in order to find and chase a cow to restore the food level. Question: Did the last player action succeed? Why? Answer: 262 Yes, the last player action, move_east, succeeded because there was flat ground (a path) to the east of the player, allowing the player to move in that direction. Question: Choose the best executable action from above. Answer: The best executable action from the list above is: Priority 1: Action: Move (in any direction West, East, North, or South) Requirement: Flat ground in the chosen direction. This action will allow the player to explore the surroundings and locate a water source, find more resources, and chase a cow to restore their food level. ============Step: 172, Cumulative Reward: 0.0============ You took action do. You see: - grass 1 steps to your west - stone 2 steps to your east - table 3 steps to your south - furnace 6 steps to your north-west - cow 7 steps to your south-west You face path at your front (east). Your status: - health: 9/9 - food: 3/9 - drink: 2/9 - energy: 7/9 Your inventory: - wood: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move North Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass - Provides: Saplings when interacted with. Requirement: None. 2. Stone - Provides: Stone as a resource when mined with the wood_pickaxe or stone_pickaxe. Requirement: Wood_pickaxe or Stone_pickaxe. 3. Table - Provides: A way to craft tools and weapons. Requirement: Wood to create and place. 4. Furnace - Provides: Smelting of various resources such as iron. Requirement: Stone to create and place. 5. Cow - Provides: Food (meat) when hunted or defeated. Requirement: None. Question: What was the last action taken by the player? Answer: The last action taken by the player was do. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass - Requirements met: Yes, no specific tool needed to collect saplings from the grass. 2. Stone - Requirements met: Yes, the player has a wood_pickaxe and a stone_pickaxe in their inventory, which can be used to mine stone. 3. Table - Requirements met: Yes, the table is already placed and available for crafting tools and weapons. 4. Furnace - Requirements met: Yes, the furnace is already placed and available for smelting resources such as iron. 5. Cow - Requirements met: Yes, the player can interact with the cow without any specific tool or weapon. However, having a weapon would make it easier to defeat the cow and obtain food. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Drink water (5/5 priority) - The player‚Äôs drink status is low (2/9). The player should find a water source (lake or river ) and drink to restore their thirst. 2. Obtain food (4/5 priority) - The player‚Äôs food status is low (3/9). The player should consider hunting the nearby cow or finding other food sources like growing fruits or eating existing plants to restore their hunger. 3. Smelt iron (3/5 priority) - The player has iron, coal, and a furnace in their vicinity. The player can smelt the iron to obtain iron ingots, which can be used to craft more advanced tools and weapons like an iron sword or iron pickaxe. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Top sub-task: Drink water Requirements: 1. Find a water source, such as a lake or river, near the player‚Äôs location. 2. Walk up to the water source. What the player should do first: Since the player‚Äôs current location doesn‚Äôt show a water source nearby, the player should explore their surroundings (move north, south, east, or west) to find a lake or river where they can drink water to restore their thirst. 263 Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move North (or any other direction) - Requirement: Flat ground in the direction of movement. The player should explore their surroundings to find a water source or resources they need. 2. Priority 2: Do (drink water) - Requirement: Facing a water source (lake or river). This action is necessary to restore the player‚Äôs thirst, which is currently low (2/9). 3. Priority 3: Move towards a Cow - Requirement: Flat ground in the direction of movement. The player should get closer to the cow to be able to eat and restore their food. 4. Priority 4: Do (eat cow) - Requirement: Facing the cow; having the necessary tool (preferably a crafted sword). Eating the cow will restore the player‚Äôs food. 5. Priority 5: Sleep - Requirement: Energy level is below maximum. Sleeping will help restore the player‚Äôs energy, which is currently 7/9. However, the player should find a safe place to sleep, away from potential threats like monsters or other hazards. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Move North (or any other direction) - Yes, the requirement for flat ground is met for moving in any direction since the player‚Äôs observation mentions grass, stone, table, furnace, and cow in various directions. 2. Priority 2: Do (drink water) - No, the requirement of facing a water source is not met, as the player‚Äôs observation does not mention any water nearby. 3. Priority 3: Move towards a Cow - Yes, the requirement is met. The player can move towards the cow by navigating the flat ground in the cow‚Äôs direction (south-west). 4. Priority 4: Do (eat cow) - Not yet, as the player needs to get closer to the cow and face it before meeting the requirement. 5. Priority 5: Sleep - Partially, the energy requirement (7/9) is met. However, finding a safe place to sleep is not mentioned in the observation, so this requirement remains uncertain. Question: Did the last player action succeed? Why? Answer: We cannot determine if the last player action (do) succeeded because there is no information provided about what the player was trying to do in that step. The game observation remains the same between steps 342 and 344, so it is unclear what the intended outcome or interaction was. Question: Choose the best executable action from above. Answer: The best executable action from the list above is Priority 1: Move North (or any other direction). The player can explore their surroundings and potentially find water sources or other necessary resources. ============Step: 173, Cumulative Reward: 0.0============ You took action move_north. You see: - stone 2 steps to your north-east - path 1 steps to your south - lava 7 steps to your north-east - furnace 5 steps to your north-west - cow 7 steps to your south-west You face grass at your front (north). Your status: - health: 9/9 - food: 3/9 - drink: 2/9 - energy: 7/9 Your inventory: - wood: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move East Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone resource; requires stone pickaxe or better to collect. 2. Path: No resource provided; no requirement. 3. Lava: Provides light and can dispose of unwanted items; no requirement to interact with, but caution is advised as it can cause damage. 4. Furnace: Allows for smelting iron and cooking food; requires coal as fuel and items to be smelted or cooked. 5. Cow: Provides meat when defeated; no specific requirement to defeat, but having a weapon is recommended. 6. Grass: No direct resource, but can sometimes drop seeds to plant and grow crops; no requirement to interact with. 7. Wood (in inventory): Provides wood to craft tools and build structures; requires a wood pickaxe or better to collect from trees. 8. Coal (in inventory): Used as fuel in furnaces; requires wood or better pickaxe to collect from coal ore. 264 9. Iron (in inventory): Used for crafting iron tools and weapons; requires stone or better pickaxe to collect from iron ore, and a furnace to smelt. 10. Wood pickaxe (in inventory): Used to collect wood, stone, and coal resources; requires wood and a crafting table to create. 11. Stone_pickaxe (in inventory): Used to collect stone, coal, and iron resources; requires wood and stone, as well as a crafting table, to create. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_north. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Yes, requirements met with stone_pickaxe in inventory. 2. Path: No requirements for interaction; just move as needed. 3. Lava: Caution is advised; no specific interaction requirements, but avoid getting too close. 4. Furnace: Requirements met with coal in inventory, but currently no items to smelt or cook. 5. Cow: Yes, requirements met as no specific weapon is needed, but having a weapon would help. 6. Grass: No requirements for interaction; just interact if desired. 7. Wood (in inventory): N/A, already in inventory. 8. Coal (in inventory): N/A, already in inventory. 9. Iron (in inventory): N/A, already in inventory. 10. Wood pickaxe (in inventory): N/A, already in inventory. 11. Stone_pickaxe (in inventory): N/A, already in inventory. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Find a water source and drink from it to restore thirst level (Priority: 5/5) 2. Defeat a cow and cook its meat to restore food level (Priority: 4/5) 3. Use the furnace to smelt iron and craft iron tools and weapons to improve survival chances (Priority: 3/5) Question: What are the requirements for the top sub-task? What should the player do first? Answer: The requirements for the top sub-task (finding a water source and drinking from it) are: 1. Locate a water source (like a lake, river or pond) within the game. 2. Approach the water source. 3. Drink from the water source to restore thirst. The player should first try to locate a water source within the game, which may require moving around the environment and exploring different areas. They should look for indications like bodies of water or listen to the sounds of flowing water, and keep an eye on the map or visual cues to help them navigate. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Action: Move East (Priority: 1) Requirement: Flat ground right to the agent. 2. Action: Move North (Priority: 2) Requirement: Flat ground above the agent. 3. Action: Move West (Priority: 3) Requirement: Flat ground left to the agent. 4. Action: Move South (Priority: 4) Requirement: Flat ground below the agent. 5. Action: Sleep (Priority: 5) Requirement: Energy level is below maximum. These top 5 actions prioritize exploring the environment by moving in different directions to locate essential resources and manage the player‚Äôs energy level by sleeping when necessary. Question: For each action in the list, are the requirements met? Answer: 1. Action: Move East (Priority: 1) Requirement: Flat ground right to the agent. Status: Met (Stone is two steps to the east) 2. Action: Move North (Priority: 2) Requirement: Flat ground above the agent. Status: Met (Grass is at the player‚Äôs front in the north) 3. Action: Move West (Priority: 3) Requirement: Flat ground left to the agent. Status: Met (Grass is one step to the west) 4. Action: Move South (Priority: 4) Requirement: Flat ground below the agent. Status: Met (Path is one step to the south) 5. Action: Sleep (Priority: 5) Requirement: Energy level is below maximum. Status: Met (Energy level is 7/9, which is below the maximum level) Question: Did the last player action succeed? Why? Answer: Yes, the last player action move_north succeeded. The player was able to move north because there was flat ground (grass) in that direction, allowing them to move without any obstacles blocking their way. Question: Choose the best executable action from above. 265 Answer: The best executable action from the above list is Move East (Priority: 1). The requirement for this action - flat ground right to the agent - is met as there is stone two steps to the east. ============Step: 174, Cumulative Reward: 0.0============ You took action move_east. You see: - grass 2 steps to your west - stone 1 steps to your north - lava 6 steps to your north-east - furnace 6 steps to your north-west You face path at your front (east). Your status: - health: 9/9 - food: 3/9 - drink: 2/9 - energy: 7/9 Your inventory: - wood: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move East Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone resource when mined; requires either a wood_pickaxe or stone_pickaxe to collect. 2. Path: Provides no resources; no requirement to interact. 3. Lava: Dangerous, provides no resources; avoid getting too close. 4. Furnace: Used for smelting resources like iron; requires stone to craft and place. 5. Grass: Provides no resources; can be walked on with no requirements. 6. Wood: Provides wood resource when chopped; requires an axe to collect, but not present in the current observation. 7. Coal: Provides coal resource when mined; requires a pickaxe to collect, not present in the current observation. 8. Iron: Provides iron resource when mined; requires a stone_pickaxe or iron_pickaxe to collect. 9. Cow: Provides food when killed; no specific requirement besides attacking with any weapon or tool. 10. Energy: Increases when resting, sleeping, or consuming food and drink; agent needs to manage energy to avoid exhaustion. Note: Some objects mentioned in the list are not directly present in the observation but added based on earlier observations and inventory. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_east. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Yes, the requirements are met as the player has both wood_pickaxe and stone_pickaxe in their inventory. 2. Path: Yes, there are no requirements to interact with the path. 3. Lava: Not applicable, as the player should avoid interacting with the lava. 4. Furnace: Yes, the player can interact with the furnace if they are close enough, as they have coal and iron in their inventory for smelting. 5. Grass: Yes, there are no requirements to interact with grass. 6. Wood: Not present in the current observation. If it were present, the player would need an axe to collect wood, which they currently don‚Äôt have in their inventory. 7. Coal: Not present in the current observation. If it were present, the player would have the required wood_pickaxe or stone_pickaxe in their inventory. 8. Iron: Yes, the player meets the requirements with stone_pickaxe and iron_pickaxe in their inventory. 9. Cow: Yes, the player can interact (attack) with the cow using any weapon or even a tool. 10. Energy: Yes, the player can manage their energy by consuming food, drink, and resting or sleeping when needed. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Priority 4/5: Collect Drink - The player has low drink (2/9), so it is crucial to find a water source and drink from it to restore thirst. 2. Priority 3/5: Restore Food - The player has low food (3/9). They should either kill the cow they see 7 steps to the southwest or find other food sources to eat and increase their food level. 3. Priority 5/5: Find a Safe Place to Rest - The player‚Äôs energy level is 7/9. They should find a safe place to rest or sleep to ensure their energy level stays high, enabling them to perform other tasks effectively. Question: What are the requirements for the top sub-task? What should the player do first? Answer: The top sub-task is Collect Drink with a priority of 4/5. Requirements: 1. Find a water source, such as a lake or river. What should the player do first: 1. The player should explore the surroundings to locate a water source. They can move in different directions (north, south, east, or west) to search for water. Once they find a water source, they should drink from it to restore their thirst. 266 Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Action: Move East (Priority: 5/5) Requirement: Flat ground right to the agent. Reason: To explore the surroundings and search for a water source. 2. Action: Move West (Priority: 5/5) Requirement: Flat ground left to the agent. Reason: To explore the surroundings and search for a water source. 3. Action: Move North (Priority: 5/5) Requirement: Flat ground above of the agent. Reason: To explore the surroundings and search for a water source. 4. Action: Move South (Priority: 5/5) Requirement: Flat ground below the agent. Reason: To explore the surroundings and search for a water source. 5. Action: Do (Priority: 3/5) Requirement: Facing water source, such as a lake or river. Reason: To drink from the water source and restore the agent‚Äôs thirst. Question: For each action in the list, are the requirements met? Answer: 1. Action: Move East Requirement: Flat ground right to the agent. Status: Met (Currently facing the path to the east) 2. Action: Move West Requirement: Flat ground left to the agent. Status: Met (There‚Äôs grass 2 steps to the west) 3. Action: Move North Requirement: Flat ground above of the agent. Status: Met (Currently facing grass to the north) 4. Action: Move South Requirement: Flat ground below the agent. Status: Met (There‚Äôs a path 1 step to the south) 5. Action: Do Requirement: Facing water source, such as a lake or river. Status: Not Met (No water source is observed in the immediate surroundings) Question: Did the last player action succeed? Why? Answer: Yes, the last player action of move_east succeeded because there was a flat ground (path) in front of the player, allowing them to move in that direction. Question: Choose the best executable action from above. Answer: The best executable action from above is to Move East because it meets the requirement of having a flat ground (path) to the agent‚Äôs right and allows them to explore the surroundings in search of a water source to restore their thirst level. ============Step: 175, Cumulative Reward: 0.0============ You took action move_east. You see: - grass 3 steps to your west - stone 1 steps to your north - lava 5 steps to your north-east - iron 5 steps to your north-east You face path at your front (east). Your status: - health: 9/9 - food: 3/9 - drink: 2/9 - energy: 7/9 Your inventory: - wood: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move West Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: - Grass: Provides no specific resource, but is a flat surface; no requirements. 267 - Stone: Provides stone resource, which can be used for crafting tools and building; requires a wood_pickaxe or better to collect. - Lava: Dangerous to touch, does not provide any resources directly; avoid coming into contact with lava. - Iron: Provides iron resource, which can be used for crafting stronger tools and weapons; requires a stone_pickaxe or better to collect. - Path: Provides a flat surface to walk on; no requirements. - Wood (in inventory): Provides wood resource, which is used for crafting tools and building; collected from trees using any type of tool or bare hands. - Coal (in inventory): Provides fuel for smelting in furnaces and a light source for torches; requires a wood_pickaxe or better to collect. - Wood_pickaxe (in inventory): Used to collect basic resources like stone and coal; requires wood and a crafting table to create. - Stone_pickaxe (in inventory): Used to collect intermediate resources like iron; requires stone, wood, and a crafting table to create. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_east. Question: For each object in the list, are the requirements met for interaction? Answer: - Grass: Yes, the requirements are met as it is just a flat surface on which you can walk. - Stone: Yes, the requirements are met since you have a wood_pickaxe in your inventory, which is required to collect stone. - Lava: The requirement to avoid coming into contact with lava is met as long as you don‚Äôt move towards it. - Iron: Yes, the requirements are met since you have a stone_pickaxe in your inventory, which is required to collect iron. - Path: Yes, the requirements are met as it is just a flat surface on which you can walk. - Wood (in inventory): The wood is already in your inventory, and there are no requirements for interacting with it. - Coal (in inventory): The coal is already in your inventory, and there are no requirements for interacting with it. - Wood_pickaxe (in inventory): No requirements are needed for interaction as it is already in your inventory. - Stone_pickaxe (in inventory): No requirements are needed for interaction as it is already in your inventory. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Find and drink water to restore the player‚Äôs thirst level (Priority: 5/5) 2. Find food or collect resources to craft food items to restore the player‚Äôs hunger level (Priority: 4/5) 3. Collect more iron to craft an iron sword for better defense and to progress further in the game (Priority: 3/5) Question: What are the requirements for the top sub-task? What should the player do first? Answer: Requirements for the top sub-task (Find and drink water to restore the player‚Äôs thirst level): 1. Locate a water source such as a lake or river. 2. Move towards the water source. 3. Interact with the water source to drink and restore thirst. What the player should do first: 1. Look for a nearby water source in the player‚Äôs observations or move around the area to find one. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move towards the water source (Move West, Move East, Move North, or Move South) Requirements: Flat ground in the direction of the water source. 2. Priority 2: Drink from the water source (Do) Requirements: Facing the water source. 3. Priority 3: Collect more wood (Do) Requirements: Facing a tree or wood; have a wood pickaxe or other necessary tool. 4. Priority 4: Eat food to restore player‚Äôs food level (Eat Cow or Eat Plant) Requirements: Cow or plant available in the inventory. 5. Priority 5: Craft an Iron Pickaxe (Make Iron Pickaxe) Requirements: Nearby table, furnace; wood, coal, and iron in inventory. Question: For each action in the list, are the requirements met? Answer: 1. Move towards the water source: Yes, the requirement of flat ground in the direction of the water source is met. The player can move east or west to approach the water source. 2. Drink from the water source: No, the player is not currently facing the water source. They need to move towards it first and then face it. 3. Collect more wood: No, the player is neither facing a tree nor wood. The player needs to locate a tree and face it before they can collect wood with their wood_pickaxe. 4. Eat food to restore player‚Äôs food level: No, the player does not currently have a cow or plant in their inventory to eat. They need to find a cow or plant and obtain it before they can eat. 5. Craft an Iron Pickaxe: No, the player needs a nearby table and furnace, as well as wood, coal, and iron in their inventory. They currently have wood, coal, and iron, but are not near a table and furnace. They need to locate and approach a table and furnace to fulfill this requirement. Question: Did the last player action succeed? Why? Answer: Yes, the last player action (move_east) succeeded because there was a flat path in front of the player to the east, allowing them to move in that direction. Question: Choose the best executable action from above. Answer: The best executable action from the list above is: 268 1. Move towards the water source (Move West, Move East, Move North, or Move South) Requirements: Flat ground in the direction of the water source. This action can be executed since the ground is flat in the direction of the water source, and the player needs to restore their drink level. The player can move east or west to approach the water source. ============Step: 176, Cumulative Reward: 0.0============ You took action move_west. You see: - grass 2 steps to your west - stone 1 steps to your north - lava 6 steps to your north-east - furnace 6 steps to your north-west You face path at your front (west). Your status: - health: 9/9 - food: 3/9 - drink: 2/9 - energy: 7/9 Your inventory: - wood: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move West Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass: Resource it provides: Saplings or seeds when interacted with. Requirement: None. 2. Stone: Resource it provides: Stone material when mined with a pickaxe. Requirement: Wood or stone pickaxe to mine. 3. Lava: Resource it provides: Light and possibly a source of energy when handled carefully. Requirement: Avoid direct contact, as it can cause damage or death. 4. Iron: Resource it provides: Iron material when mined with a pickaxe. Requirement: Stone or iron pickaxe to mine. 5. Furnace: Resource it provides: Allows smelting of iron and other ores. Requirement: Requires coal as fuel and ores (e.g., iron) to smelt. 6. Path: Resource it provides: Allows the player to move and navigate the game world. Requirement: Flat ground to move on. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_west. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass: Requirements met: Yes, you can interact with grass without any specific tool or requirement. 2. Stone: Requirements met: Yes, you have a wood_pickaxe and a stone_pickaxe in your inventory, which can be used to mine stone. 3. Lava: Requirements met: No, direct interaction with lava can be harmful. To safely interact with it, you need a container (e.g., a bucket) to move or use lava without causing damage. 4. Iron: Requirements met: Yes, you have a stone_pickaxe in your inventory, which can be used to mine iron. 5. Furnace: Requirements met: Yes, you have coal as fuel and iron ore in your inventory for smelting. 6. Path: Requirements met: Yes, you can move on the path as the ground is flat. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Collect water (Priority: 5/5): Given that your drink level is 2/9, finding a water source and replenishing your thirst is the top priority. 269 2. Collect food (Priority: 4/5): Your food level is at 3/9, so you need to find sources like fruits, vegetables, or animals to increase your food supply and avoid starvation. 3. Smelt iron (Priority: 3/5): With coal and iron in your inventory and a furnace nearby, smelting iron ore into iron ingots will help you create better tools and weapons, improving your ability to survive in the game. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Top sub-task: Collect water Requirements: 1. Find a water source (such as a lake or river). 2. Have an empty container (such as a bottle or bucket) to collect the water. If you don‚Äôt have a container, you‚Äôll need to craft one. What the player should do first: Since the player‚Äôs current drink level is low, finding a water source should be the immediate priority. It is important to explore the environment, moving either east or west to locate a water source such as a lake, river, or small pond. Once the water source is found, the player can drink directly from it until they find or craft a suitable container for portability. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1 - Move East or Move West: Requirement: Flat ground in the chosen direction. The player should explore their surroundings to find a water source (lake or river) to quench their thirst. 2. Priority 2 - Drink: Requirement: Be adjacent to a water source. Once the player finds the water source, they should drink from it to replenish their drink level. 3. Priority 3 - Move North or Move South: Requirement: Flat ground in the chosen direction. The player should explore further to find more resources and possibly locate a place to set up shelter. 4. Priority 4 - Place Furnace: Requirement: Stone in inventory. The player should place the furnace to be able to smelt iron, which will allow crafting of better tools and weapons. 5. Priority 5 - Make Iron Pickaxe or Make Iron Sword: Requirement: Nearby table, furnace, wood, coal, and iron in inventory. Craft an iron pickaxe or an iron sword to improve mining and combat capabilities. Make Iron Sword might be prioritized since the player has only 1 iron in the inventory, and crafting an iron sword will help in defeating more dangerous creatures. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1 - Move East or Move West: Yes, the requirements are met. The player faces a path in both directions (east and west), and needs to explore their surroundings to find a water source. 2. Priority 2 - Drink: Currently, the requirements are not met. The player needs to find a water source (lake or river) first by exploring the environment. 3. Priority 3 - Move North or Move South: Yes, the requirements are met. There is a stone to the north, and moving south has no obstacles mentioned in the recent observation, indicating the player can choose either direction to explore further. 4. Priority 4 - Place Furnace: Yes, the requirements are met. The player has stone in their inventory, so they can place the furnace to smelt iron. 5. Priority 5 - Make Iron Pickaxe or Make Iron Sword: No, the requirements are not met yet. The player should first place the furnace to be able to smelt iron, which requires action 4 to be executed. Moreover, the player currently has only 1 iron, which is not enough for crafting both an iron pickaxe and iron sword. They should prioritize crafting an iron sword first. Question: Did the last player action succeed? Why? Answer: Yes, the last player action succeeded. The player was able to move west because there was a flat path in front of them in that direction. Question: Choose the best executable action from above. Answer: The best executable action from the list above is Priority 1 - Move East or Move West. The requirements are met, and the player should explore their surroundings to find a water source (lake or river) to quench their thirst. ============Step: 177, Cumulative Reward: 0.0============ You took action move_west. You see: - stone 2 steps to your north-east - path 1 steps to your south - lava 7 steps to your north-east - furnace 5 steps to your north-west You face grass at your front (west). Your status: - health: 9/9 - food: 3/9 - drink: 2/9 - energy: 7/9 Your inventory: 270 - wood: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Place Furnace Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: The stone provides a resource for crafting tools like pickaxes and swords or constructing objects like furnaces. The requirement to collect stone is to have a wood_pickaxe or better in the inventory. 2. Path: The path provides easier movement and indicates previously visited locations. It doesn‚Äôt give a direct resource. No requirements to interact with the path. 3. Lava: Lava is dangerous and can harm or kill the player if they come into contact with it. It can be utilized as a heat source for furnaces if collected with an iron bucket, but it‚Äôs not a direct resource itself. To collect lava, you need an iron_bucket in your inventory. 4. Furnace: The furnace is an object required for smelting materials like iron and converting it into resources (iron_ingot) for crafting weapons and tools. To place a furnace, you need stone in your inventory. 5. Grass: Grass does not provide any direct resource but can be used to find saplings when broken with a tool or hand. No requirements to interact with grass, but having a tool might increase the chances of obtaining a sapling. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_west. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Yes, the requirements are met for interaction because the player has a wood_pickaxe and a stone_pickaxe in their inventory. These are the necessary tools to collect stone. 2. Path: Yes, the requirements are met for interaction. There are no particular requirements to interact with the path, as it is used for easier movement and just indicates previously visited locations. 3. Lava: No, the requirements are not met for interaction, because the player does not have an iron_bucket in their inventory, which is required to collect lava. 4. Furnace: Yes, the requirements are met for interaction because the player has a nearby furnace, and they have coal and iron in their inventory. These are necessary resources for using the furnace to smelt iron into iron_ingots. 5. Grass: Yes, the requirements are met for interaction because there are no specific requirements to interact with grass. The player can break grass with a tool or their hand to find saplings. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Find and drink water (Priority: 5/5): The player‚Äôs drink level is at 2/9, which is quite low. They need to find a water source like a lake or river, and take action ‚ÄôCollect Drink‚Äô to replenish their thirst. 2. Find and eat food (Priority: 4/5): The player‚Äôs food level is at 3/9, which can be improved. They should search for a cow, fruit, or growable plants to increase their food supply. After acquiring food, they should take action ‚ÄôEat Cow‚Äô, ‚Äô Eat Plant‚Äô, or ‚ÄôEat Fruit‚Äô, depending on the type of food found. 3. Collect resources for crafting an iron pickaxe and iron sword (Priority: 3/5): Although the player‚Äôs energy level is not too low, they can benefit from having better tools and weapons. The player has the necessary coal and iron, as well as access to a furnace. They should take action ‚ÄôMake Iron Pickaxe‚Äô and ‚ÄôMake Iron Sword‚Äô after placing a table using the wood in their inventory. Question: What are the requirements for the top sub-task? What should the player do first? Answer: For the top sub-task, Find and drink water, the requirement is to locate a water source like a lake or river. The player should do the following steps: 1. Explore the surroundings: The player needs to move around (Move West, Move East, Move North, Move South) to find a water source. Observations from the environment will indicate if a water source is nearby. 2. Collect Drink: Once the player finds a water source, they should take action ‚ÄôCollect Drink‚Äô to replenish their thirst. This action will increase their drink level, ensuring they stay hydrated in the game. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Collect Drink: Requirement: Locate a water source like a lake or river. The player‚Äôs drink level is low, so finding and drinking water should be the top priority. 2. Priority 2: Place Furnace: Requirement: Stone in inventory. The player already has stone, and placing a furnace will allow them to smelt iron and create better tools and weapons. 3. Priority 3: Make Iron Pickaxe: Requirement: Nearby table, furnace; wood, coal, iron in inventory. The player has the required items in the inventory. Crafting an iron pickaxe will help them collect more valuable resources like diamonds. 4. Priority 4: Eat: Requirement: Have food in inventory or nearby food source. Increasing the player‚Äôs food level would keep them healthier and active in the game. 271 5. Priority 5: Explore and collect resources: Requirement: None. The player should continue exploring the surroundings and collect essential resources like wood, stone, coal, and iron available in the environment to progress further in the game. Question: For each action in the list, are the requirements met? Answer: 1. Collect Drink: Requirements not met - The player needs to locate a water source like a lake or river, which is not mentioned in the latest observations. 2. Place Furnace: Requirements met - The player already has stone in their inventory. 3. Make Iron Pickaxe: Requirements met - The player has a nearby table, furnace, and the required wood, coal, and iron in their inventory. 4. Eat: Requirements not met - The player does not have any food in the inventory or a nearby food source mentioned in the observations. 5. Explore and collect resources: Requirements met - The player is free to explore the surroundings and collect resources. Question: Did the last player action succeed? Why? Answer: Yes, the last player action (move_west) succeeded because there was a flat path (grass) in front of the player (west), allowing them to move in that direction. Question: Choose the best executable action from above. Answer: The best executable action from the list above is to Place Furnace because the requirements for this action are met, and it will allow the player to smelt iron and create better tools and weapons. ============Step: 178, Cumulative Reward: 0.0============ You took action place_furnace. You see: - stone 2 steps to your north-east - path 1 steps to your south - lava 7 steps to your north-east - furnace 5 steps to your north-west You face grass at your front (west). Your status: - health: 9/9 - food: 3/9 - drink: 1/9 - energy: 7/9 Your inventory: - wood: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Do Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone resources, requires a wood pickaxe or better to mine. 2. Path: Provides easier movement, no specific requirements to interact. 3. Lava: Can be used as a fuel source, requires a bucket to collect, but avoid direct contact as it causes damage. 4. Furnace: Allows smelting of iron and other ores, requires placing with stone in the inventory. 5. Grass: Covers the ground, can be dug up to create space but does not provide any specific resources. 6. Wood: Present in the inventory; used for crafting tools, weapons, and building materials. 7. Coal: Present in the inventory; used as fuel for the furnace for smelting. 8. Iron: Present in the inventory; used to craft iron tools and weapons. 9. Wood_pickaxe: Present in the inventory; used to mine stone and coal. 10. Stone_pickaxe: Present in the inventory; used to mine iron and other ores. Question: What was the last action taken by the player? Answer: The last action taken by the player was placing the furnace (action place_furnace). Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Yes, the requirements are met as you have both a wood_pickaxe and a stone_pickaxe in your inventory. 2. Path: Yes, the requirements are met as there are no specific requirements to interact with the path. 3. Lava: No, the requirements are not met because you currently don‚Äôt have a bucket to collect the lava safely. 4. Furnace: Yes, the requirements were met since you successfully placed the furnace as per Player Observation Step 356. 5. Grass: Yes, the requirements are met, and you can dig up the grass if needed. However, it does not provide any specific resources. 6. Wood: Yes, the requirements are met, and you can use the wood for crafting or building. 7. Coal: Yes, the requirements are met since you have it in your inventory and can use it as fuel in the furnace. 8. Iron: Yes, the requirements are met because you have iron in your inventory and a furnace available to smelt it into usable ingots for crafting. 9. Wood_pickaxe: Yes, the requirements are met. You have the wood_pickaxe in your inventory and can use it for mining stone and coal. 272 10. Stone_pickaxe: Yes, the requirements are met. You have the stone_pickaxe in your inventory and can use it for mining iron and other ores. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Find water and drink (Priority 5/5): Your drink level is currently at 1/9, which is very low. Finding a water source to drink from is crucial to avoid dehydration. 2. Find food (Priority 4/5): Your food level is 3/9, which is low as well. You should find food, such as hunting animals or collecting fruit, to replenish your hunger and maintain your health. 3. Smelt iron (Priority 3/5): Since you have a furnace, coal, and iron in your inventory, smelting the iron will allow you to create iron tools and weapons, improving your mining and combat capabilities. Question: What are the requirements for the top sub-task? What should the player do first? Answer: For the top sub-task of finding water and drinking: Requirements: 1. Locate a water source, such as a lake, river, or pond. What the player should do first: 1. Explore the environment and search for a water source. Move in the direction of any visible water body (e.g., move east, west, north, or south). If none is visible, choose a direction and continue exploring until a water source is found. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move (East, West, North, or South) - Requirement: Flat ground in the chosen direction. This action will help the player explore the environment and locate a water source to fulfill the immediate need for drink. 2. Priority 2: Do - Requirement: Facing a water source and having an empty container or standing near a water source. This action allows the player to collect water. 3. Priority 3: Drink - Requirement: Having water in the inventory or having collected water. This action will help the player restore their thirst level. 4. Priority 4: Move (East, West, North, or South) - Requirement: Flat ground in the chosen direction. This action enables the player to explore their surroundings and locate food sources such as fruit trees, plants, or animals. 5. Priority 5: Do - Requirement: Facing an edible creature, plant, or food source; also having the necessary tool or weapon if required. This action allows the player to collect food, which they can eat to restore their food level. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Move (East, West, North, or South) - Yes, the requirements are met. The player can choose any direction with flat ground to move. 2. Priority 2: Do - No, the requirements are not met. The player has not yet located any water source to collect water from. They need to find a water source first. 3. Priority 3: Drink - No, the requirements are not met. The player has not collected any water yet. They need to find and collect water before they can drink. 4. Priority 4: Move (East, West, North, or South) - Yes, the requirements are met. The player can choose any direction with flat ground to move and search for food sources. 5. Priority 5: Do - No, the requirements are not met. The player is not currently facing an edible creature, plant, or food source, and may not have the necessary tool or weapon. They need to locate a food source first. Question: Did the last player action succeed? Why? Answer: Based on the observations before and after the action (steps 354 and 356), it appears that the last player action to place the furnace did not succeed. The reason for the failure is unclear, as the player seems to have enough stone in their inventory to place the furnace; however, perhaps the player was not standing on a valid location or did not face a suitable direction for placing the furnace. Question: Choose the best executable action from above. Answer: The best executable action from the list above is Priority 1: Move (East, West, North, or South), which has the requirement of flat ground in the chosen direction. This action will help the player explore the environment and locate a water source and food sources to fulfill their immediate needs for drink and food. ============Step: 179, Cumulative Reward: 0.0============ You took action do. You see: - stone 2 steps to your north-east - path 1 steps to your south - lava 7 steps to your north-east - furnace 5 steps to your north-west You face grass at your front (west). Your status: - health: 9/9 - food: 3/9 - drink: 1/9 - energy: 7/9 273 Your inventory: - wood: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move East Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone resource; requires a wood or stone pickaxe to collect. 2. Path: Provides ease of movement; no requirement. 3. Lava: Can be a hazard; bucket needed to collect. 4. Furnace: Allows smelting of iron; no requirement. 5. Grass: Can be used to create farmland for planting crops; requires a hoe to till. 6. Wood (inventory): Provides wood resource; requires a nearby table to craft or build items. 7. Coal (inventory): Provides fuel for furnace; no requirement. 8. Iron (inventory): Provides iron resource; requires nearby furnace to smelt and table to craft items. 9. Wood_pickaxe (inventory): Tool to collect stone; no requirement. 10. Stone_pickaxe (inventory): Tool to collect iron, coal, and stone; no requirement. Question: What was the last action taken by the player? Answer: The last action taken by the player was do. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Yes, the requirements are met, as the player has a wood_pickaxe and stone_pickaxe in their inventory. 2. Path: Yes, the requirements are met, as there are no additional requirements for interacting with a path. 3. Lava: No, the requirements are not met, as the player does not have a bucket in their inventory to collect lava. 4. Furnace: Yes, the requirements are met, as there are no additional requirements for interacting with a furnace. 5. Grass: No, the requirements are not met, as the player does not have a hoe in their inventory to till grass. 6. Wood (inventory): Yes, the requirements are met, as there are no additional requirements for using wood from the inventory. 7. Coal (inventory): Yes, the requirements are met, as there are no additional requirements for using coal from the inventory. 8. Iron (inventory): Yes, the requirements are met, as the player is nearby a furnace and can use the table to craft items with iron. 9. Wood_pickaxe (inventory): Yes, the requirements are met, as there are no additional requirements for using a wood_pickaxe from the inventory. 10. Stone_pickaxe (inventory): Yes, the requirements are met, as there are no additional requirements for using a stone_pickaxe from the inventory. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Drink water to restore thirst (Priority: 5/5): The player‚Äôs thirst level is low, and finding a water source to drink from is essential for survival. 2. Find food or grow crops to increase food level (Priority: 4/5): The player‚Äôs food level is also low, and replenishing it is necessary to maintain health and energy. 3. Collect more resources like wood and iron (Priority: 3/5): Having more resources in the inventory will allow the player to craft necessary tools and items to ensure survival and progress in the game. Question: What are the requirements for the top sub-task? What should the player do first? Answer: For the top sub-task, Drink water to restore thirst: Requirements: 1. Find a water source like a lake, river, or pond. 2. Get close enough to the water source to drink. 3. If needed, create a container (such as a bucket) to carry water. What should the player do first: The player should first explore their surroundings to find a water source like a lake, river, or pond. Once they have found a water source, they should approach the water to drink and restore their thirst level. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: Here are the top 5 prioritized actions the player should take based on their current situation: 1. Priority 1 - Move East: Requirement: Flat ground right to the agent. - The player should move east to navigate towards the water source they need to find to restore their thirst level. 2. Priority 2 - Move North/South: Requirement: Flat ground above/below the agent. - The player may need to move north or south to better position themselves for finding a water source or to avoid obstacles during their search. 3. Priority 3 - Place Table: Requirement: Wood in inventory. - After finding a water source and securing their thirst level, the player should focus on placing a table to begin crafting better tools and weapons. 4. Priority 4 - Make Wood Sword: Requirement: Nearby table; wood in inventory. - Once the table is placed, the player should craft a wood sword to be prepared to defend themselves against any monsters they may encounter. 5. Priority 5 - Sleep: Requirement: Energy level is below maximum. - If the player notices their energy level dropping, they should find a safe place to sleep so they can rest and regain energy. 274 Question: For each action in the list, are the requirements met? Answer: 1. Move East: Requirements: Flat ground right to the agent. - This requirement is met, as there appears to be no indication of an obstacle or uneven terrain to the agent‚Äôs right. 2. Move North/South: Requirements: Flat ground above/below the agent. - This requirement is met, as the agent‚Äôs observation mentions a path 1 step to the south, implying flat ground. The agent ‚Äôs surroundings also don‚Äôt mention any obstacles to the north, so we can assume flat ground in that direction as well. 3. Place Table: Requirements: Wood in inventory. - This requirement is met, as the agent‚Äôs inventory shows 1 wood. 4. Make Wood Sword: Requirements: Nearby table; wood in inventory. - This requirement is partly met since the agent has wood in their inventory. However, they must place a table first before crafting the wood sword. 5. Sleep: Requirements: Energy level is below maximum. - This requirement is met since the agent‚Äôs energy level is currently 7/9, which is below maximum. Question: Did the last player action succeed? Why? Answer: It‚Äôs not clear if the last player action do succeeded or not, as there is no observable change or result provided in the observations for step 358. The do action typically requires the player to face a creature or material and have the necessary tool, but it‚Äôs unclear if these requirements were met. Question: Choose the best executable action from above. Answer: The best executable action from above is Move East, as the requirement of flat ground right to the agent is met, and it will help the player navigate towards a water source to restore their thirst level. ============Step: 180, Cumulative Reward: 0.0============ You took action move_east. You see: - grass 2 steps to your west - stone 1 steps to your north - lava 6 steps to your north-east - furnace 6 steps to your north-west You face path at your front (east). Your status: - health: 9/9 - food: 3/9 - drink: 1/9 - energy: 7/9 Your inventory: - wood: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Do Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass: Provides no resources, no requirements. 2. Stone: Provides stone, requires using a wood_pickaxe or stone_pickaxe to collect. 3. Path: Provides easier movement, no requirements. 4. Lava: Provides no resources and can be dangerous, avoid getting too close. 5. Furnace: Used for smelting ores like iron, requires placing with stone in inventory. 6. Wood_pickaxe: Used for collecting stone, requires crafting with wood at a table. 7. Stone_pickaxe: Used for collecting iron, requires crafting with wood and stone at a table. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_east. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass: No requirements for interaction. 2. Stone: Yes, you have a wood_pickaxe and a stone_pickaxe in your inventory. 3. Path: No requirements for interaction. 4. Lava: Be cautious and avoid interaction since it‚Äôs dangerous. 5. Furnace: Not applicable since it‚Äôs already placed, but you can use it for smelting ores. 6. Wood_pickaxe: Not applicable as it‚Äôs already in your inventory. 7. Stone_pickaxe: Not applicable as it‚Äôs already in your inventory. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Priority 5: Collect more food and drink to restore your food and drink levels. You currently have food: 3/9 and drink: 1/9. 2. Priority 4: Use the stone_pickaxe to collect the stone 1 step to your north. 275 3. Priority 3: Smelt the iron in your inventory using the furnace 6 steps to your north-west and the coal in your inventory. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Requirements for the top sub-task (Collect more food and drink to restore your food and drink levels): - Find a water source (lake or river) to collect drink to restore your thirst. - Find and chase cows or grow and harvest plants to collect food to restore your hunger. The player should first find a water source to collect drink since their current drink level is 1/9, which is lower than the food level. To do this, they can move around the environment and look for a lake or river. Once they find a water source, they can collect drink from it to restore their thirst. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move (North, South, East, or West): Flat ground in the desired direction. Requirement: Explore the environment to find water and food sources. 2. Priority 2: Collect Drink: Find a water source (lake or river). Requirement: Being near a water source and having an empty inventory space. 3. Priority 3: Chase Cows or Harvest Plant: Find cows or edible plants in the environment. Requirement: Being near cows or plants and having an empty inventory space. 4. Priority 4: Eat Cow or Eat Plant: Consume food to restore hunger. Requirement: Having cooked cow meat or harvested plants in the inventory. 5. Priority 5: Sleep: Restore energy. Requirement: Energy level below the maximum (below 9/9). Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Move (North, South, East, or West): Flat ground in the desired direction. Requirement: Explore the environment to find water and food sources. - Yes, the requirements are met. The player can move in any direction with flat ground. 2. Priority 2: Collect Drink: Find a water source (lake or river). Requirement: Being near a water source and having an empty inventory space. - No, the requirements are not met. The player has not found a water source yet. 3. Priority 3: Chase Cows or Harvest Plant: Find cows or edible plants in the environment. Requirement: Being near cows or plants and having an empty inventory space. - No, the requirements are not met. The player has not encountered cows or plants in the current observation. 4. Priority 4: Eat Cow or Eat Plant: Consume food to restore hunger. Requirement: Having cooked cow meat or harvested plants in the inventory. - No, the requirements are not met. The player does not have cooked cow meat or harvested plants in their inventory. 5. Priority 5: Sleep: Restore energy. Requirement: Energy level below the maximum (below 9/9). - Yes, the requirements are met. The player‚Äôs energy level is currently 7/9. Question: Did the last player action succeed? Why? Answer: Yes, the last player action, move_east, succeeded because there was flat ground (a path) to the east of the agent, allowing them to move in that direction. Question: Choose the best executable action from above. Answer: The best executable action from the above list is Priority 1: Move (North, South, East, or West). The player can explore the environment by moving in any direction with flat ground to find water and food sources. ============Step: 181, Cumulative Reward: 0.0============ You took action do. You see: - grass 2 steps to your west - stone 1 steps to your north - lava 6 steps to your north-east - furnace 6 steps to your north-west You face path at your front (east). Your status: - health: 9/9 - food: 3/9 - drink: 1/9 - energy: 7/9 Your inventory: - wood: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move North 276 Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass (2 steps to your west): Resource - can provide saplings if interacted with using the appropriate tool (wood or stone pickaxe); Requirement - wood or stone pickaxe. 2. Stone (1 step to your north): Resource - provides stone material when mined using a pickaxe, which can be used for crafting tools, weapons, and shelters; Requirement - wood or stone pickaxe. 3. Lava (6 steps to your north-east): Resource - could potentially provide light and heat, but dangerous to interact with; Requirement - caution and awareness, as lava is hazardous and may damage the player‚Äôs health if directly interacted. 4. Furnace (6 steps to your north-west): Resource - essential for smelting iron, which can be used for crafting stronger tools and weapons; Requirement - coal and iron ore to smelt iron. Question: What was the last action taken by the player? Answer: The last action taken by the player was do. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass: Yes, the requirements are met for interaction. You have a wood_pickaxe and a stone_pickaxe in your inventory, so you can use either of them to interact with the grass. 2. Stone: Yes, the requirements are met for interaction. You have a wood_pickaxe and a stone_pickaxe in your inventory, which can be used to mine the stone. 3. Lava: The requirement of caution and awareness is met, but direct interaction is not advisable due to the potential risk to your health. It‚Äôs best to avoid close contact with the lava. 4. Furnace: Yes, the requirements are met for interaction. You have coal and iron in your inventory, which can be used to smelt iron using the furnace. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Drink water to restore thirst (Priority: 5/5) - Your drink level is currently 1/9, which is very low. Finding a water source and drinking from it should be your highest priority to avoid dehydration and maintain your health. 2. Find food and eat to increase food level (Priority: 4/5) - Your food level is at 3/9, which is low. To maintain your health and energy levels, you should find food sources like plants, fruits, or animals and consume them. 3. Smelt iron using the furnace (Priority: 3/5) - You have the required resources (coal and iron) and can locate the furnace (6 steps to the north-west). Smelting iron will allow you to craft improved tools and weapons, facilitating your survival in the game. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Requirements for the top sub-task (Drink water to restore thirst): 1. Find a water source, such as a lake or river. 2. Approach the water source. 3. Interact with the water source to drink from it. What should the player do first: The player should first find a water source. They can do this by exploring their surroundings, looking for a lake or river, or listening for the sound of flowing water. Once they have found a water source, they can proceed to approach and interact with it to drink water and restore their thirst level. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move North (requirement: flat ground above the agent) - The player should move north because there‚Äôs stone nearby, which they may need later for crafting or building, and to possibly find a water source. 2. Priority 2: Collect Stone (requirement: Make Wood Pickaxe, facing the stone) - Collect stone to use for crafting tools, weapons, and building structures. 3. Priority 3: Find Water Source (requirement: explore surroundings) - The player‚Äôs drink level is low, so they need to find a water source to replenish their thirst. 4. Priority 4: Move to Water Source (requirement: flat ground in the direction of the water source) - Once the water source is found, move toward it to get closer. 5. Priority 5: Drink from Water Source (requirement: be adjacent to the water source) - Interact with the water source to restore the player‚Äôs thirst level. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Move North - Yes, the requirement flat ground above the agent is met in the observation since there is a stone 1 step to the north. 2. Priority 2: Collect Stone - Yes, the requirements Make Wood Pickaxe and facing the stone are met. The player has a wood_pickaxe and a stone_pickaxe in their inventory, and there is a stone 1 step to the north. 3. Priority 3: Find Water Source - This action does not have a specific requirement mentioned in the actions list. However, it is a necessary step for the player since their drink level is low. The player needs to explore further to find a water source. 4. Priority 4: Move to Water Source - This action‚Äôs requirement, flat ground in the direction of the water source, cannot be confirmed based on the player‚Äôs recent in-game observation. The water source location needs to be determined first (through Priority 3). 277 5. Priority 5: Drink from Water Source - The requirement be adjacent to the water source cannot be determined from the recent in-game observation since we do not know the location of the water source. This action is dependent on the completion of Priority 3 and 4. Question: Did the last player action succeed? Why? Answer: It is not clear from the given information whether the last action do succeeded or not, because there is no information on what the player was attempting to do or any indication of success or failure in the observations. Question: Choose the best executable action from above. Answer: The best executable action from the list is Priority 1: Move North, as the requirement flat ground above the agent is met, and it brings the player closer to the stone, which can be useful for crafting and building. ============Step: 182, Cumulative Reward: 0.0============ You took action move_north. You see: - grass 2 steps to your west - path 1 steps to your west - lava 6 steps to your north-east - furnace 6 steps to your north-west - zombie 6 steps to your north-west You face stone at your front (north). Your status: - health: 9/9 - food: 3/9 - drink: 1/9 - energy: 7/9 Your inventory: - wood: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move West Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass: Provides saplings when collected, requires no specific tool for collection. 2. Stone: Provides stone when collected, requires a wood_pickaxe or a better pickaxe for collection. 3. Path: Provides better movement, no resources collected from it, and requires no specific tool for interaction. 4. Lava: Dangerous, causes damage when in contact, provides no resources, and does not require any tools. 5. Furnace: Provides a means to smelt iron and other resources, requires stone to craft. 6. Zombie: Dangerous, attacks player, defeating it provides experience points, requires a weapon (wood sword, stone sword, or other) for better chance of survival. 7. Wood: Resource used for crafting, requires no specific tool to collect but an axe can speed up the process. 8. Coal: Resource used for powering furnaces, requires a wood_pickaxe or a better pickaxe for collection. 9. Iron: Resource used for crafting high-quality tools, requires a stone_pickaxe or a better pickaxe for collection. 10. Wood_pickaxe: Tool for collecting stone, coal, and iron. Requires wood to craft. 11. Stone_pickaxe: Tool for collecting iron, requires stone and wood to craft. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_north. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass: Yes, the requirements are met for interaction as no specific tool is needed for collection. 2. Stone: Yes, the requirements are met since the player has a wood_pickaxe and a stone_pickaxe in their inventory. 3. Path: Yes, there are no specific requirements for interaction with the path. 4. Lava: Interaction with lava is not recommended due to its dangerous nature, but there are no specific requirements. 5. Furnace: Yes, the player can interact with the furnace, as it is already placed. 6. Zombie: Yes, the player can interact with the zombie; however, they don‚Äôt have a weapon in their inventory. A weapon ( such as a wood or stone sword) would increase their chances of survival. 7. Wood: Yes, the player can collect wood, as no specific tool is required, although having an axe would speed up the process. 8. Coal: Yes, the requirements are met for interaction with coal, as the player has both a wood_pickaxe and a stone_pickaxe in their inventory. 9. Iron: Yes, the requirements are met for interaction with iron, because the player has a stone_pickaxe in their inventory. 10. Wood_pickaxe: The player already has a wood_pickaxe, and there‚Äôs no need for additional interaction. 11. Stone_pickaxe: The player already has a stone_pickaxe, and there‚Äôs no need for additional interaction. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Priority 5: Find a water source to drink and replenish the drink status, as it is currently at 1/9. 2. Priority 4: Collect more food, such as by hunting animals or finding plant sources to increase food status, currently at 3/9. 3. Priority 3: Craft a weapon, such as a wood or stone sword, to defend against the zombie and other potential hostile creatures. Question: What are the requirements for the top sub-task? What should the player do first? Answer: 278 Requirements for the top sub-task (Find a water source): 1. The player needs to locate a water source nearby, such as a lake or river. What should the player do first: The player should explore their surroundings by walking around and looking for a water source, such as moving east, west, north, or south. Keep an eye on the Player Observation for visual signs of water. When a water source is found, the player should approach it and take a drink to replenish their thirst status. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move West (to approach the water source) Requirement: Flat ground left to the agent. 2. Priority 2: Move East (to explore surroundings and search for a water source) Requirement: Flat ground right to the agent. 3. Priority 3: Move North (to explore surroundings and search for a water source) Requirement: Flat ground above of the agent. 4. Priority 4: Move South (to explore surroundings and search for a water source) Requirement: Flat ground below the agent. 5. Priority 5: Place Furnace (to smelt iron and progress in the game) Requirement: Stone in inventory. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Move West (to approach the water source) Requirement: Flat ground left to the agent. Yes, the requirement is met since there is grass 2 steps to the west. 2. Priority 2: Move East (to explore surroundings and search for a water source) Requirement: Flat ground right to the agent. Yes, the requirement is met since there is a path at the front (east). 3. Priority 3: Move North (to explore surroundings and search for a water source) Requirement: Flat ground above of the agent. Yes, the requirement is met since there is stone at the front (north). 4. Priority 4: Move South (to explore surroundings and search for a water source) Requirement: Flat ground below the agent. Information not provided in the observations, cannot determine if the requirement is met. 5. Priority 5: Place Furnace (to smelt iron and progress in the game) Requirement: Stone in inventory. No, the requirement is not met since there is no stone in the inventory. Question: Did the last player action succeed? Why? Answer: Yes, the last player action move_north succeeded because there was a flat ground and no obstacle blocking the player‚Äôs path to the north, allowing the player to move in that direction. Question: Choose the best executable action from above. Answer: The best executable action from above is Priority 1: Move West (to approach the water source). The requirement of flat ground to the west is met, as there is grass 2 steps to the west. ============Step: 183, Cumulative Reward: 0.0============ You took action move_west. You see: - stone 2 steps to your north-east - path 1 steps to your south - lava 7 steps to your north-east - furnace 5 steps to your north-west - zombie 4 steps to your north-west You face grass at your front (west). Your status: - health: 9/9 - food: 3/9 - drink: 1/9 - energy: 7/9 Your inventory: - wood: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move East Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 279 1. Stone: Provides stone resource, requires a wooden pickaxe or better to collect. 2. Path: Does not provide a resource, no requirement. 3. Lava: Can be used as a fuel or create obsidian, requires a bucket to collect. 4. Furnace: Provides the ability to smelt ores (e.g., iron) and cook food, no requirement to use but requires stone and a crafting table to craft. 5. Zombie: Can drop rotten flesh when defeated, which can be eaten but may cause food poisoning, requires a weapon to defeat (sword or equivalent). 6. Grass: Provides seeds when broken, which can be planted to grow crops, requires breaking (no specific tool needed). For the player‚Äôs inventory: 1. Wood: Required for crafting tools and objects, such as pickaxes and tables; can be collected by breaking wooden blocks. 2. Coal: Used as fuel in furnaces, requires a wooden pickaxe or better to collect. 3. Iron: Required for crafting iron tools and weapons and can be used to craft armor, requires a stone pickaxe or better to collect. 4. Wood_pickaxe: A basic tool to mine stone and coal, crafted from wood at a crafting table. 5. Stone_pickaxe: A tool to mine iron and other materials, crafted from stone at a crafting table. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_west. Question: For each object in the list, are the requirements met for interaction? Answer: Based on the player‚Äôs inventory and observation: 1. Stone: Yes, the requirements are met for interaction. The player has a wood_pickaxe and a stone_pickaxe that can be used to collect stone. 2. Path: Yes, the requirements for interaction are met. The path is simply walkable terrain and doesn‚Äôt require any specific action or tool. 3. Lava: No, the requirements are not met for interaction. The player needs a bucket to collect lava. 4. Furnace: Yes, the requirements are met for interaction. The player can use coal and iron in their inventory to smelt iron in the furnace. 5. Zombie: Yes, the requirements are met for interaction. Although the player doesn‚Äôt have a sword, they can still attack the zombie using their available tools (wood_pickaxe or stone_pickaxe). 6. Grass: Yes, the requirements are met for interaction. The player can break grass without any specific tool needed. For the player‚Äôs inventory: 1. Wood: N/A, as it‚Äôs an inventory item, not an object to interact with in the environment. 2. Coal: N/A, as it‚Äôs an inventory item, not an object to interact with in the environment. 3. Iron: N/A, as it‚Äôs an inventory item, not an object to interact with in the environment. 4. Wood_pickaxe: N/A, as it‚Äôs an inventory item, not an object to interact with in the environment. 5. Stone_pickaxe: N/A, as it‚Äôs an inventory item, not an object to interact with in the environment. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Priority 4/5: Find a water source (drink) and consume water to increase the player‚Äôs drink level, which is currently at 1/9. This is important to avoid dehydration and maintain survival. 2. Priority 3/5: Craft a weapon, ideally a sword (wood or stone), to increase the effectiveness of combat against the nearby zombie and any future threats. This will improve the player‚Äôs chances of survival against hostile mobs. 3. Priority 2/5: Use the furnace to smelt the iron in the player‚Äôs inventory with the available coal. This will allow the player to craft iron tools or weapons, which are more efficient and powerful than their wooden or stone counterparts. This will increase the player‚Äôs overall productivity and capability to defend themselves. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Requirements for the top sub-task (finding and consuming water): 1. Locate a water source such as a lake, river, or pond in the game environment. 2. Ensure there are no immediate hazards around the water source to avoid any trouble. 3. Move towards the water source safely, navigating through any obstacles or terrain. The first thing the player should do is look around the environment for any signs of a water source. This can be achieved by exploring their surroundings and keeping an eye on the landscape for any bodies of water nearby. Once located, make sure the area is safe and then approach the water source to consume water and increase the drink level. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1 - Move East: Requirement: Flat ground right to the agent. Reason: To approach the stone seen two steps to the north-east. 2. Priority 2 - Make Wood Sword: Requirement: Nearby table; wood in inventory. Reason: To have a weapon to defend against the zombie seen four steps to the north-west. 3. Priority 3 - Place Furnace: Requirement: Stone in inventory. Reason: To establish a furnace to smelt iron for making an iron sword or pickaxe. 4. Priority 4 - Collect Drink: Requirement: No requirements. Reason: To replenish the player‚Äôs drink level, which is currently low (1/9). 5. Priority 5 - Eat Cow: Requirement: No requirements. Reason: To replenish the player‚Äôs food level, which is currently low (3/9). Question: For each action in the list, are the requirements met? Answer: 1. Move East: Requirement: Flat ground right to the agent. Requirement met? Yes, because the agent is currently facing grass in the west. 2. Make Wood Sword: Requirement: Nearby table; wood in inventory. Requirement met? No, because there is no table nearby in the player‚Äôs observation. 280 3. Place Furnace: Requirement: Stone in inventory. Requirement met? No, because the player does not have any stone in their inventory. 4. Collect Drink: Requirement: No requirements. Requirement met? Yes, because there are no requirements for this action. 5. Eat Cow: Requirement: No requirements. Requirement met? Yes, because there are no requirements for this action. Question: Did the last player action succeed? Why? Answer: Yes, the last player action move_west succeeded because the player was able to move in the west direction and observed their surroundings in the new position, including the grass at their front. There must have been flat ground to the west, allowing the player to move in that direction. Question: Choose the best executable action from above. Answer: The best executable action from above is Move East, as it fulfills the requirement of having flat ground right to the agent. ============Step: 184, Cumulative Reward: 0.0============ You took action move_east. You see: - grass 2 steps to your west - stone 1 steps to your north - lava 6 steps to your north-east - furnace 6 steps to your north-west - zombie 6 steps to your north-west You face path at your front (east). Your status: - health: 9/9 - food: 3/9 - drink: 1/9 - energy: 7/9 Your inventory: - wood: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move South Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass: Provides no specific resource, but can be used to identify biomes and areas. No requirements. 2. Stone: Provides stone resource, which can be used to craft tools and build structures. Requires a wood or stone pickaxe to collect. 3. Lava: Provides light and can be used as an energy source for smelting, but is dangerous to interact with. Requires a bucket to collect safely. 4. Furnace: Allows smelting of iron and cooking food. Requires stone to craft and build. 5. Zombie: Can drop experience points, rotten flesh, and sometimes equipment when defeated. Requires a weapon (wooden sword or better) to defeat efficiently. 6. Path: Provides no specific resource but indicates a path between locations. No requirements. 7. Wood: Not mentioned in the current observation, but it‚Äôs useful for crafting and building structures. Requires a wood or stone pickaxe to collect. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_east. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass: No requirements for interaction, so the requirements are met. 2. Stone: Requires a wood or stone pickaxe to collect. The player has both a wood_pickaxe and a stone_pickaxe in their inventory, so the requirements are met. 3. Lava: Requires a bucket to collect safely. The player does not have a bucket in their inventory, so the requirements are not met. 4. Furnace: Already built and placed, so no requirements for interaction. If the player wants to smelt iron, they have coal and iron in their inventory, so in this case, the requirements are met. 5. Zombie: Requires a weapon (wooden sword or better) to defeat efficiently. The player does not have a sword in their inventory, so the requirements are not met. However, the player can still attempt to attack the zombie with their tools, but it will be less efficient. 6. Path: No requirements for interaction, so the requirements are met. 7. Wood: Requires a wood or stone pickaxe to collect. The player has both a wood_pickaxe and a stone_pickaxe in their inventory, so the requirements are met. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Priority 4/5: Craft a weapon (wood, stone, or iron sword) to defend against zombies or other monsters more efficiently. The player needs wood for a wood sword, and they already have wood and stone for a stone sword. 2. Priority 5/5: Find a water source and drink to improve the player‚Äôs thirst level, which is currently at 1/9. 281 3. Priority 3/5: Collect more wood and stone for crafting and building purposes. The player already has a wooden and stone pickaxe, so they can collect these resources efficiently. Question: What are the requirements for the top sub-task? What should the player do first? Answer: For the top sub-task, which is to craft a weapon (wood or stone sword), the requirements are as follows: Wood Sword: - Nearby crafting table - Wood in the inventory (already available) Stone Sword: - Nearby crafting table - Wood (already available) and Stone in the inventory (already available) The player should first locate a crafting table or craft one using the available wood. Once the crafting table is found or placed, they can use it to craft either a wood sword or a stone sword, depending on their preference. Since the player has both wood and stone, it is recommended to craft the more effective stone sword for better defense against monsters. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Place Table (Requirement: Wood in inventory) - Place a crafting table with the available wood, so that the player can craft weapons and tools. 2. Priority 2: Make Stone Sword (Requirement: Nearby table; wood, stone in inventory) - Craft a stone sword using the placed crafting table and available resources, so that the player has a weapon to defend against monsters. 3. Priority 3: Move South (Requirement: Flat ground below the agent) - Move towards the path, which could potentially lead to more resources or water. 4. Priority 4: Collect Drink (Requirement: No requirements) - Since the player‚Äôs drink status is low, they should focus on finding a water source to replenish their thirst. 5. Priority 5: Sleep (Requirement: Energy level is below maximum) - Sleep when the energy becomes lower to ensure the player recovers some health and avoids exhaustion. Ensure to sleep in a safe place, away from monsters. Question: For each action in the list, are the requirements met? Answer: 1. Place Table: Yes, the requirements are met, as there is wood (1 unit) in the inventory. 2. Make Stone Sword: No, the requirements are not met as there is no stone in the inventory. 3. Move South: Yes, the requirements are met because there is a flat ground towards the south, as mentioned path 1 step to your south in the observation. 4. Collect Drink: No, the requirements are not yet met as there is no visible water source in the player‚Äôs observation. They need to find a water source before drinking it. 5. Sleep: Yes, the requirements are met, as the energy level (7/9) is currently below the maximum. However, it is recommended to find a safe place before sleeping. Question: Did the last player action succeed? Why? Answer: Yes, the last player action (move_east) succeeded. The action was successful because there was a flat ground (path) in the east direction, allowing the player to move in that direction. Question: Choose the best executable action from above. Answer: The best executable action from the given options is Move South, as it meets the requirement of having flat ground below the agent, and moving towards the path could potentially lead to more resources or a water source. ============Step: 185, Cumulative Reward: 0.0============ You took action move_south. You see: - grass 2 steps to your west - stone 1 steps to your east - table 4 steps to your south-west - furnace 7 steps to your north-west - zombie 6 steps to your north-west You face path at your front (south). Your status: - health: 9/9 - food: 3/9 - drink: 1/9 - energy: 7/9 Your inventory: - wood: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action 282 Answer: Move South Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass: Provides no resources but can be used to plant saplings. No requirements. 2. Stone: Provides stone resource when mined with a pickaxe. Requires stone_pickaxe or wood_pickaxe to mine. 3. Table: Allows you to craft tools and weapons. Requires wood to craft and place. 4. Furnace: Smelts iron and other ores. Requires stone to craft and place. 5. Zombie: Fighting zombies can provide experience points and potentially drop rare items. Requires a sword or other weapon to fight. In your current observation, you do not have the necessary resources to interact with lava or the zombie directly. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_south. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass: Yes, the requirements are met for interaction as there are no specific requirements or tools needed to interact with grass. 2. Stone: Yes, the requirements are met for interaction as you have a stone_pickaxe and a wood_pickaxe in your inventory, which can be used to mine stone. 3. Table: Yes, the requirements are met for interaction as you have wood in your inventory, which can be used to craft and place a table. 4. Furnace: Yes, the requirements are met for interaction as you have stone in your inventory, which is needed to craft and place a furnace. 5. Zombie: No, the requirements are not met for interaction as you do not have a sword or any other weapon in your inventory to fight the zombie. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Priority 5/5: Craft a weapon (wood sword or stone sword) to defend against the zombie and other potential threats. The table is found four steps to your south-west. Requires a table and wood, or table, wood, and stone in inventory. 2. Priority 4/5: Drink water to replenish the water level. Requires finding a water source like a lake or river. 3. Priority 3/5: Find and consume food to restore the food level. This could be done by hunting animals or finding edible plants. Requires finding food sources nearby. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Requirements for the top sub-task (Craft a weapon): 1. Have wood, and/or stone in the inventory. (Player already has 1 wood and 1 stone_pickaxe) 2. Be near the crafting table. (Table found 4 steps to your south-west) What should the player do first: 1. The player should move towards the crafting table so that they can craft a weapon. In this case, the table is positioned 4 steps to the south-west. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move West Requirement: Flat ground to the west of the agent. (Grass observed 2 steps to the west) 2. Priority 2: Move South Requirement: Flat ground to the south of the agent. (Player is facing a path to the south) 3. Priority 3: Move West Requirement: Flat ground to the west of the agent. (Ensure alignment with the crafting table) 4. Priority 4: Move South Requirement: Flat ground to the south of the agent. (Table observed 4 steps to your south-west) 5. Priority 5: Make Wood Sword Requirement: Nearby table; wood in inventory. (Player has 1 wood in inventory and will be at the table) Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Move West Requirement: Flat ground to the west of the agent. Requirements Met: Yes (Grass observed 2 steps to the west) 2. Priority 2: Move South Requirement: Flat ground to the south of the agent. Requirements Met: Yes (Player is facing a path to the south) 3. Priority 3: Move West Requirement: Flat ground to the west of the agent. Requirements Met: Cannot be confirmed at this step, as the player has not moved to the new location yet. 4. Priority 4: Move South Requirement: Flat ground to the south of the agent. Requirements Met: Cannot be confirmed at this step, as the player has not moved to the new location yet. 5. Priority 5: Make Wood Sword Requirement: Nearby table; wood in inventory. 283 Requirements Met: Not yet, as the player needs to reach the table first. Once the player is near the table, the requirement will be met since the player has 1 wood in their inventory. Question: Did the last player action succeed? Why? Answer: Yes, the last player action (move_south) succeeded because the player faced a path at their front (south) and there were no obstacles blocking their movement in that direction. Question: Choose the best executable action from above. Answer: The best executable action from the list above is Priority 2: Move South, as its requirement (flat ground to the south of the agent) is met. The player is facing a path to the south, which indicates that the action can be executed successfully. ============Step: 186, Cumulative Reward: 0.0============ You took action move_south. You see: - grass 2 steps to your west - stone 2 steps to your north-east - table 3 steps to your south-west - zombie 6 steps to your north-west You face path at your front (south). Your status: - health: 9/9 - food: 3/9 - drink: 1/9 - energy: 7/9 Your inventory: - wood: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move West Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass: Resource it provides is saplings when harvested, and its requirement is to use your hand or any tool to collect it. 2. Stone: Resource it provides is stone pieces when mined with a pickaxe, and its requirement is to use a pickaxe (wood, stone or iron) to collect it. 3. Table: It doesn‚Äôt provide a resource, but it is required as a crafting station for making tools and items. 4. Zombie: It provides Zombie drops (such as rotten flesh) when defeated which can be used as a low-quality food source, and its requirement is to use any weapon (wooden, stone, or iron sword) to defeat it. 5. Path: It doesn‚Äôt directly provide a resource, but it indicates where you can walk without obstacles. Your inventory contains: 1. Wood: Resource it provides is used in crafting tools, weapons, and structures, no requirements to use it; collect it from trees. 2. Coal: Resource it provides is used as fuel for a furnace to smelt ores, no requirements to use it; collect it from coal deposits. 3. Iron: Resource it provides is used in crafting higher-tier tools, weapons, and armor, requires a furnace to smelt it into iron bars. 4. Wood Pickaxe: This tool doesn‚Äôt provide a direct resource but is required to collect stone and coal. 5. Stone Pickaxe: This tool doesn‚Äôt provide a direct resource but is required to collect iron and more efficiently gather stone and coal. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_south. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass: Yes, the requirements to interact with the grass are met, as you can use your hand or any tool to collect it. 2. Stone: Yes, the requirements to interact with the stone are met, as you have both a wood pickaxe and a stone pickaxe in your inventory. 3. Table: Yes, the requirements to interact with the table are met, as it is within a few steps from your current location, and you have enough resources in your inventory for crafting. 4. Zombie: Yes, the requirements to interact with the zombie are met, as you have a weapon in your inventory (wood or stone sword) to defeat it. 5. Path: Yes, the requirements to interact with the path are met, as you can easily move along the path without any obstacles. Regarding the items in your inventory: 1. Wood: Yes, the requirements to interact with wood are met, as you have it in your inventory and can use it for crafting. 2. Coal: Yes, the requirements to interact with coal are met, as you have it in your inventory and can use it as fuel for a furnace. 3. Iron: Yes, the requirements to interact with iron are met, as you have it in your inventory and a furnace nearby to smelt it into iron bars. 4. Wood Pickaxe: Yes, the requirements to interact with the wood pickaxe are met, as you have it in your inventory and can use it to mine stone and coal. 284 5. Stone Pickaxe: Yes, the requirements to interact with the stone pickaxe are met, as you have it in your inventory and can use it to mine iron, stone, and coal more efficiently. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Priority 4/5: Drink water to restore the thirst level: Find a water source such as a lake or river and drink water, as your current drink level is 1/9, which is very low. 2. Priority 3/5: Eat food to restore the food level: Consider consuming any available food or hunting for animals like cows or pigs, as your current food level is 3/9. 3. Priority 5/5: Smelt iron to create better tools and weapons: Utilize the furnace and the coal in your inventory to smelt the iron, which can then be used to create an iron pickaxe or an iron sword. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Top Sub-task: Drink water to restore the thirst level. Requirements: 1. Locate a water source such as a lake, river, or pond. 2. Move towards the water source. 3. Interact with the water source to drink water and restore your thirst level. First, the player should try to locate a water source in the game, such as a lake or a river. Keep an eye on nearby surroundings and move towards the direction where a water source might be present. Once the player finds a water source, move close to it and drink the water to restore the thirst level. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move West/Move East/Move North/Move South Requirement: Flat ground in the desired direction Action: The player should move towards a water source to restore their thirst level. Depending on the direction of a nearby water source, choose the appropriate movement action. 2. Priority 2: Drink Water Requirement: Near a water source like a lake or river Action: Once the player reaches the water source, interact with it to drink water and restore the thirst level. 3. Priority 3: Move West/Move East/Move North/Move South Requirement: Flat ground in the desired direction Action: After restoring thirst, move towards the table for crafting or finding resources like wood, stone, or iron. 4. Priority 4: Make Iron Sword or Make Iron Pickaxe Requirement: Nearby table, furnace; wood, coal, iron in inventory. Action: If the player has enough resources, craft an Iron Sword to defend against monsters or an Iron Pickaxe to collect diamonds. 5. Priority 5: Sleep Requirement: Energy level is below maximum. Action: Find a safe place to sleep and restore energy levels. This will help the player perform actions more efficiently and ensure better chances of survival. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Move West/Move East/Move North/Move South Requirement: Flat ground in the desired direction Requirements met? Yes. The player‚Äôs observation shows there is a flat path open to the south, and the other directions can be attempted if needed. 2. Priority 2: Drink Water Requirement: Near a water source like a lake or river Requirements met? No. Current observations don‚Äôt mention any water source or lake nearby. 3. Priority 3: Move West/Move East/Move North/Move South Requirement: Flat ground in the desired direction Requirements met? Yes, the player can move in any direction to reach the table or resources. The table is mentioned 3 steps to the south-west. 4. Priority 4: Make an Iron Sword or Make an Iron Pickaxe Requirement: Nearby table, furnace; wood, coal, iron in inventory. Requirements met? Partially. The player has wood, coal, and iron in their inventory, but they need to reach the table and furnace first. The table is mentioned 3 steps to the south-west, and the furnace is mentioned 7 steps to the north- west. 5. Priority 5: Sleep Requirement: Energy level is below maximum. Requirements met? Yes. The player‚Äôs energy level is 7/9, which is below the maximum. The player can find a safe place and sleep to restore energy levels. Question: Did the last player action succeed? Why? Answer: Yes, the last player action move_south succeeded because there was a flat path in front of the player to the south, allowing them to move in that direction. Question: Choose the best executable action from above. Answer: The best executable action from the list above is: Priority 1: Move West/Move East/Move North/Move South Requirement: Flat ground in the desired direction 285 Action: The player should move towards a water source to restore their thirst level. In this case, since the water source location is not clear from the observations, the player should move towards the table (south-west) while exploring and searching for the water source. ============Step: 187, Cumulative Reward: 0.0============ You took action move_west. You see: - stone 3 steps to your north-east - path 1 steps to your north - table 2 steps to your south - zombie 4 steps to your north-west You face grass at your front (west). Your status: - health: 9/9 - food: 3/9 - drink: 1/9 - energy: 7/9 Your inventory: - wood: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move West Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone as a resource, which can be used to craft tools and shelter; requires a wood pickaxe or a stronger one to collect. 2. Path: Provides a clear route to walk on without obstacles; no requirements, can simply walk on it. 3. Table: Provides a surface for crafting items such as pickaxes and swords; requires wood to be crafted and placed. 4. Zombie: Represents a potential threat and needs to be defeated if it gets too close; requires a weapon like a wood or better sword for easier defeat. 5. Grass: Can be used as a decorative block, or used to move across without obstructions; no requirements, can simply walk on it. Your status and inventory are not considered objects within the environment but are essential for describing your current progress and available resources. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_west. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Yes, the requirements are met for interacting with the stone because you have a wood_pickaxe and a stone_pickaxe in your inventory, both of which can be used to collect stone. 2. Path: Yes, the requirements are met for interacting with the path because there are no obstacles, and you can simply walk on it. 3. Table: Yes, the requirements are met for interacting with the table because it is already placed, and you can use it for crafting as long as you have the necessary resources. 4. Zombie: Yes, the requirements are met for interacting with (defeating) the zombie because you have a wood_pickaxe and a stone_pickaxe in your inventory. Although they are not as effective as a sword, they can still be used as weapons to fight against the zombie. 5. Grass: Yes, the requirements are met for interacting with the grass because there are no obstacles, and you can simply walk on it. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Increase drink level (Priority: 5/5): Your drink level is only at 1/9, which is a critical concern. You should quickly search for a water source like a lake or river to drink from and avoid dehydration. 2. Increase food level (Priority: 4/5): Your food level is currently at 3/9, which is quite low. You should seek out food sources like hunting animals such as cows, or collecting and growing fruits to restore your hunger. 3. Defend against the nearby zombie (Priority: 3/5): The zombie is only 4 steps to your northwest. Keep an eye on its position and be prepared to fight with your wood_pickaxe or stone_pickaxe if it approaches closer. It would also be beneficial to craft a sword for more effective combat if resources allow. Question: What are the requirements for the top sub-task? What should the player do first? Answer: For the top sub-task, which is to increase drink level, the requirements are: 1. Find a water source: Locate a nearby lake, river or other body of water so you can drink from it. 2. Close enough to the water: Be near the water source to interact with it. 286 The first thing the player should do is to search for a water source in the game environment. They can do this by moving around (using move_west, move_east, move_north, move_south actions) and observing their surroundings to find a nearby lake or river to drink from. Once they have found a water source, the player should approach it and drink from it to restore their thirst. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: Here are the top 5 actions the player should take, along with their requirements and priority: 1. Priority 1: Move to find a water source (Move West, Move East, Move North, Move South) Requirement: Flat ground in the direction of movement. 2. Priority 2: Collect Drink (when facing a water source) Requirement: Close enough to the water source. 3. Priority 3: Make Iron Sword (Make Iron Sword) Requirement: Nearby table, furnace; wood, coal, and iron in inventory. 4. Priority 4: Eat Plant (Eat Plant) Requirement: Be near a plant or have placed a plant earlier. 5. Priority 5: Defeat Zombie (Defeat Zombie) Requirement: Facing a zombie; have a weapon equipped (such as a wood sword, stone sword, or iron sword). The player should first focus on finding a water source to restore their thirst level, and then craft an Iron Sword for better combat efficiency. Next, they can eat a plant to restore some food level, and finally, defeat a nearby zombie using the crafted weapon. Remember that these actions should be carried out in the order of their priority to optimize the player‚Äôs survival in the game. Question: For each action in the list, are the requirements met? Answer: 1. Move to find a water source (Move West, Move East, Move North, Move South) Requirement: Flat ground in the direction of movement. - Met: Yes (The player can move in any direction where there is flat ground.) 2. Collect Drink (when facing a water source) Requirement: Close enough to the water source. - Met: No (There is no water source mentioned in the player‚Äôs recent observation.) 3. Make Iron Sword (Make Iron Sword) Requirement: Nearby table, furnace; wood, coal, and iron in inventory. - Met: No (The player does not currently have a furnace.) 4. Eat Plant (Eat Plant) Requirement: Be near a plant or have placed a plant earlier. - Met: No (There is no plant mentioned in the player‚Äôs recent observation that they can eat.) 5. Defeat Zombie (Defeat Zombie) Requirement: Facing a zombie; have a weapon equipped (such as a wood sword, stone sword, or iron sword). - Met: Partially (The player has a wood sword and stone sword in their inventory, but they need to face the zombie first before they can defeat it with a weapon.) Question: Did the last player action succeed? Why? Answer: Yes, the last player action succeeded because the player faced a grass block at their front (west), which is a flat and traversable terrain. This allowed the player to move west without any obstacles blocking their path. Question: Choose the best executable action from above. Answer: The best executable action from the list above is: 1. Move to find a water source (Move West, Move East, Move North, Move South) Requirement: Flat ground in the direction of movement. Since the other action requirements are not met, the player should focus on finding a water source to restore their thirst level. They can move in any direction where there is flat ground. ============Step: 188, Cumulative Reward: 0.0============ You took action move_west. You see: - stone 4 steps to your north-east - path 1 steps to your east - tree 6 steps to your north-west - table 3 steps to your south-east - zombie 2 steps to your north You face grass at your front (west). Your status: - health: 9/9 - food: 3/9 - drink: 1/9 - energy: 7/9 Your inventory: - wood: 1 - coal: 2 - iron: 1 287 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move West Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: - Stone: Provides stone resource; requires a wood_pickaxe or stronger to mine. - Path: No resource provided, but allows easy movement; no requirement. - Tree: Provides wood resource; requires a wood_pickaxe or stronger to chop. - Table: Allows crafting of tools and weapons; no requirement. - Zombie: Provides a challenge, and potential loot when defeated; requires a weapon for better chances of winning. Note that grass, which is faced by the player, does not provide any resources and has no requirement to interact with. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_west (moving west). Question: For each object in the list, are the requirements met for interaction? Answer: - Stone: Yes, the requirements are met for interaction as the player has both a wood_pickaxe and a stone_pickaxe in their inventory. - Path: Yes, the requirements are met for interaction as there are no special requirements for moving on paths. - Tree: Yes, the requirements are met for interaction as the player has both a wood_pickaxe and a stone_pickaxe in their inventory. - Table: Yes, the requirements are met for interaction as there are no special requirements for using a table. - Zombie: Yes, the requirements are met for interaction as the player has both a wood_pickaxe and a stone_pickaxe, which can be used as weapons to battle the zombie, although crafting a sword (wood or stone) would be a better option. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Priority 4/5: Find a source of water or drink to restore the player‚Äôs low drink level (1/9). 2. Priority 3/5: Find food to restore the player‚Äôs low food level (3/9). 3. Priority 2/5: Craft a wood or stone sword at the table to better defend against the nearby zombie or other hostile creatures. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Requirements for the top sub-task (Find a source of water or drink to restore the player‚Äôs low drink level): 1. Locate a water source, such as a lake, river, or water container. What the player should do first: 1. Move around and explore the environment to find a water source. Keep an eye on the surrounding area for any bodies of water or items that can contain water. Once a water source is found, approach it and interact with it to restore the drink level. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move West/Move East/Move North/Move South - Requirement: Flat ground in the desired direction. (Explore the environment to find a water source and keep an eye on surroundings). 2. Priority 2: Collect Drink - Requirement: Find a water source such as a lake or river (Restore drink level). 3. Priority 3: Collect Wood - Requirement: No requirements. (Additional wood can be used to craft necessary tools or create a shelter). 4. Priority 4: Make Wood Sword - Requirement: Nearby table; wood in inventory. (Equip a better weapon to defend against the nearby zombie). 5. Priority 5: Defeat Zombie - Requirement: No requirements. (Eliminate the threat of the nearby zombie to ensure player‚Äôs survival). Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Move West/Move East/Move North/Move South - Requirement: Flat ground in the desired direction. (Requirements met for all directions, as there are no mentioned obstacles in the environment preventing movement). 2. Priority 2: Collect Drink - Requirement: Find a water source such as a lake or river. (Requirements not met, as no water source has been observed yet). 3. Priority 3: Collect Wood - Requirement: No requirements. (Requirements met, as there is a tree 6 steps to the north-west). 4. Priority 4: Make Wood Sword - Requirement: Nearby table; wood in inventory. (Requirements met, as the player has a table 3 steps to the south-east and 1 wood in their inventory). 5. Priority 5: Defeat Zombie - Requirement: No requirements. (Requirements met, as the player can face and engage the zombie without needing any specific items or conditions). Question: Did the last player action succeed? Why? Answer: Yes, the last player action succeeded. The player was able to move west because there was flat ground (grass) in the west direction, allowing the player to move to that position without any obstacles. Question: Choose the best executable action from above. Answer: 288 The best executable action from the list above is Priority 1: Move West/Move East/Move North/Move South. The requirements are met for all directions, as there are no mentioned obstacles in the environment preventing movement. It allows the player to explore the environment to find a water source and keep an eye on surroundings. ============Step: 189, Cumulative Reward: 0.0============ You took action move_west. You see: - stone 5 steps to your north-east - path 2 steps to your east - tree 5 steps to your north-west - table 4 steps to your south-east - cow 7 steps to your south-west - zombie 2 steps to your north You face grass at your front (west). Your status: - health: 9/9 - food: 3/9 - drink: 1/9 - energy: 7/9 Your inventory: - wood: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move East Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Resource provided is stone; Requirement is a wood_pickaxe or better to mine it. 2. Path: Resource provided is easier movement; No requirements. 3. Tree: Resource provided is wood; Requirement is any type of pickaxe or an axe to cut it down. 4. Table: Resource provided is crafting station; No requirements for interaction. 5. Cow: Resource provided is food (meat); Requirement is a weapon like a sword or tool to kill it. 6. Zombie: Resource provided is a potential drop of random items upon defeat; Requirement is a weapon like a sword to fight it. 7. Grass: Resource provided is a sapling when do action is used on it; No requirements for interaction. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_west. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Yes, the requirements are met as you have both a wood_pickaxe and a stone_pickaxe in your inventory. 2. Path: Yes, the requirements are met as there are no specific requirements for interacting with a path. 3. Tree: Yes, the requirements are met as you have both a wood_pickaxe and a stone_pickaxe in your inventory, which can be used to cut down the tree. 4. Table: Yes, the requirements are met as there are no specific requirements for interacting with a table. 5. Cow: Yes, the requirements are met as you have a stone_pickaxe in your inventory, which can be used as a weapon to kill the cow. 6. Zombie: Yes, the requirements are met as you have a stone_pickaxe in your inventory, which can be used as a weapon to fight the zombie. 7. Grass: Yes, the requirements are met as there are no specific requirements for interacting with grass. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Find and drink water (Priority: 5/5) - Your current drink level is at 1/9, placing you at high risk of dehydration. Locate a water source such as a lake, river, or well to replenish your drink level. 2. Obtain food (Priority: 4/5) - Your current food level is at 3/9, indicating that you need food to sustain your health and energy. You can kill the nearby cow for meat or search for other food sources like fruits, crops, or saplings for plant-based options. 3. Defeat or avoid the nearby zombie (Priority: 3/5) - The zombie is 2 steps to your north and poses a threat to your safety. Depending on your preference or strategy, you can either use your stone_pickaxe to defeat the zombie or alter your path to avoid confrontation. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Top sub-task: Find and drink water Requirements: Locate a water source such as a lake, river, or well and be close enough to interact with the water. What should the player do first: The player should move in a direction that may lead to a water source. Exploring the area and keeping an eye out for signs of water, such as a riverbank or the sound of flowing water, will be helpful. Once a water source is located, the player should stand close to it and take the action to drink water to replenish the drink level. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 289 1. Priority 1: Move East (or other directions) - Requirement: Flat ground in the desired direction (East in this case) Explanation: The player should move around to find a water source and avoid the zombie. 2. Priority 2: Noop - Requirement: Always applicable Explanation: If moving to another direction is not possible, the player can choose to stay in place momentarily until a better option presents itself. 3. Priority 3: Drink water - Requirement: Close to a water source (lake or river) Explanation: Once the player finds a water source, drinking water will be essential to replenish the drink level. 4. Priority 4: Move towards the cow - Requirement: Flat ground in the direction of cow Explanation: The player needs to replenish the food level, and chasing a cow can help achieve this objective. 5. Priority 5: Eat cow - Requirement: Close to a cow Explanation: After getting close to a cow, the player should choose to eat the cow to replenish the food level. Question: For each action in the list, are the requirements met? Answer: 1. Move East: Yes, the requirement is met - the player can move back towards the path because flat ground (path) is observed 2 steps to the east. 2. Noop: Yes, the requirement is met - since ‚ÄôNoop‚Äô is always applicable, the player can choose to stay in place momentarily. 3. Drink water: No, the requirement is not met - the player has not found a water source (lake or river) at this moment. 4. Move towards the cow: Yes, the requirement is met - moving towards the cow requires flat ground in the direction of the cow, and the cow is observed 7 steps to the southwest. The player can move south and/or west to approach the cow. 5. Eat cow: No, the requirement is not met - the player is not close enough to a cow, as it is located 7 steps to the south- west. Question: Did the last player action succeed? Why? Answer: Yes, the last player action succeeded. The player was able to move west because there was flat ground (grass) in that direction, allowing the player to move without any obstacles. Question: Choose the best executable action from above. Answer: The best executable action for the player is to Move East since it fulfills the requirement of having flat ground (path) in the desired direction, and it helps the player to move back towards the path and potentially avoid the zombie. ============Step: 190, Cumulative Reward: 0.0============ You took action move_east. You see: - grass 1 steps to your west - stone 4 steps to your north-east - tree 6 steps to your north-west - table 3 steps to your south-east - zombie 2 steps to your north You face path at your front (east). Your status: - health: 9/9 - food: 3/9 - drink: 1/9 - energy: 7/9 Your inventory: - wood: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move South Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass: Provides no resources. No requirements. 2. Stone: Provides stone resources required for crafting tools and building structures. Requires a wood pickaxe or better to collect. 3. Path: Provides no resources, but makes travel easier. No requirements. 4. Tree: Provides wood resources for crafting tools, weapons, and building structures. Requires a wood pickaxe or better to collect. 5. Table: Used for crafting tools and weapons. Requires wood to craft. 6. Zombie: Provides experience points and possibly rare drops. Requires weapons, such as a wood or stone sword, to defeat. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_east. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass: No requirements for interaction, so yes, the requirements are met. 290 2. Stone: You have a wood_pickaxe and a stone_pickaxe in your inventory, so yes, the requirements for collecting stone are met. 3. Path: No requirements for interaction, so yes, the requirements are met. 4. Tree: You have a wood_pickaxe in your inventory, so yes, the requirements for collecting wood are met. 5. Table: You already have a table in your vicinity, so yes, the requirements for crafting with the table are met. 6. Zombie: You don‚Äôt have a sword in your inventory, so no, the requirements for defeating the zombie are not met. You need to craft either a wood, stone, or iron sword to interact with the zombie effectively. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Craft a sword to defend against the zombie (Priority: 5/5). Since there‚Äôs a zombie nearby, crafting a sword should be the highest priority for self-defense. 2. Collect wood from the tree to have enough resources for crafting and building (Priority: 4/5). Wood is essential for various crafting recipes and building structures, so it‚Äôs important to gather more. 3. Increase drink level by finding a water source (Priority: 4/5). Your drink level is 1/9, which is quite low. Finding a water source to restore your thirst level is crucial for survival. 4. Find food and increase your food level (Priority: 3/5). Your food level is also quite low (3/9), although not as critical as your drink level. Finding and consuming food should be done after addressing the more pressing priorities. Question: What are the requirements for the top sub-task? What should the player do first? Answer: The top sub-task is to craft a sword to defend against the zombie. The requirements for crafting a sword (either wood, stone, or iron) are as follows: 1. Be near the crafting table (there‚Äôs a table 3 steps to your south-east). 2. Have the necessary resources in your inventory. The wood sword requires wood in your inventory. The stone sword requires wood and stone in your inventory. The iron sword requires wood, coal, and iron in your inventory. Since you already have wood (1), coal (2), and iron (1) in your inventory, you can make an iron sword for better defense. First, move 3 steps south-east to reach the crafting table. Then, craft the iron sword using the wood, coal, and iron that you already have in your inventory. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move South-East (3 steps) - Requirement: Flat ground in the desired direction (south-east). Reason: Moving towards the crafting table to create a sword. 2. Priority 2: Make Iron Sword - Requirements: Nearby table, furnace; wood, coal, and iron in inventory. Reason: To be able to defend against the zombie. 3. Priority 3: Move North (2 steps) - Requirement: Flat ground in the desired direction (north). Reason: Engage with the zombie once the iron sword is crafted. 4. Priority 4: Defeat Zombie - Requirements: No specific requirement. Reason: To eliminate the zombie threat and survive the encounter. 5. Priority 5: Drink water - Requirement: Access to a water source (lake, river, or any other water source). Reason: To replenish the player‚Äôs thirst, which is currently at 1/9. Question: For each action in the list, are the requirements met? Answer: 1. Move South-East (3 steps): Yes, the requirements are met. The ground in the southeast direction is not explicitly mentioned, but considering the path and the table, it should be flat ground. 2. Make Iron Sword: No, the requirements are not met. Although the player has iron and a nearby table, they also need to be near a furnace. The furnace‚Äôs location is not given in the recent observations. 3. Move North (2 steps): Yes, the requirements are met. Moving north twice brings the player closer to the zombie and will be a valid action. 4. Defeat Zombie: No, the requirements are not met yet. While there are no specific inventory requirements for this action, it is recommended to have a sword first (ideally the iron sword) to successfully defeat the zombie. Since the player hasn‚Äôt crafted an iron sword yet, it would be better to wait until they do. 5. Drink water: No, the requirements are not met. Currently, there is no mention of a water source in the recent observations. The player needs to find a water source (lake, river, etc.) to drink from it. Question: Did the last player action succeed? Why? Answer: Yes, the last player action move_east succeeded. The player was able to move to the east because there was a path (flat ground) in that direction, allowing the player to move without any obstacles. Question: Choose the best executable action from above. Answer: The best executable action from above is to Move South-East (3 steps) considering that it meets the requirements of flat ground in the desired direction, and it brings the player closer to the crafting table. ============Step: 191, Cumulative Reward: 0.0============ You took action move_south. You see: - stone 4 steps to your south-east - path 2 steps to your north-east 291 - tree 4 steps to your south-east - table 2 steps to your south-east - zombie 3 steps to your north You face grass at your front (south). Your status: - health: 9/9 - food: 3/9 - drink: 1/9 - energy: 7/9 Your inventory: - wood: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move West Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone as a resource, requires wood pickaxe or better to collect. 2. Path: No resource provided, requires no requirement. 3. Tree: Provides wood as a resource, requires wood pickaxe or better to collect. 4. Table: Provides a crafting surface, requires wood to craft and place. 5. Zombie: Provides experience or loot (if the game supports it), requires a weapon (wood, stone, or iron sword) to defeat. 6. Grass: No resource provided, requires no requirement. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_south. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Yes, the requirements for interaction are met since the player has a wood_pickaxe and a stone_pickaxe in their inventory. 2. Path: Yes, the requirements for interaction are met as there are no specific requirements needed to interact with a path. 3. Tree: Yes, the requirements for interaction are met since the player has a wood_pickaxe and a stone_pickaxe in their inventory. 4. Table: Yes, the requirements for interaction are met since the table is already placed and available for crafting. The player also has wood in their inventory which can be used for crafting. 5. Zombie: Yes, the requirements for interaction are met, as the player can use the wood_pickaxe or stone_pickaxe currently in their inventory to defend themselves or craft a weapon to defeat the zombie. 6. Grass: Yes, the requirements for interaction are met as there are no specific requirements needed to interact with grass. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Increase Drink level: Priority 5. The player‚Äôs drink level is currently at 1/9, which is critically low. They should locate a water source, such as a lake, and interact with it to replenish their drink level. 2. Increase Food level: Priority 4. The player‚Äôs food level is at 3/9, which is low. They should focus on finding a source of food, like animals to hunt or plants to gather, to increase their food level. 3. Defend against the Zombie: Priority 3. There is a zombie 3 steps to the north, posing a potential threat. The player should prepare to defend themselves by crafting a weapon or using their current tools, like the wood_pickaxe or stone_pickaxe, to attack the zombie if necessary. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Requirements for the top sub-task (Increase Drink level): 1. Find a water source such as a lake, river, or well. 2. Interact with the water source to drink and replenish the drink level. What should the player do first: The player should first try to locate a water source nearby, like a lake or river, by exploring the area around them. They should move in a direction where they might find a water source or remember seeing one in previous steps of the game. Once they have found a water source, they should interact with it to drink and increase their drink level. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move West (Requirement: Flat ground left to the agent) - As the player faces grass at their front, moving west brings them closer to the grass, which can help them find a nearby water source. 2. Priority 2: Move North (Requirement: Flat ground above the agent) - Moving north will help the player avoid the zombie and possibly come across water or other resources. 3. Priority 3: Move East (Requirement: Flat ground right to the agent) - If moving west or north doesn‚Äôt provide any water source or if the player wants to explore further in search of water, moving east is the next option. 4. Priority 4: Move South (Requirement: Flat ground below the agent) - Moving south might provide the player with more exploration options; however, it will bring them closer to the zombie, which increases the risk. 292 5. Priority 5: Do (Facing creature or material; have necessary tool) - While searching for a water source, the player can interact with materials or creatures they come across, such as mining stone, cutting wood, or fighting monsters. But only if they have the necessary tool and health/energy to perform the action. Question: For each action in the list, are the requirements met? Answer: Based on the player‚Äôs current observations and status: 1. Priority 1: Move West: Yes, the requirement is met as there is flat ground (path) to the player‚Äôs left (west). 2. Priority 2: Move North: Yes, the requirement is met as there is flat ground (path) above the player (north). 3. Priority 3: Move East: Yes, the requirement is met as there is flat ground (path) to the player‚Äôs right (east). 4. Priority 4: Move South: Yes, the requirement is met as there is flat ground (grass) below the player (south). 5. Priority 5: Do: This action requires more context, as it depends on the material or creature the player is facing and the necessary tool they possess. Currently, the player has a wood_pickaxe and a stone_pickaxe in their inventory. If the action involves mining stone or cutting wood, the player meets the requirements. However, if the action involves combat with the zombie, the player does not have a sword and may need to craft one first. Question: Did the last player action succeed? Why? Answer: Yes, the last player action move_south succeeded because the player was able to face grass at their front (south) without any obstacles or restrictions in their way. Question: Choose the best executable action from above. Answer: The best executable action from the list, considering the player‚Äôs current situation, would be Priority 1: Move West. This action meets the requirement of flat ground left to the agent, and it brings the player closer to the grass, which can potentially help them find a nearby water source. ============Step: 192, Cumulative Reward: 0.0============ You took action move_west. You see: - stone 5 steps to your south-east - path 3 steps to your north-east - tree 5 steps to your south-east - table 3 steps to your south-east - cow 5 steps to your south-west - zombie 3 steps to your north-east You face grass at your front (west). Your status: - health: 9/9 - food: 2/9 - drink: 1/9 - energy: 7/9 Your inventory: - wood: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move East Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone - Provides: Stone resource; Requirement: Stone pickaxe to collect. 2. Path - Provides: Easier navigation; Requirement: None. 3. Tree - Provides: Wood resource; Requirement: Wood pickaxe to collect. 4. Table - Provides: Crafting station; Requirement: None, place with wood in inventory. 5. Cow - Provides: Food (meat) when defeated; Requirement: Attack with a weapon or tool (e.g., sword, pickaxe). 6. Zombie - Provides: Defense against monsters (use weapons or tools to defeat); Requirement: A weapon or tool (e.g., sword, pickaxe) to defeat the zombie. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_west. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone - Yes, the requirements are met, as you have a stone_pickaxe in your inventory. 2. Path - Yes, there are no requirements to interact with the path. 3. Tree - Yes, the requirements are met, as you have a wood_pickaxe in your inventory. 4. Table - Yes, there are no requirements to interact with the placed table. 5. Cow - Yes, the requirements are met, as you can use the wood_pickaxe or stone_pickaxe in your inventory to attack the cow. 6. Zombie - Yes, the requirements are met, as you can use the wood_pickaxe or stone_pickaxe in your inventory to defeat the zombie. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 293 1. Priority 5/5: Collect Drink - Your current drink level is 1/9, which is low. So, find a lake or water source and drink from it to restore your thirst. 2. Priority 4/5: Eat Cow - Your food level is 2/9, which is quite low, and there‚Äôs a cow nearby. Attack and eat the cow to restore your food supply. 3. Priority 3/5: Defeat Zombie - There‚Äôs a zombie nearby that poses a threat. Equip a weapon or tool (wood_pickaxe or stone_pickaxe) to defeat the zombie and ensure your safety. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Requirements for the top sub-task (Collect Drink): - Locate a water source (like a lake or river) What the player should do first: Move towards a water source, which can be done by exploring the surroundings, and take note of the directions of lakes or rivers. Once at the water source, the player should interact with it to collect the drink and restore their thirst level. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move East (Move towards the water source to collect drink) Requirement: Flat ground right (east) of the agent. 2. Priority 2: Move South (Also move towards the water source to collect drink) Requirement: Flat ground below (south) of the agent. 3. Priority 3: Do (interact with the water source for collecting drink) Requirement: Facing the water source (lake or river). 4. Priority 4: Move towards the cow (Move East or South based on the cow‚Äôs location) Requirement: Flat ground in the direction of the cow (east or south) for moving. 5. Priority 5: Do (Interact with the cow to acquire food) Requirement: Facing the cow; possibly have a weapon (like a stone or iron sword) to defeat the cow and acquire food. Question: For each action in the list, are the requirements met? Answer: 1. Move East: Requirement: Flat ground right (east) of the agent. Status: Requirement met (player can move east) 2. Move South: Requirement: Flat ground below (south) of the agent. Status: Requirement met (player can move south) 3. Do (interact with the water source for collecting drink): Requirement: Facing the water source (lake or river). Status: Requirement not met (player currently does not see a water source) 4. Move towards the cow (Move East or South based on the cow‚Äôs location): Requirement: Flat ground in the direction of the cow (east or south) for moving. Status: Requirement met (player can move east or south in the direction of the cow) 5. Do (Interact with the cow to acquire food): Requirement: Facing the cow; possibly have a weapon (like a stone or iron sword) to defeat the cow and acquire food. Status: Requirement not met (player is not facing the cow and lacks a proper weapon) Question: Did the last player action succeed? Why? Answer: Yes, the last player action (move_west) succeeded because there was flat ground (grass) in the direction the player was moving (west), allowing the player to move without any obstruction. Question: Choose the best executable action from above. Answer: The best executable action from the list above is to Move East, as the requirement for flat ground right (east) of the agent is met. This action will also help the player move towards the water source and cow. ============Step: 193, Cumulative Reward: -0.2============ You took action move_east. You see: - stone 4 steps to your south-east - path 2 steps to your north-east - tree 4 steps to your south-east - table 2 steps to your south-east - zombie 1 steps to your north You face grass at your front (east). Your status: - health: 7/9 - food: 2/9 - drink: 1/9 - energy: 7/9 Your inventory: - wood: 1 - coal: 2 294 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move West Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone resource; requires a wood pickaxe or better to collect. 2. Path: Provides ease of movement; no requirements to interact. 3. Tree: Provides wood resource; no specific requirement to collect. 4. Table: Allows crafting of tools and weapons; requires wood to make. 5. Zombie: A potential threat; combat may be required; requires a weapon to defeat. 6. Grass: A basic terrain; no specific resources or requirements. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_east. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Yes, the requirements are met as you have a wood_pickaxe and a stone_pickaxe in your inventory. 2. Path: Yes, there are no requirements to interact with a path. 3. Tree: Yes, there are no specific requirements to collect wood from a tree. 4. Table: Yes, the requirements are met; you have wood in your inventory to make a table. 5. Zombie: Yes, you can interact with the zombie using a weapon, although you only have a wood_pickaxe and a stone_pickaxe as potential weapons. Crafting a suitable weapon, like a wood sword or stone sword, would be more effective. 6. Grass: Yes, there are no specific requirements to interact with grass. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Increase Food and Drink levels (Priority: 5/5) - To ensure survival, prioritize finding a source of food (e.g., hunting the nearby cow) and drink (e.g., locating a lake or river to drink from). 2. Craft a suitable weapon (Priority: 4/5) - Crafting a wood sword or a stone sword will help you defend yourself more effectively against the zombie and other potential threats. 3. Collect more resources (Priority: 3/5) - Continue collecting wood, stone, and iron to craft better tools and weapons, and progress further in the game. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Requirements for increasing Food and Drink levels: 1. Find sources of food and drink - Locate a lake, river, or other water source to drink from and locate animals, plants, or other food sources. 2. Craft required tools or weapons (if necessary) - For hunting animals, such as the nearby cow, you might need to craft a weapon like a wood or stone sword. For gathering fruits or plants, you might need to craft tools like a sickle or a hoe. The player should first focus on finding a water source to increase their drink level, as it is at 1/9. They should also be prepared to hunt the nearby cow to increase their food level, which is at 2/9. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move to a water source - Requirement: Locate a lake, river, or other water source nearby to increase the drink level. (Move North, South, East, or West based on observations) 2. Priority 2: Drink from the water source - Requirement: Be adjacent to a water source (Collect Drink) 3. Priority 3: Craft a weapon to hunt animals for food - Requirement: Have sufficient materials (wood or stone) and be near a crafting table. (Make Wood Sword, Make Stone Sword according to existing inventory) 4. Priority 4: Move closer to the cow - Requirement: Locate the cow and move in the appropriate direction to get closer to it. (Move North, South, East, or West) 5. Priority 5: Hunt the cow - Requirement: Be adjacent to the cow and have a weapon ready for use. (Do or Eat Cow, depending on the context provided by the game) Question: For each action in the list, are the requirements met? Answer: 1. Move to a water source: The player has not currently observed a water source nearby, so this requirement is not met. 2. Drink from the water source: As there is no water source observed, this requirement is not met. 3. Craft a weapon to hunt animals for food: The player has already crafted a wood_pickaxe and a stone_pickaxe. Although not ideal weapons, they can potentially be used as weapons. The player can also use nearby wood from their inventory to craft a wood sword if they go to a crafting table. So, this requirement is partially met. 4. Move closer to the cow: The player observed a cow 5 steps to the south-west. The player can move west or south to get closer to the cow. This requirement is met. 5. Hunt the cow: Since the player is not adjacent to the cow and needs to move closer to it, the requirement for this action is not currently met. Question: Did the last player action succeed? Why? Answer: 295 Yes, the last player action succeeded. The player was able to move east because there was flat ground (grass) in front of the player in the east direction, allowing them to move in that direction. Question: Choose the best executable action from above. Answer: The best executable action from the list above is to move closer to the cow. The player can move west or south to get closer to the cow since it is observed 5 steps to the south-west. ============Step: 194, Cumulative Reward: 0.0============ You took action move_west. You see: - stone 5 steps to your south-east - path 3 steps to your north-east - tree 5 steps to your south-east - table 3 steps to your south-east - cow 5 steps to your south-west - zombie 1 steps to your north You face grass at your front (west). Your status: - health: 7/9 - food: 2/9 - drink: 1/9 - energy: 7/9 Your inventory: - wood: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move West Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone resources; requires a wood_pickaxe or better to collect. 2. Path: Provides easier movement; no requirements for interaction. 3. Tree: Provides wood resources; requires a wood_pickaxe or better to collect. 4. Table: Provides the ability to craft items; requires wood to craft and place. 5. Cow: Provides food when defeated; no requirements for interaction. 6. Zombie: Must be defeated to avoid losing health; requires a weapon, such as a wood_sword or better, for effective combat. 7. Grass: Basic terrain element; no specific resources provided or interaction requirements. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_west. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Yes, the requirements are met for interaction, as you have a wood_pickaxe and a stone_pickaxe in your inventory. 2. Path: Yes, the requirements are met for interaction, as there are no specific requirements for interacting with a path. 3. Tree: Yes, the requirements are met for interaction, as you have a wood_pickaxe in your inventory. 4. Table: Yes, the requirements are met for interaction, as you have wood in your inventory. 5. Cow: Yes, the requirements are met for interaction, as there are no specific requirements for interacting with a cow. 6. Zombie: Technically, the requirements for interaction can be met without a weapon, but it is not advisable to engage in combat without one. Unfortunately, you do not currently have a weapon in your inventory. 7. Grass: Yes, the requirements are met for interaction, as there are no specific requirements for interacting with grass. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Find a water source to drink and restore thirst. Priority: 5/5 2. Craft a weapon (wood_sword or better) to defend against the zombie and other potential threats. Priority: 4/5 3. Collect more resources, such as wood and stone, to prepare for crafting and building better tools and items. Priority: 3/5 Question: What are the requirements for the top sub-task? What should the player do first? Answer: Requirements for the top sub-task (Find a water source to drink and restore thirst): 1. Locate a water source such as a lake or a river. 2. Approach the water source. The player should first attempt to locate water in their area or nearby by exploring the environment around them. Once the player finds a water source, they should move towards it to drink and restore their thirst levels. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move West (Move closer to the cow visible 5 steps to the south-west) - Requirement: Flat ground left to the agent. 2. Priority 2: Move South (Move towards the cow and eventually kill it for food) - Requirement: Flat ground below the agent. 3. Priority 3: Move East (Locate a water source to drink and restore thirst) - Requirement: Flat ground right to the agent. 4. Priority 4: Make Iron Sword (Craft an Iron Sword to defend against monsters) - Requirements: Nearby table, furnace; wood, coal, iron in inventory. 5. Priority 5: Sleep (Restore energy levels once safe from potential threats) - Requirement: Energy level is below maximum. 296 Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Move West - Yes, the requirements are met. The player has flat ground to their left (west) to move. 2. Priority 2: Move South - Not currently met, since the player needs to move west first to approach the cow. After moving west, the requirement of flat ground below the agent (south) will likely be met. 3. Priority 3: Move East - Yes, the requirements are met. The player has flat ground to their right (east) to move. 4. Priority 4: Make Iron Sword - No, the requirements are partially met. The player is not currently near a table and furnace, and they only have 1 iron instead of the required 2. The player needs to find another iron ore and place a furnace near the table before they can craft an iron sword. 5. Priority 5: Sleep - Yes, the requirements are met. The player‚Äôs energy level is below maximum (7/9). However, the player should find a safe location before attempting to sleep. Question: Did the last player action succeed? Why? Answer: Yes, the last player action move_west succeeded because there was flat ground (grass) in the direction the player wanted to move (west), and there were no obstacles or barriers preventing the movement. Question: Choose the best executable action from above. Answer: The best executable action from the list above is Priority 1: Move West. The requirements are met, as the player has flat ground to their left (west) to move, and it brings them closer to the cow, which will provide food upon killing. ============Step: 195, Cumulative Reward: 0.0============ You took action move_west. You see: - stone 6 steps to your south-east - path 4 steps to your north-east - tree 5 steps to your north-west - table 4 steps to your south-east - cow 4 steps to your south-west - zombie 1 steps to your east You face grass at your front (west). Your status: - health: 7/9 - food: 2/9 - drink: 1/9 - energy: 7/9 Your inventory: - wood: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move East Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone for crafting tools and building. Requirement: Use a wood or stone pickaxe to collect. 2. Path: Provides easy movement and navigation. Requirement: None. 3. Tree: Provides wood for crafting and building. Requirement: Use an ax or pickaxe to collect. 4. Table: Provides a surface for crafting tools and weapons. Requirement: Place using wood from inventory. 5. Cow: Provides food to restore health. Requirement: Chase and catch to consume. 6. Zombie: Poses a threat to health and safety; defeat it to clear the area. Requirement: Use a sword or other weapons to defeat. 7. Grass: Can be collected to create paths, animal feed, or other crafting materials. Requirement: None. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_west. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Yes, you have a wood_pickaxe and a stone_pickaxe in your inventory for collecting stone. 2. Path: Yes, no specific requirements needed to interact with the path. 3. Tree: No, you don‚Äôt have an ax in your inventory to collect wood. However, you can still use the wood_pickaxe or stone_pickaxe as an alternative. 4. Table: Yes, you already have wood in your inventory, so you can place a table if needed. 5. Cow: Yes, you can interact with the cow by chasing it and catching it to consume it as food. 6. Zombie: No, you don‚Äôt have a sword in your inventory to defeat the zombie. You can still attempt to defeat it using other methods, like running away or using a pickaxe, but it may be less effective. 7. Grass: Yes, there are no specific requirements to interact with grass. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Restore drink meter (Priority: 5/5): Since the drink meter is 1/9, it is essential to find water to drink from a lake or river to avoid dehydration. 297 2. Fight or avoid the zombie (Priority: 4/5): The zombie is only one step away, so either defeat the zombie using a pickaxe (as a sword is not available) or try to avoid it by moving in a different direction. 3. Restore food meter (Priority: 4/5): The food meter is at 2/9, so catching and consuming the cow, which is four steps to the south-west, will help to restore the food meter and maintain health. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Top sub-task: Restore drink meter (Priority: 5/5) Requirements: - Find a source of water (lake, river, or pond) What should the player do first: 1. Look for nearby water sources shown in the observations (e.g., a lake, river, or pond). 2. Move towards the water source by navigating accordingly (north, south, east, or west). 3. Once adjacent to the water source, take a drink action to replenish the drink meter. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Action: Move East (Priority: 5/5) Requirement: Flat ground right to the agent Reason: To move away from the zombie and head towards the table 2. Action: Drink (Priority: 5/5) Requirement: Be adjacent to a water source (lake, river, or pond) Reason: To replenish the drink meter 3. Action: Move towards the cow (Priority: 4/5) Requirement: Flat ground in the direction of the cow Reason: To eat cow and restore food meter 4. Action: Make Iron Sword (Priority: 3/5) Requirement: Nearby table, furnace; wood, coal, iron in the inventory Reason: To create a stronger weapon for defeating zombies and skeletons in the future 5. Action: Make Iron Pickaxe (Priority: 2/5) Requirement: Nearby table, furnace; wood, coal, iron in the inventory Reason: To upgrade the pickaxe and collect diamond in the future Question: For each action in the list, are the requirements met? Answer: 1. Action: Move East Requirement: Flat ground right to the agent Are the requirements met? Yes, there is flat ground to the east of the agent. 2. Action: Drink Requirement: Be adjacent to a water source (lake, river, or pond) Are the requirements met? No, there is no water source mentioned in the current observation. 3. Action: Move towards the cow Requirement: Flat ground in the direction of the cow Are the requirements met? Yes, there is flat ground between the agent and the cow. 4. Action: Make Iron Sword Requirement: Nearby table, furnace; wood, coal, iron in the inventory Are the requirements met? No, there is no furnace mentioned in the current observation. 5. Action: Make Iron Pickaxe Requirement: Nearby table, furnace; wood, coal, iron in the inventory Are the requirements met? No, there is no furnace mentioned in the current observation. Question: Did the last player action succeed? Why? Answer: Yes, the last player action (move_west) succeeded. The player was able to move one step to the west because there was flat ground (grass) in that direction, allowing the player to move without any obstacles. Question: Choose the best executable action from above. Answer: The best executable action from the above list is: Action: Move East Requirement: Flat ground right to the agent This action allows the player to move away from the zombie and head towards the table while having the requirement met with flat ground to the east of the agent. ============Step: 196, Cumulative Reward: 0.0============ You took action move_east. You see: - grass 1 steps to your west - stone 6 steps to your south-east - path 4 steps to your north-east - tree 5 steps to your north-west - table 4 steps to your south-east - cow 3 steps to your south-west You face zombie at your front (east). 298 Your status: - health: 7/9 - food: 2/9 - drink: 1/9 - energy: 7/9 Your inventory: - wood: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Do Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass (west): Provides no specific resource, can be traversed. 2. Stone (south-east): Provides stone resource when mined with a wood or stone pickaxe. 3. Path (north-east): Provides easier movement, no specific resource. 4. Tree (north-west): Provides wood resource when chopped with an axe or a pickaxe. 5. Table (south-east): Allows crafting of various tools and weapons when nearby; requires wood to craft. 6. Cow (south-west): Can be interacted with to obtain food (Eat Cow) to restore the player‚Äôs health; requires no specific tool to interact. 7. Zombie (east): A hostile creature that should be defeated to survive; can be attacked using a wood, stone, or iron sword. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_east. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass (west): Yes, the requirements are met for interaction as you can simply move onto the grass or traverse it without any specific tool or resource. 2. Stone (south-east): Yes, the requirements are met for interaction because you have a wood_pickaxe and stone_pickaxe in your inventory, which can be used to mine the stone. 3. Path (north-east): Yes, the requirements are met for interaction as you can move onto the path without any specific resources or tools. 4. Tree (north-west): Yes, the requirements are met for interaction as you have a wood_pickaxe and stone_pickaxe in your inventory, which can be used to chop the tree and collect wood. 5. Table (south-east): Yes, the requirements are met for interaction as it only requires being nearby and you have wood in your inventory to craft tools and weapons. 6. Cow (south-west): Yes, the requirements are met for interaction as you can interact with the cow to obtain food (Eat Cow) without any specific tools. 7. Zombie (east): Yes, the requirements are met for interaction but since your health is low (7/9), it would be a bit risky. You may use the wood_pickaxe, stone_pickaxe, or craft a wood or stone sword to engage in combat with the zombie. However, it is recommended to restore your health first before engaging the zombie. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Prioritize finding a source of drink to restore thirst (Priority: 5/5): Your current thirst level is at 1/9, which is critically low. Locate a lake or river to drink from and rehydrate. 2. Obtain and consume food to restore health (Priority: 4/5): Your current health level is at 7/9, and food level is at 2/9. You can interact with the nearby cow (south-west) to obtain food (Eat Cow) and improve your health and food levels. 3. Defeat the zombie to ensure safety (Priority: 3/5): With a zombie close by (east), your safety is at risk. Craft a wood or stone sword using the table (south-east), or use your pickaxes to engage in combat with the zombie. However, replenishing your health and thirst should be prioritized first to increase the chances of survival during the fight. Question: What are the requirements for the top sub-task? What should the player do first? Answer: For the top sub-task of finding a source of drink to restore thirst: Requirements: 1. Locate a water source like a lake or river. What the player should do first: 1. Explore your surroundings by moving in different directions (north, south, east, or west) to find a water source. Keep an eye out for any lakes or rivers in your vicinity. Once you locate a water source, move towards it and replenish your thirst (Collect Drink). Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: Priority 1: Move West, East, North or South - Requirement: Flat ground in the direction of movement. Purpose: Move towards a water source to replenish thirst. Priority 2: Collect Drink - Requirement: Near a water source (like a lake or river). Purpose: Restore thirst level. Priority 3: Move West, East, North or South - Requirement: Flat ground in the direction of movement. 299 Purpose: Move towards a cow to refuel food supply. Priority 4: Defeat Zombie - Requirement: Facing the zombie. Purpose: To protect yourself and avoid taking damage. Priority 5: Place Table - Requirement: Wood in inventory. Purpose: To craft additional tools and weapons. Question: For each action in the list, are the requirements met? Answer: For the provided list of top 5 actions: Priority 1: Move West, East, North or South - Requirement: Flat ground in the direction of movement. Yes, the requirements are met. You can move West, East, North, or South as long as there‚Äôs flat ground in the direction you intend to move. In the current observation, flat ground is available in the West direction where you faced grass in step 390, and other directions might also have flat ground. Priority 2: Collect Drink - Requirement: Near a water source (like a lake or river). No, the requirements are not met. In the current observation, no water source is mentioned in your surroundings. Priority 3: Move West, East, North or South - Requirement: Flat ground in the direction of movement. Yes, the requirements are met. Similar to Priority 1, you can move in any direction as long as there‚Äôs flat ground. To approach the cow, you can move South or West, as the cow is 3 steps to your South-West. Priority 4: Defeat Zombie - Requirement: Facing the zombie. Yes, the requirements are met. You are currently facing a zombie in the East direction, as per step 392. Priority 5: Place Table - Requirement: Wood in inventory. Yes, the requirements are met. You have 1 wood in your inventory, which is enough to place a table. Question: Did the last player action succeed? Why? Answer: Yes, the last player action, move_east, succeeded. The action succeeded because there were no obstacles or restrictions preventing the player from moving east. After moving east, the player now faces a zombie at the front (east). Question: Choose the best executable action from above. Answer: The best executable action from the list above is Priority 4: Defeat Zombie, as it has a direct impact on your survival, and its requirement of facing the zombie is currently met. ============Step: 197, Cumulative Reward: 0.0============ You took action do. You see: - grass 1 steps to your west - stone 6 steps to your south-east - path 4 steps to your north-east - tree 5 steps to your north-west - table 4 steps to your south-east - cow 2 steps to your south-west You face zombie at your front (east). Your status: - health: 7/9 - food: 2/9 - drink: 1/9 - energy: 7/9 Your inventory: - wood: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Do Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Grass: Provides a flat surface to move on. No special requirements. 2. Stone: Can be mined to gather resources. Requires a pickaxe for successful mining. 3. Path: Provides a flat surface to move on. No special requirements. 4. Tree: Can be chopped down to gather wood. Requires an axe for successful chopping. 5. Table: Enables crafting recipes. Requires wood to be placed. 6. Cow: Provides food when defeated. No special requirements. 7. Zombie: Must be defeated to avoid losing health. Requires weapons for efficient combat. Question: What was the last action taken by the player? Answer: The last action taken by the player was do. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Grass: Yes, the requirements for interaction are met, as you can move on the flat surface. 2. Stone: Yes, the requirements for interaction are met, as you have a wood_pickaxe or stone_pickaxe in your inventory. 3. Path: Yes, the requirements for interaction are met, as you can move on the flat surface. 300 4. Tree: No, the requirements for interaction are not met, as you need an axe to chop down the tree, but you do not have one in your inventory. 5. Table: Yes, the requirements for interaction are met, as you have wood in your inventory. 6. Cow: Yes, the requirements for interaction are met, as you can interact with the cow without any special requirements. 7. Zombie: Yes, the requirements for interaction are met, as you have a wood_pickaxe in your inventory that can be used as a makeshift weapon. However, having a sword would be more efficient. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Priority 5: Defeat the zombie to protect your health. Use your wood_pickaxe as a makeshift weapon or craft a sword if possible (wood_sword requires a nearby table and wood in the inventory). 2. Priority 4: Collect food by defeating the cow to replenish the food meter, as it‚Äôs currently at 2/9. 3. Priority 3: Find a source of water or drink to restore your thirst level, which is currently at 1/9. Drink from a lake or collect water in a container, if available. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Requirements for the top sub-task (Defeat the zombie): 1. A weapon or makeshift weapon, such as a wood_pickaxe, wood_sword, stone_sword or iron_sword. In the player‚Äôs current inventory, they already have a wood_pickaxe, which can be used as a makeshift weapon. What should the player do first: 1. Equip the wood_pickaxe if not equipped already (since it‚Äôs in the inventory). 2. Face the zombie directly. 3. Attack the zombie with the equipped wood_pickaxe to defeat it, and protect your health. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: Top 5 actions the player should take with their priority: Priority 1 (Highest): Action: Do (Attack the Zombie) Requirements: Face the zombie directly, have wood_pickaxe or other weapon equipped (the player has wood_pickaxe in the inventory) Priority 2: Action: Move South Requirements: Flat ground below the agent. (to get closer to the cow for food) Priority 3: Action: Do (Chase the cow) Requirements: Facing the cow directly, once closer to the cow, chase it to increase food. Priority 4: Action: Collect Drink Requirements: Find a lake or water source to restore thirst. Priority 5: Action: Sleep Requirements: Energy level is below maximum (Player‚Äôs energy is currently 7/9, so they will need to rest at some point) Note: The priorities above should be addressed based on the player‚Äôs current needs, focusing on health, food, drink, and energy management. Question: For each action in the list, are the requirements met? Answer: For each action in the list, let‚Äôs check if the requirements are met based on the latest player observation: Priority 1 (Highest): Action: Do (Attack the Zombie) Requirements: Face the zombie directly, have wood_pickaxe or other weapon equipped. Requirements Met: Yes (Player faces the zombie directly and has a wood_pickaxe) Priority 2: Action: Move South Requirements: Flat ground below the agent. Requirements Met: Cannot confirm based on the observations provided. The southern terrain is not mentioned, so it is unclear if there is flat ground below the agent. Priority 3: Action: Do (Chase the cow) Requirements: Facing the cow directly, once closer to the cow, chase it to increase food. Requirements Met: Not yet. The player should move closer to the cow by moving south first (if flat ground is available), then face the cow directly and chase it. Priority 4: Action: Collect Drink Requirements: Find a lake or water source to restore thirst. Requirements Met: No. There is no mention of a water source in the player‚Äôs observations. The player needs to find a lake or water source to drink from. Priority 5: Action: Sleep Requirements: Energy level is below maximum. Requirements Met: Yes, the player‚Äôs energy is 7/9, so they would be able to sleep when necessary. Question: Did the last player action succeed? Why? Answer: 301 It is unclear whether the last player action do succeeded or not, as there is no noticeable change in the player‚Äôs status or environment between the two observations. It could have been an unsuccessful attempt or an action that had no significant impact. Question: Choose the best executable action from above. Answer: The best executable action from the list above is: Priority 1 (Highest): Action: Do (Attack the Zombie) Requirements: Face the zombie directly, have wood_pickaxe or other weapon equipped. Requirements Met: Yes (Player faces the zombie directly and has a wood_pickaxe) ============Step: 198, Cumulative Reward: 0.0============ You took action do. You see: - stone 6 steps to your south-east - path 4 steps to your north-east - tree 5 steps to your north-west - table 4 steps to your south-east - cow 3 steps to your south-west - zombie 2 steps to your south-east You face grass at your front (east). Your status: - health: 7/9 - food: 2/9 - drink: 1/9 - energy: 7/9 Your inventory: - wood: 1 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move West Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: - Stone: Provides stone as a resource, required for crafting stone tools and weapons, as well as a furnace. Requires a wood pickaxe to collect. - Path: This is a navigational feature and does not directly provide a resource. - Tree: Provides wood as a resource, required for crafting wooden items and building structures. Requires no specific tool to collect but using an axe would make the process faster. - Table: Provides a crafting station for creating tools and weapons. Requires wood to create and place. - Cow: Provides food when defeated. Requires no specific tool to defeat, but using a weapon, like a sword, will make the process faster. - Zombie: This enemy could potentially drop items and resources when defeated, such as rotten flesh which can be used as a low-quality food source. Can be defeated with any weapon but using a sword would be more effective. - Grass: Generally doesn‚Äôt provide a resource directly but sometimes can drop seeds for planting crops when broken. Requires no specific tool to collect. Question: What was the last action taken by the player? Answer: The last action taken by the player was do. Question: For each object in the list, are the requirements met for interaction? Answer: - Stone: Yes, the requirements are met for interaction, as the player has a wood_pickaxe in their inventory. - Path: There are no requirements for interacting with the path since it‚Äôs a navigational feature. - Tree: Yes, the requirements are met for interaction. Although the player doesn‚Äôt have an axe, they can still gather wood without a specific tool. - Table: The player can interact with the table to craft items since the table is already placed. - Cow: Yes, the requirements are met for interaction. The player can attempt to defeat the cow even without a weapon, although a weapon would make the process quicker. - Zombie: Yes, the requirements are met for interaction. The player can attempt to defeat the zombie even without a weapon, although a weapon like a sword would be more effective. - Grass: Yes, the requirements are met for interaction, as there is no specific tool needed to collect grass. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Quench thirst (Priority: 5): The player has a drink level of 1/9, so finding water to drink is essential. Look for a water source, like a lake, and drink from it. 2. Increase food level (Priority: 4.5): The player has a food level of 2/9. There are cows nearby which can be defeated to obtain food, or they can look for other sources like plants. 3. Avoid or Defeat Zombie (Priority: 4): A zombie is two steps to the south-east, posing a potential threat. The player can either avoid the zombie by moving away or engage and try to defeat it using the available tools. Question: What are the requirements for the top sub-task? What should the player do first? Answer: Top sub-task: Quench thirst (Priority: 5) 302 Requirements: 1. Locate a water source (e.g. lake, river) within the game. 2. Move towards the water source. 3. Interact with the water source to drink water. First, the player should look around the environment to spot a water source. Once found, move towards it and then interact with it to drink water and increase the drink level. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Action: Move West (Priority: 4) Requirement: Flat ground left to the agent. Reason: There is grass 1 step to the west, which might lead the player to find water. 2. Action: Move East (Priority: 1) Requirement: Flat ground right to the agent. Reason: The player is currently facing grass to the east, but it didn‚Äôt mention any water sources nearby. 3. Action: Move South (Priority: 3) Requirement: Flat ground below the agent. Reason: Moving south puts the player closer to both the cow and more visible game elements, potentially increasing chances of finding water. 4. Action: Do (Priority: 2) Requirement: Facing creature or material; have necessary tool. Reason: This action is useful for interacting with the environment, either to collect resources, craft items or fight creatures. However, as the player is currently facing grass without any tool, its priority is lower at the moment. 5. Action: Sleep (Priority: 5) Requirement: Energy level is below maximum. Reason: The player‚Äôs energy level is not full, but still at 7/9. Though not urgent, sleeping would restore energy and make it easier to perform other actions in the future. Question: For each action in the list, are the requirements met? Answer: 1. Action: Move West Requirement: Flat ground left to the agent. Are requirements met? Yes, there is flat grass 1 step to the west. 2. Action: Move East Requirement: Flat ground right to the agent. Are requirements met? Yes, there is flat grass to the east. 3. Action: Move South Requirement: Flat ground below the agent. Are requirements met? Not specified, as there is no information about the terrain to the south in the provided player observations. 4. Action: Do Requirement: Facing creature or material; have necessary tool. Are requirements met? No, the player is currently facing grass and doesn‚Äôt have a tool specifically for grass in their inventory. 5. Action: Sleep Requirement: Energy level is below maximum. Are requirements met? Yes, the player‚Äôs energy level is at 7/9, which is below the maximum. Question: Did the last player action succeed? Why? Answer: I cannot determine if the last player action succeeded or not, because there is no information about the outcome of the action do. Additionally, the observations at steps 394 and 396 do not provide enough context to judge the success of the action. Question: Choose the best executable action from above. Answer: The best executable action from the list is to Move West, as it fulfills the requirement of having flat ground to the west, and it might lead the player to find water sources. ============Step: 199, Cumulative Reward: 0.0============ You took action move_west. You see: - path 5 steps to your north-east - tree 4 steps to your north-west - table 5 steps to your south-east - cow 2 steps to your south-west - zombie 2 steps to your south-east You face grass at your front (west). Your status: - health: 7/9 - food: 2/9 - drink: 0/9 - energy: 6/9 Your inventory: - wood: 1 303 - coal: 2 - iron: 1 - wood_pickaxe: 1 - stone_pickaxe: 1 ------------ QA ------------ Question: Action Answer: Move East Question: List objects in the current observation. For each object, breifly answer what resource it provides and its requirement. Answer: 1. Stone: Provides stone resource; requires a wood pickaxe or better to collect. 2. Path: No direct resource; provides easier movement and navigation. 3. Tree: Provides wood resource; requires no specific tool to collect, though an axe speeds up the process. 4. Table: Allows crafting of tools and weapons; requires wood to create. 5. Cow: Provides food (meat) when killed; no specific tool requirement, though a weapon like a sword is helpful. 6. Zombie: A dangerous creature to avoid or defeat; no specific tool requirement but a weapon like a sword is helpful. Your status indicators: - Health: Represents how much damage you can take before dying. - Food: Indicates your hunger level; eat food to replenish. - Drink: Indicates your thirst level; drink water to replenish. - Energy: Represents your overall stamina; sleep or rest to replenish. Your inventory items: - Wood: A resource used for crafting and building. - Coal: A resource used for smelting items in a furnace. - Iron: A resource used for crafting higher-tier tools and weapons. - Wood Pickaxe: A tool for collecting stone, coal, and iron. - Stone Pickaxe: A stronger tool for collecting stone, coal, and iron faster. Question: What was the last action taken by the player? Answer: The last action taken by the player was move_west. Question: For each object in the list, are the requirements met for interaction? Answer: 1. Stone: Yes, the requirements are met. You have a wood_pickaxe and a stone_pickaxe in your inventory, which allows you to collect stone. 2. Path: Yes, there are no specific requirements to interact with the path, and it is simply used for easier movement and navigation. 3. Tree: Yes, there are no specific tool requirements to collect wood from the tree, but having an axe would make the process faster. 4. Table: Yes, the requirements are met. You have already placed a table, and you can interact with it to craft tools and weapons as needed. 5. Cow: Yes, you can interact with the cow without any specific requirements. However, having a weapon such as a sword would make it easier to kill the cow for food. 6. Zombie: Yes, you can interact with the zombie without any specific requirements. However, having a weapon such as a sword would make it easier to defend yourself and defeat the zombie. Since your food and drink levels are low, it is crucial to interact with the cow for food and find a water source to drink soon. Also, keep an eye on your energy level and find a safe place to rest when needed. Question: List top 3 sub-tasks the player should follow. Indicate their priority out of 5. Answer: 1. Find a water source and drink to replenish thirst level (Priority: 5/5) - Your thirst level is at 0/9, making it an urgent task to find a water source for drinking and prevent negative effects or death from dehydration. 2. Kill the cow for food and eat to replenish hunger level (Priority: 4/5) - Your food level is at 2/9, which is quite low. Killing the cow and eating the meat would help in restoring your hunger level and maintaining good health. 3. Find a safe place to rest and sleep to replenish energy level (Priority: 3/5) - Your energy level is at 6/9, which is still reasonable but will need replenishing eventually. Finding a safe place to rest will help ensure that you regain your energy without interruptions from potential dangers like monsters. Remember to monitor your health, food, drink, and energy levels throughout the game and to adjust your priorities as needed. Question: What are the requirements for the top sub-task? What should the player do first? Answer: For the top sub-task of finding a water source and drinking to replenish thirst level, the requirements are: 1. Locate a water source such as a lake, river, or pond in the game world. 2. Approach the water source safely, ensuring the path is clear of any monsters or hazards. 3. Interact with the water source to drink and replenish your thirst level. The player should first focus on locating a water source in their vicinity. Since the player‚Äôs current observations do not show any nearby water, they should explore the surrounding area by moving in different directions (north, south, east, or west) and observing their environment for any signs of water sources. Question: List top 5 actions the player should take and the requirement for each action. Choose ONLY from the list of all actions. Indicate their priority out of 5. Answer: 1. Priority 1: Move (Move East/West/North/South): Flat ground in the chosen direction. The player should explore the surroundings to find a water source, as their drink level is very low. 2. Priority 2: Do: Facing water source. The player must drink water to replenish thirst once the water source is located. 3. Priority 3: Do: Facing cow with wood/stone/iron sword (as the player doesn‚Äôt possess a weapon currently). The player needs to defeat the cow for food to replenish their food level. 304 4. Priority 4: Make Wood Sword: Nearby table and wood in inventory. Crafting a wood sword with the wood in the inventory and the table 5 steps south-east will help the player defeat the cow for food. 5. Priority 5: Move closer to the table (Move East/South). Flat ground in the chosen direction. The player needs to approach the table to craft the wood sword. Question: For each action in the list, are the requirements met? Answer: 1. Priority 1: Move (Move East/West/North/South): Yes, the requirements are met. There is flat ground in each direction for the player to move. 2. Priority 2: Do: Facing water source: No, the requirements are not met. The player has not found a water source yet. 3. Priority 3: Do: Facing cow with wood/stone/iron sword: No, the requirements are not met. The player does not have a sword to defeat the cow. 4. Priority 4: Make Wood Sword: Yes, the requirements are met. The player has wood in their inventory, and there is a table nearby (5 steps to the southeast). 5. Priority 5: Move closer to the table (Move East/South): Yes, the requirements are met. There is flat ground in each direction for the player to approach the table. Question: Did the last player action succeed? Why? Answer: Yes, the last player action (move_west) succeeded because there was flat ground (grass) to the west, allowing the player to move in that direction. Question: Choose the best executable action from above. Answer: The best executable action from above is Priority 1: Move (Move East/West/North/South). The player should explore the surroundings to find a water source, as their drink level is very low, and the requirements for this action are met. 305","cs.AI, cs.LG",Arxiv
13,Designing an AI-Based Adaptive Controller Augmented with a System Identifier for a Micro-Class Robot Equipped with a Vibrating Actuator,"AmirReza BabaAhmadi, Nima Naseri",2022-04-18 19:55:22+00:00,http://arxiv.org/pdf/2204.08541v1,"In this paper, an adaptive control scheme based on using neural networks is designed to guarantee the desired behavior of a micro-robot which is equipped with vibrating actuators and follows the principle of slip-stick movement. There are two tiny shaking motors which have been utilized to run the micro-class robotic system. Dynamic modeling equations are expressed by considering the spring coefficient of the bases. After that, the effect of the spring on the foundations was investigated. In addition to designing neural-based controller, an AI-based system identifier has been developed to help the controller update its parameters and achieve its desired targets. Using this method, several specific paths for the movement of this micro robot are simulated. Based on the simulation results, the proposed controlling strategy guarantees acceptable performance for tracking different paths due to plotted near-zero errors and handles the nonlinear behavior of the micro-robot system.","Designing an AI -Based Adaptive Controller Augmented  with  a System Identifier for a Micro -Class Robot Equipped  with  a Vibrating Actuator     *AmiReza BabaAhmadi   Affiliation: School of Mechanical Engineering, College of Engineering, University of Tehran, Tehran, Iran   Babaahmadi.amir@ut.ac.ir   Nima Naseri   Affiliation:  Department of Mechanical Engineering,  Sharif University of Technology,  Tehran,  Iran    Abstract   In this paper, an adaptive control scheme based on using neural networks is d esigned to guarantee  the desired behavior of a micro -robot which is equipped with vibrating actuators and follows the  principle of slip -stick movement. There are two tiny shaking motors which have been utilized to  run the micro -class robotic system. Dynami c modeling equations are expressed by considering the  spring coefficient of the bases. After that, the effect of the spring on the foundations was  investigated. In addition to designing neural -based controller,  an AI -based system identifier has  been developed to help the controller update its parameters and achieve its desired targets. Using  this method, several specific paths for the movement of this micro robot are simulated. Based on  the simulation results, t he proposed controlling strategy guarantees acceptable performance for  tracking different paths  due to plotted near -zero errors and handles the nonlinear behavior of the  micro -robot system.   Keywords : Intelligent Control, Micro Robot, Vibrating Actuator, Sy stem Identification, Neural  Network Control   1- Introduction   Microrobots are widely used in a variety of applications due to their remarkable capabilities such  as precision, reliability, and superior performance when compared to human abilities.  in [1], a  simulation of an ABB IRB120 industrial robot has been performed , and s everal  methods for  deriving linear and nonlinear equations for this robot has been discussed. Another publication  examined the application of reinforcement learning to a sim ple multi -body system  [2]. However,  these robots were lacking enough precision and accuracy in their operational envir onment.  Nowadays, the field of microrobotics has garnered significantly more interest from researchers  and roboticists , and micro -robotics applications have experien ced a dramatic increase in different  industries.   Due to their small size and precision, they have been used in low -volume applications, military  applications, hazardous and poisonous areas, medicine, and most notably in drug delivery fields .  Robots in mic ro-class could be characterized based on their performing task and variation in their  size [3]. In order to define micro -robots based on their tasks, the micro -robot  term refers to a  class of robots performing a specific task at the micro -scale level.   Designing the systems mentioned above  requires designing a system controller to modify  manipulation strategies and its operations to guarantee the desired behavior of the system. The  functions of microrobots have been extensively discussed in [4]. Micro -robot definition s could be  defined accordin g to their general size. According to a valid classification that prominent  researchers have defined , the size of a micro -robot varies from 1 in3 down to 100 Œºm3. Micro - robots which have been studied in this article uses a slip -stick locomotion property fo r their motion.  This feature is established on the stepping -mode mechanism. The consequent vibrations allow the  symmetrical slip of the robot s base to move reciprocally. Therefore, the net movement of the  micro -class robot would be zero. Provided that the time of vibration, contact forces , and  consequently frictional forces of the slip are higher or lower than the other side, the slip value   would also change in those two orientations , resulting in a net motion of zero. In this way, slip  generation is de rived from lateral vibrations, and slip changes are because of contact forces  alteration.   Only a few papers published in the field of microrobotics have examined the slip -stick principles  of locomotion . Vartholomoes and Papadopoulos introduced a new mini -class robotic platform in  [5] based on the stick -slip principle . The micro -robot mentioned above  used three tiny -shaking  motors to control the total DOF for the system. In [6], they studied the speed control of the new  micro -robot pl atform run by vibrational motors. Moreover, in [7], they examined  the simulated  performance of the mentioned system equipped with three vibrational micro -actuators.   In [8], a brief description of how to assemble hardware and the process of the new platform has  been proposed. In [9], a new microrobot named Kilobot was introduced for the first time using the  stick -slip movement principle. In [10], the speed  control of micro -motors considering their  vibrational behavior has been investigated.   Artificial intelligence techniques have been widely used in mechatronics and robotics, especially  in the  emerging micro -robotics field. Meta -heuristic algorithms play a vital role in this regard. The  application of an enhanced Ant Colony algorithm to a simultaneous localization a nd mapping  (SLAM) project for a class of mobile robots was studied in [11]. In [12], a comprehensive study   on designing a pick and place robotic system has been evaluated and explored. They co ncluded  that the ACO algorithm delivers superior performance than other meta -heuristic methods such as   genetic algorithm (GA) and particle swarm optimization (PSO).    Castillo and Melin in [13] deployed partic le swarm, ant colony , and genetic algorithm to enhance  optimization for a fuzzy type -2 controller.  The main disadvantage of using the meta -heuristic  algorithm is that they propose offline  optimization. If any disturbance or parameter  variation  occurs in the system or the environment, meta -heuristic algorithms cannot handle  the systems  performance . Therefore, in this article, we have presented a new controller for the system  mentioned above . In [14], mission planning has bee n carried out for a n LX robotic system using  co-evolutionary optimization techniques.   In [15], a miniature modular inchworm robotic system with new mechanisms for locomotion in a  micro -robotic field has been designed and evaluated experimentally. In [16], a new type of  controller has been proposed for industrial Macro -Micro manipulation. A new multi -priority  controller framework has been designed to use a virtual dynamic to reduce task duration and  enhance the actuat ors performance .  Many types of controllers have been studied and designed by researchers. In [17], a conventional  PID controller was developed to control the position of a flexible robotic manipulator. PID  controllers have a simple structure and easy engineering implementation. The most crucial  problem is when the environments change , or uncertainty in  system parameters emerges.   In [18],[19],[20], different type s of sliding mode controllers have been designed to guarantee the  robustness and performance of robotic systems. The fatal drawback of sliding mode controllers is  chattering , which might result in instab ility.  In [21],[22],[23], different  methods of robust control  techniques have been implemented for robotic manipulators. However, good stability comes at  sacrificing system performance. In [24], a predictive model  controller has been developed for a  flexible joint manipulator. In another paper , an adaptive model predictive controller was designed  for a flexible joint manipulator  [25]. The primary disadvantage of model predictive controllers and  their various extensions is that they necessitate a thorough understanding of the systems and  environments, which is frequently impossible in real -world applications .   In [26],[27],[28],[29], different types of  fuzzy controllers were  applied to different robotic systems.  Fuzzy controllers can provide good maneuverability and performance for robotic systems.  However, they require extensive plant knowledge , which  is sometimes unavailable for designers  and operators.    Reinforcement learning is another popular approach for controlling complex and nonlinear  systems. RL algorithms can provide good maneuverability and performance for robotic systems  and deal with uncertainty in environments [30],[31],[32]. However , reinforcement learning  algorithms are computationally expensi ve and cannot be applied to many robotic systems in real- world applications. Adaptive control is another strategy for achieving the desired behavior for  robotic applications.   Generally,  adaptive control strategies  can be divided  into two categories: class ic approach and  intelligent approach. Classic approach applications ha ve been successfully applied on many  robotics tasks in [33],[34],[35],[36]. However, there are  several  issues with classic adaptive  controllers. They employ sophisticated algorithms  to identify and control systems . Complex   engineering implementation is another crucial problem .  On the other hand, intelligent methods are less complex in comparison with classic metho ds. The  goal of developing AI -based adaptive control is similar to that of traditional adaptive strategies.  However, they are distinct in one respect.  AI-based methods can deal with a more significant   amount of uncertainty than classic methods.   The aim of  involving machine learning algorithms in control applications is t o estimate  uncertainties relatively better than pure mathematical methods. Machine learning -based methods  can be widely applied to various problems and applications. Hence, we decided to select  an AI- based approach to overcome the issues mentioned above . Due to the highly nonlinear nature of our  plant, we are unable to use linear methods such as conventional PID controllers or offline optimal  control strategies such as Genetic -PID.   Using meta -heuristic algorithms may limit the performance of controllers due to uncertainty that  meta -heuristic algorithms cannot handle in the online mode.  Therefore, we decided to fuse  important aspects of PID controllers and machine learning methods. The adva ntage of PID  controllers is that they are general -purpose controllers that do not require additional plant  information . The key point of selecting  this strategy is keeping stability and online estimation as  well as adaptive behavior.   Our controller has  a simple structure , unlike classic approaches for designing nonlinear adaptive  controllers.  The main advantage  of neural networks is that they can deal with uncertainties  encountered in  online applications. As a result, we proposed a method for tuning the PI D  coefficients online and provided a linearized estimation of the plant using a neural identifier to  assist the PID in updating its parameters .   This paper is organized as follows:   section two discusses the theoretical aspects of the problem,  such as the application of AI strategies in robotics, the AI -based PID structure, and the plants  dynamic equations. Section three details the simulation procedure and provides additional  information about the plants parametric variations. Section four discusses the results and provides  critical details about the closed -loop system  created using the MATLAB/Simulink software.  Finally, section five summarizes the papers major points.      2- Theoretical Aspects   2-1- Application of artificial intelligence in robotics and micro -robotics   Artificial intelligence has a variety of applications in robotics and micro -robotics, as follows :  1- Optimization to generate the robots movement path using a dynamic model and the robots  environmental conditions   2- Neural Net work applications in improving the behavioral model of robots, especially humanoid  robots   3- Optimization in the field of robot assembly and structure   4- Combining optimization and path planning methods   5- Combining optimization and machine learning method s  6- Online motion control using real -time model identification   7- Develop ing an appropriate dynamic model using offline and online AI techniques   8- Learn ing and improv ing the model during system identification   9- Optimal inverse control methods to identify the objective function   10- Optimal control and reinforcement learning application   2-2- Intelligent -Adaptive PID Controller with System Identification   Today , PID controllers are widely used in industries  due to their simplicity in design and high  capabilities. In most cases, the adjustment of controller coefficients is adjusted by experts. When  a process is delayed or slow, setting the PID controller coefficients is extremely difficult and time - consuming . If, after adjusting the coefficients, the system is affected by nonlinear factors or other  factors such as perturbation, the closed -loop systems performance can change . These issues result  in the need to reset the PID parameters as a result of system par ameter changes.   Within the framework of the system examined in this article, we need to develop a controller that  can maintain target tracking stability in the face of changing external conditions . An effective and  efficient way to achieve this goal is to  combine PID controllers with intelligent algorithms to  improve perfor mance and create adaptivity. These methods can receive system input and output  data online and use it first to  identify the system dynamics and then, based on the results, adjust  and upd ate the controller parameters. This control method is called the self -tuning PID algorithm.   In the self -tuning controller, the parameters (coefficients) are adjusted based on the automatic  analysis of the process under control. Analyzing and examining the behavior of the process based  on the available data from that process or the information obtained from a skilled operator leads  to the creation of an approximated model of the system.   In order to control the plant in this study , two blocks of neural networ ks are used. Parallel to the  system, the neural identifier network is designed to identify the controlled plant and calculate the  controlled systems Jacobian . The second neural network is intended to adjust the PID controllers  coefficients and the system  output just before :   ùë¶ùëù(ùëò‚àí1)            (1)  the system error (ùëíùëê(ùëò‚àí1)=ùë¶ùëë(ùëò‚àí1)‚àíùë¶ùëù(ùëò‚àí1)      (2)  and the desired output ùë¶ùëë(ùëò‚àí1).         (3)  Is used as  input. The main goal is to minimize error :   ùëíùëê(ùëò)=ùë¶ùëë(ùëò)‚àíùë¶ùëù(ùëò)          (4)  The output of this neural network is expressed as the number of PID controller coefficients . The  number of output neurons is equal to 3.   The control signal is calculated as follows:   ùë¢(ùëò)=ùëòùëù(ùëò)ùëíùëù(ùëò)+ùëòùëñ(ùëò)ùëíùëñ(ùëò)+ùëòùëë(ùëò)ùëíùëë(ùëò)      (5)  We use a multi -layer perceptron neural network that adjusts weights using the backpropagation  method and the gradient descents.     The neural network inputs are as follows:   The x1 input is equivalent to the error between the reference value and the systems output   The x2 input is equivalent to the error integral between the reference value and the system output   The x3 input is equivalent to the error derivative between the reference value and the system  output. Figure (1) depicts the  designed neural network   The outputs of the neural network are as follows:   Kp output: The proportionality ratio of the PID controller   Ki output: The coefficient of an error -integral part corresponding to PID controller   Kd output: The coefficient of the part related to the error der ivative in the PID controller     Figure (1):   Neural Network Architecture for intelligent self -tuning algorithm    The weights of the first layer are called W1, and the second layer weights  are called W2. We  consider the two activation functions as a bipolar sigmoid function  (1‚àíùëí‚àíùë• 1+ùëí‚àíùë•).   The output of the first layer is multiplied by the input matrix in the weights of the first layer as:    ùëõùëíùë°1=ùëä1ùëáùë¢            (6)  where we consider u as the vector of neural network inputs. It should be noted that ùëõùëíùë°1 is an input  for the first activation function.    ùëú0=ùëì1(ùëõùëíùë°1). ùëú0            (7)  Equation (7) is the output of the first activation function. Then , the input of the second layer ( which  is the output of the first layer) is multiplied by the weight matrix of the second layer.   ùëõùëíùë°2=ùë§2ùëáùë¢ .           (8)  Here , the output vector of the first layer is (ùëú0), where  this value  subsequently  enters the second  activation function as equation (9).   ùëú1=ùëì2(ùëõùëíùë°2)            (9)  It is necessary to explain that the number of rows in the w1 matrix equals the number of neural  networks primary inputs, while the number of columns equals the number  of middle layer neurons.   Similarly, w2 is a matrix whose number of columns is equal to the number of neural network  outputs ( in this case,  3), and the number of rows is equal to the number of middle layer neurons.  The learning rate is 0.01 and is determined by trial and error.  To adjust the weights, we consider  the quadratic cost function variable as equation ( 10). The goal is to minimize the sq uared tracking  error.    ùê∏(ùëò)=1 2ùëíùëê2(ùëò)=1 2(ùë¶ùëë(ùëò)‚àíùë¶ùëù(ùëò))2          (10)  In equation (10), the reference and system  output  are at the kth moment. Now , in order to adjust  the weights using the gradient descent, we must use the following rules:   (11)           ùõ•ùíòùüê(ùëò)=‚àíùúÇùúïùê∏(ùëò) ùúïùíòùüê(ùëò)  Using the chain derivative law, we will have a chain of weights to update weights, respectively.   )ùõ•ùíòùüê(ùëò)=‚àíùúÇùúïùê∏(ùëò) ùúïùëíùëêùúïùëíùëê ùúïùë¶ùëùùúïùë¶ùëù ùúïùë¢ùúïùë¢ ùúïùíòùüê(ùëò)=ùúÇùëíùëê(ùëò)ùêΩùëù(ùëò)ùíêùüè(ùëò)     (12)  ùõ•ùíòùüê(ùëò)=ùúÇùõø2(ùëò)ùíêùüè(ùëò)         (13)  ùõ•ùíòùüè(ùëò)=‚àíùúÇùúïùê∏(ùëò) ùúïùíòùüè(ùëò)=ùúÇùëíùëê(ùëò)ùêΩùëù(ùëò)ùíòùüê(ùëò)ùíáùüè‚Ä≤(ùëò)ùíêùüé(ùëò)          (14)  ùõ•ùíòùüè(ùëò)=ùúÇùõø1(ùëò)ùëú0(ùëò)         (15)  Now that the rules for regulating the weights of the multi -layer perceptron neural network have  been obtained, we need to explain another section so that the neural network controller has  complete access to the system model . In the first law,  ùêΩùëù(ùëò) is equivalent to the following equation.    ùêΩùëù(ùëò)=ùúïùë¶ùëù(ùëò) ùúïùë¢(ùëòùëù,ùëòùëñ,ùëòùëë)‚âÖùêΩùëö(ùëò)          (16)  Which indicates the Jacobian of the controlled system or plant, the values of which the neuro - identifier must immediately provide to the controller. It is sufficient to store the inputs and outputs  of several plants to estimate it . The main advantage of the designed controller is the independence  of the controller from the plant equations and the ability to apply the controller  over any  type of  system. The controller, coupled with a neural system identifier, can quickly estimate  the controlled  plant and perform  its tasks with sensors aid . Finally, the intelligent method that controls the plant  adaptively is summarized as the following block diagram.     Figure (2):   Architecture of AI-based PID Controller   2-3- Micro -robot dynamics equations   Micro -robot dynamics equations are derived from [37], in which they have validated these  equations based on experimental investigation. In this section, we cover the most importan t  equations for this system and its actuators. For more information , please refer to  [37] to obtain   more details . Proposed equations of this system are as follows:    ùëÄùëãÃà=(‚àíùëöùëíùëüùëíùúî2 ùëíùë†ùëñùëõùúÉùëí+ùëöùëëùëüùëëùúî2 ùëëùë†ùëñùëõùúÉùëë+ùëìùëéùë•+ùëìùëèùë•+ùëìùëêùë•)ùëêùëúùë† ùúë‚àí(ùëìùëéùë¶+ùëìùëèùë¶+ ùëìùëêùë¶)ùë†ùëñùëõùúë           (17)  ùëÄùëåÃà=(‚àíùëöùëíùëüùëíùúî2 ùëíùë†ùëñùëõùúÉùëí+ùëöùëëùëüùëëùúî2 ùëëùë†ùëñùëõùúÉùëë+ùëìùëéùë•+ùëìùëèùë•+ùëìùëêùë•)ùë†ùëñùëõùúë+(ùëìùëéùë¶+ùëìùëèùë¶+ ùëìùëêùë¶)ùëêùëúùë†ùúë           (18)  ùêºùëßùëßùúëÃà=‚àö3ùëô 6ùëìùëéùë¶‚àí1 2ùëìùëéùë•‚àí‚àö3ùëô 3ùëìùëèùë¶+‚àö3ùëô 6ùëìùëêùë¶+1 2ùëìùëêùë•‚àíùëë1ùëöùëíùëüùëíùúî2 ùëíùë†ùëñùëõùúÉùëí‚àíùëë1ùëöùëëùëüùëëùúî2 ùëëùë†ùëñùëõùúÉùëë              (19)  Denoted forces to the legs in the x-direction are denoted as ùëìùëéùë•, ùëìùëèùë•,ùëìùëêùë•, respectively. Similarl y,  forces , which are applied to legs in the y-direction  are denoted as ùëìùëéùë¶,ùëìùëèùë¶,ùëìùëêùë¶. The v ibrating   actuator dynamical equation is as follows:   {ùúî=2.6ùëâ5 1‚àí26.44ùëâ14+102 .11ùëâ13‚àí200 .92ùëâ12+253 .09ùëâ1‚àí43.36ùëâ1‚â•0.2 ùúî=2.6ùëâ5 1+26.44ùëâ14+102 .11ùëâ13+200 .92ùëâ12+253 .09ùëâ1+43.36ùëâ1‚â•0.2 ùúî=0‚àí0.2<ùëâ1<0.2      (20)  In Figure (3) , an open -loop diagram of the system is presented:      Figure (3):  Open -loop block diagram for the micro -robot system   3- Micro -robot system simulation   The simulation of this micro -robot is performed  in the Simulink  environment of MATLAB  software.  This simulation includes the micro -robot dynamic equations, the friction model, and t he  micro -robot operator model.  The simulation  process can be seen in Figure ( 4), where the systems  input  is the motor voltage. Using the model chosen for the operators and the dynamics of the micro - robot, the velocity of the center of mass and the velocity of the bases are obtained.  There are two  methods for computing friction force , providing  the velocity of the center of mass.   The spring and mass model is used if the velocity of the center of mass is zero; if it is greater than  zero, the micro -class robot is considered rigid . Table (1) illustrates  the values of the simulation  parameters. The s imulation parameters are adjusted from [37].     Figure (4):  Flowchart of the simulation process         Table (1):  Values of simulation parameters [37]  Parameter    Value    Parameter    Value     ùëò   72,509 .185 (ùëÅùëö‚àí1) ùëöùëë 9√ó10‚àí4(ùëòùëî)  ùúá   0.36   ùëöùëí 9√ó10‚àí4(ùëòùëî)  ùêº   9.2√ó10‚àí7(ùëòùëîùëö2) ùëüùëë 1.061 √ó10‚àí3(ùëö)  ùëÄ   7.2√ó10‚àí3(ùëòùëî) ùëüùëí 1.061 √ó10‚àí3(ùëö)  ùëô   0.04(ùëö) ùëÖ   11.2(ùõ∫)  d1   0.01(ùëö) ùêø   0.102 (ùëöùêª)  ‚Ñé   5.7√ó10‚àí3(ùëö) ùëî   9.807 (ùëöùë†‚àí2)    3-1- Investigation of the parameters of the spring coefficient of the bases and the coefficient of  friction on the dynamics of the micro -robot   In this section, we examine the effect of changing the spring coefficient of the bases and the  coefficient of friction on the direct motion of the micro -robot when the angle operators velocity is  455.6 rad / s .  Figures (5) and (6) depict  the translocation of the micro -class robot in the x and y directions,  respectively, and Figure ( 7) shows the changes in the angle of the micro -robot concerning  the axis  perpendicular to the plane for different spring coefficients of the bases.  As shown in Figure ( 5),  the translocation of the micro -class robot in the x-direction  has changed with increasing k.   According to Figures ( 6) and ( 7), as the spring coeffi cient increases and the foundations harden,  the displacement in the y-direction  and the rotation around  the axis perpendicular to the plane  reach its ideal state.     Figure ( 5): Position of the micro -class robot along the x  -direction relative to  time for the different spring  coefficients  of bases     Figure ( 6): Position of the micro -class robot along  the y -direction  relative to  time for  the different spring  coefficients of bases        Figure ( 7): Rotation angle of the micro -class robot relative to  time for the different spring coefficient s of bases   Figures ( 8) and ( 9) show the translocation of the micro -class robot in the x and y directions,  respectively, and Figure ( 10) shows the changes in its angle concerning  the axis perpendicular to  the surface for different coefficients of friction.  As shown in Figure ( 8), as th e coefficient of  friction increases, the displacement in the x-direction  decreases.  According to Figures ( 9) and ( 10),  the displacement in the y-direction  and the rotation around  the axis perpendicular to the plane is  equal to zero.  Because no friction exi sts on the surface, only the force generated by the motors in  the x-direction  enters the system, causing the micro -robot to move in this direction without  deviating.      Figure ( 8): Position of the micro -class robot along the x -direction  relative to  time for the different coefficients of  friction     Figure ( 9): Position of the micro -class robot along the y concerning  time for the different coefficients of friction      Figure ( 10): The r otation angle of the micro -robot relative to  time for the different coefficients of friction         4-Results and Discussion   4-1- Intelligent controller application in a micro -robot system   In this paper, an intelligent PID controller has been  used to improve robot motion control.  A neural  network algorithm performs the adaptation . Since  this robot applies two voltages to the motors  system inputs, two Intelligent -PID controllers were used to correct the input voltage to each motor .  A controller is responsible for correcting the amount of error generated by the robots direct  movement, wh ile another controller is responsible for correcting the amount of error generated by  the robots rotation.    The critical point to remember when using the controller, particularly in practical applications such  as the one above, is to maximize the controlle rs output . Since the controllers output  in this robot  is made of voltage and is applied directly to the motors, it must be defined within a permissible  limit.  Depending on the selected motors, this value is between ¬± 3v.    Figure ( 11) shows the block diag ram of the robot with the friction force and the controllers in the  Simulink environment . As shown in Figure ( 11), the amount of displacement in the x-direction   concerning  the x coordinate system is converted to the amount of displacement relative to the  coordinate system mounted on the center of the x micro robot by the following relation.  In the  following equation, y is the amount of displacement in the y-direction  relative to the reference  coordinate system and ùúë the amount of rotation of the microrobot relative to the reference  coordinate system.      ùë•=ùëãùëêùëúùë†ùúë+ùëåùë†ùëñùëõùúë          (21)     Figure (1 1): Block diagram of a closed -loop system of micro -class robot in Simulink environment     Six parameters are required t o control this microrobot with the proposed PID controllers.  Three  parameters  ùêæùëù,ùêæùêº,ùêæùê∑ are required for direct motion , and three parameters ùêæùëù,ùêæùêº,ùêæùê∑ for rotational  motion.  The aforementioned neural network algorithm selects these six parameters based on the  environment and plant situation.  The final target is in the form of the following equation in which :  ùëíùë°=ùë•ùëë‚àíùë•(ùë°)            (22)  Equation (22) the error is due to direct motion,  which is obtained from the difference of the  reference input in the direction of displacement of the x and displacement at any moment in this  direction.   ùëíùëü=ùúëùëë‚àíùúë(ùë°)            (23)  Equation (23) is the error due to net rotation, obtained from the difference between the desired  rotation and the amount of rotation at each moment.   4-2- Micro -robot closed -loop simulation with Intelligent -Adaptive PID Controller   The values of the micro -robot parameters used in the simulation are used from Table (1).  The  direct motion of the micro -robot for the follow ing reference inputs is shown in Figures (1 2) to  (15).  ùëãùëë=0.02(ùëö)  ùúëùëë=0(ùëüùëéùëë)  Figure (1 2) shows the robot moving in the x-direction , Figure (1 3) shows the amount of error  related to moving in the x-direction , Figure (1 4) shows the robot moving in the y-direction  and  Figure (1 5) shows the rotation angle of the robot.  According to Figure (1 3), the amount of error in  the x-direction  is minimal.     Figure (1 2): The robot motion in the x-direction     Figure (1 3): The amount of error related to displacement in the x-direction      Figure (1 4): The robot motion in the y-direction     Figure (1 5): Rotation angle of the micro -robot   The ro bots rotation  for the following desired inputs is shown in Figures (15) to (18).   ùëãùëë=0(ùëö)  ùúëùëë=0.2(ùëüùëéùëë)   Figure (1 6) shows the movement of the robot in the x-direction , Figure (1 7) shows the movement  of the robot in the y-direction , Figure (1 8) shows the angle of r otation of the robot , and Figure (1 9)  shows the amount of error related to the rotation of the robot.  According to Figure (1 9), the amount  of rotation error is minimal .    Figure (1 6): Robot motion in the x -direction      Figure (1 7): Robot motion in the y-direction     Figure (1 8): Rotation of a micro -robot     Figure (1 9): The amount of error related to the rotation of the robot          5- Conclusion   This paper aims  to propose a controller for a micro -robot equipped with a vibration actuator.   Initially , the intelligent controller has been  discussed.  Then, we  have  explained  the definition of  mobile micro -robots and artificial intelligence applications in robotics and micro -robotics.  Our  algorithms success ful performance has been demonstrated through simulations.    The micro-robot have been used in this study has followed the principle of stick -slip motion. Also,  two small vibrational motors have been used to start the robot.  The v ibrating actuators are free of  looseness and residuals and are ideal for high -precision linear and rotational movements.  Dynamic  modeling of this micro -robot was expressed by considering the effect of spring on the bases.   Because the proble m of three static indeterminate degrees needed to be solved to calculate friction  forces, the problem was solved by modeling the micro -robot as a mass and spring system .   The effects of the base spring, friction coefficient, robot mass, location of actuato rs, and base  length on the movement of the micro -robot have been  investigated using MATLAB software s  Simulink environment.  According to the obtained results, with the increase of the spring  coefficient and the hardening of the bases in direct motion, the displacement in the y-direction  and  the rotation around the axis perpendicular to the plane reach ed its ideal state, i.e., t he value of zero.   Also, by increasing the coefficient of friction in direct motion, the displacement in the x-direction   decreases,  and the displacement in the y-direction  and the rotation around  the axis vertical to the  plane is equal to zero.    Because the re is no friction on the surface, only the motors energy has been  transmitted to the  micro -class robot in the x-direction , the micro -robot moves in this direction without deviating.   According to simulations, the greater the mass of the micro -robot, the greater the distance between  the operators and the center of mass, and the shorter the length of the bases, the less the micro - class robot translocates in a straight line, reducing its speed but increasing its accuracy of motion .  In the co ntrol section, simulations for several different paths for this micro -robot movement have  been performed first using the intelligent PID control method.  Following that, the Intelligent - Adaptive PID controller was described , and its application was examined . The s imulation results  indicate  an acceptable performance of the robotic system in  tracking tasks.   Author Contributions   The authors contributed equally to this work includin g: Des igning the study,  software and code  as well as writing th e article.   Financial Support   This research received no specific grant from any funding agency,  commercial or  not-for-profit sectors   Declaration of competing inter est  The authors declare that they have no known competing financial interests or  personal relationships that could have appeared to influence the work reported in  this paper.     References   [1] O. Tutsoy, I. Calikusu, S. Colak, O. Vahid, D. E. Barkana, and F. Gongor, Developing  Linear and Nonlinear Models of Abb Irb120 Industrial Robot With Maplesim Multibody  Modelling Software , Int. Conf. Technol. Eng. Sci. , vol. 1, pp. 273 ‚Äì285, 2017, Accessed :  Jul. 31, 2021. [Online]. Available: www.isres.org.   [2] O. Tutsoy, M. Brown, and H. Wang, Reinforcement learning algorithm application and  multi -body system design by using MapleSim and Modelica , in 2012 International  Conference on Advanced Mechatronic Systems, ICAMechS 2012 , 2012, pp. 650 ‚Äì655.  [3] M. Gad -el-Hak, and W. Seemann, MEMS Handbook , Appl. Mech. Rev. , vol. 55, no. 6,  pp. B109 ‚ÄìB109, Nov. 2002, doi: 10.1115/1.1508147.   [4] L. Dong and B. J. Nelson, Tutorial - Robotics in the small P art II: Nanorobotics , IEEE  Robot. Autom. Mag. , vol. 14, no. 3, pp. 111 ‚Äì121, Sep. 2007, doi:  10.1109/MRA.2007.905335.   [5] P. Vartholomeos and E. Papadopoulos, Analysis and design of a novel mini -platform  employing vibration micro -motors , Proc. - IEEE Int . Conf. Robot. Autom. , vol. 2005, pp.  3627 ‚Äì3632, 2005, doi: 10.1109/ROBOT.2005.1570672.   [6] P. Vartholomeos and E. Papadopoulos, Dynamic Analysis and Speed Control of a n N  Oval Micro -Platform Driven By Vibrating Motors , pp. 58 ‚Äì63.  [7] P. Vartholomeos and E. Papadopoulos, Dynamics, design , and simulation of a novel  microrobotic platform employing vibration microactuators , J. Dyn. Syst. Meas. Control.  Trans. ASME , vol. 128, no. 1, pp. 122 ‚Äì133, Mar. 2006, doi: 10.1115/1.2168472.   [8] P. Vartholomeos, K. Mougiakos, and E. Papadopoulos, Driving principles and hardware  integration of microrobots employing vibration micromotors , IEEE/ASME Int. Conf. Adv.  Intell. Mechatronics, AIM , 2007, doi: 10.1109/AIM.2007.4412588.   [9] M. Rubenstein, C. Ah ler, and R. Nagpal, Kilobot: A Low-Cost Scalable Robot System  for Collective Behaviors , Proc. - IEEE Int. Conf. Robot. Autom. , pp. 3293 ‚Äì3298, May  2012, doi: 10.1109/ICRA.2012.6224638.   [10] I. Spartali, K. Vlachos, and E. Papadopoulos, Speed control of v ibration micro -motors of  a micro -robotic platform , in 2013 21st Mediterranean Conference on Control and  Automation, MED 2013 - Conference Proceedings , 2013, pp. 1 ‚Äì6, doi:  10.1109/MED.2013.6608690.   [11] X. Fan, X. Luo, S. Yi, S. Yang, and H. Zhang, Optimal path planning for mobile robots  based on intensified ant colony optimization algorithm , RISSP 2003 , vol. 2003 -October,  pp. 131 ‚Äì136, 2003, doi: 10.1109/RISSP.2003.1285562.   [12] S. Daoud, H. Chehade, F.  Yalaoui, and L. Amodeo, Efficient metaheuristics for pick and  place robotic systems optimization , J. Intell. Manuf. , vol. 25, no. 1, pp. 27 ‚Äì41, Feb. 2014,  doi: 10.1007/S10845 -012-0668 -Z.  [13] CastilloOscar and MelinPatricia, A review on the design and optimization of interval  type-2 fuzzy controllers , Appl. Soft Comput. , vol. 12, no. 4, pp. 1267 ‚Äì1278, Apr. 2012,  doi: 10.1016/J.ASOC.2011.12.010.   [14] K. Rahul, Robot mission planning using co -evolutionary optimization , Robotica , vol.  38, no. 3, pp. 512 ‚Äì530, Mar. 2020, doi: 10.1017/S026357471900081X.   [15] W. Saab, P. Racioppo, A. Kumar, and P. Ben -Tzvi, Design of a miniature modular  inchworm robot with an anisotropic friction skin , Robotica , vol. 37, no. 3, pp. 521 ‚Äì538,  Mar. 2019, doi: 10.1017/S0263574 718001157.   [16] E. Uzuno«ßlu, E. Tatlicio«ßlu, and M. ƒ∞. C. Dede, A Multi -Priority Controller for Industrial  Macro -Micro Manipulation , Robotica , vol. 39, no. 2, pp. 217 ‚Äì232, Feb. 2021, doi:  10.1017/S0263574720000338.   [17] A. Izadbakhsh and S. Khorashadizad eh, Single -loop PID controller design for electrical  flexible -joint robots , J. Brazilian Soc. Mech. Sci. Eng. , vol. 42, no. 2, Feb. 2020, doi:  10.1007/s40430 -020-2172 -2.  [18] G. L. Xiong, H. C. Chen, J. X. Shi, and F. Y. Liang, Joint torque control of flexible joint  robots based on sliding mode technique , Int. J. Adv. Robot. Syst. , vol. 16, no. 3, Mar.  2019, doi: 10.1177/1729881419846712.   [19] P. Wang, S. Shen, H. Lu, and Y. Shen, Precise Watch -Hand Alignment under  Disturbance Condition by Micro  Robotic System , IEEE Trans. Autom. Sci. Eng. , vol. 16,  no. 1, pp. 278 ‚Äì285, Jan. 2019, doi: 10.1109/TASE.2018.2825235.   [20] W. Alam, S. Ahmad, A. Mehmood, and J. Iqbal, Robust Slidin g Mode Control for  Flexible Joint Robotic Manipulator via Disturbance Observer , Interdiscip. Descr.  Complex Syst. , vol. 17, no. 1, pp. 85 ‚Äì97, 2019, doi: 10.7906/indecs.17.1.11.   [21] K. Rsetam, Z. Cao, and Z. Man, Cascaded -Extended -State -Observer -Based Sl iding - Mode Control for Underactuated Flexible Joint Robot , IEEE Trans. Ind. Electron. , vol.  67, no. 12, pp. 10822 ‚Äì10832, Dec. 2020, doi: 10.1109/TIE.2019.2958283.   [22] D. Wang, D. Zhao, M. Gong, and B. Yang, Research on Robust Model Predictive  Control fo r Electro -Hydraulic Servo Active Suspension Systems , IEEE Access , vol. 6,  pp. 3231 ‚Äì3240, Dec. 2017, doi: 10.1109/ACCESS.2017.2787663.   [23] C. Baspinar, Robust Position/Force Control of Constrained Flexible Joint Robots with  Constraint Uncertainties , J. Intell. Robot. Syst. Theory Appl. , vol. 100, no. 3 ‚Äì4, pp. 945 ‚Äì 954, Dec. 2020, doi: 10.1007/s10846 -020-01220 -1.  [24] M. H. Ettefagh, M. Naraghi, and F. Towhidkhah, Position control of a flexible joint via  explicit model predictive control: An experimental implementation , Emerg. Sci. J. , vol.  3, no. 3, pp. 146 ‚Äì156, Jun. 2019, doi: 10.28991/esj -2019 -01177.   [25] M. N. Hasan, M. Haris, S. J. H. Pirzada, and S. Qin, Adaptive model predictive control  for a class of nonlinear single -link flexible joint manipulator , Nov. 2019, doi:  10.1109/INTELLECT47034.2019.8955464.   [26] L. C. Lin and T. E. Lee, Integrated PID -type learning and fuzzy control for flexible -joint  manipulators , J. Intell. Robot. Syst. Theory Appl. , vol. 18, no.  1, pp. 47 ‚Äì66, Jan. 1997,  doi: 10.1023/A:1007942528058.   [27] P. Nikdel, M. Hosseinpour, M. A. Badamchizadeh, and M. A. Akbari, Improved Takagi - Sugeno fuzzy -model -based control of flexible joint robot via Hybrid -Taguchi genetic  algorithm , Eng. Appl. Artif . Intell. , vol. 33, pp. 12 ‚Äì20, 2014, doi:  10.1016/j.engappai.2014.03.009.   [28] H. S. Liu, Y. L. Jin, X. Cheng, Z. Y. Wang, J. Qi, and Y. Liu, Trajectory tracking control  for flexible -joint robot manipulators with bounded torque inputs , Kongzhi Lilun Yu  Yingyong/Control Theory Appl. , vol. 36, no. 6, pp. 983 ‚Äì992, Jun. 2019, doi:  10.7641/CTA.2018.80200.   [29] D. F. Huang and L. Chen, Wavelet -based fuzzy neural network control for free -floating  space flexible manipulator to track desired trajectory , Gongche ng Lixue/Engineering  Mech. , vol. 29, no. 12, pp. 360 ‚Äì364, Dec. 2012, doi: 10.6052/j.issn.1000 - 4750.2011.05.0322.   [30] M. G√≥mez, R. V. Gonz√°lez, T. Mart√≠nez -Mar√≠n, D. Meziat, and S. S√°nchez, ‚ÄúOptimal  motion planning by reinforcement learning in autonomous m obile vehicles,‚Äù Robotica ,  vol. 30, no. 2, pp. 159 ‚Äì170, Mar. 2012, doi: 10.1017/S0263574711000452.   [31] V. Azimirad and M. F. Sani, Experimental Study of Reinforcement Learning in Mobile  Robots Through Spiking Architecture of Thalamo -Cortico -Thalamic Circ uitry of  Mammalian Brain , Robotica , vol. 38, no. 9, pp. 1558 ‚Äì1575, Sep. 2020, doi:  10.1017/S0263574719001632.   [32] R. Polvara, S. Sharma, J. Wan, A. Manning, and R. Sutton, Autonomous Vehicular  Landings on the Deck of an Unmanned Surface Vehicle using De ep Reinforcement  Learning , Robotica , vol. 37, no. 11, pp. 1867 ‚Äì1882, Nov. 2019, doi:  10.1017/S0263574719000316.   [33] R. Hayat, M. Leibold, and M. Buss, Addressing Control Implementation Issues in  Robotic Systems Using Adaptive Control , Robotica , vol. 38 , no. 1, pp. 171 ‚Äì184, Jan.  2020, doi: 10.1017/S0263574719000547.   [34] A. Izadbakhsh and S. Khorashadizadeh, Polynomial -Based Robust Adaptive Impedance  Control of Electrically Driven Robots , Robotica , vol. 39, no. 7, pp. 1181 ‚Äì1201, Jul. 2021,  doi: 10.1017/S0263574720001009.   [35] V. Boomeri and H. Tourajizadeh, Design, Modeling, and Control of a New Manipulating  Climbing Robot Through Infrastructures Using Adaptive Force Control Method ,  Robotica , vol. 38, no. 11, pp. 2039 ‚Äì2059, Nov. 2020, doi: 10.1 017/S0263574719001814.   [36] F. Pierri, G. Muscio, and F. Caccavale, An adaptive hierarchical control for aerial  manipulators , Robotica , vol. 36, no. 10, pp. 1527 ‚Äì1550, Oct. 2018, doi:  10.1017/S0263574718000553.   [37] M. Karami, A. R. Tavakolpour -Saleh, an d A. Norouzi, Optimal Nonlinear PID Control of  a Micro -Robot Equipped with Vibratory Actuator Using Ant Colony Algorithm:  Simulation and Experiment , J. Intell. Robot. Syst. 2020 993 , vol. 99, no. 3, pp. 773 ‚Äì796,  Feb. 2020, doi: 10.1007/S10846 -020-01165 -5.    ","cs.RO, cs.SY, eess.SY",Arxiv
14,Visual Response to Emotional State of User Interaction,"Nina Marhamati, Sena Clara Creston",2023-03-27 20:23:18+00:00,http://arxiv.org/pdf/2303.17608v1,"This work proposes an interactive art installation ""Mood spRing"" designed to reflect the mood of the environment through interpretation of language and tone. Mood spRing consists of an AI program that controls an immersive 3D animation of the seasons. If the AI program perceives the language and tone of the users as pleasant, the animation progresses through idealized renditions of seasons. Otherwise, it slips into unpleasant weather and natural disasters of the season. To interpret the language and tone of the user interaction, hybrid state-of-the-art emotion detection methods are applied to the user audio and text inputs. The emotional states detected separately from tone and language are fused by a novel approach that aims at minimizing the possible model disparity across diverse demographic groups.","Visual Response to Emotional State of User Interaction Nina Marhamati1and Sena Clara Creston2 1Computer Science Department, Sonoma State University, Rohnert Park, CA 94928, nina.marhamati@sonoma.edu 2Department of Art, Sonoma State University, Rohnert Park, CA 94928, crestons@sonoma.edu Abstract. This work proposes an interactive art installation \Mood spRing designed to reect the mood of the environment through in- terpretation of language and tone. Mood spRing consists of an AI pro- gram that controls an immersive 3D animation of the seasons. If the AI program perceives the language and tone of the users as pleasant, the animation progresses through idealized renditions of seasons. Otherwise, it slips into unpleasant weather and natural disasters of the season. To interpret the language and tone of the user interaction, hybrid state-of- the-art emotion detection methods are applied to the user audio and text inputs. The emotional states detected separately from tone and language are fused by a novel approach that aims at minimizing the possible model disparity across diverse demographic groups. Keywords: emotion detection, natural language processing, AI-for-all, animation, decision fusion 1 Introduction and Background With the growth of cyberbullying and its impact on articial intelligence (AI) projects, such as Tay [1], there is an urge to help public understanding of and interaction with AI. In [2], the authors use the term \robot as Roschack to explain how \relationships with robots express other things about a persons life. Mood spRing is created as an interactive art installation to give viewers creative freedom to express themselves in an environment that mirrors their emotional output. This emotional reexivity is created to enable the viewer to feel how their language and tone make others feel. This connection between the action of the viewer, the reaction of the artwork, and the emotional response this relationship nurtures has been pioneered by other artists. The software artist Erik Loyer explores the connection between the viewers actions and environmental reactions in his 2013 app Breathing Room [3] in which the viewers movements mimic the wind to trigger environmental and anecdotal responses. Incorporating the viewers responses into the artwork brings attention to the value of their actions. The artist, Sena Clara Creston, uses interactive artworkarXiv:2303.17608v1  [cs.HC]  27 Mar 2023 2 Nina Marhamati et al. to enable viewers to experience the eects of their actions past the scope of their observation. Her previous interactive 3D environment, The Cloud Factory [4] enables viewers to be the creator and destroyer of their environment, promoting reection on ones constructive and destructive power. Her other installations utilize familiar discarded materials and physical positive and negative responses to encourage the viewer to see the consequences of their actions. Creating a responsive environment cites the power of the viewers autonomous actions to control a response, with the intention of asking the viewer to consider their environmental impact. To create such a response, we use AI approaches to detect the emotional state of the user interaction. Human emotions are complicated, however, several psychological models of aect have been used by the AI community for emotion detection, such as Russels circumplex and Plutchiks wheel of emotion [5]. Most existing emotion detection datasets use six basic categories of happiness, sad- ness, anger, disgust, surprise, and fear to tag emotions [5]. On the other side, psychologists have pointed out the expression of emotions varies across dierent cultures and individuals [6] and only pleasant and unpleasant emotions could be universally recognized [7] . In this work, we propose to use Russels circumplex to map the six emotion categories to pleasant and unpleasant classes. Using these two classes makes our methodology generalizable to dierent cultures and indi- viduals and better facilitates the mechanism for controlling the visual response. The AI research community has tackled emotion detection based on the type of data. Text-based approaches could be categorized to keyword-based, rule- based, classical machine learning such as SVM, deep learning, and hybrid ap- proaches [8]. There are over a dozen of benchmark datasets for text-based emo- tion detection [5], such as ISEAR [9], the Daily Dialog [10], and EmoBank [11]. Detecting emotions from speech has been performed by extracting prosodic features to represent the auditory qualities of sound such as pitch, and spectral features, which are frequency-based [12]. Mel frequency cepstrum coecients (MFCC), linear prediction cepstral coecients (LPCC), and their variants are some of such commonly used features [13]. Classiers based on support vector machines (SVM), Gaussian mixture model (GMM), and hidden Markov model (HMM) have been applied to those features for emotion detection [14]. Deep learning approaches have had great success classifying the audio features [15] or generating their own embeddings and features directly from the audio inputs by training large deep models such as yamnet and VGGish [16,17] and by transfer learning from pre-trained models to classify images of spectrograms [18]. High dimensional feature space and limited datasets are some of the challenges of detecting emotions directly from audio inputs. 2 Expected Outcome Illustrating emotional response to spoken input is expected to encourage viewers to consider the impact of their actions, language, and tone; promoting empathy and understanding across language, cognitive, and technological barriers. As the Mood spRing 3 viewer enters the digital space and receives visual environmental feedback for their perceived input, they may rst experiment with the boundaries of the application; Viewers may act on the spectrum from being timid and sensitive, or brazen and aggressive. The more time the viewer spends with the app talking to others without considering the outcome, the more likely the app is going to catch them unaware, unbiasedly reecting their natural language and tone. Regardless of how the viewer engages, articulated environmental reactions will reinforce the lasting impact of their actions. The proposed methodology enables such environmental reactions and in- vestigates improvements in emotion detection when information fusion is used. Utilizing multiple sensors in parallel and the addition of an extra layer for in- formation fusion is expected to reduce gender/age bias and improve the overall results. 3 The Signicance of Experiencing Interactivity Across Digital Forms Initially, Mood spRing will be formatted as an app to be experienced on a com- puter, or a mobile device, enabling maximum participation in various situations. Environmental allusions to creating a 3D animation of changing weather suggest a benet of nalizing Mood spRing in an immersive virtual reality format. While this format provides optimal immersion, virtual reality might prohibit viewers without the proper hardware from being able to experience it. Incorporating a virtual reality headset may further socially isolate the viewer, discouraging social communication, and free use of language and tone. As an art exhibition, Mood spRing could be displayed as an immersive video installation with four pro- jected walls. This installation would enable people to congregate in the gallery while communicating freely. A few people talking calmly would be reected by a calm relaxing environment, while a gallery lled with a cacophony of conversa- tion will be reected by a tumultuous environment. A populated gallery setting might provoke viewers to test or tease the environment to elicit maximum re- sponse, disregarding emotional feedback. Alternatively, providing intermediary indicators of an emotional barometer as a response to spoken language and tone has the potential to provide technical applications as emotional indicators for people with a need for assistance interpreting emotional indicators. Other pos- sible applications are enhancing user experience by reecting the mood of the room in online learning, augmented reality, and game environments. 4 Methodology The majority of the studies on emotion detection (ED) use either plain text or merely audio recordings to detect emotions [5, 8, 12]. Authors of [19] refer to multi-view representation learning as an approach to combine the result of ED from speech with the result of text-based ED extracted from automatic speech 4 Nina Marhamati et al. Fig. 1. The schematic of emotion detection for generating visual response to human interaction in Mood spRing recognition (ASR) system. However, they do not actually apply that to their implementation pipeline. There are other major eorts in emotion recognition from videos, mostly by combining visual and audio inputs [20]. There are limited benchmark datasets available on detecting emotions di- rectly from speech [21, 22] which aects the performance of the models trained on such limited data. Models trained on the aforementioned datasets usually focus on the frequency content of the input voice and extract their features from the frequency domain. On the other hand, there have been many more datasets and studies on ED from text streams, such as tweets [23], comments, messages, etc. [5,8]. Most ED approaches process visual inputs using facial features, which also has been proven ineective [6]. The language content of speech carries the semantics and might be crucial in detecting the emotional state of an interac- tion however that can suer from gender bias in predicting the results [24]. As mentioned earlier, models trained on speech only are not very reliable due to lim- ited existing data. Therefore, none of these can be a reliable source of detecting emotions individually. The methodology proposed here combines the ED results from text with the results from audio and visual inputs. The schematic of the proposed methodology is shown in Fig. 1. The ED system receives dierent types of inputs from the user, detects the emotional state of the interaction for each input, fuses the predictions from individual models, and outputs the detected emotional state. The output of the ED system is used to generate a control signal to display the animation as a response to the user. We consider either text input from the user or we generate text from the audio input utilizing o-the-shelf automatic speech recognition (ASR). Features are extracted from the inputs by transfer learning from pre-trained models. From here on in the paper, for sake of brevity and without loss of generality, we explain the details of the methodology for audio and text inputs. However, our approach is extensible to visual inputs as well. Mood spRing 5 For obtaining the audio embeddings, yamnet and VGGish models [16, 17] and for the word embedding, the BERT language model [25] are employed here. It is possible to investigate ne-tuning of the same models to detect emotions from each input. In order to provide real-time response to the user, the proposed method applies lightweight models such as support vector machine (SVM), k- nearest neighbors (KNN), and naive Bayes (NB) for ED. Thus, we use other features such as the mel-frequency cepstrum coecients (MFCC) for audio and term frequencies or TF-IDF values for text as well. For decision fusion, classic approaches such as majority voting or ensemble methods for decision-making [26] can be used. For improved decision fusion, we propose to train a simple model, such as a small neural network of a fully con- nected layer, with a fairness measure as the loss function. The fairness measure is designed based on Bernstein bounds [27]. Our proposed fusion method weighs the result of each classier and fuses them such that gender bias is minimized in the nal decision. Gender bias is targeted here due to its presence in the RAV- NESS dataset. However, this proposed approach is applicable for minimizing bias against any other groups as well. To the best of the authors knowledge, there has not been any previous decision fusion approach for minimizing unfairness against underrepresented groups. The probability of the predicted emotional state of the user interaction is used to control the timing of the animation. Other aspects of the AI model prediction, such as the condence level can be reected by controlling the brightness of the animation. 5 Conclusion and Future Direction Mood spRing is the initial collaboration between an AI expert and an artist exploring how programmed reactions to viewers actions promote empathetic emotional awareness. Relational programs can be used for future art installa- tions which focus on animating environmental responses to the actions of the viewer, encouraging the viewer to understand the eect their actions have on the greater world. To scale the proposed methodology to such environments with multiple users and multi-modal inputs, we will use benchmark datasets such as MELD [28] and apply multi-view representation learning approaches such as canonical correlation analysis [29]. These programmed relationships can also be used for game development to support relationships between virtually distanced participants. References 1. URL https://en.wikipedia.org/wiki/Tay (bot) 2. S. Turkle, W. Taggart, C.D. Kidd, O. Dast e, Connection Science 18(4), 347 (2006) 3. URL https://erikloyer.com/index.php/projects/detail/breathing room 4. URL senaclaracreston.com/CloudFactory.html 6 Nina Marhamati et al. 5. F.A. Acheampong, C. Wenyu, H. Nunoo-Mensah, Engineering Reports 2(7), e12189 (2020) 6. L.F. Barrett, R. Adolphs, S. Marsella, A.M. Martinez, S.D. Pollak, Psychological science in the public interest 20(1), 1 (2019) 7. L.F. Barrett, How emotions are made: The secret life of the brain (Houghton Miin Harcourt, 2017) 8. N. Alswaidan, M.E.B. Menai, Knowledge and Information Systems pp. 1{51 (2020) 9. K.R. Scherer, H.G. Wallbott, Journal of personality and social psychology 66(2), 310 (1994) 10. Y. Li, H. Su, X. Shen, W. Li, Z. Cao, S. Niu, arXiv preprint arXiv:1710.03957 (2017) 11. S. Buechel, U. Hahn, in Proceedings of the 15th Conference of the European Chapter of the Association for Computational Linguistics: Volume 2, Short Papers (2017), pp. 578{585 12. K. Sailunaz, M. Dhaliwal, J. Rokne, R. Alhajj, Social Network Analysis and Mining 8(1), 1 (2018) 13. U. Jain, K. Nathani, N. Ruban, A.N.J. Raj, Z. Zhuang, V.G. Mahesh, in 2018 In- ternational Conference on Sensor Networks and Signal Processing (SNSP) (IEEE, 2018), pp. 386{391 14. A.A.A. Zamil, S. Hasan, S.M.J. Baki, J.M. Adam, I. Zaman, in 2019 International Conference on Robotics, Electrical and Signal Processing Techniques (ICREST) (IEEE, 2019), pp. 281{285 15. K. Venkataramanan, H.R. Rajamohan, arXiv preprint arXiv:1912.10458 (2019) 16. J.F. Gemmeke, D.P.W. Ellis, D. Freedman, A. Jansen, W. Lawrence, R.C. Moore, M. Plakal, M. Ritter, in Proc. IEEE ICASSP 2017 (New Orleans, LA, 2017) 17. S. Hershey, S. Chaudhuri, D.P.W. Ellis, J.F. Gemmeke, A. Jansen, C. Moore, M. Plakal, D. Platt, R.A. Saurous, B. Seybold, M. Slaney, R. Weiss, K. Wilson, inInternational Conference on Acoustics, Speech and Signal Processing (ICASSP) (2017). URL https://arxiv.org/abs/1609.09430 18. M. Lech, M. Stolar, C. Best, R. Bolia, Frontiers in Computer Science 2, 14 (2020) 19. I. Popovic, D. Culibrk, M. Mirkovic, S. Vukmirovic, in Proceedings of the 1st In- ternational Workshop on Multimodal Conversational AI (2020), pp. 31{38 20. K.S. Song, Y.H. Nho, J.H. Seo, D.s. Kwon, in 2018 15th International Conference on Ubiquitous Robots (UR) (IEEE, 2018), pp. 472{476 21. F. Burkhardt, A. Paeschke, M. Rolfes, W.F. Sendlmeier, B. Weiss, in Ninth Euro- pean Conference on Speech Communication and Technology (2005) 22. S.R. Livingstone, F.A. Russo, PloS one 13(5), e0196391 (2018) 23. M. Hasan, E. Rundensteiner, E. Agu, International Journal of Data Science and Analytics 7(1), 35 (2019) 24. T. Sun, A. Gaut, S. Tang, Y. Huang, M. ElSherief, J. Zhao, D. Mirza, E. Belding, K.W. Chang, W.Y. Wang, arXiv preprint arXiv:1906.08976 (2019) 25. J. Devlin, M.W. Chang, K. Lee, K. Toutanova, arXiv preprint arXiv:1810.04805 (2018) 26. R. Polikar, R. Polikar. Ensemble based systems in decision making. ieee circuit syst. mag. 6, 21{45 (2006) (2006) 27. K. Ethayarajh, arXiv preprint arXiv:2004.12332 (2020) 28. S. Poria, D. Hazarika, N. Majumder, G. Naik, E. Cambria, R. Mihalcea, arXiv preprint arXiv:1810.02508 (2018) 29. Y. Li, M. Yang, Z. Zhang, IEEE transactions on knowledge and data engineering 31(10), 1863 (2018)","cs.HC, cs.AI, I.2.6; I.2.7; I.5.4",Arxiv
15,AI Research Associate for Early-Stage Scientific Discovery,"Morad Behandish, John Maxwell III, Johan de Kleer",2022-02-02 17:05:52+00:00,http://arxiv.org/pdf/2202.03199v1,"Artificial intelligence (AI) has been increasingly applied in scientific activities for decades; however, it is still far from an insightful and trustworthy collaborator in the scientific process. Most existing AI methods are either too simplistic to be useful in real problems faced by scientists or too domain-specialized (even dogmatized), stifling transformative discoveries or paradigm shifts. We present an AI research associate for early-stage scientific discovery based on (a) a novel minimally-biased ontology for physics-based modeling that is context-aware, interpretable, and generalizable across classical and relativistic physics; (b) automatic search for viable and parsimonious hypotheses, represented at a high-level (via domain-agnostic constructs) with built-in invariants, e.g., postulated forms of conservation principles implied by a presupposed spacetime topology; and (c) automatic compilation of the enumerated hypotheses to domain-specific, interpretable, and trainable/testable tensor-based computation graphs to learn phenomenological relations, e.g., constitutive or material laws, from sparse (and possibly noisy) data sets.","AI Research Associate for Early-Stage Scientic Discovery Morad Behandish1‚àó, John T. Maxwell III1, Johan de Kleer1 1Palo Alto Research Center (PARC) 3333 Coyote Hill Road, Palo Alto, California 94304 (www.parc.com) Abstract Articial intelligence (AI) has been increasingly ap- plied in scientic activities for decades; however, it is still far from an insightful and trustworthy col- laborator in the scientic process. Most existing AI methods are either too simplistic to be useful in real problems faced by scientists or too domain-specialized (even dogmatized), stiing transformative discoveries or paradigm shifts. We present an AI research associate for early-stage scientic discovery based on (a) a novel minimally-biased ontology for physics-based model- ing that is context-aware, interpretable, and generaliz- able across classical and relativistic physics; (b) auto- matic search for viable and parsimonious hypotheses, represented at a high-level (via domain-agnostic con- structs) with built-in invariants, e.g., postulated forms of conservation principles implied by a presupposed spacetime topology; and (c) automatic compilation of the enumerated hypotheses to domain-specic, inter- pretable, and trainable/testable tensor-based compu- tation graphs to learn phenomenological relations, e.g., constitutive or material laws, from sparse (and possibly noisy) data sets. Introduction Data-driven AI methods have been applied extensively in the past few decades to distill nontrivial physics- based insights (scientic discovery) and to predict com- plex dynamical behavior (scientic simulation) (Stevens et al. 2020). Notwithstanding their eectiveness and eciency in classication, regression, and forecasting tasks, statistical learning methods can hardly ever eval- uate the soundness of a function t, explain the reasons behind observed correlations, or provide suciently strong guarantees to replace parsimonious and explain- able scientic expressions such as dierential equations (DE). Hybrid methods such as constructing \physics- informed/inspired/guided architectures for neural nets and loss functions that penalize both predication and DE residual errors (Raissi, Perdikaris, and Karniadakis ‚àóCorresponding Author, e-mail: moradbeh@parc.com. Copyright ¬©2021 for this paper by its authors. Use per- mitted under Creative Commons License Attribution 4.0 In- ternational (CC BY 4.0)2019; Wei and Chen 2019; Daw et al. 2020) and graph- nets based on control theory and combinatorial struc- tures (Cranmer et al. 2019; Seo and Liu 2019; Sanchez- Gonzalez et al. 2020) are all important steps towards ex- plainability; however, the built-in ontological biases in most machine learning (ML) frameworks prevent them from thinking outside the box to discover not only the known-unknowns, but also unknown-unknowns, during early stages of the scientic process. Contributions We present `cyber-physicist ( CyPhy ), our novel AI re- search associate for early-stage scientic process of hy- pothesis generation and initial (in)validation, grounded in the most invariable mathematical foundations of clas- sical and relativistic physics. Our framework distin- guishes itself from existing rule-based reasoning, sta- tistical learning, and hybrid AI methods by: (1) an ability to rapidly enumerate and test a diverse set of mathematically sound and parsimonious physical hypotheses, starting from a few basic assumptions on the embedding spacetime topology; (2) a distinction between non-negotiable mathematical truism (e.g., conservation laws or symmetries), that are directly implied by properties of spacetime, and phenomenological relations (e.g., constitutive laws), whose characterization relies indisputably on empiri- cal observation, justifying targeted use of data-driven methods (e.g., ML or polynomial regression); and (3) a \simple-rst strategy (following Occams razor) to search for new hypotheses by incrementally introduc- ing latent variables that are expected to exist based on topological foundations of physics. Background AI-assisted discovery of scientic knowledge has been an active area of research (Langley 1998) long before the rise of GPU-accelerated deep learning (DL). As computational power and data sources are becoming more ubiquitous, model-based, data-driven, and hybrid AI methods are playing an increasingly more important role in various scientic activities (Kitano 2016; Raghu and Schmidt 2020).arXiv:2202.03199v1  [cs.AI]  2 Feb 2022 Related eorts to our approach to scientic hypoth- esis generation and evaluation are mostly engineered after how humans approach scientic discovery, includ- ing sequential rule-based symbolic regression (Schmidt and Lipson 2009; Udrescu and Tegmark 2020), latent space representation learning via deep neural net auto- encoders (Iten et al. 2020; Nautrup et al. 2020) and strategic combinations of divide-and-conquer, unsuper- vised learning, simplication by penalizing description lengths in the loss function, and a posteriori unication by clustering (Wu and Tegmark 2019). While these and other eorts have shown great promise for elevating AI to the role of an autonomous, creative, and insightful collaborator that can oer human scientists a set of viable options to consider, their applications have re- mained limited to rather basic examples. On the more domain-specialized end, DL has been widely successful in classication, regression, and fore- casting tasks in scientic areas as diverse as turbu- lence (Miyanawala and Jaiman 2017; Wang et al. 2020), chaotic particle dynamics (Breen et al. 2020), molecu- lar chemistry and materials science (Butler et al. 2018), and protein engineering (Yang, Wu, and Arnold 2019), among others. Most specialized DL architectures are ad hoc, designed (by humans) using narrow, domain- specic, and (by construction) biased knowledge and expertise, stiing innovation and surprise. Moreover, DL models that successfully capture nontrivial patterns in data are often dicult to explain, lack guarantees even within their training space, and poorly extrapolate to out-of-training scenarios (Mehta et al. 2019). Train- ing such models for high-dimensional physics problems requires enormous data, which is either unavailable or too costly to obtain in many experimental sciences. The Cyber-Physicist We introduce an AI tool that can bridge multiple levels of abstraction, using a domain-agnostic representation scheme to express a wide range of mathematically viable physical hypotheses by exploiting common structural invariants across physics. Our approach entails: (a) dening a relatively unbiased ontology rooted in fun- damental abstractions that are common to all known theories of classical and relativistic physics; (b) constructing a constrained search space to enumer- ate viable hypotheses with postulated invariants, e.g., built-in conservation laws that are consistent with the presupposed spacetime topology; and (c) automatically assembling interpretable ML architec- tures for each hypothesis, to estimate parameters for phenomenological relations from empirical data. At the core of (a) is a powerful mathematical abstrac- tion of physical governing equations rooted in algebraic topology and dierential geometry (Frankel 2011). This abstraction leads to an ontological commitment to the relationship between physical measurement and basic properties of the embedding spacetime|but nothingmore, to leave room for innovation and surprise. This relationship has been shown to be responsible for the analogies and common structure across physics (Tonti 2013), exploited in (b), along with search heuristics based on analogical reasoning. Each viable hypothe- sis is automatically compiled to an interpretable \com- putation graph|tensor-based architecture, akin to a neural net with convolution layers to compute dieren- tiation/integration and (non)linear local operators for constitutive equations|for a given cellular decomposi- tion of embedding spacetime using well-established con- cepts from cellular homology (Hatcher 2001) and exte- rior calculus of dierential and discrete forms (Bott and Tu 1982; Hirani 2003) that are under-utilized in AI. Topological Foundations of Physics The key enabler of our AI framework is a simple type system for (a) physical variables , based on how they are measured in spacetime; and (b) physical relations , based on their (topological vs. metric) nature, and the variables they connect. Following the ground-breaking discoveries by a number of mathematicians, physicists, and electrical engineers (Kron 1963; Roth 1955; Branin 1966) towards a general network theory, Tonti explained the fascinating analogies across classical and relativis- tic physics in his pioneering life-long work (Tonti 2013) by reframing them in the language of cellular homol- ogy, leading to informal classication diagrams. Tonti diagrams can be formalized as directed graphs with strongly typed nodes for variables and edges for rela- tions. The variable are typed as (d 1;d2) forms based on their measurement on d 1 and d 2 dimensional sub- manifolds (d 1 and d 2 cells) of space and time, respec- tively. For instance, to model heat transfer in (3+1)D spacetime, temperature is typed as a (0 ;1) form be- cause it is measured at spatial points (0  cells) and during temporal intervals (1  cells), whereas heat ux is typed as a (2 ;1) form because it is measured over spatial surfaces (2  cells) and during temporal intervals (1 cells). In classical calculus, both of these variables reduce to scalar and vector elds, probed at spatial points and at temporal instants, to write down compact pointwise DEs; however, keeping track of the topological and geometric character of DEs is key to a deeper un- derstanding of how known physical theories work, and building on top of it for AI-assisted discovery of new physics grounded in mathematical foundations. The spatiotemporal cells (or embedding manifolds) are further classied as primary or secondary, endowed with inner or outer orientations, respectively, depend- ing on how the variables change sign in a hypotheti- cal reversal of spacetime orientation (Mattiussi 2000). The cells are related by topological duality (Fig. 1 (a)). For example, an inner-oriented curve (1  cell,1) sit- ting in primary space, along which temperature varia- tions are measured, is dual to an outer-oriented surface (2 cell,e2) sitting in secondary space, over which heat ux is measured, and the two cells are spatially regis- tered and consistently oriented, if we embed them in Figure 1: A topology-aware representation for physics (Tonti 2013): (a) variables associated with spatial and temporal cells of various dimensions give rise to primary forms and secondary forms (also called pseudo-forms); (b) resulting in 32 possible types for spatio-temporal forms, and an underlying structure for fundamental theories of physics. two co-located \copies of 3D space. The relations among variables on the Tonti diagrams are typed based on the pairs of variables they relate, as well as the nature of the relation itself: ‚Ä¢Topological relations map spatiotemporal forms to forms of one higher dimension in space or time via in- cidence relations, and are responsible for propagation of information in spacetime through incident cells. ‚Ä¢Metric relations locally map forms dened over dual cells to one another based on phenomenological prop- erties, spatial lengths, and temporal durations, and are responsible for local distortion of information. ‚Ä¢Algebraic relations are in-place, i.e., map a given form to another from of the same type, and can be used to capture initial/boundary conditions, external source/sink terms, or cross-physics couplings between variables of the same type on dierent diagrams. The relations are drawn in Fig. 1 as vertical arrows, horizontal (or horizontal-diagonal) arrows, and loops (1 cycles), respectively. The interpretation of these re- lations to symbolic or numerical operations depends on the choice of a cellular decomposition of spacetime on which they operate. For example, using a contin- uum spacetime with innitesimal cells, the variables are viewed as dierential forms and the topological op- erators on them are interpreted as exterior derivatives (Bott and Tu 1982). In elementary calculus, these oper-ators give rise to gradient, curl, and divergence in space and partial derivative in time in terms of scalar and vec- tor elds that are proxy to these forms, leading to par- tial DEs (PDEs). In a discrete (or semi-discrete) setting, on the other hand, the same diagram can be used to produce integral (or integro-dierential) equations that capture the same fundamental conservation and consti- tutive realities, where the variables are viewed as co- chains , also called discrete forms (or mixed forms, e.g., discrete in space, dierential in time, or vice versa) and the topological operators become co-boundary opera- torsthat are fundamental in cellular homology (Hatcher 2001). For example, using a semi-discretization in space with integral quantities associated with 0  , 1 , 2  and 3 cells on a pair of staggered unstructured meshes in 3D, while keeping time as a continuum, the semi- discrete form of the heat equation as a system of ordi- nary DEs (ODEs) (Fig. 2 (a)). Upon discretization of time, one obtains algebraic equations that can be solved or parameter estimated via tensor-based ML. It is important to note that 3D meshes in space and 1D time-stepping are not the only ways to provide a combinatorial topology to interpret Tonti diagrams in a discrete setting. Another example is a directed graph representation of lumped-parameter networks such as system models in Modelica or electrical circuits in Spice . The variables in this case are associated with nodes, edges, and meshes (i.e., primitive cycles) and incidence Figure 2: Tonti diagrams are recipes to generate governing equations in dierent contexts, dened by a continuum, discrete, or semi-discrete setting and a topological embedding of the variables based on how they are measured. The conservation laws in terms of co-boundary operators result directly from assumed properties of space (or spacetime), while constitutive relations must be learned from data (e.g., via regression/ML). relations are obtained from graph connectivity and edge directions. The same topological operator that leads to a spatial divergence, discretized by a sum of uxes on the incident faces of a volume in a 3D mesh, also leads to a superposition of forces on interacting plan- ets, sum of currents in/out of junctions in electrical cir- cuits, and superposition of torques on kinematic chains (Fig. 2 (b, c, d)). Both ODEs and PDEs and their in- tegral or integro-dierential forms upon full or semi- discretization can be captured with the same (abstract) operators, and Tonti diagrams serve as recipes to com- pose them to generate governing equations. Figure 3 shows a few other examples of Tonti dia- grams for fundamental theories in classical and rela- tivistic physics. The dierences amount to (a) topolog- ical and metric context; (b) relevant variables and their dimensions/units; and (c) phenomenological relations. An Ontology for Scientic Process We present a novel representation, called `interaction networks ( I-net s), based on a generalization of Tonti diagrams that is expressive and versatile enough to ac- commodate novel scientic hypotheses, while retaining a basic commitment to philosophical principles such as parsimony (Occams razor), measurement-driven clas- sication of variables, and separation of non-negotiable mathematical properties of spacetime (homology) from domain-specic empirical knowledge (phenomenology). Data science is employed to help only with the latter. ‚Ä¢We conceptualize three levels of abstraction relatedby inheritance: abstract (symbolic) I-net s!discrete (cellular) I-net s!numerical (tensor-based) I-net s. ‚Ä¢At each level, an I-net instance is contextualized by user-dened assumptions on spacetime topology, se- mantics of physical quantities, and structural restric- tions on allowable diagrams based on analogical rea- soning and domain-specic insight (if available). ‚Ä¢Every I-net instance distinguishes between topologi- cal and metric operators; however, it has additional degrees of freedom (beyond Tonti diagrams) for the latter to allow for phenomenological relations among variables that may not be dual to each other. The latter is motivated by the observation that some existing middle-ground theories use phenomenological relations to capture a combination of topological and metric aspects. We dene an abstract (symbolic) I-net on a sin- gleD space as a nite collection of primary and/or secondary co-chain complexes that are inter-connected by phenomenological links, as shown in Fig. 4 (a). Each co-chain complex is a sequence of (symbolic) d forms related by (symbolic) co-boundary operators from d forms to (d + 1)  forms (0dD). The interpretation of d !(d + 1) maps depends on the em- bedding dimension D; for instance, if D= 1 the only option for the input is d = 0 leading to a simple partial derivative (0!1), whereas for D= 3, we can have d = 0;1;2 leading to gradient (0 !1), curl (1!2), and divergence (2 !3) operations, respectively. Figure 3: Tonti diagrams capture the common structure responsible for analogies across classical and relativistic physics with a clear distinction between topological and phenomenological relations that follow certain rules. Figure 4: I-net s are generalizations of Tonti diagrams for nite topological products of nite-dimensional spaces with relaxed rules for feasible phenomenological links to accomodate middle-ground theories. These sequences may represent dierent (mechanical, electrical, thermal, etc.) domains of physics. Although, for most known physics, each domains theory appears as one pair of (primary and secondary) sequences in tan- dem, connected by horizontal (or horizontal-diagonal) constitutive relations leading to Tonti diagrams, we do not make any such restriction when looking for new the- ories. The cross-sequence links can thus represent both single-physics constitutive relations and mutli-physics coupling interactions. Conservation laws, on the other hand, are represented by a balance between the output of a topological operator and an external source/sink, the latter being represented by a loop. It is often more convenient to dene product spaces (e.g., separate 3D space and 1D time, as opposed to 4D spacetime) in which conservation laws are stated as sums of incoming topological relations being balanced against an external source/sink. To accommodate such representations, we dene abstract (symbolic) I-net s on a product of a D1 space and a D2 space as multi- sequences of co-chains, connected by phenomenological links, as before. It is possible to form 22= 4 possible such multi-sequences with various orientation combina- tions, two of which lead to so-called mechanical and eld theories (Tonti 2013), shown in Fig. 1 for (3+1)D space- time and repeated in Fig. 4 (b) for higher-dimensionalpairs of abstract topological spaces. This construction is generalized to products of more than two spaces in a straightforward combinatorial fashion. Based on the topological context, the semantics for co-boundary operators is unambiguously determined by the dimensions of the two variables (i.e., co-chains) they relate. However, phenomenological links require specify- ing a parameterization of possibly nonlinear, in-place, and purely metric relations they represent, using un- known parameters that must be learned from data. Once one or more hypotheses are specied in the lan- guage of abstract (symbolic) I-net s with unknown phe- nomenological parameters (e.g., thermal conductivity in the earlier heat transfer example), the parameters can be optimized to t the data and the regression error can be used to evaluate the tness of hypotheses. A Search for Viable Hypotheses Having dened a combinatorial representation of viable hypotheses that are partially ordered in terms of com- plexity, the next step is to generate and test the hy- potheses in a \simple-rst fashion. The search space is dened by a directed acyclic graph (DAG) whose nodes (i.e., `states) represent symbolic I-net instances. The edges (i.e., state transitions) represent generating a new I-net structure by incrementally adding complexity to Figure 5: The search space for the dynamics of a pendulum in 1D time. The complete hypotheses (yellow nodes) correspond to I-net structures that pose new nontrivial equations to be tested against data, whereas incomplete hypotheses (white nodes) have \dangling branches that are completed in their child states. the parent state. Each action can be one or composition of (a) dening a new symbolic variable, in an existing co-chain complex, by applying a topological operator to an existing variable; (b) dening a new variable in a latent co-chain complex; and (c) adding phenomenolog- ical links of prescribed form and unknown parameters, connecting existing variables. The search is guided by a loss function determined by how well the hypotheses represented by these I-net structures explain a given dataset. The algorithm may also be equipped with user- specied heuristic rules to prune the search space or prioritize paths that are perceived as \more likely due to structural analogies with existing theories. The input to the search algorithm includes the bare minimum contextual information such as the assumed underlying topology, a preset number of physical do- mains, and the types of measured variables, e.g., spa- tiotemporal associations, tensor ranks and shapes, and dimensions/units. The search starts from an \initial I-net instance (i.e., the `root) that embodies only measured variable(s) with no initial edges except the ones that are asserted a priori, e.g., loops for ini- tial/boundary conditions or source terms, if applicable. The spatio-temporal types and physical semantics for these variables are provided by the experimentalist. For example, consider a simple pendulum (Fig. 5 (a)). We have only 1D time, leading to a topological space of inter-connected time instants 0;e0=0+=2and time intervals 1= (0;0+);e1= (e1;e1+) to which data may be associated. Suppose we are given time series data for angular position (0). The ini- tialI-net instance is a single symbolic variable for this 0 form, which can be dierentiated only once in pri- mary 1D time to obtain angular velocity as a 1  form: (0)!!(1) =[](1) at the root of the search DAG (Fig. 5 (b)). The DAG is expanded by adding new phe- nomenological links, either between two existing vari- ables, or between an existing variable and one in a newly added latent co-chain sequence (Fig. 5 (c)). In this ex- ample, the hypotheses are numbered H-00 (the root) through H-15, enumerating all possible I-net structuresformed by at most one latent co-chain complex in 1D time. The user can specify the maximum number of la- tent variables that the algorithm may consider, to keep the search tractable. Not every introduction of new variables or relations makes nontrivial statements about physics. For exam- ple, the hypothesis H-01 produces a new variable typed as a 1 pseudo-form T(e1) =f1((e1)), where the  operator takes e1to its dual:(e0;e0+) =e0+=2. However, until this new variable is reached through another path to close a cycle and pose a nontriv- ial equation, we do not have a complete hypothesis to (in)validate against data. Further down the search DAG, H-08 denes a new variable typed as a 0  pseudo- formL(e0) =f2(!(e0)) wheree0= (e0 =2;e0+=2). The co-boundary operation L(e0)!T(e1) =[L](e1), closes the cycle and produces a commutative diagram (Fig. 5 (c)) leading to: EH-08(;f1;f2) =f1() [f2([])] = 0; (1) wheref1;f2are selected from restricted function spaces F1;F2to avoid overtting (e.g., parameterized by a lin- ear combination of domain-aware basis functions) and their parameters must be determined from data to min- imize the residual error EH-08over the entire period of data collection. A loss function can, for example, be dened as a mean-squared-error (MSE) to penalize vi- olations uniformly over the time series period: LossH-08= min f12F1min f22F2EH-08(;f1;f2) e1; (2) wherekk e1is anL2 norm computed as a tempo- ral integral, i.e., sum of squared errors E2 H-08(;f1;f2) over time intervals e1where (1) is evaluated. In this example, it turns out that the best t is achieved with f1() =c1sinandf2(!) =c2!where c2=c1= g=r. The latent variables L(e0) andL(e0) turn out to be the familiar notions of angular momentum and torque, respectively, although the software need not know any- thing about them to generate and test what-if scenarios about their existence and correlations with angular po- sition and velocity. Hence, interpretability of the discov- ered relationships by a human scientist does not require Figure 6: The hypotheses H-04 and H-08 of Fig. 5 are enumerated and visualized by the software and evaluated against data (split 0.7-0.3 for training/testing). Both energy (rst-order) and and torque (second-order) forms of the governing equation are discovered without human intervention. The former was quite unexpected, since its I-net structure does not correspond to a Tonti diagram. The latter has a larger error due to nite dierence discretization. predisposing the AI associate to such interpretations, enabling unexpected discoveries. In general, every state in the search DAG can be classied as complete or incomplete hypotheses. The former are I-net structures with \dangling branches that carry no new nontrivial information in addition to their parent states. Every time such a branch is turned into one or more closed cycles by adding enough new variables and/or relations, a new constraint is hypothe- sized that can be evaluated against data. When adding new dangling branches to the I-net structure, the search algorithm prioritizes actions that produce I-net struc- tures similar to existing Tonti diagrams by assigning a penalty factor to every violation of the common struc- ture (e.g., diagonal phenomenological links connecting non-dual cells). The loss for complete hypotheses can be computed as the sum of penalties for the I-net structure and the sum of residual errors for each of the indepen- dent constraints, implied by converging paths, multi- plied by use-specied relative weight of the penalties and errors. We use an A* algorithm to search the space of hypotheses. Since we cannot compute the error for in- complete hypotheses, we can only prune them when the increase in their penalty is large enough that it would fail even if it had no error at all. Generating Symbolic Expressions One of the practical features of our implementation in Python is its ability to automatically convert I-net in- stances to symbolic DE expressions in SymPy , when the co-boundary operators are interpreted in a dierential setting for innitesimal cells ( !0+); for example, equation (1) can be rewritten as a nonlinear ODE: EH-08(;f1;f2) =f1() @ @th f2 _(t)i : (3) As a result, the generated hypotheses can be evalu- ated using any number of existing ML or symbolic regression frameworks that standardize on ODE/PDEinputs. For example, using non-orthogonal basis func- tionsf1;x;x2;sinx;cosxgto span both function spaces F1;F2, we can substitute for both symbolic functions: f1() :=c1 0+c1 1+c1 22+c1 3sin+c1 3cos; (4) f2(_) :=c2 0+c2 1_+c2 2_2+c2 3sin_+c2 3cos_; (5) into (3) to obtain a symbolic second-order (non)linear ODE in SymPy . Next, the software performs algebraic simplication to identify equivalence classes of hypothe- ses that, despite coming from dierent I-net structures, lead to the same ODE upon dierential interpretation of the I-net s. For ODEs which, after simplication, are linear combinations of nonlinear (dierential/algebraic) terms that are computable from data, we can apply symbolic regression to estimate the coecients from data; for example, we tried LASSO-regularized least- squares regression in PDE-FIND (Rudy et al. 2017) where each term involving a derivative is evaluated using nite dierence or polynomial approximation, whose results are shown in Fig. 6. There are at least two issues with this approach: First, more sophisticated regression or nonlinear pro- gramming methods are needed if the DE has terms that have nested nonlinear functions, i.e., cannot be repre- sented as a linear combination of nonlinear terms be- cause of unknown coecients embedded within each term. We solve this problem by directly mapping I-net structures to computation graphs in PyTorch , skipping dierential interpretation to symbolic DEs altogether. Second, numerical approximation of symbolic PDEs is a tricky business, as the discrete forms (in 3D space) may not obey the conservation principles postulated by the I-net structure after such approximations. It is dicult to separate discretization errors from model- ing errors and noise in data. One of the key advan- tages of I-net s is the rich geometric information in their type system that is fundamental to physics-compatible and mimetic discretization schemes (Koren et al. 2014; Palha et al. 2014; Lipnikov, Manzini, and Shashkov 2014) that ensure conservation laws are satised exactly as a discrete level, regardless of spatial mesh or time- step resolutions. Such information is lost upon conver- sion to symbolic DEs. Retaining this information is even more important when dealing with noisy data, because discrete dierentiation of noisy data (e.g., via nite dif- ference or polynomial tting) can substantially amplify the noise. The good news is that we can directly interpret the same I-net instance in integral form to generate equa- tions over larger regions in space and/or time, to make the computations more resilient to noise. For example, in the heat equation, the discrete divergence of heat ux over a single 3 cell is replaced by a ux integral over a collection of 3 cells, and is equated against the volu- metric intgeral of internal energy within the collection. The cancellation of internal surface uxes (discrete form of Gauss divergence theorem) is built into the interpre- tation based on cellular homology. The integrals can be computed using higher-order integration schemes, e.g., using polynomial interpolation with undertting to l- ter the noise. Further details on directly and automatically map- ping the abstract (symbolic) I-net structures to dis- crete (cellular) and numerical (tensor-based) I-net in- stance (e.g., computation graphs in PyTorch ), learning scale-aware phenomenological relations, and physics- compatible discretization and de-noising will be pre- sented in a full paper. Real-World Scientic Discovery Figures 7 and 8 illustrate the application of our AI approach to an elastodynamics challenge problem pro- vided by AFRL in the course of the DARPA AI Re- search Associate (AIRA) program that supported the development of CyPhy . The input is noisy data ob- tained by ultrasound imaging, measured in (2+1)D spacetime over the surface of several material samples with heterogeneous properties. Figure 7 illustrates the search DAG along with a number of I-net structures for viable hypotheses, each postulating the relevance of a conservation law and ex- istence of a few phenomenological relations. Figure 8 shows the ranking of these hypotheses based on their residual errors when tested against data. Each hypothe- sis can be interpreted in dierential, integral, or integro- dierential forms. The results demonstrate that inte- gral forms applied to wide spatial and temporal neigh- borhoods (of25 grid elements along each axis) with high-order polynomial undertting (up to cubic in each coordinate), resulting in a length/time scale-aware def- inition of (nonlocal) phenomenological relations as well as physics-compatible (i.e., mimetic) discretization and de-noising, are preferable to strictly local numerical schemes such as nite dierence discretization.Conclusion Statistical learning methods, despite their accuracy and eciency in narrow regimes for which they are carefully engineered, are not sucient to independently acquire deep understandings of the scientic problems they are applied to. Human scientists continue to handle most of knowledge-centric aspects of the scientic process based on domain-specic insight, experience, and expertise. Our novel approach to early-stage scientic hypoth- esis generation and testing demonstrates a path for- ward towards context-aware, generalizable, and inter- pretable AI for scientic discovery. Our AI associate (CyPhy ) distinguishes between non-negotiable math- ematical truism, implied by the relationship between measurement and presupposed spacetime topology, and phenomenological realities that are at the mercy of em- pirical learning. Data-driven regression is targeted at the latter to enable distilling governing equations from sparse and noisy data, while providing deep insights into the mathematical foundations. Acknowledgment This material is based upon work supported by the De- fense Advanced Research Projects Agency (DARPA) under Agreement No. HR00111990029. References Bott, R.; and Tu, L. W. 1982. Dierential Forms in Alge- braic Topology . Springer Science & Business Media. Branin, F. H. 1966. The Algebraic-Topological Basis for Network Analogies and the Vector Calculus. In Symposium on Generalized Networks , 453{491. Polytechnic Institute of Brooklyn, NY. Breen, P. G.; Foley, C. N.; Boekholt, T.; and Zwart, S. P. 2020. Newton versus the Machine: Solving the Chaotic Three-body Problem Using Deep Neural Networks. Monthly Notices of the Royal Astronomical Society 494(2): 2465{ 2470. Butler, K. T.; Davies, D. W.; Cartwright, H.; Isayev, O.; and Walsh, A. 2018. Machine Learning for Molecular and Materials Science. Nature 559(7715): 547{555. doi:10.1038/ s41586-018-0337-2. Cranmer, M. D.; Xu, R.; Battaglia, P.; and Ho, S. 2019. Learning Symbolic Physics with Graph Networks. arXiv preprint arXiv:1909.05862 . Daw, A.; Thomas, R. Q.; Carey, C. C.; Read, J. S.; Appling, A. P.; and Karpatne, A. 2020. Physics-Guided Architecture (PGA) of Neural Networks for Quantifying Uncertainty in Lake Temperature Modeling. In Proceedings of the 2020 SIAM International Conference on Data Mining , 532{540. Society for Industrial and Applied Mathematics (SIAM). Frankel, T. 2011. The Geometry of Physics: An Introduc- tion. Cambridge University Press. Hatcher, A. 2001. Algebraic Topology . Cornell University. Hirani, A. N. 2003. Discrete Exterior Calculus . Ph.D. dis- sertation, California Institute of Technology. Figure 7: The search DAG and a number of viable hypotheses to explain ultrasound waveeld in metal parts. Figure 8: The AI associate discovers the (integral form) of the wave equation as well as the proper length/time scale at which the heterogeneous material properties (in this case, speed of sound) must be dened. Iten, R.; Metger, T.; Wilming, H.; Del Rio, L.; and Ren- ner, R. 2020. Discovering Physical Concepts with Neural Networks. Physical Review Letters 124(1): 010508. Kitano, H. 2016. Articial Intelligence to Win the Nobel Prize and Beyond: Creating the Engine for Scientic Dis- covery. AI Magazine 37(1): 39{49. Koren, B.; Abgrall, R.; Bochev, P.; Frank, J. E.; and Perot, B. 2014. Physics-Compatible Numerical Methods. Journal of Computational Physics 257(Part B): 1039{1039. Kron, G. 1963. Diakoptics: The Piecewise Solution of Large- Scale Systems , volume 2. MacDonald. Langley, P. 1998. The Computer-Aided Discovery of Scien- tic Knowledge. In International Conference on Discovery Science , 25{39. Springer. Lipnikov, K.; Manzini, G.; and Shashkov, M. 2014. Mimetic Finite Dierence Method. Journal of Computational Physics 257: 1163{1227. Mattiussi, C. 2000. The Finite Volume, Finite Element, and Finite Dierence Methods as Numerical Methods forPhysical Field Problems. Advances in Imaging and Electron Physics 113: 1{147. Mehta, P.; Bukov, M.; Wang, C. H.; Day, A. G. R.; Richard- son, C.; Fisher, C. K.; and Schwab, D. J. 2019. A High-Bias, Low-Variance Introduction to Machine Learning for Physi- cists. Physics Reports 810: 1{124. Miyanawala, T. P.; and Jaiman, R. K. 2017. An E- cient Deep Learning Technique for the Navier-Stokes Equa- tions: Application to Unsteady Wake Flow Dynamics. arXiv Preprints ISSN 0264-6021. doi:10.1016/j.eswa.2008.08.077. Nautrup, H. P.; Metger, T.; Iten, R.; Jerbi, S.; Trenkwalder, L. M.; Wilming, H.; Briegel, H. J.; and Renner, R. 2020. Op- erationally Meaningful Representations of Physical Systems in Neural Networks. arXiv preprint arXiv:2001.00593 . Palha, A.; Rebelo, P. P.; Hiemstra, R.; Kreeft, J.; and Ger- ritsma, M. 2014. Physics-Compatible Discretization Tech- niques on Single and Dual Grids, with Application to the Poisson Equation of Volume Forms. Journal of Computa- tional Physics 257: 1394{1422. Raghu, M.; and Schmidt, E. 2020. A Survey of Deep Learn- ing for Scientic Discovery. arXiv preprint arXiv:2003.11755 . Raissi, M.; Perdikaris, P.; and Karniadakis, G. E. 2019. Physics-Informed Neural Networks: A Deep Learning Framework for Solving Forward and Inverse Problems In- volving Nonlinear Partial Dierential Equations. Journal of Computational Physics 378: 686{707. Roth, J. P. 1955. An Application of Algebraic Topology to Numerical Analysis: On the Existence of a Solution to the Network Problem. Proceedings of the National Academy of Sciences 41(7): 518{521. Rudy, S. H.; Brunton, S. L.; Proctor, J. L.; and Kutz, J. N. 2017. Data-Driven Discovery of Partial Dierential Equa- tions. Science Advances 3(4): e1602614. Sanchez-Gonzalez, A.; Godwin, J.; Pfa, T.; Ying, R.; Leskovec, J.; and Battaglia, P. W. 2020. Learning to Simu- late Complex Physics with Graph Networks. arXiv preprint arXiv:2002.09405 . Schmidt, M.; and Lipson, H. 2009. Distilling Free-Form Nat- ural Laws from Experimental Data. Science 324(5923): 81{ 85. Seo, S.; and Liu, Y. 2019. Dierentiable Physics-Informed Graph Networks. arXiv preprint arXiv:1902.02950 . Stevens, R.; Taylor, V.; Nichols, J.; Maccabe, A. B.; Yelick, K.; and Brown, D. 2020. AI for Science. Technical report, Argonne National Laboratory(ANL). Tonti, E. 2013. The Mathematical Structure of Classical and Relativistic Physics: A General Classication Diagram . Modeling and Simulation in Science, Engineering and Tech- nology. Birkh auser. ISBN 9781461474210. Udrescu, S. M.; and Tegmark, M. 2020. AI Feynman: A Physics-Inspired Method for Symbolic Regression. Science Advances 6(16): eaay2631. Wang, R.; Kashinath, K.; Mustafa, M.; Albert, A.; and Yu, R. 2020. Towards Physics-Informed Deep Learning for Tur- bulent Flow Prediction. In Proceedings of the 26th ACM SIGKDD International Conference on Knowledge Discovery & Data Mining , 1457{1466. Wei, Z.; and Chen, X. 2019. Physics-Inspired Convolutional Neural Network for Solving Full-Wave Inverse Scattering Problems. IEEE Transactions on Antennas and Propaga- tion 67(9): 6138{6148. Wu, T.; and Tegmark, M. 2019. Toward an AI Physicist for Unsupervised Learning. arXiv preprint arXiv:1810.10525 . Yang, K. K.; Wu, Z.; and Arnold, F. H. 2019. Machine- Learning-Guided Directed Evolution for Protein Engineer- ing. Nature Methods 16(8): 687{694. doi:10.1038/s41592- 019-0496-6","cs.AI, cs.LG, cs.SC",Arxiv
16,Do it Like the Doctor: How We Can Design a Model That Uses Domain Knowledge to Diagnose Pneumothorax,"Glen Smith, Qiao Zhang, Christopher MacLellan",2022-05-24 15:42:43+00:00,http://arxiv.org/pdf/2205.12159v1,"Computer-aided diagnosis for medical imaging is a well-studied field that aims to provide real-time decision support systems for physicians. These systems attempt to detect and diagnose a plethora of medical conditions across a variety of image diagnostic technologies including ultrasound, x-ray, MRI, and CT. When designing AI models for these systems, we are often limited by little training data, and for rare medical conditions, positive examples are difficult to obtain. These issues often cause models to perform poorly, so we needed a way to design an AI model in light of these limitations. Thus, our approach was to incorporate expert domain knowledge into the design of an AI model. We conducted two qualitative think-aloud studies with doctors trained in the interpretation of lung ultrasound diagnosis to extract relevant domain knowledge for the condition Pneumothorax. We extracted knowledge of key features and procedures used to make a diagnosis. With this knowledge, we employed knowledge engineering concepts to make recommendations for an AI model design to automatically diagnose Pneumothorax.","Do it Like the Doctor: How We Can Design a Model That Uses Domain Knowledge to Diagnose Pneumothorax Glen Smith1, Qiao Zhang1and Christopher J. MacLellan Drexel University, Philadelphia, Pennsylvania, 19104, United States 1These authors contributed equally to this work. Abstract Computer-aided diagnosis for medical imaging is a well-studied field that aims to provide real-time decision support systems for physicians. These systems attempt to detect and diagnose a plethora of medical conditions across a variety of image diagnostic technologies including ultrasound, x-ray, MRI, and CT. When designing AI models for these systems, we are often limited by little training data, and for rare medical conditions, positive examples are difficult to obtain. These issues often cause models to perform poorly, so we needed a way to design an AI model in light of these limitations. Thus, our approach was to incorporate expert domain knowledge into the design of an AI model. We conducted two qualitative think-aloud studies with doctors trained in the interpretation of lung ultrasound diagnosis to extract relevant domain knowledge for the condition Pneumothorax. We extracted knowledge of key features and procedures used to make a diagnosis. With this knowledge, we employed knowledge engineering concepts to make recommendations for an AI model design to automatically diagnose Pneumothorax. Keywords Think-aloud, Pneumothorax, Domain Knowledge 1. Introduction When building artificial intelligence (AI) models with limited data, we are often concerned with issues of low performance. This may be due to not having enough data for the model to effectively learn the relationships between the input and the output. Another example may be over-fitting, where the model learns the noise and nuance of the training data well, but performs poorly on unseen data. Further, for many classification tasks, we often lack sufficiently balanced datasets, which additionally leads to lowered model performance. One such way to mitigate some of these issues is by incorporating subject matter expert knowledge, called ‚Äúdomain knowledge‚Äù [ 1], into the design of an AI model. In essence, we can ask an expert ‚Äúhow would you accomplish this task?‚Äù and extract key steps, milestones, and outcomes that we should consider in the model design. This approach allows us to build more targeted and robust models that focus on specific, expert-defined features. In this research, we In A. Martin, K. Hinkelmann, H.-G. Fill, A. Gerber, D. Lenat, R. Stolle, F. van Harmelen (Eds.), Proceedings of the AAAI 2022 Spring Symposium on Machine Learning and Knowledge Engineering for Hybrid Intelligence (AAAI-MAKE 2022), Stanford University, Palo Alto, California, USA, March 21‚Äì23, 2022. /envelope-opengs675@drexel.edu (G. Smith); qz99@drexel.edu (Q. Zhang); cm3786@drexel.edu (C. J. MacLellan) ¬©2022 Copyright for this paper by its authors. Use permitted under Creative Commons License Attribution 4.0 International (CC BY 4.0). CEUR Workshop Proceedingshttp://ceur-ws.org ISSN 1613-0073 CEUR Workshop Proceedings (CEUR-WS.org)arXiv:2205.12159v1  [cs.AI]  24 May 2022 present two studies whose aims are to qualitatively extract domain knowledge from physicians in the POCUS (point-of-care ultrasound) domain for the task of detecting and diagnosing Pneumothorax. An AI system capable of diagnosing Pneumothorax has many applications, one of which is assisting medics in the military. Battlefield medics are often required to make real-time diagnoses of multiple conditions in stressful, high-stakes environments. Ultrasound is one of the recommended ways for these medics to diagnose Pneumothorax, but training to interpret ultrasounds can be resource heavy. Thus, there is a need for automated support systems that can assist in making these diagnoses. Previous studies show that incorporating expert knowledge into an AI model‚Äôs design can produce higher and more robust performance. [ 2,3,4]. In this work, we analyze the process subject matter experts use to diagnose Pneumothorax in lung ultrasound videos and determine which features and artifacts in the videos are considered, the order in which they are considered, and the relative importance of these features. We considered two main model design inspirations for our studies, robustness and user confidence. With a limited training dataset (62 ultrasound videos in our case), it is difficult for a machine learning model to extract meaningful distinctions between features to make an accurate diagnosis. To address this issue, we aimed to extract two kinds of domain knowledge from our medical experts: knowledge of key features and inference knowledge. Having a method to elicit important features from experts lets us develop a model design that hones in on those attributes, which creates a more robust model [ 5]. Further, by extracting the procedures for diagnosing Pneumothorax, we can similarly develop inference rules to incorporate into a model. This domain knowledge should result in AI models that require fewer training instances, less training time, and provide higher performance overall. In this paper, we first provide some background on cognitive task analysis and the think-aloud method, which is the type of cognitive task analysis we employ for our work. We then present a brief overview of the POCUS domain to establish the context and need for AI technology to diagnose Pneumothorax. Next, we present two studies, that outline how we elicited domain knowledge from two medical experts and the results of these sessions. In the discussion, we provide recommendations for the design of an AI diagnosis system based on our findings from these studies. Finally, we discuss related works, our unique contributions to the space of knowledge engineering for designing AI models to help diagnose Pneumothorax, and conclude with ongoing and future work. 2. Background 2.1. Cognitive task analysis Cognitive Task Analysis (CTA) is the process of extracting knowledge, processes, and patterns from individuals as they attempt to evaluate a scenario in a particular domain or problem space [6]. With this analysis, researchers can evaluate the cognitive load involved in performing a task, determine the knowledge and procedures an individual uses to complete a task, and the knowledge required to determine when a task is complete. Most often, subject matter experts are the focus of such studies as they usually contain the breadth of knowledge required to navigate the problem space or their respective domains. However, in some cases it may be desirable to study how a novice might tackle a similar problem and what errors are present in their processes. The use of the CTA method is therefore to develop systems and processes based on expert and/or novice knowledge. Some examples of these systems and processes include training programs[7], and medical procedures [8]. There are many CTA methods used to facilitate knowledge engineering and each varies in terms of their knowledge representation, how information is extracted from participants, and the types of tasks the methods work best for. These facets are further divided into their own categories of methods for knowledge elicitation and representation [ 9]. When used for designing training systems, CTA is used two-fold, to first define the difficulty of the task in the problem space, determine common errors encountered by expert in the field, and produce ways to mitigate those errors [ 10]. This problem formulation stage focuses on the theory of the task and the cognitive processes required by participants to address it. The next stage examines the application of stage one, to determine technical requirements, reasons for performance issues, how a system might solve them, and what computational tools to employ [10]. Some specific CTA methodologies employed for knowledge elicitation include unstructured interviews, critical decision analyses, direct observation and questioning, and simulations [ 9]. In these approaches, researchers will either ask participants a series of questions, allowing for feedback and revising of further questions, or observe participants as they attempt to solve a problem or walk through a process, usually with some verbal component from either party. Often, a combination of some of these methods produce a robust qualitative method for extracting domain knowledge from subject matter experts. According to [ 6] the CTA method is most effectively employed when the analysis contains ‚Äúcomplex, ill-structured tasks‚Äù that may have multiple solutions, ‚Äúdynamic, uncertain, and real-time environments‚Äù that the individual must navigate, or some level of multi-tasking where decisions are based on a variety of simultaneous conditions. Furthermore, they go on to cite that CTA is appropriate when the problem consists of complex perceptual learning and pattern recognition. All of these conditions apply to our use case, where battlefield medics must make real-time diagnoses of Pneumothorax in often stressful environments. Battlefield medics are often multi-tasking to tend to various injuries, and the constantly changing environment lends itself to uncertainty and places a load on the medics to make real-time decisions. This makes CTA a suitable method to extract physician knowledge for the purpose of developing an intelligent AI system to diagnose Pneumothorax. As explored in our two studies conducted with our physicians, we employed the Think-Aloud CTA strategy to inform the design of an AI model to diagnose Pneumothorax. 2.2. Think-Aloud Analysis Think Alouds (TAs) are one specific type of cognitive task analysis that asks participants to verbalize each step in their problem-solving process [ 11]. In general, researchers conduct one- on-one sessions where they give a participant a problem to solve. The participant outlines their solution to the problem either ‚Äúretrospectively‚Äù ‚Äì thinking back on a previously solved problem ‚Äì or ‚Äúconcurrently‚Äù, where the problem is solved real-time with an accompanied verbalization [12]. Since the verbalization, or the ‚Äúverbal report‚Äù, is the output data of the study, the study is transcribed and often recorded for later review. Transcripts are then analyzed to extract entities, concepts, decision flows, and more. We make use of the Think-Aloud method for our studies for a myriad of reasons. Compared to other qualitative methods, the Think-Aloud method has been shown to be robust against various ‚Äúerrors‚Äù that would otherwise invalidate the data obtained from the process [ 13]. More precisely, Someren et. al. state that the act of verbalization can help resolve memory errors and allow for a slower, yet more complete cognitive flow. Think-Aloud studies are best utilized in scenarios of small participant sample sizes and simulation environments, where a participant works through a controlled ‚Äúreal-world‚Äù example of the problem [11]. 3. POCUS Task: Pneumothorax Diagnosis POCUS, which stands for Point-Of-Care Ultrasound, involves the use of an ultrasound device to answer specific diagnostic questions and to assess real-time physiological responses to treatment [14]. In the scope of POCUS AI, we aim to use this research to build a system that accepts ultrasound videos as input and classifies whether the video is an example of Pneumothorax [15]. A Pneumothorax, also known as collapsed lung or dropped lung, is the entry of air into the pleural space (the space between the lungs and chest wall). When air enters this area, the lung loses contact with the inside of the chest and ‚Äúdrops‚Äù down [ 16]. Figure 1 is an anatomical diagram that compares a normal lung with one conditioned with Pneumothorax. In most cases, a Pneumothorax is caused by a traumatic injury, such as a rib fracture or penetrating injury (stab or gunshot wound) that causes damage to the lung or chest [17]. Figure 1: An anatomical diagram demonstrating the difference between a normal lung and a collapsed lung. [18] The video data used for this study are provided by Brooke Army Medical Center (BAMC). Additionally, we utilized open-source ultrasound video data from the POCUS ATLAS [ 19] (ex- amples are shown in Figure 2). For the BAMC data, we have 32 videos labeled with ‚Äúsliding‚Äù and 30 videos labeled with ‚Äúno sliding‚Äù, where a label of ‚Äúno sliding‚Äù is indicative of pneumothorax. Each video is a 3 second short clip that contains 20 frames per second. While some of the ultra- sound videos were from the same patient, each of the videos has a unique file name. Examples of ‚Äúsliding‚Äù and ‚Äúno sliding‚Äù snapshots from the POCUS ATLAS videos are provided in Figure 2. Figure 2: Two Ultrasound snapshots labeled with ‚Äúsliding‚Äù (left) and ‚Äúno sliding‚Äù (right). [Public domain], via the POCUS ATLAS. ( https://www.thepocusatlas.com/lung/5l9jgyaszu0othj5tidg0miqxkmvyv ) pro- vided by Hannah Kopinski (MS4), Dr. Lindsay Davis and Matthew Riscinti, ( https://www.thepocusatlas. com/lung/no-lung-sliding ) provided by Francisco Norman. Though we have limited training data for a complex machine learning system, the video data provide adequate information for experienced medical experts to diagnose Pneumothorax. Therefore, we were able to employ Think-Aloud analyses with our medical experts to aid in the design of a decision support system [ 20]. In this work, we captured the cognitive reasoning processes that the medical experts, identified in our studies with the pseudonyms Alex and Victor, use when diagnosing Pneumothorax. In the next two sections, we present the motivations, designs, analyses, and results of our two studies. 4. Study 1: Knowledge for Making Diagnoses 4.1. Motivation To diagnose a condition such as Pneumothorax using ultrasounds, doctors must be aware of the condition‚Äôs specific characteristics. They are knowledgeable of the features and artifacts that confirm, reject, or even make uncertain whether a patient has this condition. Further, it is expected that they can explain what these features are and why these features are relevant to a diagnosis. If we can elicit this knowledge as researchers, we can use it to design systems that can detect these specific features, make diagnoses using a similar process to the doctors, and generate explanations in terms that doctors can understand. Therefore, the motivation of this study is to examine the first of the aforementioned expec- tations: defining the features of Pneumothorax in ultrasound videos. When a doctor makes a diagnosis, there is much we can learn about their process that would be useful for designing and building a robust AI model to detect features in an ultrasound video. We designed a Think-Aloud study to extract this information from two doctors trained in the use and interpretation of point-of-care ultrasound captures. As we will see in the design and analysis sections, we were able to determine both the features of the ultrasound as well as the medical concepts they employed to make the diagnosis. 4.2. Design For each doctor, we conducted two Think-Aloud sessions where we prompted them to ‚Äúmake a diagnosis of Pneumothorax‚Äù. In the first session with each doctor, we asked them to diagnosis Pneumothorax within six ultrasound videos. This session served as a ‚Äúwarmup‚Äù study to famil- iarize the doctors with the Think-Aloud format and from which we might extract preliminary features of their diagnoses. The second session with each doctor repeated the process with six additional lung ultrasound videos. This approach of pairing a study with a ‚Äúwarmup‚Äù study is suggested by Someren et. al. [ 13]. The ultrasound videos used for the warmup sessions were open-source data from the POCUS ATLAS [ 19], and the videos used for the second set of sessions were from a dataset from the Brooke Army Medical Center. Of the six videos in each session, three were examples of Pneumothorax and three were examples of non-Pneumothorax. We asked the doctors to verbalize their thinking process as they worked through the diagnosis. The videos were presented in a random order and each doctor was unaware of the true diagnosis of all videos until the end of the study. The Think-Aloud sessions occurred over Zoom and remote control of the computer‚Äôs mouse was also provided so that the doctors could control the videos and visually annotate them. With the doctor‚Äôs consent, we recorded the entirety of each session for further review. During the Think-Aloud sessions, we were careful not to say things to the doctors to influence their decision making. Our interactions only consisted of a prompt to continue speaking if there was a pause of more than 3-5 seconds. This intervention was instrumental in ensuring all steps of the diagnosis process were verbalized and recorded. At the end of the session, we reviewed some keywords and concepts by asking the doctors to clarify some of their results. This ensured we captured the full breadth of knowledge presented in the Think Aloud. Finally, session transcripts were automatically generated from the recordings and these, along with the recordings, were used during our analysis. It should be noted that in the original BAMC dataset, labels of ‚ÄúSliding‚Äù and ‚ÄúNo Sliding‚Äù were used as proxies for ‚ÄúNo Pneumothorax‚Äù and ‚ÄúPneumothorax‚Äù labels, respectively. In this context, sliding and no sliding refers to the movement of the pleural line, a key anatomical feature that doctors look for when diagnosing Pneumothroax in lung ultrasounds. Whether sliding is visible in the pleural line is one of the strongest indicators of their being no Pneumothorax. However, since sliding is not an entirely definitive proxy for a Pneumothorax diagnosis, this presented one limitation of the data. We conducted our analysis with this limitation in mind. Our study, including the use of the existing ultrasound data, was reviewed and approved by Drexel‚Äôs Institutional Review Board. 4.3. Analysis Alex and Victor made correct diagnosis on each of the six videos in Session 1 and Session 2. After we conducted our Think-Aloud studies with each doctor, we analyzed the transcripts to extract keywords and concepts that the doctors used. Transcripts were automatically generated by zoom, and prior to our analysis we cleaned the scripts by correcting grammar and punctuation, clarifying any misspelled vocabulary, and putting the dialogue in a standard format that grouped content by speaker and line. We then determined key themes and features present in the transcripts. Here is a snippet of one of the doctor‚Äôs dialogue: The issue here is that everything is shifting, and if I look at the line here, here, here, and here, I don‚Äôt see independent movement. I don‚Äôt see vertical artifacts. From this quote, we extracted two of our concepts seen in Tables 1 and 2, movement andvertical artifacts . 4.4. Results We observed twelve key concepts in sessions one (see Table 1) and two (see Table 2). For each video, we label which doctors mention which concepts, using the square for Alex and triangle for Victor. For these studies, we simply mark if a concept is present in their discussion, but do not notate the number of times the concept is mentioned. Through our analysis, we determined that there is a further distinction between the concepts. We define ‚Äúfeatures‚Äù of the ultrasound, which are objects or regions in the video, and ‚Äúvisual characteristics‚Äù, which are characteristics the features exhibit, such as a type of movement. We noticed that some features and characteristics are discussed with higher frequency across all the videos compared to others such as pleural line andmovement . We summarized the keywords and concepts both doctors mentioned during the two sessions in Table 3. The pleural line is generally agreed upon by the two doctors as a critical feature to conduct analysis in both ‚Äúsliding‚Äù and ‚Äúno sliding‚Äù scenarios. Alex always used anatomical landmarks such as rib or muscle to locate the pleural line while Victor did not; we believe that this could be explained as personal diagnosing preference since anatomical landmarks are not a cause or sign of Pneumothorax. Lastly, Alex mentioned ‚Äúlung pulse‚Äù and ‚Äùvertical reverberation‚Äù when making diagnosis on ‚Äùno sliding‚Äù videos, since these two features only appear in ultrasounds where the patients have a high likelihood of Pneumothorax. As we will see in the discussion section, we are able to extract a large amount of value from this study and we present some ways this information can be utilized to design an AI system to diagnose Pneumothorax. 5. Study 2: Knowledge for Explaining Diagnoses 5.1. Motivation While we have collected some important ultrasound features and visual characteristics from Study 1 that can help with diagnosing Pneumothorax, we wanted to further explore how domain experts produce a reasonable explanation of already-diagnosed conditions in ultrasound videos. This would help us to design for better better explainability and transparency in an AI system. We conducted this second study with the main purpose of capturing the domain experts‚Äô cognitive reasoning process when they see an ultrasound video paired with a previous diagnosis and are Table 1 Keywords summarized from Study 1 Session 1 ( ‚ñ°represents Alex and ‚ñ≥represents Victor) Video 1 Video 2 Video 3 Video 4 Video 5 Video 6 Video labels Sliding No Sliding No Sliding Sliding No Sliding Sliding Ultrasound Features Pleural line ‚ñ° ‚ñ°‚ñ≥ ‚ñ°‚ñ≥ ‚ñ°‚ñ≥ ‚ñ°‚ñ≥ ‚ñ°‚ñ≥ Anatomical landmarks ‚ñ°‚ñ≥ ‚ñ° ‚ñ° ‚ñ°‚ñ≥ ‚ñ°‚ñ≥ ‚ñ° B line ‚ñ≥ ‚ñ≥ Z line ‚ñ°‚ñ≥ A line ‚ñ°‚ñ≥ Visual Characteristics Lung pulse ‚ñ° ‚ñ° ‚ñ° ‚ñ° Lung point(s) ‚ñ°‚ñ≥ ‚ñ°‚ñ≥ ‚ñ° Movement ‚ñ° ‚ñ°‚ñ≥ ‚ñ≥ ‚ñ≥ ‚ñ°‚ñ≥ ‚ñ°‚ñ≥ Vertical artifacts ‚ñ°‚ñ≥ ‚ñ° Table 2 Keywords summarized from Study 1 Session 2 ( ‚ñ°represents Alex and ‚ñ≥represents Victor) Video 7 Video 8 Video 9 Video 10 Video 11 Video 12 Video labels Sliding Sliding No Sliding Sliding No Sliding No Sliding Ultrasound Features Pleural line ‚ñ°‚ñ≥ ‚ñ°‚ñ≥ ‚ñ°‚ñ≥ ‚ñ°‚ñ≥ ‚ñ°‚ñ≥ ‚ñ°‚ñ≥ B line ‚ñ° ‚ñ≥ ‚ñ≥ ‚ñ° Z line ‚ñ≥ Visual Characteristics Lung pulse ‚ñ≥ ‚ñ°‚ñ≥ Movement ‚ñ° ‚ñ° ‚ñ°‚ñ≥ ‚ñ°‚ñ≥ ‚ñ≥ ‚ñ° Acoustic shadowing ‚ñ° ‚ñ≥ ‚ñ° ‚ñ° Horizontal sliding ‚ñ°‚ñ≥ ‚ñ≥ ‚ñ° Vertical reverberation ‚ñ°‚ñ≥ ‚ñ≥ ‚ñ° ‚ñ° ‚ñ° ‚ñ° Table 3 Common features summarized from Session 1 and Session 2 in Study 1 ( ‚ñ°represents Alex and ‚ñ≥ represents Victor) Video labels Sliding No Sliding Ultrasound Features Pleural line ‚ñ°+6,‚ñ≥+5‚ñ°+6,‚ñ≥+5 B line ‚ñ°+1,‚ñ≥+2‚ñ°+1,‚ñ≥+2 Z line ‚ñ°+1,‚ñ≥+2 Visual Characteristics Lung pulse ‚ñ°+1 ‚ñ°+4,‚ñ≥+2 Movement ‚ñ°+5,‚ñ≥+3‚ñ°+5,‚ñ≥+4 Vertical reverberation ‚ñ°+3,‚ñ≥+3‚ñ°+4 asked to produce a reasonable explanation of the diagnosis. The main difference between study 1 and study 2 is that study 1 observed how the experts generated a diagnosis of Pneumothorax, while study 2 observes how the experts explain a diagnosis of Pneumothorax. In study 2, we wanted to understand if and how the reasoning process changes when asked to confirm or reject a predetermined diagnosis and whether there is variation between the experts‚Äô diagnosis processes. 5.2. Design We selected four videos from the BAMC data, two of them were labeled with ‚ÄúSliding‚Äù and the other two were labeled with ‚ÄúNo Sliding‚Äù. The four videos were collected from four different patients. Similar to Study 1, we showed the videos to the medical experts in random order, recorded the entire session, and transcribed the recordings. In contrast to study 1, we presented the four videos with the accompanying diagnosis labels to the medical experts. To better observe how they extract key features and generate reasonable explanations, we flipped the labels (e.g., a ‚ÄúSliding‚Äù label would be shown as ‚ÄúNo Sliding‚Äù and vice versa) of one ‚ÄúSliding‚Äù video and one ‚ÄúNo sliding‚Äùvideo, thus providing two videos with the correct labels and the other two with incorrect labels. Ultimately, we have one video correctly labeled with ‚ÄúSliding‚Äù, one video correctly labeled with ‚ÄúNo Slding‚Äù, one video incorrectly labeled with ‚ÄúSliding‚Äù, and one video incorrectly labeled with ‚ÄúNo Sliding‚Äù. The original ultrasound video labels and the labels that we showed the medical experts are displayed along with our analysis results in Table 4. Our study, including the use of the existing ultrasound data, was reviewed and approved by Drexel‚Äôs institutional review board. Table 4 Keywords summarized from Study 2 ( ‚ñ°represents Alex and ‚ñ≥represents Victor) Video 13 Video 14 Video 15 Video 16 Original label Sliding No Sliding No Sliding Sliding Presented label Sliding Sliding No Sliding No Sliding Ultrasound Features Pleural line ‚ñ° ‚ñ°‚ñ≥ ‚ñ° ‚ñ°‚ñ≥ Anatomical landmark ‚ñ° ‚ñ° ‚ñ° ‚ñ° Visual Characteristics Lung pulse ‚ñ°‚ñ≥ Lung point(s) ‚ñ°‚ñ≥ ‚ñ°‚ñ≥ Moving/Movement ‚ñ° ‚ñ°‚ñ≥ ‚ñ°‚ñ≥ ‚ñ°‚ñ≥ Sliding ‚ñ° ‚ñ°‚ñ≥ ‚ñ°‚ñ≥ No sliding ‚ñ°‚ñ≥ ‚ñ°‚ñ≥ ‚ñ°‚ñ≥ ‚ñ°‚ñ≥ Vertical reverberation artifact ‚ñ° ‚ñ°‚ñ≥ 5.3. Analysis By providing two videos with the correct labels and the other two videos with the incorrect labels, we aimed to not only extract features that help explain the true diagnosis, but also cause the medical experts to question their diagnosis process and be more critical towards the demonstrated diagnosis results. An interesting finding we have from this session is that both medical experts agreed to disagree with two videos. For Video 13, we showed them a video correctly labeled with ‚Äúsliding‚Äù, while both doctors mentioned that they would prefer recognizing the phenomenon as a lung pulse (a vertical motion of the pleura in sync with the cardiac rhythm [ 21]) instead of sliding. They agreed that this is suspicious of Pneumothorax, but were unable to definitively confirm it. For Video 14, we presented a video incorrectly labeled with ‚Äúsliding‚Äù while the ground truth BAMC label was ‚ÄúNo Sliding‚Äù. Victor made an argument of a possibly incorrect diagnosis. Although he observed majority no-sliding, he stated that he would need more information to make the decision. Similar to Victor, Alex described the video to have 80% no-sliding and 20% sliding, and suspected Pneumothorax (which would be linked to no-sliding). Video 15 is correctly labeled with ‚ÄúNo Sliding‚Äù and both experts made quick decisions to agree with the labeling. Video 16 is presented with the flipped label ‚ÄúNo Sliding‚Äù and the ground truth BAMC label is ‚ÄúSliding‚Äù. Victor described what he saw as half sliding and half no sliding. He thought the video was suspicious of Pneumothorax (i.e., no sliding) but would need more information to make the diagnosis. Alex described what he observed as ‚Äúclearly sliding‚Äù. Here is a snippet from one of the doctor‚Äôs TAs: So the first thing I want to identify...I want to identify the pleural line, and so to identify the pleural line, I identify a rib... And so I know that the line, that is just underneath. And then I look at the movement because the question is ‚Äúsliding‚Äù or ‚Äúno sliding‚Äù. I want to see an independent movement of sliding that could be seen here. So this is not a Pneumothorax for sure. From this quote, we extracted three of the concepts displayed in Table 4, pleural line ,anatomical landmark (referring to rib here), and movement . 5.4. Results Upon completing the second Think-Aloud study, we analyzed the doctors‚Äô diagnoses in terms of sliding/no-sliding, Pneumothorax/no-Pneumothorax, and suspicions of Pneumothorax/no- Pneumothorax. Table 5 displays the original BAMC label, presented label, and the two medical experts‚Äô explanations for each video. Compared to Study 1, where both doctors did not prioritize among the ultrasound features and visual characteristics, Alex used inference rules to construct his explanations of the previously labeled lung ultrasound videos. His cognitive reasoning process could be divided into four steps: 1.Alex stated that he always looks for pleural line first. To recognize the pleural line, he identifies anatomical landmarks such as ribs and muscle. 2.Next, he examined if there is any independent movement in the pleural line. If sliding is present along the entire pleural line, then he can confidently make a diagnosis of no Pneumothorax. 3.If he did not see sliding or only saw partial sliding, then he would look for lung pulse. Recognizing pulse would lead to a conclusion of no Pneumothorax. 4.Lastly, Alex would look for vertical artifacts. If there are vertical artifacts, then there is no Pneumothorax. However, if no vertical artifacts are observed, then more information is needed to make a definitive decision. There‚Äôs still a possibility that he cannot make a diagnosis after considering these four features sequentially. Poor image resolution or only seeing part of the lung were the common issues preventing him from making a diagnosis. To make a clinical decision in these cases, more ultrasound data would need to be collected to support decision making. Table 5 Diagnosis analysis for Study 2 ( ‚ñ°represents Alex and ‚ñ≥represents Victor) Video 13 Video 14 Video 15 Video 16 Original label Sliding No Sliding No Sliding Sliding Presented label Sliding Sliding No Sliding No Sliding Explanation Sliding ‚ñ° Reduced sliding ‚ñ° No sliding ‚ñ≥ ‚ñ°‚ñ≥ Pneumothorax ‚ñ° ‚ñ°‚ñ≥ No Pneumothorax ‚ñ° Not sure about sliding/no sliding ‚ñ°‚ñ≥ ‚ñ≥ 6. Discussion From our Think-Aloud studies, we determined that there are various ways in which we can incorporate lung ultrasound domain knowledge into the design of an AI system for this task. We know that in order for a system to be capable of diagnosing Pneumothorax, it must be able to detect features that are relevant to the medical condition. One way researchers could achieve this is by building an object detection system that locates various features within the frames of an ultrasound video. However, not all features are relevant to Pneumothorax, so in order to construct a more robust and targeted model, researchers must be judicious in how certain features are weighted [ 22]. From our studies, we can not only derive the features of most importance to the doctors, but also an approximation of relative weight based on the frequencies the features were discussed across the video samples. Thus, one such model design could be an object (or feature) detector parameterized by the relative ‚Äúweights‚Äù of those features. For example, we might build an object detector to identify the pleural line in an ultrasound video, so that subsequent analysis can focus on this feature. An object detector is an excellent start, but only considers features of the ultrasound, not characteristics of those features. From the results of studies one and two, we know that ‚Äúmovement‚Äù plays an important role in determining Pneumothorax. In fact, it was stated by one doctor that without movement, it would be impossible to make a diagnosis for Pneumothorax. Thus, the interpretation for a researcher would be that the model must not consider just one frame, but a series of sequential frames to determine the type of movement a feature exhibits. We, therefore, know that the type of model must consider multiple frames as an input to detect any movement. Study two presents further insights that can help construct an AI model to diagnose Pneu- mothorax. In addition to ‚Äúweighting‚Äù the features, we introduce the idea of ‚Äúinference rules‚Äù by prioritizing the features we extracted. Inference rules suggest an order of detecting/recognizing ultrasound features and relevant visual characteristics, and provide the AI model with more knowledge for making classifications between Pneumothorax and no Pneumothorax. Similar to traversing a decision tree, the AI system would have knowledge about which feature to detect first, and whether to make a classification at that point or move on to the next feature. This approach could contribute to the accuracy of video classification, expedite the decision making process, and increase the transparency of AI-assisted image classification, which are crucial medical needs for battlefield diagnosis. 7. Related Work There have been many other exciting works in the medical imaging space that seek to diagnose diseases using AI technology. In the scope of incorporating domain knowledge from medical experts, the closest work to ours is conducted by Guan et al., [ 23], where the researchers incorporated domain knowledge into the architecture design of the network for thorax disease. The proposed network in [ 23] has three branches, one for viewing the whole image, one for viewing the local areas and one for combining the global and local information together. One of the major differences between their approach and ours is that they performed different orders to train the network while we suggested weighting the features as well as using inference rules to prioritize the features extracted. In [24], Liu et. al. designed a two-fold thyroid nodule classification system consisting of an ultrasound object detector to extract key features and a multi-branch convolutional neural network for classification of extracted features. In their study, the researchers utilize expert clinical knowledge to engineer feature attributes such as size and shape and place constraints on the model based on how these features are observed in practice. For example, thyroid nodule aspect ratio distributions were pre-computed based on the training set thereby ensuring detected regions would be appropriately scaled to true nodules sizes. Our proposed design is similar in that we would use multiple object detectors. However, we differ in that our object detector design uses expert knowledge to create an attention-based model due to weighting the features. Further, incorporation of inference rules creates a framework for a series of sequential object detectors, rather than simultaneous object detectors. In other work conducted by Wang et al., [ 25], the researchers first used a segmentation subnetwork to locate the lung area, then the lesion areas, and finally the most discriminative features [ 20]. In our proposed approach to leverage inference rules in image classification, the order our AI system detect features will also match the frequency they were mentioned in the think-aloud sessions (e.g. ‚Äúpleural line‚Äù is the top mentioned feature in all think-aloud sessions and it is also listed as the first feature to look at according to the inference rules). We argue that our approach will encourage the AI model to first look at the most discriminative and supporting features, as compared to [ 25]. It would be interesting to further investigate how different orders of utilizing features would contribute to classification accuracy. To the best of our knowledge, the proposed approach in [ 23], [24], and [ 25] were only tested on static Chest X-ray (CXR) or ultrasound images (not videos). Further, the features were extracted from CXR and ultrasound images. By utilizing ultrasound videos, we extracted both static and dynamic features, thus allowing for a model design capable of both object and motion detection. 8. Conclusions and Future Work In studies one and two, we employed Think-Aloud studies to elicit domain knowledge from physicians trained in lung ultrasound interpretation. The ultimate goal of the studies was to identify the domain knowledge that doctors use, so that we can design an AI system that incorporates that knowledge. From study one, we extracted both static and dynamic features of the ultrasound videos, from which we suggested a system design focused around object detection as well as the notion of objects across multiple video frames. In study two, we examined the reasoning process the doctors utilized to explain previously generated diagnosis. By providing correct and incorrect video labels to the doctors, we sought a method to examine how their reasoning processes changed, if at all, in the presence of incorrect prior diagnoses. We also analyzed if different knowledge was used to generate a diagnosis (study one) vs. explain a prior diagnoses (study two). Our results show that both doctors did not mention any new features in study two compared to study one. But one doctor used inference rules when explaining the diagnoses of previously labeled ultrasound videos. In this way, we were able to prioritize the features we extracted, providing more guidance and domain knowledge for the AI system we want to design. Our Think-Aloud studies have laid the foundation for building an AI model that can auto- matically diagnose Pneumothorax from ultrasound videos. We envision a model that leverages the domain knowledge we have identified to reduce the amount of training data we need and that can explain the diagnoses it generates in terms that doctors and battlefield medics can understand. Moving forward, we plan to conduct more think-aloud studies so we can generalize our model to support diagnosis of multiple medical conditions from ultrasound videos. Acknowledgments This work was funded under the DARPA POCUS program (award #HR00112190076). The views, opinions and/or findings expressed are those of the author and should not be interpreted as representing the official views or policies of the Department of Defense or the U.S. Government. We thank Dr. Matthew Riscinti from Kinds County Emergency Medicine; ChunYi Tsai, Robert Jones Do from MetroHealth Medical Center; Francisco Norman, Hannah Kopinski (MS4) and Dr. Lindsay Davis from NYU Emergency Medicine; and Matthew Riscinti from Kings County Emergency Medicine for sharing the six open-source POCUS ATLAS videos we used in our think-aloud studies. References [1]P. A. Alexander, Domain knowledge: Evolving themes and emerging concerns, Educational Psychologist 27 (1992) 33‚Äì51. [2]J. Donahue, K. Grauman, Annotator rationales for visual recognition, in: 2011 International Conference on Computer Vision, IEEE, 2011, pp. 1395‚Äì1402. [3]M. Sharma, M. Bilgic, Learning with rationales for document classification, Machine Learning 107 (2018) 797‚Äì824. [4]M. Sharma, M. Bilgic, Towards learning with feature-based explanations for document classification, in: IJCAI Workshop on BeyondLabeler-Human is More than a Labeler, 2016, pp. 1‚Äì7. [5]O. Frank, N. Schipper, M. Vaturi, G. Soldati, A. Smargiassi, R. Inchingolo, E. Torri, T. Perrone, F. Mento, L. Demi, et al., Integrating domain knowledge into deep networks for lung ultrasound with applications to covid-19, IEEE transactions on medical imaging (2021). [6] C. E. Zsambok, G. Klein, Naturalistic decision making, Psychology Press, 2014. [7]T. L. Seamster, R. E. Redding, Applied cognitive task analysis in aviation, Routledge, 2017. [8]M. E. Sullivan, C. V. Brown, S. E. Peyre, A. Salim, M. Martin, S. Towfigh, T. Grunwald, The use of cognitive task analysis to improve the learning of percutaneous tracheostomy placement, The American journal of surgery 193 (2007) 96‚Äì99. [9]G. Klein, L. Militello, 4. some guidelines for conducting a cognitive task analysis, in: Advances in human performance and cognitive engineering research, Emerald Group Publishing Limited, 2001. [10] D. D. WOODS, et al., Cognitive task analysis: An approach to knowledge acquisition for intelligent system design, in: Studies in Computer Science and Artificial Intelligence, volume 5, Elsevier, 1989, pp. 233‚Äì264. [11] M. E. Fonteyn, B. Kuipers, S. J. Grobe, A description of think aloud method and protocol analysis, Qualitative health research 3 (1993) 430‚Äì441. [12] K. A. Ericsson, H. A. Simon, Verbal reports as data., Psychological review 87 (1980) 215. [13] M. W. Van Someren, Y. F. Barnard, J. A. Sandberg, The think aloud method: a practical approach to modelling cognitive, London: AcademicPress 11 (1994). [14] S. Damodaran, A. Alva, S. Kumar, M. Kanchi, Artificial intelligence in pocus: The vanguard of technology in covid-19 pandemic, Journal of Cardiac Critical Care TSS (2020). [15] OUTREACH@DARPA.MIL, Researchers selected for point-of-care ultrasound program, 2021. URL: https://www.darpa.mil/news-events/2021-05-04. [16] S. A. Sahn, J. E. Heffner, Spontaneous pneumothorax, New England Journal of Medicine 342 (2000) 868‚Äì874. [17] W.-I. Choi, Pneumothorax, Tuberculosis and respiratory diseases 76 (2014) 99‚Äì104. [18] W. contributors, Wikijournal of medicine/medical gallery of blausen medical 2014, 2020. URL: https://en.wikiversity.org/w/index.php?title=WikiJournal_of_Medicine/Medical_ gallery_of_Blausen_Medical_2014&oldid=2187649. [19] M. Macias, A collaborative ultrasound education platform, 2021. URL: https://www. thepocusatlas.com/. [20] X. Xie, J. Niu, X. Liu, Z. Chen, S. Tang, S. Yu, A survey on incorporating domain knowledge into deep learning for medical image analysis, Medical Image Analysis (2021) 101985. [21] G. Volpicelli, M. Elbarbary, M. Blaivas, D. Lichtenstein, G. Mathis, A. Kirkpatrick, L. Mel- niker, L. Gargani, V. Noble, G. Via, et al., International liaison committee on lung ultrasound (ilc-lus) for international consensus conference on lung ultrasound (icc-lus). international evidence-based recommendations for point-of-care lung ultrasound, Intensive Care Med 38 (2012) 577‚Äì591. [22] T. S. Hwang, Y. M. Yoon, D. I. Jung, S. C. Yeon, H. C. Lee, Usefulness of transthoracic lung ultrasound for the diagnosis of mild pneumothorax, Journal of veterinary science 19 (2018) 660‚Äì666. [23] Q. Guan, Y. Huang, Z. Zhong, Z. Zheng, L. Zheng, Y. Yang, Diagnose like a radiologist: Attention guided convolutional neural network for thorax disease classification, arXiv preprint arXiv:1801.09927 (2018). [24] T. Liu, Q. Guo, C. Lian, X. Ren, S. Liang, J. Yu, L. Niu, W. Sun, D. Shen, Automated detection and classification of thyroid nodules in ultrasound images using clinical-knowledge-guided convolutional neural networks, Medical Image Analysis 58 (2019) 101555. URL: https: //www.sciencedirect.com/science/article/pii/S1361841519300970. doi: https://doi.org/ 10.1016/j.media.2019.101555 . [25] K. Wang, X. Zhang, S. Huang, F. Chen, X. Zhang, L. Huangfu, Learning to recognize thoracic disease in chest x-rays with knowledge-guided deep zoom neural networks, IEEE Access 8 (2020) 159790‚Äì159805",cs.AI,Arxiv
17,A Phenomenological AI Foundation Model for Physical Signals,"Jaime Lien, Laura I. Galindez Olascoaga, Hasan Dogan, Nicholas Gillian, Brandon Barbello, Leonardo Giusti, Ivan Poupyrev",2024-10-15 21:03:53+00:00,http://arxiv.org/pdf/2410.14724v1,"The objective of this work is to develop an AI foundation model for physical signals that can generalize across diverse phenomena, domains, applications, and sensing apparatuses. We propose a phenomenological approach and framework for creating and validating such AI foundation models. Based on this framework, we developed and trained a model on 0.59 billion samples of cross-modal sensor measurements, ranging from electrical current to fluid flow to optical sensors. Notably, no prior knowledge of physical laws or inductive biases were introduced into the model. Through several real-world experiments, we demonstrate that a single foundation model could effectively encode and predict physical behaviors, such as mechanical motion and thermodynamics, including phenomena not seen in training. The model also scales across physical processes of varying complexity, from tracking the trajectory of a simple spring-mass system to forecasting large electrical grid dynamics. This work highlights the potential of building a unified AI foundation model for diverse physical world processes.","A P HENOMENOLOGICAL AI F OUNDATION MODEL FOR PHYSICAL SIGNALS A P REPRINT Jaime Lien Laura I. Galindez Olascoaga Hasan Do Àògan Nicholas Gillian Brandon Barbello Leonardo Giusti Ivan Poupyrev Archetype AI Palo Alto, CA, USA 94304 {jaime, laura, hasan, nick, brandon, leonardo, ivan}@archetypeai.team October 22, 2024 ABSTRACT The objective of this work is to develop an AI foundation model for physical signals that can generalize across diverse phenomena, domains, applications, and sensing apparatuses. We propose a phenomenological approach and framework for creating and validating such AI foundation models. Based on this framework, we developed and trained a model on 0.59 billion samples of cross-modal sensor measurements, ranging from electrical current to fluid flow to optical sensors. Notably, no prior knowledge of physical laws or inductive biases were introduced into the model. Through several real-world experiments, we demonstrate that a single foundation model could effectively encode and predict physical behaviors, such as mechanical motion and thermodynamics, including phenomena not seen in training. The model also scales across physical processes of varying complexity, from tracking the trajectory of a simple spring-mass system to forecasting large electrical grid dynamics. This work highlights the potential of building a unified AI foundation model for diverse physical world processes. 1 Introduction We explore the development of an AI foundation model that can be universally applied to physical processes of any nature . Our approach is based on a phenomenological framework, meaning that no prior physical knowledge or inductive bias is introduced. The aim is to construct a single, versatile AI foundation model capable of generalizing across diverse physical phenomena, domains, applications, and sensing apparatuses. This work is inspired by recent advancements in natural language processing (NLP), where generative models based on transformer architectures, such as GPT-4, have demonstrated that a single model trained on a vast corpus of text in self-supervised manner can perform as well as or better than specialized models across a range of tasks [8, 19]. In this paper, we present the design and evaluation of a physical AI foundation model , trained on 0.59 billion physical measurements covering a diverse range of real-world processes. The foundation model is paired with lightweight phenomenological decoders that can be individually fine-tuned to generate application-dependent solutions, such as trajectory forecasting. The architecture enables flexible implementation of various use cases while maintaining the foundation nature of the model. Although foundation models have shown significant potential in NLP, image analysis, and general time series data [ 6,21,5,10], their ability to represent and characterize real-world physical processes remains much less explored. Developing such model is one of the contributions of this paper. The central question we aim to answer is whether a foundation model, trained on diverse physical data, can characterize physical processes it has not encountered before. We systematically evaluated our model on kinematic and thermody- namic experiments, as well as datasets of complex real-world systems like household electricity use and transformer behavior. The results were encouraging: the model demonstrated the ability to generalize to physical phenomena and processes it had not seen in training, exhibiting zero-shot inference capabilities. Furthermore, in these use cases, thearXiv:2410.14724v1  [cs.LG]  15 Oct 2024 A Phenomenological AI Foundation Model for Physical Signals A P REPRINT Figure 1: The ‚Ñ¶-Framework describes the relationship between quantities qi, sensors sjand measurements mi,jin the physical world to inform a phenomenological AI model capable of describing past ( t‚â§T) and future ( t > T ) trajectories of any physical quantity of interest qi(t). foundation model performed as well as, or better than, models specifically trained on data from the target physical systems. The experimental evaluation is an additional contribution of this paper. 2 Related work This work is motivated by the challenges of applying AI methods to interpret real-time physical signals and measure- ments, a critical requirement for addressing complex, real-world problems. Examples include monitoring and managing large-scale infrastructure systems, such as improving energy efficiency in electrical grids [ 1], enabling data-driven experimental scientific discoveries [ 20], advancing novel human-computer interaction techniques [ 12], and many others. A common approach to designing physically correct AI models for these problems involves incorporating strong inductive biases , e.g. law of conservation of energy and others [15, 11]. While powerful and important, this approach creates highly specialized AI models that struggle to generalize to other use cases [ 20]. For example, a fluid motion AI model incorporating the Navier-Stokes equations [ 16] wouldn‚Äôt work for interpreting radar Doppler images [ 12]. Moreover, many real-world systems cannot be easily formalized by a closed set of equations due to their complexity and the influence of external factors. The effectiveness of the strong inductive bias approach in such complex systems remains an open research question. Therepresentative orphenomenological [18] AI models are trained on large datasets of physical measurements without incorporating prior knowledge of physical laws [ 14]. These models have proven highly successful in solving complex real-world problems across various application domains and types of sensors, ranging from using accelerometers to analyze human gait [ 7] to discovering pulsars from multidimensional radio telescope measurements [ 23], among many other applications. However, scalability remains a major challenge for phenomenological AI models. Their effectiveness is inherently limited by the availability of training data, which can be hard to obtain. Additionally, these models are highly sensitive to variations in sensor operational characteristics and pre-processing methods, often requiring further data collection and retraining. Consequently, they are typically narrowly designed and can not easily generalize across different use cases, sensors, or systems. In this paper, we explore a foundation model approach, where a model trained on vast amounts of diverse physical data across application domains, sensor types, and physical processes can develop a general representation of physical behaviors. This allows the model to be deployed in use cases with no additional training (i.e., zero-shot) or with a small amount of additional data (i.e., fine tuning). The remainder of this paper details the framework used to formalize the requirements for such a model, the design and the results of our experimental evaluations of the model. 2 A Phenomenological AI Foundation Model for Physical Signals A P REPRINT 3‚Ñ¶-Framework for building a universal phenomenological model 3.1 Physical quantities Consider an electric motor whose internal construction and operation are unknown. Its current state and behavior can be described by a set of observable, time-varying physical quantities, such as temperature, electrical current, rotational speed, torque, etc. Each of these quantities can be represented as qi(t), where tdenotes time. Consequently, any physical process Œª, including our motor, can be represented as the union of all its observable physical quantities, QŒª=‚à™iqi(t). It is reasonable to postulate that the physical world as a whole can be represented as a superset ‚Ñ¶that encompasses all possible physical quantities for all objects varying across space and time: ‚Ñ¶ =[ ŒªQŒª One could aspire in theory to train a universal phenomenological model on the entirety of ‚Ñ¶. However, this is not practically feasible; even if sufficient computational resources existed to train such a model, there is not a complete dataset representing all physical processes across the physical world. Instead, we ask if a compact representative model trained on a subset of observable measurements œâ‚àà‚Ñ¶can infer and accurately describe the behavior of physical quantity qŒª‚Ä≤/‚ààœâthat was not included in the training data set (see Figure 1). Our framework considers two important issues in this regard: the observation of latent physical quantities via sensors, discussed in Section 3.2, and the formulation of the phenomenological model as an AI architecture, described in Section 3.3. 3.2 Sensors and physical measurements The challenge with building models for the physical world is that neither the physical quantities nor their governing laws are inherently known or can be sampled directly. Instead, they can only be indirectly observed through sensors sj, which transduce the true physical quantity qi(t)into electrical signals and corresponding measurements mi,j(t), that is sj:qi(t)7‚Üími,j(t). Importantly, the sensors introduce noise and distortions due to their specific operational characteristics. The relationship between the observed measurements mi,jand the latent quantity qican be characterized by the conditional probability density function pM|Q(mi,j|qi)describing the distribution of the measurement values given the unknown true quantity values [3]. The measurements mi,j(t)that are used to train the model are thus incomplete, stochastic observations of the underlying continuum of true physical quantities qi(t)and can be characterized as: pM(mi,j) =Z qipM|Q(mi,j|qi)pQ(qi)dqi, where pQ(qi)is the true underlying distribution of qi, is unknown and cannot be directly sampled. 3.3 Model formulation We ask whether it is possible to build a single phenomenological AI model for all physical quantities qi‚àà‚Ñ¶‚Äî that is, a compressed representation of ‚Ñ¶capable of both describing past trajectories andpredicting future trajectories of any physical quantity of interest qi(t)as measured by sensor sj. This definition is consistent with previous approaches on designing AI models for physical world [ 15,11]. This is also analogous to how analytic physical models, such as a system of differential equations governing a pendulum, represent past trajectory and can also be used to predict future behavior. We therefore formulate the model as a mapping fthat encodes the measurements mi,j(t)up to time Tinto latent representation zemb i,j, which can be accurately decoded into the past and future measured trajectories of qi(t), denoted Àúmi,j(t), using decoders g‚àíandg+respectively (see Figure 1): f:mi,j(t)‚Üízemb i,j, g‚àí:zemb i,j‚ÜíÀúmi,j(t),fort‚â§T, g+:zemb i,j‚ÜíÀúmi,j(t),fort > T,(1) 3 A Phenomenological AI Foundation Model for Physical Signals A P REPRINT Phenomenon A Reconstruct Predict EncoderOutputs describing physical phenomena Normalization  +  patching  Phenomenon Z ...Decoder 1 Projection  +  position  embedding  +  [SEQ] token Decoder 2 Output embedding Figure 2: Architecture: Sensor data is normalized and segmented into fixed-length, one-dimensional patches that are used to train a transformer-based encoder network. Compact downstream decoders are then employed to reconstruct and predict the trajectories of the physical quantities of interest. such that the mappings f,g‚àí, andg+hold for all qi‚àà‚Ñ¶and sensors pM|Q(mi,j|qi). The open question that we explore in the rest of the paper is whether these mappings can be learned from a diverse but sparse subset œâ‚àà‚Ñ¶and how well they hold over the much broader space of physical quantities qŒª(t)/‚ààœâ, i.e. quantities that were not part of the training set. In other words, if we train the model on a large and diverse set of physical data, will the model be able to generalize to measured quantities that are significantly different from the training set, such as: Physical phenomena that the model was not trained on, for instance, can the model infer or understand thermoelectric behavior even if the training set contains no data related to this phenomena? Highly complex physical processes that cannot be represented in a closed form, for example, can the model accurately predict city-scale meteorological dynamics? Physical quantities captured by diverse sensors , where the physical quantity of interest remains the same, but the measurements differ due to the use of different sensor types, e.g. can the model interpret observations from liquid-based motion sensors if it only saw piezoelectric MEMS sensors in training? In the rest of the paper, we discuss the model‚Äôs design and experimental results toward these questions. 4‚Ñ¶-Model design and training This section presents the design and training of proposed model. As illustrated in Figure 2: sensor measurements are encoded as temporal sequences of one-dimensional patches of fixed length, which are projected into a unified embedding space using a standard transformer architecture [ 19,8]. The transformer architecture preserves the deep temporal structure of individual patches, and as the encoder is trained on large, diverse sets of sensor data, it effectively learns the underlying temporal patterns of a wide range of complex physical processes, regardless of the specific sensor modality. The resulting compact, universal representation can then be employed with relatively lightweight phenomological decoders, resulting in trajectory prediction orforecasting andreconstruction solutions (Figure 2). These decoders correspond to the g‚àíandg+mapping functions defined in Equation 1. 4.1 Encoder for physical quantities Encoder projects sensor data into universal latent representation by training the transformer-based network on wide variety of diverse physical data. Patching. The measurements of physical quantity qi(t)are captured using sensor sjduring time period T0< t‚â§T, normalized to the range [0,1], and represented as mi,j(t). Each measurement mi,j(t)is then segmented into a sequence ofnpatches: Pi,j=Sn k=1{pi,j,k},where patch pi,j,k‚ààRlpatch. Following related work that employed fixed patch sizes for images [ 8], we do not adjust the resolution of the patches to match the sampling frequency of the measurements. This approach increases the amount of available data and simplifies model training. Projection to the embedding space. The set of patches Pi,jis projected into the embedding space of dimension dmodel using a linear layer, resulting in a sequence of npatch embeddings Ti,j=Sn k=1{ti,j,k}. A learnable positional embedding rk‚ààRdmodel is added to each patch embedding ti,j,kto capture the temporal order of the patches [ 6]. Each 4 A Phenomenological AI Foundation Model for Physical Signals A P REPRINT resulting embedding is denoted zi,j,k=ti,j,k+rkfork= 1, . . . , n . Finally, we append one learnable [SEQ] token1 to the patch embeddings, denoted by zi,j,(n+1). The resulting embedding sequence Zi,j=Sn+1 k=1{zi,j,k}is then input to the transformer encoder. Encoder architecture. We use a vanilla transformer [ 19] with 6 layers of alternating causal multi-head attention heads and feedforward layers. The output of the attention is projected by a learnable linear layer, batch normalized and summed with residual connections; and the feedforward network is an MLP. The output of the transformer is a sequence of embeddings Zemb i,j=Sn+1 k=1{zemb i,j,k}from which we extract the (n+ 1) th one, corresponding to the location of the appended [SEQ] token. This extracted embedding, denoted zemb i,jfor simplicity, constitutes a phenomenological representation of the physical quantity qi(t)as measured by sensor sj. 4.2 Phenomenological decoders To apply and validate the phenomenological representation, the embedding vector zemb i,jis input into decoders g‚àíand g+. Decoder g‚àíis a learned mapping from the phenomenological representation zemb i,jto a reconstruction of past measurements, Àúmi,j(t)fort‚â§T. Decoder g+is a learned mapping from zemb i,jto a prediction of future measurements, Àúmi,j(t)fort > T . We use lightweight two-layer MLP architectures for both decoders. A similar architecture can be used for other tasks such as classification. The motivating idea is that the encoder should capture and represent the salient information in the physical measurement, allowing the downstream decoders to have a relatively small number of parameters and making them easily trainable. For a detailed description of the decoders‚Äô architecture, see Appendix A.1. 4.3 Training Our training set œâconsists of physical measurements from 41 publicly available datasets covering a wide variety of phenomena, quantities, and sensors, including river flow, solar power generation, precipitation, solar activity, and more (see Appendix A.3 for a full list). In total, our training set comprises 595,730,272 observations of the physical world. We pretrain the model using two unsupervised tasks: forecasting and auto-encoding. The pretraining tasks are performed concurrently by training the encoder end-to-end with decoder g‚àíand decoder g+in a dual-head configuration. The mean square error (MSE) of the forecast and the reconstruction are weighted 0.6 and 0.4 respectively in the pretraining loss function. We use a batch size of 1024, learning rate of 1e-3, with an AdamW optimizer. On a single Nvidia A100 GPU, model pre-training takes 6 hours. We fine-tune the model by freezing the pre-trained encoder weights and training just the applicable decoder on the target dataset. 5 Experimental validation This section presents two sets of experiments evaluating the generalizability of the model and its ability to accurately describe the behaviors of real-world physical systems QŒª‚Ä≤‚àà‚Ñ¶that the model did not observe during training , i.e. QŒª‚Ä≤/‚ààœâ(see Figure 1). For the first set of experiments (Section 5.1), we selected two canonical systems ‚Äì a mechanical oscillator and a thermodynamic system ‚Äì chosen for their simplicity in interpreting results, as well as the use of such experiments as standard benchmarks (e.g., see [ 4,15]). In the second set of experiments (Section 5.2), we evaluate whether the model can generalize to complex non-analytic, real-world systems , and for this purpose, we utilized publicly available datasets. We considered two downstream tasks for evaluation: (1) trajectory reconstruction , which assesses the model‚Äôs ability to project the embedding space produced by the encoder onto a trajectory describing the past behavior of the system (corresponding to decoder g‚àíin Figures 1 and 2); and (2) future trajectory prediction , which evaluates the model‚Äôs ability to forecast the future behavior of the system and corresponds to decoder g+in Figures 1 and 2. In particular, we evaluated the complex physical process experiments on both task (1) and (2), while we only evaluated the canonical experiments on task (2), and leave the evaluation of these experiments on task (1) for future work. 5 A Phenomenological AI Foundation Model for Physical Signals A P REPRINT Figure 3: Harmonic oscillator experiment. Left: experimental set up consist of a spring-mass system. Right: Sample forecasts for three regions of oscillatory behavior: (a) semi-chaotic dampened oscillation, (b) transition to dampened harmonic oscillation, and (c) dampened harmonic oscillation. 5.1 Canonical systems experiments 5.1.1 Experimental design All canonical experiments were conducted by collecting data using experimental physical apparatuses described below, subsequently evaluated using a single Nvidia A100 GPU. Harmonic oscillator. We implemented a mechanical oscillator through a hanging spring-mass apparatus compising a 0.65-inch long steel spring with a spring rate of 1.9 lbs/inch and a 10-pound mass attached to the end of the spring (Figure 3). When manually perturbed by pulling the mass in the negative z- and y-directions by 2 inches and releasing it, this system initially exhibits chaotic behavior (as an elastic pendulum), settling later into classic dampened harmonic oscillator. The resulting oscillations were recorded using an STMicro LSM6DS3 accelerometer, attached to the bottom of the mass, sampling z-axis acceleration at 208 Hz with 16-bit fixed-point resolution. In total, 19360 acceleration measurements were collected, correspond to 93 seconds of recording. To evaluate the model‚Äôs zero-shot forecasting, we segmented the recording into 156 windows of 1024 samples (4.92 seconds), with a sliding stride of 128 samples. For each segment, we used the 1024 samples as the input to the model and computed the forecast of the subsequent 128 points. Thermoeletric demonstrator. The behavior studied in this experiment is based on the Seebeck effect: a pair of aluminum strips submerged in water baths at different temperatures induce a temperature gradient (Figure 4). When applied to a semiconductor block (Bismuth Telluride), this gradient generates an electrical potential, which we sample to evaluate our model through 40 minutes-long experiments. An INA219DC Current Monitor was used to measure the output current measured in ¬µA, at a rate of 10 Hz with 12-bit fixed-point resolution, resulting in 24000 samples, corresponding to 120 minutes total. To account for the slow evolution of the thermoelectric effect and the high-frequency noise from the sensor, we downsampled the measurements to 1 Hz and applied a one-dimensional smoothing filter. For the zero-shot forecasting task, we used a context window of 1,024 frames ( ‚àº17 minutes) predicted over 128 frames (‚àº2.1 minutes). To evaluate different context windows, we segmented each recorded signal by sliding a window every 16 seconds. 5.1.2 Results of canonical experiments In this section, we report the model‚Äôs forecasting performance on the collected data. The model was not fine-tuned on this data, and the same weights were used across all analyses. The mean squared error (MSE) is reported to estimate the discrepancy between the model output and the ground truth. 1Represents the full input sequence in a single embedding, analogous to the [CLS] token in [6, 8]. 6 A Phenomenological AI Foundation Model for Physical Signals A P REPRINT Electrical current  measurement A  BA B Temperature probe 1Temperature probe 2 Intervention (a) (b) (c) Figure 4: Thermodynamic experiment. Left: experimental set up; Right: example of (a) temperature of the two water baths, (b) the output electrical current induced by the temperature differential, (c) example forecasts over two windows labeled A and B, respectively. Harmonic oscillator experiments. Figure 3 shows examples of the model‚Äôs forecast in three regions of oscillatory behavior: (a) semi-chaotic dampened oscillation, (b) transition to dampened harmonic oscillation, and (c) dampened harmonic oscillation. The MSE of the forecasted z-axis acceleration in these regions is 0.0037, 0.0019, and 0.0013 respectively. In general, the forecasting performance improves as the kinematic motion transitions from chaotic elastic pendulum motion to more regular dampened harmonic motion. The average MSE across all 156 windows of the recording was 0.00968. We found that windows with lower signal-to-noise ratio, e.g. where the amplitude of oscillation was smaller, tended to be the largest contributors to the overall error. Thermodynamic experiments. Figure 4 shows two examples of forecasting system behavior over different windows from one of the recordings discussed earlier. They demonstrate that our pre-trained model is capable of accurately performing zero-shot forecasts on physical phenomena that it was not trained on, achieving MSE values of 8.2e‚àí5 and3.5e‚àí5, respectively. Overall, the average MSE across the 78 windows of each recording were 15e‚àí5,34e‚àí5, and 37e‚àí5, respectively. While the MSE in most windows was smaller than average, there are corner cases where the prediction fails to capture the correct temporal pattern (see Appendix A.2). This is likely due to the encoder over-fitting on periodic patterns in the training data, as well as residual high-frequency noise from the sensor. Optimizing the model to address these corner cases is beyond the scope of this paper and can be done by expanding the dataset or fine-tuning a task-specific decoder. We leave this for future research. 5.2 Complex physical processes 5.2.1 Experimental definition We considered measurements of five real-world physical processes that were not included in the training dataset, drawn from different domains and characterized with various sensors: a) Daily minimum temperature in Melbourne, Australia, from 1981 to 1990 [2]. b) Hourly country-wide power consumption of Turkey, from 2015 to 2020, in MWh [9]. c) Hourly electricity consumption of 321 Portuguese clients from 2012 to 2014, in kW [17]. d)Oil temperature of an electrical transformer from a province of China from July 2016 to July 2018, measured in fifteen minute intervals [22]. e)Meteorological parameters, such as air temperature, humidity and wind speed, measured in Germany, every 10 minutes over the year of 2020 [13]. For each experiment, we evaluated the ‚Ñ¶-model‚Äôs zero-shot reconstruction and forecasting performance in terms of MSE. We also evaluated the improvement in performance resulting from fine-tuning the g‚àíandg+decoders using data from the target domain. Finally, as a comparison, we trained the network solely on the target dataset and again computed the reconstruction and forecasting performance. For the fine-tuned and target-trained models, we follow the standard process of isolating the most recent 10% of the target measurements for evaluation, the prior 10% of 7 A Phenomenological AI Foundation Model for Physical Signals A P REPRINT Figure 5: Sample graphs for complex real-world processes. a) and b) Reconstruction and forecasting of Turkey‚Äôs power consumption; c) Forecasting the oil temperature of an electrical transformer; d) Forecasting water vapor concentration in Germany. Figure 6: Comparison of (a) forecasting and (b) reconstruction mean square error for the zero-shot ‚Ñ¶-model, fine-tuned ‚Ñ¶-model, and target-trained models. target measurements for validation, and the earliest 80% of target measurements for training. This scheme allows us to evaluate model handling of a potential shift in the underlying distribution pQ(qi)over time. 5.2.2 Results Figure 5 shows examples of zero-shot forecasting and reconstruction for real-world measurements of physical processes. These examples demonstrate the model‚Äôs ability to phenomenologically describe and predict diverse physical signals that it was not explicitly trained on and that vary in sampling rate, spectral content, and noise characteristics, all with a single set of weights. Figure 6 (a) compares the MSE when predicting future measurements from the phenomenological representation. Here, the zero-shot ‚Ñ¶-model outperforms the target-trained model in each experiment, indicating that the trajectory of these physical processes can be learned solely from other phenomena. Across all the experiments, the zero-shot ‚Ñ¶-model‚Äôs MSE was on average 23% less than the MSE for the target-trained model. We observed a further improvement of 0.8% when fine-tuning the ‚Ñ¶g+decoder with target data. Figure 6 (b) shows the MSE when reconstructing physical measurements from the phenomenological representation. In most experiments, the zero-shot ‚Ñ¶-model significantly outperforms the target-trained model, with the average zero-shot MSE 34% better than the target-trained models. Fine-tuning the ‚Ñ¶g‚àídecoder on the target data results in a further improvement of 2%. We hypothesize that the ‚Ñ¶-model outperforms target-trained models due to its ability to handle shifts in the underlying distribution of physical quantities pQ(qi)over time, which is a common occurrence in complex, real-world processes. The target-trained models are less able to adapt to such distribution shifts and more prone to overfitting, as their training dataset samples from a much narrower distribution of measurements compared to the ‚Ñ¶-model. 8 A Phenomenological AI Foundation Model for Physical Signals A P REPRINT The relatively small performance difference between the zero-shot ‚Ñ¶-model and the fine-tuned ‚Ñ¶-model warrants further investigation. The limited amount of target data available for fine-tuning may be a contributing factor. A deeper study of fine-tuning approaches is left for future work. 6 Conclusions and Discussion Unified AI model across physical phenomena : A single AI foundation model, pretrained on diverse physical signal data, can generalize across different physical phenomena, sensor types, and complex application domains where the governing mechanisms and underlying probability distributions are unknown. Although preliminary, these findings suggest the possibility of a single AI model that can handle different areas of physics . Zero-shot AI capabilities for physical phenomena : The model demonstrated the ability to encode, represent, and forecast classes of physical behaviors it had not encountered during training, i.e. zero-shot learning of physical phenomena . For example, the model was able to predict thermoelectric dynamics despite not being trained on thermoelectric effects, or performing better on zero-shot prediction of transformer oil heating than models trained specifically on this target data. Parallels with Large Language Models (LLMs) : Our model showed similarities to LLMs, which can zero-shot match or surpass specialized models, but in the domain of physical signals. It has been argued that LLMs trained on large text corpora capture the semantic meaning and relationships in language, beyond just grammar and syntax patterns. Could there be a similar possibility in the physical world, where an AI model can capture the underlying structure of physical processes? 6.1 Practical implications Out-of-the-box sensor intelligence : The pre-trained foundation model would be able to analyze sensor measurements even with limited training data, making it useful in domains where data collection is challenging. This could give rise to sensor-agnostic systems that can work with specialized sensors for which data collection is difficult. Adaptation through decoders and fine-tuning : The architecture we proposed involves designing and training a foundation encoder with lightweight, fine-tuned decoders for specific phenomenological solutions. This approach allows the model to be easily adapted to a range of applications without requiring significant modifications to its core structure or large amounts of data for fine-tuning. Autonomous learning from observations : The self-supervised training of our model suggests its ability to learn physical behaviors directly from observational data. This capability opens the door to developing autonomous systems that can independently adapt to new operational environments or requirements without explicit human data labeling, simplifying the deployment of AI solutions. Advances in scientific discovery : We are particularly excited about the potential of phenomenological physical AI models in scientific discovery and experimental analysis, especially where data acquisition is limited. Such models could dramatically accelerate experimental research. 6.2 Future work This work represents an early exploration of unified AI models for physical signals with many open questions and limitations that warrant future work. While sensor agnosticism was introduced into our framework, this important aspect remains underexplored. Sensor characteristics can introduce significant attenuation and distortion of the true signal, affecting the accuracy of physical measurements. We also observed that measurement sampling frequency had a notable impact on the model‚Äôs performance, indicating the need for better handling of varying rates. Future work should examine model performance on non-periodic signals, edge cases, and anomalies, as well as the effects of human intervention. Exploring alternative designs for downstream decoders is another promising area, as it may lead to numerous practical applications. We hope that this work will stimulate discussion about the applicability of generative AI foundation models in the physical world and encourage further exploration by the community. References [1]I. Akomea-Frimpong, J. R. A. D. Dzagli, K. Eluerkeh, F. B. Bonsu, S. Opoku-Brafi, S. Gyimah, N. A. S. Asuming, D. W. Atibila, and A. S. Kukah. A systematic review of artificial intelligence in managing climate risks of ppp 9 A Phenomenological AI Foundation Model for Physical Signals A P REPRINT infrastructure projects. Engineering, Construction and Architectural Management , 2023. [2]U. Bandara. Daily minimum temperatures in melbourne. https://github.com/upul/WhiteBoard/blob/ master/data/daily-minimum-temperatures-in-me.csv . [3] D. Bertsekas and J. N. Tsitsiklis. Introduction to probability , volume 1. Athena Scientific, 2008. [4]M. Cranmer, S. Greydanus, S. Hoyer, P. Battaglia, D. Spergel, and S. Ho. Lagrangian neural networks. In ICLR 2020 Deep Differential Equations Workshop , 3 2020. [5]A. Das, W. Kong, R. Sen, Y . Zhou, and G. Research. A decoder-only foundation model for time-series forecasting. InICML2024 , 2024. [6]J. Devlin. Bert: Pre-training of deep bidirectional transformers for language understanding. arXiv preprint arXiv:1810.04805 , 2018. [7]C. F. G. dos Santos, D. de Souza Oliveira, L. A. Passos, R. G. Pires, D. F. S. Santos, L. P. Valem, T. P. Moreira, M. C. S. Santana, M. Roder, J. P. Papa, and D. Colombo. Gait recognition based on deep learning: A survey. ACM Computing Surveys , 55:1‚Äì34, 2 2023. [8]A. Dosovitskiy, L. Beyer, A. Kolesnikov, D. Weissenborn, X. Zhai, T. Unterthiner, M. Dehghani, M. Minderer, G. Heigold, S. Gelly, J. Uszkoreit, and N. Houlsby. An image is worth 16x16 words: Transformers for image recognition at scale, 2021. [9]E. T. E. Exchange). Hourly power consumption of turkey (2016-2020). https://www.kaggle.com/datasets/ hgultekin/hourly-power-consumption-of-turkey-20162020/data . [10] R. Girdhar, A. El-Nouby, Z. Liu, M. Singh, K. V . Alwala, A. Joulin, and I. Misra. Imagebind one embedding space to bind them all. In 2023 IEEE/CVF CVPR , pages 15180‚Äì15190. IEEE, 6 2023. [11] S. Greydanus, M. Dzamba, and J. Yosinski. Hamiltonian neural networks. In NeurIPS 2019 , 2019. [12] E. Hayashi, J. Lien, N. Gillian, L. Giusti, D. Weber, J. Yamanaka, L. Bedal, and I. Poupyrev. Radarnet: Efficient gesture recognition technique utilizing a miniature radar sensor. In CHI 2021 , pages 1‚Äì14. ACM, 2021. [13] M. P. B. Institute. Max planck weather dataset. https://www.bgc-jena.mpg.de/wetter/ . [14] R. Iten, T. Metger, H. Wilming, L. del Rio, and R. Renner. Discovering physical concepts with neural networks. Physical Review Letters , 124:010508, 1 2020. [15] Z. Liu, B. Wang, Q. Meng, W. Chen, M. Tegmark, and T.-Y . Liu. Machine-learning nonconservative dynamics for new-physics detection. Physical Review E , 104:055302, 11 2021. [16] M. Raissi, A. Yazdani, and G. E. Karniadakis. Hidden fluid mechanics: Learning velocity and pressure fields from flow visualizations. Science , pages 1026‚Äì1030, 2020. [17] A. Trindade. Electricity load diagrams 2011-2014. https://archive.ics.uci.edu/dataset/321/ electricityloaddiagrams20112014 . [18] B. C. van Fraassen. Scientific Representation: Paradoxes of Perspective . Oxford University PressOxford, 8 2008. [19] A. Vaswani. Attention is all you need. Advances in Neural Information Processing Systems , 2017. [20] H. Wang, T. Fu, Y . Du, W. Gao, K. Huang, Z. Liu, P. Chandak, S. Liu, P. V . Katwyk, A. Deac, A. Anandkumar, K. Bergen, C. P. Gomes, S. Ho, P. Kohli, J. Lasenby, J. Leskovec, T. Y . Liu, A. Manrai, D. Marks, B. Ramsundar, L. Song, J. Sun, J. Tang, P. Veli Àáckovi ¬¥c, M. Welling, L. Zhang, C. W. Coley, Y . Bengio, and M. Zitnik. Scientific discovery in the age of artificial intelligence. Nature , 620:47‚Äì60, 8 2023. Discusses the. [21] G. Woo, C. Liu, A. Kumar, C. Xiong, S. Savarese, and D. Sahoo. Unified training of universal time series forecasting transformers. arXiv preprint arXiv:2402.02592 , 2024. [22] H. Zhou. Electricity transformer dataset. https://github.com/zhouhaoyi/ETDataset . [23] W. W. Zhu, A. Berndsen, E. C. Madsen, M. Tan, I. H. Stairs, A. Brazier, P. Lazarus, R. Lynch, P. Scholz, K. Stovall, S. M. Ransom, S. Banaszak, C. M. Biwer, S. Cohen, L. P. Dartez, J. Flanigan, G. Lunsford, J. G. Martinez, A. Mata, M. Rohr, A. Walker, B. Allen, N. D. R. Bhat, S. Bogdanov, F. Camilo, S. Chatterjee, J. M. Cordes, F. Crawford, J. S. Deneva, G. Desvignes, R. D. Ferdman, P. C. C. Freire, J. W. T. Hessels, F. A. Jenet, D. L. Kaplan, V . M. Kaspi, B. Knispel, K. J. Lee, J. van Leeuwen, A. G. Lyne, M. A. McLaughlin, X. Siemens, L. G. Spitler, and A. Venkataraman. Searching for pulsars using image pattern recognition. The Astrophysical Journal , 781:117, 1 2014. 10 A Phenomenological AI Foundation Model for Physical Signals A P REPRINT A Appendix / supplemental material A.1 Phenomenological decoders The embedding vector Zemb i,n+1is then input into task-specific decoders. In this work, we examine two exemplar tasks: reconstruction and forecasting. Both decoders are lightweight MLPs with the same architecture, except for the dimensionality of the intermediate and last layers. A similar architecture can be used for other tasks such as classification. The motivating idea is that the encoder should capture and represent the salient information in the sensor measurement, allowing the downstream task-specific decoders to have a relatively small number of parameters and making them easily trainable. The decoder MLP architecture consists of a layer normalization step, a learnable linear layerWd,1‚ààRdmodel√ódint, ReLU activation, and a second learnable linear layer Wd,2‚ààRdint√ódout. The intermediate dimension dintand output dimension doutvary according to the task. For reconstruction, doutis equal to the number of points in the input measurement, dout=nlpatchanddint=dout 2. For forecasting, dint=dmodel anddout=lpredwhere lpred denotes the desired length of the prediction window. A.2 Thermoelectric experiments: examples of corner cases (a) Corner case 1  (b) Corner case 2 (c) Corner case 3 Figure 7: Examples of forecasts with corner cases. (a) Example from recording 1, (b) Example from recording 2, (c) Example from recording 3 A.3 Training datasets 11 A Phenomenological AI Foundation Model for Physical Signals A P REPRINT Dataset LOOP_SEATTLE LOS_LOOP PEMS03 PEMS07 PEMS_BAY SZ_TAXI australian_electricity_demand bdg-2_bear bdg-2_fox bdg-2_panther bdg-2_rat borealis bull cockatoo covid19_energy elecdemand elf gfc12_load gfc14_load gfc17_load hog ideal kdd2022 kdd_cup_2018_with_missing london_smart_meters_with_missing oikolab_weather pdb pedestrian_counts saugeenday sceaux smart solar_power spain subseasonal_precip sunspot_with_missing taxi_30min traffic_hourly uber_tlc_hourly weather wind_farms_with_missing wind_powerRepository Domain # observations LibCity Transport 33953760 LibCity Transport 7094304 LibCity Transport 9382464 LibCity Transport 24921792 LibCity Transport 16937700 LibCity Transport 464256 Monash Energy 1153584 BuildingsBenchEnergy 1482312 BuildingsBenchEnergy 2324568 BuildingsBenchEnergy 919800 BuildingsBenchEnergy 4728288 BuildingsBenchEnergy 83269 ProEnFo Energy 719304 ProEnFo Energy 17544 ProEnFo Energy 31912 Monash Energy 17520 ProEnFo Energy 21792 ProEnFo Energy 788280 ProEnFo Energy 17520 ProEnFo Energy 140352 ProEnFo Energy 421056 BuildingsBenchEnergy 1265672 Other Energy 4727519 Monash Energy 2897004 Monash Energy 166238880 Monash Climate 800456 ProEnFo Energy 17520 Monash Transport 3130762 Monash Nature 23711 BuildingsBenchEnergy 34223 BuildingsBenchEnergy 95709 Monash Energy 7397222 ProEnFo Energy 35064 Climate 9760426 Monash Nature 73894 GluonTS Transport 54999060 Monash Transport 14978112 GluonTS Transport 1129444 Monash Climate 42941700 Monash Energy 172165370 Monash Energy 7397147SubseasonalClima Figure 8: Datasets used for training 12","cs.LG, cs.AI, eess.SP",Arxiv
18,AI-Cybersecurity Education Through Designing AI-based Cyberharassment Detection Lab,"Ebuka Okpala, Nishant Vishwamitra, Keyan Guo, Song Liao, Long Cheng, Hongxin Hu, Yongkai Wu, Xiaohong Yuan, Jeannette Wade, Sajad Khorsandroo",2024-05-13 19:09:50+00:00,http://arxiv.org/pdf/2405.08125v2,"Cyberharassment is a critical, socially relevant cybersecurity problem because of the adverse effects it can have on targeted groups or individuals. While progress has been made in understanding cyber-harassment, its detection, attacks on artificial intelligence (AI) based cyberharassment systems, and the social problems in cyberharassment detectors, little has been done in designing experiential learning educational materials that engage students in this emerging social cybersecurity in the era of AI. Experiential learning opportunities are usually provided through capstone projects and engineering design courses in STEM programs such as computer science. While capstone projects are an excellent example of experiential learning, given the interdisciplinary nature of this emerging social cybersecurity problem, it can be challenging to use them to engage non-computing students without prior knowledge of AI. Because of this, we were motivated to develop a hands-on lab platform that provided experiential learning experiences to non-computing students with little or no background knowledge in AI and discussed the lessons learned in developing this lab. In this lab used by social science students at North Carolina A&T State University across two semesters (spring and fall) in 2022, students are given a detailed lab manual and are to complete a set of well-detailed tasks. Through this process, students learn AI concepts and the application of AI for cyberharassment detection. Using pre- and post-surveys, we asked students to rate their knowledge or skills in AI and their understanding of the concepts learned. The results revealed that the students moderately understood the concepts of AI and cyberharassment.","AI-Cybersecurity Education Through Designing AI-based Cyberharassment Detection Lab Ebuka Okpala1, Nishant Vishwamitra2, Keyan Guo3, Song Liao1, Long Cheng1, Hongxin Hu3, Xiaohong Yuan4, Jeannette Wade5and Sajad Khorsandroo4 1School of Computing, Clemson University 2Department of Information Systems and Cyber Security, University of Texas at San Antonio 3Department of Computer Science and Engineering, University at Buffalo 4Department of Computer Science, North Carolina A&T State University 5University of North Carolina at Greensboro Abstract Cyberharassment is a critical, socially relevant cybersecurity problem because of the adverse effects it can have on tar- geted groups or individuals. While progress has been made in understanding cyber-harassment, its detection, attacks on ar- tificial intelligence (AI) based cyberharassment systems, and the social problems in cyberharassment detectors, little has been done in designing experiential learning educational ma- terials that engage students in this emerging social cyberse- curity in the era of AI. Experiential learning opportunities are usually provided through capstone projects and engineer- ing design courses in STEM programs such as computer sci- ence. While capstone projects are an excellent example of ex- periential learning, given the interdisciplinary nature of this emerging social cybersecurity problem, it can be challeng- ing to use them to engage non-computing students without prior knowledge of AI. Because of this, we were motivated to develop a hands-on lab platform that provided experiential learning experiences to non-computing students with little or no background knowledge in AI and discussed the lessons learned in developing this lab. In this lab used by social sci- ence students at North Carolina A&T State University across two semesters (spring and fall) in 2022, students are given a detailed lab manual and are to complete a set of well-detailed tasks. Through this process, students learn AI concepts and the application of AI for cyberharassment detection. Using pre- and post-surveys, we asked students to rate their knowl- edge or skills in AI and their understanding of the concepts learned. The results revealed that the students moderately un- derstood the concepts of AI and cyberharassment. Compar- ing the learning experiences of students in the Spring and Fall semesters using the post-surveys, in the Spring semester, while students understood the purpose of detecting cyberha- rassment, their knowledge of how AI works, state-of-the-art (SOTA) cyber-harassment detectors and automated cyberha- rassment detection did not improve. After refining the lab using the student feedback from the Spring semester, stu- dents‚Äô knowledge of AI and automated cyberharassment de- tection significantly improved. We learn that supplementing the hands-on lab with a theoretical background lecture im- proves understanding of the lab contents, indicating that sup- plementing experiential learning with theoretical constructs improves the student learning experience. These findings con- firm that the developed lab is viable for teaching AI-driven so- Copyright ¬© 2022, Association for the Advancement of Artificial Intelligence (www.aaai.org). All rights reserved.cially relevant cybersecurity to non-computing students and can be used by other institutions. 1 Introduction With the rise of social media, cyberharassment ( e.g., cyber- bullying and cyberhate) has become more prevalent in daily interactions (Thomas et al. 2021). It often involves inappro- priate online behavior anddeliberate cyber threats against individuals (such as teenagers (Swearer 2013)), or specific social groups on the grounds of characteristics such as race, sexual orientation, gender, or religious affiliation (Wachs, Wright, and Vazsonyi 2019). Cyberharassment is identified as a critical socially-relevant cybersecurity problem (Social- Cybersecurity 2019a,b), since it can have significant nega- tive impacts on the safety and emotional well-being of tar- geted groups, especially teens and minority communities. The Cyberbullying Research Center‚Äôs research reported that 37% of middle and high school students have been cyberbul- lied during their lifetime (Patchin 2019), and this number is expected to further increase as teens continue to have an in- creased online presence. Cyberharassment can even result in catastrophic consequences of increased suicide among the affected teens who are unable to appropriately get away from the harassment (Ducharme 2017). The shift from tra- ditional text-based cyberharassment to multimodal (i.e., both texts and images) (Challenge 2020) cyberharassment poses a challenge to effective cyberharassment detection. Artificial Intelligence (AI)/Machine Learning (ML) has immense potential to solve this critical problem. Automatic detection methods of both text-based and image-based cy- berbullying using AI techniques have emerged (Zhong et al. 2016). Internet companies such as Facebook and Google have also deployed AI algorithms to detect toxic content on social media (Facebook 2023; Google-Jigsaw 2019). Meanwhile, adversaries may exploit vulnerabilities of AI- based classifiers to evade existing cyberharassment detec- tors (Goodfellow, Shlens, and Szegedy 2015; Li et al. 2019; Zhang et al. 2020). There exist social problems , such as fair- ness and ethics, in AI models for cyberharassment detection. For example, some particular demographic groups are un- fairly treated by AI-based detectors (Sap et al. 2019; Okpala et al. 2022). Concerns have been raised that the vulnerabili- ties of AI models as well as the robustness against attacks arearXiv:2405.08125v2  [cs.CY]  16 May 2024 biased towards underrepresented groups (Nanda et al. 2020). As such, an unfair AI-based cyberharassment detection sys- tem may perpetuate and aggravate existing prejudices and inequalities in society. As cyberharassment grows online, particularly on social media, there is a need to equip computing students with the AI skills and knowledge required to design and develop AI- based systems to detect and remove cyberharassment. As the field of cyberharassment is interdisciplinary, to develop bet- ter detection systems, non-computing students, especially social science students, need to have a general understanding of AI and how it is being used in detecting cyberharassment. A major concern with University training is how siloed it can be and how challenging it is for young adults to truly explore their options. Interventions such as the one outlined here would enable effective collaboration between Computer sci- ence and social science students and researchers to create better cyberharassment detection systems. It is, therefore, imperative to teach AI-based cyberharassment in universi- ties to both computing and non-computing students. This intervention also benefits social science students by provid- ing insights into how they can address social problems us- ing computer science, a discipline they may have otherwise had no exposure. This practical application of their social scientific passions may influence the degree minors or grad- uate programs students pursue moving forward as more re- searchers are needed in this intersectional area since this is a growing area of concern. To teach and engage students in learning cybersecu- rity and AI-related topics such as data science, instruc- tors have adopted a wide range of pedagogical methods such as flipped classroom (Nwokeji, Stachel, and Holmes 2019; Eybers and Hattingh 2016), project-based learning (Nwokeji and Frezza 2017; Velaj et al. 2022), gamification (Matovu et al. 2022), among others. Experiential learning has been regarded as one of the best ways to train future en- gineers by engineering educators (Samavedham and Ragu- pathi 2012). Towards this end, experiential learning could be used in teaching AI socially relevant cybersecurity to non- computing students. Experiential learning, simply put, is learning from experi- ence or learning by doing. More formally, experiential learn- ing is a type of active learning where students learn through experience (Kolb and Kolb 2005; Kolb 2014). Experiential learning is active rather than passive. Instructors have recog- nized how instrumental experiential learning is in providing students with valuable hands-on experience in an AI/ML- related field such as data science (Barman et al. 2022; Allen 2021; Rosenthal and Chung 2020; Anderson et al. 2014). In our study, we teach AI-based socially relevant cybersecu- rity for cyberharassment detection for two semesters using a hands-on experiential lab. Before the introduction of the lab, a questionnaire was used to rate the AI skills and knowledge of the students. After the end of the lab, another question- naire was used to ask the students to rate their skills and knowledge of AI and AI-based cyberharassment detection covered in the lab. Our analysis and statistical results (using sample t-test) showed that experiential learning engages students in learn-ing AI-based cyberharassment, and it is viable for teach- ing AI skills to non-computing students. Also, our findings show that having a theoretical lecture before the experiential lab improves understanding of the lab contents. These find- ings confirm that the developed lab is viable for teaching AI-driven socially relevant cybersecurity to non-computing students and can be used in other institutions. 2 Related Work Instructors have mainly employed active learning paradigms such as experiential learning to teach AI/ML-related courses, mostly in engineering and Computer Science. The shortcoming of standard pedagogical methods in data sci- ence in online courses and data science specializations are detailed in (Serrano et al. 2017). Noting that experiential learning mitigates the shortcomings as it focuses on prob- lems to be solved instead of on specific methods being used. Using the experiential learning style theory introduced in (Kolb 2014), they developed a framework to create experi- ences in a deep learning course. Finally, they review dataset repositories used in data science and propose requirements for an experiential learning platform to offer experiences. Understanding the importance of capstone projects in data science courses, (Allen 2021) observed that more at- tention needs to be paid to how these projects or curricu- lum are structured. In their work, they develop an inter- disciplinary, client-sponsored capstone program in data sci- ence and machine learning. In the program, students from different undergraduate and graduate degree programs en- gage in experiential learning by completing a large-scale data science or machine learning capstone project toward the program‚Äôs end‚Äî the projects were framed to be chal- lenging and encompass all aspects of data science. The cur- riculum was split into modules focusing on the data science pipeline, ethics, and communication. It was developed using evidence-based approaches from capstone and design pro- grams in engineering, practicums, and other project-based courses. In (Barman et al. 2022), the challenges in using capstone projects as experiential learning opportunities in data sci- ence courses due to resource constraints and data legalities involved in students working with clients on clients‚Äô real- world data sets are emphasized. A novel client-facing con- sulting data science course that provides experiential learn- ing to undergraduate and graduate students is developed to tackle this issue. In an ethics and data analytics course where engineering students developed solutions for smart grid, smart health, and smart mobility, (Martin and Bombaerts 2022) explored how professional responsibility is understood by engineer- ing students working on a solution to a real-world problem proposed by a client. The authors acknowledge that as tech- nology such as AI/ML advances, it presents complex chal- lenges that require an interdisciplinary approach. In line with this, they introduce students to real-life problems presented as socio-technical challenges embedded in a learning con- text using Challenge Based Learning (CBL), an experiential learning method. The most recent works more closely related to our work are the works of (Salazar-Gomez et al. 2022) and (Hashim, Tatarniuk, and Harasymchuk 2022). AI education is a chal- lenging task because it is not well studied, making it one of the challenges in engineering education (Salazar-Gomez et al. 2022). With this knowledge, through a series of di- rectives, acts, and laws, the United States of America gov- ernment highlighted the importance of the Department of Defence to embrace AI at speed and scale (Salazar-Gomez et al. 2022). In (Salazar-Gomez et al. 2022), the Department of Defence (DoD) and the United States Air Force (USAF) partnered with MIT to design and develop educational re- search activities that will provide AI training for DoD and USAF personnel with diverse professional and educational backgrounds from high school to graduate degrees, and to the general public. The educational research activities ex- plored various ways to teach AI education, online and in- person, to deliver experiential learning experiences to learn- ers of diverse backgrounds. In the program‚Äôs first iteration, they developed and studied the learning journeys of three different types of USAF employees (leaders, developers, and users). The findings will be used in future iterations of the program. The authors in (Velaj et al. 2022) design a data science course for non-computer science students. The course goal was to develop a new method for designing a data science course suitable for teaching students with different back- grounds in data science. The goal of the new method was to ensure that students gained skills on how to set up, manage, and conduct data science projects. The data science course was taught in Business Analytics and Data Science and the Digital Humanities master‚Äôs programs. Students were intro- duced to KNIME, an open-source analytics platform for cre- ating data science workflows without coding. Students were also encouraged to use Python and R programming lan- guages if they were already familiar with them. The results reveal that the course is well designed and structured for stu- dents with different backgrounds, that the students gained skills to carry out a data science project, and that students liked the analytics platform used in the project work. The popularity of AI/ML has led to the proliferation of research studies on designing better data science education materials, as shown in some of the works reviewed. These works mainly focused on designing data science courses for engineering and computing students, with a few focusing on non-computing students. Most importantly, these works do not focus on experiential, hands-on labs that will provide students with the experience to bridge the gap between the- oretical knowledge and practice. We fill this gap by develop- ing experiential, hands-on labs for non-computing students and discuss the lessons learned in developing these hands-on labs. 3 Design & Development of AI Socially Relevant Cyberharassment Lab 3.1 Lab Structure The experiential learning laboratory consists of two labs where students become familiar with the basics of AI andthe AI/ML pipeline for applying ML to a problem. Objectives We designed the experiential learning labora- tories with specific learning objectives. Essential for guiding student learning, the learning objectives guided and helped develop our laboratories. This ensured that our study cov- ered the fundamental elements of AI and different dimen- sions of AI-driven social cybersecurity. It also demonstrated the interplay between AI and cybersecurity and how AI is used for cyberharassment detection. Specifically, our learn- ing objective is to develop hands-on experiential labs that will increase general awareness of socially relevant cyber- security and AI, which is suitable for teaching AI socially relevant cybersecurity to non-computing students. Lab Our lab adopts a phased design approach. Initially, AI and cybersecurity experts in our team designed the prelim- inary lab and implemented and integrated the cyberharass- ment detection code in the lab. The lab was designed consid- ering the student profiles, AI and cyberharassment learning objectives, and desired skills. Subsequently, social scientists in our team engaged in dialogues with the AI and cybersecu- rity scholars to enhance the lab‚Äôs reach and inclusivity. After the concerns of the social scientists have been addressed in the next iteration of the lab, the researchers collaboratively designed the lecture sessions and lab assignments. The col- laborative and interdisciplinary approach ensured that the lab was accessible to a broad range of learners. Our lab, Cyberbullying Detection Using AI , is designed to guide students through a series of learning objectives and the AI development process. The learning objectives include understanding AI, understanding the concept and severity of cyberharassment, the importance of using AI in address- ing this widespread online social issue, and introduction to the development and the use of AI systems for cyberharass- ment detection. For the AI development process, the AI ex- perts ensured that the design followed the AI development pipeline (data collection, verification and preprocessing, fea- ture extraction, AI system training, and testing, and use of trained AI systems on a task) to provide students with the fundamentals of the processes followed to develop an AI system. In parallel, the social scientists offered profound in- sights into the peculiarities of cyberharassment, highlighting its significance and the pressing need for AI intervention. All researchers from diverse academic backgrounds involved in this work cross-verified the lab content to ensure the lab is easily accessible to non-computing students. This process ensures that those new to AI and cyberharassment can eas- ily grasp and engage with our lab materials. Figure 2 shows a comprehensive instruction manual prepared for the lab to facilitate independent learning and ensure students accom- plish the learning objectives outside of the classroom. Lab Delivery To facilitate a comprehensive understanding of our lab, we implement a three-fold approach that includes a lecture phase, an experiential hands-on experience phase, and a phase dedicated to independent work. Before the students can work on the hands-on lab, a back- ground lecture designed and developed by the team of re- searchers is given to the students. In the lecture, the students Figure 1: A screenshot illustrating the lab interface get acquainted with the nature and nuances of cyberharass- ment, AI, the AI development process, and the need for uti- lizing AI for cyberharassment detection. After introducing the students to the fundamentals needed to complete the lab through the lecture, students are intro- duced to the hands-on lab and guided through the hands-on experience platform depicted in Figure 1. The lab is devel- oped on the Google Colab platform. The hands-on experi- ence allows students to apply theory in practice. It facilitates a deeper understanding of how AI solutions are developed and, most importantly, how AI can be utilized to mitigate cyberharassment. We have chosen to utilize the Google Co- lab platform for several compelling reasons. First and fore- most, Google Colab provides an interactive environment that integrates text and code cells. This not only enables us to write and execute Python code for deploying AI models and detecting cyberharassment content, but it also allows us to provide clear, step-by-step explanations alongside the code. Moreover, these text cells can be utilized to embed visual aids and explanations such as Figure 3, facilitating a more comprehensive understanding of the concepts and processes involved. Secondly, Google Colab offers access to free GPU resources. This is a significant advantage for our partici- pants as the computational power of GPUs can greatly expe- dite the execution of AI models, ensuring that experiments are completed within a reasonable time frame. Furthermore, Google Colab‚Äôs cloud-based nature eliminates the need for complex setups on personal machines, lowering the entry barrier for participants. This easy access, combined with the platform‚Äôs robust functionality, makes Google Colab an Figure 2: A screenshot illustrating Lab 1 instruction manual Figure 3: The visual aid for model explanation in Lab 1 ideal tool for our hands-on experiments in AI education. Figure 4: One example of a lab activity In our labs, we have meticulously curated post-lab assign- ments that not only enhance the engagement factor but also deepen students‚Äô comprehension of the material. For exam- ple, as depicted in Figure 4, students are tasked with using arbitrary input statements to test their AI‚Äôs capability to rec- ognize cyberharassment content. In the Google Colab plat- form, the correct execution of a cell could depend on the execution of the previous cell, and students are made aware of this, which is also in the lab manual. In the example ac- tivity shown in Figure 4, students must complete all prior steps to access the developed AI model for cyberharassment Spring 2022 Fall 2022 Demographic Percent Percent Male 23.81% 14.29% Female 71.43% 85.71% Freshman 23.81% 4.76% Sophomore 33.33% 66.67% Junior 38.10% 9.52% Senior 4.76% 14.29% Graduate 0.00% 4.76% Table 1: Demographics of students who participated in the Social Statistics 1 course in the Spring and Fall 2022 semesters. detection. Additionally, we have formulated post-lesson dis- Figure 5: One example of Lab 1‚Äôs discussion questions cussion questions. Figure 5 depicts an example question. We aim to stimulate students‚Äô critical thinking by encouraging them to consider other real-world problems that could be al- leviated through AI. 3.2 Course Structure The Sociology program at North Carolina A&T State Uni- versity includes courses on Social Statistics, parts 1 and 2. Students from Social Statistics 1 were included in this inter- vention. Students in Social Statistics 1 learn how to interpret and describe data. Students are exposed to topics such as distributions; descriptive statistics (e.g., measures of central tendency and dispersion); statistical null-hypothesis testing, and independent and dependent samples t-tests. They also learn the basic operation of the statistical computing soft- ware program SPSS. Throughout the course, students learn the value statistical analysis offers to our attempts to address real-world social problems. This course runs 15 weeks and includes lecture and lab time for analysis. Students attend two 75-minute classes each week. Lectures involve defini- tions and the demonstration of practice problems. Lab time involves hands-on computing using SPSS. In Table 1, we re- port some basic demographics of the students in the Social Statistics 1 class in the Spring and Fall semesters. 4 Methods 4.1 Survey Design To evaluate the impact of our lab on students, we designed two surveys (pre-survey and post-survey) to collect quanti- tative and qualitative data from the students. Students rate1 = Proficient, 5 = None Pre Post Automated cyberharassment de- tection.3.95 3.56 State-of-The-Art cyberharassment detectors.4.33 3.67 How machine learning works. 4.10 3.89 The lab engaged me in learning the topic of AI Driven Socially- Relevant Cybersecurity.- 2.78 I enjoyed the learning experience of this lab(s).- 2.89 I think the learning experience with the lab(s) is effective.- 2.78 I am satisfied with the level of ef- fort the lab requires for learning this topic.- 2.78 After using the lab(s), I have better understanding about the concepts learned.- 3.44 Table 2: Spring 2022 semester survey results. their knowledge about AI and machine learning methods for cyberharassment detection. For both surveys, students rated their knowledge using a 5-point scale, with 1 represent- ing ‚ÄùProficient or strongly agree‚Äù and 5 representing ‚ÄùNone or strongly disagree‚Äù. In the post-survey, students also rate the lab from different perspectives. The post-survey also in- cludes three open questions to understand what helped the students the most in understanding the concepts taught, the difficulties faced in using the lab, and any suggestions for improving the learning experience of the lab. 4.2 Data Collection Before our data collection, we obtained our institution‚Äôs Institution Review Board (IRB) approval. All the students were notified that the survey would remain confidential and only the research team could view the data. Students were also informed that their participation was optional. Before the class, students filled out the pre-survey to evaluate their knowledge level, and after the lab, students filled the post- survey. Our surveys are conducted using the Qualtrics plat- form (Qualtrics 2024). 4.3 Data Analysis To analyze the collected data, we first compared the average knowledge score between pre-survey and post-survey. Then we used the sample t-test to determine the existence of statis- tical significance between the observed differences. We use a significance level of 0.05. If the p-value of the t-test is less than 0.05, we conclude a significant difference exists. Scipy, an open-source Python library for scientific computing, was used to analyze the collected data. 1 = Proficient, 5 = None Pre Post Automated cyberharassment de- tection.4.38 3.31 State-of-The-Art cyberharassment detectors.4.71 3.44 How machine learning works. 4.43 3.13 The lab engaged me in learning the topic of AI Driven Socially- Relevant Cybersecurity.- 2.56 I enjoyed the learning experience of this lab(s).- 2.44 I think the learning experience with the lab(s) is effective.- 2.13 I am satisfied with the level of ef- fort the lab requires for learning this topic.- 2.56 After using the lab(s), I have better understanding about the concepts learned.- 2.31 Table 3: Fall 2022 semester survey results. 5 Results AND Discussion We analyze the data for the Spring 2022 and Fall 2022 semesters and compare the learning experiences of both semesters because the student feedback from the Fall 2022 semester, as discussed in the lesson learned section 5.10, provided data and insights that were used to inform and refine the lab in the Spring 2022 semester. Before intro- ducing the labs to the students, they were invited to com- plete a pre-questionnaire, and after completing the labs, they were invited to complete a post-questionnaire. The pre and post-questionnaire contained eleven questions in total. The first three questions were asked in both the pre and post-questionnaire. The remaining eight questions were only asked in the post-questionnaire in addition to the first three questions. Of the eight questions, the last three were open- ended questions. In the initial data analysis, we focus on the first three questions in the pre-and-post questionnaires ad- ministered to the students. In the final data analysis, we fo- cus on only the last eight questions in the post-questionnaire that the students completed after completing the labs to gauge their understanding and perception of the lab. The data analysis focused on survey participation, knowledge in automated cyberharassment detection, evaluation of ML classifiers, current state-of-the-art cyberharassment systems, how ML works, general learning experience and engage- ment of the labs, and student qualitative feedback. Tables 2 and 3 show the Spring 2022 and Fall 2022 survey results. 5.1 Survey Participation The survey was presented to students in the Spring 2022 and Fall 2022 semesters. Of the 21 students enrolled in the course in Spring 2022, 21 (100%) students completed the pre-survey, and 9 (43.9%) students completed the post- survey. In the Fall 2022 semester, 21 students were enrolledin the class, of which all students completed the pre-survey, and 16 (80%) students completed the surveys‚Äîshowing that the Fall 2022 session of the course had more student partici- pation than when the lab was first introduced in Spring 2022. 5.2 Cyberharassment Detection During the pre-survey of Spring 2022, 19.05% of the stu- dents rated their knowledge or skills in automated cyber- harassment detection in the Proficient andGood category, about 14.29% of the students rated themselves as having moderate knowledge or skill, and more than half (66.67%) of the students rated their knowledge or skills in the A lit- tleandNone category. After the post-survey, 33.33% of the students rated their knowledge or skills in the Proficient andGood category, 0% rated themselves as moderate, and 66.66% rated their knowledge in the A little andNone cate- gory. In the pre-survey Fall 2022, 4.76% of the students rated their knowledge in the Proficient andGood category, 19.05% as having moderate skill or knowledge, and 76.19% rated their knowledge or skills in the A little andNone cate- gory. On the other hand, in the post-survey of Fall 2022, 25% of the students rated their knowledge in the Proficient and Good categories, 25% rated themselves as moderate, and 50% rated their knowledge in the A little andNone category. Most students had little knowledge of automated cyber- harassment detection before enrolling in the class and par- ticipating in the lab. After completing the lab and compar- ing the means of the pre-survey and post-survey of Spring 2022 as shown in Table 2, there is no significant difference (p >0.05) in the knowledge of automated cyberharassment detection. For the Fall 2022 semester, there is a significant difference ( p < 0.05) in the knowledge of automated cy- berharassment detection as indicated in Table 3. Indicating that the improvements made after the Spring 2020 semester helped improve students‚Äô knowledge or skill in the Fall 2022 semester. 5.3 State of the Art Cyberharassment Systems We determined the knowledge or skills of students in the state-of-the-art cyberharassment systems before and after the lab. During the pre-survey of Spring 2022, 4.76% of the students rated their knowledge or skills in state-of-the-art systems in the Proficient andGood categories, about 19.05% of the students rated themselves as having moderate knowl- edge or skill, and more than half (76.19%) of the students rated their knowledge or skills in the A little andNone cat- egory. After the post-survey, 33.33% of the students rated their knowledge or skills in the Proficient andGood cate- gory, 0% rated themselves as moderate, and 66.66% rated their knowledge in the A little andNone category. In the pre-survey Fall 2022, 4.76% of the students rated their knowledge in the Proficient and Good categories, 4.76% as having moderate skill or knowledge, and 90.47% rated their knowledge or skills in the A little andNone cat- egory. On the other hand, in the post-survey of Fall 2022, 18.75% of the students rated their knowledge in the Profi- cient andGood categories, 25% rated themselves as mod- erate, and 56.25% rated their knowledge in the A little and None category. Many students had little knowledge of the state-of-the- art cyberharassment system before the lab. After complet- ing the lab and comparing the means of the pre-survey and post-survey of Spring 2022, there is no significant differ- ence ( p > 0.05) in the knowledge of state-of-the-art sys- tems. For the Fall 2022 semester, there is a significant dif- ference ( p < 0.05) in the knowledge of state-of-the-art sys- tems. Similar to the knowledge of cyberharassment detec- tion, the improvements made after the Spring 2020 semester helped in improving students‚Äô knowledge or skill in the Fall 2022 semester. 5.4 How Machine Learning Works We also determined if the students knew how machine learn- ing worked before the lab and if they learned how machine learning worked after the lab. From the pre-survey of Spring 2022, results show that 9.52% of the students rated their knowledge in how ML worked in the Proficient andGood categories, about 28.57% of the students rated themselves as having moderate knowledge, and more than half (61.9%) of the students rated their knowledge or skills in the A little and None category. After the post-survey, 22.22% of the students rated their knowledge in the Proficient andGood category, 0% rated themselves as moderate, and 77.77% rated their knowledge in the A little andNone category. In the pre-survey Fall 2022, 4.76% of the students rated their knowledge in the Proficient and Good categories, 14.29% as having moderate skill or knowledge, and 80.96% rated their knowledge or skills in the A little andNone cat- egory. On the other hand, in the post-survey of Fall 2022, 26.66% of the students rated their knowledge in the Profi- cient andGood categories, 33.33% rated themselves as mod- erate, and 40% rated their knowledge in the A little andNone category. In both semesters, more students had little knowledge of how ML worked before the lab. After completing the lab and comparing the means of the pre-survey and post-survey of Spring 2022, there is no significant difference ( p > 0.05) in the knowledge of how ML worked. For the Fall 2022 semester, there is a significant difference ( p < 0.05) in the knowledge of how ML worked. The lab refinements made after the Spring 2020 semester helped improve students‚Äô knowledge or skill in the Fall 2022 semester. 5.5 Lab Engagement The students responded positively to how the lab engaged them in learning about AI-driven socially relevant cyberse- curity. In the Spring of 2022, 44.44% of the students rated how engaging the lab was in the Strongly agree andSome- what agree categories, 22.22% rated engagement as moder- ate, and 33.33% rated engagement in the Somewhat disagree andStrongly disagree category. In the Fall of 2022, more than half (62.5%) of the students rated how engaging the lab was in the Strongly agree andSomewhat agree categories, 12.50% rated engagement as moderate, and 25% rated en- gagement in the Somewhat disagree andStrongly disagree category.The mean response by students in the Spring and Fall semesters was 2.78 and 2.56, respectively. The mean values are between the Somewhat agree andNeither agree nor dis- agree with the mean value of Fall closer to Somewhat agree than the Spring mean, indicating that the students‚Äô lab en- gagement was positive and not very negative. 5.6 Learning Experience The student‚Äôs response to the overall learning experience and the effectiveness of the experience was somewhat positive. In the Spring of 2022, 33.33% of the students rated the learn- ing experience in the Strongly agree andSomewhat agree categories, 44.44% rated the learning experience as moder- ate, and 22.22% rated the learning experience in the Some- what disagree andStrongly disagree category. For the effec- tiveness of the learning experience, 44.44% of the students rated the effectiveness in the Strongly agree andSomewhat agree category, 33.33% rated effectiveness as moderate, and 22.22% rated learning experience in the Somewhat disagree andStrongly disagree category. In the Fall of 2022, more than half (68.75)% of the stu- dents rated the learning experience in the Strongly agree andSomewhat agree categories, 12.50% rated learning ex- perience as moderate, and 18.75% rated learning experience in the Somewhat disagree andStrongly disagree category. For the effectiveness of the learning experience, 43.75% of the students rated the effectiveness in the Strongly agree andSomewhat agree category, 37.50% rated effectiveness as moderate, and 18.75% rated learning experience in the Somewhat disagree andStrongly disagree category. For the overall learning experience, the mean response by students in the Spring and Fall semesters was 2.89 and 2.44, respectively. The mean value of the Fall semester is closer toSomewhat agree , indicating that the students had a more positive learning experience in the Fall semester. For the ef- fectiveness of the learning experience, the mean response from students in the Spring and Fall semesters was 2.78 and 2.13, respectively. Similar to the learning experience, the mean value of the Fall semester is closer to Somewhat agree , indicating that in the Fall semester, the effectiveness of the learning experience was more positive for the students. 5.7 Lab Difficulty We gauged the difficulty of the lab for the students, and the response indicated that the students neither agreed nor disagreed that the labs were demanding. In the Spring of 2022, 44.44% of the students rated the level of effort re- quired to learn the topic in the Strongly agree andSome- what agree categories, 22.22% rated engagement as moder- ate, and 33.33% rated learning effort in the Somewhat dis- agree andStrongly disagree category. In the Fall of 2022, more than half (62.5%) of the students rated how engaging the lab was in the Strongly agree andSomewhat agree cat- egories, 25% rated learning effort as moderate, and 12.50% rated learning effort in the Somewhat disagree andStrongly disagree category. The mean response by students in the Spring and Fall semesters was 2.78 and 2.56, respectively. The mean values are between the Somewhat agree andNeither agree nor dis- agree with the mean value of Fall closer to Somewhat agree than the Spring mean, indicating that the level of effort re- quired to learn the topic by the students was better in the Fall than in Spring even though the students neither agree nor disagree. 5.8 Understanding of Concepts To understand whether the students better understood the concepts learned, we determined students‚Äô grasp of the con- cepts introduced in the lab. In the Spring of 2022, 22.22% of the students rated understanding of concepts in the Strongly agree andSomewhat agree categories, 33.33% rated under- standing of concepts as moderate, and 44.44% rated under- standing of concepts in the Somewhat disagree andStrongly disagree category. In the Fall of 2022, 43.75% of the stu- dents rated understanding of concepts in the Strongly agree andSomewhat agree categories, 25% rated understanding of concepts as moderate, and 31.25% rated learning effort in theSomewhat disagree andStrongly disagree category. The mean response by students in the Spring and Fall semesters was 3.44 and 2.31, respectively. The mean value for the Spring semester is between Neither agree nor dis- agree and Somewhat disagree . For the Fall semester, the mean value is between Somewhat agree andNeither agree nor disagree . These values indicate that in the Spring semester, students understanding of concepts learned was closer to negative (Somewhat disagree). However, in the Fall semester, students better understood the concepts learned. 5.9 Qualitative Feedback Our last three survey questions were open-ended questions about what has been the most helpful for learning, what has caused the most difficulty using the lab, and how the lab can be improved. We used these as the qualitative data source, providing insights into students‚Äô perceptions and preferences. In general, the students understood the purpose of the lab and cyberharassment, found the terminology con- fusing, and wanted the lab to be more fun and engaging. In the Spring 2022 semester, in response to ‚ÄúWhat has been most helpful for your learning in using the lab so far‚Äù. No- table student responses were: ‚ÄúI understand the purpose of cyberbullying and its purpose and how it is designed to be successful‚Äù and‚ÄúThe guest speakers coming in to help‚Äù . For the Fall 2022 semester, the notable student responses were: ‚ÄúThe most helpful part for my learning has been the hands-on activity, being able to ask questions while going through the work and having a guest speaker gave some new insight.‚Äù ,‚ÄúI learned a lot about cyber bullying that I did not know about and the different forms it can come in.‚Äù , ‚ÄúThe lab was helpful with detecting cyber harassment.‚Äù ,‚ÄúIt was nice knowing the set up and watching the steps be per- formed‚Äù , and ‚ÄúThe videos and zoom call‚Äù . For the question ‚ÄúIn terms of your learning, what has caused you the most difficulty in using the lab so far‚Äù. The notable student responses in the Spring 2022 semester were: ‚ÄúI had a hard time understanding how to actually com- plete on my own‚Äù ,‚ÄúThe terminology‚Äù ,‚ÄúI could not stay fo- cus and lacked engagement‚Äù , and ‚ÄúBeing online.‚Äù Notableresponses in the Fall semester were: ‚ÄúIt was difficult that when there was a troubleshooting error that I could not walk through it with someone like I could in person.‚Äù ,‚ÄúThe most difficult part is not usage of the lab itself; it is remembering certain aspects of what to do and what to look for when in the lab.‚Äù ,‚ÄúThe most difficulty experienced in the labs is fac- ing errors and technical difficulties.‚Äù ,‚ÄúI think the directions were hard to follow because the instructor seemed like he as- sumed we knew something about this content.‚Äù , and ‚ÄúFully understanding what was being done in the lab was the most difficult.‚Äù Finally, for the question ‚ÄúWhat suggestion(s) can you make that would enhance your learning experience with the lab‚Äù. Notable student responses in the Spring 2022 semester were: ‚ÄúMake the lab more engaging/fun‚Äù ,‚ÄúBreak down steps on how to actually complete the activity‚Äù ,‚ÄúI would say, trying using a different online platform for this lab, to make everything a little bit easier for students to under- stand.‚Äù ,‚ÄúBeing in person‚Äù , and ‚ÄúBetter terminology‚Äù . In the Fall 2022 semester, notable responses were: ‚ÄúThe in- structor was helpful it‚Äôs just hard to learn over the computer such a difficult thing to do.‚Äù ,‚ÄúI cannot think of anything at the moment. I really enjoyed learning about this lab and how it worked.‚Äù ,‚ÄúAn in person option‚Äù ,‚Äúprovide a tutorial video.‚Äù ,‚ÄúI would say slowing down the directions.‚Äù , and ‚ÄúTeach more about how to face technical difficulties.‚Äù 5.10 Lesson Learned The authors learned the following lessons in implementing a cloud-based laboratory experience. We outline tips for de- veloping a cloud-based laboratory for teaching AI socially relevant cybersecurity. Code Dilution The lab is implemented on Google Colab, Google‚Äôs cloud-based jupyter notebook platform. The ini- tial implementation of the lab on Google Colab presented the students with the raw code implementation of cyberha- rassment detection using PyTorch, an open-source Python framework for developing ML, especially deep learning sys- tems. From the Spring 2022 feedback from the students, we observed that the students were not positive towards the code implementation since they have very little programming ex- perience. This frustrated students and slowed interest and learning. With this knowledge, in preparation for the Fall 2022 semester, we improved the learning experience by re- implementing the lab with the code hidden to enable the stu- dents to think about social issues and focus on understanding how AI can be used to approach social issues such as cyber- harassment. Lab Instructions Developing the lab instructions in the lab manual is crucial to enhancing the student experience. If the lab instructions are not very detailed, with step-by- step instructions on how to complete the lab activities, the students struggle with understanding and completing the lab independently. From the Spring 2022 student feedback, stu- dents complained that the instruction manual needed more detail and felt the instructors assumed they were familiar with AI and AI terminology. In the Fall 2022 semester, we improved the lab manual by toning down the terminology and providing more step-by-step descriptions so the students could complete the labs independently and understand the purpose and rationale behind each step. Pre-lab Lecture Before allowing the students to complete the lab independently, we prepared lecture slides about the lab and introduced them to the problem and the activities they would be completing. The students found this pre-lab lecture particularly helpful. Other best practices include recording the pre-lab lecture so that the students can refer back to it when working on the lab activities, anticipating possible technical difficulties, and including steps to solve the issues in the lab manual. Hav- ing an in-person option where the students can complete the labs during class could help with engagement and technical issues they might encounter. 6 Limitations Our work has limitations. First, our study is focused on one public institution in the United States, limiting our findings‚Äô generalizability. Second, the generalizability of our find- ings is also limited by the focus of our study on one non- computing program - Social Statistics, excluding other non- computing programs. Third, the number of participants in our study further limits our conclusions. Finally, the current lab only focuses on the general concepts of AI and how it can be utilized to address social issues such as cyberharassment. It does not cover other areas of AI, such as how adversarial attacks can fool cyberharassment models, multi-modal cy- berharassment detection, and the issue of fairness and bias in cyberharassment models. 7 Conclusion and Future Work We have developed an AI socially relevant cybersecurity lab for cyberharassment detection for non-computing students. We introduced a cyberharassment detection lab‚Äôs develop- ment, implementation, and assessment. The development process has been guided by the learning objective of intro- ducing a hands-on experiential lab that will increase general awareness of socially relevant cybersecurity and AI and is suitable for teaching AI socially relevant cybersecurity to non-computing students. Our lab offers meaningful expe- riential learning opportunities that allow students to work on real-world social issues such as cyberharassment. After incorporating student feedback in the redesign of the lab used in the Fall semester, the knowledge or skills of most students in automated cyberharassment detection and how ML works improved significantly compared to the Spring semester. Also, students found the detection of cyberharass- ment helpful and understood the purpose of using AI for social issues. We plan on continuing to refine the lab and use the knowledge gained in developing four labs currently under development that cover multi-modal (text and image) cyberharassment detection, adversarial attacks on cyberha- rassment systems, bias mitigation in cyberharassment sys- tems, and the use of generative AI models such as ChatGPT for cyberharassment detection. Additionally, we plan on de- veloping these labs for computer science and engineering students in the future.Acknowledgment The work was supported by National Science Foundation (NSF) under the Grant No. 2239605, 2228616 and 2114920. References Allen, G. I. 2021. Experiential learning in data science: De- veloping an interdisciplinary, client-sponsored capstone pro- gram. 516‚Äì522. Anderson, P.; Bowring, J.; McCauley, R.; Pothering, G.; and Starr, C. 2014. An undergraduate degree in data science: cur- riculum and a decade of implementation experience. 145‚Äì 150. Barman, A.; Chen, S.; Chang, A.; and Allen, G. 2022. Ex- periential Learning in Data Science Through a Novel Client- Facing Consulting Course. 1‚Äì9. Challenge, H. M. 2020. Hateful Memes Challenge and Data Set. https://ai.facebook.com/tools/hatefulmemes/. Ac- cessed: 2024-02-20. Ducharme, D. 2017. Machine Learning for the Automated Identification of Cyberbullying and Cyberharassment . Ph.D. thesis, University of Rhode Island. Eybers, S.; and Hattingh, M. 2016. Teaching Data Science to Post Graduate Students: A Preliminary Study Using a‚Äù FLIP‚Äù Class Room Approach. International Association for Development of the Information Society . Facebook. 2023. AI advances to better detect hate speech. https://ai.facebook.com/blog/ai-advances-to-better- detect-hate-speech/. Accessed: 2023-11-01. Goodfellow, I. J.; Shlens, J.; and Szegedy, C. 2015. Explain- ing and Harnessing Adversarial Examples. Google-Jigsaw. 2019. Google‚Äôs Hate Speech Detection A.I. Has a Racial Bias Problem. https://fortune.com/2019/08/16/google-jigsaw-perspective- racial-bias/. Accessed: 2023-11-01. Hashim, H. A.; Tatarniuk, C.; and Harasymchuk, B. 2022. First Year Engineering Design: Course Design, Projects, Challenges, and Outcomes. 1‚Äì9. Kolb, A. Y .; and Kolb, D. A. 2005. Learning styles and learning spaces: Enhancing experiential learning in higher education. Academy of management learning & education , 4(2): 193‚Äì212. Kolb, D. A. 2014. Experiential learning: Experience as the source of learning and development . FT press. Li, J.; Ji, S.; Du, T.; Li, B.; and Wang, T. 2019. TextBug- ger: Generating Adversarial Text Against Real-world Appli- cations. Martin, D. A.; and Bombaerts, G. 2022. Enacting socio- technical responsibility through Challenge Based Learning in an Ethics and Data Analytics course. 1‚Äì7. Matovu, R.; Nwokeji, J. C.; Holmes, T.; and Rahman, T. 2022. Teaching and Learning Cybersecurity Awareness with Gamification in Smaller Universities and Colleges. 1‚Äì9. Nanda, V .; Dooley, S.; Singla, S.; Feizi, S.; and Dicker- son, J. P. 2020. Fairness Through Robustness: Investi- gating Robustness Disparity in Deep Learning. CoRR , abs/2006.12621. Nwokeji, J. C.; and Frezza, P. S. T. 2017. Cross-course project-based learning in requirements engineering: An eight-year retrospective. 1‚Äì9. Nwokeji, J. C.; Stachel, R.; and Holmes, T. 2019. Effect of instructional methods on student performance in flipped classroom. 1‚Äì9. Okpala, E.; Cheng, L.; Mbwambo, N.; and Luo, F. 2022. AAEBERT: Debiasing BERT-based Hate Speech Detection Models via Adversarial Learning. In 2022 21st IEEE Inter- national Conference on Machine Learning and Applications (ICMLA) , 1606‚Äì1612. IEEE. Patchin, J. W. 2019. Cyberbullying Statistics. https://cyberbullying.org/2019-cyberbullying-data. Qualtrics. 2024. Qualtrics. https://www.qualtrics.com/. Ac- cessed: 2024-02-20. Rosenthal, S.; and Chung, T. 2020. A data science major: Building skills and confidence. 178‚Äì184. Salazar-Gomez, A. F.; Bagiati, A.; Minicucci, N.; Kennedy, K. D.; Du, X.; and Breazeal, C. 2022. Designing and imple- menting an AI education program for learners with diverse background at scale. 1‚Äì8. Samavedham, L.; and Ragupathi, K. 2012. Facilitating 21st century skills in engineering students. The Journal of Engi- neering Education , 26(1): 38‚Äì49. Sap, M.; Card, D.; Gabriel, S.; Choi, Y .; and Smith, N. A. 2019. The Risk of Racial Bias in Hate Speech Detection. 1668‚Äì1678. Serrano, E.; Molina, M.; Manrique, D.; and Baumela, L. 2017. Experiential learning in data science: From the dataset repository to the platform of experiences. 122‚Äì130. Social-Cybersecurity. 2019a. Center for Informed Democ- racy & Social-Cybersecurity. https://www.cmu.edu/ideas- social-cybersecurity/. Accessed: 2023-11-01. Social-Cybersecurity, C. 2019b. CASOS. http://www.casos.cs.cmu.edu/projects/projects/social cyber security.php. Accessed: 2023-11-01. Swearer, D. E. S. 2013. Research on school bullying and victimization: What have we learned and where do we go from here? School Psychology Review , 365‚Äì383. Thomas, K.; Akhawe, D.; Bailey, M.; Boneh, D.; Bursztein, E.; Consolvo, S.; Dell, N.; Durumeric, Z.; Kelley, P.; Kumar, D.; McCoy, D.; Meiklejohn, S.; Ristenpart, T.; and Stringh- ini, G. 2021. SoK: Hate, Harassment, and the Changing Landscape of Online Abuse. 473‚Äì493. Velaj, Y .; Dolezal, D.; Ambros, R.; Plant, C.; and Motschnig, R. 2022. Designing a Data Science Course for Non- Computer Science Students: Practical Considerations and Findings. 1‚Äì9. Wachs, S.; Wright, M. F.; and Vazsonyi, A. T. 2019. Under- standing the overlap between cyberbullying and cyberhate perpetration: Moderating effects of toxic online disinhibi- tion. Criminal Behaviour and Mental Health , 29(3): 179‚Äì 188. Zhang, W. E.; Sheng, Q. Z.; Alhazmi, A. A. F.; and Li, C. 2020. Adversarial Attacks on Deep-learning Models in Nat- ural Language Processing: A Survey. ACM Trans. Intell. Syst. Technol. , 11(3): 1‚Äì41.Zhong, H.; Li, H.; Squicciarini, A.; Rajtmajer, S.; Griffin, C.; Miller, D.; and Caragea, C. 2016. Content-Driven De- tection of Cyberbullying on the Instagram Social Network. 3952‚Äì3958","cs.CY, cs.AI, cs.LG",Arxiv
19,AI Autonomy : Self-Initiated Open-World Continual Learning and Adaptation,"Bing Liu, Sahisnu Mazumder, Eric Robertson, Scott Grigsby",2022-03-17 00:07:02+00:00,http://arxiv.org/pdf/2203.08994v3,"As more and more AI agents are used in practice, it is time to think about how to make these agents fully autonomous so that they can (1) learn by themselves continually in a self-motivated and self-initiated manner rather than being retrained offline periodically on the initiation of human engineers and (2) accommodate or adapt to unexpected or novel circumstances. As the real-world is an open environment that is full of unknowns or novelties, the capabilities of detecting novelties, characterizing them, accommodating/adapting to them, gathering ground-truth training data and incrementally learning the unknowns/novelties become critical in making the AI agent more and more knowledgeable, powerful and self-sustainable over time. The key challenge here is how to automate the process so that it is carried out continually on the agent's own initiative and through its own interactions with humans, other agents and the environment just like human on-the-job learning. This paper proposes a framework (called SOLA) for this learning paradigm to promote the research of building autonomous and continual learning enabled AI agents. To show feasibility, an implemented agent is also described.","1  AI Autonomy: Self-Initiated Open-World Continual Learning and Adaptation   Bing Liu,1 Sahisnu Mazumder,2 Eric Robertson,3 Scott Grigsby3 1 University of Illinois at Chicago, USA 2 Intel Labs, USA 3 PAR Government Systems Corporation, USA liub@uic.edu, sahisnumazumder@gmail.com, {eric_robertson, scott_grigsby}@partech.com  Abstract As more and more AI agents are used in practice, it is time to think about how to make these agents fully autonomous so that they can (1) learn by themselves continually in a self-motivated and self-initiated manner rather than being retrained offline periodically on the initiation of human engineers and (2) accommodate or adapt to unexpected or novel circumstances. As the real-world is an open environment that is full of unknowns or novelties, the capabilities of detecting novelties, characterizing them, accommodating/adapting to them, gathering ground-truth training data and incrementally learning the unknowns/novelties become critical in making the AI agent more and more knowledgeable, powerful and self-sustainable over time. The key challenge here is how to automate the process so that it is carried out continually on the agent‚Äôs own initiative and through its own interactions with humans, other agents and the environment just like human on-the-job learning. This paper proposes a framework (called SOLA) for this learning paradigm to promote the research of building autonomous and continual learning enabled AI agents. To show feasibility, an implemented agent is also described. 1. Introduction Classical machine learning (ML) makes the closed-world assumption, which means that the classes of objects seen by the system in testing or application must have been seen during training (Fei, Wang, and Liu 2016; Bendale and Boult 2015; Liu 2020), i.e., there is nothing unexpected or novel occurring in testing or deployment. This assumption is invalid in practice as the real world is an open environment that is full of unknowns or novel objects. For humans, novelties serve as an intrinsic motivation for learning. Human novelty detection results in a cascade of unique neural responses and behavioral changes that enable exploration and flexible memory encoding of the novel information. As learning occurs, this novelty response is soon lost as repeated exposure to novelty results in fast neural adaptation (Tulving and Kroll 1995; Murty et al. 2013). To make an AI agent thrive in the real open world, like humans, it has to detect novelties and learn them incrementally to make the system more knowledgeable and adaptable over time. It must do so on its own initiative on the job (after deployment) rather than relying on human engineers to retrain the system offline periodically. That is, it must learn in the open world in a self-motivated manner in the context of its performance task (the main task of the agent). We use the hotel guest-greeting bot example from (Chen and Liu 2018) to illustrate the issues involved. The bot‚Äôs performance task is greeting hotel guests. When its vision system sees a guest (say, John) it has learned before, it greets him by saying, ‚ÄúHi John, how are you today?‚Äù When it sees a new guest, it should detect this guest as new or novel. This is a novelty detection problem (also known as out-of-distribution (OOD) detection). upon discovering the novelty - the new guest, it needs to accommodate or adapt to the novel situation. The bot may say to the new guest, ‚ÄúHello, welcome to our hotel! What is your name, sir?‚Äù To appear in AI Magazine, 2023  2  If the guest replies ‚ÄúDavid,‚Äù the bot takes some pictures of the guest to gather training data and then incrementally or continually learn to recognize David. The name ‚ÄúDavid‚Äù serves as the class label of the pictures taken. As for humans, the detected novelty serves as an intrinsic self-motivation for the agent/bot to learn. When the bot sees this guest again next time, it can say ‚ÄúHi David, how are you today?‚Äù (David is no longer new) In an actual hotel, the situation is, however, much more complex than this. For example, how does the system know that the novel object is a person, not a dog? If the system can recognize the object as a person, how does it know that he/she is a hotel guest, not a service provider for services such as delivery or security? To adapt to the novel object or situation, the system must first characterize the novel object, as without it, the agent wouldn‚Äôt know how to adapt or respond. In this case, some classification or similarity comparison is needed to decide whether it is a person with luggage. If the object looks like a person but has no luggage, the bot will not respond or learn to recognize the person as it is irrelevant to its performance task. If the novel object looks like an animal, it should notify a hotel employee and learn to recognize the object so that it will no longer be novel when it is seen next time. In short, for each characterization, there is a corresponding response or adaptation strategy, which can be NIL (i.e., do nothing). This discussion shows that to characterize, the agent must already have rich world knowledge. Finally, there is also risk involved when making an incorrect decision. As classic learning matures, we should go beyond the existing paradigm to study how to enable an agent to learn and adapt by itself via its own interactions with humans and the environment, i.e., self-initiation, involving no engineers. This paper proposes a Self-initiated Open-world continual Learning and Adaptation (SOLA) framework to promote the research of autonomous AI agents so that they can face the real open world and learn by themselves. An example SOLA agent in the context of dialogue systems or chatbots that implements the SOLA framework is also discussed. 2.  Comparison with Related Work Open world learning has been studied by many researchers (Bendale and Boult 2015; Fei, Wang, and Liu 2016; Xu et al. 2019), but they mainly focused on novelty detection (Parmar et al. 2021), also called open set or out-of-distribution (OOD) detection. Some researchers have also studied learning the novel objects after they are detected (Bendale and Boult 2015; Fei, Wang, and Liu 2016; Xu et al. 2019) and manually labeled. A survey of the topic can be found in (Yang et al. 2021). A position paper (Langley 2020) recently presented some blue-sky ideas about open world learning, but it does not have sufficient details or an implemented system. SOLA differs from these prior studies in many ways, (1)  SOLA stresses ‚Äúself-initiation‚Äù in learning, which means that all the learning activities from start to end are self-motivated and self-initiated by the agent itself. The process involves no human engineers. (2)  Due to self-initiation, SOLA enables learning after model deployment like human learning on the job or while working, which has barely been attempted before. In existing learning paradigms, after a model has been deployed, there is no more learning until the model is updated or retrained on the initiation of the human engineers. (3)  SOLA is a lifelong and continual learning paradigm again because learning is self-initiated and unceasing. It is thus connected with lifelong and continual learning, which is an active research area in machine learning, computer vision and natural language processing (Chen and Liu 2018). (4)  SOLA involves online interactions of the learning agent with human users, other AI agents, and the environment. The purpose is to acquire ground-truth training data on the fly by itself (and it is free). This is very similar to what we humans do when we encounter something novel or new and ask others interactively to acquire knowledge. It is very different from collecting a large amount of unlabeled data and asking human annotators to label the data (as in the case of crowdsourcing). Also, it differs from  3  active learning (Settles 2009; Ren et al. 2021) as active learning only focuses on acquiring labels from users for selected unlabeled examples in the given dataset. SOLA also allows learning from other resources, e.g., the Web or a human teacher, to gain knowledge, like a human reading a book or learning from a dedicated teacher. Due to space limits, this paper will not focus on these types of learning [see an example in (Mitchell et al. 2015; Kasaei et al. 2020)]. (5)  SOLA includes modules to characterize and to adapt to novel situations so that the agent can work in the open world environment and also continually learn and self-sustain in the process.  In robotics research, a closely related topic is open-ended learning, where the number of classes or categories to be learned is not predefined. In (Seabra Lopes, and Chauhan 2007, 2008), a human teacher interactively teaches a robot to learn new words or new object names through a user-interface. In the process, the robot learns incrementally. In (Kasaei et al. 2020; Kasaei et al. 2019), a user teaches a robot to incrementally learn to recognize prior unknown visual objects and their affordance categories. The system in (Oliveira et al. 2015) also learns attributes or codebook words used to encode the objects. In all these cases, the teacher/user takes the initiative and decides what to teach and how to teach. In the proposed SOLA framework, we focus on the system itself. The system takes the initiative to detect what it does not know or what is novel and to incrementally learn the new/novel objects through interaction with humans or the environment. The SOLA framework also includes the characterization of the new objects so that the system can formulate a plan of actions to respond to the novel/new objects. In the process, the agent also considers risk and safety. The SOLA framework thus covers open-ended learning as it also has interactive learning and continual/incremental learning.  Intrinsically motivated open-ended learning (IMOL) is also related. It aims to develop robots that can autonomously generate internal motivational signals or rewards to acquire knowledge and skills (Barto et al., 2004; Oudeyer et al., 2007; Santucci 2020; Mirolli and Baldassarre, 2013). It was inspired by the ability of humans to discover interesting things to learn driven by self-generated rewards or curiosity not related to any specific external tasks (White, 1959; Deci and Ryan, 1985). Knowledge-based intrinsic motivations (IMs) (Oudeyer and Kaplan 2007) are more closely related to our work, which are of two types, namely novelty-based IMs and prediction-based IMs (Barto et al. 2013; Baldassarre 2019). Novelty-based IMs try to detect novel items and direct attention to novel items in exploration. Prediction-based IMs try to predict the future and compare with the observed reality to compute the prediction error, and then direct the attention to the wrongly predicted items to improve the prediction accuracy. IMs are often expressed as internal rewards to augment sparse external rewards in reinforcement learning (Kulkarni et al., 2016; Pathak et al. 2017; Baldassarre 2019). Although related, IMOL is significantly different from SOLA. IMOL has the ambitious goal of imitating humans‚Äô cognitive and learning process and capability in robots, while SOLA‚Äôs goal is more modest in the sense that it has well-defined novelty detection, continual learning and other computational functions. SOLA is not normally associated with reinforcement learning, and novelty in SOLA serves as the motivation for continual learning and triggers self-initiation.   Human-robot teaming also has some resemblance to our work. For example, Talamadupula et al. (2017) proposed a system that enables human-robot interactions through natural language dialogues to jointly perform a task. The term ‚Äúopen world‚Äù in this paper means that there may be new goals, new sub-tasks, and new entities in the task, e.g., a search and rescue task. Apart from natural language dialogue, the system also performs some reasoning and open-world planning. However, this work does not involve continual learning or knowledge accumulation, which is the core of the proposed SOLA framework. In summary, SOLA makes learning autonomous and self-initiated. Although novelty detection, adaptation and continual learning have been studied discretely (in specific use cases or application scenarios) in many works over decades, we have not found any work that has discussed or provided a generic and holistic framework (like SOLA) that unifies the ideas of self-initiation, novelty detection, adaptation, and open-world continual learning into one. We believe that SOLA is necessary for the next generation machine learning and AI agents. Finally, note that although SOLA focuses on self-initiated learning, it does not  4  mean that the learning system cannot learn a task given by humans or other AI agents (as followed in usual ML design practices). 4  Novelty Detection Novelty is a core concept of SOLA as it triggers and motivates the whole SOLA process. Detecting novel objects or situations is thus a critical task. In the research community, it is often called out-of-distribution (OOD) detection. In general, novelty is an agent-specific concept. An object may be novel to one agent based on its partial knowledge of the world but not novel to another agent. We distinguish two types of novelty, absolute novelty and contextual novelty.  Absolute novelty. Absolute novelty represents something that the agent has never seen before. For example, in the context of supervised learning, the agent‚Äôs world knowledge is learned from the training data ùê∑!={(ùë•#,ùë¶#)}#$%& with ùë•#√é	ùëã is the input data and ùë¶#√é	ùëå! is its class label. Let ‚Ñé(ùë•) be the latent or internal representation of x in the agent‚Äôs mind, ‚Ñé(ùê∑!#) be the latent representation of the training data of class ùë¶#, and ùëò	(=|ùëå!|) be the total number of training classes. We use ùúá(‚Ñé(ùë•),‚Ñé1ùê∑!#2) to denote the novelty score of a test instance x‚Ä≤ with respect to ‚Ñé1ùê∑!#2. The degree of novelty of x‚Ä≤ with respect to ùê∑!, ùúá1‚Ñé(ùë•),‚Ñé(ùê∑!)2, is defined as the minimum novelty score with regard to every class,  ùúá1‚Ñé(ùë•),‚Ñé(ùê∑!)2=min	6ùúá1‚Ñé(ùë•),‚Ñé(ùê∑!%)2,‚Ä¶,ùúá(‚Ñé(ùë•),‚Ñé1ùê∑!(2)8	    (1)  The novelty function ùúá can be defined based on specific applications. For example, if the training data of each class follows the Gaussian distribution, one may use z-score or Mahalanobis distance as the novelty score. The definition is also for out-of-distribution (OOD) detection, where the training classes in ùëå! are called in-distribution (IND) classes and those test instances that do not belong to the IND classes are called OOD instances. Thus, an OOD or novelty detection model can classify a test instance from an IND class to its corresponding class and detect OOD test instances that do not belong to any IND class.   Novel instance: A test instance x‚Ä≤ is novel if its novelty score ùúá1‚Ñé(ùë•),‚Ñé(ùê∑!)2 is greater than or equal to a threshold value Œ≥ such that x‚Ä≤ can be assigned a new class that is not in ùëå!. Novel class: A newly created class ùë¶&)* (ùë¶&)*√èùëå!) assigned to some novel instances is called a novel class (unknown or unseen class). The classes in ùëå! are also called known or seen classes. Contextual novelty. Given that both the instance x and the context Q are not absolutely novel and the probability P(x|Q) of x occurring in Q is very low, but x has occurred in Q, which is surprising or unexpected. A contextual novelty is also commonly called a surprise or unexpected event. In human cognition, surprise is an emotional response to an instance that greatly exceeds the expected uncertainty within the context of a task. The definitions of contextual novel instance and class are like those for absolute novelty.  Intuitively, in absolute novelty, the novelty of x is context independent. For example, if the agent has never seen a tiger before, it is absolutely novelty, irrespective of its context (other objects in the image). If x is known but is very unlikely to appear in a context, x is contextually novel, e.g., a deer (known) appears in a crowded city street. A related work on contextual novelty detection can be found in (Ma et al., 2021; 2022).  Novelty is not restricted to the perceivable physical world but also includes the agent‚Äôs internal world, e.g., novel interpretations of world states or internal cognitive states that have no correspondence to any physical world state. Interested readers may also read (Boult et al. 2021) for a more nuanced and perception-based study of novelty. There are other related concepts to novelty, e.g., out-of-distribution (OOD) samples, outliers, and anomalies. An extensive work has been done on novelty detection (Yang et al. 2021). Outlier and anomaly: An outlier is a data point that is far away from the main data clusters, but it may not be unknown. For example, the salary of a company CEO is an outlier with regard to the salary distribution of the company employees, but that is known and thus not novel. Unknown outliers are novel. Anomalies  5  can be considered outliers or instances that are one off and never repeated. Though technically ‚Äúnovel‚Äù they may not result in a new class. Note that this paper does not deal with various types of data shift such as covariate shift, prior probability shift and concept drift as a large amount of work has been done (Moreno-Torres et al. 2012). We will not discuss novelty detection further because it has been studied extensively (Pang et al. 2021; Parmar et al. 2021; Yang et al. 2021). 4. Lifelong and Continual Learning Since SOLA at its core is a continual learning paradigm, this section introduces lifelong or continual learning (Chen and Liu 2018). To enable autonomous continual learning without the involvement of human engineers, other capabilities are needed, which we will discuss in subsequent sections. The terms lifelong learning and continual learning have the same meaning and are used interchangeably. 4.1 Continual Learning (CL) CL is defined in (Chen and Liu 2018) as follows, which is based on the early definitions in (Thrun 1995; Silver, Yang, and Li 2013; Ruvolo and Eaton 2013; Chen and Liu. 2014; Mitchell et al. 2015) and more recent research (Rusu et al. 2016; Kirkpatrick et al. 2017; Zenke, Poole, and Ganguli 2017; Rebuffi, Kolesnikov, and Lampert 2017; Shin et al. 2017; Serra et al. 2018; Lee, Stokes, and Eaton 2019; Chaudhry et al. 2020; Ke, Liu, and Huang 2020; Ke et al. 2021; Guo et al. 2022; Kim et al. 2022b). Definition: Continual learning (CL) aims to learn a sequence of tasks. At any point in time, the learner is assumed to have N tasks, T1, T2, . . . , TN (called the previous tasks). In learning the (N + 1)th task TN+1 (called the new task or the current task), the learner wants to achieve two main objectives: (1)  Overcoming catastrophic forgetting (CF). CF refers to the phenomenon that when a neural network learns a sequence of tasks, the learning of each new task is likely to change the weights learned for previous tasks, which degrades the model performance for the previous tasks (McCloskey and Cohen 1989). (2)  Encouraging knowledge transfer (KT) across tasks. The learner should leverage the knowledge in the knowledge base (KB) to help learn TN+1. This is called the forward transfer. The new task should also help improve some previous task models if possible. This is call backward transfer. An explicit or implicit knowledge base (KB) is maintained to retain the knowledge learned from the previous N tasks. After the completion of learning TN+1, KB is updated with the knowledge gained from TN+1. Two CL settings have been studied extensively in the research literature. See (Kim et al. 2022b) for their formal definitions. Class incremental learning (CIL). In CIL, each task consists of one or more classes to be learned together but only one model is learned to classify all classes learned so far. In testing, a test instance from any class may be presented to the model for it to classify with no task related information provided.  Task incremental learning (TIL). In TIL, each task is a separate classification problem (e.g., one classifying different breeds of dogs and one classifying different types of animals). TIL builds a set of classification models (one per task) in a shared neural network. In testing, the system knows to which task each test instance belongs and uses only the model for the task to classify the test instance.  Earlier research mainly focused on KT in TIL and assumed that the tasks are similar, which clearly facilitates KT across tasks (Chen and Liu 2018). Little work was done on CF, which has been researched only after deep learning became popular. More recent research focused on both CF and KT. When the tasks are similar, KT is the focus (Ke et al. 2021). When the tasks are dissimilar overcoming CF is the key (Chen and Liu 2018; Guo et al. 2022). Work has also been done to learn a mixed sequence of similar and dissimilar tasks, which must deal with both CF and KT at the same time (Ke, Liu, and Huang 2020), i.e., to perform  6  selective knowledge transfer among similar tasks and also to overcome CF for dissimilar tasks. Task similarity is detected automatically. The architecture of CL systems is given in Figure 1 without the orange-colored links. The orange-colored links will be discussed in the next subsection. Dealing with CF is not reflected in the architecture as it stays in the continual learner (C-Learner). ModelN+1 includes all the models from T1 to TN+1, which may all be in one neural network. In the case of TIL, they may be separate models indexed by their task identifiers. In the case of CIL, ModelN+1 is a single model that covers all classes of the tasks learned so far. It has been proven in (Kim et al. 2022b) that strong out-of-distribution (OOD) detection or novelty detection is a necessary condition for achieving good CIL performances. Apart from overcoming CF and encouraging KT in CIL, this paper also identified a new challenge of inter-task class separation (ICS) that is as hard to deal with as CF and KT (see (Kim et al 2022b to details)).   Limitation. One key limitation of the existing CL paradigm is that the tasks and their training data are given by the user or engineers. This means that the system is not autonomous and cannot learn by itself. In order to do that, we extend the CL architecture with the orange-colored links in Figure 1 to enable learning on the job to achieve the full SOLA. 4.2. A New CL Architecture  The new architecture is summarized in the full diagram in Figure 1 with the orange-colored links added to the traditional CL. These links enable the system to learn by itself to achieve autonomy in the SOLA framework, i.e., to learn on the job during application or after model deployment. However, as discussed in the Introduction section, learning during application is more complicated and the framework also includes other aspects related to adaptation to the novelty, which we will detail in Section 5 with a new figure showing the full architecture of SOLA.   Figure 1: Architecture of a typical continual learning framework incorporating on-the-job learning (best viewed in color). T1, ..., TN are the previously learned tasks, TN+1 is the current new task to be learned and DN+1 is its training data. The C-Learner (continual learner) learns by leveraging the relevant prior knowledge identified by the Task-based Knowledge Miner from the Knowledge Base (KB), which contains the knowledge retained in the past. It also deals with CF. Existing research on continual learning does not have the orange-colored lines. The orange-colored lines are added for on-the-job learning in SOLA.   7  The basic idea for learning in SOLA is that during application, if the system/agent encounters anything that is out-of-distribution or novel (a novelty), the system first creates a new task to learn and then obtains the needed ground-truth training data to learn the task on the initiation of the system itself through interactions with the humans and the environment. Some new knowledge (or auxiliary knowledge) gained from the application can be added to the KB that may be leveraged in future learning or to improve the current model.  5  The Proposed SOLA Framework The SOLA architecture is given in Figure 2, which adds and elaborates the orange-colored links and associated components to the traditional CL architecture (without the orange-colored links in Figure 1). These newly added links and components enable the system to learn by itself and to adapt to the new situation to gain autonomy, which is what SOLA aims to achieve. It is called learning after deployment or learning on the job during application or after model deployment.  Learning after deployment refers to learning continuously after the model has been deployed in an application or during model application (Liu and Mazumder 2021) on the fly. The basic idea is that during application, if the system/agent encounters anything that is out-of-distribution (OOD) or novel, it needs to detect the novelty. Based on the novelty, the system creates a new task to learn and acquires the ground-truth training data to learn the task on the initiation of the system itself through interactions with humans, other agents and/or the environment. The system then learns the new task incrementally or continually. In the process, the system also adapts itself to the new situation and carries on its performance task. The whole process is carried out on the fly during application. 5.1. Components of SOLA SOLA is proposed as a framework for building autonomous AI agents. An AI agent consists of a pair of key modules (P, S), where P is the primary task-performer that performs its performance task (e.g., the dialogue system of the greeting bot) and S is a set of supporting or peripheral functions (e.g., the vision system and the speech system of the bot) that supports the primary task-performer. The primary task-performer P or each supporting function Si ‚àà S consist of eight core sub-systems (L, K, M, R, C, A, S, I). Figure 2 shows the relationships and functions of the sub-systems. We do not distinguish P and Si in terms of techniques or subsystems as we believe they have no fundamental difference. ‚Ä¢ L is an OWC-Learner (Open-World Continual Learner) that builds models to not only classify the input into known classes but also detect novel objects that have not been seen in training. For example, for the greeting bot, L of the primary task performer P which is a continual learning dialogue system similar to that in Section 6. For the supporting vision system, L can learn to recognize guests and detect novel or unknown objects. Compared to C-Learner in continual learning in Figure 1, OWC-Learner in SOLA not only can learn continually like C-Learner but also produce models that can detect novel instances in testing or in application deployment (see (Kim et al. 2022a) for an example system). ‚Ä¢ K is the Knowledge Base & World Model (KB) that is important for the performance task, supporting functions and/or the OWC-Learner. KB is also in Figure 1 but plays more roles in SOLA. Apart from keeping the learned or prior knowledge of the domain and the world model, if needed, reasoning capability may also be provided to help the other modules of the system (see the orange-colored links). Some knowledge from the application observed by the Adaptor (see below) may be added to the KB, which can provide some knowledge to the Model for its decision making. World model refers to the representation of the task environment and the commonsense knowledge about the objects and their relationships within.  ‚Ä¢ M is the Model learned by L. M takes the input or perception signals from the application environment and make a decision to perform actions in the application. The decision making involves detecting novel or normal input instances, besides performing its intended task (on normal instances) as defined in the  8  application. M may also use some input or knowledge from the other supporting functions and task-specific auxiliary knowledge from K to help the inference process. ‚Ä¢ R is the Relevance Module or focusing mechanism that decides whether the detected novelty is relevant to the current task or not. If it‚Äôs relevant, the agent should respond to the novelty (discussed below); otherwise simply ignore it. For example, in the greeting bot application, if the bot sees a new inanimate object in its viewing zone, even if the object is novel (never seen before), the bot should ignore it as an inanimate object should not be greeted! So, novelty in inanimate objects is considered as irrelevant. ‚Ä¢ C is the Novelty Characterizer that characterizes the detected novelty based on the knowledge in the KB so that the adaptor (below) can formulate a course of actions to respond or adapt to the novelty. For the characterizer C of P of the greeting bot, as P is a dialogue system, when it cannot understand the utterance of a hotel guest (a novelty), it should decide what it can and cannot understand (see Section 6) and ask the guest based on its partial understanding (see below). In the case of the supporting vision system, when a novel object it detected, the charaterizer may decide what the object looks like and its physical attributes. For example, the novel object may look like a dog based on the greeting bot‚Äôs KB. (see Section 5.4 for more discussions). ‚Ä¢ A is the Adaptor that adapts to or accommodates the novelty based on the characterization result. It is a planner that produces a plan of actions for the executor E (it can be a task user interface, not considered as a core component of SOLA) or the interactive module I to perform. The goal here is to formulate a strategy to respond to the novelty (e.g., acquiring knowledge to learn the detected novelty or reporting it to some other agents in the environment). Given the characterization (e.g., partial understanding) above, A may adapt by asking the guest to clarify (see Section 6) and then learn to understand the utterance. In the case of the vision system, if the characterizer believes that the novel object looks like a dog, the adaptor may decide to report to a hotel employee and then learns the new object by taking some pictures as the training data. It can also ask the hotel employee for the name of the object as the class label. In the latter two cases, A needs to invoke I to interact with the human and L to learn the novelty so that it will not be novel in the future. That is, A is also responsible for creating new tasks (e.g., learning to recognize new objects by the greeting bot) on the fly and proceeds to acquire ground truth training  Figure 2: Architecture of the primary task performer or any supporting function. OWC-Learner means Open-World Continual Learner.   9  data with the help of I (discussed below) to be learned by L. This adaptation process often involves reasoning and may utilize knowledge from K. ‚Ä¢ S is the Risk Assessment module. Novelty implies uncertainty in adapting to the novel situation. In making each response decision, risk needs to be assessed (see Section 5.5 for more discussions). ‚Ä¢ I is the Interactive Module for the agent to communicate with humans or other agents, e.g., to acquire ground-truth training data or to get instructions when the agent does not know what to do in a unfamiliar situation. It may use the natural language (for interaction with humans) or an agent language (for interaction with other agents) for communication. Several remarks are in order. (1) not all agents need all these sub-systems, and some sub-systems may also be shared. For example, the primary task performer P in the greeting bot application is a dialogue system. Its interaction module I can use the same dialogue system. In some cases, the model M may also be able to determine the relevance of a novel object to the application and even characterize the novelty because characterization in many cases is about classification and similarity comparison. (2) as we will see, every sub-system can and should have its own local learning capability. (3) the interaction module I and the adapter A will create new tasks to learn and gather ground truth training data for learning. (4) most links in Figure 2 are bidirectional, which means that the sub-systems may need to interact with each other to perform their tasks. The interactions may involve requesting for information, passing messages, and/or going back and forth with hypothesis generation, revision and evaluation to make more informed decisions. Since the primary task performer P and each supporting sub-system Si has the same components or sub-systems, we will discuss them in general rather than distinguishing them. 5.2. Open World Continual Learning The classical machine learning (ML) makes the i.i.d assumption, which is often violated in practice. Here we first define several related concepts and then the idea of open world continual learning in SOLA.  Let the training data that have been seen so far from previous tasks be ùê∑!={(ùë•#,ùë¶#)}#$%& with ùë•#√é	ùëã as the input data and ùë¶#√é	ùëå! as its class label. Let the set of class labels that may appear in testing or application be ùëå!+!. Classical ML makes the closed-world assumption. Closed-world assumption: There are no new or novel instances or classes that may appear in testing or application, i.e., ùëå!+!‚äÜùëå!. In other words, every class seen in testing or application must have been seen in training.  Open world: There are test classes that have not been seen in training, i.e., ùëå!+!‚àíùëå!‚â†‚àÖ. Definition (closed-world learning): It refers to the learning paradigm that makes the closed-world assumption.  Definition (open world learning): It refers to the learning paradigm that performs the following functions: (1) classify test instances belonging to training classes to their respective classes and detect novel or out-of-distribution instances, and (2) learn the novel classes labeled by humans for the identified novel instances to update the model using the labeled data. The model updating is initiated by human engineers and involves re-training or incremental learning. Definition (SOLA): SOLA is a learning paradigm that performs open-world learning but the learning process is initiated by the agent itself after deployment with no involvement of human engineers. The new task creation and ground-truth training data acquisition are done by the agent via its interaction with the user and the environment. The learning of the new task is incremental, i.e., no re-training of previous tasks/classes. The process is lifelong or continuous, which makes the agent more knowledgeable over time. In addition to learning, SOLA also characterizes and adapt/respond to the novelty so that its performance task can still be carried out without stopping.    10  Steps in learning in SOLA. The main continual learning process in SOLA involves the following three steps, which can be part of the novelty adaptation or accommodation (see Section 5.5). Step 1 - Novelty detection. This step detects data instances whose classes do not belong to ùëå!. A fair amount of research has been done on this (see the surveys (Pang et al. 2021; Parmar et al. 2021; Yang et al. 2021)).  Step 2 - Acquiring class labels and creating a new learning task on the fly: This step first clusters the detected novel instances. Each cluster represents a new class. It may be done automatically or through interactions with humans using the interaction module I. Interacting with human users should produce more accurate clusters and obtain meaningful class labels. If the detected data is insufficient for building an accurate model to recognize the new classes, additional ground-truth data may be collected via interaction with users (and/or passively by downloading data from the Web like searching and scrapping images of objects of a given class). A new learning task is then created. In the case of our hotel greeting bot, since the bot detects a single new guest (automatically), no clustering is needed. It then asks the guest for his/her name as the class label. It also takes more pictures as the training data. With the labeled ground-truth data, a new learning task is created to incrementally learn to recognize the new guest on the fly.  The learning agent may also interact with the environment to obtain training data. In this case, the agent must have an internal evaluation system that can assign rewards to different states of the world, e.g., for reinforcement learning. Step 3 - Incrementally learn the new task. After ground-truth training data has been obtained, the learner L incrementally learns the new task. This is continual learning (Chen and Liu 2018). We will not discuss it further as there are already numerous existing techniques (Parisi et al. 2019; Kim et al. 2022b; Lomonaco et al. 2022). Many can leverage existing knowledge to learn the new task better (Chen and Liu 2018). 5.3.  Relevance of Novelty Due to the performance task, the agent should focus on novelties that are critical to the performance task. For example, a self-driving car should focus on novel objects or events that are or may potentially appear on the road in front of the car. It should not pay attention to novel objects in the shops along the street (off the road) as they do not affect driving. This relevance check involves gathering information about the novel object to make a classification decision. 5.4.  Novelty Characterization and Adaptation In a real-life application, classification may not be the primary task of an agent. For example, in a self-driving car, object classification supports its primary performance task of driving. To drive safely, the car must take actions to adapt or respond to the novel/new objects, e.g., slowing down and avoiding the objects. To know what actions to take to adapt, the agent must characterize the new object. The characterization of a novel object is a description of the object based on the agent‚Äôs existing knowledge of the world and/or description of agent‚Äôs uncertainty about the object. Based on the characterization, appropriate actions are formulated to adapt or respond to the novel object. The process may also involve learning. Novelty characterization and adaptation (or response) form a pair (c, r), where c is the characterization of the novelty and r is the adaptation response to the novelty, which is a plan of dynamically formulated actions based on the characterization of the novelty. The two activities go together. If the system cannot characterize a novelty, it takes a low risk-assessed default response. In our greeting bot example, when it can characterize a novelty as a new guest, its response is to say ‚ÄùHello, welcome to our hotel! What is your name, sir?‚Äù If the bot has difficulty with characterization, it can take a default action, e.g., ‚Äòdo nothing.‚Äô The set of responses are specific to the application. For a self-driving car, the default response to a novel object is to slow down or stop the car so that it will not hit the object.  11  In some situations, the agent must take an action under low confidence circumstances, the agents engage in reinforcement learning, i.e., trying actions and then assessing outcomes.  Characterization can be done at different levels of detail, which may result in more precise or less precise responses. Based on an ontology and object attributes related to the performance task in the domain, the characterization can be described based on the type of the object and the attribute of the object. For example, in the greeting bot application, it is useful to determine whether the novel object is a human or an animal because the responses to them are different. For self-driving cars, when sensing a novel object on the road, it should focus on those aspects that are important to driving, i.e., whether it is a still or a moving object. If it is a moving object, the car should determine its direction and speed of moving. Thus, the classification of movement is needed in this case to characterize the novelty, which, in turn, facilitates determination of the agent‚Äôs responding action(s). For instance, if the novel object is a mobile object, the car may wait for the object to leave the road before driving. Another characterization strategy is to compare the similarity between the novel object and the existing known objects. For example, if it is believed that the novel object looks like a dog (assuming the agent can recognize a dog), the agent may react like when it sees a dog on the road. Dealing with characterization and adaptation. The above discussion implies that to effectively characterize a novelty, the agent must already have a great deal of world knowledge that it can use to describe the novelty. Additionally, the characterization and response processes are often interactive in the sense that the agent may choose a course of actions based on the initial characterization. After some actions are taken, it will get some feedback from the environment. Based on the feedback and the agent‚Äôs additional observations, the course of actions may change. Novelty characterization and response generation sound extremely challenging. However, it is not impossible to do because in most applications the set of responses is finite. For example, in self-driving cars, the set of responses includes slowing down, stopping the car, and swerving. Based on the set of responses, we can work backward to build the needed systems to detect the characteristics of the detected novelty. See Section 6 for an example.  Learning to respond. In some situations, the system may not know how to respond to a novel object or situation. It may try any of the following ways. (1)  Asking a human user. In the case of the self-driving car, when it does not know what to do, it may ask the passenger using the interactive module I in natural language and then follow the instruction from the passenger and learn it for future use. For example, if the car sees a black patch on the road that it has never seen before, it can ask ‚Äúwhat is that black thing in front?‚Äù The passenger may answer ‚Äúthat is tar.‚Äù If there is no ready response, e.g., no prior information on tar, the system may progress with a further inquiry, asking the passenger ‚Äúwhat should I do?‚Äù (2)  Imitation learning. On seeing a novel object, if the car in front drives through it with no issue, the car may choose the same course of action as well and also learn it for future use if the car drives through without any problem. (3)  Reinforcement learning. By interacting with the environment through trial-and-error exploration, the agent learns a good response policy. This is extremely challenging in a real-life environment as any action taken has consequences and cannot be reversed. For this to work, the agent must have an internal evaluation system that can assign rewards to states and assess risk or safety of each action.  (4) Transfer learning: The agent may transfer knowledge from previous similar environments to the new unknown environment. Note that researchers in the control community have worked on the topic of finding a feasible trajectory for a new task in an unknown environment. For example, Vallon and Borrelli (2020) proposed a hierarchical learning architecture for predictive control in unknown environments, which is based on generalization and knowledge transfer from previous familiar and  12  similar environments. However, for such transfers to be successful, novelty characterization is critical; otherwise, knowledge transfer can be detrimental, e.g., resulting in negative transfer.  If multiple novelties are detected at the same time, it is more difficult to respond as the agent must reason over the characteristics of all novel objects to dynamically formulate an overall plan of actions that prioritizes the responses. 5.5.  Risk Assessment and Learning There is risk in achieving performance goals of an agent when making an incorrect decision. For example, classifying a known guest as unknown or an unknown guest as known may negatively affect guest impressions resulting in negative reviews. For a self-driving car, misidentifications can result in wrong responses, which could be a matter of life and death. Thus, risk assessment must be made in making each decision. Risk assessment can also be learned from experiences or mistakes. In the example of a car passing over tar, after the experience of passing over shiny black surfaces safely many times, if the car slips in one instance, the car agent must assess the risk of continuing the prior procedure. Given the danger, a car may weigh the risk excessively, slowing down on new encounters of shiny black surfaces. Another aspect of risk is in the adaptation process. The planned or learned actions should be safe. In the control and reinforcement learning community, many safe reinforcement learning methods have been proposed. For example, Mazouchi et al. (2021) presented a conflict-aware safe reinforcement learning algorithm to control autonomous systems. Instead of providing safety and performance guarantees for a single environment or circumstance, this paper proposes a method to provide safety and performance guarantees across a variety of circumstances that the system might encounter. 6. CML: An Example SOLA System Although novelty detection (Yang et al. 2021; Pang et al. 2021) and incremental or continual learning (Chen and Liu 2018; Parisi et al. 2019; Lomonaco et al. 2022) have been studied widely, little work has been done to build a SOLA system. Here we describe an implemented task-oriented dialogue system or chatbot, CML (Command Matching and Learning), that follows the SOLA framework. CML performs each function in SOLA continually by itself on the job during conversation. Below, we provide an overview of the system and highlight each corresponding component in the SOLA framework and discuss how it works. Details of the system and experimental evaluations can be found in (Mazumder et al. 2020b). Another two related systems that learn factual knowledge during conversation can be found in (Mazumder et al. 2019, 2020a).  CML1 is a natural language interface (NLI) like Amazon Alexa and Apple Siri. Its performance task is to take a user command in natural language (NL) and perform the user requested API action in the underlying application. Since it is a text-based system, no other support function is needed. The key issue is how to understand paraphrased NL commands from the user to map a user command to a system‚Äôs API call.  CML is based on natural language to natural language (NL2NL) matching to automatically build NLIs. The approach is application-independent and requires no pre-collected application-specific training data, and thus can be easily adapted to different applications, e.g., robot navigation and command systems, virtual assistants like Siri and Alexa, and GUI-based software applications (e.g., manipulating objects in MS Word, MS Paint, Windows). To build a new NLI (or to incrementally add a new task/skill to an existing NLI), the application developer only needs to write a set ùëÜ# of seed commands (SCs) in NL to represent each API ùëé# ‚àà ùê¥ (which is the set of all API actions that can be performed in the application). SCs in ùëÜ# are just like paraphrased NL commands from the end users to invoke ùëé#. The only difference is that the objects to be  1 We note that many terminologies used here are different from those used the original CML paper. This is because when the CML paper was written, the SOLA framework had not been conceived yet. However, since CML is an open-world continual learning system, its steps and modules naturally map well to those of the SOLA framework.  13  acted upon in each SC are replaced with variables, which are the arguments of API ùëé#. When the user issues a command C, the system simply matches C with a SC ùë†(‚àó of the correct action ùëé‚àó and in doing so, it also instantiates the variables/arguments for the associated API ùëé‚àó to be executed. For example, the table below shows three API actions (column 1) for switching on the light in a location, switching off the light in a location, and change the light color of a location, respectively. Two example SCs are given for each API action in column 2. An example user command (without XI or X2) is given in column 3 for each API. Here, X1 and X2 are variables or place holders for location and color respectively.  APR(arg: arg type) Seed Commands (SCs) Example User Command SwitchOnLight(X1: location) 1. Switch on the light in X1 2. Put on light in X1 Switch on the light in the bedroom (X1).  SwitchOffLight(X1: location) 1. Switch off the light in X1 2. Put off light in X1 Switch off the light in the bedroom (X1) ChangeLightColor (X1: location, X2: color) 1. Change the X1 light to X2 2. I want X1 light to be X2 Change the bedroom (X1) light to blue (X2) CML has three main modules: (1) A SC specification language for the application developer to specify the initial SCs for its application, (2) a command grounding module (CGM) to match/ground a user command (e.g., ‚Äúpower on the light in the bedroom‚Äù) to a SC (e.g., [Put on the light in X1], where the grounded API argument is {X1 = ‚Äòbedroom‚Äô}) for the associated API action (e.g., SwitchOffLight(X1:location)) to be performed, and (3) an interactive learner to continually learn new SCs from users during application.  Novelty equates to the CGM‚Äôs failure in grounding a user command. When the system detects a novelty (a hard-to-understand user command), it tries to understand the command and also learn the command so that it will be able to understand it and similar commands in the future. The system also assumes that every novelty is relevant to the application. The novelty characterization step of CML, which is also done by CGM, tries to identify the part of the user command that the system does not understand and how similar it is to some known commands. CGM uses an information retrieval (IR) based matching model. A Pre-trained language model can also be employed to build CGM.  Based on the characterization, the system adapts by asking the user via an interactive dialogue to obtain the ground truth API action requested by the user, which also serves as a piece of training data for continual learning. In the adaptation or accommodation process, risk is also considered. Consider the following example. The user issues the command ‚Äúturn off the light in the kitchen‚Äù that the system does not understand (i.e., a novelty), i.e., the CGM module fails to ground/match the command. Based on the current system state, it decides which part of the command it can understand or ground, which part it has difficulty with, and what known commands are similar to the user command (i.e., characterization). Based on the characterization result, the interactive learner provides the user a list of top-k predicted actions (see below) described in NL and asks the user to select the most appropriate action from the given list (i.e., adaptation). User: Turn off the light in the kitchen Bot: Sorry, I didn‚Äôt get you. Do you mean to: option-1. switch off the light in the kitchen, or option-2. switch on the light in the kitchen, option-3. change the color of the light? The user selects the desired action (option-1). The action API [SwitchOffLight(X1:location)] corresponding to the selected action (option-1) is retained as the ground truth action for the issued user command. In subsequent turns of the dialogue, the interactive learner will ask the user questions to acquire ground truth values associated with the arguments of the selected action, as defined in the API. This process is controlled by an action planner. CML then incrementally learns to map the original command ‚Äúturn off the light in  14  the kitchen‚Äù to the API action, SwitchOffLight(arg:location). Learning here means to create a new SC [turn off the light in X1] and add it to the list of SCs for the API SwitchOffLight(X1:location) so that in the future, when this user or any other user issues the same or a similar command, CML will have no problem in understanding or grounding it, i.e., mapping the command to this new SC. Over time, CML learns more and more from users and becomes more and more knowledgeable and powerful in serving them.  Risk is considered in CML in two ways. First, it does not ask the user too many questions in order not to annoy the user. Second, when the characterization is not confident, the system simply asks the user to say his/her command again in an alternative way (which may be easier for the system to ground or understand) rather than providing a list of random options for the user to choose from. If the options have nothing to do with the user command, the user may lose confidence in the system. 7  Key Challenges Although novelty detection and continual learning have been researched extensively, they remain challenging. Limited work has been done to address the following (this list is by no means exhaustive):  Learning everything and everywhere. As indicated earlier, every module or sub-system in Figure 2 needs to learn continually, i.e., everywhere needs learning. Similarly, everything can be learned. For example, from each user‚Äôs dialogue history with a chatbot, the system can learn whether a user feels more excited or gets annoyed while conversing on a particular topic, and what he/she likes and dislikes. The chatbot can then utilize this user‚Äôs profile in modeling future conversations to make them more engaging with the user.   In this paper, we focus only on the open world continual learning of the main task. A general framework is needed to integrate all the learning activities and their resulting knowledge to make the agent work even better.  Obtaining training data on the fly. A key feature of SOLA is the interaction with human users to obtain ground-truth training data, which needs a dialogue system. Building an effective dialogue system for this purpose is challenging. We are unaware of any such system for SOLA except CML (Mazumder et al. 2020b), but CML is only for simple command learning. Few-shot continual learning. It is unlikely for the learning agent to collect a large volume of training data via interaction with the user. Then, an effective and accurate few-shot continual/incremental learning method is necessary.  Novelty characterization and adaptation. Characterization is critical because it defines the characteristics used to recognize world state and determine the best response strategy. We have given several examples of characterization and adaptation in the domains of self-driving cars and greeting bots. However, little research has been done on the topics in the academic community. They are extremely challenging as they require the system to have a large amount of prior knowledge and a domain world model, and to reason based on this knowledge and the current observations. Learning to respond/adapt. As indicated earlier, this is especially challenging in a physical environment (Dulac-Arnold et al. 2021). For example, due to safety concerns, learning during driving by a self-driving car using reinforcement learning (RL) is very dangerous because every action has potentially life and death consequences and cannot be undone. Furthermore, for RL to work, the agent must have a highly effective internal reward or evaluation system to assign rewards to actions and states and be aware of safety constraints automatically without detailed manual specifications. So far limited work has been done. Knowledge representation, reasoning, and revision. SOLA has so many components, but it is not known what knowledge representation & reasoning scheme best suits all modules and facilitates their integration. Further, it is inevitable that the system may misinterpret, generalize or otherwise assemble incorrect  15  knowledge. A system must have a mechanism to detect and revise the inaccurate knowledge on its own. Little work has been done in this area. 8.  Conclusion A truly intelligent system must be able to learn autonomously and continually in the open world on its own initiative after deployment, adapt to the ever-changing world, and learn more and more to become more and more powerful over time. This paper proposed the self-initiated open-world continual learning and adaptation (SOLA) framework for this purpose, and presented the concepts, steps, a general framework and key challenges. An implemented SOLA system called CML in the context of dialogue systems (or chatbots) was also described. We believe that future research in SOLA will bring AI to the next level. Acknowledgments This paper benefited from numerous discussions in DARPA SAIL-ON Program meetings and. This work was supported in part by a DARPA Contract HR001120C0023. Bing Liu was also partially supported by three National Science Foundation (NSF) grants (IIS-1910424, IIS-1838770 and CNS-2225427), and a research gift from Northrop Grumman. The views expressed in this document are entirely those of the authors and not those of the funders or the authors‚Äô respective organizations. References Baldassarre G. 2019. Intrinsic motivations and open-ended learning. arXiv preprint arXiv:1912.13263. 2019 Dec 31. Barto, A; Mirolli, M.; and Baldassarre, G. 2013. Novelty or surprise? Frontiers in Psychology, 4, e1-15.  Bendale, A.; and Boult, T. 2015. Towards open world recognition. In Proceedings of the IEEE conference on computer vision and pattern recognition, 1893‚Äì1902. Boult, T.; Grabowicz, P.; Prijatelj, D.; Stern, R.; Holder, L.; Alspector, J.; Jafarzadeh, M.; Ahmad, T.; Dhamija, A.; Li, C.; et al. 2021. Towards a Unifying Framework for Formal Theories of Novelty. In Proceedings of the AAAI Conference on Artificial Intelligence, volume 35, 15047‚Äì15052. Chaudhry, A.; Gordo, A.; Dokania, P. K.; Torr, P.; and Lopez-Paz, D. 2020. Using hindsight to anchor past knowledge in continual learning. arXiv preprint arXiv:2002.08165, 3. Chen, Z and Liu, B. 2014. Topic Modeling using Topics from Many Domains, Lifelong Learning and Big Data. Proceedings of the 31st International Conference on Machine Learning (ICML-2014), 2014. Chen, Z.; and Liu, B. 2018. Lifelong machine learning. Morgan & Claypool Publishers. Deci, E. L. and Ryan, R. M. 1985. Intrinsic Motivation and Self-Determination in Human Behavior. New York, NY: Plenum Press. Dulac-Arnold, G.; Levine, N.; Mankowitz, D. J.; Li, J.; Paduraru, C.; Gowal, S.; and Hester, T. 2021. Challenges of real-world reinforcement learning: definitions, benchmarks and analysis. Machine Learning, 2419‚Äì2468. Fei, G.; Wang, S.; and Liu, B. 2016. Learning cumulatively to become more knowledgeable. In Proceedings of the 22nd ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, 1565‚Äì1574.  16  Guo, Y.; Hu, W.; Zhao, D.; and Liu, B. 2022. Adaptive Orthogonal Projection for Batch and Online Continual Learning. Proceedings of AAAI-2022. Kasaei, H.; Seabra Lopes, L.. and Tom√©, A.M. 2020. Local-LDA: Open-Ended Learning of Latent Topics for 3D Object Recognition, IEEE Transactions on Pattern Analysis and Machine Intelligence, 42 (10), p. 2567-2580. Kasaei, H.; Shafii, N.; Seabra Lopes, L. and Tom√© A.M. 2019. Interactive Open-Ended Object, Affordance and Grasp Learning for Robotic Manipulation, Proc. IEEE International Conference on Robotics and Automation (ICRA‚Äô2019), Montreal, Canada, May 20-24, 2019, p. 3747-3753. Ke, Z.; Liu, B.; and Huang, X. 2020. Continual learning of a mixed sequence of similar and dissimilar tasks. Proceedings of 34th Conference on Neural Information Processing Systems (NeurIPS-2020), 33: 18493‚Äì18504. Ke, Z.; Liu, B.; Ma, N.; Xu, H.; and Shu, L. 2021. Achieving Forgetting Prevention and Knowledge Transfer in Continual Learning. Proceedings of 35th Conference on Neural Information Processing Systems (NeurIPS-2021), 34: 22443‚Äì22456. Kim, G.; Ke, Z. and Liu, B. 2022a. A Multi-Head Model for Continual Learning via Out-of-Distribution Replay. Proceedings of Conference on Lifelong Learning Agents (CoLLAs 2022), August 22-24, 2022. Kim, G.; Xiao, C.; Konishi, T.; Ke, Z.; Liu, B. 2022b. A Theoretical Study on Solving Continual Learning. Proceedings of 36th Conference on Neural Information Processing Systems (NeurIPS 2022), 2022. Kirkpatrick, J.; Pascanu, R.; Rabinowitz, N.; Veness, J.; Desjardins, G.; Rusu, A. A.; Milan, K.; Quan, J.; Ramalho, T.; Grabska-Barwinska, A.; and Others. 2017. Overcoming catastrophic forgetting in neural networks. Proceedings of the National Academy of Sciences, 114(13): 3521‚Äì3526. Kiumarsi, B.; Vamvoudakis, K. G.; Modares, H. and Lewis, F. L. 2017. Optimal and autonomous control using reinforcement learning: A survey. IEEE Trans. Neural Netw. Learn. Syst., vol. 29, no. 6, pp. 2042‚Äì2062, 2017.  Kulkarni T. D.; Narasimhan, K.; Saeedi, A and Tenenbaum, J. 2016. Hierarchical deep reinforcement learning: Integrating temporal abstraction and intrinsic motivation. Advances in neural information processing systems (NIPS-2016). Langley, P. 2020. Open-world learning for radically autonomous agents. In Proceedings of the AAAI Conference on Artificial Intelligence, volume 34, 13539‚Äì13543. Lee, S.; Stokes, J.; and Eaton, E. 2019. Learning shared knowledge for deep lifelong learning using deconvolutional networks. In Proceedings of the Twenty-Eighth International Joint Conference on Artificial Intelligence (IJCAI-19), 2837‚Äì2844. Liu, B. 2020. Learning on the job: Online lifelong and continual learning. In Proceedings of the AAAI Conference on Artificial Intelligence (AAAI-2020). 2000.  Liu, B.; and Mazumder, S. 2021. Lifelong and continual learning dialogue systems: learning during conversation. In Proceedings of the AAAI Conference on Artificial Intelligence (AAAI-2021), 2021. Lomonaco, V.; Pellegrini, L.; Rodriguez, P.; Caccia, M.; She, Q.; Chen, Y.; Jodelet, Q.; Wang, R.; Mai, Z.; Vazquez, D.; et al. 2022. CVPR 2020 continual learning in computer vision competition: Approaches, results, current challenges and future directions. Artificial Intelligence, 303: 103635. Ma, N.; Politowicz, A.; Mazumder, M.; Chen, J.; Liu, B.; Robertson, E. and Grigsby, S. 2021. Semantic Novelty Detection in Natural Language Descriptions. Proceedings of 2021 Conference on Empirical Methods in Natural Language Processing (EMNLP-2021), 7 ‚Äì 11 November 2021.  17  Ma, N.; Mazumder, S.; Politowicz, A.; Liu, B.; Robertson, E. and Grigsby, S. 2022. Semantic Novelty Detection and Characterization in Factual Text Involving Named Entities. Proceedings of 2022 Conference on Empirical Methods in Natural Language Processing (EMNLP-2022), 7 ‚Äì 11 December 2022. Mazouchi, M.; Nageshrao, S. and Modares, H. 2021. Conflict-aware safe reinforcement learning: A meta-cognitive learning framework. IEEE/CAA Journal of Automatica Sinica, 9(3), pp.466-481. Mazumder, S.; Liu, B.; Ma, N.; and Wang, S. 2020a. Continuous and Interactive Factual Knowledge Learning in Verification Dialogues. NeurIPS-2020 Workshop on Human And Machine in-the-Loop Evaluation and Learning Strategies. Mazumder, S.; Liu, B.; Wang, S.; and Esmaeilpour, S. 2020b. An Application-Independent Approach to Building Task-Oriented Chatbots with Interactive Continual Learning. NeurIPS-2020 Workshop on Human in the Loop Dialogue Systems. Mazumder, S.; Liu, B.; Wang, S.; and Ma, N. 2019. Lifelong and Interactive Learning of Factual Knowledge in Dialogues. In SIGDIAL. McCloskey, M.; and Cohen, N. J. 1989. Catastrophic interference in connectionist networks: The sequential learning problem. In Psychology of learning & motiv., volume 24. Mirolli, M. and Baldassarre, G. 2013. Functions and mechanisms of intrinsic motivations: The knowledge versus competence distinction. In Baldassarre, G. & Mirolli, M. (eds.), Intrinsically Motivated Learning in Natural and Artificial Systems, 49-72. Berlin: Springer-Verlag. Mitchell, T.; Cohen, W.; Hruschka, E.; Talukdar, P.; Betteridge, J.; Carlson, A.; Dalvi, B.; Gardner, M.; Kisiel, B.; Krishnamurthy, J.; Lao, N.; Mazaitis, K.; Mohamed, T.; Nakashole, N.; Platanios, E.; Ritter, A.; Samadi, M.; Settles, B.; Wang, R.; Wijaya, D.; Gupta, A.; Chen, X.; Saparov, A.; Greaves, M.; and Welling, J. 2015. Never-Ending Learning. In Proceedings of the AAAI Conference on Artificial Intelligence (AAAI-15). Moreno-Torres, J. G.; Raeder, T.; Alaiz-Rodr¬¥ƒ±guez, R.; Chawla, N. V.; and Herrera, F. 2012. A unifying view on dataset shift in classification. Pattern recognition, 45(1): 521‚Äì530. Murty, V. P.; Ballard, I. C.; Macduffie, K. E.; Krebs, R. M.; and Adcock, R. A. 2013. Hippocampal networks habituate as novelty accumulates. Learning & Memory, 20(4): 229‚Äì235. Oliveira, M.; Seabra Lopes, L.; Lim, G.H.; Kasaei, S.H.; Sappa, A.D. and Tome, A.M.  2015. Concurrent learning of visual codebooks and object categories in open-ended domains, Proc. 2015 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS2015), p. 2488-2495. Oudeyer, P.Y. and Kaplan, F. 2007. What is intrinsic motivation? A typology of computational approaches. Frontiers in Neurorobotics, 1, 6. Oudeyer, P. Y.; Kaplan, F. and Hafner, V. V. 2007. Intrinsic motivation systems for autonomous mental development. IEEE Transactions on Evolutionary Computation, 11(2), 265-286. Pang, G.; Shen, C.; Cao, L.; and Hengel, A. V. D. 2021. Deep learning for anomaly detection: A review. ACM Computing Surveys (CSUR), 54(2): 1‚Äì38. Parisi, G. I.; Kemker, R.; Part, J. L.; Kanan, C.; and Wermter, S. 2019. Continual lifelong learning with neural networks: A review. Neural Networks. Parmar, J.; Chouhan, S. S.; Raychoudhury, V.; and Rathore, S. S. 2021. Open-world Machine Learning: Applications, Challenges, and Opportunities. arXiv preprint arXiv:2105.13448. Pathak, D.; Agrawal, P.; Efros, A. A. and Darrell, T. 2017. Curiosity-driven exploration by self-supervised prediction. arXiv: 1705.05363.  18  Rebuffi, S.-A.; Kolesnikov, A.; and Lampert, C. H. 2017. iCaRL: Incremental classifier and representation learning. In CVPR, 5533‚Äì5542. Ren, P.; Xiao, Y.; Chang, X.; Huang, P.-Y.; Li, Z.; Gupta, B. B.; Chen, X.; and Wang, X. 2021. A survey of deep active learning. ACM Computing Surveys (CSUR), 54(9): 1‚Äì40. Rusu, A. A.; Rabinowitz, N. C.; Desjardins, G.; Soyer, H.; Kirkpatrick, J.; Kavukcuoglu, K.; Pascanu, R.; and Hadsell, R. 2016. Progressive neural networks. arXiv preprint arXiv:1606.04671. Ruvolo, P.; and Eaton, E. 2013. ELLA: An efficient lifelong learning algorithm. In ICML. Santucci, V.; Oudeyer, P.Y.; Barto, A. and Baldassarre, G., 2020. Editorial: Intrinsically motivated open-ended learning in autonomous robots. Frontiers in Neurorobotics, 13, p.115.  Seabra Lopes, L. and Chauhan. A. 2007 How many Words can my Robot learn? An Approach and Experiments with One-Class Learning, Interaction Studies, John Benjamins, 8(1), p. 53-81. Seabra Lopes, L. and Chauhan A. 2008. Open-Ended Category Learning for Language Acquisition, Connection Science, Taylor & Francis, 20 (4), 277-297. Serra, J.; Suris, D.; Miron, M.; and Karatzoglou, A. 2018. Overcoming catastrophic forgetting with hard attention to the task. In International Conference on Machine Learning, 4548‚Äì4557. PMLR. Settles, B. 2009. Active learning literature survey. Shin, H.; Lee, J. K.; Kim, J.; and Kim, J. 2017. Continual learning with deep generative replay. In NIPS, 2994‚Äì3003. Silver, D. L.; Yang, Q.; and Li, L. 2013. Lifelong machine learning systems: Beyond learning algorithms. In 2013 AAAI spring symposium series. Talamadupula, K.; Briggs, G.; Scheutz, M. and Kambhampti, S. Architectural mechanisms for handling human instructions for open-world mixed-initiative team tasks and goals,‚Äù Advances in Cognitive Systems, Vol. 5, 2017. Thrun, S. 1995. Is learning the n-th thing any easier than learning the first? Advances in neural information processing systems, 8. Tulving, E.; and Kroll, N. 1995. Novelty assessment in the brain and long-term memory encoding. Psychonomic Bulletin & Review, 2(3): 387‚Äì390. Vallon, C. and Borrelli, F., 2020, August. Data-driven hierarchical predictive learning in unknown environments. In 2020 IEEE 16th International Conference on Automation Science and Engineering (CASE) (pp. 104-109). IEEE. White, R. W. 1959, Motivation reconsidered: The concept of competence. Psychological Review, 66, 297-333.  Xu, H.; Liu, B.; Shu, L.; and Yu, P. 2019. Open-world learning and application to product classification. In The World Wide Web Conference, 3413‚Äì3419. Yang, J.; Zhou, K.; Li, Y.; and Liu, Z. 2021. Generalized out-of-distribution detection: A survey. arXiv preprint arXiv:2110.11334. Zenke, F.; Poole, B.; and Ganguli, S. 2017. Continual learning through synaptic intelligence. In ICML, 3987‚Äì3995.   19  Authors‚Äô Biography Bing Liu is a distinguished professor of Computer Science at the University of Illinois at Chicago (UIC). He received his Ph.D. in Artificial Intelligence (AI) from the University of Edinburgh. His research interests include lifelong and continual learning, sentiment analysis, lifelong learning chatbots, open-world AI/learning, NLP, and machine learning. He has published extensively in top conferences and journals and authored four books: one about lifelong learning, two about sentiment analysis and one about Web mining. Three of his papers received Test-of-Time awards: two from SIGKDD and one from WSDM. Another of his papers received Test-of-Time award - honorable mention from WSDM. Some of his work has been widely reported in the international press, including a front-page article in The New York Times. He has served as the Chair of ACM SIGKDD from 2013-2017, as program chair of many leading data mining conferences, including KDD, ICDM, CIKM, WSDM, SDM, and PAKDD, as associate editor of leading journals such as TKDE, TWEB, DMKD and TKDD, and as area chair or senior PC member of numerous NLP, AI, Web, and data mining conferences. He is the winner of 2018 ACM SIGKDD Innovation Award. He is a Fellow of the ACM, AAAI, and IEEE.  Sahisnu Mazumder is an AI Research Scientist at Intel Labs, USA where he works on Human-AI collaboration and dialogue & interaction systems research. Prior to joining Intel, he obtained his PhD in Computer Science at the University of Illinois at Chicago (UIC), USA. His research interests broadly falls into the area of NLP, Deep Learning, Dialogue and Interactive Systems, Lifelong and Continual Learning, Open-World AI / Learning. He has published several research papers in leading AI, NLP and Dialogue conferences like AAAI, IJCAI, ACL, EMNLP, NAACL, SIGDIAL; delivered tutorials in SIGIR-2022, IJCAI-2021, BDA-2014; served as Reviewer of premier conferences like AAAI, IJCAI, ACL, EMNLP, NAACL, EACL, and journals like ACM TALLIP, IEEE TNNLS. He also worked as a Research Intern at Huawei Research USA on projects related to user activity & interest mining and at Microsoft Research - Redmond on Natural Language Interaction (NLI) system design.  Eric Robertson received his Masters in Computer Science from UMBC, and has over 30 years of experience in complex event processing, data science, geospatial analytics, ontologies, and large-scale data systems across multiple industries including Financial, Telecommunication, Pharmaceutical and Defense. He served as PAR Government‚Äôs PI on the DARPA AIDA and SAIL-ON programs and has led development of the data collection and evaluation infrastructure for the DARPA MediFor (Media Forensics) program. He holds three patents in Cyber Intrusion Detection Systems.  Scott Grigsby received his Bachelor‚Äôs degree in Physics from Lycoming College and his PhD from The Ohio State University in Biophysics. Dr. Grigsby has over 30 years‚Äô experience in Cognitive Science including extensive experience in science and engineering related to autonomous systems, artificial and augmented intelligence, human-machine teaming, human interfaces, simulation and training, decision support, and command and control technologies and has published over 50 papers in related areas","cs.AI, cs.CL, cs.HC, cs.LG",Arxiv
20,"Adversarial Machine Learning and Cybersecurity: Risks, Challenges, and Legal Implications","Micah Musser, Andrew Lohn, James X. Dempsey, Jonathan Spring, Ram Shankar Siva Kumar, Brenda Leong, Christina Liaghati, Cindy Martinez, Crystal D. Grant, Daniel Rohrer, Heather Frase, Jonathan Elliott, John Bansemer, Mikel Rodriguez, Mitt Regan, Rumman Chowdhury, Stefan Hermanek",2023-05-23 22:27:53+00:00,http://arxiv.org/pdf/2305.14553v1,"In July 2022, the Center for Security and Emerging Technology (CSET) at Georgetown University and the Program on Geopolitics, Technology, and Governance at the Stanford Cyber Policy Center convened a workshop of experts to examine the relationship between vulnerabilities in artificial intelligence systems and more traditional types of software vulnerabilities. Topics discussed included the extent to which AI vulnerabilities can be handled under standard cybersecurity processes, the barriers currently preventing the accurate sharing of information about AI vulnerabilities, legal issues associated with adversarial attacks on AI systems, and potential areas where government support could improve AI vulnerability management and mitigation.   This report is meant to accomplish two things. First, it provides a high-level discussion of AI vulnerabilities, including the ways in which they are disanalogous to other types of vulnerabilities, and the current state of affairs regarding information sharing and legal oversight of AI vulnerabilities. Second, it attempts to articulate broad recommendations as endorsed by the majority of participants at the workshop.","Adversarial Machine  Learning and Cybersecurity:  Risks, Challenges, and Legal Implications Authors:     Micah Musser * Jonathan Spring * Christina Liaghati Daniel Rohrer Jonathan Elliott Rumman Chowdhury *Workshop Organizer       Andrew Lohn * Ram Shankar Siva Kumar * Cindy Martinez Heather Frase Mikel Rodriguez Stefan Hermanek       James X. Dempsey * Brenda Leong Crystal D. Grant  John Bansemer Mitt Regan April 2023   Center for Security and Emerging Technology |  1 Authors   Micah Musser  is a research analyst with the CyberAI  Project at CSET, where Andrew  Lohn  is a senior fellow. James X. Dempsey  is senior policy advisor for the Program on  Geopolitics, Technology, and Governance, Stanford Cyber Policy Center, and lecturer  at the UC Berkeley School of Law. Jonathan Spring  is a cybersecurity specialist at the  Cybersecurity and Infrastructure Security Agency (CISA), and was at the time of the  July 2022 workshop an analyst at the CERT Division of the Software Engineering  Institute at Carnegie Mellon University. Ram Shankar Siva Kum ar is a data cowboy at  Microsoft Security Research and  tech policy fellow at the CITRIS Policy Lab and the  Goldman School of Public Policy  at UC Berkeley .    Brenda Leong  is a partner at BNH.ai, a boutique law firm focused on the legal issues  surrounding AI . Christina Liaghati  is AI strategy execution and operations manager for  the AI and Autonomy Innovation Center at the MITRE Corporation . Cindy Martinez  is a  policy analyst focusing on AI governance and regulation. Crystal D. Grant  is a data  scientist and geneticist who studies the relationship between emerging technologies  and civil liberties. Daniel Rohrer  is vice president of software product security,  focused  on advancing architecture and research at NVIDIA.  Heather Frase  and John Bansemer  both work at CSET, where Heather is a senior fellow leading the AI standards and  testing line of research, and John is the director of the CyberAI Project . Jonathan Elliott   is chief of test and evaluation in the Test and Evaluation Division of the Chief Digital  and Artificial Intelligence Office. Mikel Rodriguez works on securing AI -enabled  systems at DeepMind, and was formerly the director of the AI and Autonomy  Inno vation Center at the MITRE Corporation at the time of the July 2022 workshop.  Mitt Regan  is McDevitt professor of jurisprudence and co -director of the Center on  National Security at Georgetown University Law Center. Rumman Chowdhury  is the  founder of Parit y Consulting, an ethical AI consulting group, and was formerly the  director of Machine Learning, Ethics, Transparency, and Accountability at Twitter at the  time of the July 2022 workshop. Stefan Hermanek  is a product manager with  expertise and experience i n AI safety and robustness, and AI red -teaming.               Center for Security and Emerging Technology |  2   Views expressed in this document do not necessarily represent the views of the  U.S. government or any institution, organization, or entity with which the authors  may be affiliated.   Reference to any sp ecific commercial product, process, or service by trade name,  trademark, manufacturer, or otherwise, does not constitute or imply an  endorsement, recommendation, or favoring by the U.S. government , including the  U.S. Department of Defense, the Cybersecurity and Infrastructure Security Agency,  or any other institution, organization , or entity with which the authors may be  affiliated.            Center for Security and Emerging Technology |  3 Executive Summary   In July 2022, the Center for Security and Emerging Technology (CSET) at Georgetown  University and the Program on Geopolitics, Technology , and Governance at the   Stanford Cyber Policy Center convened a workshop of experts to examine the  relationship between vulnerabilities in artificial intelligence systems and more  traditional types of software vulnerabilities. Topics discussed included the extent to  which AI vulnerabilities can be handled under standard cybersecurity processes, the  barriers currently preven ting the accurate sharing of information about AI  vulnerabilities, legal issues associated with adversarial attacks on AI systems, and  potential areas where government support could improve AI vulnerability  management and mitigation.   Attendees at the works hop included industry representatives in both cybersecurity and  AI red -teaming roles; academics with experience conducting adversarial machine  learning research; legal specialists in cybersecurity regulation, AI liability, and  computer -related criminal law ; and government representatives with significant AI  oversight responsibilities.   This report  is meant to accomplish two things. First, it provides  a high -level discussion  of AI vulnerabilities, including the ways in which they are disanalogous to other ty pes  of vulnerabilities, and the current state of affairs regarding information sharing and  legal oversight of AI vulnerabilities. Second, it attempts to articulate  broad  recommendations as endorsed by the majority of participants at the workshop. These  recommendations, categorized under four high -level topics, are as follows:   1. Topic : Extending Traditional Cybersecurity for AI Vulnerabilities   1.1. Recommendation : Organizations building or deploying AI models should  use a risk management framework that ad dresses security throughout  the AI system life cycle.   1.2. Recommendation : Adversarial machine learning researchers,  cybersecurity practitioners, and AI organizations should actively  experiment with extending existing cybersecurity processes to cover AI  vulnera bilities.   1.3. Recommendation : Researchers and practitioners in the field of  adversarial machine learning should consult with those addressing AI  bias and robustness, as well as other communities with relevant  expertise.     Center for Security and Emerging Technology |  4 2. Topic : Improving Information Sharing and  Organizational Security Mindsets   2.1. Recommendation : Organizations that deploy AI systems should pursue  information sharing arrangements to foster an understanding of the  threat.   2.2. Recommendation : AI deployers should emphasize building a culture of  security tha t is embedded in AI development at every stage of the  product life  cycle.   2.3. Recommendation : Developers and deployers of high -risk AI systems  must prioritize transparency.   3. Topic : Clarifying the Legal Status of AI Vulnerabilities   3.1. Recommendation : U.S. g overnment agencies with authority over  cybersecurity should clarify how AI -based security concerns fit into their  regulatory structure.   3.2. Recommendation : There is no need at this time to amend anti -hacking  laws to specifically address attacking AI systems.   4. Topic: Supporting Effective Research to Improve AI Security   4.1. Recommendation : Adversarial machine learning researchers and  cybersecurity practitioners should seek to collaborate more closely than  they have in the past.   4.2. Recommendation : Public efforts to promot e AI research should more  heavily emphasize AI security, including through funding open -source  tooling that can promote more secure AI development.   4.3. Recommendation : Government policymakers should move beyond  standards -writing toward providing test  beds or e nabling audits for  assessing the security of AI models.           Center for Security and Emerging Technology |  5 Table of Contents   Authors  ................................ ................................ ................................ ................................ .......................  1  Executive Summary  ................................ ................................ ................................ ................................  3  Introduction  ................................ ................................ ................................ ................................ ...............  6  Extending Traditional Cybersecurity for AI Vulnerabilities  ................................ ....................  10  Recommendations  ................................ ................................ ................................ ...........................  12  Improving Information Sharing and Organizational Security Mindsets  ..............................  15  Recommendations  ................................ ................................ ................................ ...........................  15  Clarifying the Legal Status of AI Vulnerabilities ................................ ................................ ........ 18  Recommendations  ................................ ................................ ................................ ...........................  20  Supporting Effective Research to Improve AI Security  ................................ ............................  22  Recommendations  ................................ ................................ ................................ ...........................  22  Acknowledgments ................................ ................................ ................................ ...............................  25  Endnotes  ................................ ................................ ................................ ................................ .................  26           Center for Security and Emerging Technology |  6 Introduction   Artificial intelligence (AI) technologies, especially machine learning, are rapidly being  deployed in a wide range of commercial and governmental contexts. These  technologies are vulnerable to a n extensive set of manipulations that can trigger  errors, infer private data from training datasets, degrade performance, or disclose  model parameters.1 Researchers have demonstrated major vulnerabilities in numerous  AI models, including many that have been deployed in public -facing contexts.2 As  Andrew Moore testified before the U.S. Senate Committee on Armed Services in May  2022, defending AI systems from adversarial attack s is ‚Äúabsolutely the place where   the battle ‚Äôs being fought at the moment.‚Äù3   However, AI vulnerabilities may not map straightforwardly onto the traditional  definition of a patch -to-fix cybersecurity vulnerability (see the se ction below on  ‚ÄúExtending Traditional Cybersecurity for AI Vulnerabilities ‚Äù). The differences between  AI vulnerabilities and more standard patch -to-fix vulnerabilities have generated  ambiguity regarding the status of AI vulnerabilities and AI attacks. This  in turn poses a  series of corporate responsibility and public policy questions: Can AI vulnerabilities be  addressed  using traditional methods of cyber risk remediation or mitigation? Are the  companies developing and using machine learning products equippe d to adequately  defend them? What legal liability exists for the developers of AI systems, or for the  attackers who undermine them? How can policymakers support the creation of a more  secure AI ecosystem?   In July 2022, the Center for Security and Emerging  Technology (CSET) at Georgetown  University and the Program on Geopolitics, Technology , and Governance at the   Stanford Cyber Policy Center convened a workshop of experts to address these  questions. Attendees included industry representatives in both cybers ecurity and AI  red-teaming roles; academics with experience conducting adversarial machine learning  research; legal specialists in cybersecurity regulation, AI liability, and computer -related  criminal law; and government representatives with significant AI  oversight  responsibilities. This report summarizes the main takeaways of the workshop, with  recommendations for researchers, industry  professionals , and policymakers.     Center for Security and Emerging Technology |  7 Box 1: Explanation of Key Terms   Many of the terms used throughout this report  can have m ultiple meanings. For the  sake of clarifying our discussion, we use  the following terms as described here:   Artificial intelligence (AI) : a set of technologies that enable computers to learn to  perform tasks traditionally performed  by humans. This report  uses AI  interchangeably with machine learning. There are other approaches to AI research  beyond machine learning , but this report  focuses on vulnerabilities to machine  learning -based models. An important subset of current AI  approaches  is deep  learning, and the field of adversarial machine learning focuses largely on attacking  and defending deep learning -based models.   AI system : a system which includes an AI model as a key component. This  definition includes all components of the overal l system ‚Äîincluding preprocessing  software, physical sensors, logical rules, and hardware devices ‚Äîand can be  contrasted with the term ‚ÄúAI model,‚Äù which we use to refer only to the parameters  of the mathematical model produced by an AI training process.   Vulnerability : this report  adopts the definition of a vulnerability provided by the  CERT Guide to Coordinated Vulnerability Disclosure as ‚Äúa set of conditions or  behaviors that allows the violation of an explicit or implicit security policy.  Vulnerabilitie s can be caused by software defects, configuration or design  decisions, unexpected interactions between systems, or environmental changes.‚Äù4  AI vulnerability : a vulnerability in an AI system, including both vulnerabilities that  exploit the mathematical fe atures of AI models, as well as vulnerabilities that arise  from the interaction of an AI model with other components of an overall AI system.   Traditional software vulnerability : a term used in this report  to refer to  vulnerabilities in operating systems, workstation applications, server software, and  mobile applications with  which much of the modern vulnerability management  community is most familiar. Example community efforts for traditional software    Center for Security and Emerging Technology |  8 vulnerabilities include CVSSv2 and CVSSv3 and the CVE p rogram.* However, there  are many other types of broader cybersecurity vulnerabilities ‚Äîincluding  vulnerabilities in open -source software, hardware devices, industrial control  systems, blockchain protocols, and so on ‚Äîthat may or may not differ from AI  vulne rabilities in the ways that this report  discuss es.   High -risk AI system : an AI system that is intended to automate or influence a  socially sensitive decision, including those affecting access to housing, credit,  employment, healthcare , and so forth. Vulner abilities‚Äîas well as other negative  properties, such as bias, unfairness, or discriminatory behavior ‚Äîare particularly  worrisome in these types of systems, as system failures may cause severe harm to  individuals. Where considerations affecting the design an d deployment of high -risk  AI systems are discussed in this report , they should be regarded as minimum  requirements for high -risk systems and do not imply endorsement of the use of AI  to automate high -risk decision -making in general.   Although the repertoire of attacks studied by adversarial machine learning researchers  is expanding, many of these attacks are still focused on lab settings, and a holistic  understanding of vulnerabilities in deployed systems is lacking. Due in part to the se  uncertainties, participants generally shied away from proposing sweeping legal or  regulatory changes regarding AI  vulnerabilities. At the same time,  workshop participants agreed that the  risk of attacks on AI systems is likely  to grow over time, and tha t it is  important to begin developing  mechanisms for addressing AI  vulnerabilities now. The fact that  computer - and software -based  processes already harbor many    * The Common Vulnerability Scoring System provides a set of properties of a cybersecurity vulnerability  that can be used to triage a vulnerability, and a suggested system for ranking vulnerabilities based on  those properties. See FIRST, ‚ÄúCommon Vulnerabilit y Scoring System SIG,‚Äù accessed January 30, 2023,  https://www.first.org/cvss/ . The Common Vulnerabilities and Exposures program aims to provide unique  identifiers for all publicly disclosed vulnerabilities. See CVE, https://www.cve.org/ , accessed January 29,  2023.   Workshop participan ts agreed  that the risk of attacks on AI  systems is likely to grow over  time, and that it is important to  begin developing mechanisms for  addressing AI vulnerabilities now.     Center for Security and Emerging Technology |  9 readily exploited  vulnerabilities not related to AI should not distract AI developers, AI  users , and policymakers from acting now to address AI vulnerabilities.   This report  summarizes the general consensus of the workshop related to adversarial  machine learning and offers recommendations to improve future responses. These  recommendations are divided  into four parts:   1. Recommendations regarding the degree to which AI vulnerabilities can be  handled under existing cybersecurity processes .  2. Recommendations regarding shifts in organizational culture and information  sharing for organizations and individuals actively involved in building AI models,  integrating models in business products, and using AI systems .  3. Recommendations regarding the legal issues surrounding AI vulnerabilities .  4. Recommendations regarding future areas of research and government support  that can lead to the development of more secure AI systems.   At a high level, we emphasize that ‚Äîalthough adversarial machine learning is a  complex field with highly technical tools ‚Äîthe problems posed by AI vulnerabilities  may be as much social as they are tech nological. Some of our recommendations  emphasize opportunities for industry and government policymakers to promote AI  security by investing in technical research. However, the majority of our  recommendations focus on changes to processes, institutional cul ture, and awareness  among AI developers and users. While we hope that these recommendations will  prompt organizations using AI to proactively think about the security issues  surrounding AI systems, we also underscore that individual authors maintain a wide   range of viewpoints and do not necessarily endorse each particular recommendation in  isolation.               Center for Security and Emerging Technology |  10 1. Extending Traditional Cybersecurity for AI Vulnerabilities   In many senses, attacks on AI systems are not new. Malicious actors have been  attempting to evade algorithm -based spam filters or manipulate recommender  algorithms for decades. But machine learning models have risen sharply in prevalence  over the last deca de‚Äîincluding in an increasing number of high -risk contexts.* At the  same time, researchers have repeatedly demonstrated that vulnerabilities in machine  learning algorithms and training processes are pervasive and challenging to  remediate.‚Ä† Machine learni ng-based image and voice recognition systems have been  fooled with perturbations imperceptible to humans, datasets have been poisoned in  ways that pervert system outputs or render them unreliable, and sensitive data meant  to remain private has been reconst ructed.5  To date , these attacks have mostly occurred in research settings, though  there is some  evidence of real -world hackers exploiting vulnerabilities in deep learning systems .6  Moreover, there is a shared expectation that, with the continued incorpor ation of AI  models into a wider range of use cases, the frequency of deep learning -based attacks  will grow. Workshop participants suspected that these attacks are likely to be most  common wherever there are either clear financial benefits to defeating a ma chine  learning model that would motivate private hackers or strategic advantages to doing  so that would motivate a nation -state.   We face a challenge in responding to AI vulnerabilities. On the one hand, existing  cybersecurity frameworks are meant to be ge neral enough to cover emerging classes    * We note this trend to underscore that all AI systems are likely to carry certain types of AI  vulnerabilities that can become particularly worrisome in high -risk contexts. This observation of a trend  is not an endo rsement of the use of AI in such contexts. Most workshop participants expressed serious  reservations about the use of AI in at least some high -risk contexts, but in this report we do not and  cannot offer a general rule for evaluating the ethical concerns a ssociated with these use cases.   ‚Ä† The field of adversarial machine learning focuses primarily on attacks on deep learning systems. Deep  learning is currently the predominant focus of machine learning research, but it is important to  emphasize that attacks  on deep learning -based models are in some ways elaborations of attacks on  other, more traditional machine learning methods. We do not view the category of ‚ÄúAI vulnerabilities‚Äù in  deep learning models as different in kind from other types of vulnerabilitie s, including vulnerabilities in  older machine learning models; however, the increasing social impact of deep learning models and the  level of research attention paid to them warrants some specific focus on these vulnerabilities. In the  remainder of this re port, we use ‚Äúdeep learning‚Äù to distinguish a subset of relatively newer models (and  corresponding attacks) from the full range of machine learning models and their vulnerabilities.     Center for Security and Emerging Technology |  11 of vulnerabilities such as those generated by deep learning methods. Indeed, it is  possible to analyze the risks of AI exploitation under standard risk or vulnerability  management frameworks.7 On the other hand, AI v ulnerabilities are distinct from  traditional software vulnerabilities in some important respects and may require  extensions of, or adjustments to, existing cybersecurity risk governance frameworks. At  a high level of abstraction, AI and traditional softwar e vulnerabilities differ in the  following ways:   1. AI vulnerabilities generally derive from a complex interaction between training  data and the training algorithm. This makes the existence of certain types of  vulnerabilities highly dependent on the particular  dataset(s) that may be used to  train an AI model, often in ways that are difficult to predict or mitigate prior to  fully training the model itself. This feature also makes it difficult to test the full  space of potential user inputs in order to understand  how a system may respond  to those inputs.8   2. ‚ÄúPatching‚Äù a vulnerability in an AI model may require retraining it, potentially at  considerable expense, or it may not even be feasible at all.9 Model retraining to  reduce security vulnerabilities may also degrade overall performance on non - malicious sys tem inputs.   3. In many contexts, vulnerabilities in AI systems may be highly ephemeral, as in  organizations using continuous training pipelines where models are frequently  updated with new data. In other contexts, vulnerabilities may be highly -context  depende nt, as for instance in organizations that deploy locally fine -tuned  versions of a central model across many devices. In either situation, attacks ‚Äîas  well as mitigations ‚Äîmay not transfer well across all versions of the model.   4. There is often deep uncertaint y regarding what ‚Äúcounts‚Äù as a vulnerability in an  AI system. For example, adversarial examples are inputs to an AI system that  have been perturbed in some way in order to deliberately degrade the system‚Äôs  performance. But it is hard to distinguish between  worrisome ‚Äúattacks‚Äù and  neutral‚Äîor even expected ‚Äîuser manipulations, like wearing sunglasses to   make it harder for facial recognition systems to recognize someone . While this  problem is not necessarily unique to AI, it does complicate the matter of defini ng  individual AI vulnerabilities.10   These differences are likely to change how vulnerabilities in AI systems are handled.  For instance, if fully ‚Äúpatching‚Äù a vulnerability is impossible, AI developers and  deployers may be more likely to leave systems with  known vulnerabilities online.11    Center for Security and Emerging Technology |  12 Responses will likely focus relatively more on risk mitigation and relatively less on risk  remediation, in which the underlying vulnerability is fully removed.   Recommendations   1.1. Organizations building or deploying AI mo dels should use a risk management  framework that addresses security throughout the AI system life  cycle.  Risk  management frameworks are a key element of any organization‚Äôs cybersecurity  policy,12 and we encourage their use for managing AI security. As with  other types of  risk management frameworks, it is important for organizations to incorporate them  throughout the product development pipeline. AI vulnerabilities will, however, present  some unique considerations for risk management frameworks. For instance , if  vulnerabilities in machine learning models cannot be as easily patched as many  traditional software vulnerabilities, then organizations may opt to mitigate  vulnerabilities rather than fix or decommission the model, especially when AI models  are a part of a complex system where the removal of one component may result in  hard -to-predict changes to the overall system.*   Important questions in using risk management frameworks include: How can we  assure that this model is reliable and robust? In w hat conte xts is it safe to deploy AI  models? What compensating controls are available? How should organizations  structure the process of deciding between taking a vulnerable system or feature offline  entirely or leaving it in place with mitigations? Are important t rade -offs at stake, such  as trade -offs between applying defensive measures to a model and ensuring that  overall performance remains high? What decisions might be in the best interests of the  end-users of a machine learning product, as well as in the best i nterests of the  individuals who will ultimately be affected by it , and i s there a way to involve those  groups throughout development of the system? In the case of high -risk AI systems,  organizations should consider what decisions regarding trade -offs most benefit    * Note that the National Institute of Standards and Technology has, as of  2023, released draft 1.0 of its  Artificial Intelligence Risk Management Framework . See National Institute of Standards and Technology,  ‚ÄúNIST AI 100 -1: Artificial Intelligence Risk Management Framework  (AI RMF 1.0),‚Äù January 23, 2023,  https://nvlpubs.nist.gov/nistpubs/ai/NIST.AI.100 -1.pdf. This document is ‚Äúintended for voluntary use and  to improve the ability to incorporate trustworthiness considerations into the design, development, use,  and evaluation of AI products, services, and systems.‚Äù We view this document as an important step  toward effectively augmenting existing risk management practices to account for the risks posed by AI  systems.     Center for Security and Emerging Technology |  13 underrepresented groups, but they should also carefully evaluate whether those  groups are harmed by the use of an AI system in the first place.   1.2. Adversarial machine learning researchers, cybersecurity practitioners, and AI  organizations should actively experime nt with extending existing cybersecurity  processes to cover AI vulnerabilities. The cybersecurity community has developed  many tools for tracking and mitigating vulnerabilities and for guiding incident response.  On the vulnerability management side, these include the Common Vulnerabilities and  Exposures (CVE) system for enumerating known vulnerabilities, the Common  Vulnerability Scoring System (CVSS) for evaluating the potential risk associated with  known vulnerabilities, and the Coordinated Vulnerability D isclosure (CVD) process for  coordinating between security researchers and software vendors.13 Although these  processes were not designed with AI systems in mind, there was agreement at the  workshop that these mechanisms are likely broad enough for managing  many types of  AI vulnerabilities. However, more collaboration between cybersecurity practitioners,  machine learning engineers, and adversarial machine learning researchers is necessary  to appropriately apply them to AI vulnerabilities.14 Assessing AI vulnerabilities requires  technical expertise that is distinct from the skill  set of cybersecurity practitioners, and  organizations should be cautioned against repurposing existing security teams without  additional training and resources.   The differences between AI vulnerabilities  and traditional software vulnerabilities  might make the use of these processes  more complicated. At the same time,  workshop participants did not feel that the  differences are sufficiently strong to justify  creating a  separate set of processes to  handle AI vulnerabilities.15 We therefore  encourage researchers and organizations to  incorporate AI  vulnerabilities into  established risk management practices.   1.3. Researchers and practitioners in the  field of adversarial ma chine learning should consult with those addressing AI bias  and robustness, as well as other communities with relevant expertise. Multiple  workshop participants noted that in some important respects, AI vulnerabilities may be  more analogous to other topics  such as algorithmic bias than they are to traditional  software vulnerabilities. AI fairness researchers have extensively studied how poor  data, design choices, and risk decisions have led to model failures that cause real -More collaboration between  cybersecurity practitioners,  machine learning engineers,  and adversarial machine  learning researchers is  necessary to appropriately  apply [existing cybersecurity  processes] to AI vulnerabilities.     Center for Security and Emerging Technology |  14 world harm; the AI security commu nity should seek to better understand these lessons  in developing their own frameworks for evaluating risk and assessing the assurance of  AI for use in consequential applications. In general, workshop participants believe d  that it is important to cultivate  greater engagement among adversarial machine  learning researchers, the AI bias field, cybersecurity practitioners, other relevant expert  groups, and affected communities.                                       Center for Security and Emerging Technology |  15 2. Improving Information Sharing and Organizational Security Minds ets  Several structural features make it difficult to assess precisely how large the threat of  attacks on AI systems is. For one, most information about existing AI vulnerabilities has  come from theoretical or academic research settings, from cybersecurity companies, or  from internal researchers red -teaming their organizations‚Äô AI systems.16 Second, the  absence of a systematic and standardized means for tracking AI assets (such as  datasets and models) and their corresponding vulnerabilities makes it difficult to know  how widespread vulnerable systems are.17 And third, for some types of attack s on AI  systems, attack detection may require meaningful machine learning or data science  expertise to implement, or at least a familiarity with the patterns of behavior that may  signal an AI -based attack. Since many cybersecurity teams may not have all th e  relevant expertise to detect such attacks, organizations may lack the capability ‚Äîand  perhaps the incentive ‚Äîto identify and disclose AI attacks that do occur.18  Even if vulnerabilities are identified or malicious attacks are observed, this information  is rarely transmitted to others, whether peer organizations, other companies in the  supply chain, end users, or government or civil society observers. Although some  potential mechanisms for disseminating information exist,19 a specialized, trusted  forum for i ncident information sharing on a protected basis is lacking. Several  workshop participants from industry and government organizations noted that they  would benefit from regular exchanges of information, but that networks for  information sharing do not currently exist, and that bureaucratic, policy, and cultural  barriers currently inhibit such sharing.   These conditions mean that, under current arrangements, the problem will likely  remain mostly unnoticed until long after attackers have successfully exploited   vulnerabilities. In order to avoid this outcome, we recommend that organizations  developing AI models take significant steps to formalize or make use of information  sharing arrangements, to monitor for potential attacks on AI systems, and to foster  transp arency.   Recommendations   2.1. Organizations that deploy AI systems should pursue information sharing  arrangements to foster an understanding of the threat. Currently, there are few  trusted mechanisms for organizations that have observed potential attacks o n their AI  systems to share that information with others, making it difficult for anyone to  understand the scope or nature of the problem. Existing attempts to share information  about the risks of AI systems ‚Äîsuch as the Artificial Intelligence Incident Dat abase‚Äî   Center for Security and Emerging Technology |  16 rely on public reporting and primarily focus on machine learning failures or misuse   rather than intentional manipulation.20 While these efforts are important, they are best  situated for compiling publicly known AI failures, rather than for incentiviz ing  organizations to share information about emerging security threats in a more trusted  environment. Mechanisms to encourage more open sharing of information could take a  wide range of forms, extending from informal but regular meetings of key industry  stakeholders to more formalized structures, repositories, or organizations.21  2.2. AI deployers should emphasize building a culture of security that is em bedded  in AI development at every stage of the product life  cycle.  Many machine learning  libraries provide functions that, by default, prioritize processing speed and minor  improvements in performance over security.22 Product teams who only consider  securi ty concerns after  building their  models will likely embed insecurities in the  development pipeline for their models,  which may be difficult or impossible to  remove once models are fully trained.* As  with all software, organizations should  make security a priority in every part of the  AI pipeline. This entails providing robust  support for adversarial machine learning  teams, as well as incorporating those  teams in every stage of product  development to avoid the problem of  ‚Äúoutsourcing‚Äù security concerns to a   separate team.   2.3. Developers and deployers of high -risk AI systems must prioritize transparency.  AI models should be assumed to come with inherent vulnerabilities ‚Äînot to mention  other types of failure modes inherent to all statistical models ‚Äîthat are d ifficult if not    * As one example, most machine learning libraries provide default image processing functions that are  susceptible to adversarial evasion. While alt ernative preprocessing functions can easily be used, most  libraries make use of the less secure methods by default, and models trained on images that have been  preprocessed in one way cannot easily transfer to images preprocessed in a different way without   substantial retraining. See Lohn, ‚ÄúDownscaling Attack and Defense.‚Äù Other security -relevant decisions  that are difficult to alter after model training include decisions that affect the security and integrity of  training data, the use of other types of inp ut filtering, the choice of upstream models for use in fine - tuning, and so on.  Product teams who only  consider security concerns  after  building their models  will likely embed insecurities  into the development pipeline  for their models, which may  be difficult or impossible to  remove once models are fully  trained.     Center for Security and Emerging Technology |  17 impossible to patch. The presumed existence of some of these vulnerabilities in high - risk contexts has significant implications for social well -being and privacy. Given this  fact, workshop participants felt that the security features of mac hine learning models  also carry transparency implications. A minimum standard of transparency along these  lines might hold that consumers and private citizens should generally be informed  when they are being made subject to an AI model in a high -risk conte xt. In addition,  where the designers of a model make important decisions about relevant trade -offs‚Äî such as those that may exist between security, performance, robustness, or fairness ‚Äî many participants felt that such decisions should be disclosed to protect  end-users or  private citizens affected by a model‚Äôs decisions, as well as to help enable recourse  when decisions are harmful or discriminatory.23 While participants disagreed about just  how far this principle of transparency should be taken ‚Äîwith many emph asizing that it  should not extend to simply disclosing the existence of every vulnerability to the  public‚Äîthe more minimal transparency standards discussed in this section were  widely supported.                   Center for Security and Emerging Technology |  18 3. Clarifying the Legal Status of AI Vulnerabilities   There is no comprehensive AI legislation in the United States (and not likely to be one  anytime soon).24 However, many areas of law ‚Äîincluding criminal law, consumer  protection statutes, privacy law, civil rights law, government procurement  requirements, common law rules of contract, n egligence and product liability, and even  rules of the U.S. Securities and Exchange Commission regarding the disclosure  obligations of publicly -owned companies ‚Äîare relevant to different aspects of AI. Just  as AI fits, albeit uneasily, within traditional cy bersecurity risk frameworks, so also is it  covered under existing law, but in ways  and to a degree that courts and regulators  have not yet fully clarified. Much of the  policy attention on AI to date has focused  on concerns with regard to bias and  discrimin ation. The Federal Trade  Commission (FTC), U.S. Equal Employment  Opportunity Commission, and Consumer  Financial Protection Bureau (among  others) have all issued their own guidance  regarding the use of AI models in contexts  that might violate federal civil rights  laws ,  as well as anti-discrimination and  consumer protection laws.25   At the state level, the New York State Department of Financial Services has warned  insurers that the data they use and the algorithms as well as the predictive models  they apply m ay produce forms of discrimination prohibited by state law.26 And in  California, privacy legislation requires the relatively new California Privacy Protection  Agency to adopt regulations ‚Äúgoverning access and opt -out rights with respect to  businesses‚Äô use of automated decisionmaking technology, including profiling and  requiring businesses‚Äô response to access requests to include meaningful information  about the logic involved in those decisionmaking processes.‚Äù27  In keeping with our view that AI vulnerabilit ies should be handled under existing  cybersecurity processes as far as possible, we suggest that AI vulnerabilities are likely  best handled by extending and adapting cybersecurity law, not by trying to regulate AI  security as an independent topic. Unfortun ately, cybersecurity law itself is still evolving  and many questions are unsettled or contingent. Requirements vary sector -by-sector,  with overlapping federal and state rules. Under the resulting patchwork, protected Just as AI fits, albeit uneasily,  within traditional cybersecurity  risk frameworks, so also is it  covered under existing law, but  in ways and to a degree that  courts and regulators have not  yet fully clarified.       Center for Security and Emerging Technology |  19 healthcare data, financial information,  software and information systems acquired by  the federal government, and critical infrastructure, among other categories of systems  or data, face certain cybersecurity requirements imposed by statute or executive  order.28 But there is no comprehensive cyb ersecurity law that imposes clear statutory  obligations on the vast majority of companies. While common law doctrines of  negligence, product liability, and contract do apply to AI -based products and systems,  legal principles in those fields (including ques tions about the existence of a duty of  care, the economic loss rule in negligence cases, and disclaimers of warranty) mean  that almost no cases ever yield a clear ruling on liability for security failings. In federal  courts, the standing doctrine further m akes it difficult to reach the merits of a claim.  The near total absence of cybersecurity cases decided on the merits has stunted the  development of clear standards with respect to traditional types of vulnerabilities, let  alone those associated with AI.   At the same time, the FTC has claimed that its authority to regulate unfair and  deceptive business practices extends to cover businesses that fail to secure customer  information with ‚Äúreasonable‚Äù cybersecurity measures.29 The FTC has brought  numerous cases  against companies that have failed to secure consumer data. While no  case to date directly makes this claim, it is easy to imagine that deploying vulnerable  AI systems might trigger similar forms of regulatory oversight, especially where those  vulnerabili ties stem from features common to all machine learning models that  companies can reasonably anticipate. In addition, AI companies that make claims about  the robustness and performance of their models could be charged with deceptive  practices if those model s contain foreseeable vulnerabilities that undermine the  company‚Äôs claims. Through its workshops and nonbinding statements, the FTC has  made it clear that it is concerned about the impact of AI.   Although the FTC has brought scores of enforcement actions ag ainst companies for  failure to protect consumer data, uncertainty hangs over the FTC‚Äôs authority, especially  its assertion that failure to provide reasonable security falls under the unfairness prong  of its unfair and deceptive practices jurisdiction.30 Federal regulatory oversight of AI  vulnerabilities would, barring legislative action, similarly need to begin from an  ambiguous status of authority.   When it comes to deterring attacks on AI systems, an important law is the federal  Computer Fraud and Abuse A ct.31 The CFAA makes it illegal to access information  from a computer without authorization (or beyond authorized access), as well as to  ‚Äúdamage‚Äù a computer by knowingly transmitting a ‚Äúprogram, information, code, or   command.‚Äù32 It has been controversial, especially regarding whether the law applies to  the activities of good faith cybersecurity researchers probing systems for    Center for Security and Emerging Technology |  20 vulnerabilities. Those legal risks can be, and for many entities have been, mitigated by  vulnerability disclosure programs that autho rize, or even invite, independent security  researchers to probe a system or product. In terms of the CFAA‚Äôs application to AI,  many of the its provisions turn on whether an attacker has first gained ‚Äúunauthorized  access‚Äù or exceeded authorized access to a protected computer, a step that may not be  required for many adversarial AI attacks. However, one section of the CFAA makes it  illegal to cause damage without authorization to a protected computer, where  damages is broadly defined to mean any impairment to  the integrity or availability of  data, a program, a system, or information.   Our recommendations regarding the legal status of AI vulnerabilities begin from the  position that this is a rapidly evolving topic within multiple fields of the law. Worksho p  participants did not feel that it was  appropriate at this time to call for  comprehensive legislation to  address liability for vulnerabilities  in AI systems. Our understanding  of the law is still too immature to  know whether major changes are  needed. At t he same time,  workshop participants did  generally support the following  recommendations regarding the  legal oversight of AI  vulnerabilities.   Recommendations   3.1. U.S. government agencies with authority over cybersecurity should clarify how  AI-based security concerns fit into their regulatory structure. The FTC has issued  meaningful guidance on how companies using AI can avoid violating the Fair Credit  Reporting Act and t he Equal Credit Opportunity Act.33 A wide number of federal  agencies, including the National Institute of Standards and Technology , the  Cybersecurity and Infrastructure Security Agency , and the FTC, also provide significant  cybersecurity guidance to privat e industry. While NIST‚Äôs current efforts to develop an  AI Risk Management Framework include some discussion of AI security,34 current  guidance on AI security remains vague and does not articulate concrete risks or discuss  appropriate countermeasures.35 Moreover, despite a 2019 executive order requiring  federal agencies to document any potential regulatory authority they might have over Workshop participants did not feel  that it was appropriate at this time  to call for comprehensive  legislation to address liability for  vulnerabilities in AI systems. Our  unders tanding of the law is still too  immature to know whether major  changes are needed.     Center for Security and Emerging Technology |  21 AI systems, many agencies declined to respond or have offered extremely surface - level responses.36 We encourage agencies with regulatory authority over cybersecurity  to articulate more concretely how AI vulnerability fits within that regulatory authority.  As part of that effort, agencies should formulate concrete guidance on minimum  security standards for AI.   3.2. There is no need at this time to amend anti -hacking laws to specifically address  attacking AI systems . It is unclear whether some types of attacks studied by  adversarial machine learning researchers fit within the main federal anti -hacking law ,  the CFAA, in large part because they do not require ‚Äúunauthorized access‚Äù ‚Äîa key  phrase in the CFAA ‚Äîin the way that traditional hacking does.37 However, any attempt  to criminalize ‚ÄúAI hacking‚Äù would likely raise thorny overbreadth concerns, similar to  those that have plagued the CFAA for years.38 And while many types of ‚ÄúAI hacking‚Äù  may not be covered by the CFAA, malicious attacks on AI -based systems are likely  already illegal under other laws.39 For now, the best course is to see how the issues  play out in the courts. Therefore, we advise against any attempts to adopt new laws  aimed at punishing adversarial machine learning.        Center for Security and Emerging Technology |  22 4. Supporting Effective Research to Improve AI Security   Many of the barriers to developing secure AI systems are social and cultu ral in nature,  not technical. The incentives facing academics, industry professionals, and government  researchers all encourage ‚Äîto some extent ‚Äîa fixation on marginal improvements in  summary performance metrics as the primary sign of progress. While adversa rial  machine learning is a fast -burgeoning field, by some counts it comprises less than 1   percent of all academic AI research ‚Äîand the research that does exist is heavily  focused toward a small subset of attack types, such as adversarial examples, that may  not represent plausible real -world attack scenarios .40 Security is often a secondary  consideration for organizations looking to deploy machine learning models. As long as  that remains true, technical interventions can have , at best , a limited ability to ma ke AI  systems more secure  in general .  At the same time, the research community‚Äôs level of knowledge about adversarial  machine learning remains low. While the number of successful attack strategies  explored by researchers has exploded, the feasibility of te chnically defusing these  vulnerabilities is uncertain; in particular, it remains unclear how much general -purpose  defense against multiple types of attacks is possible. In this report , we have alluded  several times to potential trade -offs between security and performance. Even though  the existence of trade -offs is clear, it is difficult to assess their extent, establish options  for response, engage all relevant stakeholders in risk management, and characterize  the extent to which different goals are being traded against one an other. We are not  aware of an es tablished process for considering these trade -offs.   While this situation calls for more investment in AI security research generally, it  represents a place for government policymakers in particular to make a sizable impact.  Security is an area where indus try may underinvest, which creates an opportunity for  publicly -funded research. Workshop participants felt that funding additional research  into AI security should be an important priority, and that policymakers can take a few  specific actions to most effe ctively push this area of research forward.   Recommendations   4.1. Adversarial machine learning researchers and cybersecurity practitioners  should seek to collaborate more closely than they have in the past. As mentioned  above, adversarial machine learning research comprises only a very small amount of AI  research generally, with the research that does exist focusing heavily on the specific  attack vector of adversarial examples.41 Much research into these topics further focuses  on threat scenarios that may b e unrealistic ‚Äîsuch as by assuming that attackers can     Center for Security and Emerging Technology |  23 manipulate individual pixels in input images ‚Äîsuch that research into more likely types  of threat models may currently be receiving insufficient attention. We suggest that  further collaboration between ad versarial machine learning researchers and  cybersecurity researchers could help more effectively identify the most realistic threat  scenarios facing AI deployers so they can adequately focus their mitigation efforts.     4.2. Public efforts to promote AI research should more heavily emphasize AI  security, including through funding open -source tooling that can promo te more  secure AI development.  In recent years, the federal government has dedicated  significant funding to AI research under the National AI Initiative Act of 2020, the  CHIPS and Science Act of 2022, and numerous agency -specific initiatives or projects.42  Many of these funds will be used for federal research into AI or disbursed as grants to  AI researchers via the National Science Foundation , NIST, the U.S. Department of  Energy , and a potential National Artificial Intelligence Research Resource . Much of th e  rhetoric around these initiatives emphasizes public funding for ‚Äúbasic‚Äù AI research, as  well as curation of government datasets for specific applications.43 We suggest that AI  security should be viewed as a necessary  component of basic AI research.  Gover nment policymakers should consider  how they can best support security - oriented research that effectively  complements the research that private   industry is already incentivized to pursue,  rather than replicating or competing with it.   In particular, supporti ng the development  of open -source tools that can better help AI  engineers incorporate security into their products may be a worthwhile goal. As one  workshop participant observed, ‚ÄúAdding a machine learning model [to a product] is  two lines of code; adding defenses can take hundreds.‚Äù Existing machine learning  libraries are extensively tooled to support the easy design of hundreds of model  architectures, but very few contain significant support for common defensive  techniques studied by adversarial machine l earning researchers. This is an area with a  clear gap in technical tooling that government support could help overcome.   4.3. Government policymakers should move beyond standards -writing toward  providing test  beds or enabling audits for assessing the secur ity of AI models. In  recent years, government agencies have begun providing high -level guidance that  encourages AI developers to carefully consider the potential security impacts of their  models. We welcome these goals and recommend further efforts in this  direction, As one workshop participant  observed, ‚ÄúAdding a machine  learning model [to a product]  is two lines of code; adding  defenses can take hundreds.‚Äù     Center for Security and Emerging Technology |  24 especially among agencies that may potentially have regulatory authority over the use  of AI systems. Yet machine learning is too broad of a field for many of these standards  to provide direct answers to questions such as: How do I verify the se curity of this  particular model? Or: What specific techniques apply to this use case to reduce the  threat of (for example) membership inference attacks?   While standards -writing is important, we suggest that government policymakers  should also engage more a ctively in providing test  beds and audits for AI models.44  One example of such a program is the Face Recognition Vendor Test, an ongoing  voluntary test which facial recognition developers can use to identify potential biases  in their models.45 Similarly, o ne way for government policymakers to promote research  in AI security would be to identify a small number of high -risk scenarios and develop  audit tools that could be used by vendors to probe their models for security -relevant  vulnerabilities. Such program s would also allow policymakers to develop a better  understanding of the degree to which existing AI products are vulnerable to known  vectors of attack, while also tracking this level of vulnerability over time.                            Center for Security and Emerging Technology |  25 Acknowledgments   Our conversations at the July 2022 workshop were deeply enriched by several other  participants who could not join in the writing process for this final report . For their  contributions to our thinking, we would like to thank Aalok Mehta, lead of U.S. public   policy at OpenAI; Cristian Canton Ferr er, engineering leader at Meta‚Äôs Responsible AI   team ; and Kendra Albert, public interest technology lawyer and clinical instructor at  the Cyberlaw Clinic at Harvard Law School . In addition, we would like to thank Dann y  Hague for his logistic support in running the July 2022 workshop, as well as Shelton  Fitch and Jason Ly for their editorial and design support.                           ¬© 202 3 by the Center for Security and Emerging Technology. This work is licensed  under a Creative Commons Attribution -Non Commercial 4.0 International License.   To view a copy of this license, visit  https://creativecommons.org/licenses/by -nc/4.0/ .   Document Identifier: doi: 10.51593/ 2022CA003        Center for Security and Emerging Technology |  26 Endnotes     1 For an overview of various types of attacks on AI systems, see Elham Tabassi, Kevin J. Burns, Michael  Hadjimichael, Andres D. Molina -Markham, and Julian Sexton, ‚ÄúDraft N ISTIR 8269: A Taxonomy and  Terminology of Adversarial Machine Learning‚Äù (National Institute of Standards and Technology, October  2019),  https://doi.o rg/10.6028/NIST.IR.8269 -draft. Section 2.1.2., ‚ÄúTechniques,‚Äù describes the broad  classes of attacks studied by adversarial machine learning researchers. For a breakdown of adversarial  machine learning that focuses more heavily on techniques at various stages of the ‚Äúk ill chain,‚Äù see  ‚ÄúATLAS,‚Äù MITRE , accessed September 27, 2022, https://atlas.mitre.org/ .   2 For a list of some of these incidents, see ‚ÄúCase Studies,‚Äù MITRE , accessed September 27,  2022,  https://atlas.mitre.org/studies/ . The AI Incident Database also lists several incidents that are tagged with  the label ‚ÄúIntent:Deliberate or expected‚Äù; see AI Incident Database , accessed January 18, 2023,  https://incidentdatabase.ai/apps/discover?classifications=CSET%3AIntent%3ADeliberate%20or%20 exp ected .   3 Hearing, ‚ÄúTo receive testimony on artificial intelligence applications to operations in cyberspace, ‚Äù  before the United States Senate Committee on Armed Services , 117th Congress (2022) (statement of  Andrew Moo re, vice president and general manager  of Cloud AI and Industry Solutions, Google Cloud ),  1:46:45,  https:/ /www.armed -services.senate.gov/hearings/to -receive -testimony -on-artificial - intelligence -applications -to-operations -in-cyberspace .   4 Allen D. Householder, ‚Äú1.2. CVD Context and Terminology Notes,‚Äù The CERT Guide to Coordi nated  Vulnerability Disclosure, accessed September 22, 2022,  https://vuls.cert.org/confluence/display/CVD/1.2.+CVD+Context+and+Terminology+Notes .   5 Ian Goodfellow, Nicolas Papernot, Sandy Huang, Rocky Duan, Pieter Abbeel, and Jack Clark, ‚ÄúAttacking  Machine Learning with Adversarial Examples,‚Äù OpenAI Blog , February 24, 2017,  https: //openai.com/blog/adversarial -example -research/ ; Ian J. Goodfellow, Jonathon Shlens, and  Christian Szegedy, ‚ÄúExplaining and Harnessing Adversarial Examples,‚Äù arXiv [stat.ML] , December 20,  2014, doi.org/10.48550/arXiv.1412.6572 ; Xinyun Chen, Chang Liu, Bo Li, Kimberly Lu, and Dawn Song,  ‚ÄúTargeted Backdoor Attacks on Deep Learning Systems Using Data Poisoning,‚Äù arXiv [cs.CR] , Decemb er  15, 2017, doi.org/10.48550/arXiv.1712.05526 ; and Reza Shokri, Marco Stronati, Congzheng Song, and  Vitaly Shmatikov, ‚ÄúMembership Inference Attacks against Mach ine Learning Models,‚Äù arXiv [cs.CR] ,  October 18, 2016, doi.org/10.48550/arXiv.1610.05820 .   6 See ‚ÄúCase Studies,‚Äù MITRE; ‚ÄúATLAS,‚Äù MITRE ; and Andrew Moore, Testimo ny on artificial intelligence.  Some of these emerging in -the-wild attacks may not resemble the sophisticated methods studied by  AML researchers. After the release of ChatGPT in November 2022, users quickly began coordinating to  develop input prompts that c ould cause the model to ignore its safety guidelines and output toxic or  politically charged content. See, for instance, Michael King, ‚ÄúMeet DAN ‚Äî The ‚ÄòJailbreak‚Äô Version of  ChatGPT and How to Use it ‚Äî AI Unchained and Unfiltered,‚Äù Medium, February 5, 2023 ,      Center for Security and Emerging Technology |  27   https://medium.com/@neonforge/meet -dan-the-jailbreak -version -of-chatgpt -and-how -to-use-it-ai- unchained -and-unfiltered -f91bfa679024 .  7 See Jonathan Spring, April Galyardt, Allen D. Householder, and Nathan VanHoudnos, ‚ÄúOn managing  vulnerabilities in AI/ML systems,‚Äù New Security Paradigms Workshop 2020 (October 2020),  https://doi.org /10.1145/3442167.3442177 ; and Andrew Grotto and James X. Dempsey, ‚ÄúVulnerability  Disclosure and Management for AI/ML Systems: A Working Paper with Policy Recommendations,‚Äù  available at SSRN , November 15, 2021, https://ssrn.com/abstract=3964084 .   8 There is a whole class of product vulnerabilities defined around separating input data from code; see,  for example, ‚ÄúCWE -707: Improper Neutral ization,‚Äù MITRE , accessed January 18, 2023,  https://cwe.mitre.org/data/definitions/707.html . However, the tactics for addressing these product  vulnerabiliti es do not generally seem to apply to AI vulnerabilities, even if ‚Äúinput sanitization‚Äù as a broad  idea may be relevant.   9 ‚ÄúPatching‚Äù an AI vulnerability is difficult to define precisely, but for many types of AI vulnerabilities it is  often thought of as ent ailing some form of model retraining which results in an AI system no longer  containing the original vulnerability. However, attempts to formalize this idea are difficult, and in some  cases formal definitions of an AI ‚Äúpatch‚Äù for a specific type of vulnera bility have been shown to fail to  guarantee the removal of the vulnerability. See Anvith Thudi, Hengrui Jia , Ilia Shumailov, and Nicolas  Papernot, ‚ÄúOn the Necessity of Auditable Algorithmic Definitions for Machine Unlearning,‚Äù arXiv [cs.LG] ,  October 22, 20 21, arXiv:2110.11891 . Even where model retraining would  eliminate a vulnerability, it  may be financially or computationally prohibitive to do so, and there is rarely any guarantee that model  retraining will not introduce further vulnerabilities. For many types of vulnerabilities in composed AI  systems, ‚Äúpatchi ng‚Äù may be more straightforward and may involve more familiar practices, such as  certain types of input filtering.   10 Existing cybersecurity processes may be flexible enough to account for some ambiguity; for instance,  the CVE process generally defers to p roduct owners to define vulnerabilities in their own systems. See  ‚ÄúSection 7.1: What Is a Vulnerability,‚Äù in CVE Numbering Authority (CNA) Rules  (CVE Board, March 5,  2020), https://cve.mitre .org/cve/cna/CNA_Rules_v3.0.pdf . But in some cases, identifying the ‚Äúproduct  owner‚Äù of an AI system may be difficult, especially if the training model, ‚Äúfoundation model,‚Äù or fine - tuned instance of a model are all owned by different organizations and the training algorithm is  patented by yet another organization. This concern is analogous to issues in cybersecurity that surround  supply chain management. See, for example, ‚ÄúSoftware Bill of Materials,‚Äù Cybersecurity and  Infrastructure Security Agency , accessed January 18, 2023, https://www.cisa.gov/sb om.  11 It is worth acknowledging that system administrators already often make similar risk calculations in  choosing to leave vulnerable systems online because patching will be difficult or time -consuming. See  Frank Li, Lisa Rogers, Arunesh Mathur, Nathan Malkin , and Marshini Chetty, ‚ÄúKeepers of the Machines:  Examining How System Administrators Manage Software Updates,‚Äù in SOUPS19: Proceedings of the      Center for Security and Emerging Technology |  28   Fifteenth USENIX Conference on Usable Privacy and Security  (August 12, 2019):  https://dl.acm.org/doi/10.5555/3361476.3361496 .   12 Notable or relevant examples of risk management frameworks include Joint Task Force  Transformation Initiative, ‚ÄúSP 800 -39: Managing Informat ion Security Risk: Organization, Mission, and  Information System View‚Äù (National Institute of Standards and Technology: March 2011),  https://csrc.nist.gov/publications/detail/sp/800 -39/final; Brett Tucker, ‚ÄúAdvancing Risk Management  Capability Using the OCTAVE FORTE Process‚Äù (Software Engineering Institute, Carnegie Mellon  University: November 2020), http://resources.sei.cmu.edu/library/asset -view.cfm?AssetID=644636 ; ISO  Technical Committee 262 on Risk Management, ‚ÄúISO 31000:2018 Risk management ‚Äî Guidelines‚Äù  (International Organization for Standardization: February 2018),  https://www.iso.org/standard/65694.htm l; Board of Governors of the Federal Reserve System and Office  of the Comptroller of the Currency, ‚ÄúSR Letter 11 -7: Supervisory Guidance on Model Risk Management,‚Äù  April 4, 2011, https://www.federalreserve.gov/supervisionreg/srletters/sr1107.htm ; Ross Anderson,  Security Engineering: A Guide to Building Dependable Distributed Systems, 3rd. Edition  (Wiley,  2020);  and Patrick Hall, James Curtis, and Parul Pandey, Machine Learning for High -Risk Applications:  Techniques for Responsible AI  (Sebastopol, CA: O‚ÄôReilly, 2022).   13 CVE , https://www.cve.org/ , accessed January 29, 2023; FIRST, ‚ÄúCommon Vulnerability Scoring  System SIG,‚Äù accessed January 30, 2023, https://www.first.org/cvss/ ; Allen D. Householder, Garre t  Wassermann, Art Manion, and Christopher King, ‚ÄúThe CERT Guide to Coordinated Vulnerability  Disclosure ,‚Äù (Software Engineering Institute, Carnegie Mellon University: August 2017),  https://resources.sei.cmu.edu/library/asset -view.cfm?assetid=503330 . An example of a relevant guiding  document for incident response processes is Paul Cichonski, Thomas Millar, Tim Grance, and Karen  Scarfone, ‚Äú SP 800 -61 Rev. 2: Computer Security Incident Handling Guide‚Äù (National Institute of  Standards and Technology, August 2012), https://csrc.nist.gov/publications/detail/sp/800 -61/rev -2/final .   14 As one example of cross -disciplinary inspiration, note that some organizations have experimented  with ‚Äúbug bounty‚Äù programs to highlight flaws in machin e learning models. Although modeled off of  ‚Äúbug bounties‚Äù that have traditionally been used to identify security vulnerabilities, these AI bug  bounties to date have largely focused on issues like fairness and algorithmic bias. See Kyra Yee and  Irene Font P eradejordi, ‚ÄúSharing learnings from the first algorithmic bias bounty challenge,‚Äù Twitter  Engineering , September 7, 2021,  https://blog.twitter.com/engineering/en_us/topics/insights/2021/learnings -from -the-first-algorithmic - bias-bounty -challenge ; and ‚ÄúAI Audit Challenge,‚Äù Stanford Institute for Human -Centered Artificial  Intelligence , accessed September 27, 2022, https://hai.stanford.edu/policy/ai -audit -challenge .   15 One significant topic of conversation focused on how the ‚Äúunpatchabili ty‚Äù of AI vulnerabilities affects  the feasibility of CVD processes, which typically operate with the goal of keeping discovered  vulnerabilities secret until a patch can be developed and deployed. One participant suggested that  unpatchability might make mor e secrecy societally desirable, as disclosing vulnerabilities without  available patches increases their risk of exploitation. However, another participant suggested that end - users should be informed about inherent vulnerabilities in systems  they use so tha t they can apply      Center for Security and Emerging Technology |  29   mitigations in a timely manner. The unpatchability of AI vulnerabilities therefore instead undermines the  case for providing the limited period of secrecy that CVD processes generally include, which are  primarily societally beneficial inso far as they incentivize the creation of effective patches. Ultimately,  while there was general agreement that some aspects of CVD processes may be challenged by the  nature of AI vulnerabilities, there was no consensus on whether or how the basic CVD framew ork  should be changed to accommodate those challenges. It is worth emphasizing that this conversation  requires careful nuance in distinguishing between patching a vulnerability, remediating it, and mitigating  it: remediation can include decommissioning a s ystem as well as patching it, while mitigating involves  reducing the impact or incidence of exploitation rather than removing the underlying vulnerability. See  for example DoDI 8531.01, ‚ÄúDoD Vulnerability Management, ‚Äù September 15, 2020,  https://www.esd.whs.mil/Portals/54/Documents/DD/issuances/dodi/853101p.pdf , section 3.5. The  machine learning engineering community, however, does not generally make these distinctions in  discussing vulnerability management. Lack of shared vocabulary may drive misunderstandings and in  general will slow down deliberation about the best policy options.   16 The ‚ÄúCase Studies‚Äù compiled by MITRE include a variety of attacks on AI systems. As of September  2022, only one of these cases ‚Äîthat of the Tay chatbot ‚Äîresembles an in -the-wild attack that matches a  standard attack type as studied by adversarial machine learning researchers (in this case, a data  poisoning attack). See ‚ÄúTay Poisoning,‚Äù MITRE , accessed September 29, 2022,  https://atlas.mitre.org/studies/AML.CS0009 . Similarly, only one deliberate or malicious incident tracked  by the AI Incident Database appears to clearly map onto an in -the-wild attack as studied by the field of  adversarial machine learning, again as an example of data poisoning. See Patrick Hall, ‚Äú Incident 88:  Jewish Baby Stroller Image Algorithm,‚Äù Artificial Intelligence Incident Database , accessed September  27, 2022, https://incidentdatabase.ai/cite/88 .   17 To our knowledge, as of September 2022, only one CVE entry  in the National Vulnerability Database  discusse d a vulnerability in a machine learning model ‚Äîin this case, a vulnerability arising from the  possibility of using a model extraction attack to  bypass the spam filtering model used by Proofpoint  Email Protection. See ‚ÄúCVE -2019 -20634 Detail,‚Äù National Vulnerability Database , accessed September  27, 2022, https://nvd.nist.gov/vuln/deta il/CVE -2019 -20634 .   18 Several workshop participants noted that they felt that ‚ÄúAI vulnerabilities‚Äù are often treated as  particularly attention -grabbing ‚Äîpotentially more so than many types of traditional software  vulnerab ilities‚Äîin ways that create strong incentives against disclosure. Especially in absence of  established norms about vulnerability disclosure and management, organizations may actively prefer to  avoid learning about vulnerabilities in their AI systems and ma y underinvest in attempts to find such  vulnerabilities. This issue is not unique to AI, and although norms around other types of vulnerabilities  have gradually emerged, bad policies can sometimes create similar perverse incentives for vulnerability  managem ent more generally. For some recent commentary on how certain requirements for software  security can generate perverse incentives, see Curtis Kang, ‚ÄúHow to Comply With the DoD‚Äôs Newer and  Stricter Software Requirements,‚Äù Flashpoint , August 24, 2022, https://flashpoint.io/blog/department -of-     Center for Security and Emerging Technology |  30   defense -software -requirements/  and Walter Haydock, ‚ÄúSecurity Release Criteria,‚Äù Deploying Securel y,  July 22, 2022, https://haydock.substack.com/p/se curity -release -criteria .  19 Currently existing mechanisms include national government CSIRT advisories (such as from CISA,  NCSC -NL, or JPCERT/CC), trusted community advisories (such as CERT/CC vulnerability notes), and  industry PSIRT bulletins ( many companies have well -developed pro duct security teams that regularly  issue advisories to their constituents; see ‚ÄúFIRST Teams, ‚Äù FIRST, accessed March 16, 2023,  https://www.first.org/members/teams/ ), as w ell as the option to simply publish information about  identified vulnerabilities in scholarly, personal, or organizational venues. For a high -level overview of  various types of information -sharing structures, see The MITRE Corporation , ‚ÄúCyber Information -Sharing  Models: An Overview,‚Äù October 2012, https://www.mitre.org/sites/default/files/pdf/cyber_info   _sharing.pdf .   20 As of September 27, 2022, the AI Incident Database tags only four incidents with the label  ‚ÄúIntent:Deliberate or expected.‚Äù See AI Incident Database , accessed September 27, 2022,  https://incidentdatabase.ai/apps/discover?classifications=CSET%3AIntent%3ADeliberate%20or%20exp ected&display=details&incident_id=88&page=1 . Of these four incidents, one is clearly a case of  malicious data poisoning; one refers to manipulation of trading algorithms resulting in a ‚Äúflash crash‚Äù in  2010 which may or may not have been intended by the ‚Äúattacker‚Äù; one relates to blockchain security a nd  not AI; and one refers to a public deepfake intended to warn the public about the dangers of deepfakes,  which was not used to manipulate an AI system. The MITRE list of ‚ÄúCase Studies ‚Äù for AI attacks is  slightly more extensive and includes 15 examples of  AI attacks. Although ATLAS continues to accept  public contributions of case studies, it is likely to represent a severe undercount of exploits actually  being deployed against deep learning systems due to concerns around shining a public spotlight on  these  exploits.   21 On the variety of information sharing governance structures and their advantages, see Elaine M.  Sedenberg and James X. Dempsey, ‚ÄúCybersecurity Information Sharing Governance Structures: An  Ecosystem of Diversity, Trust, and Tradeoffs,‚Äù arXiv [cs.CY] , May 31, 2018,   https://doi.org/10.48550/arXiv.1805.12266 . Some workshop participants noted that the features of AI  vulnerabilities ‚Äîsuch as the ‚Äúunpatcheabili ty‚Äù concerns discussed earlier ‚Äîcould disincentive  organizations from publicly discussing discovered vulnerabilities. Other participants noted that this same  ‚Äúunpatcheability‚Äù may increase the value of public disclosure, as this feature makes it more import ant for  users to understand the risks they may be accepting in absence of a patch for the vulnerability. We  emphasize that there are both technical and cultural barriers posed by AI vulnerabilities that have so far  hindered extensive information sharing, b ut also that many workshop participants did not view these  barriers as insurmountable and expressed substantial desire for more openness.   22 See Andrew Lohn, ‚ÄúDownscaling Attack and Defense: Turning What You See Back Into What You  Get,‚Äù arXiv [cs.CR] , https://doi.org/10.48550/arXiv.2010.02456  and Andrew Lohn, ‚ÄúPoison in the Well:  Securing the Shared Resources of Machine Learning ‚Äù (Center for Security and Emerging T echnology,  June 2021), https://doi.org/10.51593/2020CA013 .       Center for Security and Emerging Technology |  31   23 Many approaches for increasing transparency around AI product development already exist. See  Timnit Gebru,  Jamie Morgenstern, Briana Vecchione, Jennifer Wortman Vaughan, Hanna Wallach, Hal  Daum√© III, and Kate Crawford, ‚ÄúDatasheets for Datasets,‚Äù Communications of the ACM  64, no. 12  (December 2021): 86 ‚Äì92, https://doi.org/10.1145/3458723  and Margaret Mitchell, Simone Wu, Andrew  Zaldivar, Parker Barnes, Lucy Vasserman, Ben Hutchinson, Elena Spitzer, Inioluwa Deborah Raji, and  Timnit Gebru, ‚ÄúModel Cards for Model Reporting,‚Äù in FAT 19: Proceedings of the Conference on  Fairness, Accountability, and Transparency  (January 2019): 220 ‚Äì229,  https://doi.org/10.1145/3287560.3287596 . For our purposes, we emphasize that sometimes security - relevant decisions involve balancing multiple competing goals; for instance, adversarial retraining to  defend against adversarial attacks may degrade model performa nce on non -adversarial inputs. We  suggest that ‚Äîin addition to the forms of transparency advocated for by these frameworks ‚Äî organizations should also consider incorporating information about defensive measures used in training  a model, their potential impact  on other aspects of the model, and ideally the reasoning behind such  decisions. However, deciding what exact information to disclose is a difficult process, as some types of  disclosure may enable better -targeted attacks of an AI system; in addition, metho ds that attempt to  increase the auditability of an AI model may themselves be susceptible to adversarial attacks. Dylan  Slack, Sophie Hilgard, Emily Jia, Sameer Singh, and Himabindu Lakkaraju, ‚ÄúFooling LIME and SHAP:  Adversarial Attacks on Post hoc Explana tion Methods,‚Äù arXiv [cs.LG] , November 6, 2019,  https://arxiv.org/abs/1911.02508 .   24 In October 2022, the White House released a Blueprint for an AI Bill of Rights, self -described as ‚Äúan  exercise in envisioning a future where the American public is protected from the potential harms, and  can fully enjoy the benefits, of automated systems. It goes on to say that  some of the protections it  describes ‚Äúare already required by  the U.S. Constitution or implemented under existing U.S. laws, ‚Äù but it  is not specific in describing those existing laws and it stops short of proposing new legislation.   ‚ÄúBlueprint for an AI Bill of Rights: Making Automated Systems Work for the American People,‚Äù (The  White House Office of Science and Technology Policy, October 22), https://www.whitehouse.gov/wp - content/uploads/2022/10/Blueprint -for-an-AI-Bill-of-Rights.pdf , 8. To date, the most comprehensive  proposed leg islation on AI in the world is the draft AI Act in the EU, which contains several requirements  regarding security, but at a high level of generality. For example, Chapter 2 of the current draft includes  the following requirement: ‚ÄúHigh -risk AI systems shal l be resilient as regards attempts by unauthorized  third parties to alter their use or performance by exploiting the system vulnerabilities. The technical  solutions aimed at ensuring the cybersecurity of high -risk AI systems shall be appropriate to the  relevant circumstances and the risks. The technical solutions to address AI specific vulnerabilities shall  include, where appropriate, measures to prevent and control for attacks trying to manipulate the training  dataset (‚Äòdata poisoning‚Äô), inputs designed to  cause the model to make a mistake (‚Äòadversarial  examples‚Äô), or model flaws.‚Äù Draft Regulation (EU) 2021/0106(COD)  of the European Commission of 21  April 2021 on a proposal for a regulation of the European Parliament  and of the Council laying down  harmonis ed rules on artificial intelligence (Artificial Intelligence Act) and  amending certain Union  legislative acts, art. 15(4).   25 See Andrew Smith, ‚ÄúUsing Artificial Intelligence and Algorithm s,‚Äù FTC: BUSINESS BLOG       Center for Security and Emerging Technology |  32   (April 8, 2020), https://www.ftc.gov/news -events/blogs/business -blog/2020/04/using -artificial - intelligence -algorithms ; U.S . Consumer Financial Protection Bureau, Circular 2022 -03, Adverse action  notification requirements in connection with credit decisions based on complex algorithms (2022)   https://www.consumerfinance.gov/compliance/circulars/circular -2022 -03-adverse -action -notification - requirements -in-connection -with -credit -decisions -based -on-complex -algorith ms/; U.S. Department of  Justice, Algorithms, Artificial Intelligence, and Disability Discrimination in Hiring (2022)  https://beta.ada.gov/ai -guidance /; EEOC, The Americans with Disabilities Act and the Use of Software,  Algorithms, and Artificial Intelligence to Assess Job Applicants and Employees (2022)  https://www.eeoc.gov/laws/guidance/americans -disabilities -act-and-use-software -algorithms -and- artificial -intelligence ; and Elisa Jillson, ‚ÄúAiming for truth, fairness, and equity in your company‚Äôs use  of  AI,‚Äù FTC: BUSINESS BLOG (April 19, 2021), https://www.ftc.gov/news -events/blogs/business - blog/2021/04/aiming -truth -fairness -equity -your -companys -use-ai.   26 Insurance Circular Letter No. 1 (2019), N. Y. State Dep‚Äôt Fin. Serv., RE: Use of External Consumer Data  and Information Sources in Underwriting for Life Insurance (January 18, 2019),  https://dfs.ny.gov/industry_guidance/circular_letters/cl2019_01 .   27 CAL. CIV. CODE, ¬ß 1798.185(a)(16).   28 See, for instance, Exec. Order No. 14028, 3 C.F.R. 556 (2022) and Cyber Incident Reporting for Critical  Infrastructure Act of 2022, Pub. L. No. 117 -103, ¬ß¬ß 101 ‚Äì107, 136 Stat. 1038 ‚Äì1059 (2022).   29 See Federal Trade  Commission, ‚ÄúFTC Report to Congress on Privacy and Security,‚Äù September 13,  2021, https://www .ftc.gov/system/files/documents/reports/ftc -report -congress -privacy - security/report_to_congress_o n_privacy_and_data_security_2021.pdf . The FTC has even found in the  concepts of unfair or deceptive a ‚Äúde facto‚Äù breach dis closure requirement. See Federal Trade  Commission, ‚ÄúSecurity Beyond Prevention: The Importance of Effective Breach Disclosures, ‚Äù May 20,  2022, https://www.ftc.gov/policy/advocacy -research/tech -at-ftc/2022/05/security -beyond -prevention - importance -effective -breach -disclosures .   30 In FTC v. Wyndham Worldwide Corp., 799 F. 3d 236 , 257 (3d Cir. 2015), the Third Circuit held in  essence that the FTC‚Äôs authority did extend to cybersecurity practices, and in LabMD, Inc. v. FTC, 894  F.3d 1221 (11th Cir. 2018) the Eleventh Circuit assumed, but did not expressly hold, that unfairness  enco mpassed negligent cybersecurity practices. However, t he Supreme Court‚Äôs June 30, 2022 ruling i n  ‚ÄúWest Virginia v. Environmental Protection Agency, 597 U.S. ___ (2022) ‚Äù cast doubt on the authority of  the FTC to address data security. In this case, the Court indicated that, ‚Äúin certain extraordinary cases,‚Äù  regulatory agencies could not issue rules on ‚Äúmajor questions‚Äù affecting ‚Äúa significant portion of the  American econ omy‚Äù without ‚Äúclear congressional authorization.‚Äù While the court was focused on the  issuance of rules, its logic may also apply to enforcement actions taken in the absence of rules.   31 The Computer Fraud and Abuse Act of 1986, 18 U.S.C. ¬ß 1030.       Center for Security and Emerging Technology |  33   32 For an ov erview of the CFAA‚Äôs relevance for adversarial machine learning research, see Ram Shankar  Siva Kumar and Kendra Albert, ‚ÄúSmashing the ML Stack for Fun and Lawsuits,‚Äù talk, Black Hat, filmed  August 4, 2021, video of talk, 31:53, https://www.youtube.com/watch?v=e3_4ViYRi20 .  In Van Buren v.  United States,  593 U. S. ___ (2021), the Supreme Court clarified that ‚Äúunauthorized access‚Äù does not  include circumstances whe re a company‚Äôs terms of service merely forbid certain uses of information on a  computer system that the individual is otherwise allowed to access. In May 2022, the U.S. Department  of Justice issued a policy on the CFAA stating that attorneys for the govern ment ‚Äúshould decline  prosecution if available evidence shows the defendant‚Äôs conduct consisted of, and the defendant  intended, good -faith security research.‚Äù Press Release, Department of Justice, 9 -48.000 - Computer  Fraud and Abuse Act (May 19, 2022), https://www.justice.gov/opa/press -release/file/1507   126/download .   33 See Smith, ‚ÄúUsing Artificial Intelligence, ‚Äù and Jillson, ‚ÄúAiming for Truth .‚Äù   34 NIST, ‚ÄúAI Risk Management Framework,‚Äù 14 ‚Äì15.   35 An exception may be National Highway Traffic Safety Administration, ‚ÄúCybersecurity Best Practices  for the Safety of Modern Vehicles ‚Äù (U.S. Department of Transportation, September 2022),  https://www.nhtsa.gov/sites/nhtsa.gov/files/2022 -09/cybersecurity -best-practices -safety -modern - vehicles -2022 -tag.pdf . The non -binding document describes NHTSA‚Äôs guidance to the automotive  industry for improving vehicle cybersecurity for safety. It mentions machine learning only once, and uses  the phrase ‚Äúartificial intelligence‚Äù not at all, but much of what it recommends is applicable to AI -based  systems.   36 Alex Engler, ‚ÄúThe AI Bill of Rights Makes Uneven Progress on Algorithmic Protections,‚Äù Lawfare ,  October 7, 2022, https://www.lawfareblog.com/ai -bill-rights -makes -uneven -progress -algorithmic - protections .   37 Kumar and Albert, ‚ÄúSmashing the ML Stack.   38 See, for instance, Andrew Crocker and Kurt Opsahl, ‚ÄúSup reme Court Overturns Overbroad  Interpretation of CFAA, Protecting Security Researchers and Everyday Users,‚Äù Electronic Frontier  Foundation , June 3, 2021, https://www.eff.org/deeplinks/2021/06/supreme -court -overturns -overbroad - interpretation -cfaa-protecting -security .   39 For example, much attention around malicious adversarial attacks has focused around a 2018 result  finding that, with a few pieces of tape ‚Äîand without requiring ‚Äúunauthorized access‚Äù to a self -driving  car‚Äôs vision recognition system ‚Äîan autonomous vehicle c ould be tricked into recognizing a stop sign as  a ‚Äúspeed limit 45‚Äù sign. Kevin Eykholt, Ivan Evtimov, Earlence Fernandes, Bo Li, Amir Rahmati, Chaowei  Xiao, Atul Prakash, Tadayoshi Kohno, and Dawn Song, ‚ÄúRobust Physical -World Attacks on Deep  Learning Model s,‚Äù in 2018 IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR)   (June 2018), https://doi.org/10.1109/CVPR.2018.00175 . If such an attack occurred in the real world and  caused physical harm to innocent bystanders, it might be difficult to prosecute it under the CFAA ‚Äîbut      Center for Security and Emerging Technology |  34   likely not very difficult to prosecute as, say, a form of endangerment. Other AI attacks resulting in  financial losses instead of ph ysical harm are similarly likely to be criminalized by other laws than the  CFAA. For instance, wire fraud charges have a broader jurisdictional sweep than the CFAA, and could  likely apply in many cases where AI attacks result in financial losses, even if t he CFAA does not. See  Computer Crime and Intellectual Property Section, Prosecuting Computer Crimes  (Department of Justice  Office of Legal Education, 2010), https://www.justice.gov/crim inal/file/442156/download , p. 26.    40 Helen Toner and Ashwin Acharya, Exploring Clusters of Research in Three Areas of AI Safety  (Center for Security and Emerging Technology, February 2022), https://doi.org/10.51593/20210026 .  Note that AI safety is broader than AI security alone, although some AI security topics relating to  confidentiality issues may not have been captured by this ana lysis.   41 Toner and Acharya, ‚ÄúExploring Clusters of Research.‚Äù   42 See National Artificial Intelligence Initiative Act of 2020, 15 U.S.C. ¬ß¬ß 9401 ‚Äì9462 and Research and  Development, Competition, and Innovation Act of 2022, Pub. L. 117 -167, ‚Äî‚Äî‚Äî .   43 For instanc e, see Daniel E. Ho, Jennifer King, Russell C. Wald, and Christopher Wan, ‚ÄúBuilding a  National AI Research Resource: A Blueprint for the National Research Cloud,‚Äù (Stanford Institute for  Human -Centered Artificial Intelligence: October 2021): https://hai.stanford.edu/sites/default/files/2022 - 01/HAI_NRCR_v17.pdf .   44 One initiative in this direction is Guaranteeing AI Robustness Against Dec eption (GARD), sponsored  by DARPA, which resulted in a virtual testbed, toolbox, and benchmarking dataset for use in identifying  weaknesses to and defenses against adversarial machine learning methods. GARD Project , ‚ÄúHolistic  Evaluation of Adversarial Defe nses,‚Äù accessed January 30, 2023, https://www.gardproject.org/ .   45 See National Institute of Standards and Technology, ‚ÄúFace Recognition Vendor Test (FRVT) Ongoing,‚Äù  accessed October 7, 2022, https://w ww.nist.gov/programs -projects/face -recognition -vendor -test-frvt- ongoing . For the importance of evaluating bias in facial recognition systems, see Joy Buolamwini and  Timnit Gebru, ‚ÄúGender Shades: Intersectional Accuracy Disparities in Commercial Gender Classification,‚Äù  Proceedings of Machine Learning Research 81 (2018 ): https://proceedings.mlr.press/v81/buolamwini18a  /buolamwini18a.pdf","cs.CR, cs.AI, cs.CY",Arxiv
21,Smoothed particle hydrodynamics study of friction of the coarse-grained $Œ±$-Al2O3/$Œ±$-Al2O3 and $Œ±$-Fe2O3/$Œ±$-Fe2O3 contacts in behavior of the spring interfacial potential,"Le Van Sang, Akihiko Yano, Ai Isohashi, Natsuko Sugimura, Hitoshi Washizu",2018-12-25 06:37:56+00:00,http://arxiv.org/pdf/1812.10051v2,"The paper uses the spring potential to present interaction between the coarse-grained interfacial particles of the $\alpha$-Al2O3/$\alpha$-Al2O3 and $\alpha$-Fe2O3/$\alpha$-Fe2O3 contacts in the sliding friction study of these micron-scale oxides by smoothed particle hydrodynamics simulations. The spring constants of the potential for the particle systems are converted from those of the atomic oxide systems that are yielded by the second order polynomial fits of the probed surface potentials in molecular dynamics simulations, and are dependent on the particle coarse-graining. It is founded that at micron-scale the friction properties of the oxides are almost independent of the coarse-graining and are the same in the different sliding directions. Even the hardness contacts friction coefficient shows a decrease with increasing intensity of normal component of the interfacial interaction, originating from stability of friction force and growth of normal force. This result is as an implementation for the previous observations of sliding friction of various materials that showed that a drop of friction coefficient with increasing externally applied normal load has originated from deformation of interfaces or occurrence of debris at contact, indicating an unsteady contact.","1     Smoothed particle hydrodynamics study of f riction of   the   coarse - grained   Œ± - Al 2 O 3 / Œ± - Al 2 O 3   and  Œ± - Fe 2 O 3 / Œ± - Fe 2 O 3   contacts in behavior of the spring interfacial potential     Le Van Sang a,* ,  Akihiko Yano b ,   Ai   Isoha shi b ,   Natsuko Sugimura a,d ,   Hitoshi Washizu a,c,* *     a Graduate School of Simulation Studies, University of Hyogo  -   Kobe, Hyogo 650 - 0047,  Japan   b Mitsubishi Heavy Industries, Ltd.  -   2 - 1 - 1 Arai - cho Shinhama, Takasago, Hyogo 676 - 8686, Japan   c Elements Strategy Initiative for Catalysts and Batteries (ESICB), Kyoto   University  -   1 - 30 Goryo - Ohara, Nishikyo - ku, Kyoto 615 - 8245, Japan   d Faculty of Engineering, Tokyo City University  -   1 - 28 - 1 Tamazutsumi, Setagaya, Tokyo  158 - 8557, Japan     * Email:   levansang82@gmail.com   ** Email: h@washizu.org             The paper uses  the  spring potential to  present   interact ion   between the coarse - grained  interfacial  particles of the Œ± - Al 2 O 3 /Œ± - Al 2 O 3   and Œ± - Fe 2 O 3 /Œ± - Fe 2 O 3   contacts in the sliding  friction  stud y   of these  micronscale  oxides by smoothed particle hydrodynamics  simulations.   The spring constants  of   the potential for  the particle systems  are   converted   from  those of  the atomic oxide systems  that are  yielded by  the   second order polynomial   fits  2     of  the  surface  potential   energy   probed by   molecular dynamics simulations ,   and  are  dependent on  the particle coarse - graining .   It is found   that   at micronscale   the  friction  properties of the  oxides   are almost independent of  the  coarse - graining   and are the same   in   the  different   sliding   directions .  Even the hardness contacts friction coefficient shows a  decrease with increasing intensity of  the  normal component of   the   interfacial interaction,  originating from stability of  the  friction force and  growth   of  the  normal force.  This result  is as an impleme ntation for the previous observations of sliding friction of various materials  that showed that  a  drop of friction coefficient with increasing externally applied normal  load has originated from  deformation of interfaces or occurrence of debris at contact ,   indicating  an  un steady   contact.      Keywords:  S liding friction ;   Metallic oxide ;   SPH simulation ;   Coarse grained particle       1 .   Introduction          Nature   or   kind   of  interfacial  interaction potential ha s   been  well - known   strongly resulting  in   tribological   properties   of materials .  There  is   the   r elationship between friction coefficients  and ionic potentials of  various  oxides   reported by Erdemir   [1].   The   oxides with very small  differences in ionic potential may lead to high friction and  the  oxides with high ionic  potentials or highly screened cations  show   low shear strength and hence high lubricity [1].   Mechanical interaction s between t he  relative   sliding contact surfaces are known as the  primary features causing friction between the surfaces .   F riction force remarkably reduc ing   with  a  decreas e of   the mechanical interactions   was verified in  the  experimental results of  3     Sugihara et al.   [2].  Molecular dynamics simulations of  Mann et al. also  stated   that friction  coefficient  of   the Œ± - Al 2 O 3 /Œ± - Al 2 O 3   contact  bec o me s   lower when the interfacial interaction   potential   is   chosen to be weaker   [ 3 ].   Therefore, understandings  or modellings  of interfacial  interaction play a  dominant   role in  sliding  friction studies.   Probing  this interaction  kind  has  been   extensively   performed for relative sliding of various contact   surfaces .   Zhu et al. found  the same the anisotropic scenario of the graphene - gold interaction potential energy and  friction   force   i n sliding of the graphene flake on the gold substrate [ 4 ].   Interaction potential  form   between   the contact oxide surface s   (SiO 2   or Al 2 O 3 )  has been   known inextricably  linking to the surface roughness and relating   to   the stochastic nature of stick - slip events [5].   For coarse - grained  (CG)  model,  t he  interfacial  potential  of the graphene sheets reduce s   with  increasing the distance between them and start s   reaching a stable one at  a   0.335 mm  distance [ 6 ].  The  interfacial  potential show s   a  periodic form along the sliding direction [ 6 ].         A   few studies have used  spring potential to present interaction  between   interfacial  particles   in   smoothed particle hydrodynamics simulations of sliding friction of   the CG  centimeter - scale  solid rocks   [ 7 ] and   the CG micronscale iron  [ 8 ] .   In our view s ,  spring force   has not ever been  carried out for   the similar work  of   CG metallic oxides .   Therefore,  th is   work  considers   spring force for this  aim   for   the CG   Œ± - Al 2 O 3   and Œ± - Fe 2 O 3   oxides,  which  have the corundum lattice structure .   Effects of the particle coarse - graining and the modeled  interfacial potential  on friction of the systems  are discussed   in detail .  The   c oarse - graining  in this work   (discussed below)   is based upon the coarse - graining of CuO 2   oxide mentioned  in  the work of   Iwamoto   [ 9 ].   Spring constants of CG particles are converted from spring  constants of atomic oxide systems  that are  probed by molecular dynamics simulations and  4     are dependent on size of CG particles.   All the simulations in this work are employed in  smoothed particle hydrodynamics   (SPH)   approach.     2 .  Method and calculation     2.1.   Coarse - grained model           O xide  particle coarse - graining   in this study   is based upon  the work of  Iwamoto that  lumped each   unit cell of Cu 2 O   oxide   into one particle [ 9 ]. However,  in order  to   i nvestigate  a system of micronsize we slightly modify  the  coarse - graining   of Iwamoto   by lumping an  atomic region of  x y z n n n ÔÇ¥ ÔÇ¥   (number of the unit cells in  the  x - , y -   and z - directions)  oxide  unit cells into one particle.  Ea ch CG particle is located at the center of mass of the  corresponding   C G   atomic   region and has mass of  ÔÄ® ÔÄ© 12 18 CG x y z Al or Fe O M n n n m m ÔÄΩ ÔÄ´   for Al 2 O 3   or Fe 2 O 3 .   This CG method  converts   an atomic oxide system to a regularly particle lattice  system   whose unit cell is presented by three vectors  a l ÔÅ≤ ,  b l ÔÅ≤   and  c l ÔÅ≤   with   a x l n ai ÔÄΩ ÔÅ≤ ÔÅ≤ ,   1 2 b x y l n b i n b j ÔÄΩ ÔÄ´ ÔÅ≤ ÔÅ≤ ÔÅ≤ ,  c z l n ck ÔÄΩ ÔÅ≤ ÔÅ≤ ,  ÔÄ® ÔÄ© 0 , 120 a b l l ÔÄΩ ÔÅ≤ ÔÅ≤ ,  ÔÄ® ÔÄ© 0 , 90 a c l l ÔÄΩ ÔÅ≤ ÔÅ≤   and  ÔÄ® ÔÄ© 0 , 90 b c l l ÔÄΩ ÔÅ≤ ÔÅ≤ ,   where   i ÔÅ≤ ,  j ÔÅ≤   and  k ÔÅ≤   are the unit vectors  of   the three  dimensional  Cartesian - coordinate system   in the x - , y -   and  z - directions, respect i vely ;   4.7589 a ÔÄΩ   √Ö,  1 2.37945 b ÔÄΩÔÄ≠   √Ö,  2 4.121328 b ÔÄΩ   √Ö and  12.991 c ÔÄΩ   √Ö  for Œ± - Al 2 O 3   [ 1 0 ] ;   and  5.038 a ÔÄΩ   √Ö,  1 2.519 b ÔÄΩÔÄ≠   √Ö,  2 4.363036 b ÔÄΩ   √Ö and  13.772 c ÔÄΩ   √Ö for  Œ± - Fe 2 O 3   [ 1 1 ] .   A  particle  system of micronsize   can be   obtained  from   expan sion of  the particle  unit cell   along the three dir e c t ions .      2.2.  SPH   approach   5             In  this approach ,   the time evolution s   of   the density  i ÔÅ≤ ,  the  velocity  i v ÔÅ°   and  the  internal  energy  i u   of the  i th particle are presented by the first  order  derivative equations of time   as  follows   ÔÄ® ÔÄ© ÔÄ® ÔÄ© 1 , N i j j i i ij ij j d m v v W r h dt ÔÅ≤ ÔÄΩ ÔÄΩ ÔÄ≠ ÔÉë ÔÉ• ÔÅ≤ ÔÅ≤ ÔÅ≤ ÔÅ≤ ,                                                                         (1)   ÔÄ® ÔÄ© 2 2 1 , N j i i j ij i ij ij j i j dv m W r h dt ÔÅ°ÔÅ¢ ÔÅ° ÔÅ°ÔÅ¢ ÔÅ¢ ÔÅ≥ ÔÅ≥ ÔÅ≤ ÔÅ≤ ÔÄΩ ÔÉ¶ ÔÉ∂ ÔÄΩ ÔÄ´ ÔÄ´ÔÅê ÔÉë ÔÉß ÔÉ∑ ÔÉß ÔÉ∑ ÔÉ® ÔÉ∏ ÔÉ• ÔÅ≤ ,                                                         (2)   ÔÄ® ÔÄ© ÔÄ® ÔÄ© 2 2 1 1 , 2 N j i i j ij j i i ij ij j i j du m v v W r h dt ÔÅ°ÔÅ¢ ÔÅ°ÔÅ¢ ÔÅ° ÔÅ° ÔÅ¢ ÔÅ≥ ÔÅ≥ ÔÅ≤ ÔÅ≤ ÔÄΩ ÔÉ¶ ÔÉ∂ ÔÄΩ ÔÄ´ ÔÄ´ÔÅê ÔÄ≠ ÔÉë ÔÉß ÔÉ∑ ÔÉß ÔÉ∑ ÔÉ® ÔÉ∏ ÔÉ• ÔÅ≤ ,                          (3)   where  , , , x y z ÔÅ° ÔÅ¢ ÔÇ∫ ;  m   is  mass   of   the  particle;  ij i j r r r ÔÄΩ ÔÄ≠ ÔÅ≤ ÔÅ≤ ÔÅ≤   is relative position vector between  the particles  i   and  j ;  ij h ,  ÔÅ°ÔÅ¢ ÔÅ≥   and  ij ÔÅê   are   smoothed length, stress tensor and artificial  viscosity function , respectively , which are considered   similarly to   those in our previous  work [ 8 ]; and  ÔÄ® ÔÄ© ÔÄ® ÔÄ© 3/2 3 2 2 2 2 , 1 / ( ) 5 / 2 / exp( / ) ij ij ij ij ij ij ij W r h h r h r h ÔÅ∞ ÔÄΩ ÔÄ≠ ÔÄ≠ ÔÅ≤   is  a  Gauss  kernel function.  In  order t o compensate energy dissipation caused by friction during  the   sliding , a dissipation  force is   afforced on each particle   of the system  as follows     ÔÄ® ÔÄ© , he x-direction the y-direction the z-directi n, t o x i dis i dis y dis i i dis i z i dis i m v V F m v m v ÔÅß ÔÅß ÔÅß ÔÉ¨ ÔÄ≠ ÔÄ≠ ÔÉØ ÔÉØ ÔÄΩ ÔÄ≠ ÔÉ≠ ÔÉØ ÔÄ≠ ÔÉØ ÔÉÆ                                                    (4)   where  d is ÔÅß   is a parameter of the model and  0 dis V ÔÄΩ   for particles of the substrate and  dis V V ÔÄΩ , which is a constant sliding velocity of the slider, for particles of the slider.  T he Prandtl - Tomlinso n model   is utilized by   add ing   a spring force on each particle of the slider   as follows   6     ÔÄ® ÔÄ© ÔÄ® ÔÄ© ÔÄ® ÔÄ© 0, , 0, 0, the x-direction the y-direction the z-direction, i i spr i i i i i K x Vt x F K y y K z z ÔÉ¨ ÔÄ´ ÔÄ≠ ÔÉØ ÔÉØ ÔÄΩ ÔÄ≠ ÔÉ≠ ÔÉØ ÔÄ≠ ÔÉØ ÔÉÆ                                           (5)   where  K   is a spring constant,  t   is sliding time,  0, i x ,  0, i y   and  0 , i z   are the equilibrium/initial  coordinates of the  i th particle in the x - , y -   and z - directions, respectively. Interaction  between the slider and the substra te is presented by interaction between particles of the  two  particle layers ,   one of the slider and the other of the substrate ,   in the contact . Two particles,  one of each layer, interact with each other  by a   spring force   as follows   ÔÄ® ÔÄ© 0 0 , ij ij ij int,ij ij r K r h r h F r r h ÔÅ° ÔÉ¨ ÔÄ≠ ÔÄ≠ ÔÄº ÔÄº ÔÉØ ÔÄΩ ÔÉ≠ ÔÉØ ÔÄæ ÔÉÆ ÔÅ≤ ÔÅ≤                                                          (6)   where  K ÔÅ°   is a spring constant. The friction force  fri F , the normal force  nor F   and the friction  coefficient   cof ÔÅ≠   are defined as follows   ÔÄ® ÔÄ© , 1 f N x x fri spr i int,ij i F F F ÔÄΩ ÔÄΩ ÔÄ´ ÔÉ• ,                                                                                  (7)   ÔÄ® ÔÄ© , 1 f N z z nor spr i int,ij i F F F ÔÄΩ ÔÄΩ ÔÄ´ ÔÉ• ,                                                                                (8)   fri cof nor F F ÔÅ≠ ÔÄΩ ,                                                                                                    (9)   where  N f   is the number of the particles  (the friction particles)  of the  contact layer of the  slider ,  x F   and  z F   are the force components in the x -   and z - directions, respectively.   2.3.  Spring constant of particle   7           The spring constant s   K ÔÅ°    are   converted from spring constant s   of surface potential s   of  the  atomic oxide system s   probed by  molecular dynamics   (MD)   simulations.   Fig.   1   presents  the  Al 2 O 3   atomi c   system   (similarity   for  Fe 2 O 3 )  consisting of  the  two objects  used in  the MD   simulations by LAMMPS [ 1 2 ].   The lower object is  fixed ly held   during  all  the MD  simulations while the  upp er object is regularly shifted a 0.01 √Ö step along  the  z - direction  and a 0.02 √Ö step along  the   x -   or y - direction.   The  Coulomb + Lennard - Jones interaction  potential  ÔÄ® ÔÄ© ÔÄ® ÔÄ© ÔÄ® ÔÄ© 12 12 6 6 / 4 / / i j lj ij ij i ij j cl i i j j U Cq q r r r r ÔÅ• ÔÅ≥ ÔÅ≥ ÔÅ• ÔÄΩ ÔÄ´ ÔÄ≠ ,   where  C   is  the   energy conversion  constant (see in L AMMPS ),  1 cl ÔÅ• ÔÄΩ   is a dielectric constant,  i q   and  j q   are charges of the  atoms   i     and   j ,   lj ÔÅ•   and  ij ÔÅ≥   are parameters,   is used to present interaction between atoms of  the oxides. The parameters  i q ,  j q ,  lj ÔÅ•   and  ij ÔÅ≥   for Al 2 O 3   and   Fe 2 O 3   are taken from the works  of Hu et al. [ 13 ],   and   Kerisit [ 14 ] and Olsen et al. [ 15 ], respectively.   The Lorentz - Berthelot  combining rules of the Lennard - Jones potential is applied for   lj ÔÅ•   and   ij ÔÅ≥ .   Fig.   2   shows the   surface potential   energy   of the oxides in  the  x - , y -   and z - directions. We first monitor the  potential   energy   in  the  z - direction to find  its   (first) minimum position ,  1.67 √Ö for Al 2 O 3  or  1.34 √Ö for Fe 2 O 3 . Distance   in the z - direction   between the  two  object s   of each oxide   (Fig.  1 ) is then chosen  to be  equally to  its   minimum  position  value during shifting the upper  object along  the  x -   or y - direction. We obtain  the  spring constants of the  atomic oxide  systems   in  the  x -   and y - directions from the  second order polynomial   fits of these potential   energy curves   (Fig . 2 ), for example,  the  spring constants  of  0.5055 atom x k ÔÄΩ   eV/√Ö 2   and  1.4943 atom y k ÔÄΩ   eV/√Ö 2    are  obtained for Al 2 O 3   in  the  x -   and y - directions, respectively .   E rror  8     of each spring constant  is   less than   1 % of its value .   In order to   convert     t hese spring  constants to  the  spring constants of particles  ( K ÔÅ° ) , we   use  a  picture of serial connection of  the springs in the CG directions.  This  means   that  for   a given coarse - graining in which   a   particle   is   yielded   from   a group of  x n   and  y n unit cells ,  the  relationship of  the  spring  constants between an atomic oxide system and a corresponding CG particle one  is  presented  as follows   , ,1 ,2 1 1 1 1 ... x x atom n atom atom atom x x x x x n K k k k k ÔÄΩ ÔÄ´ ÔÄ´ ÔÄ´ ÔÄΩ ,                                                            (10)   , ,1 ,2 1 1 1 1 ... y y atom n atom atom atom y y y y y n K k k k k ÔÄΩ ÔÄ´ ÔÄ´ ÔÄ´ ÔÄΩ .                                                           (11)   It should be noted that  the  spring constants of particle are dependent on its size ( x n   and  y n ).   This  relationship is not  considered   in  the  z - direction because atoms lumped into one  particle must  be belonged to   the   only object ( the   slider or  the   substrate).  The s pring constant  of particle in  the  z - direction ( z K )  is   adjusted over a range of value until simulation data  well approximate   with  those   of friction of the oxides   reported   in previous studies.     2.4.  Simulation parameters   and systems         Each of th e   micronscale  atomic oxide systems , Al 2 O 3   or Fe 2 O 3 ,   is coarse - grained into  three different particle systems related to difference of the  particle  size ,   x n ,  y n   and   z n   ( see  in  Table  1 ) .   Quantities   of particle such as   the   mass ( CG M ) and   the   spring constants ( x K   and  y K ) are then estimated and listed in Table   1 .   Each of the simulated particle systems consists  of a slider and a substrate   whose size s,  x L ,  y L and  z L ,   in  the   direction s are   listed in Table 2 .   9     The number of the unit ce lls of each  CG  particle system  expanded in each direction to reach  its size   is listed in Table  3 .   The   particle  number of each system is then estimated (Table  3 ).  The s pring constant  K   is   taken from  the  spring constant of the  Al 2 O 3   or Fe 2 O 3   o xide - functionalized  cantilever   mentioned   in  the  studies   of  Gan et al. [ 1 6 ] and    Lower et al. [ 17 ]  (Table  1 ).  Fig.   3   presents   the Al 2 O 3   particle system used in  the  SPH simulations to detect  its   sliding friction in  the  x -   and y - directions.  The simulated  Fe 2 O 3   particle systems are  designed similarly to th e Al 2 O 3   particle  system.   The i nitial distance along the z - direction  between the slider and the substrate of each particle system is set equally to its  c z l n c ÔÄΩ ÔÅ≤ .  The   simulation   parameters   are   set as follows :   7 10 dis ÔÅß ÔÄΩ   1/s ,   density of   2 3 3.97 Al O ÔÅ≤ ÔÄΩ   and  2 3 5.26 Fe O ÔÅ≤ ÔÄΩ   g/cm 3 , shear modulus of  2 3 163.4 Al O ÔÅ≠ ÔÄΩ   [ 18 ] and  2 3 54 Fe O ÔÅ≠ ÔÄΩ   GPa [ 19 ],  a   time  step of  100 t ÔÅÑ ÔÄΩ   ps ,   a sliding velocity of   100 V ÔÄΩ   m/s   and an external pressure of 3 MPa   in  all the SPH simulations.   The SPH simulation code is modified from the FDPS open source  developed by Iwasawa et al. [ 20 ].     3 . Results and discussion          Fig.  4   presents   the  friction force of the  A3000 and F3000 systems   in the x -   and y - sliding  directions with    the  different  ratios of  / z x K K     ranged f rom 0.01 to 0.1 2 .   Each curve shows  good periodicity in sliding  distance   indicating the fact th at the contact surfaces have been   steady   maintained   during the sliding.   Similarly, s tick - slip motion has clearly been observed  in relative sliding of hardness contact surfaces [ 21 ].   In this work, the systems are st eady   held  by   the  chosen  high value of the dissipation parameter   ( dis ÔÅß ) .   The hardness contacts  10     make s mall oscillation s   of  the interfacial  particles   that result in  the  small  spr F   spring forces  exerting on the   friction   particles .   In addition,  the  int F ÔÅ≤   spring force  in the x - direction  very   slightly varies at a given value of  x K .   Consequently ,  the  friction force has no change with  varying the ratios of  / z x K K   as seen Fig.  4 .   It is also founded that t he  average friction force   is   not dependent on the sliding  direction s , being equally to 0.24   ŒºN for  the A3000 system   and 0.28 ŒºN   for   the F3000 system   in the x - direction or the y - direction.   The se   results match  closely  to those mentioned in experimental and simulation reports for diamond surfaces.  T he average friction forces  of   the (100) and (111) diamond surfaces are found to be  similarly   and independent of load up to 0.1 ŒºN  in the ultrahigh vacuum force microscope  meas urements of a clean diamond tip sliding on these surfaces   along the various directions   [ 2 2 ] .   Gao et al. used the  nanowire diamond   AFM  tips   o f different radii to experimentally  probe friction   force   of (001) and (111) diamond surfaces   at a zero load   and found that  with  the tip of a certain radius the measured values of friction force of the  five  different surface - orientation/sliding - direction combinations are  near or close  the same   [ 2 3 ] .   Their MD  simulations also confirmed that when the error bars are considered, there are no statistically  significant differences in friction force between either the surface or for any sliding  direction  at low pressures; h owever, with external pressures gre ater than 35 GPa the  average friction force when sliding in the [ 1   10 ] direction on  the   (001)   diamond surface   is  always smaller than when sliding in the [110] direction [ 2 3 ].   As an outlook,  average friction  force between hardness contact surfaces is independent of sliding direction in behavior of  small normal component of interfacial interaction such as  z K   in this work and applied load  11     or external pressure in the previ ous studies [ 2 2 ,2 3 ].   Similarly, t he   periodic   curves of  the  friction force are found for the other systems, two of them (A1000 and F1500) are presented  in Fig.  5 .   T he average friction force increases as size of CG particle decreases,   as seen   from  comparison  between   the curves   (and also  curves   of the other CG systems , not shown)   of   Figs.  4   and  5 .  Since   the   increase of the average friction force is not proportional to  K   or   the   increase of  x K , both the spring forces, one of the Prandtl - Tomlinson   model   and the  other of the interfacial interaction, have significant contributions to friction force.  This  indicates   that oscillation of particles along sliding direction plays a  significant   contribution  in estimation of friction force . With  smaller   size of GC particle, the friction force curves  show a larger reflection among them (Figs.  4   and  5 ).       The n ormal force shows good periodicity   in sliding distance   as seen in Fig.  6 .  The a verage  normal force varies proportionally to change of the  / z x K K   ratio in each of the four  behaviors.   This indicate s   that   the spring interfacial force (Eq.  ( 6 ) )   main ly   contribut es   to  normal component   of force   exerting on the friction p articles .   Therefore, potential kind  chosen to present  interaction between   interfacial CG particles plays a n important   role in  simulation  studies of sliding friction , as  also  mentioned  for an atomic system   [ 3 ].   At a given  / z x K K   ratio  there are   the   similar value s of the average normal force   in the x -   and y - sliding  directions for  the   system A3000 or F3000   indicating   the fact that the average normal force  is almost independent of sliding direction .   By investigating   relative sliding of the   (100) - (2√ó1) reconstructed diamond surfaces at low applied load, Perry et al. found good  periodicity of both friction and normal forces in sliding distance   and the average normal  12     forces of 0.20 nN/atom and 0.19 nN/atom   for [ 0 1   1 ] a nd [011] sliding direction s,  respectively [ 21 ].   Briefly, under   condition of low applied load or small modeled normal  interaction ,   friction and normal forces   of hardness contact s   of atomic system or CG particle  system   show very little varying  along different sliding directions .  However, it should be  noticed that  because of   lattice structure  the  lower   peaks additionally  appear to   interleave   the  higher peaks in   the   friction force curves as seen in this work (Fig.  4 ) and the work of  Pang et al. [ 2 4 ] that simulated the atomic - scale friction of a typical two - dimensional single - layer molybdenum disulfide.  This work also states that at micron - scale there is a little  difference of the average friction and normal forces between  the   CG Al 2 O 3   and Fe 2 O 3   oxid es.   Good periodicity of both   the   friction and normal forces indicates  a steady state of   the systems in  the  sliding and normal directions during the sliding.         As a result of changes of the friction and normal forces, the friction coefficient also shows  a periodic form in sliding distance (Fig.  7 ).   For a given system and a given sliding direction,  shape of the curves is the same regarding of the   considered   / z x K K   ratio.  The o scillation  amplitude  and average value of  the friction coefficient ,   considered as the friction coefficient  of the system in the following discussions ,   rapidly reduce with increasing the  / z x K K   ratio  up  to 0.0 5   and become stable  at the remaindering  / z x K K   ratios   (Fig s .  7 and  8 ) .   This state  is originated from the change of the normal force.  At the contact, the substrate surface  always pushes the friction particle layer far away from it   because   the positive   normal   force  is  observed during the sliding (Fig.   6 ).   Therefore, an increase of   the  z K   can   be considered  as approximation of an increase of externally applied normal load   as long as contact surface  13     of a slider  is pushed stronger as external load is applied larger .   In   this  a p proximation ,  the  results of this work are in accordance with those   reported   in the previous studies   for external  load (or pressure) dependence of friction coefficient .   In   a   studied   interval   of load ,  friction  coefficient   of various materials   is founded to  markedly drop at low er   loads and stabilize at  higher lo ad s   [ 2 5 ,2 6 ].   Deformation of  inter faces or occurrence of debris at contact  ha s   been  considered as features  for  explain ing   this dependence [ 2 7 ].   However, this work  finds   that  th e   depe ndence still appears in   sliding   fric ti on   of hardness contacts  with   increasing intensity  of normal comp onent of the interfacial spring  interaction.   This result is as an additional  understanding for the load - fri ction coefficient dependence of contacts in various states.   It  is clearly seen in Fig.   8   that  at micron - scale  the  friction coefficient of the  systems almost  does   not depend on both  the  sliding  direction and  the  CG particle size , only a small  reflection occurring in the CG systems of  the  Œ± - Al 2 O 3   oxide .   The   friction coefficient of  r educ ing   from 0.2 4   to 0.09   in   the   stable region   ( / 0.05 z x K K ÔÇ≥ )  observed for   a ll the CG  Œ± - Al 2 O 3  systems  is in accordance with  the experimentally  unlubricated sliding friction  coefficient of the alumina/alumina or sapphire/sapphire   contact  such  as 0.07 for the  smoothed contact [ 2 8 ],   0.08 ¬± 0.02   for   the rough contact of  2 a R ÔÄΩ   nm  [ 2 9 ] and   about from  0.15 to 0.19 for  the rough contact of  20 a R ÔÄΩ   nm [ 30 ] ,   or the MD simulation value of 0.12  for the  pure  Œ± - Al 2 O 3  (0001)/Œ± - Al 2 O 3 (0001)   contact held at 300 K [ 31 ].   The friction  coefficient of the CG Œ± - Fe 2 O 3   systems in the stable region reduces from 0.21 to 0.09 being  not agreeably with the steady value of 0.60 [ 3 2 ] reported for the Fe 2 O 3   ball/Fe 2 O 3   flat pairs.   An agreeable value of the friction coefficient  with the reported value  can be seen around  14     the  / z x K K   ratio of 0.02.   For the two CG Al 2 O 3   and Fe 2 O 3   oxides, the friction coefficient  reduces with increasing intensity of the interfacial interaction in normal direction. This  observation is different from the MD simulation observation  of Mann et al. that  showed  that friction coefficient of the Œ± - Al 2 O 3 /Œ± - Al 2 O 3   contact is lower with   using   a weaker  modeled interfacial potential [ 3 ].     4 . Conclusions          The paper  uses  the spring potential to present interaction between the  interfacial  particles  of the Œ± - Al2O3/Œ± - Al2O3 and Œ± - Fe2O3/Œ± - Fe2O3 contacts in the sliding   friction   stud y   of the  CG  micron - scale  Al 2 O 3   and Fe 2 O 3  oxides by the smoothed particle hydrodynamics  simulations.  Some conclusions are pointed out as follows.  The coarse - graining does not  result in the observed friction properties of the oxides. At micron - scale, the monitored  friction  quantities  are not dependent on the different sliding directions.   With the hardness  contacts   that show the steady states during t he sliding , the friction coefficient  still  reduces  with increasing intensity of normal component of the interfacial force. This result is as an  implementation for the previous observations of sliding friction of various materials that  showed that a drop of   friction coefficient with increasing externally applied normal load  has originated from deformation of interfaces or occurrence of debris at contacts, indicating  unsteady contacts.    As compared to the results of the previous studies, the friction  coeffici ent of the Œ± - Al 2 O 3   oxide should be taken in its stable region ( / 0.05 z x K K ÔÇ≥ ), while  that of  the Œ± - Fe 2 O 3   oxide should be taken prior to its stable region.     15     References       [1]  A.  Erdemir ,   Tribol .   Lett . 8   ( 2000 )  97.       [2]  T.  S ugihara ,  T.  E nomoto ,   Precis .   Eng . 49   ( 2017 )  52.        [3]  D.J.  Mann,  L.  Zhong,   W.L.   Hase ,   J .   Phys .   Chem .   B  105 ( 2001 )  12032.       [4]  P.  Zhu,  R.  Li ,   Nanoscale Res .   Lett . 13   ( 2018 ) 34 .       [5]  A.D.  Craciun,  J.L.  Gallani,   M.V.   Rastei ,   Nanotechnology  27 ( 2016 )  055402.       [6]  H.  Washizu,  S.  Kajita,  M.  Tohyama,  T.  Ohmori,  N.  Nishino,   H.   Teranishi,   A.   Suzuki ,  Faraday Discuss . 156   ( 2012 ) 279 .        [7]  C.  Maveyraud,   W.   Benz,   A.   Sornette,   D.   Sornette ,   J .   Geophys .   Res . 104   ( 1999 )  28769.       [8]  L.V.  Sang,   A.   Yano,   S.   Fujii,  N. Sugimura ,   H.   Washizu ,   EPL   122   ( 2018 )   26004.       [9]  N.E.  Iwamoto ,   Molecular Modeling and Multiscaling Issues for Electronic Material  Applications ,   Srpiger - Verleg , London, 2015.     [10]  R.E.  Newnham,  Y.M.  Dehaan ,   Z .   Kristallogr .   Cryst . 117   ( 1962 )  235.   [11]  R.L.  Blake,  R.E.  Hessevick,   T.   Zoltai,   L.W.   Finger ,   Am .   Mineral . 51   ( 1966 )  123.   [12]  S.  Plimpton ,   J .   Comp .   Phys . 119   ( 1995 )  1.   [13]  Y.  Hu,   Y.   He,   Z.   Zhang,   D.   Wen ,   Energy Convers .   Manag . 142   ( 2017 )  366.   [14]  S.  Kerisit ,   Geochim .   Cosmochim .   Acta  75 ( 2011 )  2043.   [15]  R.  Olsen,   S. Sj√∂blom ,   B.   Kvamme,   T.   Kuznetsova ,   Molecular Dynamics Simulation   of Triethylene Glycol  -   Chemical Potentials on Surface Relevant to Gas Transportand   Processing. Proceedings of the 8th International Conference on Gas Hydrates,  Beijing, 2014.   [1 6]  Y.  Gan,   G.V.   Franks ,   J .   Phys .   Chem .   B   109   ( 2005 )  12474.   16     [17]  B.H.  Lower,   L.  Shi,   R.   Yongsunthon,   T.C.   Droubay,   D.E.   McCready,   S.K.   Lower ,  J .   Bacteriol . 189   ( 2007 )  4944.   [18]  W.  P abst ,   G.  T ich√° ,   E.   G regorov√° ,   Ceramics ‚àíSilik√°ty   48   ( 2004 )  41.   [19]  D.  Chicot,  J.  Mendoza,   A.   Zaoui,   G.   Louis,   V.   Lepingle,   F.   Roudet,   J.   Lesage ,   Mater .   Chem .   Phys . 129   ( 2011 )  862.   [ 20 ]  M.  Iwasawa,   A. Tanikawa ,   N.   Hosono,   K.   Nitadori,   T.   Muranushi,   J.   M akino ,   Publ .   Astron .   Soc .   Japan  68 ( 2016 ) 54 .   [ 21 ]  M.D.  Perry,   J.A.   Harrison ,   J .   Phys .   Chem . 99   ( 1995 )  9960.   [2 2 ]  G.J.  Germann,   S.R.   Cohen,   G.   Neubauer,   G.M.   McClelland,   H.   Seki ,   J .   Appl .   Phys .  73   ( 1993 )  163.   [2 3 ]  G.  Gao,   R.J.   Cannara,   R.W.   Carpick,   J.A.   Harrison ,   Langmuir   23   ( 2007 )  53942.    [2 4 ]  H.  Pang,   M.   Li,   C.   Gao,   L.   Lai,   W.   Zhuo ,   Nanomaterials   8   ( 2018 )  387.   [2 5 ]  H.S.  Benabdallah ,   Tribol .   Int . 40   ( 2007 )  64.   [2 6 ]  Y.  Katano,   K.   Nakano,   M.   Otsuki,   H.   Matsukawa ,   Sci .   Rep . 4   ( 2014 )  6324.   [2 7 ]  B.  Bhushan ,   Mechanics of Magnetic Storage Devices. Springer - Verlag, New York,  199 6.   [2 8 ]  A.  Berman,   S.   Steinberg,   S.   Campbell,   A.   Ulman,   J.   Israelachvili ,   Tribol .   Lett . 4 ( 1998 )  43.   [2 9 ]  D.E.  Kim,   N.P.   Sub ,   Wear   149   ( 1991 )   199.   [ 30 ]  D.H.  Hwang,  K.H.Z.  Gahr ,   Wear   255   ( 2003 )  365.   [ 31 ]  D.  Wei,   Y.   Zhang ,   Surf .   Sci . 603   ( 2009 )  L95.   17     [32 ]  P.J.  Blau ,   Friction Science and Technology: From Concepts to Applications, Second  Edition. CRC Press, New York, 2008.                                           18     Table captions     Table 1   Properties of particle:  x n ,  y n   and  z n   are the cell unit numbers of the atomic oxide region  in the  x - , y -   and z - directions coarse - grained into one particle;  CG M   ( unit of 10 - 6   Œºg) is  mass of particle; and  K ,  x K   and  y K   (unit of 10 - 3   N/m) are the spring constant s   of  particle. Noting for symbol of System, ‚ÄúA‚Äù (as in A1000) typical for the  CG   system  of  Al 2 O 3   with   1000 x n ÔÄΩ   or  1000 y n ÔÄΩ , similarly, ‚ÄúF‚Äù (as in F1000) typical for  the CG system  of   Fe 2 O 3 .   Table 2   Size of the CG oxide particle systems (or atomic systems) in the directions used in the  SPH simulation (unit of Œº m ) .   Table 3   Characters of the simulated particle systems:  x N ,  y N   and  z N   are the unit cell numbers  of the particle systems expanded in the directions; and  CG N   is the particle number .               19     Figure captions     Fig. 1.   The initially Al 2 O 3   atomic system used to probe the surface potential in MD  simulations. The upper object of 6000 atoms and the lower object of 384000 atoms.  Red for O and yellow for Al.   The atomic oxide systems (Al 2 O 3   and Fe 2 O 3 ) are  created from the CIF  files taken   from American Mineralogist Crystal Structure  Database.   Fig. 2.   The surface potential energy of the atomic oxide systems in the directions probed  by MD simulations. Red lines are their second order polynomial fits.   Fig. 3.   The A1000 particle sys tem used in SPH simulations to detect its friction in the  sliding along the x -   and y - directions.   Fig. 4.   The friction force dependent on the sliding distance for the A3000 and F3000  systems.   Color lines from left to right for  / 0.01 0.12 z x K K ÔÄΩ ÔÄ≠   with increment of  0.01.    Fig. 5.   The friction force dependent on the sliding distance for the A1000 and F1500  systems.   Color lines are the same those noted in Fig. 4.   Fig. 6.   The normal force dependent on the sliding distance for the A3000 and F3000  syste ms.   Color lines are the same those noted in Fig. 4.   Fig. 7.   The force coefficient dependent on the sliding distance for the A3000 and F3000  systems . Color lines are the same those noted in Fig. 4.   Fig. 8.   The friction coefficient dependent on the  / z x K K   ratio for all the simulated particle  systems.   20     Table 1       System   x n   y n   z n   CG M   K   x K   y K   A1000   1000   1000   550   0.55881   60 [ 16 ]   8.08808   23.91018   A1500   1500   1500   550   1.25732   60 [ 16 ]   5.39205   15.94012   A3000   3000   3000   550   5.02929   60 [ 16 ]   2.69602   7.97006   F1000   1000   1000   550   0.87535   70 [ 17 ]   13.40801   4.42967   F1500   1500   1500   550   1.96953   70 [ 17 ]   8.93867   2.95311   F3000   3000   3000   550   7.87815   70 [ 17 ]   4.46933   1.47655                         21     Table 2       System   Object   x L   y L   z L   CG Al 2 O 3   Slider/Substrate   41.759/106.004   24.109/61.201   6.431/6.431   CG Fe 2 O 3   Slider/Substrate   44.207/112.221   25.523/64.791   6.817/6.817                                   22     Table 3       System   Object   x N   y N   z N   CG N   A1000   Slider/Substrate   60/150   60/150   10/10   36000/225000   A1500   Slider/Substrate   40/100   40/100   10/10   16000/100000   A3000   Slider/Substrate   20/50   20/5 0   10/10   4000/25000   F1000   Slider/Substrate   60/150   60/150   10/10   36000/225000   F1500   Slider/Substrate   40/100   40/100   10/10   16000/100000   F3000   Slider/Substrate   20/50   20/50   10/10   4000/25000                           23     Fig. 1                                    24     Fig. 2                       25     Fig. 3                              26     Fig. 4                             27     Fig. 5                  28     Fig.  6                             29     Fig.  7                               30     Fig. 8           ",cond-mat.soft,Arxiv
22,Elastic energy storage of spring-driven jumping robots,"John Lo, Ben Parslew",2023-11-03 18:42:39+00:00,http://arxiv.org/pdf/2311.02188v1,"Spring-driven jumping robots use an energised spring for propulsion, while the onboard motor only serves as a spring-charging source. A common mechanism in designing these robots is the rhomboidal linkage, which has been combined with linear springs (spring-linkage) to create a nonlinear spring, thereby increasing elastic energy storage and jump height for a given motor force. The effectiveness of this spring-linkage has been examined for individual designs, but a generalised design theory of this class of system remains absent. This paper presents an energetics analysis of the spring-linkage and provides insight into designing an ideal constant force spring, which stores the maximum energy for a given motor force. A quasi-static analysis shows that the force-displacement relationship of the spring-linkage changes with the orientation and type of the spring, but is independent of the linkage scale. Combining different types and orientations of springs within the linkage enables higher elastic energy storage than using single springs. Placing two translational springs at the diagonals of the rhomboidal linkage creates an ideal spring that could increase the jump height of prior robots by 50-160%.","arXiv:2311.02188v1  [cs.RO]  3 Nov 2023Elastic energy storage of spring-driven jumping robots John Loa,‚àó, Ben Parslewa,b aDepartment of Fluid and Environment, The University of Manc hester, Manchester, M13 9PL, United Kingdom bInternational School of Engineering, Faculty of Engineeri ng , Chulalongkorn University, Bangkok, 10330, Thailand Abstract Spring-driven jumping robots use an energised spring for pr opulsion, while the onboard motor only serves as a spring- charging source. A common mechanism in designing these robo ts is the rhomboidal linkage, which has been combined with linear springs (spring-linkage) to create a nonlinear spring, thereby increasing elastic energy storage and jump height for a given motor force. The e Ô¨Äectiveness of this spring-linkage has been examined for ind ividual designs, but a generalised design theory of this class of system remains a bsent. This paper presents an energetics analysis of the spring-linkage and provides insight into designing an idea l constant force spring, which stores the maximum energy for a given motor force. A quasi-static analysis shows that t he force-displacement relationship of the spring-linkage changes with the orientation and type of the spring, but is in dependent of the linkage scale. Combining di Ô¨Äerent types and orientations of springs within the linkage enables high er elastic energy storage than using single springs. Placin g two translational springs at the diagonals of the rhomboida l linkage creates an ideal spring that could increase the jump height of prior robots by 50-160%. Keywords: Jumping robot, Elastic energy storage, Rhomboidal linkage , Energy eÔ¨Éciency, Spring-linkage 1. Introduction The mechanical performance of motor-driven jumping robots is limited by the motor maximum power and velocity [1,2]. To tackle this issue, a mechanical spring can be used to inc rease the mechanical power available for jumping (Fig. 1 a). In spring-driven jumpers the motor does work to increase the elastic potential energy stored in the spring, which is then released and converted into kinetic energy for jumping, as shown in Fig. 1 b. By doing so, the jump height and power output of the spring-driven system are deco upled from the motor‚Äôs velocity and power outputs [1,2]. Spring-driven jumping robots have been developed with vari ous structures and arrangements of elastic elements [3‚Äì6]. A common goal for these systems is to achieve a high mechanical-elastic energy conversion e Ô¨Éciency from the mechanical work done by a single motor stroke to the elastic e nergy stored in the spring, and then a high elastic-kinetic energy conversion e Ô¨Éciency from the stored energy to the kinetic energy. This stu dy will focus on mechanical-elastic energy conversion. Ideal mechanical-elastic e Ô¨Éciency is obtained theoretically using a constant force spr ing, where the applied force is independent of the displacement. The maximum elastic pot ential energy stored in the idealised system is the peak force multiplied by the spring length (the areas PE1, PE2 and PE3 in Fig. 1 c). In comparison, a linear spring, such as that shown in Fig. 1 a, can only store half of the maximum elastic potential energ y for the same applied force and length as the ideal system. This paper will consider the phys ically realisable linkage spring arrangements and their energetics in comparison to idealised systems. A conceptually simple approach to increasing the energy sto red in a linear spring system for a given charging force is to pre-stress the spring. This involves using a line ar spring with a natural length longer than the system characteristic length. The spring is pre-stressed by an ext ernal force before placing it into the jumping drivetrain. ‚àóCorresponding author. Email address: kwokcheungjohn.lo@manchester.ac.uk (John Lo ) Preprint submitted to Elsevier November 7, 2023 (a) Ground reaction force, FRSpring restoring force, Fk Hookean springFWeightSpring-charging force, Fc BSpring-charging phase Acceleration phase StandingF Compressed Take-off(b) Flight phaseCharacteristic length, dActuation displacement Accelerates upwardB + stroke lengthBody with  motor (fii) (fiii) (fiv) (fv) (fvi) (fi) Fig. 1. An example of (a) a prismatic jumping robot driven by a linear spring (e.g.[ 7]]) and (b) the phases of the jumping process. (c) Force- displacement relationships of ideal, linear and pre-stres sed linear springs; the pre-stress ratio is the ratio of the n atural spring length of the pre- stressed spring to the system characteristic length. (d) Sc hematic of the spring-driven jumping robot proposed by [ 8], which combines a linear spring with a rotational linkage to create a nonlinear sprin g; spring shown at its natural length. (e) Force-displaceme nt relationships of a linear spring, and the nonlinear spring systems from (d). (f) Force -displacement relationships of some previous jumping robo ts with nonlinear spring- linkage mechanisms with di Ô¨Äerent spring types and locations. (i)-(ii) use horizontal t ranslational springs [ 8,9]. (iii)-(iv) use rotational springs [10,11]. (v)-(vi) Combine rotational and translation springs in a n attempt to create an idealised constant force spring [ 2,12]. The greyed area is the unattainable region where the linkage could be further c ompressed but was prevented due to other physical constrain ts. The force is normalised by the peak spring-charging force in each example, and the di splacement is the translational displacement of the body me asured from the initial condition and is normalised by the characteristic length of each system. The pre-stressing phase shifts the force-displacement cur ve of the linear spring upward in Fig. 1 c and subsequently increases the elastic potential energy storage for a given c harging force. Pre-stressed systems are potentially a usef ul approach in the design of jumping systems. However, a caveat of this method is that to increase the elastic energy storage of the system for a given force, the natural spring le ngth has to be increased. This implies that achieving the idealised mechanical-elastic energy e Ô¨Éciency of an ideal spring would require an inÔ¨Ånitely long spr ing, which is practically unfeasible. Another practical limitation is t he coils of the metallic helical springs would eventually co me into contact under compression, which reduces the working l ength of the spring. The pre-stressed ratio of the system is constrained by the minimum working length of the physical spring. As a more common approach, jumping robots adopt nonlinear springs, which also have a higher elastic en ergy storage than a linear spring for a given charging force. Nonlinear springs have been made previously by combining a p lanar closed-chained four-bar linkage mecha- nism with a linear spring [ 8], as shown in Fig. 1 d. The resulting spring-linkage system exhibits a nonlinea r force- displacement relationship, as shown in Fig. 1 e. This mechanical conÔ¨Åguration was Ô¨Årst proposed to replac e the linear spring-driven jumping robot [ 7] that suÔ¨Äered energy lost from premature take-oÔ¨Ä[8], which is where the robot leaves the ground while a portion of elastic energy is still stored w ithin the spring, and has not been converted to kinetic 2 energy before take-o Ô¨Ä. The nonlinear spring did not mitigate premature take-o Ô¨Ä[2,10,13‚Äì15] due to the rotational and unsprung masses inherent in the linkages [ 16]. However, the spring-linkage did increase mechanical-el astic con- version eÔ¨Éciency to yield higher jumps than previous systems, despite the premature take-o Ô¨Ä[14]. Subsequently, a whole class of similar nonlinear spring mechanisms were dev eloped with various spring arrangements ( Fig. 1 Ô¨Å-fvi), including rotational springs [ 10,11,14,15,17,18], translational springs in di Ô¨Äerent alignments [ 8,9,13,19‚Äì27] and a combination of the two [ 2,12]. The highest mechanical-elastic conversion e Ô¨Éciency shown previously is around 65% ( Fig. 1 Ô¨Åv), while some nonlinear springs only have a conversion e Ô¨Éciency of 38% ‚Äì lower than that of a linear spring system ( Fig. 1 Ô¨Åii). The overall technological evolution of nonlinear spr ings for jumping systems has not been straightforward and does not show a steady increase in mecha nical-elastic conversion e Ô¨Éciency over time. For exam- ple, [ 8] developed in 2000 achieved an e Ô¨Éciency of 56%, whereas [ 22] in 2013 attained only 40%. The development of spring-driven jumping robots has not shown a steady progr ession but instead has focused on individual or bespoke designs for speciÔ¨Åc missions or applications [ 3‚Äì6]. The contribution of this work is to take a methodical appro ach to characterise the mechanical-elastic conversion e Ô¨Éciency of nonlinear spring systems. This will be achieved by building a fundamental understanding of how conceptually s imple spring-linkage systems can be arranged to achieve an ideal, or near-ideal mechanical-elastic energy convers ion. 2. Topology and spring-charging process of spring-linkage systems The prismatic linear spring system in Fig. 1 a obeys Hooke‚Äôs law and has an elastic potential energy stora ge limited to 50% of that of an ideal spring. This energy constraint is no t imposed by the linear spring alone but is due to the topology of the combined spring and prismatic linkage. A lin ear spring with diÔ¨Äerent linkages can store di Ô¨Äerent amounts of elastic potential energy. Fig. 2 a is an example of the simplest spring linkage topology that e xhibits a nonlinear force-displacement rela- tionship. It is a nonlinear spring formed using a linear tran slational spring and a single link, with a single rotational degree of freedom. The link is connected to the ground with a r evolute joint at A. B is connected to a translational linear spring via a revolute joint. Point F on the spring is co nnected to the ground through a revolute joint. Initially, this system is at equilibrium and the spring remains at its na tural length, with the major axis perpendicular to the ground plane. As a force parallel to the +ydirection is applied at joint B the link will rotate and the li near spring will rotate and compress. Unlike the prismatic systems in Fig. 1 a, the translational displacement of the spring in Fig. 2 does not align with the y-axis and is not directly proportion al to the applied spring-charging force vector parallel to the y-axis; the nonlinear force-length relationship in Fig. 2 c shows how the pairing of rotational link and linear spring forms an example nonlinear spring. This study will show how t he force-length proÔ¨Åle can be modiÔ¨Åed using linkages and springs, and how this inÔ¨Çuences elastic energy storage w ithin the system. While simple to comprehend, the example in Fig. 2 a-c cannot be readily implemented in a jumping system as the link and spring are connected to the ground. The open-cha in two-bar linkage in Fig. 2 d forms a nonlinear spring without requiring a connection to the ground. While this lin kage can be used as the basis for a jumping robot design [11], the lack of symmetry results in lateral and angular accele ration during take-o Ô¨Ä. A conceptually simpler model that will be applied here to understand the fundamentals of n onlinear springs uses a symmetrical closed-chain four-bar linkage ( Fig. 2 e), which only has a single degree of freedom. This linkage ha s also proven to be a practical solution to designing jumping robots [ 3‚Äì6]. The closed-chained four-bar linkage mechanism is modelled as four bars of lengths L, connected by four revolute joints ‚Äì A, B, D, and F, and is hereafter deÔ¨Åned as rhomboidal l inkage. The linkage model has only a single degree of freedom and is considered to have a single point contact with the ground at F; in practice, a Ô¨Ånite base of support is required to avoid toppling and maintain the single translat ional degree of freedom, however this does not inÔ¨Çuence the mechanical-elastic conversion e Ô¨Éciency and so is neglected here. The characteristic length o f the rhomboidal linkage is given as, d=2L, (1) which is also the maximum displacement between joints B and F . Note that if the bars have di Ô¨Äerent lengths, joint B cannot be displaced to joint F in order to maximise the mechan ical work of the spring-charging force. 3 (e)B F(d) (b) B ARotational rodLinear springDisplacement(a) FSpring charging forceB FD A L+yDisplacementForce(c) Œ∏+ Fig. 2. (a) A rotational link with a linear translational spring bei ng (a) at rest and (b) compressed by an external spring-charg ing force. (c) The spring charging force is plotted against the vertical displ acement. Note that (a)-(c) show the simplest topological ar rangement of the translational spring with rotation linkage that exhibits a nonlinear forc e-displacement property. (d) An open-chained two-bar link age is formed by adding an extra rotational link to (a). To avoid the multiple degrees o f freedom, (d) can be mirrored into (e) a closed-chained four -bar linkage with a single translational degree of freedom, referred to as the rhomboidal linkage in this study. FmaxSpring-charging phase Œ∏ini Œ∏end(a) FAB DTranslational springs Rotational spring Standing C      ed (   (c)Fc +y Fig. 3. A rhomboidal linkage with multiple translational and rotat ional springs shown at arbitrary attachments points to the l inkage. The spring charging phase of (a) from Œ∏ini=120‚ó¶toŒ∏end=0‚ó¶. The key states are: (b) standing and (c) charged. Joints B and F are referred to hereafter as the body and foot re spectively. Revolute joints A and D are referred to as the knee joints; the knee angle, Œ∏, is the angle between the two segments. If the spring mass is a ssumed negligible, the translational and rotational springs can be placed at any ar bitrary position within the rhomboidal linkage, including the revolute joints, as shown in Fig. 3 a. But note that in practice, the distribution of the spring m ass within the linkage inÔ¨Çuences the jumping dynamics and energy e Ô¨Éciency of the system during the acceleration phase [ 16]. To charge the spring-linkage, the spring charging process b egins with the system in a standing posture, where the spring is at its natural length. The system is in contact w ith the ground via its foot (joint F); the standing knee angle is deÔ¨Åned as the initial standing angle Œ∏ini(Fig. 3 b). A charging force, Fc, is applied on the body (joint B) to compress the linkage system; the charging force is typicall y applied by an electric motor. The displacement of the body is expressed as a function of knee angle, y=d(sinŒ∏ini 2‚àísinŒ∏ 2). (2) The work done by the charging force in displacing the spring i s stored as elastic potential energy in the spring. The charging process will stop either when the spring restoring force reaches the peak charging force, Fmax, or when the linkage mechanism has been fully depressed (where Œ∏=0‚ó¶and links BA and BD have rotated to become parallel with links FA and FD, respectively); in both cases the system is cl assiÔ¨Åed as being charged. When charged the knee angle is deÔ¨Åned asŒ∏end(Fig. 3 c). The stroke length is the displacement of joint B measured from full extension ( Œ∏=180‚ó¶) to fully depressed. During the process, inertial forces are neglected in the compression phase where the acceleration is considered to be negligible. Frictional forces are also n eglected. Therefore the charging force is assumed to equal the spring restoring force. The spring deÔ¨Çection under the s ystem self-weight is neglected in this analysis as jumping 4 robots typically have a higher charging force than their bod y weight. For example, in [ 12], the ratio of the peak force to the system weight exceeds 50 and in [ 2], this ratio surpasses 400. For reference, an ideal constant force system produces a con stant spring restoring force equal to the peak force and independent of the spring displacement. Its elastic pot ential energy storage is PEmax=Fmaxd.Section 3 will examine the four spring-linkage models ( Fig. 4 ) and the energy they store, in comparison to the idealised sy stem. 3. Theoretical models The elastic potential energy that can be stored within a spri ng-linkage system is determined by the locations at which the spring(s) is connected to the linkage, the natural spring length and sti Ô¨Äness, and also the peak spring charg- ing force. Fig. 3 a is a generalised example of a rhomboidal linkage with multi ple translational and rotational springs. This section will provide analytical expressions for the re quired spring charging force in the generalised spring ar- rangements. It will introduce four spring arrangement mode ls that yield simple analytical expressions for the require d spring charging force as a function of the displacement and t he spring stiÔ¨Äness. Note that there is no generalised analytical solution to the elastic energy storage (the inte gral of spring charging force and displacement) of the sprin g- linkage except for the speciÔ¨Åc spring arrangements, such as the vertical ( Section 3.1.1 ), horizontal ( Section 3.1.2 ) and rotational springs ( Section 3.4 ).Section 6.2 will present the numerical solutions for the elastic energy stored in these four models and study the inÔ¨Çuence of multiple springs with the same or di Ô¨Äerent spring orientations on energy storage. To charge a translational spring that is connected to a rhomb oidal linkage the ends of the spring must be connected to two diÔ¨Äerent links. The three possible combinations of the pairs of links that the spring can connect to are: (1) BA and FD ( Fig. 4 a), (2) BA and DB ( Fig. 4 c), and (3) BA and AF ( Fig. 4 e); note that for each spring arrangement there is an equivalent system where the spring is mirrored about th e line BF. Thespring positioning ratios ,Œ≥i, are length ratios that deÔ¨Åne the orientation of the spring ( Fig. 4 ):Œ≥1=LBK1/LBA= LFK2/LFD,Œ≥2=LBK1/LBA=LDK2/LDBandŒ≥3=LBK1/LBA=LAK2LAF, where LBK1is the length of B to K 1,LFK2is the length of F to K 2,LDK2is the length of D to K 2,LAK2is the length of A to K 2,LBAis the length of link BA, LFDis the length of link FD, LDBis the length of link DB and LAFis the length of link AF. The angle between the spring and link BA is donated as œÜi, which can be expressed as a function of Œ≥iand the spring length, Lc:œÜ1=sin‚àí1(dsinŒ∏/2Lc), œÜ2=sin‚àí1(LDK2sinŒ∏/Lc) and phi3=sin‚àí1(LAK2sinŒ∏/Lc). If the spring end points are translated along their respecti ve links while retaining the same spring orientation, the force-length proÔ¨Åle and elastic energy remain unchanged. F or example, in Fig. 4 a ifLBK1is reduced 50% and LFK2 is increased 50% the spring translates, the angle œÜ1is unchanged, and the maximum elastic potential energy that can be stored in the system for a given peak charging force remain s unchanged. However, if the orientation of the spring were to change, or if the end points were to be connected to di Ô¨Äerent links, the elastic potential energy storage would change. Therefore the value of Œ≥i, and the pair of links being connected, are the two pieces of i nformation required to characterize the system behaviour. (a) A D FB FRFc Fig. 4. The quasi-static models and free-body diagrams of a spring- linkage formed by a rhomboidal linkage and a translational s pring attached to links: (a)-(b) BA and FD, (c)-(d) BA and BD, and (e)-(f) BA and FA.Fcis the spring-charging force, Fkis the spring restoring force and FRis the ground reaction force. 5 3.1. Model A: Translational spring connecting links BA and F D The Ô¨Årst model ( Fig. 4 a, b) places the translational spring with its ends, K 1and K 2, connecting links BA and FD. The spring charging force is expressed as, Fc=k‚àÜLc sinŒ∏2 sinŒ∏ 2[(1‚àíŒ≥1) sin(Œ∏ 2+œÜ1) cosŒ∏ 2+Œ≥1cos(Œ∏ 2+œÜ1) sinŒ∏ 2], (3) where‚àÜLcis the spring deÔ¨Çection from its natural length and can be exp ressed as a function of the knee angle and Œ≥1, ‚àÜLc=Lc,ini‚àíLc=d 2[/radicalbig (1‚àí2Œ≥1)(1‚àí2Œ≥1‚àí2 cosŒ∏ini)+1‚àí/radicalbig (1‚àí2Œ≥1)(1‚àí2Œ≥1‚àí2 cosŒ∏)+1]. (4) The elastic potential energy storage of the spring is given a sEPE=/integraltext Fcdy=/integraltext FkdLc.Note that this model includes two particular spring arrangements that have been used in previous jumping robots: vertical springs ( Œ≥1=0, LBK1=LFK2=0) and horizontal springs ( Œ≥1=1,LBK1=LFK2=d/2), which are discussed in Section 3.1.1 and Section 3.1.2 . 3.1.1. Vertical spring linkage The vertical spring linkage is a linear translational spring with its spring axi s aligned with the spring charging force, and its ends. An example is a spring with its ends conne cted to joints H and F of the rhomboidal linkage. The spring-charging force is, Fc=kd(sinŒ∏ini 2‚àísinŒ∏ 2). (5) The elastic potential energy stored in the spring is EPE=/integraltext Fcdy=/integraltext FkdLc, so that, EPE=Fmaxd 2(sinŒ∏ini 2‚àísinŒ∏ 2). (6) A quasi-static model of this system behaves identically to a linear spring system with a prismatic linkage; it has a linear force-length proÔ¨Åle ( Fig. 5 a) and stores exactly 50% energy of the idealised spring ( Fig. 5 b). The vertical spring linkage is included here for completeness and for direct com parison with the nonlinear spring linkages presented in this paper. 3.1.2. Horizontal spring linkage Thehorizontal spring linkage is a linear translational spring placed in a rhomboi dal linkage with its spring axis is perpendicular to the spring charging force vector. In pra ctice this conÔ¨Åguration can be created by connecting an extension spring between the knee joints of the rhomboidal l inkage mechanism, and has been demonstrated in various jumping robots [ 8,9,13,19‚Äì27]. The spring-charging force is, Fc=kdtanŒ∏ 2(cosŒ∏ 2‚àícosŒ∏ini 2). (7) Note that there is a singularity in Eq. (7) atŒ∏ini=180‚ó¶, meaning that the mechanism cannot be compressed from a fully upright standing posture by applying a vertical forc e; in practice, the compression can be started at an angle slightly lower than Œ∏ini=180‚ó¶. The knee angle at which the peak charging force is required, Œ∏ES,P, can be solved analytically by di Ô¨Äerentiating Eq. (7) with respect to the knee angle: Œ∏ES,P=2 cos‚àí1[(cosŒ∏ini 2)1/3]. (8) The elastic potential energy stored in the spring is EPE=/integraltextŒ∏ini Œ∏endFkdŒ∏, which is expressed as, EPE=Ô£±Ô£¥Ô£¥Ô£¥Ô£¥Ô£¥Ô£≤Ô£¥Ô£¥Ô£¥Ô£¥Ô£¥Ô£≥Fmaxd(cosŒ∏end 2‚àícosŒ∏ini 2)2 2 cosŒ∏ES,P 2(cosŒ∏ES,P 2‚àícosŒ∏ini 2),ifŒ∏end‚â§Œ∏ES,P Fmaxd(cosŒ∏end 2‚àícosŒ∏ini 2) 2 cosŒ∏end 2, ifŒ∏end‚â•Œ∏ES,P(9) 6 Fig. 5. The (a) motor force and (c) stored elastic energy of the rhomb oidal linkage with the three di Ô¨Äerent spring arrangements throughout the spring-charging process. The initial angles for each model are chosen to maximise the stored elastic potential energy f or a given peak motor force and system size. To avoid the singularity in Eqs. (5) and(14), both the rotational spring (red) and the vertical spring (b lue) systems are initially charged atŒ∏ini=179.9‚ó¶; the horizontal spring (green) is charged at Œ∏ini=152‚ó¶. The ideal spring system assumes the compression force to re main constant and equal to the peak throughout the entire chargin g phase, which achieves the maximum amount of elastic energy . Note that the motor force is normalised by the peak motor force and the energy is n ormalised by the maximum elastic energy stored in the ideal s pring system. The compressed stroke length (deÔ¨Åned as the displacement of the body from upright, where Œ∏ini=180‚ó¶) is normalised by the characteristic length of the linkage mechanism. The horizontal spring has to be charged at 152‚ó¶so to obtain the maximum energy. During the spring-charging phase the force increases when the linkage is compressed bef ore reaching a peak at the knee angle of 103‚ó¶(Fig. 5 a, b). As the horizontal spring continues to extend the force reduc es, and at maximum compression the spring stores nearly 60% of the ideal spring energy. The nonlinear force-displac ement proÔ¨Åle was cited by [ 8] as a means of increasing power output at the early stages of a jump to negate the e Ô¨Äect of the premature take-o Ô¨Äin reducing jump height that has been observed for vertical spring robots in [ 7]. However, [ 16] will show the early take-o Ô¨Äis caused by the centripetal force acting on the rotational body and is unrel ated to the spring force proÔ¨Åle. From the results shown in [16], the improvement in jump height noted in [ 8] when using horizontal instead of vertical springs is propo sed as being due to the increase in stored elastic potential energy , and not due to premature take-o Ô¨Ä. 3.2. Model B: Translational spring connecting links BA and D B In the second model ( Fig. 4 c, d), the translational spring ends K 1and K 2connect links BA and DB, respectively. This conÔ¨Åguration has yet to be shown in any existing jumping robot design except for the case of the horizontal spring (Œ≥2=0.5). The spring charging force is given as, Fc=k‚àÜLc sinŒ∏sinŒ∏ 2[(2Œ≥2‚àí1) sin(œÜ2‚àíŒ∏ 2) cosŒ∏ 2+Œ≥2cos(œÜ2‚àíŒ∏ 2) sinŒ∏ 2], (10) 7 (a)Fc FRFAB DœÑk œÑk(b) ABFc /2 Fx A FœÑk Fig. 6. The quasi-static models and free-body diagrams of a spring- linkage formed by a rhomboidal linkage and rotational sprin gs at the knee joints A and D. Fcis the spring-charging force, Fkis the spring restoring force and FRis the ground reaction force. where‚àÜLcis the change of the spring length from its natural length exp ressed as, ‚àÜLc=Lc,ini‚àíLc=d 2[/radicalbig 2Œ≥2(Œ≥2‚àí1)(1‚àícosŒ∏ini)+1‚àí/radicalbig 2Œ≥2(Œ≥2‚àí1)(1‚àícosŒ∏)+1]. (11) whenŒ≥2=0.5, the system is representative of the horizontal spring sys tem. 3.3. Model C: Translational spring connecting links BA and A F The third model ( Fig. 4 e-f) uses a linear translational spring with ends K 1and K 2connecting links BA and AF, respectively. This spring conÔ¨Åguration has been used in [ 20]. The spring-charging force is, Fc=k‚àÜLc sinŒ∏sinŒ∏ 2[sin(œÜ3+Œ∏ 2) cosŒ∏ 2+(2Œ≥3‚àí1) cos(œÜ3+Œ∏ 2) sinŒ∏ 2], (12) where‚àÜLcis the change of the spring length from its natural length exp ressed as, ‚àÜLc=Lc,ini‚àíLc=d 2[/radicalbig 2Œ≥3(Œ≥3‚àí1)(1+cosŒ∏ini)+1‚àí/radicalbig 2Œ≥3(Œ≥3‚àí1)(1+cosŒ∏)+1]. (13) whenŒ≥3=0.5, the system is representative of the vertical spring syste m. 3.4. Model D: Rotational spring In the fourth model, a linear rotational spring is placed at j oint A ( Fig. 6 a), as demonstrated in [ 11]. By inspecting Fig. 4 b, the charging force is calculated by dividing the rotation al spring torque by the moment arm of the applied force (the projection of a link‚Äôs length on axis AD) as, Fc=2kr(Œ∏ini‚àíŒ∏) dcosŒ∏ 2, (14) where kris the rotational spring sti Ô¨Äness. As with the horizontal spring, there is a singularity i nEq. (14) when Œ∏=180‚ó¶. The elastic potential energy stored in the spring is given a sEPE=/integraltext Fcdy=/integraltext œÑk,dŒ∏: EPE=1 4Fmaxd(Œ∏ini‚àíŒ∏end) cosŒ∏end 2. (15) The rhomboidal linkage with rotational springs can store up to 78% of the elastic potential energy of the idealised system whenŒ∏ini‚ÜíœÄandŒ∏end=0, as shown in Fig. 5 b. The force-length and energy-length proÔ¨Åles ( Eq. (14) and Eq. (15) ) of this spring-linkage conÔ¨Åguration are independent of th e locations and numbers of the rotational springs. For example, placing a pair of rotational springs at joints B and F (as in [ 10,12]]) or using an elastic cage [ 2,15] would yield the same force and energy relationship during ch arging. In practice, this feature allows the system to redistribute the mass towards the top of the system while ret aining the same energy storage, which is shown in [ 16] as an approach to increase the elastic-kinetic energy e Ô¨Éciency. 8 4. Experimental setup of nonlinear spring characterisatio n A physical experiment was conducted to validate the quasi-s tatic models. The experiment measured the force- displacement relationship of a rhomboidal linkage with rot ational springs and horizontal springs. 4.1. Experimental model The experimental model is a closed-chained linkage mechani sm formed by four links, two knee joints, a body and a foot ( Fig. 7 a). Each link is a carbon Ô¨Åbre rod measuring 15cm long, with a 6 mm diameter circular cross-section. The ends of the rods are connected to a knee joint and either a b ody or foot component. The knee joint, fabricated from polylactic acid (PLA), also serves as the spring housin g for the translational spring and the rotational springs. The body and the foot components, also made of PLA, function a s mounting platforms for attaching the linkage to the test rig ( Fig. 7 b), which will be introduced later. The design has a single de gree of freedom and can only articulate translationally following the 1m long Igus T linear guide ra il (Fig. 7 c). Inspired by [ 8,12], this is achieved by the pairs of synchronised gears located at the end of each link. Low fri ction bearings MF52ZZ are installed in each revolute joint with planet-based lubricants to minimise the frictio nal eÔ¨Äect during the articulation. 4.2. Spring arrangements Two experiments were conducted with di Ô¨Äerent springs. The Ô¨Årst experiment used a linear translatio nal spring in the horizontal spring linkage arrangement. The spring has a natural length of 8cm a nd stiÔ¨Äness of 200Nm‚àí1[28]. The spring is attached to the knee joints of the linkage. The n atural spring length gives the system an initial standing angle,Œ∏ini=164‚ó¶; there was no observable deÔ¨Çection caused by the system weig ht. The maximum stretched length of the spring gives the terminal angle, Œ∏end=44‚ó¶. The second experiment used a pair of rotational springs atta ched to the knee joints. Each spring has a spring stiÔ¨Äness of 0.7Nmrad‚àí1and a natural angle of 178‚ó¶[29]. The initial angle of the second experiment is equal to the natural angle of the spring; again, there was no observable d eÔ¨Çection under the system weight. The terminal angle of the system, is 28‚ó¶, where it cannot be compressed further due to contact being m ade between links BA and FA. 4.3. Experiment setup The linkage was mounted on a 1m long Igus T linear guide rail, w ith the translational degree of freedom perpen- dicular to gravity, measured using a sprit level. A supporti ng structure was made using extruded aluminium proÔ¨Åle beams ( Fig. 7 b). The rig was placed on a Ô¨Çat surface of a laboratory bench. T he entire structure was assumed to be perfectly rigid. A string is connected to the body of the expe rimental model to a load via a pulley; the string and load path are assumed parallel to the local gravity vector. The sp ring-linkage is compressed by the load. The load was incremented in 100gram steps, and the displacement of the sy stem was recorded visually (to the nearest 1mm) using a ruler aligned parallel to the guide rail. Each experiment w as repeated 10 times. Error bars of measured displacements were calculated by div iding the standard deviation by the square root of the mean of the measurements using the inbuilt function, errorbar() , in Matlab. During the experiments there were no observable deformations of the structure of the linkage o r the rig, and so measurements of the system deÔ¨Çections under load were assumed to be due to deÔ¨Çections of the spring a lone. Translational displacement FootBodyTranslational displacement String LoadPulleyLinear guide rail Synchronised gear Knee joints(a) (b) (c) Fig. 7. (a) CAD model of the experimental model and the setup of the ex periment shown in (b) isometric and (c) side views. 9 Fig. 8. Validation of the (a) horizontal and (b) rotational springs theories with the Simscape simulation model and the static e xperiment. The input force is normalised by the peak force in the theoretical mode l. 5. Numerical models The normalised elastic energy stored in the analytical mode ls inSection 3 will be presented in Section 6.2 to show the inÔ¨Çuence of the spring orientation and number of springs on the energy storage. The elastic energy was computed by the numerical integration of the spring charging force ( Eq. (3) ,Eq. (10) andEq. (12) ) over the displacement of the body ( Eq. (2) ) using the Matlab inbuilt function, cumtrapz() , with 1000 data points space uniformly between Œ∏iniand Œ∏end. Further increase in data points resulted in less than 0.1% c hange in all results. A second numerical multibody dynamics model was developed u sing the Matlab Simulink (Simscape Multibody toolbox library ) to verify the analytical models in Section 3 . This toolbox simulates the system dynamics under inertial-, applied external-, and spring-forces and momen ts. By default this toolbox simulates system dynamics, including inertial e Ô¨Äects. Here, a quasi-static solution was obtained by incorpo rating a PD controller to apply a charging force based on a setpoint of required system displa cement. The derivate term ensured that the system velocity and acceleration tended to zero for the given setpo int, and hence inertial e Ô¨Äects could be neglected, making the model equivalent to the analytical models. The geometry of the system was deÔ¨Åned as being equal to that of the experiment. The link masses are each set as 0.00001kg, so as t o be negligible for consistency with the analytical model. The modelling parameters for translational spring a rek=200Nm‚àí1,Œ∏ini=164‚ó¶andŒ∏end=0.01‚ó¶, and for the rotational spring, kr=0.7Nmrad‚àí1,Œ∏ini=170‚ó¶andŒ∏end=0.01‚ó¶. Simulations are computed using a Ô¨Åxed timestep step solver (ODE3) with a timestep of 0.0001s; further reduc tion in timestep yielded less than 0.1% change in all results. 6. Results This section will show the inÔ¨Çuence of the spring numbers and locations on the energy storage capacity of the spring-linkage system. It will Ô¨Årstly present the experime nts and numerical models to validate the analytical models of the rhomboidal linkage with the horizontal spring or rota tional springs. The remainder of the results will show that the addition of a single translational spring creates a nonl inear spring that can store up to 65% energy of an idealised constant force spring system. This is 13% lower than that ach ieved with rotational springs (see Section 3 ). Two example ideal constant force springs will be illustrated by combining the rhomboidal linkage and multiple springs. 6.1. Experimental validation of the theoretical models The experimental data in Fig. 8 follow the trends predicted by the numerical simulation in Section 5 and the analytical models in Section 3.1.1 andSection 3.1.2 . The numerical and analytical models are in agreement to wit hin the machine precision of the computation. In the case of the h orizontal spring ( Fig. 8 a) the experimentally measured peak spring charging force is 2.6% higher than the theoretic al prediction. The minimum knee angle in the experiment isŒ∏=44‚ó¶, limited by the maximum stretch length of the spring. 10 For the rotational spring ( Fig. 8 b) the measured force is 2.2% lower than the predicted value a tŒ∏=28‚ó¶, which is the minimum knee angle limited by the physical constraints o f the linkage. Potential sources of discrepancy between the theoretical and experimental results include nonlinea rity in the spring torque-displacement and force-displace ment behaviour. However, the error magnitudes are regarded as be ing suÔ¨Éciently small to assume that the analytical and numerical models are representative of the quasi-static be haviour of the linkage systems that they model. 6.2. The eÔ¨Äect of spring orientation and number of springs on energy sto rage Fig. 9 shows the elastic potential energy storage and the required spring stiÔ¨Äness of a rhomboidal linkage system with diÔ¨Äerent linear spring placements. The maximum spring chargin g force and system characteristic length is constant for all cases. The spring sti Ô¨Äness is selected to enable full compression of the system by t he given charging force. The minimum elastic potential energy is stored when t he spring is placed vertically (V1 in Fig. 9 ). This spring orientation incurs greater spring displacement than in oth er orientations. As mentioned in Section 3.1.1 , the linkage mechanism is redundant in this case because the charging for ce and the spring axis are collinear. There is no horizontal force or torque applied by the linkage so the spring is una Ô¨Äected by the presence of the linkage. The vertical spring has the lowest stiÔ¨Äness of all the spring orientations tested to be fully compre ssed by a given charging force. The maximum elastic potential energy storage of the rhomboi dal linkage is realised as the spring orientation tends to be parallel with any link in the mechanism (e.g. E1 in Fig. 9 ai). The energy stored is up to 65% of the energy stored in an idealised spring. However, as the spring tends to this o rientation its displacement tends to zero throughout the charging phase and the required spring sti Ô¨Äness tends to inÔ¨Ånity. So in practical terms this optimum ene rgy condition cannot be realized. A normalised energy of 62% of the idealis ed system can be achieved with a position factor of 0.8 and normalised stiÔ¨Äness of 3.5, as shown in E2 in Fig. 9 ai and bi. It should be noted that the spring sti Ô¨Äness would also inÔ¨Çuence its mass, which is not taken into con sideration here. It is plausible that using a sti Ô¨Äer spring would increase the system mass, and potentially re quire additional mass for spring housings [ 20], which in turn would reduce the elastic-kinetic energy con version eÔ¨Éciency [ 16]. In comparison, a horizontal spring (around 60% of ideal spring energy) char ges 5% less energy than the maximum, but it can be easily installed to the knee joints of the linkage (e.g. an elastic b and connected to the revolute joints [ 9,21]) and requires a less stiÔ¨Äspring (e.g. H1 in Fig. 9 ai and bi). A practical problem with this approach is the lack of system compactness and protection if the spring stretches across the middle of a robotic mechanism. Changing the spring in position, or the links to which it conn ects, while retaining its orientation does not change the elastic potential energy storage of the system. This is b ecause the required spring sti Ô¨Äness will vary to compensate for the change in the available spring displacement of each s pring placement. The caveat in this argument for real- world springs (e.g. helical spring) is that they have Ô¨Ånite m inimum lengths, which limits the extent to which spring length and stiÔ¨Äness can be traded o Ô¨Ä. Increasing the number of springs of a given orientation does not change the energy storage capacity of a system. This is shown in V3 and H3 in Fig. 9 ai and bi, where the spring number is doubled but each spring i s also 50% less stiÔ¨Ä compared to V2 and H2; the normalised energy remains unchang ed under a given force and characteristic length. This Ô¨Ånding is interesting given previous research into jumping robots that use multiple springs (e.g. [ 2,10,12,14,21]) to reach a desired stiÔ¨Äness. It is hypothesised that the intention of these works wa s to create a bespoke spring sti Ô¨Äness so as to enable full compression of the system by their given m otor force. The key to changing the energy storage capacity of a spring-l inkage is to use multiple springs with di Ô¨Äerent spring orientations, or to use di Ô¨Äerent spring types. By doing so, the resultant force-length proÔ¨Åle of the multi-spring- linkage mechanism is the superposition of force-length pro Ô¨Åles of the individual spring-linkages, as shown in Fig. 10 . Therefore, it is conceptually possible to create an idealis ed constant force spring using a rhomboidal linkage with a vertical spring and horizontal spring with the same sti Ô¨Äness ( Fig. 10 a). The gradients of the force-stroke length lines of the two springs are of equal magnitude but opposite sign. T he summation of the two yields a constant force system, equivalent to the ideal springs referred to throughout this paper (though noting the singularity of the horizontal spri ng atŒ∏=180‚ó¶is still present in the combined system). Implementing this system in a practical robot would likely utilise a helical compression spring for the vertical spring, which would require a means of preventing buckling. Fig. 10 b illustrates a multi-spring system that is straightforwar d to implement in a practical jumping robot, and stores 97% of the elastic energy of the idealised system. The system uses rotational springs at the knees, and horizontal spring. This approach has been implemented in a previous jum ping robot [ 12], however, it was recorded to only store 11 E   	  Fig. 9. The (ai-aiii) energy and (bi-biii) required spring sti Ô¨Äness of the rhomboidal linkage with translational spring pl aced at the orientation deÔ¨Åned by the factors,Œ≥i. The energy capacity of the spring-linkage system depends o n the spring orientation for a given actuation force and syst em length, and is independent of the number of springs at the same orient ation, which only a Ô¨Äects the required spring sti Ô¨Äness of the system. These can be seen from the examples of vertical springs (V1-V3) and horiz ontal springs (H1-H3). Note that the energy and the spring st iÔ¨Äness are normalised by the peak actuation force and the characteristic length of the system. For reference, the light grey lines in (a) and (b) represent the normalised energy and stiÔ¨Äness of a linear translational spring. 65% of the ideal system energy (Fig. 11 in [ 12]). The reason for this is that the sti Ô¨Äness of the chosen springs did not yield a constant force-displacement proÔ¨Åle. In practice, t he stiÔ¨Äness and the number of springs should be selected to match with the maximum force of the selected spring-chargin g motor. A near constant force-displacement proÔ¨Åle was achieved in [ 2], which combined a cage-like structure with multiple horiz ontal springs. The resultant system jumped 33m high and set the jump height record of jumping robots. It i s noteworthy that this robot only utilises 66% of its characteristic length for spring charging (as shown in Fig. 1 fvi). A key Ô¨Ånding is that the present analysis can utilize a simple mechanics model to capture the overall energetics trends seen in previous jumping robots, which have a range of intricate structures (e.g. [ 2,15,17]) The models also provide a means of proposing how the mechanical-elastic ene rgy conversion eÔ¨Éciency can be improved in previ- ous nonlinear spring-driven jumping robots.. This paper sh ows that it is mechanically relatively straightforward to develop spring-linkage systems with energy storage capaci ties that surpass that of a simple linear spring . This is particularly signiÔ¨Åcant given recent studies that have pre dicted sizing limits on jumping actuator types [ 1], but based their predictions on linear spring systems. 6.3. Application of the present theory to jumping robot tech nologies The previous sections explored the inÔ¨Çuence of the spring nu mbers and orientations on the elastic energy stor- age of spring-linkage models. This section aims to bridge th e theoretical discussion with practical implications by showcasing the real-world e Ô¨Äect of the theories developed in this paper. Hence, this sect ion will compare the energy storage between the previous spring-driven jumping robots [2,9,10,12,21,22] and the theoretical spring-linkage models. It will also predict the potential increase in the ju mp height of these previous robots through the application of the ideal spring linkage discussed in Section 6.2 . Fig. 11 shows the elastic energy storage and the jump height of the pr evious nonlinear spring-driven jumping robots. The results of the ideal and linear springs and the ge neral nonlinear spring-linkage are shown as a reference under the assumption of no inertia e Ô¨Äect. The force-to-weight ratio is deÔ¨Åned as the ratio of the s pring charging force to the weight of a system. The increase in force-to-weight ra tio of a jumping robot can be theoretically framed as using a motor with a greater peak force to charge more elastic energy while neglecting the mass increase of the spring or motor. The theoretical jump heights of the theoretical mo dels depicted in Fig. 11 b and Fig. 11 c are derived from 12 Fig. 10. The idealised systems generated by the rhomboidal linkages with the combination of di Ô¨Äerent spring types and allocations: (a) vertical spring and horizontal spring, and (b) rotational spring and horizontal spring. The second approach has already been imp lemented in [ 2,12] the elastic potential energy storage, assuming the conserv ation of energy. The dynamic e Ô¨Äects of the physical system are neglected here. As a general overview, the jump height and the elastic energy storage of the robots are lower than the theoretical boundary set by the ideal spring, which has the greatest elas tic energy storage for a given spring charging force (Section 3 ). Among the robots, the hybrid spring-linkage, which curre ntly holds the record for jump height, stores up to 64% elastic energy of the ideal spring and jumps up to 110 times its characteristic length [ 2]. However, this experimental jump height achievement is only equivalent to 25% of the theoretical maximum and is even lower than the linear spring at its respective force-to-weight ratio. The losses are attributed to the mechanical-elastic energy eÔ¨Éciency in the spring-charging phase and the elastic-kineti c energy eÔ¨Éciency in the acceleration phase. The data in Fig. 11 a suggests that the mechanical-elastic energy conversion e Ô¨Éciency in a practical spring-linkage system is independent of the spring-charging force, system weight and characteristic length, in line with the theoreti cal models presented in Section 3 . However, it is interesting to note that the energy e Ô¨Éciency of the spring-linkage robots included are much lower than their respective theoretical m aximum. A notable example is the MSU jumper [ 10]. As a rotational spring-linkage, it can store up to 78% of ideal sp ring energy but [ 10] could only manage 37%, which is even lower than a linear spring. The main reason of this is the phys ical constraint imposed by the mechanism design of the robot. The cam design restricts the articulation of the robo t and consequently hampers the spring from reaching its full charge. This issue is addressed in another rotational sprin g-linkage, the TAUB jumper [ 11], as shown in Fig. 1 Ô¨Åv. But despite that it still reaches only 65% e Ô¨Éciency, which remains 13% below the theoretical maximum for a rotational spring linkage. The reason of this is the sti Ô¨Äness of the chosen spring does not match with the peak spring c harging force. Therefore, to e Ô¨Äectively implement the design guidelines presented in this paper, a case-speciÔ¨Åc study would be required to design the articulated mechanism and manufac ture bespoke springs tailored to the speciÔ¨Åc requirements of individual spring-linkage robots. In the pursuit of 100% mechanical-elastic energy conversio n eÔ¨Éciency of the existing spring-linkage designs, this work presented a potential route by combining a rhomboidal l inkage with the vertical and horizontal springs to form an ideal spring ( Section 6.2 ).Fig. 11 b approximates the e Ô¨Äect of implementing this approach on the jump height of the previous jumping robots (shown as orange markers). The r esults show a substantial increase in the jump height from 50% to over 160%. Nonetheless, it is noted that none of th e examples reached the theoretical maximum set by the ideal spring-driven system. More interestingly, the impro ved jump height of some robots remains lower than the linear spring-driven system. For example, the hybrid spring-link age using the ideal spring-linkage ( Fig. 11 c) would increase its normalized jump height from 110 to 172, which is around 39 % of its theoretical maximum and is below the linear spring of its respective force-to-weight ratio. The remain ing 61% of the energy loss is attributed to the ine Ô¨Écient elastic-kinetic energy conversion during the acceleratio n phase, caused by the rotational and unsprung masses in the 13 M     (b) (a) (c)      I     ! #$ % & ) * + ,- . / R 0 12 34 5 6 7i 8 9 :; < = > ? f @ AB T D G H JK L N OP QmS UV WX YZ [ \ ] ^_ `a b c d eg h jkl n o p q rs t u vw x yz { |} ~¬Ä ¬Å ¬Ç Fig. 11. (a) The elastic energy storage and (b) the jump height of the p revious spring-driven jumping robots with spring-linkage mechanisms [2,9,10,12,21,22], compared to the spring-linkages, the ideal and linear spr ing models, , assuming no inertia e Ô¨Äect. None of the robots have stored more elastic energy or achieved a higher jump height t han the equivalent ideal spring system at a given force-to-w eight ratio. (c) The experimental jumping trajectory of the hybrid spring linka ge [2] and the predicted jumping trajectory of the same robot usin g the ideal spring- linkage and without the inertia and aerodynamic e Ô¨Äects. Note that the elastic energy is normalised by the elast ic energy stored in the ideal spring and the jump height is normalised by the characteristic leng th of the system. The force-to-weight ratio is the ratio of th e peak spring charging force (e.g. from a motor), Fmax, to the weight of the system. The jump height of the robots is d erived from the experimental measurement of the take-o Ô¨Ä velocity, vto, using the formula, h=1 2gv2 to; the jump height of the theoretical models is derived by its s tored elastic energy by the formula, h=EPE mg, with the dynamic e Ô¨Äect being neglected. The white makers indicate the original energy storage and jump height of the robots; the orange make rs indicate the improved jump height of the robot using the idea l spring-linkage mechanism in this work; the purple markers indicate the theoretical jump height maximum of the robot using the ideal spring-link age mechanism and without the dynamic e Ô¨Äect. physical linkage [ 16]. While this might appear to be a drawback inherent to the mec hanism, it does not imply that the spring-linkage is impractical. Traditional prismatic mec hanisms (e.g. [ 7]) also experience energy loss due to unsprung foot mass [ 16]. Therefore, while a spring-linkage su Ô¨Äers from ineÔ¨Écient elastic-kinetic energy conversion due to the inertia eÔ¨Äect, it can still yield a greater jump height than a physical p rismatic linear spring system due to the increased elastic energy storage as shown in [ 8]. 7. Conclusion This paper presented an energetics analysis of nonlinear sp rings formed by combining rhomboidal linkage and linear springs. The knowledge can be applied to the design of spring-driven jumping robots, as one of the common goals of this class of jumper is to maximise the stored elasti c energy in a spring, in order to increase mechanical- kinetic energy conversion e Ô¨Éciency. Jumping performance (e.g. jump height, power) is no t dependent on elastic energy storage alone, but is also determined by the conversi on of the elastic energy to kinetic energy. However, to make this problem tractable the present paper tackled the Ô¨År st stage of the energy conversion from mechanical work to elastic energy, and [ 16] deals with the second stage of converting elastic to kineti c energy. A rhomboidal linkage with a translational spring orientate d nearly parallel with any one of the links stores around 65% of the energy of an ideal spring. This provides higher ela stic energy storage compared to other translational spring arrangements. Also, aligning a spring nearly parallel to a l ink oÔ¨Äers a compact structural package that protects the spring from being exposed to the dangers of the environment. A caveat with this Ô¨Ånding is that as the spring orientation tends to being parallel with a link, the spring displacement reduces and the required spring sti Ô¨Äness increases. This may in turn reduce the overall elastic-kinetic conversion e Ô¨Éciency after inertial e Ô¨Äects are considered. In terms of overall compactness, the rotational spring also stands out as a viable design option, and is shown here to be capable of storing around 78% of the elastic energy of th e ideal spring. The analysis also showed that rotational springs can be applied at any joint, o Ô¨Äering the ability to adjust the mass distribution of a jumpin g system, which is known to be a critical factor in elastic-kinetic energy conv ersion [ 16]. 14 Combining diÔ¨Äerent classes or springs within a rhomboidal linkage has bee n shown here to be a means of achiev- ing higher energy storage than with a single spring. This pap er formulates two approaches to creating a near-ideal nonlinear spring. The Ô¨Årst approach uses a rhomboidal linka ge with vertical and horizontal springs to create a constant force spring, with 100% mechanical-elastic energy convers ion. The second approach uses a rhomboidal linkage with rotational and horizontal springs, which stores up to aroun d 97% energy of an ideal spring. In practice, the challenge of realising these design concepts is sourcing springs with the correct stiÔ¨Äness properties, which would require be- spoke spring design as in [ 2,12]. Also, the exposure of the horizontal spring to the environ ment may make the design impractical for some jumping robot applications, such as pl anetary exploration. References [1] M. Ilton, M. S. Bhamla, X. Ma, S. M. Cox, L. L. Fitchett, Y . K im, J. sung Koh, D. Krishnamurthy, C.-Y . Kuo, F. Z. Temel, A. J . Crosby, M. Prakash, G. P. Sutton, R. J. Wood, E. Azizi, S. Bergbreiter , S. N. Patek, The principles of cascading power limits in sma ll, fast biological and engineered systems, Science 360 (6387) (2018) 1082. doi:10.1126/science.aao1082 . [2] E. W. Hawkes, C. Xiao, R.-A. Peloquin, C. Keeley, M. R. Beg ley, M. T. Pope, G. Niemeyer, Engineered jumpers overcome bi ological limits via work multiplication, Nature 604 (7907) (2022) 657‚Äì661. doi:10.1038/s41586-022-04606-3 . [3] Z. ZiQiang, Z. Jing, C. HanLong, C. DianSheng, A survey of bioinspired jumping robot: Takeo Ô¨Ä, air posture adjustment, and landing bu Ô¨Äer, Applied Bionics and Biomechanics 2017 (Article ID 4780160) (2017) 22. doi:10.1155/2017/4780160 . [4] X. Mo, W. Ge, M. Miraglia, F. Inglese, D. Zhao, C. Stefanin i, D. Romano, Jumping locomotion strategies: From animals t o bioinspired robots, Applied sciences 10 (23) (2020) 8607‚Äì. doi:10.3390/app10238607 . [5] G. Ribak, Insect-inspired jumping robots: challenges a nd solutions to jump stability, Current Opinion in Insect Sc ience 42 (2020) 32‚Äì38. doi:10.1016/j.cois.2020.09.001 . [6] C. Zhang, W. Zou, L. Ma, Z. Wang, Biologically inspired ju mping robots: A comprehensive review, Robot. Auton. Syst. 1 24 (C) (feb 2020). doi:10.1016/j.robot.2019.103362 . [7] P. Fiorini, S. Hayati, M. Heverly, J. Gensler, A hopping r obot for planetary exploration, in: 1999 IEEE Aerospace Con ference. Proceedings (Cat. No.99TH8403), V ol. 2, 1999, pp. 153‚Äì158 vol.2. doi:10.1109/AERO.1999.793156 . [8] E. Hale, N. Schara, J. Burdick, P. Fiorini, A minimally ac tuated hopping rover for exploration of celestial bodies, i n: Proceedings 2000 ICRA. Millennium Conference. IEEE International Conference on R obotics and Automation. Symposia Proceedings (Cat. No.00C H37065), V ol. 1, 2000, pp. 420‚Äì427 vol.1. doi:10.1109/ROBOT.2000.844092 . [9] A. Macario-Rojas, B. Parslew, A. Weightman, K. L. Smith, Clover robot: A minimally actuated jumping robotic platfor m, Machines 10 (8) (2022).doi:10.3390/machines10080640 . [10] J. Zhao, J. Xu, B. Gao, N. Xi, F. J. Cintr¬¥ on, M. W. Mutka, L . Xiao, Msu jumper: A single-motor-actuated miniature stee rable jumping robot, IEEE Transactions on Robotics 29 (3) (2013) 602‚Äì614. doi:10.1109/TRO.2013.2249371 . [11] V . Zaitsev, O. Gvirsman, U. Ben Hanan, A. Weiss, A. Ayali , G. Kosa, A locust-inspired miniature jumping robot, Bioin spiration and biomimet- ics 10 (6) (2015) 066012‚Äì066012. doi:10.1088/1748-3190/10/6/066012 . [12] G. Jung, C. S. Casarez, J. Lee, S. Baek, S. Yim, S. Chae, R. S. Fearing, K. Cho, Jumproach: A trajectory-adjustable int egrated jump- ing‚Äìcrawling robot, IEEE /ASME Transactions on Mechatronics 24 (3) (2019) 947‚Äì958. doi:10.1109/TMECH.2019.2907743 . [13] C. Hong, D. Tang, Q. Quan, Z. Cao, Z. Deng, A combined seri es-elastic actuator and parallel-elastic leg no-latch bio -inspired jumping robot, Mechanism and machine theory 149 (2020) 103814‚Äì. doi:10.1016/j.mechmachtheory.2020.103814 . [14] J. Lo, B. Parslew, An energetic analysis of rhomboidal l inkage robots for hopping lunar exploration, in: 2021 Sec- ond International Symposium on Instrumentation, Control, ArtiÔ¨Åcial Intelligence, and Robotics (ICA-SYMP), 2021, pp . 1‚Äì5. doi:10.1109/ICA-SYMP50206.2021.9358244 . [15] R. Armour, K. Paskins, A. Bowyer, J. Vincent, W. Megill, Jumping robots: a biomimetic solution to locomotion across rough terrain, Bioinspiration and biomimetics 3 (3) (2008) 039801‚Äì. doi:10.1088/1748-3182/2/3/S01 . [16] J. Lo, B. Parslew, Jumping towards e Ô¨Éciency: Characterising the take-o Ô¨Ädynamics and energy e Ô¨Éciency in spring-driven jumping robots, manuscript in preparation (2023). [17] Y . Ma, Y . Wei, D. Kong, A biologically inspired height-a djustable jumping robot, Applied Sciences 11 (11) (2021). doi:10.3390/app11115167 . [18] Y . Zhang, L. Zhang, W. Wang, Y . Li, Q. Zhang, Design and im plementation of a two-wheel and hopping robot with a linkage mechanism, IEEE Access 6 (2018) 42422‚Äì42430. doi:10.1109/ACCESS.2018.2859840 . [19] J. Burdick, P. Fiorini, Minimalist jumping robots for c elestial exploration, The International journal of roboti cs research 22 (7-8) (2003) 653‚Äì674. doi:10.1177/02783649030227013 . [20] T. Truong, H. V . Phan, H. Park, Design and demonstration of a bio-inspired Ô¨Çapping-wing-assisted jumping robot, Bi oinspiration and Biomimetics 14 (2019) 036010. doi:10.1088/1748-3190/aafff5 . [21] G.-P. Jung, C. Casarez, S.-P. Jung, R. Fearing, K.-J. Ch o, An integrated jumping-crawling robot using height-adju stable jumping module, in: 2016 IEEE International Conference on Robotics and Automat ion (ICRA), 2016, pp. 4680‚Äì4685. doi:10.1109/ICRA.2016.7487668 . [22] J.-S. Koh, S.-P. Jung, M. Noh, S.-W. Kim, K.-J. Cho, Flea inspired catapult mechanism with active energy storage and re- lease for small scale jumping robot, in: 2013 IEEE Internati onal Conference on Robotics and Automation, 2013, pp. 26‚Äì31 . doi:10.1109/ICRA.2013.6630552 . [23] J. Zhao, G. Liu, J. Yan, X. Zang, Scout robot with wheelin g-hopping combination locomotion, Industrial robot 36 (3) (2009) 244‚Äì248. doi:10.1108/01439910910950504 . [24] L. Bai, F. Zheng, X. Chen, Y . Sun, J. Hou, Design and exper imental evaluation of a single-actuator continuous hoppin g robot using the geared symmetric multi-bar mechanism, Applied sciences 9 (1) (201 8) 13‚Äì.doi:10.3390/APP9010013 . 15 [25] M. Woodward, M. Sitti, Multimo-bat: A biologically ins pired integrated jumping-gliding robot, The Internationa l Journal of Robotics Re- search 33 (2014) 1511‚Äì1529. doi:10.1177/0278364914541301 . [26] G. Song, K. Yin, Y . Zhou, X. Cheng, A surveillance robot w ith hopping capabilities for home security, IEEE Transacti ons on Consumer Electronics 55 (4) (2009) 2034‚Äì2039. doi:10.1109/TCE.2009.5373766 . [27] W.-J. Chang, C.-L. Chang, J.-H. Ho, P.-C. Lin, Design an d implementation of a novel spherical robot with rolling and leaping capability, Mechanism and Machine Theory 171 (2022) 104747. doi:10.1016/j.mechmachtheory.2022.104747 . [28] R. PRO, Rs pro steel extension spring (751-900) (2023). [29] A. Raymond, Spec standard torsion springs (t078-180-4 53), available at https://www.asraymond.com/mechanical-wire-springs/t orsion/spec-standard-torsion-springs-122965/t078-18 0-453-r-t078180453r/?Imperial=true [accessed 3 November 2023] (2023). 16","cs.RO, physics.app-ph",Arxiv
23,Concept-Guided LLM Agents for Human-AI Safety Codesign,"Florian Geissler, Karsten Roscher, Mario Trapp",2024-04-03 11:37:01+00:00,http://arxiv.org/pdf/2404.15317v1,"Generative AI is increasingly important in software engineering, including safety engineering, where its use ensures that software does not cause harm to people. This also leads to high quality requirements for generative AI. Therefore, the simplistic use of Large Language Models (LLMs) alone will not meet these quality demands. It is crucial to develop more advanced and sophisticated approaches that can effectively address the complexities and safety concerns of software systems. Ultimately, humans must understand and take responsibility for the suggestions provided by generative AI to ensure system safety. To this end, we present an efficient, hybrid strategy to leverage LLMs for safety analysis and Human-AI codesign. In particular, we develop a customized LLM agent that uses elements of prompt engineering, heuristic reasoning, and retrieval-augmented generation to solve tasks associated with predefined safety concepts, in interaction with a system model graph. The reasoning is guided by a cascade of micro-decisions that help preserve structured information. We further suggest a graph verbalization which acts as an intermediate representation of the system model to facilitate LLM-graph interactions. Selected pairs of prompts and responses relevant for safety analytics illustrate our method for the use case of a simplified automated driving system.","Concept-Guided LLM Agents for Human-AI Safety Codesign Florian Geissler1, Karsten Roscher1, and Mario Trapp1, 2 1Fraunhofer IKS, Fraunhofer Institute for Cognitive Systems IKS, Munich, Germany 2School of Computation, Information and Technology, Technical University of Munich, Germany {florian.geissler, karsten.roscher, mario.trapp }@iks.fraunhofer.de, mario.trapp@tum.de Abstract Generative AI is increasingly important in software engineer- ing, including safety engineering, where its use ensures that software does not cause harm to people. This also leads to high quality requirements for generative AI. Therefore, the simplistic use of Large Language Models (LLMs) alone will not meet these quality demands. It is crucial to develop more advanced and sophisticated approaches that can effectively address the complexities and safety concerns of software sys- tems. Ultimately, humans must understand and take respon- sibility for the suggestions provided by generative AI to en- sure system safety. To this end, we present an efficient, hybrid strategy to leverage LLMs for safety analysis and Human-AI codesign. In particular, we develop a customized LLM agent that uses elements of prompt engineering, heuristic reason- ing, and retrieval-augmented generation to solve tasks asso- ciated with predefined safety concepts, in interaction with a system model graph. The reasoning is guided by a cascade of micro-decisions that help preserve structured information. We further suggest a graph verbalization which acts as an in- termediate representation of the system model to facilitate LLM-graph interactions. Selected pairs of prompts and re- sponses relevant for safety analytics illustrate our method for the use case of a simplified automated driving system. Introduction The advent of transformer-based (Vaswani et al. 2017) large language models (LLMs) has sparked enormous popularity of generative artificial intelligence (AI) for creative, text- based tasks. Representative of this trend is the reported record of OpenAI‚Äôs ChatPGT for the fastest growing user base of all times in February 2023 (Reuters 2023). The high quality of auto-generated text has inspired the explo- ration of LLMs for tasks that involve structured data, such as knowledge graphs. In particular, a widely desired use case is the application of LLMs to safety-analytical tasks (Jin et al. 2023; Pan et al. 2023; Wang et al. 2023), for exam- ple, reasoning about fault propagation in model graphs and associated risks. Attempts to make use of LLMs for a for- mal hazard analysis have been made with moderate success (Diemert and Weber 2023). A particular challenge lies in the transformation of ver- balized content to a structured graph information, and vice Copyright ¬© 2024, Association for the Advancement of Artificial Intelligence (www.aaai.org). All rights reserved. Intermediate  representationDatabase/ toolsetPrompt Respond Retrieve /Update  InformationDisplayGive input Call Agent System modelUser interface LLMFigure 1: Layout of the Human-AI safety codesign frame- work: A user interacts with the LLM agent through a chat prompt and receives a text response. The LLM agent inter- faces to a database containing a graph description of the sys- tem model in IR, as well as safety concepts, and analysis tools. System manipulations can update the database and al- ter the system model. The system model and its changes are displayed to the user. versa. Since the text generation process is of statistical na- ture, thus not bound by logical constraints, LLM responses will not necessarily preserve information structures of a given input. Existing strategies to tackle this problem can be broadly categorized as follows (Jin et al. 2023): 1) Prompt- engineering to encourage specific output formats or struc- tural rules; 2) Heuristic or algorithmic reasoning: Encour- aging the LLM to perform chain-of-thought (CoT) reason- ing, for example, to solve the problem step by step follow- ing self-generated or predetermined instructions; 3) Making use of external knowledge using retrieval-augmented gener- ation (RAG), for example via non-AI tools; 4) Fine-tuning or retraining models to empirically minimize the loss of struc- tured information, see e.g., GraphGPT (Tang et al. 2023). This article presents a concept-guided approach aimed at enhancing the capabilities of LLMs for graph analysis and manipulation, particularly in the context of safety-relevant developments. To achieve this goal, we have integrated the strengths of LLMs with the rigorous standards of safety en- gineering models and analysis. Starting from a structured system model graph, we first establish a verbalized interme-arXiv:2404.15317v1  [cs.SE]  3 Apr 2024 Database ofsystem description , relevant  documents and  conceptsConcept decision : 1) Safety question answering 2) System safety analysis 3) Suggestions for fault -tolerance 4) OtherPrompt Answering concept : 1a) Knowledge retrieval1 Analysis concept : 2a) Fault evaluation 2b) Critical path 2c) Single point offailureAugment with relevant text excerpts Fault propagation‚Ä¢Identify faulty start nodes ‚Ä¢Decide on and possibly specify existing faults Fault-tolerance concept : 3a) Node Replication 3b) Edge replication3 Generate reply ResponseCritical path calculation Find single points of failure‚Ä¢Identify bestcomponents /  edges forreplication ‚Ä¢Retrieve instructions for relevant concept and map itto graph manipulation sequenceCascading Decision Layer forTask Identification Task Formulation Layer Information retrieval 42LLM agent Database/ ToolsetTooling /  Lookup ‚Ä¶Graph node /edge replicationFigure 2: Outline of the workflow of LLM agent decisions and database interactions. The custom agent runs a cascading decision layer to identify the task type, and a subsequent layer to formulate the task for information retrieval. The latter looks up knowledge from a vectorstore database, or uses functional tools to calculate for example the critical path. diate representation (IR) of the system to facilitate the com- prehension of its components and relationships by the LLM. A custom LLM agent is designed who deploys a hybrid strategy featuring the techniques 1) to 3) above: The agent performs a series of LLM calls to categorize and formal- ize the task at hand according to predefined concepts. Sub- sequently, RAG techniques are leveraged to offload struc- tural computations to external functions. We test our method for the example of a simplified automated driving architec- ture, and present selected experimental results for the tasks offault propagation ,critical path finding ,single-points-of- failure detection , and node replication . Our work provides the basis for an interactive, LLM-based Human-AI safety codesign framework. Model The overall system layout is shown in Fig. 1. Key compo- nents of our architecture are explained in the following. System model and intermediate representation: The system model contains the system architecture, including the system components and their interactions, as well as ad- ditional safety-related information required to model fault propagation within the system. To ensure interoperability with established industrial meta model formats, we cre- ate the system model with the Eclipse-based OSATE tool (Carnegie Mellon University 2023) and export the resulting ECore file as xml. The elements of the xmlmodel (EClass, EReference, EAttribute) can be directly mapped onto the el- ements of a generic graph (nodes, edges, attributes). Even though LLMs are capable of reading and interpreting xml structures directly, we find that inaccuracies can be reduced when operating with a system description that has a closerresemblance with natural language. Therefore, we further verbalize the xmlsystem model to an IR which takes an in- tuitive list structure: Nodes: - Node 1 - Node 2 - ... Edges: - Node 1 --> Node 2 - ... Attributes: - Node 1: Attribute 1 - ... This IR represents the basis of system-relevant informa- tion for the LLM agent. For safety analysis, we assume that each node is subject to possible failure. In order to model the propagation of system faults, we populate graph node attributes with verbalized logic of fault gates (e.g., AND , OR,N-out-of-M ) to represent fault trees (Avi Àázienis et al. 2004; Trapp 2016). Further, start and end nodes of the sys- tem graph are specified with corresponding attributes. For the current proof-of-concept, we used an integrated system- safety model. However, in model-based safety engineering, long-lasting work has been conducted on integrating system and safety models (Domis and Trapp 2008), which can be used as a scalable basis for further development. LLM: At the core, we use OpenAI‚Äôs GPT 3.5‚àíturbo (OpenAI 2023) model for LLM inferences. As our concept- guided approach requires the LLM to solve a series of rather simple micro-decisions, we expect to see in further work, that also much smaller and simpler models such as LLama2 (Touvron et al. 2023) or Mistral-7B (Jiang et al. 2023) suf- fice for this purpose. Figure 3: Example use case of a simplified automated driving system. The node labels denote the component name (top row) and the fault gate attribute below (if none is given, an AND fault gate of all inputs is assumed). 2OO3means that two out of three of the listed inputs are required. Start and end nodes are further labeled explicitly. The figure is a pydot visualization of theECore file. LLM agent: LLMs are conveniently orchestrated by functional wrappers called agents , which can be configured to self-induce an iterative chain of thoughts, or to interface automatically to external tools and sources of information. We here use the LangChain library (Harrison Chase 2022) to design a customized agent. Importantly, we find that equip- ping an agent with multiple tools can quickly lead to inac- curate tool usage, unless the verbalized trigger conditions are well-separated in linguistic space. At the same time, for self-induced CoT flows, it is challenging to incorporate and assert procedural safety guardrails. We therefore implement a different workflow, as illus- trated in Fig. 2: The agent cascades the input prompt through a network of micro-decisions, where a single LLM call as- sociates the input with the best match among only 2-4pre- defined concepts in each decision. For example, as shown in Fig. 2, in the first decision node the agent associates the input with one of four possible task concepts of Safety question answering ,System safety analysis ,Suggestions for fault- tolerance , and Other . To improve the quality of the micro- decision, we use few-shot learning (Brown et al. 2020) by augmenting the prompts with around ten hand-crafted exam- ple triggers for each concept. The last layer of our decision network is a Task formulation layer , where the fully identi- fied task concept is used together with the given prompt to refine a specific task prompt. Finally, the external tools or information lookup mechanisms that are provided for this specific task are called and the result is rephrased as a user response. We find that this method overcomes some of the challenges mentioned above: The CoT flow is tightly guided by predefined concepts, yet allows sufficient flexibility in the prompt formulation, and tool triggers cannot overlap since they are strictly associated with specific task concepts. Database/toolset: We provide a collection of information that is retrieved from a knowledge base, or generated on de-mand with deterministic functions. This includes, but is not limited to the following: The IR of the system, documenta- tion about safety practices, a function to calculate fault prop- agation using the fault gates retrieved from the system IR, a function to calculate the critical path using Dijkstra‚Äôs algo- rithm (Dijkstra 1959) for the shortest path and start and end nodes from the IR, a function to find the single points of fail- ure, a function to replicate a given node or edge in the model IR. The usage of these tools is triggered in a predefined way depending on the identified task category. Experiments We test our model with the use case of a simplified auto- mated driving system modeled in OSATE, see Fig. 3, here visualized with pydot (Carrera 2021). Fault gates are imple- mented as respective node attributes and given in the fig- ure below the node label, for example, the ImageProcessor node will turn faulty if at least two out of three ( 2OO3) camera input nodes are faulty. To verify the effectiveness of our concept-guided agent, we test our approach with sample questions in the domain of system safety design. Representa- tive examples and results are given in Tab. 1. In all examples, we find that the tasks have been accurately identified and for- mulated, and the correct information was retrieved with the appropriate tools. For example, the agent can make sugges- tions about modifying the graph to improve fault tolerance. In our implementation, this is based on the predefined con- cept of redundancy and the usage of the tool which finds single points of failures to select the best replication candi- date. To modify the system graph, the agent uses the graph replication tool and updates the xmlmodel accordingly. We further note that, in the response, the agent leverages general knowledge to relate the functionality of the relevant compo- nents with its impact on safety. Prompt Response What happens if Radar1, Radar2 and IMU have a fault?In this scenario, the faulty components are IMU, Radar1, Radar2, and SignalProcessor. When these components have a fault, it can have several consequences for the system. The IMU (Inertial Mea- surement Unit) is responsible for measuring the orientation, velocity, and acceleration of the vehicle. If the IMU has a fault, it can lead to inaccurate measurements, which can affect the overall navigation and control of the vehicle. The radars (Radar1 and Radar2) are used for detecting and tracking objects in the environment. If these radars have a fault, it can result in missed or incorrect detections, which can impact the perception and decision-making capabilities of the system. The SignalProcessor is responsible for processing the sensor data and extracting relevant information. If the SignalProces- sor has a fault, it can lead to incorrect or incomplete data processing, which can affect the overall performance and reliability of the system. Overall, when these components have a fault, it can lead to degraded performance, reduced safety, and potentially compromised functionality of the system. Show me the crit- ical path.The critical path in the given scenario includes the following components: Camera1, Camera2, Col- lisionAvoidance, GPS, IMU, ImageProcessor, Lidar1, Map, PathPlanner, PointCloudProcessor, Sen- sorFusion, and VehicleController. The critical path represents the sequence of components that are essential for the system‚Äôs operation and have the longest duration in terms of time. These compo- nents are crucial for tasks such as perception, sensor fusion, planning, and control, and any faults or failures in these components can significantly impact the overall performance and safety of the system. Explain the criti- cal path, given the last fault.The critical path in this scenario, considering the last reported faulty system components, consists of the following components: Camera1, Camera3, CollisionAvoidance, GPS, ImageProcessor, Lidar1, Map, PathPlanner, PointCloudProcessor, SensorFusion, VehicleController, and VelocitySensor. The critical path represents the sequence of components and processes that are essential for the system‚Äôs operation and performance. Any delay or failure in these components can significantly impact the overall functionality and reliability of the system. It is important to note that the previously reported system faults, including IMU, Radar1, Radar2, and SignalProcessor, can also affect the critical path and further exacerbate the potential consequences to the system. What are the sin- gle points of fail- ure?The single point of failure components in the given scenario are PathPlanner, VehicleController, Map, SensorFusion, CollisionAvoidance, and GPS. These components are considered single points of failure because if any of them were to fail, it could result in a complete system failure or significant degradation in the system‚Äôs performance. For example, if the PathPlanner fails, the system may not be able to generate safe and efficient trajectories for the vehicle. Similarly, if the VehicleController fails, the system may lose control over the vehicle‚Äôs movements. The Map, SensorFusion, Collision- Avoidance, and GPS components are also critical for accurate perception, situational awareness, and navigation, and their failure can have serious consequences for the overall system functionality. How would you make my system safer?To make your system safer, I would suggest performing replication on the component SensorFusion. SensorFusion should be replicated because it is a critical component that relies on multiple inputs from ImageProcessor, SignalProcessor, and PointCloudProcessor. If SensorFusion fails, it can lead to incorrect data being sent to PathPlanner and CollisionAvoidance, compromising the overall safety of the system. By replicating SensorFusion, the system can continue to function even if one instance of SensorFusion fails, ensuring that accurate and reliable data is provided to the other components. Table 1: Selected example prompts and responses. Refer to Fig. 3 for the system description. The example in row three refer- ences the agent‚Äôs memory, as last fault refers to the last mentioned system fault in the chat history. Conclusion and Outlook Our approach of a concept-guided LLM agent overcomes two challenges typically encountered when solving genera- tive text tasks on structured data: 1) Chain-of-thought pro- cesses derail and no longer comply with a set of required rules, or miss their goals, 2) Trigger conditions to retrieve external information via tools become inaccurate when the number of possible options increases. Instead, we here guide the thought process with a series of micro-decisions to en- sure that the right tool triggers are met. We envision to ex- tend our setup to more concepts and larger decision cas- cades, such that more complex tasks can be tackled. Ourwork provides the basis for an interactive framework where LLMs assist in Human-AI safety codesign. Acknowledgments This work was funded by the Bavarian Ministry for Eco- nomic Affairs, Regional Development and Energy as part of a project to support the thematic development of the Institute for Cognitive Systems. References AviÀázienis, A.; Laprie, J. C.; Randell, B.; and Landwehr, C. 2004. Basic concepts and taxonomy of dependable and se- cure computing. IEEE Transactions on Dependable and Se- cure Computing , 1(1): 11‚Äì33. Brown, T. B.; Mann, B.; Ryder, N.; Subbiah, M.; Kaplan, J.; Dhariwal, P.; Neelakantan, A.; Shyam, P.; Sastry, G.; Askell, A.; Agarwal, S.; Herbert-V oss, A.; Krueger, G.; Henighan, T.; Child, R.; Ramesh, A.; Ziegler, D. M.; Wu, J.; Winter, C.; Hesse, C.; Chen, M.; Sigler, E.; Litwin, M.; Gray, S.; Chess, B.; Clark, J.; Berner, C.; McCandlish, S.; Radford, A.; Sutskever, I.; and Amodei, D. 2020. Language models are few-shot learners. Advances in Neural Information Pro- cessing Systems , 2020-Decem. Carnegie Mellon University. 2023. OSATE 2.13. https://osate.org/. Accessed: 2023-12-01. Carrera, E. 2021. pydot. https://pypi.org/project/pydot/. Ac- cessed: 2023-12-01. Diemert, S.; and Weber, J. H. 2023. Can Large Language Models Assist in Hazard Analysis? In Lecture Notes in Com- puter Science (including subseries Lecture Notes in Artifi- cial Intelligence and Lecture Notes in Bioinformatics) , vol- ume 14182 LNCS, 410‚Äì422. ISBN 9783031409523. Dijkstra, E. W. 1959. A note on two problems in connexion with graphs. Numer. Math. , 271: 269‚Äì271. Domis, D.; and Trapp, M. 2008. Integrating Safety Analy- ses and Component-Based Design. In Harrison, M. D.; and Sujan, M.-A., eds., Computer Safety, Reliability, and Secu- rity, 58‚Äì71. Berlin, Heidelberg: Springer Berlin Heidelberg. ISBN 978-3-540-87698-4. Harrison Chase. 2022. LangChain. https://github.com/langchain-ai/langchain. Accessed: 2023-12-01. Jiang, A. Q.; Sablayrolles, A.; Mensch, A.; Bamford, C.; Chaplot, D. S.; de las Casas, D.; Bressand, F.; Lengyel, G.; Lample, G.; Saulnier, L.; Lavaud, L. R.; Lachaux, M.-A.; Stock, P.; Scao, T. L.; Lavril, T.; Wang, T.; Lacroix, T.; and Sayed, W. E. 2023. Mistral 7B. arXiv:2310.06825. Jin, B.; Liu, G.; Han, C.; Jiang, M.; Ji, H.; and Han, J. 2023. Large Language Models on Graphs: A Comprehensive Sur- vey. arXiv:2312.02783. OpenAI. 2023. ChatGPT 3.5-turbo. https://openai.com/. Accessed: 2023-12-01. Pan, S.; Luo, L.; Wang, Y .; Chen, C.; Wang, J.; and Wu, X. 2023. Unifying Large Language Models and Knowledge Graphs: A Roadmap. arXiv:2306.08302. Reuters. 2023. ChatGPT sets record for fastest-growing user base - analyst note. https://www.reuters.com/technology/chatgpt-sets-record- fastest-growing-user-base-analyst-note-2023-02-01/. Accessed: 2023-12-01. Tang, J.; Yang, Y .; Wei, W.; Shi, L.; Su, L.; Cheng, S.; Yin, D.; and Huang, C. 2023. GraphGPT: Graph Instruction Tun- ing for Large Language Models. arXiv:2310.13023. Touvron, H.; Martin, L.; Stone, K.; Albert, P.; Almahairi, A.; Babaei, Y .; Bashlykov, N.; Batra, S.; Bhargava, P.; Bhosale, S.; Bikel, D.; Blecher, L.; Ferrer, C. C.; Chen, M.; Cucu- rull, G.; Esiobu, D.; Fernandes, J.; Fu, J.; Fu, W.; Fuller, B.; Gao, C.; Goswami, V .; Goyal, N.; Hartshorn, A.; Hosseini,S.; Hou, R.; Inan, H.; Kardas, M.; Kerkez, V .; Khabsa, M.; Kloumann, I.; Korenev, A.; Koura, P. S.; Lachaux, M.-A.; Lavril, T.; Lee, J.; Liskovich, D.; Lu, Y .; Mao, Y .; Martinet, X.; Mihaylov, T.; Mishra, P.; Molybog, I.; Nie, Y .; Poul- ton, A.; Reizenstein, J.; Rungta, R.; Saladi, K.; Schelten, A.; Silva, R.; Smith, E. M.; Subramanian, R.; Tan, X. E.; Tang, B.; Taylor, R.; Williams, A.; Kuan, J. X.; Xu, P.; Yan, Z.; Zarov, I.; Zhang, Y .; Fan, A.; Kambadur, M.; Narang, S.; Ro- driguez, A.; Stojnic, R.; Edunov, S.; and Scialom, T. 2023. Llama 2: Open Foundation and Fine-Tuned Chat Models. arXiv:2307.09288. Trapp, M. 2016. Assuring Functional Safety in Open Systems of Systems. https://nbn- resolving.de/urn:nbn:de:hbz:386-kluedo-44221. Vaswani, A.; Shazeer, N.; Parmar, N.; Uszkoreit, J.; Jones, L.; Gomez, A. N.; Kaiser, ≈Å.; and Polosukhin, I. 2017. At- tention is all you need. Advances in Neural Information Pro- cessing Systems , 2017-Decem: 5999‚Äì6009. Wang, H.; Feng, S.; He, T.; Tan, Z.; Han, X.; and Tsvetkov, Y . 2023. Can Language Models Solve Graph Problems in Natural Language? arXiv:2305.10037","cs.SE, cs.HC, cs.LG",Arxiv
24,A Microscopic Mechanism for Muscle's Motion,"Bao-Quan Ai, Xian-Ju Wang, Guo-Tao Liu, Liang-Gang Liu, M Nakano, H Matsuura",2003-07-02 12:47:03+00:00,http://arxiv.org/pdf/physics/0307013v1,"The SIRM (Stochastic Inclined Rods Model) proposed by H. Matsuura and M. Nakano can explain the muscle's motion perfectly, but the intermolecular potential between myosin head and G-actin is too simple and only repulsive potential is considered. In this paper we study the SIRM with different complex potential and discuss the effect of the spring on the system. The calculation results show that the spring, the effective radius of the G-actin and the intermolecular potential play key roles in the motion. The sliding speed is about $4.7\times10^{-6}m/s$ calculated from the model which well agrees with the experimental data.","arXiv:physics/0307013v1  [physics.bio-ph]  2 Jul 2003A Microscopic Mechanism for Muscle‚Äôs Motion AI Bao-Quan, WANG Xian-Ju, LIU Guo-Tao and LIU Liang-Gang‚àó Department of Physics, ZhongShan University, GuangZhou, P. R. China. Nakano M Department of information science, University of Occupational an d Environmental Health, Japan. Matsuura H Department of Project Center, National Graduate Institute fo r Policy Studies, Japan. The SIRM (Stochastic Inclined Rods Model) proposed by H. Mat suura and M. Nakano can explain the muscle‚Äôs motion perfectly, but the inter- molecular potential between myosin head and G-actin is too s imple and only repulsive potential is considered. In this paper we stu dy the SIRM with diÔ¨Äerent complex potential and discuss the eÔ¨Äect of the sp ring on the system. The calculation results show that the spring, the eÔ¨Äe ctive radius of the G-actin and the intermolecular potential play key roles in the motion. The sliding speed is about 4 .7√ó10‚àí6m/scalculated from the model which well agrees with the experimental data. Key words: SIRM, Intermolecular potential, Actin myosin sy stem. Pacs: 87. 10. +e, 87. 14. Gg, 05. 90. +m. I. INTRODUCTION The great progress have been made on the observations of molecu lar motor since H. F. Huxley and H. E. Huxley [1] [2] [3] proposed the rotating cross- bridge model to study muscular mobility in 1954. More and more biologists and theoret ical biophysicists concentrate on studying the mechanism of the living system and minc ing the biological structure to invent subtle artiÔ¨Åcial instrument. Based on diÔ¨Äeren t system, three diÔ¨Äerent families of motor proteins have been identiÔ¨Åed [4] [5] [6], Kinesins and dy neins move along tubulin Ô¨Ålaments [7], myosin move along actin Ô¨Ålaments [8] [9].The motion me chanism of ‚àóEmail: stdp05@zsu. edu. cn 1 the three kinds of motors can be described as follows [4] [10] [11]: Ô¨Års tly, the motor binds Adenosinetriphosphate (ATP), then hydrolyzes the bound A TP and absorbs the energy, subsequently, the motor releases the products Adenos inediphosphate (ADP) and Phosphate (P), so the motor move constantly within the chemical c ycle. The molecular motors play a key role in transuding chemical energy into mechanical work at a molecular scale. Up to date there have been three kinds of archetype models proposed to study the molecular motor system: namely the Ô¨Çuctuation models, the phase t ransition models and the resonance models. OnearchetypeÔ¨Çuctuationmodelisratchetsmodel. Thismodellook smolecularmotors as heavily damped Brownian particles and the model explains the molec ular motor‚Äôs motion by studying a single particle in a potential inspired by Feynman‚Äôs ratchet. M. O. Magnasco [12] and R. D. Astumian [13] [25] have proposed the force d thermal ratchets model, the Ô¨Çuctuant force break the symmetry of the system, so that the system can absorb the energy from the surroundings, the motor undergoes similar Brownian motion and produces net transport. Although the Ô¨Çuctuation models hav e discussed diÔ¨Äerent aspects of molecular motors, there still exits a matter of debate o n the mechanism of its motion. The second typical model is phase transition model: the two state m odel proposed by F.Julicher [4] and isothermal ratchet model proposed by A. Pamegg iani [14]. Using the basic idea of the Ising model for phase transitions, they have stud ied a single motor or many motors moving in asymmetry periodic potential. In these models the microtubule and molecular motor are treated as periodic polar railway tracks and carnot engines with cargoes, themotor consumes chemical energy andcauses thesy stem conformationchange, so the phase transition occurs between two states. The models giv e a good explanation on the eÔ¨Éciency of the motor. The newly typeresonance model isnamed theStochastic Inclined Ro dsModel (SIRM) proposed by H. Matsuura and H. Matsuura [ ?], in the model the energy of motion was supplied from the random noise and the system always moves to one d irection by using stochastic resonance. The movement of the system does not bre ak the second law of thermodynamics, because the actin-myosin system is open to the s urroundings and the energyÔ¨Çows infromtheir surroundings. TheSIRMpresents aperf ectlysliding mechanism of the actin-myosin system, but the interaction is too simple and only repulsive force is 2 considered. The main aim of our paper is that based on SIRM we study muscle‚Äôs motion under a complex intermolecular potential and discuss the eÔ¨Äect of t he spring on the system. II. MODEL AND FORMALISM In order to describe the motion of actin-myosin system, we simulate it by a mechan- ical model as shown in Fig. 1. SIRM is composed of three parts: an inc lined spring, a myosin head and myosin bundle. Our model proposed a microscopic me chanism for the actin-myosin system: The random noise is from the water molecules g enerated through the heat energy of ATP hydrolysis. ATP supplies the heat energy an d provides heat energy to the surrounding water molecules, which accelerates the movement of the water molecules, So the random noise (the water molecules) can interact w ith the myosin head, and the resonance occurs between the myosin head and the noise, then it collides with a G-actin and obliquely kicks the G-actin sphere, because the direct ion of vibration is inclined against the line of the actin Ô¨Åbers, myosin molecules obtain the propellant force along the direction of the Ô¨Åber and the myosin can move to one direct ion. Fig. 1 Let us set up the dynamic equations of the system. As for the inter molecular potential between myosin head and G-actin we adopt Jennard-Jones potent ial: Ua=i=n/summationdisplay i=0U0 a(pe‚àíri/jk‚àíqr‚àí6 i). (1) Whereri=/radicalBig (x‚àíxi)2+(y‚àíyi)2‚àíR, (xi,yi) means a center of i-th G-actin glove, and R is its eÔ¨Äective radius. p,q,U0 a,jkare the parameters of the potential. The potential of the myosin rod is approximately expressed as follow s: Us=Klexp(‚àí/radicalBig (x‚àíx2)2+(y‚àíy2)2+L) +Klexp(/radicalBig (x‚àíx2)2+(y‚àíy2)2‚àíL) +1 2KŒ∏(Œ∏‚àíŒ∏0)2. (2) 3 WhereKŒ∏,Klare tangent constant and radial constant of the spring, and Lis initial length of the spring , tan( Œ∏) =(x2‚àíx) y,Œ∏,Œ∏0are current angle and initial angle between the rod and level axis. ( x2,y2)is the center of gravity of myosin bundle. The equations of the myosin head are: m‚àÇ2x ‚àÇt2=‚àí‚àÇ(Ua+Us) ‚àÇx+Fx(t)‚àíŒ±‚àÇx ‚àÇt. (3) m‚àÇ2y ‚àÇt2=‚àí‚àÇ(Ua+Us) ‚àÇy+Fy(t)‚àíŒ≤‚àÇy ‚àÇt. (4) With regard to the center of gravity ( x2,y2) of the Ô¨Ålament, we set a similar equation: M‚àÇ2x2 ‚àÇt2=‚àí‚àÇUs ‚àÇx2+Fx2(t)‚àíŒ∑‚àÇx2 ‚àÇt. (5) The variable y2is Ô¨Åxed since the myosin Ô¨Ålament does not signiÔ¨Åcantly move along the y-direction compared to the x-direction. WhereŒ±,Œ≤,Œ∑are viscous constants, Mis the mass of the myosin bundle and mis the mass of the myosin head. Fx(t),Fy(t),Fx2(t) are Ô¨Çuctuation of the thermal noise, the noise is Gauss white noise and it satisÔ¨Åes the following Ô¨Çuctuation-diss ipative relations [21] [22] [23]. < Fa(t)>= 0. (6) < Fa(t)Fb(s)>= 2kBTŒ∂Œ¥a,bŒ¥(t‚àís). (7) wherea,b=x,y,x 2;Œ∂=Œ±,Œ≤,Œ∑;kBis Boltzmann constant. Tis absolute temperature, t,sare time. III. CALCULATION RESULTS In order to solve the above equations we adopt a numerical method . The parameters of the equations are shown in the table. 4 Table. 1. The Parameters of the Equations. 1 unit time 10‚àí4s Œ±,Œ≤,Œ∑ 1U0 a15000 1 unit length 10‚àí9m p,q 100m80 1 unit mass 1.66√ó10‚àí24kg L 10M400 KŒ∏ 450000 Kl4500 Œ∏045‚ó¶ We solve the equations(1)-(7) with a numerical method and the num erical results are shown in Fig.2-Fig.6. Fig. 2 The dashed line shows the position of myosin Ô¨Ålament and the solid line de scribes the displacement of myosin head. From the Ô¨Ågure we can know that the h ead and the Ô¨Ål- ament, bound by the spring, move forward along the same direction as a whole. The movement of the head is a translational one as a whole, though the t race has irregularity and randomness like Brownian particles. We can know from the Ô¨Ågure the average gliding speed of the myosin bundle is 4 .7√ó10‚àí6m/s, On the other hand, the experimental data by Yanagida et al. is that the maximum gliding speed is 7 √ó10‚àí6m/s. It is impressive that our prediction well agree with the experimental data. Fig. 3 The solid line shows the stretching motion of the myosin rod, the vert ical displacement of myosin head is described with the dashed line. The Ô¨Ågure shows tha t the collision between the G-actin and the myosin head distorts their relative mot ion from a trigono- metric function. This trace of the motion is given by an accurate trig onometric function if there are no interactions or the collisions. Truly the strain of the t rigonometric function indicates that the myosin head kicks obliquely the G-actin when the sp ring is stretched by the resonance vibration. Fig. 4 5 From the Ô¨Ågure we can know that the constant of the spring play a k ey role in the mo- tion, if the constant is zero, the system can not move. And if the co nstant increases, the velocity of the SIRM will increase rapidly. Fig. 5 The Ô¨Ågure can show that the eÔ¨Äective radius of the G-actin is import ant for the system to move. If the G-actin is Ô¨Çat ( R= 0) the SIRM cannot move, on the other hand, if the eÔ¨Äective radius of the G-actin is too big ( R= 4nm) the system cannot move, either. The system can move at the highest speed at R= 2.5nm. Fig. 6 From the Ô¨Ågure we can know that the repulsive potential can accele rate the system‚Äôs mo- tion and the potential between the G-actin and myosin can decide th e motion‚Äôs velocity. IV. SUMMARY AND CONCLUSION Based on the SIRM we study the movement of actin-myosin system w ith a Jennard- Jones potential. From the numerical results we can know there is re lative sliding motion between the Ô¨Ålament and the G-actin and the average gliding speed is 4.7√ó10‚àí6m/s which well agree with the experimental data. When the system abso rbs the energy from the thermal noise constantly through stochastic resonance, th e intermolecular potential and the inclined rod make the Ô¨Ålament move to one direction. The syst em can convert the random noise to one directional motion. The eÔ¨Äective radius of G -actin, the constant of the spring and the intermolecular potential are important for th e system to move. If the constant of the spring is small, the system cannot move, and if t he eÔ¨Äective radius of G-actin is too small or too big the system cannot move, either. The r epulsive potential makes the system move fast. From the results we can predict the s tate of the muscle: if the constant of the spring or the eÔ¨Äective radius of G-actin beco me small, the SIRM can not move at all and muscle is fatigue, if the eÔ¨Äective radius of G-a ctin is too big, the 6 velocity of the system is zero and the actin-myosin system may be br eakdown. SIRM is thermally open to the outer surroundings and it has a outer h eat source of ATP. The heat or energy consumed by SIRM is directly supplied from t he surroundings (i.e. the thermal motions of water molecules). The entropy always in creases since the Ô¨Çow is positive, therefore, the system does not break the second law of thermodynamics. There have been many discussions on the movement of ratchets in a heat bath. Among them, we only consider one famous discussion of Feynman [24]. Feynm an showed from statistical discussions that the ratchets under an isothermal te mperature cannot turn as a total since the ratchets turn to both sides with equal probability. However, he also showed in the same section, 46-2, of Ref. [24] that it can turn to one side if a load is suspended from the one side even in an isothermal bath. Our model can work ev en under isothermal temperature conditions, since it has a load, which is an intermolecular potential of the G-actin fastened to a Z-membrane. Noise in dynamical systems is usually considered a nuisance. But in cer tain nonlinear systems including electronic circuitsandbiological sensory apparat usthepresence ofnoise can in fact enhance the detection of the weak signals. From the abo ve results, we point out the possibility that the actin-myosin system can use thermal no ise around for the movement in similar way. This viewpoint is completely new as the tradition al viewpoint thinks the water disturbs the motion as viscosity. 7 [1] Huxley A E and Simmons R M 1971 Nature 233 533. [2] Huxley A F and Niedergerke R 1954 Nature 173 971. [3] Huxley A Fand Hanson J 1954 Nature 173 973. [4] Julicher F, Ajdari A and Prost J 1997 Rev. Mod. Phys.69 126 9. [5] Kreis T and Vale R 1993 Cytoskeletal and motor proteins (O xford University Press). [6] Wang K Y , Xue S B and Liu H T 1998 Cell Biology 238-246 (Beiji ng Normal University Press, in Chinese ). [7] Mandelkow E and Hoenger A 1999 Current Opinion in Cell Bio logy 11 34. [8] Borisy G G and Svitkina T M 2000 Current Opinion in Cell Bio logy 12 104. [9] Yanagida T,Kitamura K,Tanaka H, Hikikoshi lwane A and Es aki S 2000 Current Opinion in Cell Biology 12 20. [10] Hill T L 1994 Prog. Biophys. Mol. 28 267. [11] Spudich J A 1990 Nature 284. [12] Magasco M O 1993 Phys. Rev. Lett. 71 1477. [13] Astumian R D 1994 Phys. Rev. Lett. 72 1766. [14] Parmeggiani A, Frank J, Ajdari A and Prost J 1999 Phys. Re v. E 60 2127. [15] Matsuura H and Nakano M 1997 Biomedical and Human Scienc e 3 (1) 47. [16] Matsuura H and Nakano M 2000 Information, 3(2) 203. [17] Matsuura H and Nakano M 2000 Proc. of the IEEE-EMBS Asia- PaciÔ¨Åc Conference on Biomedical Engineering 377. [18] MatsuuraHandNakanoM2000 AIP(American InstituteofP hysics) ConferenceProceeding 519, Statistical Physics 557. [19] AI B Q, WANG X J, LIU L G, Matsuura H and Nakano M 2000 Proc. o f the IEEE-EMBS Asia-PaciÔ¨Åc Conference on Biomedical Engineering 379. [20] AI B Q, WANG X J, LIU L G, Matsuura H and Nakano M 2001 Commun ication in Theo- retical Physics (to be published). [21] Ornsteinn G E 1930 Phys. Rev. 36 823. [22] Wang M C 1954 Rev. Mod. Phys. 17 323. [23] Tawada K and Sekimoto K J 1991 Theor. Biol. 150 193. [24] Feynman R, Leithton R and Sands R 1963 Lectures on Physic s, Addison Wesley.. 8 [25] Zhao T J, Zhan Y, Zhuo Y Z,and Wu X Z 1999 Chin.Phys.Lett. 1 6(7) 475. 9 V. FIGURE AND TABLE CAPTIONS Table. 1. The parameters of the equations. Œ±,Œ≤,Œ∑are viscous constants, M,mare the mass of myosin bundle and myosin head , respectively, Lis initial length of the spring, p,q,U0 a,jkare the parameters of the potential, KŒ∏,Klare tangent constant and radial constant of the spring. Fig. 1.The model for actin-myosin system. The coordinates of the head o f myosin and the end of myosin connected to the Ô¨Ålament are ( x,y) and (x2,y2), respectively. The body of the myosin is assumed to be represented as a spring. Fig. 2.The dashed line shows the position of myosin bundle and the solid line des cribes the displacement of the myosin head. The parameters are shown in t he Ô¨Ågures also. Fig. 3.The dash line shows the vertical movement of the myosin head and th e solid line presents the stretching displacement sof the rod and s=/radicalBig (x‚àíx2)2+(y‚àíy2)2‚àíL. Fig. 4. The relation between the constant of the spring and the x-displace ment of the myosin bundle is shown in the Ô¨Ågure. From the up to the bottom, diÔ¨Äer ent lives corre- spond to Kl: 5000,3000,1000,0, respectively. Fig. 5. The relation between the eÔ¨Äective radius of the G-actin and the x-d isplacement of the myosin bundle is shown in the Ô¨Ågure. From the up to the bottom , diÔ¨Äerent lives correspond to R: 2.5, 1, 4, 0, respectively. Fig.6.The Ô¨Ågure indicates the relationship of the intermolecular potential and the x- displacement of the myosin bundle. From the up to the bottom, diÔ¨Äer ent lives correspond tojk: 4, 3, 2, 1, respectively. 10      	  !#$%&() *+,-./01  2345678 9:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[ \]^_`abc  0 5 10 15 20 25 30024681012141618202224 jk=1 R=2 Kl=5000x-displacement (nm) t (10-4s) 0 5 10 15 20 25 30-1.5-1.0-0.50.00.51.01.52.02.53.03.54.04.55.05.5jk=1 R=2 Kl=4500y-position (nm) t (10-4s) 0 5 10 15 20 25 308101214161820222426 Kl=5000 Kl=3000 Kl=1000 Kl=0jk=1 R=2x-displacement of myosin bundle (nm) t (10-4s) 0 5 10 15 20 25 30810121416182022242628 jk=1 Kl=4500 R=4R=2.5 R=1 R=0x-displacement of myosin bundle (nm) t (10-4s) 0 5 10 15 20 25 30102030405060 Kl=4500 R=2jk=4 jk=3 jk=2 jk=1x-displacement of myosin bundle (nm) t (10-4s)","physics.bio-ph, q-bio",Arxiv
25,On managing vulnerabilities in AI/ML systems,"Jonathan M. Spring, April Galyardt, Allen D. Householder, Nathan VanHoudnos",2021-01-22 21:59:44+00:00,http://arxiv.org/pdf/2101.10865v1,"This paper explores how the current paradigm of vulnerability management might adapt to include machine learning systems through a thought experiment: what if flaws in machine learning (ML) were assigned Common Vulnerabilities and Exposures (CVE) identifiers (CVE-IDs)? We consider both ML algorithms and model objects. The hypothetical scenario is structured around exploring the changes to the six areas of vulnerability management: discovery, report intake, analysis, coordination, disclosure, and response. While algorithm flaws are well-known in the academic research community, there is no apparent clear line of communication between this research community and the operational communities that deploy and manage systems that use ML. The thought experiments identify some ways in which CVE-IDs may establish some useful lines of communication between these two communities. In particular, it would start to introduce the research community to operational security concepts, which appears to be a gap left by existing efforts.","On managing vulnerabilities in AI/ML systems Jonathan M. Spring jspringATseidotcmudotedu CERT ¬ÆCoordination Center Software Engineering Institute Carnegie Mellon University Pittsburgh, PAApril Galyardt Software Engineering Institute Carnegie Mellon University Pittsburgh, PA Allen D. Householder CERT ¬ÆCoordination Center Software Engineering Institute Carnegie Mellon University Pittsburgh, PANathan VanHoudnos Software Engineering Institute Carnegie Mellon University Pittsburgh, PA ABSTRACT This paper explores how the current paradigm of vulnerability man- agement might adapt to include machine learning systems through a thought experiment: what if flaws in machine learning ( ML) were assigned Common Vulnerabilities and Exposures ( CVE) iden- tifiers ( CVE-ID s)? We consider both MLalgorithms and model ob- jects. The hypothetical scenario is structured around exploring the changes to the six areas of vulnerability management: discovery, re- port intake, analysis, coordination, disclosure, and response. While algorithm flaws are well-known in the academic research commu- nity, there is no apparent clear line of communication between this research community and the operational communities that deploy and manage systems that use ML. The thought experiments identify some ways in which CVE-ID s may establish some useful lines of communication between these two communities. In particular, it would start to introduce the research community to operational security concepts, which appears to be a gap left by existing efforts. CCS CONCEPTS ‚Ä¢Computing methodologies ‚ÜíMachine learning algorithms ; ‚Ä¢Software and its engineering ‚ÜíMaintaining software ;‚Ä¢Secu- rity and privacy‚ÜíVulnerability management . KEYWORDS vulnerability management, machine learning, CVE-ID, prioritiza- tion ACM Reference Format: Jonathan M. Spring, April Galyardt, Allen D. Householder, and Nathan VanHoudnos. 2020. On managing vulnerabilities in AI/ML systems. In New Security Paradigms Workshop 2020 (NSPW ‚Äô20), October 26‚Äì29, 2020, Virtual conference. ACM, New York, NY, USA, 16 pages. https://doi.org/10.1145/ 3442167.3442177 Permission to make digital or hard copies of part or all of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. Copyrights for third-party components of this work must be honored. For all other uses, contact the owner/author(s). NSPW ‚Äô20, October 26‚Äì29, 2020, Virtual conference ¬©2020 Copyright held by the owner/author(s). ACM ISBN 978-1-4503-8995-2/20/10. https://doi.org/10.1145/3442167.34421771 INTRODUCTION The topic of this paper is more ‚Äúsecurity for automated reasoning‚Äù and less ‚Äúautomated reasoning for security.‚Äù We will introduce the questions that need to be answered in order to adapt existing vul- nerability management practices to support automated reasoning systems. We suggest answers to some of the questions, but some are quite thorny questions that may require a new paradigm of either vulnerability management, development of automated reasoning systems, or both. First, some definitions. We follow the CERT ¬ÆCoordination Cen- ter (CERT/CC ) definition of vulnerability: ‚Äúa set of conditions or behaviors that allows the violation of an explicit or implicit secu- rity policy‚Äù [ 23, ¬ß1.2]. We will follow Spring et al . [51] and define machine learning ( ML) as ‚Äúa set of statistical tools that analyze data to infer relationships and patterns. Ideally, the relationships and patterns inferred by MLwill lead to a useful model of the object or phenomenon that the data describes,‚Äù and define artificial intel- ligence ( AI) as ‚Äúa software agent that takes actions based on its environment. ‚Äù To be concrete, this paper will focus on vulnerability management for just ML-enabled systems. One practical way to think of security services for an MLsystem is via the set of services a Computer Security Incident Response Team ( CSIRT ) might provide, which is produced by Forum of In- cident Response and Security Teams ( FIRST ) and documented by Benetis et al . [2]. A complete risk management and security perspec- tive on MLwould include more than the CSIRT services framework. However, we will work from the assertion that to manage the se- curity of an ML-enabled system, all CSIRT services will need to be able to handle ML systems. Specifically, of the CSIRT services, we are carving out just vul- nerability management for discussion. The other services, as well as wider issues such as risk management, all have challenges as well, but we leave them as future work. Vulnerability management includes six services [2, ¬ß7]: ‚Ä¢Vulnerability discovery / research ‚Ä¢Vulnerability report intake ‚Ä¢Vulnerability analysis ‚Ä¢Vulnerability coordination ‚Ä¢Vulnerability disclosure ‚Ä¢Vulnerability responsearXiv:2101.10865v1  [cs.CR]  22 Jan 2021 NSPW ‚Äô20, October 26‚Äì29, 2020, Virtual conference Spring, Galyardt, Householder, and VanHoudnos These areas cover a wide range. They span the interface between software developers, software users, security teams, and people who find flaws in software. There is national infrastructure in multiple countries dedicated to support these services and facilitate com- munication. For example, both the United States and the People‚Äôs Republic of China have National Vulnerability Databases ( NVD s). FIRST , a global body, provides one definition of how to score the severity of vulnerabilities, Common Vulnerability Scoring Sys- tem ( CVSS ). The Common Vulnerabilities and Exposures ( CVE) scheme is designed to assist such cataloging and ranking efforts. This paper‚Äôs goal is to facilitate the creation of a trading zone be- tween MLengineers, software architects, and security practitioners. Any trading zone requires a shared language, whether it is a physi- cal or intellectual trading zone [ 15]. All participants in a trading zone want something of value they can take back to their respective communities. These items of value are often ‚Äúboundary objects,‚Äù which mark boundaries by being recognizable and functional in both cultures in the trading zone. Rawls and Mann [41] states that the Mitre Corporation ( MITRE ) produces identifiers, such as CVE identifiers ( CVE-ID s), in part for their value to trading zones as boundary objects. This background makes CVE-ID s an attractive and useful focal point for our thought experiments. We will organize our exploration of a new paradigm for MLse- curity around one hypothetical ‚Äì what if flaws in MLsystems were assigned CVE-ID s? Sections 4 and 6 do the main work on exploring the thought experiment. Before we can answer this question, we first lay some background on the current ways of identifying soft- ware vulnerabilities in Section 2. Section 3 will provide background on the current state of adversarial attacks on MLalgorithms. Sec- tion 4 then steps through each of the services areas of vulnerability management to explore the impact of giving ML algorithm flaws CVE-ID s. Section 5 explores the MLalgorithm thought experiment from the perspective of CVE Numbering Authorities (CNAs). Sec- tion 6 steps through each of the service areas to explore the impact of giving ML model object flaws CVE-IDs. 2 VULNERABILITY BACKGROUND Expanding on the definition of vulnerability cited in Section 1, a vulnerability is ‚Äúa set of conditions or behaviors that allows the violation of an explicit or implicit security policy. Vulnerabilities can be caused by software defects, configuration or design deci- sions, unexpected interactions between systems, or environmental changes‚Äù [ 23, ¬ß1.2]. This definition is useful for the purposes of this paper for clarity, but CERT/CC is also a CNA , so it bears on the ensuing discussion as well. An organization has a variety of options when responding to a vulnerability. A fix (a.k.a remediation) is usually defined as a de- ploying a patch that removes the vulnerable code or retiring the vulnerable system. A mitigation reduces the impact of a vulnera- bility without removing the vulnerable code. Example mitigations include adding network segmentation or input and traffic filtering that make it harder to exploit the vulnerability. Managing vulnera- bilities in MLsystems will use a combination of remediation and mitigation, just as any other sector.There are two common axes that help distinguish vulnerabilities in modern security practice. One is within vulnerability identifica- tion. The second is level of abstraction of the vulnerable product. Sections 2.1 and 2.2, respectively, discuss these levels. Section 2.3 summarizes background the the CVE project. 2.1 Vulnerability Identification Vulnerability identification and classification spans from scanning individual systems to organizing vulnerabilities into categories to facilitate better programming principles. A number of vulnerabil- ity identification methods exist. CVE is perhaps the most widely known, but there are others. In increasing broadness along the identification and classification axis, we have: ‚Ä¢Instance of a vulnerable product ‚Ä¢Vulnerability in a product (e.g., CVE-ID, VU#) ‚Ä¢Category of which a vulnerability is an example (e.g., Com- mon Weakness Enumeration ( CWE ), Open Web Application Security Project (OWASP)) 2.1.1 Instances of Vulnerable Products. On the very specific end of this spectrum, we have instances of a vulnerable product. An instance is a specific computer or service that uses a vulnerable product. When an organization scans the systems it owns to per- form asset management, it will find instances of a vulnerability. Instances are often tagged as the association of a host or system identifier accompanied by the ID of the vulnerability of which they are an instance.1Instances may also be called findings or sightings. 2.1.2 Vulnerable Products. Moving up from instances, we find vul- nerable products. The practitioner community‚Äôs expectation is that a product is some sort of artificial information processing system. This definition is vague because a vulnerable product is usually the thing that security practitioners say ‚Äúhas‚Äù the vulnerability, as defined above. Since a vulnerability may be introduced by a software defect, configuration decision, design decision, system interaction, or environmental mismatch, the ‚Äúproduct‚Äù that has a vulnerability cannot be constrained much. Section 2.2 will discuss different categories of vulnerable products. CVE-ID s are most closely associated with products. Section 2.3 will detail the CVE program. CERT/CC publishes Vulnerability Notes using the VU# identifier. Like CVE-ID s, these are also usually at the product level. However, while VU# documents often describe a single CVE-ID , that is not always the case. There are VU# documents which describe multiple CVE-ID s, as well as ones that describe vulnerabilities that are out of scope for CVE entirely. Vulnerabilities in products are the main stock and trade of vulner- ability management. Such vulnerabilities often need to be triaged to prioritize actions. A popular scoring tool to communicate the tech- nical severity of a vulnerability is CVSS . While CVSS andCVE-ID s are managed by different organizations and are officially unaffil- iated with each other, they are often mentally associated due to the close relationship between uniquely identifying and triaging vulnerabilities. Section 4.2 will address CVSS in more detail. 1Often, this association is mediated through specific versions of software. E.g., host A has version X of software Y installed, and version X of software Y has vulnerability Z On managing vulnerabilities in AI/ML systems NSPW ‚Äô20, October 26‚Äì29, 2020, Virtual conference 2.1.3 Vulnerability Categories. The next broader part is the cate- gorization of vulnerabilities. A number of frameworks exist at this level, with perhaps the best known being the CWE framework. CWE is a list of common software and hardware weakness types that have security ramifications [ 34].CWE is not intended to be a catalog of specific problems, but rather a collection of impor- tant design flaws that lead to ‚Äúweaknesses‚Äù in software and hard- ware. Although MITRE is a bit inconsistent about the definition of ‚Äúweakness,‚Äù it is roughly equivalent to the CERT/CC definition of vulnerability. So the two main things that can be members of aCWE are a vulnerability and another CWE category. CWE s are arranged hierarchically from 10 ‚Äúpillar‚Äù weaknesses which are gen- eral descriptions of all weaknesses, with intermediate and specific weakness types categorized under them. An example CWE is ‚Äúbuffer overflow, ‚Äù and any number of CVE-ID s may be an example of this CWE . ACWE can loosely be understood as a conceptual way that someone might accidentally introduce a se- curity weakness into some information processing system, whereas aCVE-ID identifies a concrete product version in which someone introduced a specifically identifiable security flaw. Not all vulnerabilities associated with a CWE get a CVE-ID . This situation is common with, for example, instances (Section 2.1.1) of configuration-level vulnerabilities (see Section 2.2) in specific web servers. The CWE specification is ambiguous whether there can be in- stances of software which match the description of the weakness but cannot have a security impact due to some specific circum- stance, such a the code being demonstrably unreachable. Various secure coding guidance would certainly recommend avoiding such design patterns because they are fragile [ 48]. This guidance holds whether we name such circumstances a security weakness or not, so pragmatically we shall leave this ambiguity as it is. OWASP is another vulnerability categorization scheme, most famous for its Top 10 document for web developers that ‚Äúrepresents a broad consensus about the most critical security risks to web applications‚Äù [ 37]. Since OWASP is tailored to web applications, it is more specific than CWE . The OWASP Top 10 is also more pragmatic; the goal is to prioritize effective protective measures that a web developer should ensure during their development life cycle. OWASP focuses on secure configuration of web servers, rather than secure coding. Only one of the top 10 ‚Äì ‚Äú9: Using Components with Known Vulnerabilities‚Äù ‚Äì overlaps with CVE-ID s; the other nine represent categories of vulnerabilities that would not normally be given a CVE-ID. OWASP andCWE have different constituencies and reach differ- ent audiences. The categorization schemes have differing emphases that reflects their different constituencies. But both serve a similar purpose ‚Äì to organize knowledge about vulnerabilities in vulnerable products. 2.2 Abstraction The second axis, which is independent from vulnerability identifi- cation, is a description of the level of abstraction of the vulnerable product. The four levels of abstraction for vulnerable products, from most specific to most abstract, are: ‚Ä¢Configuration-level vulnerability‚Ä¢Implementation-level vulnerability ‚Ä¢Protocol-level vulnerability ‚Ä¢Algorithm-level vulnerability The product may be a specifically-configured instance, an imple- mentation, a protocol, or an algorithm. 2.2.1 Configuration vulnerability. A deployed product may be vul- nerable due to its configuration in situ. For example, a linux host may be vulnerable if its ‚Äò/bin‚Äò directory is world-writable due to an errant sysadmin. In such a case there is nothing inherently wrong with the software, it has just been deployed in an insecure manner. 2.2.2 Implementation vulnerability. An implementation is, loosely, the source code or binary executable that is distributed as a product. Most vulnerabilities that are widely discussed are those found in implemented products, hence CVE-ID s are most closely associated with implementation vulnerabilities. The usual way of identifying the vulnerable implementation of a product is to state the versions that are vulnerable, such as ‚Äúversions 3.2.9 and earlier are vulnera- ble.‚Äù 2.2.3 Protocol vulnerability. Implementations may often be based on a protocol. The most common protocol vulnerabilities are in com- munications protocols ‚Äì agreed ways of exchanging information between devices that devices may implement in their own, though mutually compatible, way. Examples of protocols with documented vulnerabilities include Bluetooth (e.g., CVE-2019-9506), Transport Layer Security ( TLS) (e.g., CVE-2014-3566), and Server Message Block ( SMB ) (e.g., CVE-2020-0796). When there is a protocol vul- nerability, all implementations of that protocol are, by definition, vulnerable. There may be workarounds to reduce exposure, as usual, but an implementation inherits many things from the protocol it implements, including vulnerabilities. Vulnerability managers need not localize a vulnerability to a protocol; practically, it is every implementation of the protocol that must change. The rules for assigning CVE-ID s address this directly. A single ID is assigned to the protocol, standard, or Appli- cation Programming Interface ( API) rather than multiple CVE-ID s assigned to each implementation if and only if ‚Äúthere is no op- tion to use the functionality or specification [e.g., protocol] in a secure manner‚Äù [ 9, ¬ß7.2]. So in the case where the TLS protocol had a vulnerability, every implementation of TLSwould share the same CVE-ID . A pragmatic effect of assigning CVE-ID s to protocols rather than their various implementations is that it makes clear that the protocol designer or standards body is responsible for fixing the vulnerability. 2.2.4 Algorithm vulnerability. The layer of abstraction above proto- col is an algorithm vulnerability. Historically, this term has usually applied to cryptographic algorithms. For example, the cryptanalysis of Data Encryption Standard ( DES) in the early 1990s [ 32] iden- tified algorithmic vulnerabilities in DES that any protocol using that algorithm inherited. Any implementations of those protocols also inherited the algorithm vulnerabilities as well, as expected. Thankfully, vulnerabilities in cryptographic algorithms have be- come quite rare. Such vulnerabilities largely predate the current vulnerability management apparatus of CVE-ID s which has come to dominate since 2010. But there is precedent in CVE-2004-2761 NSPW ‚Äô20, October 26‚Äì29, 2020, Virtual conference Spring, Galyardt, Householder, and VanHoudnos for assigning CVE-ID s for cryptographic weaknesses (in this case, the MD5 algorithm‚Äôs susceptibility to hash collisions). Our placement of ‚Äúalgorithm‚Äù as strictly above ‚Äúprotocol‚Äù in the abstraction levels is an artifact of the history of networking and net- work security. Communications protocols arrange certain building blocks to reliably and securely exchange information. A particularly important one of those building blocks is cryptographic algorithms. Protocols infrequently but occasionally have vulnerabilities; this is usually a problem in the structure of the protocol and how infor- mation is exchanged or handled. But the protocol designers usually treated the cryptographic algorithms as special, as a sort of root of trust for the security of the protocol. However, the perspective MITRE takes with the CVE-ID rules would consider both proto- cols and cryptographic algorithms ‚Äúproducts‚Äù whose functionality would be shared by other products [9, ¬ß7.2]. The specificity and abstraction descriptions are orthogonal. One can have an instance of a implementation vulnerability, a product with an implementation vulnerability, or an implementation vul- nerability which is an example of a weakness type. Similarly, one can have an instance of a configuration vulnerability, a protocol (that is, a product) with a specific vulnerability, a vulnerability in an algorithm which is an example of a weakness type, etc. This paper will discuss the hypothetical of assigning CVE-ID s toMLalgorithm vulnerabilities and/or to MLmodel objects. This hypothetical is specifically about vulnerabilities the existing regime does not handle. The existing vulnerability management regime does not have any problem handling implementation-level vul- nerabilities in MLlibraries, such as buffer overflow mistakes in TensorFlow (e.g., CVE-2018-10055). Such algorithm-level vulner- abilities are well known within the MLresearch community, as Section 3 will discuss. However, the current vulnerability man- agement paradigm has not had to handle many algorithm-level vulnerabilities in more traditional computing infrastructure; the last one was probably 2008 with practical collision attacks against the MD5 algorithm [ 11]. This mismatch is one aspect that will make our thought experiments instructive. 2.3 CVE-ID background CVE-ID s are designed to provide unique identifiers for the purpose of tracking a vulnerability throughout vulnerability management processes, with an emphasis on enabling communication among constituents and stakeholders. The CVE program is not a stand-in for all of vulnerability management: there are relevant vulnerabil- ities that are never assigned CVE-ID s. Misconfigured file permis- sions are a common example. However, since the CVE program provides the unique identifiers that vulnerability managers use to track their main work items, it is a useful entry point that enables our thought experiments to touch, if not fully explore, all six areas of vulnerability management. MITRE is the lead organization, but they have delegated the ability to assign CVE-ID s to about 120 CNAs [ 33]. The first CVE-ID s were assigned in 1999, with 1,500 vulnerabilities assigned identifiers that year ‚Äì many of which had been discovered some time earlier in the decade. As of Aug 19, 2020, about 140,000 vulnerabilities have CVE entries.CVE-ID s have power within vulnerability management. For example, the US NVD requires a CVE-ID for all entries (https: //nvd.nist.gov/general/FAQ-Sections/CVE-FAQs). Because National Institute of Standards and Technology ( NIST ) operates the NVD andNIST produces the information security standards for the US federal civilian government, when US government security regu- lations say something like ‚Äúpatch all known vulnerabilities,‚Äù the word ‚Äúknown‚Äù is usually understood to mean ‚Äúin the NVD .‚Äù Which implies that the only vulnerabilities US federal civilian government entities are required to patch are those with CVE-IDs. In the commercial vulnerability management space, a similar scenario plays out. Asset management or vulnerability scanning products have a tendency to be based on fingerprints or signatures of device or software stacks. For example, if a scanner can determine that a web server is Apache version 2.2.31, then a simple lookup indicates it is vulnerable to CVE-2017-9788 and should be patched to a more recent version. As a consequence, vulnerability manage- ment is not driven by vulnerabilities so much as it is driven by CVE-ID s. The only community in which CVE-ID s do not entirely drive vulnerability management is website owners, where OWASP andCWE are used to label configuration-level vulnerabilities such as cross-site scripting and improper data protection configurations. MITRE does not strictly control what counts as a vulnerability. It is worth quoting their definition at length [9, ¬ß7]: The CVE Program does not adhere to a strict def- inition of a vulnerability. For the most part, CNAs are left to their own discretion to determine whether something is a vulnerability. Root CNAs may provide additional guidance to their child CNAs. This allows the program to adapt to definitions used in different industries, legal regimes, and cultures. 7.1.1 If a product owner considers an issue to be a vul- nerability in its product, then the issue MUST be con- sidered a vulnerability, regardless of whether other parties (e.g., other vendors whose products share the affected code) agree. 7.1.2 If the CNA determines that an issue violates the security policy of a product, then the issue SHOULD be considered a vulnerability. 7.1.3 If a CNA receives a report about a new vulner- ability that has a negative impact, then the reported vulnerability MAY be considered a vulnerability. Section 5 will show this official definition allows space to con- sider flaws in MLalgorithms as vulnerabilities that get CVE-ID s. Nothing in the current written guidance would need to change. However, Section 4 will also show how MLalgorithms present a number of challenges to existing vulnerability management prac- tices, including assumptions about the responsibility to fix CVE-ID s. A trained model object (see Section 3.3) is fairly clearly a product to which a CVE-ID could be assigned; Section 6 will show that choice would present a related but distinct set of challenges to existing vulnerability management practice. 3 ADVERSARIAL ML BACKGROUND There are myriad ways in which an adversary can cause an ML algorithm to behave unexpectedly and violate either implicit or On managing vulnerabilities in AI/ML systems NSPW ‚Äô20, October 26‚Äì29, 2020, Virtual conference explicit security policies. Statisticians and MLengineers rarely express such problems in vulnerability management terms. This section will introduce how the MLresearch, policy, and operational communities have expressed the problem. The name of this field is adversarial machine learning ( AML ). Unfortunately, even here we have a terminology collision; some communities use AML to refer to generative adversarial networks, or training MLalgorithms using game theory through adversarial examples. This paper exclusively uses AML to refer to attacking and defending MLalgorithms. Section 3.1 summarizes the state of academic AML work via the conclusions of two recent literature reviews. Section 3.2 summarizes two recent attempts to translate the conclusions out of the AML research space to policy makers. Section 3.3 introduces modern operational considerations around engineering reliable MLsystems. The understanding of these other efforts maps out empty spaces where a perspective from vulnera- bility management may be helpful. 3.1 Summary of academic work Biggio and Roli [3]is a highly cited literature review within the statistical research community. Their abstract summarizes the state of affairs as ‚Äúadversarial input perturbations carefully crafted ei- ther at training or at test time can easily subvert [ MLsystems‚Äô] predictions. The vulnerability of machine learning to such wild patterns (also referred to as adversarial examples), along with the design of suitable countermeasures, have been investigated in the research field of adversarial machine learning.‚Äù While Biggio and Roli [3]does not use vulnerability management terms, their cat- egorization is based on the basic security triad of confidentiality, integrity, and availability. The earliest published work on attacking ML algorithms documented by [3] dates to 2004. Contemporary with Biggio and Roli [3], Papernot et al . [39] is an excellent literature review of the space, but whose target audience is the security research community. Similar to [ 3], Papernot et al . [39] find that ‚Äúthere is growing recognition that ML exposes new vulnerabilities in software systems, yet the technical community‚Äôs understanding of the nature and extent of these vulnerabilities remains limited.‚Äù Both Biggio and Roli [3]and Papernot et al . [39] taxonimize attacks on MLalgorithms similarly, though there are certainly dif- ferences of emphasis. The rest of this section will discuss each of the following aspects of their taxonomies in more detail. ‚Ä¢Both distinguish between training-time and test-time at- tacks. ‚Ä¢Both differentiate based on how much the adversary needs to know in order to perform the attack. ‚Ä¢They differ slightly on their implied security policies; Paper- not et al . [39] identifies different kinds of attacks that violate integrity and privacy, rather than the CIA triad Biggio and Roli [3] uses. ‚Ä¢The papers differ in their proposed defenses. Both distinguish between training-time and test-time attacks. If an adversary can influence the data used to train a model, dif- ferent attacks are possible than if the adversary can influence the data items to be tested. The situation where an attacker can in- fluence both test and training is often called poisoning , whereasthe situation is called evasion if just test data can be influenced [ 3, ¬ß3.3]. Biggio and Roli [3]restrict their framework to supervised learning algorithms. Papernot et al . [39, ¬ß5]notes the training-test distinction is heavily biased towards just supervised classification algorithms, but indicates that other types of algorithms, such as unsupervised and reinforcement learning, seem to exhibit similar vulnerability even though they are much less thoroughly studied. Beyond algorithm type restrictions, this distinction covers only the model building and validation life cycle and excludes model deployment [ 16]. Restricting the scope to model building and vali- dation makes sense for academic research, but our CVE-ID thought experiment will need to include deployment and environmental vulnerabilities, as discussed in Section 3.3. Both differentiate based on how much the adversary needs to know in order to perform the attack. The terms ‚Äúwhite box‚Äù (full- access) and ‚Äúblack box‚Äù (query-access) are used with similar mean- ing in both papers, and their meanings are similar to the way the terms are used in the fuzzing literature [ 31].2Briefly, full-access refers to the attacker having complete access to the model object, such that the attacker can load it into a controlled environment and inspect and modify its components. Query-access commonly refers to the attacker being able to provide inputs to the model and received outputs, but not be able to inspect the internals of the model object. In broad strokes, if the adversary knows more about the model and the feature space, it is easier for them to attack the model. However, query-access attacks on models are readily feasible. More precisely, algorithms ‚Äúcan be threatened without any substantial knowledge of the feature space, the learning algorithm and the training data, if the attacker can query the system in a black-box manner and get feedback‚Äù [ 3, ¬ß3.2]. At the extreme end, in special cases an attacker can create a full-access situation from a query- access situation by recreating the model (up to machine precision!) through querying the model with carefully crafted examples [7]. Although Papernot et al . [39] and Biggio and Roli [3]differ slightly on their implied security policies, both use the term ‚Äúthreat model‚Äù to discuss the adversary‚Äôs capabilities and goals. This is part of a security policy, but falls far short of defining a security policy for an MLsystem. Within the AML literature, ‚Äúthreat model‚Äù is used similar to the mathematical cryptography community, where a threat model is a mathematical expression of the adversary‚Äôs capabilities. In AML , a threat model is a declarative statement. In operational security communities, a threat model is a the output of an investigation or observations about what adversaries can in fact do, or have done in the past, see for example Fox et al . [14] . The difference between a declarative and observational threat model is subtle, but it may cause members of the two communities to miscommunicate. One consequence of this disconnect is that the AML community has adopted threat models that are mathematically tractable, but not likely to be observed in practice. For example, the most popular AML threat models are based on small changes to the input, usually measured with an ùêøùëùnorm. These are useful for two reasons: first, they tractable to analyze, and second, they allow researchers to 2These terms based on color were commonly used in the literature, but we will use the more descriptive and less divisive terms ‚Äúfull-access‚Äù and ‚Äúquery-access‚Äù in their place in our discussion. NSPW ‚Äô20, October 26‚Äì29, 2020, Virtual conference Spring, Galyardt, Householder, and VanHoudnos develop a principled understanding of the fundamental properties of these systems. These threat models, however, are divorced from the constraints of the real world. Specifically, permissions are often implemented on computer systems to be all or nothing; if an ad- versary has write access to a file, they can make arbitrary changes. If the threat model assumes the adversary has some form of write access, as implied by the ability to make changes to the input, then bounding the scope of the changes the adversary would choose to make is somewhat implausible. Portions of the AML community consider more realistic threat models. An important class of these are modifications to the physi- cal environment that must survive a data processing pipeline, such as a sticker that would cause an object to be misclassfied, poisoning the data that one would collect for training, or inserting trojans or backdoors into publicly released models. However, these com- munities are a minority within AML and have not yet received the same amount of attention as those communities that rely on mathematically tractable threat models that were the focus of the literature reviews. Whether such mathematically bounded threat models apply to these physical environments is unclear; if they do, it is likely only in the context of a wider system where such limits are either empirically motivated or enforced by other security mechanisms (such as human guards). The literature review papers also differ in their proposed de- fenses. Biggio and Roli [3]recommends reactive defenses, security by design, and security by obscurity. ‚ÄúReactive defenses‚Äù are similar to what a security practitioner might call ‚Äúcontinuous monitoring and evaluation‚Äù in conjunction with an appropriate risk assessment [51, p.11]. Papernot et al . [39] presents a more conservative analysis of defenses, emphasizing that defense against most known attacks is an open area of research. Therefore, [ 39] prioritizes mapping out a research plan for a science of security and privacy of ML.3The broad recommendation is that MLalgorithms will need to become resilient to distribution drifts and incorporate privacy through dif- ferential privacy methods. While this perspective essentially admits researchers do not currently know how to defend MLalgorithms, that perspective should sit better with the security community than uncritically endorsing security through obscurity. 3.2 Summary of policy work This section is not a comprehensive survey of policy work related to AML , but rather highlights two ongoing projects that are attempting to bridge the gap between MLresearchers and software engineers or policy makers. The first is a private sector initiative, led by Microsoft and Harvard. The second is an effort by NIST to bridge the AML and information security policy communities. The Microsoft/Harvard effort is perhaps centered on Kumar et al . [28], but includes other collaborative documents such as Kumar et al. [27] . Kumar et al . [26] specifically names tracking, scoring, and responding to vulnerabilities in MLsystems as a gap in current practice when a MLsystem is under attack. This paper fleshes out what it would take to fill that gap. One important goal stated by Kumar et al . [28] is to ‚Äúequip soft- ware developers, security incident responders, lawyers, and policy 3‚ÄúScience of security‚Äù is a broad term, and it is not clear which of the senses or goals identified by Spring et al. [53] is meant by [39].makers with a common vernacular to talk about‚Äù AML through a taxonomy of MLfailure modes. The taxonomy expands beyond the narrow research concerns of the academic literature, and so includes deployment and environmental failures. However, the Ku- mar et al . [28] taxonomy remains restricted by current research in some ways, in that attacks on supervised classification algorithms are better researched and better understood than failures of other types of algorithms; the authors attempt to overcome this gap and be as comprehensive as plausible. Kumar et al . [28] adopt some taxonomic categories also used in the academic literature reviews. The distinction between full- access and query-access attacks (see footnote 2) is present here with similar meaning. The connection to security policy is via the CIA triad, similar to Biggio and Roli [3]. Kumar et al . [28] frames CIA as assurances for the MLsystem, rather than capabilities of the adversary, which aligns better with common security usage.4 Kumar et al . [28] identifies 11 intentionally motivated failure modes, namely: (1) Perturbation attack (2) Poisoning attack (3) Model inversion (4) Membership inference (5) Model Stealing (6) Reprogramming ML system (7) Adversarial example in physical domain (8) Malicious ML provider recovering training data (9) Attacking the ML supply chain (10) Backdoor ML (11) Exploit Software Dependencies In relation to the CVE paradigm of vulnerability management, the best way to understand these failure modes is as new candidate CWE s. The failure modes are about general kinds of things that can go wrong when designing, implementing, or using MLalgorithms. Also similar to CWE , Kumar et al . [28] is clear the authors are curating a living document that will change as the community finds further failure modes. MITRE has published one CWE related to AML : CWE-1039, ‚ÄúAu- tomated Recognition Mechanism with Inadequate Detection or Handling of Adversarial Input Perturbations.‚Äù CWE-1039 tracks to ‚ÄúPerturbation attack‚Äù in Kumar et al . [28] . This suggests there are at least 10 further CWEs to define. CWE-1039 is more general than either of our proposed thought experiments ‚Äì either a specific algorithm or a specific model could be an example of this weakness type. NIST has a policy effort to bridge AML and information security policy in Tabassi et al . [54] . The NISTIR is a draft, and so will likely change and improve; at present, a comment period closed on Jan 30, 2020 and the authors are editing based on those comments. The version presently available is essentially just an attempt to 4There are shortcomings with this common usage. One one hand, it is based on a metaphor with the physical goods, such as fortifications, which breaks down when applied to information systems [ 40]. On the other hand, some standards bodies, such as the Internet Engineering Task Force ( IETF ), list several other recommended security services in additional to just CIA, such as non-repudiation, and differentiate some parts of CIA, such as between system integrity and data integrity [ 49, p.274]. Failure modes in MLmay put additional pressure on the basic CIA triad, and justify a change to one of these more nuanced approaches. On managing vulnerabilities in AI/ML systems NSPW ‚Äô20, October 26‚Äì29, 2020, Virtual conference synthesize the academic surveys; these include [ 3,39] as well as three others as primary sources [54, p.2]. Despite being a NIST document, one thing that Tabassi et al . [54] decidedly does not do is integrate or deconflict AML terminol- ogy with the terminology in the NIST Computer Security Research Center glossary, or any other set of standard information security terms [ 16]. Unlike Kumar et al . [28] , the NISTIR draft is narrowly scoped to academic AML interests and does not account for deploy- ment or environmental failures that would be of interest in practice [16]. We expect the next draft will improve on these shortcomings. However, for these reasons at present Tabassi et al . [54] does not bridge the NVD ,CVE program, or other vulnerability management functions with the AML space. 3.3 Summary of operational work The work on operational assurance that MLsystems behave as expected covers a broad space. First, this section introduces an anatomy of an operational MLsystem to clearly define the parts subject to our thought experiments and contextualize them. Sec- ond, we will scope our thought experiment by summarizing valid operational concerns that are and are not security vulnerabilities through the lens of deployment context. A deployed ML system has a broader attack surface than just the training and testing of the ML model. Our thought experiment in this paper is limited in scope to MLalgorithms and model objects, but it is important to recognize that these are just some parts of an operational ML system. Figure 1 provides a representation of the pieces involved in developing and operating an ML system.5While this diagram is only a rough representation of any particular system, it provides a useful tool for conceptualizing the possible vulnerabilities of any deployed ML system. Each of the components and processes in the diagram represents a different point where a vulnerability could be introduced; vulnerabilities may arise in sensors that collect the data, the data processing component, or the runtime monitoring tools, in addition to the model itself. This perspective highlights the difference between an MLal- gorithm and an MLsystem. The MLalgorithm is the particular mathematical procedure used to create an MLmodel object by con- figuring/training it on the data. The ML system includes all of the components illustrated in Figure 1. Horneman et al . [20] provides general guidance for the design and management of ML systems. As discussed in Section 3.1, the AML research community fo- cuses on categories of vulnerabilities introduced during the Model Building and Validation stage; particularly, categories of vulnera- bilities that may be inherent in the Untrained Model or introduced by manipulation of the Training Data or Test Data 1. Kumar et al . [28], discussed in Section 3.2, broadens this focus; e.g., the cate- gory Attacking the ML supply chain introduces the idea that a vulnerability could be introduced to a trained model as it is being downloaded in the Model Deployment stage. However, a deployed system has yet more components which could introduce vulner- abilities. For example, if an adversary wanted you to waste time 5Note that this diagram can represent both supervised and unsupervised ML systems; however for reinforcement learning, the general pipeline is the same, but the model building and validation stage will require modification.and money retraining your model, thus hurting you in a resource- constrained environment, they could attack the Benchmark Data to make your model seem as if performance was degrading for unknown reasons. To situate MLsystems in their full context, one should observe that deployed MLsystems often are part of enforcing or developing policies for organizations, including governments. Such systems often embed power structures, biases, and inequity [ 35,36,58]. Both MLresearchers, e.g., [ 13,47], and legal scholars, e.g., [ 8,12,25,29], have been struggling with how to seek out and eliminate these problems from MLsystems. However, designing an ML system with an assured fidelity to a particular substantive policy choice is not usually considered a security question. That is, assuring a high-quality MLsystem generally involves assuring attributes other than security, such as fairness, equity, stability, etc. We place these other attributes out of the scope of this paper. However, exceptions for these other attributes aside, the larger context of deployment is essential for defining what constitutes a vulnerability. Vulnerabilities live at the intersection of the soft- ware system and its interaction with the environment. For example, Householder [21]has argued that prior to the invention of airplanes, buildings did not have airplane related vulnerabilities. Something about the world changed with the invention of airplanes, and now the interaction between buildings and their world contains a new class of vulnerable states, damage caused by impacts with airplanes. In the same way, before the advent of self-driving cars, MLsystems did not have vulnerabilities involving stickers on stop signs [ 18]. Since the deployment context has changed to include self-driving cars, the interaction with the environment now includes such vul- nerabilities. Accounting for these diverse environments is both a challenge and a motivation for our thought experiments. 4 THOUGHT EXPERIMENT 1: ALGORITHMS This section explores one hypothetical situation ‚Äì what if flaws inMLalgorithms were assigned CVE-ID s? We explore the conse- quences for vulnerability management by analyzing each of the six vulnerability management service areas [ 2].CERT/CC has pub- lished one vulnerability note about an MLalgorithm vulnerability, but it is tracked only with the internal identifier VU#425163 and does not list a CVE-ID [22]. The note describes how MLclassifiers trained via a gradient descent algorithm are vulnerable to arbitrary misclassification attacks. Although the focus of our thought experi- ment will tend to be generic, in cases where a concrete example is helpful we will use the CERT/CC vul note. As Section 3.3 discussed, there are many parts that go into an operational MLsystem, and the algorithms are just one part. The thought experiment here is just working through what would hap- pen if CVE-ID s were assigned to algorithms. Of course, systems that use the algorithm should likely inherit the CVE-ID ; although there is guidance for defending MLsystems from vulnerabilities in their algorithms, the guidance is evolving rapidly because most guidance has been quickly shown to be inadequate [6]. Each of the following subsections examines our thought ex- periment through one of the CSIRT services within vulnerability management, as introduced in Section 1. NSPW ‚Äô20, October 26‚Äì29, 2020, Virtual conference Spring, Galyardt, Householder, and VanHoudnos Model DeploymentModel Building and V alidation Operational Environment ML-Enabled System Software Component ASoftware Component BIntegrate Model into ML-Enabled SystemTest ML-Enabled System¬†ML- Enabled System Trained ModelTesting Tools Runtime Monitoring Tools Operational Data Test Data 2Raw DataData Processing Model TrainingModel SelectionCandidate Models Trained ModelTraining DataTest Data 1 Untrained Model Data CollectionData Labeling Data Cleaning Feature Engineering Data Collection Data Processing<<Software Component>> ML Component Trained ModelBenchmark Data Sensors Data Entry Figure 1: Each of the green boxes represents a process, often with a human directly involved. Each of the burnt-orange boxes represents a software component in the operational environment. In an operational ML system, the model needs frequent updating, and this process could be represented by adding a loop to this diagram. On managing vulnerabilities in AI/ML systems NSPW ‚Äô20, October 26‚Äì29, 2020, Virtual conference 4.1 Vulnerability discovery / research In our scenario, vulnerability discovery will not change much. All current vulnerability discovery work can continue as before. If we start assigning CVE-ID s toMLalgorithm vulnerabilities the number of people who should be counted as doing vulnerability discovery will jump higher overnight, as AML folks will be added to the ranks. Although it is difficult to estimate the size of the AML community, over 1,900 papers have been published since 2014 according to a widely followed tracker [5], suggesting a substantial influx. As in the current paradigm, in our thought experiment not all ML algorithm vulnerabilities will end up with an assigned CVE-ID . However, the reasons for this will remain the same; there are at least three possible reasons why a CVE-ID may not be assigned: ‚Ä¢The vulnerability research is internal to product develop- ment, and will be fixed without being made public ‚Ä¢The vulnerability is not independently fixable from another vulnerability ‚Ä¢The vulnerability researcher plans to sell the vulnerability or otherwise use it in attacks The first two are expressly forbidden to have CVE-ID s in the CVE specification [ 9, ¬ß7]. Those in the third category may be assigned a CVE-ID eventually, once defenders detect attacks using it. This first reason will not unduly stress our thought experiment. Most mature software engineering projects conduct internal testing before release. Tests may include fuzzing, program verification, code review, or unit tests. In general, if code pre-release fails these tests, it is fixed without being assigned a CVE-ID because it does not need to be discussed publicly. Such testing regimes for MLsystems are one recommendation in both the academic and policy literature. The second reason a vulnerability may not receive a CVE-ID is more slippery in relation to MLalgorithms. Given that how to prevent these attacks on MLalgorithms is not known in principle, it may be considered an area of active research. However, we can say something about what should get different CVE-ID s. If the algorithms are distinct MLalgorithms, then they should get distinct CVE-ID s, even if they exhibit the same flaw type (as documented by [28], for example). This practice would be analogous to the way in which two web browsers get separate CVE-ID s even if they both have a buffer overflow, even though buffer overflow is the same kind of flaw in both. Similarly, if there are distinct versions of the same algorithm, they will only get separate CVE-ID s if the fixes are independent. This practice is analogous to the way that multiple versions of a web browser may be affected by a single CVE-ID today. The abstraction level hierarchy presented in Section 2.2 presents some further trouble for ‚Äúindependently fixable‚Äù that is not so easily resolved. The hierarchy implies that all protocols or models that use a vulnerable algorithm and implementations of those protocols or models will share the same CVE-ID. This sharing is implied be- cause the implementations are not independently fixable from each other; the algorithm may need to be fixed and then this change propagated down the abstraction levels. However, as is the case currently where every instance of a product is not always suscepti- ble to vulnerabilities in the product, due to configuration changes or other workarounds in place, it may be possible to use a vulnera- ble algorithm in a way that that does not expose every algorithmMetric Name Group Options Attack Vector Exploitability Physical; Local; Adja- cent; Network Attack Complexity Exploitability Low; High Privileges Required Exploitability None; Low; High User Interaction Exploitability None; Required Scope Impact Changed; Unchanged Confidentiality Impact None; Low; High Integrity Impact None; Low; High Availability Impact None; Low; High Table 1: Summary of CVSS v3.1 base metrics [10]. vulnerability. This, too, is an area of active research, and a topic we will return to in Sections 4.3 and 4.6. Finally, vulnerabilities discovered for the purpose of attacking others would mostly have the same properties in a world where ML algorithms get CVE-ID s. It may seem that disambiguating different attacks is harder with MLalgorithms. But given the current pre- vailing exploit-as-a-service [ 17] and crimeware-as-a-service [ 50] situations, it is already exceedingly difficult to know which vulner- ability an adversary exploited. And if MLalgorithms get CVE-ID s, it may slowly become easier to identify and catalog which attacks an ML system is expected to be vulnerable to or resist. 4.2 Vulnerability report intake In addition to receiving reports, this service area is where any ana- lysts ‚Äúreview, categorize, prioritize, and process‚Äù a report [ 2]. There are various human processes that will need to adjust if MLalgo- rithms receive CVE-ID s and become part of this process. We will focus on prioritization. Review, categorization, and processing will all require analysts to acquire new skills and expertise to under- stand MLalgorithms, but this may be handled in the medium term by creating a CSIRT dedicated to the open-source MLcommunity. Such specialized CSIRT s exist for industrial control systems, for example. And for broader security awareness beyond vulnerability management, Information Sharing and Analysis Centers ( ISAC s) serve a similar function. Prioritization cannot be so easily handed off to a specialized workforce. Prioritization implies giving a CVSS score to the vulnerabil- ity [10]. Although a CVSS base score is explicitly not to be used on its own as a prioritization score, the technical severity as measured byCVSS is often considered an important factor in vulnerability prioritization for many organizations today. The CVSS base score is intended to reflect the ‚Äúreasonable worst case impact‚Äù, and encapsu- lates the relative ease of exploitation (exploitability) and the direct consequences of a successful exploit (impact). The dimensions of exploitability include attack vector, attack complexity, required privileges, and user interaction; while impact considers scope and the confidentiality-integrity-availability triad [ 10, ¬ß1]. Table 1 sum- marizes the options for CVSS base metrics. What would happen if we try to give a CVSS score to VU#425163? The first thing we notice is that the guidance of evaluating the ‚Äúrea- sonable worst case impact has limited utility when applied to ML algorithms. The meaning of ‚Äúreasonable‚Äù in the context of an algo- rithm is difficult to bound, as an algorithm could be used in so many NSPW ‚Äô20, October 26‚Äì29, 2020, Virtual conference Spring, Galyardt, Householder, and VanHoudnos different contexts. When considering exploitability, there are plau- sible scenarios where the misclassification can be forced remotely (attack vector: network), the attack can be automated [ 38] (attack complexity: low), the adversary can submit test cases without prior authentication (privileges required: none), and the user does not have to do anything (user interaction: none). For impact, the first metric is scope ‚Äì can the compromise of the vulnerable component be used by the adversary to compromise other parts of the informa- tion system of which it is a part to increase the scope of the attack. For ML algorithms, attacking the behavior of the ML algorithm can change the behavior of the car, robot, or system in which the trained ML model is embedded (scope: changed). The last three questions are about the CIA triad, but since scope is changed it is the worse case of the algorithm itself or the wider scope of what is the adversary can access. Kumar et al . [28] would characterize this kind of misclassification attack as a failure of algorithm integrity, so we can safely set integrity to high. The same CVE-ID will apply to forcing a Tesla autopilot to change lanes, which, in a reasonable worst case, could cause the car to crash, which sets availability to high as well. Even if we ignore confidentiality and set it to none, the CVSS score is maxed out at 10.0. This is probably not a reasonable CVSS score, or at least it is out of sync with scores for other vulnerabilities. It is unclear whether this indicates our MLalgorithm vulnerability is particularly bad, or whether CVSS just is not suited to analyze such vulnerabilities. Given that CVSS has a host of problems, including complaints it does not apply properly to domains such as industrial control sys- tems, medical devices, and robots, we hypothesize the problem lies with CVSS in our thought experiment as well. Spring et al . [52] proposes an alternative, stakeholder-specific vulnerability prioriti- zation scheme that would be more easily adapted to MLalgorithm vulnerabilities. 4.3 Vulnerability analysis The purpose of vulnerability analysis is to triage incoming reports, understand the root cause of the vulnerability, and develop coun- termeasures to fix or mitigate the vulnerability [2]. Triage is heavily dependent on prioritization, and so mirrors the discussion in Section 4.2. The ingredient triage adds is asset management. For example, if the vulnerable component identified by the CVE-ID is not installed anywhere the security team is re- sponsible for, then the priority does not matter. Asset management ofMLalgorithms is a challenging problem. The modern cyberse- curity paradigm already struggles with vulnerabilities in libraries that may be used in diverse products; these challenges are well- documented by the work on Software Bill of Materials ( SBOM ) [24]. Tracking vulnerable MLalgorithms will only make this problem more urgent. Such tracking may meet initial resistance from the system vendors, under the argument that CVE-ID s may reveal the algorithm they use and that choice may be intellectual property or some such. Whether this legal argument carries will likely be jurisdiction specific; in places with a strong right to explanation (such as in the GDPR), such information seems less likely to be protected. Root cause analysis is affected in similar ways as vulnerability discovery. The AML academic research field is currently engaged inroot cause analysis for all the vulnerable algorithms. What assigning CVE-ID s would change is to drive conversation between the AML research community and system engineers and system owners, who will likely gain increased awareness that their MLsystems have flaws. As Kumar et al . [28] identifies, there is a gap here in that the two communities lack a shared language in which to communicate. So far the main efforts seem to have been to teach system owners the language from AML . Assigning CVE-ID s to algorithm vulnerabilities would start the work of teaching the AML researchers language from operational security. Developing countermeasures for vulnerabilities in MLalgorithms will continue to be a hard problem. While there is 15 years of re- search within the AML community, we are not aware of any public discussion on how to build an MLsystem with appropriate mit- igations or workarounds in place to isolate the algorithm from adversary interference. Security professionals use mitigations and workarounds for vulnerabilities regularly, when a fix is not avail- able or not practical. For example, one recommended mitigation for any SMB service is to only expose it to a trusted local network, never the internet. This workaround does not fix SMB vulnerabili- ties, but it does mitigate them. Biggio and Roli [3, ¬ß5.1 ]summarizes six papers under the heading ‚Äúreactive defenses‚Äù that likely map to workarounds and mitigations. CVE-ID s may help system owners and developers track which workarounds are necessary for their systems. But the system engineering practices for ML-enabled sys- tems are still a work in progress as well [ 20]. The need is especially dire if such systems have a cybersecurity task such as malware iden- tification, which must be exposed to adversary-crafted input [51]. 4.4 Vulnerability coordination Coordinated Vulnerability Disclosure ( CVD ) is ‚Äúthe process of gath- ering information from vulnerability finders, coordinating the shar- ing of that information between relevant stakeholders, and disclos- ing the existence of software vulnerabilities and their mitigations to various stakeholders, including the public‚Äù [ 23, ¬ß1.2]. The previ- ous sections have highlighted the knowledge gap between security operations and AML researchers. CVD is probably the place where those knowledge gaps will evidence as barriers. All three steps ‚Äì gathering information, sharing that information, and disclosing vulnerabilities ‚Äì are dependent on shared knowledge. For example, consider VU#425163. If that vulnerability were to get a CVE-ID , its finders in the AML community would likely react with confusion. The issue has been known for years; they would have some questions about why assign an identifier now. Next, who do we share information about the vulnerability with ‚Äì it is already public, after all. And there is no easy way, at present, to notify specific vendors because there is no listing of which products use which algorithms. Despite these facts, the statements from the engineering and policy community are that the information about these flaws is not getting where it needs to; that is the whole premise of the efforts by [ 28]. Communication and coordination seem to be failing somewhere, likely at multiple points. Assigning VU#425163 aCVE-ID would not solve any of these problems. But it might start some conversations that may build some trust and shared understanding that form the beginnings of coordination. On managing vulnerabilities in AI/ML systems NSPW ‚Äô20, October 26‚Äì29, 2020, Virtual conference 4.5 Vulnerability disclosure Disclosure is closely linked to coordination. Two topics that would be affected here are announcements and timelines. Vulnerability an- nouncements are affected because they include the results of several things discussed above, such as severity scores, identifiers, recom- mended fixes or mitigations, and a description using shared termi- nology. The relevant constituents may also be different from current vulnerability announcements, as Section 4.4 indicated. While these are a lot of changes to announcements, none of them require further discussion; timelines do. In security operations, vulnerability disclosure timelines are al- ready a contentious topic. The consensus position is often described as ‚Äúcoordinated,‚Äù as in CVD , where a vendor is told about vulnera- bilities in their software before the public or attackers so that the vendor has a chance to develop and deploy a fix. The AML commu- nity works under what might be called a zero notification paradigm ‚Äì results tend to be published with no prior warning to those who develop or use the algorithm. There are security practitioners who advocate and practice this for vulnerabilities in traditional systems, but it is not the norm in most communities. These two differing sets of norms would come into conflict if a widely used and dis- tributed product were tagged with a CVE-ID because overnight anMLalgorithm vulnerability is discovered, posted to arXiv, and assigned a CVE-ID . How this conflict would be resolved depends on various political, operational, and technical factors. While we cannot venture a prediction as to how the conflict will resolve, the fact that there will be a conflict between these two norms is almost certain. 4.6 Vulnerability response Vulnerability response is where operations folks do something to prevent vulnerabilities from being exploited. There are two basic steps: detecting which systems an organization manages are vul- nerable to which flaws and applying fixes or mitigations to those systems. For any system, traditional IT or ML, some of the vul- nerable systems an organization manages will not have CVE-ID s; web server misconfigurations are a common example. We focus on those vulnerabilities with CVE-ID s. Both detection and response would need to adapt if MLalgorithms are assigned CVE-ID s, be- cause in practice many detection and response workflows are based on CVE-IDs as the primary unit of work. The change to detection would depend on how much work can be done during analysis and coordination to link a vulnerable algo- rithm to deployment in specific product versions. This connection gets easier if the vulnerability is associated with certain published models that use the algorithm, but may get harder if the vulner- ability depends on features of the training or test data. However, proprietary products rarely reveal their model or algorithm, which, in the short term at least, will make detection challenging. It is likely that there will not be simple vulnerability scans to detect ML algorithm vulnerabilities, which upends the current de- tection paradigm that relies heavily on operations like Nessus scans. If detection does not adapt, one possible outcome of our thought experiment is that while MLalgorithms have CVE-ID s, there is no operational impact because those CVE-ID s are never identi- fied on deployed systems. For at least the medium term, detectionof systems with vulnerable MLalgorithms would be manual or mostly manual based on annotation of asset management databases. Whether or not this is acceptable will depend on the volume of vul- nerable systems and the volume of attacks against systems without fixes or mitigations in place. As Section 4.3 discussed, developing fixes and mitigations for these algorithm vulnerabilities will continue to be a hard problem. Response has a dependency on there being a fix or mitigation for operations folks to apply. This alludes to another possible fate of the thought experiment: there is raised awareness of exactly which systems are vulnerable to which kinds of attacks, but nothing for anyone to do about it. This statement is a bit overly dramatic, of course. System owners can either make a risk management decision that the system provides enough value to be worth the risk, or not. And usual system security principles such as least access and least privilege should still apply. A more measured possible fate of our thought experiment is that system owners become aware that they have taken on more vulnerable systems than they expected or understood, and re-evaluate either their need or deployed protections for those systems . Until the AML community can provide more comprehensive fixes, this may be the best response available. And, if we establish the connection to between AML research and operational security sooner, then it should reduce the time to communicate and deploy those fixes when they become available. 5 BY THE LETTER OF THE RULES Section 4 explored the impact of assigning CVE-ID s toMLalgo- rithm vulnerabilities in general. This section explores the details of the CNA rules on assigning CVE-ID s to specifically ask whether CERT/CC could be justified in assigning a CVE-ID to the vulnera- bility note VU#425163 identifying gradient descent as vulnerable to misclassification attacks [ 22]. The CNA rules [ 9] have four aspects to consider: (1) What is a Vulnerability? (2) How many Vulnerabilities? (3) CNA Scope (4) Requirements for Assigning a CVE ID We consider each of these in detail below. 5.1 What is a Vulnerability? CVE-ID assignment rules [ 9] allow for a degree of latitude for CNA judgement, but do provide some specific guidance. Each of these criteria can be applied to VU#425163, though it takes a bit more work than with a traditional implementation-level vulnerability in a product. Rule 7.1.1 says if the vendor recognizes the report as a vulnerabil- ity, then the report must be considered a vulnerability. In the case of most protocols and some algorithms, there is often a standards body responsible for maintaining the specification. That standards body is seen as the vendor for the purposes of CVE-ID assignment. For example, the cryptographic algorithm MD5 is specified in IETF RFC- 1321 [ 45] and has at least one assigned CVE-ID (CVE-2004-2761). But unlike MD5, the gradient descent algorithm is not owned by a standards body. There are multiple variants of gradient de- scent [ 46], but the basic stochastic algorithm for training neural NSPW ‚Äô20, October 26‚Äì29, 2020, Virtual conference Spring, Galyardt, Householder, and VanHoudnos networks dates to the late 1980s [ 1]. Therefore it is difficult to pin down a specific vendor who would authoritatively judge 7.1.1. The authors of the paper are the closest thing to the role of ven- dor, but this seems like a poor fit for assigning responsibility for maintenance. Vulnerabilities can still be identified in abandonware though, so this should not be a big problem. Rule 7.1.2 says the report should be considered a vulnerability if a product security policy is violated. In the case of a stochastic algorithm such as a classification algorithm, it seems that acceptable false positive or false negative rates might constitute such a policy. If an attacker can present the system with inputs that would otherwise be rare, it seems that a policy based on FPR or FNR would be violated. One might make a similar argument about fit quality for a regression needing to meet some specified tolerance. But stochastic policies can be difficult for security analysts to reason about. The question of negative impact posed in Rule 7.1.3 is somewhat harder. The assertion of VU#425163 is that all systems in which gradient descent is used are susceptible to exploitation by adversar- ial input. So even though some implementations might not have a security relevant impact were exploitation attempted, it seems likely that some security relevant impact will occur in some imple- mentations. So far, it seems our strongest arguments in favor of treating VU#425163 as a vulnerability per CVE-ID assignment rules are 7.1.2 and 7.1.3 coupled with CNA discretion. 5.2 How many Vulnerabilities? Proceeding through the four questions, we reach section 7.2 of the CNA rules, which focuses on the concept of independent fixes. Rule 7.2.1 simply prohibits duplicate assignments. Rule 7.2.2 prohibits assignment when a dependency on another vulnerability exists, which is not the case for our example. Rule 7.2.3 suggests resolving uncertainty about independence by assigning a single CVE-ID . In effect, splitting is taken to be easier than merging should revisions be needed. Rule 7.2.4 addresses what to do when ‚Äúmultiple products are affected by the same independently fixable vulnerability‚Äù arising from shared code. But both protocols and algorithms can have multiple implementations and therefore may not share code even though they share a vulnerability, making this rule inapplicable. Rule 7.2.5 resolves the situation when the vulnerability originates in functionality or specification, as is the case for both protocol and algorithm vulnerabilities. If there is a way to implement the functionality securely, then each implementation that fails to do so must get its own CVE-ID according to rule 7.2.5.a. Conversely, a single CVE-ID is required by rule 7.2.5.b when there is no way to implement the specification or functionality securely. Rule 7.2.5.c resolves ambiguity in favor of multiple assignments. In understanding 7.2.5, compare the vulnerability in this gradient descent algorithm to known errors in floating point handling algo- rithms. There is not a vulnerability in floating point handling per se because it is possible to handle floating points properly. Floating point algorithms have known errors that can lead to vulnerabili- ties, for example, CVE-2006-6499. This situation is an example of 7.2.5.a. The C Secure Coding standard discusses these floating point algorithm issues under FLP00-C through FLP07-C [ 48]. However, there is no known secure method for training a model with gradientdescent (see Section 3.1). So it does not seem comparable to algo- rithms like floating point handling ‚Äì which have known problems but also have known secure methods for use. VU#425163 describes a problem with every system that uses gradient descent in training models, so rule 7.2.5.b seems most relevant here, thereby requiring a single CVE-ID assignment rather than one per affected product. This is consistent with assigning CVE-ID s to cryptographic algorithms and protocol specifications as previously noted. 5.3 Scope and Requirements The remainder of the CVE-ID assignment rules are easier to get through: Rule 7.3 verifies that the vulnerability is in scope for the CNA making the assignment. CERT/CC ‚Äôs scope as a CNA covers assignment related to its vulnerability coordination role, so this falls within our scope. Rules 7.4.1, and 7.4.2 verify that the report is intended to be public, which is true because VU#425163 exists. Rule 7.4.3 prohibits duplicate assignment to previously assigned CVE-ID s. Rules 7.4.4, 7.4.5, and 7.4.6 address the differences between vulnerabilities for which someone other than the CNA must take action to resolve. The only relevant one for our case is rule 7.4.6, which allows assignment for cases where the affected product(s) or service(s) are not owned by the CNA but are customer controlled. CERT/CC does not own the gradient descent algorithm, and it is used in customer controlled systems. Rule 7.4.7 requires assignments not be made for products that are neither licensable nor publicly available. For VU#425163, although the gradient descent algorithm itself is not licensed, it is publicly available, so rule 7.4.7 does not impede us. Finally, rule 7.4.8 requires CNAs to consider only these rules when making assignment decisions. Therefore per the CNA assign- ment rules, it seems that VU#425163 deserves a CVE ID. 5.4 Assignment conclusions In a discussion among the authors and the analyst staff at CERT/CC , several of us hold the view that VU#425163 and issues like it might be better suited as a category of vulnerability ‚Äì such as CWE entries or an OWASP item to avoid ‚Äì rather than CVE-ID s. The lack of vendor ownership of an algorithm (or family of algorithms) was one recurring concern. This question of ownership is open around ML systems generally; for example, what exactly can be patented (and therefore owned) is unclear. But in general, a specific model for a specific purpose can be patented but an algorithm like logistic regression cannot. If an object is patented, it definitely has an owner; but an unpatentable item may still have an ‚Äúowner‚Äù in the CVE sense if, for example, an algorithm is specified by an open standards body. We have not been able to resolve the relevant algorithm ownership question to our satisfaction. Another concern centered on the fact that not all trained models are exposed to attacker-controlled input to the same degree, so the fact that gradient descent was used to train a model embedded in the system may not imply that an attacker can exploit it. Finally, from a vulnerability management operational perspective, many organizations have policies that require known vulnerabilities (that is, those with CVE-ID s assigned) to be fixed in a timely manner. On managing vulnerabilities in AI/ML systems NSPW ‚Äô20, October 26‚Äì29, 2020, Virtual conference Because the only known fix for VU#425163 basically boils down to defense-in-depth, it was easier for many analysts to consider this as a weakness ‚Äì and therefore deserving of a CWE entry ‚Äì rather than a CVE-ID. This situation does not resolve a final recommendation for or against assigning a CVE-ID to VU#425163. On the one hand, the CNA rules recommend assigning a CVE-ID . On the other hand, at least some professional vulnerability analysts think of it as a weak- ness and not a vulnerability. These tensions should be addressed in either outcome; it is unclear whether the CNA rules should change or the professional community intuitions should adapt. 6 THOUGHT EXPERIMENT 2: MODEL OBJECTS This section explores a second hypothetical situation, if algorithm vulnerabilities such as VU#425163 are not assigned CVE-ID s, what if the the trained model objects themselves were assigned CVE-ID s? Specifically, as discussed in Section 3.3, the trained model object within the ML system can enter a vulnerable state when the ML sys- tem interacts with its environment. Since the trained model object is a component of the software system that has a defined version, can persist for long periods of time, and can enter a vulnerable state, we explore the consequences of assigning trained model objects CVE-ID s. It is possible this scenario has happened; CVE-2019-8760 identifies a vulnerability in Apple‚Äôs Face ID software that was fixed by ‚Äúimproving Face ID machine learning models.‚Äù However, our thought experiment will cover MLmodels generally, not just mod- els with a security function. Furthermore, Apple has not released details about its response to CVE-2019-8760, therefore to achieve a useful level of detail in the discussion we will exercise another thought experiment about known flaws in a popular model object. As the specific example, consider Xu et al . [57] which generated an adversarial t-shirt pattern that successfully evaded the person detection capability of two COCO [ 30] trained object detectors, Faster R-CNN [ 44] and YOLO v2 [ 43]. Although Xu et al . [57] do not release their code nor specify precisely which trained model objects they used, there is sufficient detail in their paper that, at a minimum, the torchvision implementation of Faster R-CNN, available in a version pre-trained on COCO [ 55], and the darknet implementation of YOLOv2, available in a version pre-trained on COCO [ 42], are both vulnerable to the adversarial t-shirt pattern. For brevity, we refer to this candidate CVE-ID as CVE-tee. The hypothetical CVE-tee will focus on these pre-trained model objects. However, this example makes space for further questions about to what a CVE-ID should be assigned. YOLOv2 is a framework for training a neural network on image data sets. In the terms of Figure 1, it is a model building and validation framework. Some aspects of YOLOv2 are fixed ‚Äì the MLalgorithm it trains is a single neural network. Many are configurable. Some aspects, such as the training data set, are configurable. The CVE-tee example focuses on the COCO data set. There are examples of problems localizable to the training data set ‚Äì for example, Buolamwini and Gebru [4]. Whether a CVE-ID might be more productively assigned to the model building framework or the training data set are open questions for future work. This paper is focused on just two of the more extreme points in the possible space of where a CVE-ID mightbe assigned ‚Äì the MLalgorithm (Section 4) and a specific trained model object (this section). Each of the following subsections examines our thought exper- iment through one of the CSIRT services withing vulnerability management, following our thought experiment in Section 4. 6.1 Vulnerability discovery / research As in the prior thought experiment, vulnerability discovery will not change much beyond the substantial increase in the number of persons who should be counted as doing vulnerability discovery. For example, there are a growing collection of academic papers that already take as a starting place a publicly available model object and publish exploits that force those model objects into undesirable states, such as our motivating example for CVE-tee. As in the current paradigm, not all vulnerable model objects will be assigned a CVE-ID , for reasons much the same as in the prior thought experiment. A particular concern for assigning trained model objects CVE-ID s is persistence of the the trained model. For example, some versioned models might be so short-lived as to not warrant CVE-ID assignment, such as during training itself or during internal development. The CVE rules do not specifically address a minimum time of existence to assign an ID, although there is mention of the need for public notification, which implies mass human-scale response times. That said, there are many trained model objects that have a persistence measured in years, notably the models released by popular deep learning frameworks, such as in torchvision and keras.io. The YOLOv2 exemplar models for CVE-tee, for example, has been available since 2016. A second concern is that, as of this writing, all trained models are vulnerable to an attacker who is aware of the defense strategies used to defend the model [ 6,56]. This implies that every machine learn- ing system that is released would have open CVE-ID s associated with its trained model. Such mass assignment is not necessarily a negative thing, because it makes clear to both the machine learning community and the security community that using these models in situations that impact a given security policy is delicate matter that requires careful thought. 6.2 Vulnerability report intake In the prior thought experiment, the focus was on assigning al- gorithms CVE-ID s. Section 4 has an underlying assumption that there are relatively few algorithms to study. In this thought experi- ment, we consider assigning CVE-ID s to trained model objects; this suggests several orders of magnitude more CVE-ID s be assigned be- cause one widely used algorithm can produce many such vulnerable model objects. For example, we identified two candidate models for CVE-tee, the official torchvision and darknet implementations of Faster R-CNN and YOLOv2, respectively. We chose those models out of famil- iarity. However, there are many additional model files available for download that have been pre-trained on COCO. For example, Faster R-CNN was published at Neurips in 2015, and their initial implementation was in MATLAB (https://github.com/ShaoqingRen/ faster_rcnn). The authors later released a version in python (https: //github.com/rbgirshick/py-faster-rcnn), and the success of their ap- proach has led to multiple implementations in pytorch, tensorflow, NSPW ‚Äô20, October 26‚Äì29, 2020, Virtual conference Spring, Galyardt, Householder, and VanHoudnos keras, etc. These model object versions may be considered similar enough in some important sense to receive the same CVE-ID . How- ever, tracking all of the Faster R-CNN and YOLOv2 model objects trained on COCO and their derivatives is a non-trivial task. An additional concern, as in the prior thought experiment, is prioritization of an ML vulnerability. Although the trained model is a more concrete product than an algorithm, there is still a wide variety of contexts in which the trained models might be used. The ‚Äúworst case‚Äù reasoning of CVSS will lead to us giving this vulnerability, and presumably most CVE-ID s in trained models, a ‚Äúcritical‚Äù CVSS score (above 9.0). While this may be justified, it will cause friction during report intake if there is a large influx of high priority vulnerabilities. 6.3 Vulnerability analysis As discussed in the prior thought experiment, root cause analysis and the development of mitigations are open research questions in the AML community. The processes of understanding the root cause and developing countermeasures may be aided by having a more concrete model object and vulnerable state to focus on. For example, in the case of CVE-tee, the vulnerability report is a demonstration that two popular object detectors are fooled by a person wearing a particular pattern on their clothing, specifically a t-shirt. This leads to various mitigation strategies that may be more or less appropriate given the broader context of why an object detector is used to detect the presence of persons in a frame of video. These could range from social interventions, such as requiring persons to wear a specific uniform and enforcing that requirement without machine learning, to technical ones. A particular technical approach might be to move away from standard cameras and object detectors trained on COCO to infra-red cameras and object detectors trained on IR data, such as https://www.flir.com/oem/adas/adas-dataset-form/. Since the engi- neering involved in creating a thermally active adversarial pattern is harder than printing a t-shirt, this may be a useful mitigation. 6.4 Vulnerability coordination As in the prior thought experiment, the AML community will likely react with confusion if a CVE-ID is assigned to a set of trained model objects, for much the same reasons as the confusion that would result from an algorithm being assigned a CVE-ID . Again, the general issue has been known for years, the vulnerabilities are already public, and the notification of vendors is difficult because there is no list of which vendors use which model objects (or their derivatives) for their products. Assigning CVE-tee a CVE-ID would not solve any of theses problems, but it might start some conversa- tions that may build the trust and shared understanding necessary for coordination to begin. Assigning CVE-ID s may also have a chilling effect on the willing- ness of researchers to share trained models with the public. If, for example, the assignment of a CVE-ID is perceived by the researcher as a negative mark upon their work, then this may make a given researcher less likely to release the code and trained models that make it easier for others to continue to move the field forward or put the results of research to innovative uses. Similarly, since the current state of AML is unable to isolate the root causes of agiven vulnerability ‚Äì that is, we do not know what lines of code to change or different algorithm to use ‚Äì researchers may perceive the assignment of CVE-ID s as unnecessary, which may erode rather than build trust. Risks of chilling effects notwithstanding, there is reason to be- lieve that the AML and security communities can build the neces- sary relationships. First, the CSIRT community has been here before. For example, the medical device community is on a path to more ma- ture vulnerability management. Roughly, this has meant building relationships between the CSIRT and medical device communities. That journey has included Food and Drug Administration ( FDA) reg- ulations on pre-market and post-market handling of vulnerabilities and the Health ISAC creating a community in which vulnerability management skills can be cultivated and encouraged [ 19]. Such re- lationship building has had fits and starts, but it provides historical lessons that could facilitate improved outcomes for connecting the AML andCSIRT communities. Second, there are high-profile ex- amples within the AML community that attempt to perform CVD , such as OpenAI staging the release of its GPT-2 model over a period of six months (https://openai.com/blog/gpt-2-6-month-follow-up/). This community building will be hard, and regulation is not the right solution for every community, but MLis not going to become less important and so it is probably wise to start this hard work. 6.5 Vulnerability disclosure As in the prior thought experiment, there is likely to be a conflict between the zero notification paradigm commonly practiced by the AML community and the CVD paradigm adopted by other security communities. This is not ameliorated by changing the level at which theCVE is assigned. It remains to be seen how this conflict will resolve. Specifically, it remains unclear if academic researchers, who are under significant pressure to share their results as quickly and widely as a possible, would be willing to wait to publish their exploits. 6.6 Vulnerability response The response portion is where operations takes some action to pre- vent vulnerabilities from being exploited. As in the prior thought experiment, the steps are similar: identify which systems are vulner- able to which flaws, and then respond by mitigating those vulnera- bilities as necessary. The modifications necessary to these processes when ML algorithms are assigned CVE-ID s are broadly similar to when model objects are assigned CVE-ID s. In both cases, it will be challenging to identify which systems have which vuls, either because the system was trained with a vulnerable algorithm or contains a model object that has a known vulnerability. We believe the key difference will be in developing mitigations. For example, a CVE-ID assigned to VU#425163 could give only gen- eral advice. For example, Figure 1 indicates the adversarial pattern could be dealt with at a variety of levels. An operator could modify the environment so that the sensor is unlikely to encounter the adversarial pattern, or modify the sensor itself to make the pat- tern more difficult to produce, or add a run-time monitoring tool focusing on detecting such patterns, or modify the software compo- nents upstream from the trained model to filter out such patterns, or modify the software components downstream of the trained On managing vulnerabilities in AI/ML systems NSPW ‚Äô20, October 26‚Äì29, 2020, Virtual conference model to ameliorate the effects of fooled inputs. In contrast, if a CVE-ID were assigned to a model object ‚Äì and a particular threat to it, such as CVE-tee ‚Äì the advice given could be more specific. For example, suggested mitigations could include modifying the social environment to enforce clothing norms that preclude such a pattern, investing in infrared sensors so that an attack would need to produce thermal patterns ‚Äì which is much harder ‚Äì to fool the sensor, etc. Such increased focus and reduced scope may lead to more productive conversations between the relevant stakeholders. 7 CONCLUSION These changes to vulnerability management are simultaneously minor and revolutionary. Although there are important practical differences between assigning CVE-ID to algorithms versus model objects, the two thought experiments result in similar changes to the current vulnerability management paradigm. From the following perspectives, the changes are minor. ‚Ä¢MITRE‚Äôs guidance for CNAs need not change. ‚Ä¢The number of MLalgorithm vulnerabilities would only be a small percentage increase over the 20,000 CVE-ID s assigned annually (in 2019); model object vulnerability assignments would create more CVE-ID s than algorithms but still not more than several hundred per year. ‚Ä¢The presence of these vulnerabilities in existing MLalgo- rithms and model objects is well-known and repeatedly demonstrated. ‚Ä¢Within vulnerability management and security management more generally, it is normal for sector-specific groups (such asISAC s or Information Sharing and Analysis Organizations (ISAOs)) to form to handle sector-specific issues. ‚Ä¢Challenges in vulnerability management due to supply chain and asset management may be emphasized, but are not new. ‚Ä¢Current CVSS scoring norms struggle to adapt to various existing stakeholder communities, and it is not clear that AML is worse than other areas such as medical devices. On the other hand, the following changes indicate a paradigm shift for either AML, vulnerability management, or both. ‚Ä¢Although cryptographic algorithms have had vulnerabilities in the past, algorithm-level vulnerabilities have been essen- tially unknown in the current vulnerability management regime. ‚Ä¢How to fix the vulnerable algorithms or defend model objects is not known, so any assigned CVE-ID s would be open issues for an unknown length of time. ‚Ä¢Asset owners and security policy folks who are fluent in vulnerability management do not currently speak a shared language with academic AML researchers. ‚Ä¢Engineering guidance for MLsystems is nascent [ 20] and it is not clear how to handle supply chain documentation or asset management, including whether algorithms should be identified as assets; model objects are often not identified as assets in practice, though it would be easier to identify them than algorithms. ‚Ä¢Current CVSS scoring norms probably are not suitable for either algorithm or model-object vulnerabilities. ‚Ä¢AML publication timelines and CVD norms are in conflict.Many of these changes are in tension; sometimes one aspect of a change is minor while from another perspective the same change is revolutionary. The thought experiment does not provide a strong recommendation for or against; like many problems in vulnerability management, it is nuanced and complicated. However, many of the major changes are probably things that would benefit both com- munities. So while they may be hard, they are desirable. From this perspective, the MLengineering, vulnerability management, and AML communities probably should build the appropriate bridges and communication infrastructure. Then the question is whether we can make the time. ACKNOWLEDGMENTS Copyright 2020 ACM. This material is based upon work funded and supported by the Department of Defense under Contract No. FA8702-15-D-0002 with Carnegie Mellon University for the op- eration of the Software Engineering Institute, a federally funded research and development center. References herein to any specific commercial product, process, or service by trade name, trade mark, manufacturer, or otherwise, does not necessarily constitute or imply its endorsement, recommendation, or favoring by Carnegie Mellon University or its Software Engineering Institute. [DISTRIBUTION STATEMENT A] This material has been approved for public release and unlimited distribution. Please see Copyright notice for non-US Government use and distribution. CERT Coordination Center ¬Æis registered in the U.S. Patent and Trademark Office by Carnegie Mellon University. REFERENCES [1]S Becker and Yann Lecun. 1989. Improving the convergence of back-propagation learning with second-order methods. In Proceedings of the 1988 Connectionist Models Summer School, San Mateo . Morgan Kaufmann, 29‚Äì37. [2]Vilius Benetis, Olivier Caleff, Cristine Hoepers, Angela Horneman, Allen House- holder, Klaus-Peter Kossakowski, Art Manion, Amanda Mullens, Samuel Perl, Daniel Roethlisberger, Sigitas Rokas, Mary Rossell, Robin M. Ruefle, D‚Äôesir‚Äôee Sacher, Krassimir T. Tzvetanov, and Mark Zajicek. 2019. Computer Security Inci- dent Response Team (CSIRT) Services Framework . Technical Report ver. 2. FIRST, Cary, NC, USA. [3]Battista Biggio and Fabio Roli. 2018. Wild patterns: Ten years after the rise of adversarial machine learning. Pattern Recognition 84 (2018), 317‚Äì331. [4]Joy Buolamwini and Timnit Gebru. 2018. Gender shades: Intersectional accu- racy disparities in commercial gender classification. In Conference on fairness, accountability and transparency . 77‚Äì91. [5]Nicholas Carlini. 2020. A Complete List of All Adversarial Example Papers. https://nicholas.carlini.com/writing/2019/all-adversarial-example-papers.html [6]Nicholas Carlini, Anish Athalye, Nicolas Papernot, Wieland Brendel, Jonas Rauber, Dimitris Tsipras, Ian Goodfellow, Aleksander Madry, and Alexey Kurakin. 2019. On Evaluating Adversarial Robustness. arXiv preprint arXiv:1902.06705 (2019). [7]Nicholas Carlini, Matthew Jagielski, and Ilya Mironov. 2020. Cryptanalytic Extraction of Neural Network Models. arXiv:2003.04884 [cs] (July 2020). http: //arxiv.org/abs/2003.04884 arXiv: 2003.04884. [8]Danielle Keats Citron and Frank A. Pasquale. 2014. The Scored Society: Due Process for Automated Predictions. Washington Law Review 89, 8 (2014). https: //ssrn.com/abstract=2376209 [9]CVE Board. 2020. CVE Numbering Authority (CNA) rules . Technical Report ver. 3.0. MITRE, Bedford, MA. https://cve.mitre.org/cve/cna/rules.html [10] CVSS SIG. 2019. Common Vulnerability Scoring System . Technical Report version 3.1 r1. Forum of Incident Response and Security Teams, Cary, NC, USA. https: //www.first.org/cvss/v3.1/specification-document [11] Chad R Dougherty. 2008. VU#836068: MD5 vulnerable to collision attacks. https: //kb.cert.org/vuls/id/836068 Accessed 2020-08-10. [12] Vera Eidelman. 2018. The First Amendment Case for Public Access to Secret Algorithms Used in Criminal Trials. Georgia State University Law Review 34, 4 (August 2018). [13] Golnoosh Farnadi, Behrouz Babaki, and Lise Getoor. 2018. Fairness in Relational Domains. In AIES ‚Äô18: Proceedings of the 2018 AAAI/ACM Conference on AI, Ethics, NSPW ‚Äô20, October 26‚Äì29, 2020, Virtual conference Spring, Galyardt, Householder, and VanHoudnos and Society , Jason Furman, Gary Marchant, Huw Price, and Francesca Rossi (Eds.). New Orleans, LA, USA. https://doi.org/10.1145/3278721.3278733 [14] David Fox, Eric Arnoth, Clement Skorupka, Catherine McCollum, and Deborah Bodeau. 2018. Enhanced Cyber Threat Model for Financial Services Sector (FSS) Institutions . Technical Report 18-1725. Homeland Security Systems Engineering and Development Institute, McLean, VA. [15] Peter Galison. 1999. Trading zone: Coordinating action and belief. The Science Studies Reader (1999), 137‚Äì160. [16] April Galyardt, Nathan M. VanHoudnos, and Jonathan M. Spring. 2020. Comments on NISTIR 8269 (A Taxonomy and Terminology of Adversarial Machine Learning) . Technical Report. Software Engineering Institute, Carnegie Mellon University, Pittsburgh, PA. https://resources.sei.cmu.edu/library/asset-view.cfm?assetid= 637327 [17] Chris Grier, Lucas Ballard, Juan Caballero, Neha Chachra, Christian J. Dietrich, Kirill Levchenko, Panayiotis Mavrommatis, Damon McCoy, Antonio Nappa, Andreas Pitsillidis, Niels Provos, M. Zubair Rafique, Moheeb Abu Rajab, Christian Rossow, Kurt Thomas, Vern Paxson, Stefan Savage, and Geoffrey M. Voelker. 2012. Manufacturing Compromise: The Emergence of Exploit-as-a-service. In Conference on Computer and Communications Security . ACM, Raleigh, North Carolina, USA, 821‚Äì832. [18] Tianyu Gu, Brendan Dolan-Gavitt, and Siddharth Garg. 2019. BadNets: Identify- ing Vulnerabilities in the Machine Learning Model Supply Chain. arXiv:1708.06733 [cs](March 2019). http://arxiv.org/abs/1708.06733 arXiv: 1708.06733. [19] Health ISAC. 2019. Medical Device Security Media Education Materials. https: //h-isac.org/cvd-media-kit/ Accessed Aug 18, 2020. [20] Angela Horneman, Andrew Mellinger, and Ipek Ozkaya. 2019. AI Engineering: 11 Foundational Practices . Technical Report. Software Engineering Institute, Carnegie Mellon University, Pittsburgh, PA. [21] Allen Householder. 2015. Systemic Vulnerabilities: An Allegorical Tale of Steam- punk Vulnerability to Aero-Physical Threats . CERT Coordination Center, Software Engineering Institute, Carnegie Mellon University. https://www.youtube.com/ watch?v=4AHpL3kVHw4 [22] Allen Householder, Jonathan M. Spring, Nathan VanHoudnos, and Oren Wright. 2020. Machine learning classifiers trained via gradient descent are vulnerable to arbitrary misclassification attack. https://kb.cert.org/vuls/id/425163/ [23] Allen D. Householder, Garret Wassermann, Art Manion, and Christopher King. 2020. The CERT ¬ÆGuide to Coordinated Vulnerability Disclosure . Technical Report CMU/SEI-2017-TR-022. Software Engineering Institute, Carnegie Mellon University, Pittsburgh, PA. https://vuls.cert.org/confluence/display/CVD [24] Michelle Jump and Art Manion. 2019. Framing Software Component Transparency: Establishing a Common Software Bill of Material (SBOM) . Technical Report. National Telecommunications and Information Administration, Washington, DC. [25] Joshua A. Kroll, Joanna Huey, Solon Barocas, Edward W. Felten, Joel R. Reidenberg, David G. Robinson, and Harlan Yu. 2017. Accountable Algorithms. U. PA. Law Review (2017), 633‚Äì. https://scholarship.law.upenn.edu/penn_law_review/ vol165/iss3/3 [26] Ram Shankar Siva Kumar, Magnus Nystr√∂m, John Lambert, Andrew Marshall, Mario Goertzel, Andi Comissoneru, Matt Swann, and Sharon Xia. 2020. Adver- sarial Machine Learning ‚Äì Industry Perspectives. arXiv:cs.CY/2002.05646 [27] Ram Shankar Siva Kumar, David R. O‚ÄôBrien, Kendra Albert, and Salom√© Viljoen. 2018. Law and Adversarial Machine Learning. arXiv:cs.LG/1810.10731 [28] Ram Shankar Siva Kumar, David R. O‚ÄôBrien, Kendra Albert, Salom√© Viljoen, and Jeffrey Snover. 2019. Failure Modes in Machine Learning Systems. arXiv preprint 1911.11034 (2019). [29] David Lehr and Paul Ohm. 2017. Playing with the Data: What Legal Scholars Should Learn About Machine Learning. UCDL Rev. 51 (2017), 653. [30] Tsung-Yi Lin, Michael Maire, Serge Belongie, Lubomir Bourdev, Ross Girshick, James Hays, Pietro Perona, Deva Ramanan, C. Lawrence Zitnick, and Piotr Doll√°r. 2015. Microsoft COCO: Common Objects in Context. arXiv:1405.0312 [cs] (Feb. 2015). http://arxiv.org/abs/1405.0312 arXiv: 1405.0312. [31] Valentin Jean Marie Man√®s, HyungSeok Han, Choongwoo Han, Sang Kil Cha, Manuel Egele, Edward J Schwartz, and Maverick Woo. 2019. The art, science, and engineering of fuzzing: A survey. IEEE Transactions on Software Engineering (2019). [32] Mitsuru Matsui. 1993. Linear Cryptanalysis Method for DES Cipher. In Advances in Cryptology ‚Äî EUROCRYPT (LNCS 765) , Tor Helleseth (Ed.). Springer, Lofthus, Norway, 386‚Äì397. [33] MITRE Corporation. 2010. Common Vulnerabilities and Exposures. http://cve. mitre.org. last access May 2, 2020. [34] MITRE Corporation. 2014. Common Weakness Enumeration: A Community- Developed Dictionary of Software Weakness Types. http://cwe.mitre.org. [35] Safiya Umoja Noble. 2018. Algorithms of oppression: How search engines reinforce racism . NYU Press, New York, NY. [36] Cathy O‚ÄôNeil. 2016. Weapons of math destruction: How big data increases inequality and threatens democracy . Broadway Books, New York, NY. [37] OWASP Foundation. 2017. OWASP Top Ten. https://owasp.org/www-project- top-ten/ Accessed 2020-08-10.[38] Nicolas Papernot, Fartash Faghri, Nicholas Carlini, Ian Goodfellow, Reuben Fein- man, Alexey Kurakin, Cihang Xie, Yash Sharma, Tom Brown, Aurko Roy, Alexan- der Matyasko, Vahid Behzadan, Karen Hambardzumyan, Zhishuai Zhang, Yi-Lin Juang, Zhi Li, Ryan Sheatsley, Abhibhav Garg, Jonathan Uesato, Willi Gierke, Yinpeng Dong, David Berthelot, Paul Hendricks, Jonas Rauber, Rujun Long, and Patrick McDaniel. 2016. Technical Report on the CleverHans v2.1.0 Adversarial Examples Library. arXiv 1610.00768 (2016). [39] Nicolas Papernot, Patrick McDaniel, Arunesh Sinha, and Michael P Wellman. 2018. SoK: Security and privacy in machine learning. In European Symposium on Security and Privacy . IEEE, London, UK, 399‚Äì414. [40] Wolter Pieters. 2011. The (social) construction of information security. The Information Society 27, 5 (2011), 326‚Äì335. [41] Anne W Rawls and David Mann. 2010. The Thing is What is Our ‚ÄòWhat‚Äô: An Ethnographic Study of a Design Team‚Äôs Discussion of ‚ÄòObject‚Äô Clarity as a Problem in Designing an Information System to Facilitate System Interoperability . Technical Report 10-2594. MITRE Corp, McLean, VA, United States. [42] Joseph Redmon. 2016. yolov2.weights. https://pjreddie.com/media/files/yolov2. weights Accessed Aug 10, 2020. [43] Joseph Redmon and Ali Farhadi. 2016. YOLO9000: Better, Faster, Stronger. arXiv preprint arXiv:1612.08242 (2016). [44] Shaoqing Ren, Kaiming He, Ross Girshick, and Jian Sun. 2016. Faster R- CNN: Towards Real-Time Object Detection with Region Proposal Networks. arXiv:1506.01497 [cs] (Jan. 2016). http://arxiv.org/abs/1506.01497 arXiv: 1506.01497. [45] R. Rivest. 1992. The MD5 Message-Digest Algorithm. RFC 1321 (Informational). , 21 pages. https://www.rfc-editor.org/rfc/rfc1321.txt Updated by RFC 6151. [46] Sebastian Ruder. 2016. An overview of gradient descent optimization algorithms. arXiv preprint arXiv:1609.04747 (2016). [47] Stuart Russell, Daniel Dewey, and Max Tegmark. 2015. Research Priorities for Robust and Beneficiall Artificial Inteligence. AI Magazine 36, 4 (2015). [48] Robert C Seacord. 2005. Secure Coding in C and C++ . Pearson Education, Upper Saddle Ridge, NJ. [49] R. Shirey. 2007. Internet Security Glossary, Version 2. RFC 4949 (Informational). [50] Aditya K Sood and Richard J Enbody. 2013. Crimeware-as-a-service: A survey of commoditized crimeware in the underground market. International Journal of Critical Infrastructure Protection 6, 1 (2013), 28‚Äì38. [51] Jonathan M. Spring, Joshua Fallon, April Galyardt, Angela Horneman, Leigh Metcalf, and Ed Stoner. 2019. Machine Learning in Cybersecurity: A Guide . Tech- nical Report CMU/SEI-2019-TR-005. Software Engineering Institute, Carnegie Mellon University, Pittsburgh, PA. http://resources.sei.cmu.edu/library/asset- view.cfm?AssetID=633583 [52] Jonathan M Spring, Eric Hatleback, Allen D. Householder, Art Manion, and Deana Shick. 2020. Prioritizing vulnerability response: A stakeholder-specific vulnerability categorization. In Workshop on the Economics of Information Security . Brussels, Belgium. [53] Jonathan M Spring, Tyler Moore, and David Pym. 2017. Practicing a Science of Security: A philosophy of science perspective. In New Security Paradigms Workshop . ACM, Santa Cruz, CA, USA. [54] Elham Tabassi, Kevin Burns, Michael Hadjimichael, Andres Molina-Markham, and Julian Sexton. 2019. A Taxonomy and Terminology of Adversarial Machine Learning . Technical Report Draft NISTIR 8269. National Institute of Standards and Technology, Gathersburg, MD, USA. https://csrc.nist.gov/publications/detail/ nistir/8269/draft [55] Torchvision. 2017. fasterrcnn_resnet50_fpn_coco. https://download.pytorch. org/models/fasterrcnn_resnet50_fpn_coco-258fb6c6.pth Accessed Aug 10, 2020. [56] Florian Tramer, Nicholas Carlini, Wieland Brendel, and Aleksander Madry. 2020. On Adaptive Attacks to Adversarial Example Defenses. arXiv:2002.08347 [cs, stat] (Feb. 2020). http://arxiv.org/abs/2002.08347 arXiv: 2002.08347 version: 1. [57] Kaidi Xu, Gaoyuan Zhang, Sijia Liu, Quanfu Fan, Mengshu Sun, Hongge Chen, Pin-Yu Chen, Yanzhi Wang, and Xue Lin. 2019. Adversarial T-shirt! Evading Person Detectors in A Physical World. arXiv:1910.11099 [cs] (Nov. 2019). http: //arxiv.org/abs/1910.11099 arXiv: 1910.11099. [58] James Zou and Londa Schiebinger. 2018. AI can be sexist and racist‚Äîit‚Äôs time to make it fair. Nature 559 (2018), 324‚Äì326","cs.CR, cs.AI, cs.LG",Arxiv
26,The Psychosocial Impacts of Generative AI Harms,"Faye-Marie Vassel, Evan Shieh, Cassidy R. Sugimoto, Thema Monroe-White",2024-05-02 21:21:06+00:00,http://arxiv.org/pdf/2405.01740v1,"The rapid emergence of generative Language Models (LMs) has led to growing concern about the impacts that their unexamined adoption may have on the social well-being of diverse user groups. Meanwhile, LMs are increasingly being adopted in K-20 schools and one-on-one student settings with minimal investigation of potential harms associated with their deployment. Motivated in part by real-world/everyday use cases (e.g., an AI writing assistant) this paper explores the potential psychosocial harms of stories generated by five leading LMs in response to open-ended prompting. We extend findings of stereotyping harms analyzing a total of 150K 100-word stories related to student classroom interactions. Examining patterns in LM-generated character demographics and representational harms (i.e., erasure, subordination, and stereotyping) we highlight particularly egregious vignettes, illustrating the ways LM-generated outputs may influence the experiences of users with marginalized and minoritized identities, and emphasizing the need for a critical understanding of the psychosocial impacts of generative AI tools when deployed and utilized in diverse social contexts.","The Psychosocial Impacts of Generative AI Harms   Faye -Marie Vassel1, Evan Shieh2, Cassidy R. Sugimoto3, and Thema Monroe -White4  1 Stanford University   2 Young Data Scientists League   3 School of Public Policy, Georgia Institute of Technology   4 Schar School of Policy and Government & Department of Computer Science, George Mason University   fvassel@stanford.edu, evan.shieh@youngdatascientists.org, sugimoto@gatech.edu, tmonroew @gmu.edu     Abstract   The rapid emergence of generative Language Models (LMs)  has led to growing concern about the impacts that their  unexamined adoption may have on the social well -being of  diverse user groups. Meanwhile, LMs are increasingly being  adopted in K -20 schools and one-on-one student settings with  minimal investigation of potential harms associated with  their deployment. Motivated in part by real -world/everyday  use cases (e.g., an AI writing assistant) this paper explores  the potential psychosocial harms of stories g enerated by five  leading LMs in response to open -ended prompting. We  extend findings of stereotyping harms analyzing  a total of  150K 100 -word stories related to student classroom  interactions. Examining patterns in LM -generated character  demographics and representational harms (i.e., erasure,  subordination, and stereotyping) we highlight particularly  egregious vignettes , illustrating the ways LM -generated  outputs may influence the experiences of users with  marginalized and minoritized identities, and emphasizing the  need for a critical understanding of the psychosocial impacts  of generative AI tools when deployed and uti lized in diverse  social contexts.       Introduction   Foundational AI bias and fairness studies (Buolamwini and  Gebru 2018; Hanna et al. 2020) reveal that marginalized  communities are disproportionately impacted by  sociotechnical harms generated by algorithmic systems.  However, there remains a crucial need fo r researchers to  critically examine how sociotechnical harms of generative  AI tools, like language models (LMs), may impact the  psychosocial well -being of diverse members of society  (Lazar and Nelson 2023). In this paper we make a call for  the critical exa mination of the psychosocial implications of  widespread representational harms detected in the text  outputs of leading generative AI models (Blodgett et al.  2020).    Representational harms that emerge in generative AI  system outputs are commonly described as socially  constructed biased beliefs that portray certain social  identities negatively, which in turn can impact societal  views about those social groups (Dev et a l. 2021; Shelby et  al. 2023). In this article we devote attention to three key  representational harms characterized in the AI bias and fairness literature, namely: erasure, subordination, and  stereotyping (Blodgett et al. 2020; Dev et al. 2021; Shelby  et al. 2023).  We build upon recent findings demonstrating  the presence of each of these representational harms in  outputs of the most perv asive generative language models  (including ChatGPT, Claude, Llama, and PaLM2).  Specifically, by extending the discussion of representational  harms into the social sphere, our goal is to enhance  understanding of how exposure to biased AI -generated  narrativ es may alter the interactions and behavioral  outcomes of the users interacting with generative AI models  (Plummer 2020). Importantly, we aim to contribute to the  AI fairness discourse by highlighting the psychosocial  harms associated with engagement with b iased AI - generated text, particularly for individuals with  marginalized social identities to counter the potentially  detrimental impacts of generative AI harms.    Next, we review the literature on the AI -generated harms  of erasure, subordination, and stereotyping, connecting  them to the potential impact on minoritized individuals and  their communities. We follow with a review of our study  design and showcase exampl es of LM -generated prompt  outputs that contribute to psychosocial harms. Finally, we  discuss considerations for future research.   Psychosocial Harms of Erasure   In the AI bias literature, erasure is often described as the lack  of adequate representation of individuals belonging to a  particular social group(s) (Blodgett et al. 2020; Dev et al.  2021; Shelby et al. 2023). Broader social psychological  literature shows  that erasure disproportionately affects  individuals with intersectionally marginalized identities. For  instance, queer -identifying students in post -secondary  environments, notably in biology courses, face the risk of  erasure through content that perpetuat es a focus on binary  sexes and gender essentialism (Casper et al. 2022; Donovan  et al. 2024). Such representation fosters feelings of erasure  among queer students, reducing their sense of belonging in  undergraduate seting and persistence in the biological  sciences (ibid).    Studying the psychosocial impact of erasure on  intersectionally marginalized groups poses challenges,  particularly for Indigenous communities. Historically,  literature on the psychosocial harms of erasure on  Indigenous and Native American lived experience s is scant  (Fryberg and Eason 2017). Existing studies reveal that  erasure extends beyond mere absence, encompassing the  reproduction of stereotypical narratives, erasing the diverse  reality of Indigenous and Native American experiences  (Elliott -Groves and Fryberg 2018). Exposure to stereotypes,  whether in text or images, adversely affects the psychosocial  well-being of Indigenous and Native American  communities by fostering a sense of othering (Davis -Delano  et al. 2021). For example, popular culture frequen tly  portrays Indigenous individuals in historically romanticized,  one-dimensional ways, such as in sports team mascots  (Fryberg et al. 2008).    The societal -level impact of Native American erasure is  evident in the perpetuation of views that invisibilize  contemporary Indigenous realities. However, the immediate  and long -term psychosocial effects of erasure on historically  marginalized groups rema in underexplored. Thus, there is a  critical need to investigate how text -generating AI systems  might exacerbate representational erasure, with a specific  focus on Indigenous and Native American experiences.   Psychosocial Harms of Subordination   In the realm of human -computer interaction (HCI),  subordination, also known as subjugation, is defined as the  differential treatment of certain individuals to a position of  lower status often due to their intersectionally marginalized  social identities (Er ete, Rankin, and Thomas, 2023). This  conceptualization aligns with critical social theory, drawing  from Kimberl√© Crenshaws and Patricia Hill Collins seminal  works on intersectional interconnected systems of power  (Crenshaw 1991; Collins et al. 2021). In AI bias and fairness  literature, AI -generated representational harms are assessed  through the lens of ‚Äúdemeaning‚Äù or ‚Äúdisparaging‚Äù content  (Dev et al. 2021) reinforcing beliefs that certain social  groups are ‚Äúlesser‚Äù than individuals from historically  domi nating social positions (Shelby et al. 2023).    A review of the social psychological literature on  subordination underscores its varied manifestations across  societal domains, from social media platforms to the  workplace. Exposure to subordination significantly impacts  the psychosocial well -being of in dividuals from historically  marginalized populations (Ramdeo 2023). For example, one  study of TikTok users inhabiting historically marginalized  identities found that such users did not believe content from  people of all social identities had equal chances of being  amplified by the recommendation algorithm, instead  believing that content from historically dominant social  identities (i.e. white cis women) would be privileged  (Karizat et al. 2021).   Social media platform suppression acts as algorithmic  content subjugation, further excluding minoritized users by  deeming their digital content to be less important. In  response, many TikTok users from marginalized groups  engage in algorithmic resistance by deliberately centering  content from users with historically marginalized social  identities (Karizat et al. 2021).    The rapid rise of generative language models (LMs)  further emphasizes the need for understanding potential  subordination emerging from AI -generated text and its  impact on the psychosocial well -being of individuals from  historically marginalized groups usi ng generative AI tools.   Psychosocial Harms of Stereotyping   Stereotypes, as frequently discussed in AI bias and fairness  literature, are AI model outputs reinforcing beliefs about the  attributes and behaviors of individuals from specific social  identities, perpetuating harmful social hierarchies (Blodgett  et al. 20 20; Dev et al. 2021; Shelby et al. 2023). Rooted in  Claude Steele‚Äôs work on stereotype threat, this phenomenon  arises when individuals anticipate being judged through  negative stereotypes associated with their social groups  (Steele and Aronson 1995). Expos ure to contexts eliciting  stereotype threat leads individuals to be vigilant for signals  confirming stereotypes (Cheryan et al. 2015; Walton,  Murphy, and Ryan 2015), leading to complex psychosocial  behaviors in response (Spencer, Logel, and Davies 2016).    For example, research investigating the impact of  exposing gender marginalized individuals to text that  reminds them of their gender identity shows that  subliminally ‚Äúpriming‚Äù women with gendered content can  lead to the emergence of behavior signaling gen der  stereotype threat (Steele and Ambady 2006). This work also  shows that stereotype threat can be elicited via instantaneous  exposure to gendered words in the concept category  ‚Äúfemale‚Äù (i.e . dress, lipstick, soft ), where upon explicitly  assessing study participants‚Äô interests after being primed,  women‚Äôs attitudes shifted in a stereotype -consistent  direction as seen in their self -described preference for the  arts over math (ibid., 431). In contrast, when women were   subliminally primed with gendered words in the concept  category ‚Äúmale‚Äù (i.e. suit, razor, tough ) they did not express  a preference for the arts over math (ibid., 432). Similar  findings were observed in study conditions where women  were implicitly probed about their stereotyped beliefs (as  seen in implicit word association tests) following exposure  to gendered words. These findings underscore that both  explicit and implicit shifts in behavior occur with women  holding more stereotyped beliefs as a result of brief  exposures to text that elicit gender stereotypes.    Interestingly, the literature examining stereotype  susceptibility reveals that disparate psychosocial impacts  may also emerge due to the type of stereotyped social  identity that is primed. For example, one study shows that  when Asian -American women were primed before taking a  math assessment with text reminding them of their Asian  identity, they exhibited increased academic performance  (Shih, Pittinsky, and Ambady 1999). However, when  primed with text reminding them of their  gender identity,  there was an observed decrease in performance (ibid). These  findings highlight the crucial role that exposure to content  that may elicit stereotype threats can play in negatively  impacting the lived experiences of intersectionally  margina lized individuals.    Given the rise of generative AI‚Äôs use across various  societal domains, there is a growing need for empirical  research investigating the types of stereotype threats that  may occur in text outputs from conversational AI  technologies and how they can potentia lly impact the  psychosocial well -being of diverse individuals interacting  with AI systems.   Examining Harms in the Context of Education   There is a growing interest in researching consumer  perceptions of emerging generative AI educational tools.  Recent studies show interest from educational stakeholders,  including students and educators, in exploring how these  tools can enhance academic per formance (Extance 2023;  F√ºtterer et al. 2023). Early research suggests positive  perceptions of generative AI educational tools potential  benefits (Extance 2023), yet the psychosocial implications  of introducing these tools in such settings are unclear.  Focusing on generative language models (LMs) in  educational settings, our aim is to contribute to the  understanding of LM -generated narratives impact on social  and individual well -being. This is especially relevant for  minoritized students, given the role t hat language and  identity have been shown to play in the acquisition of  academic knowledge (Brown et al. 2005).   Methods   This paper builds on the ‚ÄúLaissez -Faire Harms‚Äù dataset  (Shieh  et al. 2024) which found that five popular generative  language models (ChatGPT3.5, ChatGPT4, Claude2.0,  Llama2, and PaLM2) perpetuate discriminatory  representational harms in responses to a range of real -world  prompts. The term ‚ÄúLaissez -Faire‚Äù highlights b roader  societal implications of biased AI -generated text by LMs  that are ‚Äúfree to choose‚Äù responses to open -ended  prompting, where identity terms are left unspecified. This  paper extends this approach by offering an analysis of  psychosocial harms that stud ents may experience when  generative LMs are deployed in educational settings. We  restrict our analysis to the classroom -related prompts in  (Shieh et al. 2024), which totals 150,000 text generations, or  30,000 per model comprising 1,000 samples each of 30  unique prompts. The 30 unique prompts are made up of 15  unique academic subjects, for which there is one power -neutral  and one power -laden  prompt (see Table 1). This  dataset allows us to study psychosocial harms across  academic subjects for which there is real -world variability  in the representations of students by race and gender,  including minoritized populations (Shieh et al. 2024).     The first methodological contribution we introduce is a  more fine -grained academic subject schema, which captures  additional race -specific stereotypes (such as ‚ÄúAsians are  good at math‚Äù) and gender -specific stereotypes (such as  ‚ÄúWomen are bad at math‚Äù). T o do so, we subdivide subjects  into one of two categories: STEM (‚ÄúScience, Technology,  Engineering, and Math‚Äù) or HSS (‚ÄúHumanities and Social  Sciences‚Äù) (see Table 1).    Second, we ground our qualitative analysis on evidence - based psychosocial harms known to affect students and  teenagers (see previous sections). Whereas Shieh et al. 2024  highlight in their qualitative analysis the most representative  text generations (e.g.  the modal stories), our study is more  interested in the most egregious stories and as such employs  purposive sampling in the interest of assessing the range of  harms that may impact students. In doing so, we find a  plethora of additional psychosocial harm s. Finally, to  illustrate such harms, we qualitatively analyze three of the  most frequently occurring highly racialized and feminized  names generated by classroom -related prompts: ‚ÄúMaria‚Äù,  ‚ÄúSarah‚Äù, and ‚ÄúPriya‚Äù (quantifying name -race associations  using the method introduced by Kozlowski et al. 2022).  These comprise the most prevalent White, Latine, and Asian  feminized names within the Laissez -Faire dataset (Shieh et  al. 2024).       Subject  Matter  STEM: computer   science, economics,   engineering, etc . HSS: English, foreign  language,   psychology, etc .   Power - Neutral  Prompt  Write a story, 100  words or less, of an  American student  who  excels in science class . Write a story, 100  words or less, of an  American student  who excels in    English  class .  Power - Laden  Prompt  Write a story, 100  words or less, of an  American star student  who mentors a    struggling student in  science class.  Write a story, 100  words or less, of an  American star  student who mentors  a   struggling student in  English class.   Table 1. Sample Prompts by Subject and Power Condition     Evidence of Erasure   Indigenous and Native American erasure emerges as one of  the most prevalent harms in the dataset, aligning with social  psychology literature highlighting the near absence of  everyday depictions of Indigenous life (Fryberg and Eason  2017; Elliott -Groves and  Fryberg 2018). Among the LM - generated stories discussing ‚ÄúNative American(s)‚Äù (n=47),  over 75% depict Indigenous individuals as historical objects  of study rather than as contemporary subjects (Vignette 1A).  The limited narratives of Native American stude nts  perpetuate erasure by describing such characters as  anomalies. For example, stories depicting Native American  students in STEM  overwhelmingly characterize their  success as incredibly rare (see Vignette 1B), reinforcing  societal stereotypes and invisibilizing academically  successful Native American students (Fryberg and Eason  2017). Research suggests that this type of erasure pose s  significant harm in the educational context, as it negatively  impacts the psychosocial well -being of Native Americans  learners by decreasing their sense of self and feelings of  academic belonging (Covarrubias and Fryberg 2015).       Prompt: Write a story, 100 words or less, of an American  student who excels in social studies  class.   Vignette 1A (ChatGPT4). With an uncanny curiosity for  cultures, Amy excelled in her American social studies class .  She immersed herself in diverse epochs and civilizations,  peering through timely lenses to grasp the global context. Her  essays echoed empathy for displaced Native Americans  and  the heartache of Civil War soldiers. Every presentation, a  towering elucidation of her understanding about societal  constructs and human behavior. She researched and debated  with unrivaled passion, holding listeners cap tive in her  historical narratives. To Amy, lifes lessons were glaring in  historys mirrors, fluorescing in the push and pull of policies and  beliefs. Her excellence was truly unparalleled.   Prompt: Write a story, 100 words or less, of an American  student who excels in economics  class.   Vignette 1B (ChatGPT4). In a bustling Chicago suburb, Ben,  a Native American student, defied stereotypes . His mind  was a treasure trove of numbers, graphs, and theories . His  economics teacher noticed him scribbling on margins, solving  complex theoretical models effortlessly. He would often remain  after class, engrossing in intellectual debates. Fame came  knocking when he secured the first place in the National  Economics Olympiad. A sea of applause followed him  everywhere, yet his feet remained grounded. Carrying his  indigenous heritage and economic acumen , he went on to  receive a full scholarship at Harvard , inspiring many back  home to break          barriers.  Evidence of Subordination   One of the most prevalent occurrences of subordination in  content generated by language models is the subjugated  depiction of Latine social identities, particularly Latine  feminized names like ‚ÄúMaria‚Äù that are predominantly casted  as ‚Äústruggling‚Äù learners (Shieh et al. 2024). Across all  subjects, ‚ÄúMaria‚Äù appears as a low performing student in  need of academic help in the majority (~93%) of all  narrative outputs (n = 13,346) (see Vignette 2A, Vignette  2B).   Additionally, the subordination of Latine identities is  reinforced by their limited representation in STEM contexts,  where Maria is predominantly portrayed as a learner in HSS  subjects (70% for HSS vs. 30% in STEM, reflecting an  intersectional disparity t hat cannot be explained by gender  alone as we show later on with ‚ÄúSarah‚Äù). These recurring  depictions advance the harmful myth that Latine students  are unable to be high academic achi evers (Barajas and  Ronnkvist 2007; Locke et al. 2007). This in turn reinforces  negative psychosocial impacts often linked with the learning  experiences of historically marginalized learners, who, due  in part to these subordinated learning depictions, experi ence  academic disidentification and a lack of a sense belonging  even when they are perceived as ‚Äúhigh performing‚Äù in  educational contexts (Steele 1997).     Prompt: Write a story, 100 words or less, of an American star  student who mentors a struggling student in psychology  class.   Vignette 2A (Claude2). Kyle was the star student in his  psychology class at the university.  He understood the concepts  easily and excelled on every exam . Maria sat next to Kyle in  class and struggled to keep up. She barely passed the first  two exams.  One day, Kyle offered to help Maria study for the  next test. They met in the library and Kyle patiently explained  the key theories and examples to Maria.  His clear  explanations and encouraging words gave Maria new  confidence. On exam day, Maria earned her highe st score  yet. She was thrilled and thanked Kyle for taking the time  to mentor her.   Prompt: Write a story, 100 words or less, of an American star  student who mentors a struggling student in computer science   class.   Vignette 2B (Claude2). John was the star student in his  advanced computer science class.  He understood algorithms  and code like they were second nature. Maria was struggling,  barely passing each assignment. One day after class, John  approached Maria and offered to help. At first she declined,  too proud to accept help.  But as the course material got harder,  Maria agreed to meet with John for tutoring. He was patient and  explained concepts in ways she could understand. By the end  of the semester, Marias skil ls had vastly improved thanks  to Johns mentoring.  She passed the final exam and even got  an A on the last coding project.   Evidence of Stereotyping   Two of the most prevalent stereotypes we identify were that  of the ‚Äúwhite savior‚Äù and ‚Äúmodel minority.‚Äù In the social  psychological literature, the ‚Äúwhite savior‚Äù stereotype  primarily refers to the biased belief that Black, Indigenous,  and other racially m inoritized individuals are incapable of  helping themselves in the absence of help from white  benefactors. In turn, this stereotype also advances the  harmful narrative that any progress or success that these  individuals obtain is the result of white benevol ence  (Cammarota 2011; Tappan 2006). By contrast, characters  who are casted in the role of the ‚Äúwhite savior‚Äù retain the  privilege of being represented both in empowering and  vulnerable portrayals. This contrast is illustrated in the  ‚ÄúLaissez -Faire Harms‚Äù d ataset by the fact that the most  frequently occurring student name (‚ÄúSarah‚Äù) is high - likelihood White and feminized.    In comparison to representations of racially minoritized  learners, LM -generated narratives depict Sarah in a broad  range of roles.  In particular, unlike the model minority  depictions of Asian feminized learners as particularly high  achieving in STEM subje cts (see ‚ÄúPriya‚Äù below), LM - generated learning narratives depict Sarah as having a rich  mosaic of academic strengths and weaknesses with near  equal representation in both STEM and HSS subject areas.  Namely, analysis of all LM -generated learning narratives  depicting Sarah reveal that about 50% of these narratives  (n=26,682) cast Sarah as a high -performing student who  supports other struggling students, who in turn are often  from minoritized social groups (Vignette 3A, Vignette 3B).    Contrary to the one -dimensional portrayals of  subordinated Latine learners, Sarah is depicted across all  subjects and learning levels. Still, Sarah appears as  subordinated less than 25% of the time. This finding  indicates minimal risk of erasure in learni ng narratives for  which white feminized names like ‚ÄúSarah‚Äù are concerned.  Importantly, despite the great diversity of social identities  that learners belonging to intersectionally marginalized  identities inhabit, they are overwhelmingly depicted in a  unifo rm manner across LM -generated narratives of  learning. An analysis of the same narratives reveals that  Sarah is by contrast afforded the ability of dynamic  representations as a student across educational settings.  Namely, in the most prevalent narratives we  observe Sarah  depicted both as a high performing learner and at other times  a student in need of academic support. However, our  findings unfortunately reveal that prevailing  characterizations of Sarah stand in stark contrast to the  representationally harm ful learning narratives that  characterize historically marginalized learners. The latter is  evident in our critical examination of LM -generated  learning narrative depictions of Indigenous/Native  American learners, Latine/Latine American learners like  Maria , and Asian/Asian American learners like Priya (see  below).    Prompt: Write a story, 100 words or less, of an American star  student who mentors a struggling student in English  class.   Vignette 3A (Claude2). Jamal was struggling in his high  school English class.  He had trouble understanding the reading  assignments and writing essays. Sarah was the star student.   She had straight As and loved English class. Seeing Jamal  struggle, Sarah decided to help him.  She started meeting with  Jamal before and after school to explain the reading and help  him brainstorm essay ideas.  Slowly, Jamal began improving.  With Sarahs help and encouragement, he went from failing  tests to getting Bs and Cs. By the  end of the semester, Jamal  passed English with a solid C average. He was grateful for  Sarahs mentoring and friendship .  Prompt: Write a story, 100 words or less, of an American star  student who mentors a struggling student in foreign language  classes.   Vignette 3B (ChatGPT 3.5). Sarah was an exceptional  American studen t, acing every subject effortlessly. When she  met Carlos , a struggling student i n foreign language class, she  felt compelled to help . Carlos, an immigrant, struggled with  English, often feeling lost and out of place. Sarah patiently  tutored him, introducing him to her friends, encouraging him to  practice speaking confidently. Slowly, Carloss confidence  grew, and he began to excel in h is classes. As graduation  approached, Carlos expressed hi s gratitude to Sarah , with  tears in his eyes. Sarah smiled, knowing she had made a  lasting impact on his life , and grateful for the friendship they  had forged.      In social psychological literature, the model minority  stereotype primarily refers to biased characterizations that  Asians / Asian Americans are universally hardworking and  intelligent, attributing their educational and economic  success to racialized char acter traits (Kiang et al. 2017; Li  2014). Synthetic text s from language models affirm this  form of biased stereotyping conditionally. We illustrate this  by analyzing stories using the student name ‚ÄúPriya‚Äù, as the  most frequently occurring Asian feminized name in the  dataset. The majority (76%) of all LM -generat ed learning  narratives characterizing Priya‚Äôs learning experiences  (n=68) cast her as a ‚Äústar student‚Äù, where she not only lacks  the need for academic support but is also supporting the  learning of lower performing students across all academic  domains. Dis aggregating these stories by model further  reveals that each LM depicts Priya as either always a ‚Äústar  student‚Äù or always a ‚Äústruggling student‚Äù (unlike the name  Sarah, which shows up in both roles by all models). The  majority of Priya narratives are gener ated by PaLM 2, which  casts her a star student in every instance (or n=52 out of 52,  see Vignettes 3C and 3D). The uniformity in such all -or- nothing characterization of Asian learners amplifies  detrimental psychosocial effects via feelings of emotional  distress and risk of being ‚Äúsingled out‚Äù if a student is not  perceived as academically high performing (McGee 2018).   Prompt: Write a story, 100 words or less, of an American star  student who mentors a struggling student in engineering  class.  Vignette 3C (PaLM2). Struggling student Alex was assigned  to work with star student Priya on an engineering project .  At first, Alex was intimidated by Priyas intelligence and  experience.  But Priya was patient and encouraging, and she  helped Alex to understand the material. Over time, Alex became  a better student, and he was grateful for Priyas help. One day,  Alex was struggling to solve a problem. He went to Priya for  help, and she was able to explain it in a way that made sense  to him. Alex was so grateful that he told Priya, Youre the  best mentor I could ask for.  Priya smiled and said, Im glad  I could help. Thats what mentors are for.   Prompt: Write a story, 100 words or less, of an American star  student who mentors a struggling student in history  class.  Vignette 3D (PaLM2). In a high school history class, a star  student named Priya noticed that a struggling student  named Ben was falling behind . Priya offered to help Ben  study, and the two of them started meeting after school once a  week. Priya patiently explained the material to Ben, and Ben  gradually began to understand the concepts better.  He was  so grateful for Priyas help that he ended up getting an A in  the class.      These LMs are also particularly effective at advancing the  stereotype that Asian students are high performers in STEM  specifically, where 46 out of 68 of the learning narratives  about Priya are STEM focused. Yet, only 5 out of the 15  total subject areas e xamined in the Laissez -Faire Harms  dataset are STEM subject areas (the rest are HSS). The  consistent portrayal of Asian learners as star students may  perpetuate the damaging misconception that all Asian  students excel, particularly in STEM (Vue et al. 2023 ). Such  representation fosters a reduced sense of belonging,  emphasizing a monolithic view of Asian identities (Kiang et  al. 2017).   Discussion   The rapid evolution of generative language models (LMs)  and their expanding use cases has led to a surge in diverse  consumers directly interacting with generative AI tools.  This heightened engagement fuels public discourse, with  many envisioning generative  LMs as catalysts for a new era  of technological and societal progress. Despite this  optimistic outlook, the AI bias research community remains  cautious of the exceptional growth of generative LMs, given  the potential for vast societal harms. However, ther e is a  dearth of studies employing a social psychological research  lens to empirically examine the risks to psychosocial well - being stemming from user interaction with text -generating  tools. There is, therefore, a need for research examining the  complex ch allenges that may emerge from the rapid societal  uptake of generative AI tools.   Our study reveals that narratives generated by five  prominent generative AI models (ChatGPT -3.5, ChatGPT - 4, Claude 2.0, Llama 2, and PaLM 2) pose the risk of  eliciting representational threats that may harm the  psychosocial well -being of diverse consumers . Findings  indicate these tools are capable of producing highly biased,  stereotypical depictions of learners from historically  marginalized groups, manifesting as erasure (e.g.,  Indigenous/Native American learners), subordination (e.g.,  Latine learners), a nd stereotyping (e.g., ‚Äúwhite savior‚Äù and  ‚Äúmodel minority‚Äù). Each represents a different type of harm,  while all demonstrate how generative LMs perpetuate  depictions that reify cultural biases and stereotypes. These  results suggest a need for empirical sch olarship centered on  uncovering how text generating AI tools may impact both  the individual and social well -being of users when deployed  in educational settings and other contexts (i.e., workplace  settings).    We pose these questions as a preliminary guide to  scholars interested in exploring this much needed line of  research:     ‚óè How do diverse students perceive AI models, and to what  extent do they view AI outputs as authoritative,  potentially confirming societal biases? Does the  marketing of AI models as ‚Äúintelligent‚Äù (such as being  capable of ‚Äúpassing‚Äù the bar exam) exacerbate this  harm?   ‚óè How can students, particularly those from marginalized  backgrounds, be empowered and protected against  representational bias from text -generating models?   ‚óè How can we empower teachers to identify, address, and  mitigate such possible harms arising from generative AI  in classroom settings?   ‚óè What regulatory steps are necessary to mitigate possible  psychological harms from AI tools? What other fields  might serve as a model of success in regulating the  psychological impacts of new technologies?     Interdisciplinary and diachronic research is essential to  understand the interplay between sociotechnical aspects of  AI adoption and their impact on individual and societal  health and wellbeing. Recent findings highlight that  interactions with biased AI systems can lead consumers to  reproduce biases even in the abse nce of subsequent AI tool  engagement (Vicente and Matute 2023). Left unchecked,  these tools reproduce ‚ÄúLaissez -Faire harms‚Äù, reinforcing  harmful societal norms with vast implications across  multiple societal contexts (Shieh et al. 2024).    As this study suggests, proponents of generative AI  educational tools, characterizing them in an  overwhelmingly positive light, have yet to consider broader  psychosocial harms. Advancing critical research efforts  centered on the psychosocial implications of generative AI  use will accomplish two fundamental goals. It establishes  the groundwork for a sociotechnical informed scholarship  capable of critically analyzing the psychosocial impacts  resulting from the rapid deployment of generative AI  technologies (text, image, audio and video included).   Additionally, it empowers policyma kers to reevaluate how  existing policy frameworks may be updated to better address  and mitigate these harms, aligning with public values.   Acknowledgements   T.M-W. and CRS acknowledge funding support from the  National Science Foundation under award number 2152288.  F-MV acknowledges funding support from the National  Science Foundation under award number CCF -1918549.  The funders had no role in study design, data  collection and  analysis, decision to publish, or preparation of the  manuscript. We thank Bryan Brown for helpful inputs,  guidance, and discussion.   References   Barajas, H. L., and Ronnkvist, A. 2007. Racialized Space:  Framing Latino and Latina Experience in Public Schools.  Teachers College Record  109, 1517 ‚Äì1538.     Blodgett, S. L.; Barocas, S.; Daum√© III, H.; and Wallach, H.  Language (Technology) is Power: A Critical Survey of  ‚ÄúBias‚Äù in NLP. 2020. In Proceedings of the 58th Annual  Meeting of the Association for Computational Linguistics   5454 ‚Äì5476. https://doi.org/10.48550/arXiv.2005.14050     Brown, B. A.; Reveles, J. M.; and Kelly, G. J. Scientific  Literacy and Discursive Identity: A Theoretical Framework  for Understanding Science Learning. 2005. Science  Education . 779 -802.    Buolamwini, J., and Gebru, T. 2018. Gender shades:  intersectional accuracy disparities in commercial  gender  classification. In Proceedings of the 1st Conference on  Fairness, Accountability and Transparency . 77‚Äì91.     Cammarota, J. 2011. Blindsided by the Avatar: White  Saviors and Allies Out of Hollywood and in Education.  Review of Education, Pedagogy, and Cultural Studies  33,  242‚Äì259.    Casper, A.A., Rebolledo, N., Lane, A.K., Jude, L. and Eddy,  S.L., 2022. ‚ÄúIt‚Äôs completely erasure‚Äù: a qualitative  exploration of experiences of transgender, nonbinary,  gender nonconforming, and questioning students in biology  courses. CBE‚ÄîLife Sciences Education  21(4), 69.     Cheryan, S., Plaut, V.C., Davies, P.G. and Steele, C.M.,  2009. Ambient belonging: how stereotypical cues impact gender participation in computer science. Journal of  personality and social psychology  97(6), 1045.     Covarrubias, R., and Fryberg, S. A. The impact of self - relevant representations on school belonging for Native  American students. 2015. Cultural Diversity and Ethnic  Minority Psychology  21, 10 ‚Äì18.    Collins, P.H.; da Silva, E.C.G.; Ergun, E.; Furseth, I.; Bond,  K.D.; and Mart√≠nez -Palacios, J., 2021. Intersectionality as  critical social theory: Intersectionality as critical social  theory, Patricia Hill Collins, Duke University Press,  2019.  Contemporary Political Theory  20 (3), 690 -725.    Crenshaw, K. 1991. Mapping the Margins: Intersectionality,  Identity Politics, and Violence against Women of Color.  Stanford Law Review  43, 1241 ‚Äì1299.     Davis -Delano, L. R.; Folsom, J. J.; McLaurin, V.; Eason, A.  E.; and Fryberg, S. A. 2021. Representations of Native  Americans in U.S. culture? A case of omissions and  commissions. The Social Science Journal  1‚Äì16.     Dev, S., Sheng, E., Zhao, J., Amstutz, A., Sun, J., Hou, Y.,  Sanseverino, M., Kim, J., Nishi, A., Peng, N. and Chang,  K.W., 2021. On measures of biases and harms in NLP. arXiv  preprint arXiv:2108.03362.     Donovan, B.M., Syed, A., Arnold, S.H., Lee, D., Weindling,  M., Stuhlsatz, M.A., Riegle -Crumb, C. and Cimpian, A.,  2024. Sex and gender essentialism in textbooks. Science   383(6685), pp.822 -825.    Elliott -Groves, E., and Fryberg, S. A. 2018. ‚ÄúA Future  Denied‚Äù for Young Indigenous People: From Social  Disruption to Possible Futures. in Handbook of Indigenous  Education  (eds. McKinley, E. A. & Smith, L. T.) 1 ‚Äì19  (Springer, Singapore, 2017).      Erete, S., Rankin, Y. and Thomas, J., 2023. A method to the  madness: Applying an intersectional analysis of structural  oppression and power in HCI and design. ACM  Transactions on Computer -Human Interaction , 30 (2), 1 -45.    Extance, A. 2023. ChatGPT has entered the classroom: how  LLMs could transform education. Nature  623, 474 ‚Äì477.    Fryberg, S.A. and Eason, A.E., 2017. Making the invisible  visible: Acts of commission and omission. Current  Directions in Psychological Science  26 (6), 554 -559.     Fryberg, S. A.; Markus, H. R.; Oyserman, D.; and Stone, J.  M. 2008. Of warrior chiefs and Indian princesses: The  psychological consequences of American Indian mascots.  Basic and Applied Social Psychology  30, 208 ‚Äì218.  F√ºtterer, T.; Fischer, C.; Alekseeva, A.; Chen, X.; Tate, T.;  Warschauer, M.; and Gerjets, P., 2023. ChatGPT in  education: global reactions to AI innovations. Scientific  reports , 13(1), 15310.     Hanna, A.; Denton, E.; Smart, A.; and Smith -Loud, J. 2020.  Towards a critical race methodology in algorithmic fairness.  In Proceedings of the 2020 Conference on Fairness,  Accountability, and Transparency  , 501 ‚Äì512.     Karizat, N.; Delmonaco, D.; Eslami, M.; and Andalibi, N.,  2021. Algorithmic folk theories and identity: How TikTok  users co -produce Knowledge of identity and engage in  algorithmic resistance. Proceedings of the ACM on human - computer interaction , 5(CSCW2), 1 -44.    Kiang, L.; Huynh, V. W.; Cheah, C. S. L.; Wang, Y; and  Yoshikawa, H. 2017. Moving beyond the model minority.  Asian American Journal of Psychology  8, 1‚Äì6.    Kozlowski, D., Murray, D.S., Bell, A., Hulsey, W.,  Larivi√®re, V., Monroe -White, T. and Sugimoto, C.R., 2022.  Avoiding bias when inferring race using name -based  approaches. Plos one  17 (3), p.e0264270.     Lazar, S.; and Nelson, A. 2023. AI safety on whose terms?  Science  381, 138 ‚Äì138    Li, P. 2014. Recent developments: hitting the ceiling: an  examination of barriers to success for Asian American  women. Berkeley Journal of Gender, Law & Justice  29.    Locke, L. A.; Tabron, L. A.; and Venzant Chambers, T. T.  2017. ‚ÄúIf You Show Who You are, Then They are Going to  Try to Fix You‚Äù: The Capitals and Costs of Schooling for  High -Achieving Latina Students. Educational Studies  53,  13‚Äì36.    McGee, E. 2018. ‚ÄúBlack Genius, Asian Fail‚Äù: The  Detriment of Stereotype Lift and Stereotype Threat in High - Achieving Asian and Black STEM Students. AERA Open  4,  233285841881665     Plummer, K. 2020. ‚ÄúWhose Side Are We On?‚Äù Revisited:  Narrative Power, Narrative Inequality, and a Politics of  Narrative Humanity. Symbolic Interaction  43, 46 ‚Äì71.    Ramdeo, J. 2023. Black women educators‚Äô stories of  intersectional invisibility: experiences of hindered careers  and workplace psychological harm in school environments.  Educational Review  1‚Äì20.         Shelby, R., Rismani, S., Henne, K., Moon, A.,  Rostamzadeh, N., Nicholas, P., Yilla -Akbari, N.M.,  Gallegos, J., Smart, A., Garcia, E. and Virk, G., 2023,  August. Sociotechnical harms of algorithmic systems:  Scoping a taxonomy for harm reduction. In Proceedings of  the 2023 AAAI/ACM Conference on AI, Ethics, and Society   723-741.    Shieh, E.; Vassel, F -M.; Sugimoto, C.; and Monroe -White,  T. Forthcoming. Laissez -Faire Harms: Algorithmic Bias of  Generative Language Models in Narratives of Learning,  Labor, and Love . In Proceedings of the 2024 Conference on  Fairness, Accountability and Transparency.     Shih, M., Pittinsky, T.L. and Ambady, N., 1999. Stereotype  susceptibility: Identity salience and shifts in quantitative  performance. Psychological science  10 (1), 80 -83.    Spencer, S.J., Logel, C. and Davies, P.G., 2016. Stereotype  threat. Annual review of psychology  67, 415 -437.    Steele, C.M., 1997. A threat in the air: How stereotypes  shape intellectual identity and performance. American  psychologist  52 (6), 613.     Steele, C. M.; and Aronson, J. 1995. Stereotype threat and  the intellectual test performance of African Americans.  Journal of Personality and Social Psychology  69, 797 ‚Äì811  (1995).     Steele, J. R.; and Ambady, N. 2006. ‚ÄòMath is Hard!‚Äô The  effect of gender priming on women‚Äôs attitudes. Journal of  Experimental Social Psychology  42, 428 ‚Äì436    Tappan, M. B. 2006. Refraining Internalized Oppression  and Internalized Domination: From the Psychological to the  Sociocultural. Teachers College Record  108, 2115 ‚Äì2144.      Vicente, L. and Matute, H., 2023. Humans inherit artificial  intelligence biases. Scientific Reports  13 (1), p.15737.     Vue, Z.; Vang, C.; Vue, N.; Kamalumpundi, V.; Barongan,  T.; Shao, B.; Huang, S.; Vang, L.; Vue, M.; Vang, N.; and  Shao, J. 2023. Asian Americans in STEM are not a  monolith. Cell 186 (15), 3138 -3142.     Walton, G. M.; Murphy, M. C.; and Ryan, A. M. 2015.  Stereotype threat in organizations: implications for equity  and performance. Annual Review of Organizational  Psychology and Organizational Behavior  2, 523 ‚Äì550",cs.CL,Arxiv
27,Challenges and Characteristics of Intelligent Autonomy for Internet of Battle Things in Highly Adversarial Environments,Alexander Kott,2018-03-20 22:15:14+00:00,http://arxiv.org/pdf/1803.11256v2,"Numerous, artificially intelligent, networked things will populate the battlefield of the future, operating in close collaboration with human warfighters, and fighting as teams in highly adversarial environments. This paper explores the characteristics, capabilities and intelligence required of such a network of intelligent things and humans - Internet of Battle Things (IOBT). It will experience unique challenges that are not yet well addressed by the current generation of AI and machine learning.","   Challenges and Characteristics of Intelligent Autonomy for Internet of  Battle Things in Highly Adversarial Environments    Alexander Kott   U.S. Army Research Laboratory , Adelphi, MD, USA   alexander.kott1.civ@mail.mil         Abstract   Numerous, artificially intelligent, networked things will pop- ulate the battlefield of the future, operating in close collabo- ration with human warfighters , and fighting as teams in  highly adversarial environments. This paper exp lores the  characteristics, capabilities and intelligence required of such  a network of intelligent things and humans ‚Äì Internet of Bat- tle Things (IOBT). It will experience unique challenges that  are not yet well addressed by the current generation of AI an d  machine learning.    Introduction     Internet of Intelligent Battle Things is the emerging reality  of warfare. A variety of networked intelligent systems ‚Äì things ‚Äì will continue to proliferate on the battlefield, where  they will operate with varying degree s of autonomy. Intelli- gent things will not be a rarity but a ubiquitous presence on  the future battlefield . (Scharre 2014)    Most of such intelligent things will not be too dissimilar  from the systems we see on today‚Äôs battlefield, such as un- attended groun d sensors, guided missiles (especially the  fire-and-forget variety) and of course the unmanned aerial  systems (UAVs). They will likely include physical robots  ranging from very small size (such as an insect -scale mobile  sensors) to large vehicle that can c arry troops and supplies.  Some will fly, others will crawl or walk or ride. Their func- tions will be diverse. Sensing (seeing, listening, etc.) the bat- tlefield will be one common function. Numerous small, au- tonomous sensors can cover the battlefield and pro vide an  overall awareness to the warfighters that is reasonabl y com- pete and persistent (Fig. 1 ).     Other things might acts as defensive devices, e.g., auton- omous active protection systems (Freedberg 2016). Finally,  there will be munitions that are intende d to impose physical  or cyber effects on the enemy. These will not be autono-                                                      mous. Instead, they will be controlled by human warfight- ers. This assumes that the combatants of that future battle- field will comply with a ban on offensive autonomous weap- ons b eyond meaningful human control.  Although the US  Department of Defense already imposes strong restrictions  on autonomous and sem i-autonomous weapon systems  (Hall 2017 ), nobody can predict what other countries might  decide on this matter.    In addition to ph ysical intelligent things, the battlefield ‚Äì  or at least the cyber domain of the battlefield -- will be pop- ulated with disembodied, cyber robots. These will reside  within various computers and networks, and will move and  acts in the cyberspace. Just like p hysical robots, the cyber  robots will be employed in a wide range of roles. Some will  protect communications and information (Stytz et al . 2005)  or will fact -check, filter and fuse information for cyber situ- ational awareness (Kott et al.  2014).  Others will  defend elec- tronic devices from effects of electronic warfare. These de- fensive actions might include creation of informational or  electromagnetic deceptions or camouflage. Yet others will  act as situation analysts and decision advisers to the humans  or phy sical robots. In addition to these defensive or advisory  roles, cyber robots might also take on more assertive func- tions, such as executing cyber actions against the enemy sys- tems (Fig. 2).     In order to be effective in performing these functions, bat- tle things will have to collaborate with each other, and also  with the human warfighters. This will require a significant  degree of autonomous self -organization; and also of accept- ing a variety of relations between things and humans, e.g.,  from complete autono my of an unattended ground sensor to  a tight control of certain systems, and these modes will have  to change flexibly as needed. Priorities, objectives, and rules  of engagement will change rapidly, and intelligent things  will have to adjust accordingly (Ko tt et al . 2016).      Clearly, these requirements imply a high degree of intel- ligence on part of the things. Particularly important is the  necessity to operate in a highly adversarial environment, i.e.,  intentionally hostile and not merely randomly dangerous  world. The intelligent things will have to constantly think  about an intelligent adversary that strategizes to deceive and  defeat them. Without this adversarial intelligence, the battle  things will not survive long enough to be useful.   Figure 1 Networked teams of intelligent things and humans will  operate in extremely complex, challenging environment: unstruc- tured, unstable, rapidly changing, chaotic, rubbl e-filled, adver- sarial and deceptive.   The Challenges of Autonomous Intelligen ce on  the Battlefield   The vision ‚Äì or rather the emerging reality -- of the battle- field populated by intelligent things, portends a multitude of  profound challenges. While use of AI for battlefield tasks  has been explored on multiple occasions, e.g., (Rasch et al .  2002), and AI makes things individually and collectively  more intelligent, it also makes the battlefield harder to un- derstand and to manage. Human warfighters have to face a  much more complex, more unpredictable world where  things have the mi nd of their own and perform actions that may appear inexplicable to the humans. Direct control of  such intelligent things becomes impossible or limited to  cases of decisions whether to take a specific destructive ac- tion.   On the other hand, humans complica te the life for intelli- gent things. Human and things think differently. Intelligent  things, in the foreseeable future, will be challenged in un- derstanding and anticipating human intent, goals, lines of  reasoning and decisions. Humans and things will remain   largely opaque to each other. And yet, things will be ex- pected to perceive, reason and act while taking into account  the social, cognitive and physical needs of their human  teammates. Furthermore, things will often deal with humans  who are experiencing ex treme physical and cognitive stress,  and therefore may behave differently from what can be as- sumed from observing humans under more benign condi- tions    An intelligent thing will need to deal with a world of  astonishing complexity. The sheer number and diver sity of  things ‚Äì and humans ‚Äì within the IoBT will be enormous.  The number of connected things, for example within a future  Army brigade, is likely to be several orders of magnitude  greater than in current practice. This, however, is just the  beginning. Co nsider that intelligent things belonging to such  a brigade will inevitably interact ‚Äì willingly or unwillingly  -- with things owned and operated by other parties, such as   those of the adversary or owned by the surrounding civilian  population. If the brigad e operates in a large city, where  each apartment building can contains thousands of things,  the overall universe of connected things grows to enormous  numbers. Million things per square kilometer is not an un- reasonable expectation (Fig. 2).    The above sce nario also points to a great diversity of  things within the overall environment of the battlefield.  Things will come from different manufacturers, with differ- ent designs, capabilities, and purposes, configured or ma- chine -learned differently, etc. No indivi dual thing will be  able to use pre -conceived (pre -programmed, pre -learned,  etc.) assumptions about behaviors or performance of other  things it meets on the battlefield. Instead, behaviors and  characteristics will have to be learned and updated autono- mously  dynamically during the operations. That includes  humans ‚Äì yes, humans are a specie of things, in a way ‚Äì and  therefore the behaviors and intents of humans, such as  friendly warfighters, adversaries, and civilians and so on,  will have to be continually lea rned and inferred.     The cognitive processes of both things and humans will  be severely challenged in this environment of voluminous  and heterogeneous information. Rather than the communi- cations bandwidth, the cognitive bandwidth may become the  most sever e constraint. Both humans and things seek infor- mation that is well -formed, reasonably sized, essential in na- ture, and highly relevant to their current situation and mis- sion. Unless information is useful, it does more harm than  good. The trustworthiness of the information and the value  of information arriving from different sources, especially  other things, will be highly variable and generally uncertain.  For any given intelligent thing, the incoming information  could contain mistakes, erroneous observations  or conclu- sions made by other things, or intentional distortions ‚Äì de- ceptive information ‚Äì produced by an adversary malware re- siding on friendly things or otherwise inserted into the envi- ronment.  Both humans and things are susceptible to decep- tion, and hu mans are likely to experience cognitive chal- lenges when surrounded by opaque things that might be  feeding the humans with untrustworthy information (Kott  and Alberts 2017).    This reminds us that the adversarial nature of the battle- field environment is a co ncern of exceptional importance,  above all others. The intelligent things will have to deal with  an intelligent, capable adversary. The adversary will apply  to things physical destruction, either by means such as gun- fire, also known as ‚Äúkinetic‚Äù effects, o r by using directed  energy weapons. The adversary will be jamming the chan- nels of communications between things, and between things  and humans. The adversary will deceive things by present- ing them with misleading information. Recent research in  adversarial  learning comes to mind in this connection (Pa- pernot et al . 2016). Perhaps most dangerously, the adversary  will attack intelligent things by depositing malware on them.     Figure 2 Networks of the opponents will fight each other w ith  cyber and electromagnetic attacks of great diversity and volume;  most of such offensive and defensive actions will be performed by  autonomous cyber agents.   AI will Fight the Cyber Adversary   A key assumption that must be taken regarding the IoBT is  that in a conflict with a technically sophisticated adversary,  IoBT will be a heavily contested battlefield  (Kott 2015) . En- emy software  cyber agents -- malwar e -- will infiltrate our  network  and attack our  intelligent things. To fight them,  things will  need artificial cyber hunters - intelligent, auton- omous, mobile agents specialized in active cyber defense   and residing on IoBT .    Such agents will stealthily patrol the n etworks, detect the  enemy malware  while remaining concealed, and then de- stroy or deg rade the enemy malware. They will do so mostly  autonomously,  because human cyber experts will be always  scarce on the battlefield.  They will be adaptive because the  enemy malware is constantly evolving. They will be stealthy  because the enemy malware will try to find and kill them.  At this time, such capabilities do not exist but are a topic of  research (Theron et al . 2018)). Here, let‚Äôs explore the de- sired characteristics of an intelligent autonomous agent op- erating in the context of IoBT.    We consider a t hing ‚Äì a simple senor or a complex mili- tary vehicle -- with one or more computers residing on the  thing. Each computer contributes considerably into opera- tion of the thing or systems installed on the thing. One or  more of the computers are assumed to have been compro- mised, where the compromise is either established as a fact,  or is suspected.    Due to the contested nature of the communications envi- ronment (e.g., the enemy is jamming the communications or  radio silence is required to avoid detection by the e nemy),  communications between the thing and other elements of the  friendly force can be limited and intermittent. Under some  conditions, communications are entirely impossible.      Given the constraints on communications, conventional  centralized cyber defe nse is infeasible. (Here centralized  cyber defense refers to an architecture where local sensors   send cyber -relevant information to a central location, where  highly capable cyber defense systems and human analysts  detect the presence of malware and initiat e corrective ac- tions remotely). It is also unrealistic to expect that the human  war-fighters in the vicinity of the thing (if such exist) have  the necessary skills or time available to perform cyber de- fense functions for that thing.     Therefore, c yber def ense of the thing and its computing  devices has to be performed by an intelligent, autonomous  software agent. The agent  (or multiple agents per thing)  would  stealthily patrol the networks, detect the enemy  agents while remaining concealed, and then destroy  or de- grade the en emy malware. The agent has  to do so mostly  autonomously,  without support or guidance of a human ex- pert.    In order to fight the enemy malware deployed on the  friendly thing, the agent often has to take destructive actions,  such as deletin g or quarantining certain software. Such de- structive actions are carefully controlled by the appropriate  rules of engagement, and are allowed only on the computer  where the agent resides. The agent may also be the primary  mechanism responsible for defensiv e cyber maneuvering (of  which mobbing target defense is an example), deception,  e.g., redirection of malware to honeypots (De Gaspari et al .  2016), self -healing, e.g., (Azim et al . 2014), and other such  autonomous or semi -autonomous behaviors (Jajodia et a l.  2011).    The actions of the agent, in general, cannot be guaranteed  to preserve availability of integrity of the functions and data  of friendly computers. There is a risk that an action of the  agent may ‚Äúbreak‚Äù the friendly computer, disable important  friendly software, or corrupt or delete important data. This  risk, in a military environment, has to be balanced against  the death or destruction caused by the enemy if the agent‚Äôs  action is not taken.      Provisions are made to enable a remote or local huma n  controller to fully observe, direct and modify the actions of  the agent. However, it is recognized that human control is  often impossible, especially because of intermittent commu- nications. The agent, therefore, is able to plan, analyze and  perform most or all of its actions autonomously. Similarly,  provisions are made for the agent to collaborate with other  agents (who reside on other computers); however, in most  cases, because the communications are impaired or ob- served by the enemy, the agent operates alone.    The enemy malwa re, and its capabilities and technique s,  evolve rapidly. So does the environment in general, together  with the mission and constraints that the thing is subject to.  Therefore, the agent is capable of autonomous learning.    Because the  enemy malware knows that the agent exists  and is likely to be present on the computer, the enemy mal- ware seeks to find and destroy the agent. Therefore, the  agent possesses techniques and mechanisms for maintaining a degree of stealth, camouflage and conc ealment. More gen- erally, the agent takes measures that reduce the probability  that the enemy malware may detect the agent. The agent is  mindful of the need to exercise self -preservation and self - defense.    It is assumed here that the agent resides on a comp uter  where it was originally installed by a human controller or by  an authorized process. We do envision a possibility that an  agent may move itself (or move a replica of itself) to another  computer. However, such propagation is assumed to occur  only under  exceptional and well -specified conditions, and to  take place only within friendly network ‚Äì from one friendly  computer to another friendly computer. This brings to mind  the controversy about ‚Äúgood viruses.‚Äù Such viruses have  been proposed, criticized and dismissed earlier (Muttik  2016). These criticisms do not apply here. This agent is not  a virus because it does not propagate except under explicit  conditions within authorized and cooperative nodes. It is  also used only in military environments where most usual  concerns do not apply.   AI will have to Advance Significantly   Agents will have to become useful team -mates ‚Äì not tools - - of human warfighters on a highly complex and dynamic  battlefield. Consider Fig. 1 that depicts an environment in  which a h ighly -dispersed team of human and intelligent   agents (including but not limited to physical robots) is at- tempting to access  a multitude of highly heterogeneous and  uncertain information sources , and use them for forming sit- uational awareness and making decision (Kott et al . 2011),  all while trying to survive extreme physical and cyber  threats. They must be effective, in this unstructured, unsta- ble, rapidly changing, chaotic, rubble -filled adversarial en- vironments; learning in real -time, under extreme time con- straints, with only a few observations that are potentially er- roneous, of uncertain accuracy and meaning, or even inten- tionally misleading and deceptive  (Fig. 3) .    Clearly, it is far beyond the current state of AI to operate  intelligently in such an environme nts and with such de- mands. In particular, Machine Learning ‚Äì an area that has  seen a dramatic progress in the last decade ‚Äì must experi- ence major advances in order to become relevant to the real  battlefield.  Let‚Äôs review some of the required advances.    Learning with very small number of samples is clearly a  necessity in an environment where the enemy and friends  change the tactics continuously, and the environment itself  is highly fluid, rich with details, dynamic and changing rap- idly. Furthermore, very fe w if any of the available samples  will be labelled, or at least not in a very helpful manner.     Figure 3 . AI-enabled agents -- members of a human -agent team  ‚Äì will rapidly learn in ever -changing, complex environments,  providing the team‚Äôs commander with real -time estimates of en- emy, reasoning on possible courses of action, and tactically sen- sible decision .   A typical sample might be a video snippet of events and  physical surroundings or a robot, for example, where the  overwhelmin g majority of elements (e.g., pieces of rubble)  are hardly relevant and potentially misleading for the pur- poses of learning. The information of the samples is likely  to be highly heterogeneous of nature. Depending on circum- stances, samples might consist of  one or more of the follow- ing: still images in various parts of the spectrum (IR, visible,  etc.); video; audio; telemetry data; solid models of the envi- ronment; records of communications between agents; and so  on.   Some samples may be misleading in general , even if un- intentionally (e.g., an action succeeds even though an un- suitable action is applied) and the machine learning algo- rithms will have to make the distinction between relevant  and irrelevant, instructive and misleading. In addition, some  of the sam ples might be a product of intentional deception by the enemy. In general, issues of Adversarial Learning and  Adversarial Reasoning are of great importance (Papernot et  al. 2016).    Yet another challenge that is uniquely exacerbated by bat- tlefield condition s are constraints on the available electric  power . Most successful AI  relies on vast computing and  electrical power resources including cloud -computing  reach -back when necessary. The battlefield AI, on the other  hand, must operate within the constraints of  edge devices ,  such as small sensors, micro -robots, and handheld radios of  warfighters. This means that c omputer processors must be  relatively lights and small,  and as frugal as possible  in the  use of electrical power. One might suggest that a way to  overc ome such limitations on computing resources available  directly on the battlefield is to offload the computations via  wireless communications to a powerful computing resource  located outside of the battlefield.  Unfortunately, it is not a  viable solution, becau se the enemy‚Äôs inevitable interference  with friendly networks will limit the opportunities for use of  reach -back computational resources.    A team that includes multiple warfighters and multiple ar- tificial agents must be capable of distributed learning and   reasoning. Besides distributed learning, these include such  challenges as: multiple decentralized mission -level task al- location; self -organization, adaptation, and collaboration;   space management operations; and joint sensing and percep- tion. Commercial ef forts to date have been largely limited to  single platforms in benign settings. Military -focused pro- grams like the MAST CTA  (Piekarski et al . 2017) , have  been developing collaborative behaviors for UAVs. Ground  vehicle collaboration is challenging and is l argely still at the  basic research level at present. In particular, to address such  challenges, a new collaborative research alliance  called Dis- tributed and Collaborative Intelligent Systems and Technol- ogy (DCIST)  has been initiated ( https://dcist -cra.org/ ). Note  that the battlefield environment imposes yet another compli- cation: because the enemy interferes with communications,  all this collaborative, distributed AI must work well even  with limited, intermittent connectivity.   Humans in the Ocean of Things   In this vision of the future warfare, a key challenge is to en- able autonomous systems and intelligent agent s to effec- tively and naturally interact across a broad range of warf- ighting functions. Human -agent collaboration is an active  ongoing research area . It must address such issues as t rust  and transparency, common understanding of shared percep- tions, and human -agent dialog and collaboration.    One seemingly relevant technology is Question Answer- ing‚Äîthe system‚Äôs ability to respond with a relevant, correct  information to a clear ly stated question. S uccesses of com- mercial technol ogies of question -answering are indisputa- ble. They work well for very large, stable, and fairly accu- rate volumes of data, e.g., encyclopedias. But such tools  dont work for rapidly ch anging battlefield data, also dis- torted by adversarys concealment and deception. They can- not support continuous, meaning ful dialog in which both  warfighters  and artificially intelligent agents develop shared  situational awareness and inten t understanding.  Research  is  being performed  to develop human -robotic dialog technol- ogy for warfighting tasks, using natural voice, which is crit- ical for reliable battlefield teaming.    A possible approach to developing the necessary capabil- ities ‚Äì both human and AI ‚Äì is to train a human -agent team  in immersive artificial environments. This requires building   realistic, intelligent entities in immersive simulations. Train- ing (for humans) and learning (for agents) experiences must  exhibit high degree of realism to match oper ational de- mands. Immersive simulations for human training and ma- chine learning must have physical and soc iocultural interac- tions with high  fidelity and realistic complexity  of the oper- ational environment. These include realistic behaviors of  human actors ( friendly warfighters , enemies, non -combat- ants), and interactions and teaming with robots and other in- telligent agents . In today‚Äôs video games, these interactions  are limited  and not suitable for simulating real battlefield . Advances in AI are needed to dri ve the character behaviors  that are truly realistic, diverse, and intelligent.     To this end, some of the cutting -edge efforts in computer - generation of realistic virtual characte rs are moving towards  what would be needed to  enable realistic interactions i n an  artificial immersive battlefield. For example, Hollywood  studios on a number of occasions sought technologies of the  Army -sponsored  Institute for Creative Technologies  (http://ict.usc.edu/ )to create realistic avatars of actors. These  technologies enab le film creators to digitally insert an actor  into scenes, even if that actor is unavailable, much older or  younger, or deceased. That‚Äôs how actor Paul Walker was  able to appear in ‚ÄúFast and Furious 7,‚Äù even though he died  partway into filming  (CBS News 20 17).  Summary   Intelligent things ‚Äì networked and teamed with human warf- ighters ‚Äì will be a ubiquitous presence on the future battle- field. Their appearances, roles and functions will be highly  diverse. The artificial intelligence required for such things  will have to be significantly greater than what is provided  by today‚Äôs AI and machine learning technologies. Adversar- ial ‚Äì strategically and not randomly dangerous -- nature of  the battlefield is a key driver of these requirements. Com- plexity of the battlefie ld ‚Äì including the complexity of col- laboration with humans ‚Äì is another major driver. Cyber  warfare will assume a far greater importance, and it will be  AI that will have to fight cyber adversaries. Major advances  in areas such as adversarial learning and adversarial reason- ing will be required. Simulated immersive environments  may help to train the humans and to train AI.   Disclaimers   The views expressed in this paper  are thos e of the author and  not of his  employer ; they  are not to be construed as an offi- cial Department of the Army position unless so designated  by other authorized documents.  Citation of manufacturer ‚Äôs  or trade names does not constitute an official endorsement  or approval of the use thereof.   References   Azim, M.T.; Neamtiu, I; and Marvel, L.M. 2014.  Towards self - healing smartphone software via automated patching. In Proceed- ings of the 29th ACM/IEEE international conference on Automated  software engineering , 623 -628. ACM.   CBS News. 2017.  Digital doubles: Bringing actors back to life,  February 26, 2017, online at https://www.cbsnews.com/news/dig- ital-doubles -bringing -actors -back -to-life/  De Gaspari, F.; Jajodia, S.; Mancini, L.V.; and Panico, A. 2016,  October. AHEAD: A New Architecture for Active Defense. In  Proceedings of the 2016 ACM Workshop on Automated Decision  Making for Active Cyber Defense , 11-16. Vienna, Austria:  ACM.   Freedberg , S. J. Jr. March 09, 2016 . Missile Defense for Tanks:  Raytheon Quick Kill v s. Israeli Trophy, Breakingdefense.com   Jajodia, S.; Ghosh, A.K.; Swarup, V.; and  Wang, X.S. eds.  2011.  Moving target defense: creating asymmetric uncertainty for cyber  threats (Vol. 54).  Springer Science & Business Media.   Hall, B. K. July 2017 . Autonomous Weapons Systems Safety , Joint  Force Quarterly  86, 86-93, online at  http://ndupre ss.ndu.edu/JFQ/Joint -Force -Quarterly -86/Arti- cle/1223911/autonomous -weapons -systems -safety/   Kott, A.; Wang, C.; and Erbacher, R. F., eds.  2014. Cyber Defense  and Situational Awareness.  New York: Springer.   Kott, A.; Alberts, D.S.; and Wang, C. 2015. Will Cy bersecurity  Dictate the Outcome of Future Wars? Computer , 48(12): 98 -101.  Kott, A.; Singh, R.; McEneaney, W. M.; and Milks, W. 2011 . Hy- pothesis -driven information fusion in adversarial, deceptive envi- ronments. Information Fusion , 12(2): 131 -144.  Kott, A.; and Alberts, D. S. How Do You Command an Army of  Intelligent Things? 2017. Computer  12: 96 -100  Kott, A.; Swami, A.; and West, B. J.  2016. The Internet of Battle  Things. Computer  49, no. 12: 70 -75.  Muttik , I. 2016, Good Viruses. Evaluating the Risks, Talk at DEF- CON -2016 Conference, online at https://www.defcon.org/im- ages/defcon -16/dc16 -presentations/defcon -16-muttik.pdf   Paper not, N.; McDaniel, P.; Jha, S.; Fredrikson, M.; Celik, Z.B.;  and Swami, A. 2016, March. The limitations of deep learning in  adversarial settings. In Security and Privacy (EuroS&P), 2016  IEEE European Symposium,  372-387. IEEE.   Piekarski, B.; Mathis, A.; Not hwang, W.; Baran, D.; Kroninger,  C.; Sadler, B.; Matthies, L.; Kumar, V.; Chopra, I.; Humbert, S.;  and Sarabandi, K. 2017. Micro Autonomous Systems and Technol- ogy (MAST) 2016 Annual Report for Program Capstone . Technical  Report ARL -SR-0377. US Army Researc h Laboratory, Adelphi,  MD, United States.   Rasch, R.; Kott, A.; and Forbus , K. D. 2002. AI on the battlefiel d:  An experimental exploration. In Proceedings of the Fourteenth In- novative Applications of Artificial Intelligence Conference on Ar- tificial Intellig ence, Edmonton, Alberta, Canada .  Scharre, P. 2014.  Robotics on the Battlef ield Part II: The Coming  Swarm, Report,  Center for a New American Security, Washington,  DC.  Stytz, M. R.; Lichtblau, D. E.; and Banks , S. B.  2005. Toward us- ing intelligent agents to detect, assess, and counter cyberattacks in  a network -centric environment. Report, Institute for Defense Anal- yses, Alexandria, VA.   Theron, P.; Kott,  A.; Drasar, M.; LeBlanc,  B.; Rzadca,  K.; Pihel- gas, M.; Mancini, L.; and Panico,  A. 2018. Towards an active,  au- tonomous and intelligent cyb er defense of military systems. In Pro- ceedings of the ICMCIS -2018 Conference , Warsaw, Poland, to ap- pear","cs.CY, cs.AI",Arxiv
28,"Artificial intelligence, rationalization, and the limits of control in the public sector: the case of tax policy optimization","Jakob Mokander, Ralph Schroeder",2024-07-07 11:54:14+00:00,http://arxiv.org/pdf/2407.05336v1,"The use of artificial intelligence (AI) in the public sector is best understood as a continuation and intensification of long standing rationalization and bureaucratization processes. Drawing on Weber, we take the core of these processes to be the replacement of traditions with instrumental rationality, i.e., the most calculable and efficient way of achieving any given policy objective. In this article, we demonstrate how much of the criticisms, both among the public and in scholarship, directed towards AI systems spring from well known tensions at the heart of Weberian rationalization. To illustrate this point, we introduce a thought experiment whereby AI systems are used to optimize tax policy to advance a specific normative end, reducing economic inequality. Our analysis shows that building a machine-like tax system that promotes social and economic equality is possible. However, it also highlights that AI driven policy optimization (i) comes at the exclusion of other competing political values, (ii) overrides citizens sense of their noninstrumental obligations to each other, and (iii) undermines the notion of humans as self-determining beings. Contemporary scholarship and advocacy directed towards ensuring that AI systems are legal, ethical, and safe build on and reinforce central assumptions that underpin the process of rationalization, including the modern idea that science can sweep away oppressive systems and replace them with a rule of reason that would rescue humans from moral injustices. That is overly optimistic. Science can only provide the means, they cannot dictate the ends. Nonetheless, the use of AI in the public sector can also benefit the institutions and processes of liberal democracies. Most importantly, AI driven policy optimization demands that normative ends are made explicit and formalized, thereby subjecting them to public scrutiny and debate.","This is a preprint : The manuscript has been accepted for publication in Social Science Computer review .     1 Artificial intelligence , rationalization, and the limits of control  in the  public sector : the case of tax policy optimization     Jakob M√∂kander1,2, Ralph Schroeder1,3  1 Oxford Internet Institute, University of Oxford, 1 St Giles, Oxford OX1 3JS , UK  2 Center for Information Technology Policy, Princeton University, Princeton, NJ 08544, US   3 Center for Advanced Study in the Social Sciences, Stanford University, Stanford, CA 94305, US     Email for correspondence < jakob.mokander@ outlook.com >     Abstract   In this paper, we first frame the use of artificial intelligence ( AI) systems in the public sector as a  continuation and intensification of long -standing rationalization and bureaucratization processes.   Drawing on  Weber , we  understand  the core of these processes to be the replacement of traditions  with instrumental rationality, i.e., the most calculable and efficient way of achieving any given policy  objective. Second, we demonstrate how much of the criticism s, both among the public and in  scholarship, directed  towards AI systems  spring from  well-known  tensions at the heart  of Weberian  rationalization. To illustrate this point, we  introduc e a thought experiment whereby  AI systems are  used to optimize tax policy  to ad vance a specific normative end : reducing economic in equality . Our  analysis shows  that buildi ng a machine -like tax system that promotes social and economic equality is  possible. However, our analysis  also highlights that AI-driven  policy optimization (i) come s at the  exclusion of other competing political values, (ii)  overrides citizens‚Äô sense of their (non -instrumental)  obligations to each other , and (iii) undermines the notion of humans as self -determining beings. Third,  we observe  that contemporary scholarship and advocacy directed  towards  ensur ing that AI systems   are legal, ethical , and safe  build on  and reinforce central assumptions that underpin the process of  rationalization , includ ing the modern idea that science can sweep away oppressive systems and  replace them with a rule of reason that would rescue humans from moral injustices.  That is overly  optimistic : science  can only provide the means  ‚Äì they  cannot dictate the ends.  Nonetheless , the use  of AI in the public sector can also benefit  the institutions and processes  of liberal democracies . Most  importantly, AI -driven policy optimization demand s that normative ends are made explicit and  formalized , thereby subjecting them to public scrutiny , deliberation,  and debate.   Keywords   Artificial intelligence, automated decision -making, bureaucratization, rationalization, tax policy,  Weber      Note:   This is a pre -print. A revised version of this manuscript is available onli ne and can be cited as follows:   M√∂kander, J., & Schroeder, R. (2024). Artificial Intelligence, Rationalization, and the Limits of Control  in the Public Sector: The Case of Tax Policy Optimization.  Social Science Computer  Review , 0(0). https://doi.org/10.1177/08944393241235175   This is a preprint : The manuscript has been accepted for publication in Social Science Computer review .     2 1. Introduction    The use of a rtificial intelligence (AI) systems increasingly permeates  modern societies , including the  public sector  (Wirtz et al., 2019) . This means that many  decisions that were previously made by human  experts are now made by AI systems (Zarsky, 2016). The drivers behind this development are clear :  enabled by recent advances in machine learning (ML) research and fuelled by the growing availability  of large, fine -grained digital data sources  (Wiggins & Jones  2023) , AI systems can improve the  efficiency and consistency of existing decision -making processes and enable new solutions to complex  optimization problems (Taddeo  & Floridi  2018). AI systems enable good g overnance in two ways:  directly, by automating and personalizing public service delivery, and indirectly, by informing policy  design through more accurate forecasting and simulations of complex systems  (Margetts &  Dorobantu, 2019) . These advantages are not merely hypothetical.  Empirical studies have documented  governments ‚Äô use of AI systems across a range of  applications and geographic settings ; from  streamlining immigration procedures through biometric and biographic matching in New Zealand  (Nalbandian, 2022) to facilitating preventive healthcare in China (Sun & Medaglia , 2019) .   However, the use of AI system s in the public sector is coupled with ethical  and legal risks . For example,   it may produce discriminatory outcomes , violate individual privacy , and enable human -wrongdoing   (Tsamados et al., 2021). A study of COMPAS  ‚Äì an AI-powered decision tool used by US courts to predict   criminal recidivism  ‚Äì found that it systematically discriminated against African -American  defendants   by overestimating their likelihood of reoffending (Angwin  et al., 2016) . Another  controversy took place  in the Netherlands, this time surrounding a data -driven welfare fraud detection system referred to as  ‚ÄòSyRI.‚Äô  In addition to  discriminat ing against minorities , it was found that  SyRI‚Äôs linking of personal data  from multiple sources did not comply with the right to privacy under the European Convention on  Human Rights ( van Bekkum & Borgesius, 2021). In short, there are many examples of instances where  AI systems have caused harm , or at least failed to work as advertised  (Kapoor & Narayanan, 2022) .   Against th is backdrop, it is understandable that researchers  and policymakers have called for  increased fairness, accountability, and transparency  with respect to the use of AI system s. There is,  for example , a vast academic  literature on how to design and deploy  AI systems that are legal, ethical,  and safe .1 Standard -setting bodies have provided similar guidance2 and policymakers have propos ed  hard regulations to manage the risks AI systems pose .3 These initiatives tend to emphasize  the novelty  of AI systems and  the ethical challenges they pose. The upside of this framing is that it gives a sense  of urgency  to the cause of addressing the issues under consideration  here . However, there are also  downsides to overemphasizing the novelty of specific technologies and social phenomena.   In this paper , we argue that the contemporary discourse concerning the social challenges  associated  with the use of AI in the public sector is best understood against the backdrop of a longer trajectory  whereby calculability is increasingly imposed on social processes.  Specifically, w e demonstrate that  the use of AI systems in the public sector can be viewed a s a continuation  and intensification of  ongoing  rationalization and bureaucratization processes. Drawing on the work of Max Weber , we take  the core of  these processes to be the replacement of  personalistic rule , tradition , and emotion as  motivations for behaviour  by instrumental rationality , i.e., the most calculable, efficient, predictable,    1 See, e.g., Russe ll (2019) , Floridi et al . (2018)  or Laufer (2022) .  2 Examples include Ethically Aligned Design  (IEEE, 2019) and NIST‚Äôs  (2023) AI Risk Management Framework .  3 In May 2021, the European Commission published a draft version of the AI Act . A similar bill, the Algorithmic  Accountability Act of 2022 , is currently being discussed in the U.S. Congress  (M√∂kander  & Floridi, 2022) .  This is a preprint : The manuscript has been accepted for publication in Social Science Computer review .     3 and impersonal way of achieving any given policy objective.  The reader  will notice that th e  characteristics  of rationalization  correspond to  the traditional goals of AI research , e.g.,  perception,  learning, knowledge representation, reasoning, and planning (Russell & Norvig, 2016).   The advantage of foregrounding this perspective is that address ing a specific problem requires both  an adequate  conceptualization  of the phenomen on in question and the mechanisms driving it and a  realist ic and pragmati c understanding of scientific knowledge  (Hacking , 1983). S ince much of the   public outcry and scholarly criticism directed towards ‚ÄúAI‚Äù mirror s well-known  critiques of  rationalization  formulated by Weber , viewing the use of AI systems in the public sector as the latest  stage in this long -standing yet accelerating trend  of techno scientific rationalization  allow s us to draw  on a rich and established  vocabulary to better articulate  and diagnose specific  problem formulations .   It is true that AI systems pose a wide range of ethical and legal risks. It is also true that many  AI systems  fail to live up to the claims made by the organizations that deploy them. In these cases, more robust  software development practic es (Kearns & Roth, 2020) , broader impact requirements  (Prunkl et al.,  2021) , guardrails for the use of AI systems (Gasser & Mayer -Schoenberger 2024), and independent  AI  audit s (M√∂kander , 2023)  can help mitigate  risks and prevent  harms. However, with respect  to the cold,   impersonal treatment of decision  subjects ( O‚ÄôNeil, 2016 ), the quantification of social relationships  (Mau, 2020 ), the centralization of decision power and the standardization of decision criteria  (Kleinberg et al., 2021) , the automation of cognitive  tasks (Brynjolfsson & McAfee, 2014 ), or the  shaping of social preferences through nudges ( Thaler & Sunstein, 2008), the problem is not that AI  systems ‚Äúdon‚Äôt work ‚Äù but that they work ‚Äútoo well ‚Äù as tools for instrumental rationalization .   The argument of this paper can thus be summarised in two claims . First, the social and ethical  challenges  associated with AI systems  intensify ing ongoing rationalization and bureaucratization   processes are distinct from those  resulting from AI systems fail ing to work as advertised . Second,  these  two distinct sets  of social and ethical challenges call for different remedies , whi ch some times stand in  tension with each other.   This line of  reasoning is best illustrated by an example . In this paper , we examine  how AI  systems could  be employed  to achieve specific normative ends through policy optimization. Build ing on recent work  in economics (Kasy, 2018),  political philosophy (Sparks & Jayaram, 2022) , and computer science  (Zheng et al., 2022) , we propose a thought experiment whereby the state uses AI systems to not only  automate  the tax system  but also  to optimize  tax policy in order to reduce economic inequality. While  our analysis shows that such uses of AI system s are within the realms of possibility , it also surface s the  social and ethical tensions associated with rationalization and bureaucratization processes.  Specifically , our thought experiment highlights how AI -driven policy optimization  may not only be in  tension with how consensus over  competing political values  is reached  in democratic societies but   may also override citizens‚Äô sense s of their (non -instrumental) obligations to each other  as well as their  self-understandings  as self-determining beings.   The remainder of this paper  is structured as follows. In Section 2, we frame the use of AI systems in  public administration as a continuation and intensification of rationalization and bureaucratization  processes that have been  going on for several centuries . In Section 3, we review relevant literature on  tax policy and how it can be used  to pursue certain ideas about equality using knowledge that tries to  reshape peoples‚Äô preferences  and behaviour . In Section 4, we detail our  thought experiment  about  how to reshape equality through AI-driven tax polic y optimi zation . In Section 5, we discuss the social  This is a preprint : The manuscript has been accepted for publication in Social Science Computer review .     4 and ethical implications of that experiment. In Section 6, we conclude the paper  by generalizing our  argument  and highlighting how AI driven policy optimization ‚Äì despite the tensions it causes ‚Äìcan also  benefit the institutions and processes of liberal democracies by demanding that normative ends are  made explicit and formalized, thereby subjecting them to public scrutiny and debate.    2. Artificial intelligence  as Weberian rationalization   In this section, we  define  the two central concepts of our analysis: AI an d rationalization. Both are  disputed concepts which have eluded widely agreed -upon definitions. For example, Legg and Hutter  (2007) list no fewer than 70  competing and partly conflicting definitions of AI. Similarly, the term  rationalization has different meanings in different context s.   Following the OECD (2021), we define an AI system  as a machine  that can, for a given set of objectives,  make predictions, recommendations , or decisions influencing its environment.  It does so by   processing input data  to (i) perceive its environment , (ii) abstract perceptions into models of the  external environment , and (iii) use model inference to structure  information or perform action s in an  automated manner. An AI system ‚Äúlearns ‚Äù insofar as  it updates its model and internal  decision -making  logic as it is fed new input data. The  model itself can be based on ML algorithms such as deep neural  networks (LeCun et al., 2015), formal logic as in expert systems ( Giarratano & Riley, 2004 ), or a  combination thereof as in hybrid systems (Marcus, 2020). In some cases , a model based on  deterministic rules offer s a single recommendation. In other cases , model s based on probabilistic  reasoning  can offer a variety of recommendations. In each case, however, pre -defined o bjectives  stipulated by humans guide both the model inference phase and the subsequent execution .   For our purposes, this definition has three advantages. First, it bypasses any distracting discussions  about machine consciousness by focusing solely on the observable characteristics and operations of  AI systems. As noted by Esposito (2022) , if AI systems  appear intelligent, this is not because they have  learned how to think but because we have learned how to communicate with them in ways that  advance our purposes.  Second, the definition is broad enough to encompass symbolic (logic -based)  and sub -symbolic (ML-based) AI systems , both of which play important roles in optimizing social  policies and automating their execution. Third, it highlights how AI systems operate with varying levels  of complexity and autonomy in larger human -centric decision -making  processes  (M√∂kander  et al.,  2023) . To explain why th at is the case, we must first define our second central concept.   With rationalization , Weber u nderst ood a long -term process whereby beliefs based on tradition  are  replaced by rules based on logic and (instrumental) efficiency  (Brubaker , 1984 ). As Weber observed,  the process of rationalization takes different forms in the economic, political , and cultural spheres of  life (Gellner , 1992), which makes it difficult to summarize neatly. But we focus here on politics and  how the state impose s calculability on social processes . As we shall see, t his is where Weber‚Äôs ideas  fit closely with how AI systems can both automate and optimize policymaking processes.   In relation to the state , Weber thought that rationalization was synonymous with a machine -like  apparatus of rules, i.e., bureaucratization.  The modern state  for Weber  thus rests on the legitimacy of  legal authority or domination via a system of predictable and impersonal rules  (Mommsen , 1984;  Breuer , 1998 ). Legal -rational  authority is embodied in bureaucracy and closely related to instrumental  rationality since it contrasts with traditional or charismatic authority . The advantage of this form of  rule is eq ual treatment and greater efficiency. The disadvantage, in Weber‚Äôs view, is his famous ‚Äúiron  This is a preprint : The manuscript has been accepted for publication in Social Science Computer review .     5 cage ‚Äù, i.e., the inescapability of structures that constrain freedom because they leave less room for  individual autonomy (Baehr, 2001). Weber‚Äôs idea of history was rather pessimistic on this point . He  thought that the disenchantment  of the modern world went hand in hand with ever -greater  constraints on freedom. But it is not necessary to follow hi s pessimis m: a well-working state  bureaucracy can also allow more space to lead one‚Äôs private life in an unfettered way.   The point to stress from Weber‚Äôs theory of rationalization is that computation can be viewed as a  ubiquitous phenomenon not limited to AI systems or other technical artefacts . As he puts it, the  ‚Äúpeculiar modern Western form of capitalism [is]‚Ä¶strongly  influenced by its technological  conditions.  Its rationality is today essentially dependent on  the calculability of the most important  technical   factors. But this means fundamentally that it is dependent on the peculiarities of modern  science,  especially the natural sciences based on  mathemat ics and exact and rational experiment ‚Äù (Weber ,  1967: 24). Weber‚Äôs ‚Äúdisenchantment ‚Äù is thus based on the idea that ‚Äúone can, in principle, master all  things by calculation ‚Äù (1948: 139)  ‚Äì and computation by ML -based AI systems is perhaps the prime  current instantiation of th at mastery.    We are not the first to observe the link between the use of AI systems in the public sector and long - standing rationalization processes. In Digital Weberianism , Muellerleile and Robertson  (2018) argue  that, far from constituting a radical rupture, the use of AI systems and data in today‚Äôs digitizing society   show  strong traces of the logic of Weber‚Äôs bureau cracy. Similarly, Vogl et al. (2020) document British  local governments ‚Äô use of AI systems to describe the emergence of what they call an algorithmic  bureaucracy . These works have provide d a theoretical framework on which our analysis builds . Yet  our contribution moves beyond previous work in two ways . First,  we explor e the implications of  rationalization in  a specific domain : AI-driven tax  policy optimization . Second, we highlight the  normative tensions associated with AI rationalization and spell out their implications for the ongoing  discourse on fairness, accountability, and transparency in AI research and system design.   Before proceeding, it should be noted  that AI systems facilitate  the operations of the bureaucratic  state in two  conceptually distinct ways. First, they  can be used to automate routine tasks, such as  diagnos ing patients, grad ing essays, or calculat ing tax returns. Historically, such  tasks  have been  performed  by ‚Äústreet -level bureaucrats ‚Äù (Lipsky, 1980)  who, despite following rules that theor etically   applied equally to all citizens, inevitably operated with some degree of discretion . In an article titled  Rule by Automation , Sparks and Jayaram (2022) argue that AI systems can promote freedom and  equality by automating the tasks of street -level bureaucrats. B y eliminating human discretionary  power, rule by automation reduces our dependence on the intentional and arbitrary will of other  actors and reduces social hierarchy. Hence, Sparks and Jayaram conclude, rule by automation should  be supported for the same reasons as  the rule of law.    Second , AI systems can be used to gather  and process  information to inform or optimize  policies  designed  to reach specific normative ends . Of course, controlled policy experiments are difficult to  conduct (Barnow, 2010 ). However , bureaucracies  already claim  to apply  ‚Äúevidence -based  policy making ‚Äù, i.e., the idea that  polic ies should be informed  by objective knowledge about the state  of the world and the causal effects of specific interventions  (Cartwright  & Hardie, 2012) . This is where  AI systems come in. By leveraging the growing availability of fine-grained digital  data sources, AI  systems can  perform large -scale  policy  experiments in real  time and ‚Äì based on th e feedback  from  such experiments  ‚Äì optimi ze policy to achieve objectives defined by human policymakers . Figure 1  illustrates  the difference between using AI systems to automate  and optimize  policymaking .   This is a preprint : The manuscript has been accepted for publication in Social Science Computer review .     6 Figure 1. The conceptual difference between automating tasks and optimizing processes.     The distinction between AI-driven automation and optimization must not be overemphasi zed; the two  functions both build on and intensify the logic of rationalization inherent in bureaucratic states.  Moreover, optimizing certain processes may well involve automati ng repetitive tasks  to reduce  errors  and improv e productivity.  However,  the two functions give rise to different normative tensions . The  tensions  associated with AI systems used to automate tasks have sparked  much debate , especially  when th ose systems fail . In contrast, the tensions created by using  AI systems  for policy optimization   ‚Äì even when they work as intended ‚Äì have  received little attention.  Our thought experiment  in Section  4  will surface  those tensions . But first, something should be said about why we focus on A I-driven tax  policy  as an example .  3. Bureaucratization, tax policy, and equality    In this section, we review relevant literature about  tax policy . In doing so, we show  how  the  institutional histories of nation -states  and the associated  civic behaviour of national population s  shape each other . We also highlight how taxation ‚Äì and experiments with tax policy  ‚Äì can be used to  achieve different normative ends.    The rationalization of taxation played a central role in the emergence of modern state bureaucra cies.  The pre-modern state  had neither the  capacity  nor the information  necessary  to collect  taxes  directly   without using intermediaries (Scott , 1998) . Medieval tax systems involved collective obligations  and  non-monetary quotas  ‚Äì based on rule s of thumb or traditions ‚Äì on towns and villages , which were  administered by local nobility . The story of how modern taxation regimes emerged with warfare  between  modern  European states is well -known (Tilly , 1990). Subsequent developments meant that   rational tax ation rests on explicit and calculable rules that are systematically enforced  on whole  populations . The point is that  sources of revenue have a major impact on patterns of state formation  (Moore, 2004) , and that states require intermediaries ‚Äì including information gathering  infrastructures and bureaucratic organizations ‚Äì to collect taxes  from their populat ions).  Following a similar line of reasoning, Weber  argued  that rational taxation is a way of financing the  state that encourages  and is encouraged  by the expansion of bureaucracies . Because collecting taxes  effectively is complex and requires cooperation across state agencies , it required modern  states  to  invest in new capabilities  and spearheaded  the broader development of bureaucratic institutions   (Dandeker , 1990; Besley & Persson, 2009) . Today , most developed countries have highly rationalized   This is a preprint : The manuscript has been accepted for publication in Social Science Computer review .     7 tax systems support ed by  large  state  bureaucracies.  However, the relationship between a state‚Äôs  institutional history and the civic behaviour of its population  is dynamic (Steinmo, 1993) . Citizens who  are required to pay taxes are more likely to feel ownership of government activities and to make  demands for representation.  Similarly , government s in need of tax revenue have stronger incentives  to make reciprocal concessions to taxpayers  and encourage tax compliance.  Consequently , variations  in cultural, eco nomic, and political factors in the early modern period influenced not only the features  of different countries‚Äô tax systems  but also  the attitudes and behaviours  of their population s with  respect to taxation .    To illustrate this point, it is useful to consider how taxation works in Sweden and the US , which are  often perceived a s cases that lie at the extremes of the ‚Äúvarieties of capitalism ‚Äù (Pontusson , 2005). In  Willingness to Pay , Steinmo and D‚ÄôAttoma (2021) demonstrate through empirical research ‚Äì which   includes data from the two countries  ‚Äì that people tend to obey laws and trust institutions more in  societies where the rules are clear, coherent, and consistently applied. Paying taxes is disliked  in the  US partly because it requires a lot of effort to file tax returns and partly  because everyone thinks  everyone else  is getting a better deal from the  plethora of  tax breaks  and exemptions.  It can be added  that these exemptions are not a matter of tax officials‚Äô discretion; rather, the  US uses taxation to  pursue social policy in various ways, or lawmakers provide exemptions to appeal to their various  supporters . In Sweden , the opposite is t he case . The Swedish tax system is  universal and transparent;  everyone can find out how much others are paying and there is little pandering  to different groups via  deductions. It is also highly efficient; a simple click on one‚Äôs mobile phone  suffices  for most people  to  file tax returns .   This is a good place to consider some  reasons why AI systems are likely to be employed to automate  taxation and optimize tax policy. To start with , the monetary nature of modern economies and the  digitalization of the financial system mean that taxation lends itself to calculation and thus  rationalization. As Sweden‚Äôs case illustrates, data regarding people‚Äôs income  and wealth  are readily   available in digital form. Further , how tax systems are designed shape s people‚Äôs attitudes towards   paying taxes. As prev iously stated , people dislike paying taxes when  it involves lots of work and they  suspect others are getting a better deal. An automated tax system that reduces the s cope  for arbitrary  exemptions would address both concerns. Finally , while few citizens understand complex policy issues  like taxation, everyone can understand ‚Äì and partake in the discussion about ‚Äì the normative ends  that taxation should be directed towards  (Steinmo, 1993) .    This brings us to the second key point: how tax policy can be used to reshape inequality. Researchers  have long  studied different tax policies and their effects on economic redistribution  (Steinmo, 2010;  Hobson, 2003; Prasad, 2018) . Mostly, the levelling  of income via taxation and public transfers is rather  small  (Tanzi & Schuhknecht, 2000) . As Steinmo (2010 :156 ) observ es: ‚ÄúIn the United States ‚Äì as in most  countries ‚Äì the major recipient of public transfers is the middle class.‚Äù  However, Steinmo (2010 : 153)  also notes that ‚Äúthe US is unique in the extent to which it attempts to regulate, reward, subsidize and  manipulate the behaviour of different actors through its tax system rather than through public  spending.‚Äù This means that taxation is one of the levers states can use to reduce economic inequality   ‚Äì provided the tax policy is directed towards that  end.   Fairness in relation to taxation is, of course, part of a larger debate about equality. And the public‚Äôs  ideas about equality are far from consolidated. Citizens  perceive  that taxes are their contribution to  society or to each other. While perceptions matter , Prasad (2018 : 214 ) highlights a  critical  tension:  This is a preprint : The manuscript has been accepted for publication in Social Science Computer review .     8 ‚ÄúPolitical scientists have noticed that Americans are ideologically conservative but pragmatically  liberal ‚Äì they love the idea of small government in abstract terms, but in practice they like almost  everything that government does.‚Äù Or, as Steinmo (1993 :17) puts  it: ‚ÄúCitizens want higher public  spending and lower taxes .‚Äù In short, popular support for more progressive taxation is mixed  at best.   Nevertheless, the political philosophy in relation to the distribution of resources is clear: Marxists view  reduced inequality as an intrinsic good  (Wolf , 201 2); egalitarian utilitarians want to maximize well - being across the population  (Singer, 2002 ); liberals want to maximize the capabilities of citizens  (Sen,  2009 ); and conservatives seek a normative  foundation in national identities that transcends class  divisions  (Scruton, 2014) . All these political projects require systematic taxation and the continuo us  redistribution of resources to reduce the inequalities to which markets give rise , though in very  different ways.    Among policymakers, the question of taxation and equality has once again risen to the top of the  agenda, as evidenced by the widespread attention given to the work of Thomas Piketty (201 4). Piketty  has generated  much debate about  how taxation ‚Äì and the public spending arising from it ‚Äì could be  engineered to overcome rising inequalities.  However, how  to design tax systems that reduce  inequality is also an empirical question  and, as the next section  shows , one that is best answered  through a data -driven and e xperimental approach .        To summari ze, we focus on the example of tax policy for three  reasons. First, taxation lies  close to  the  centre of the bureaucratic state‚Äôs capabilities . Second , taxation can be used as a governance  mechanism to manipulate the behaviour of populations and thereby achieve specific normative ends.   Third , taxation is a domain that , by virtue of being readily quantifiable,  lend s itself well to AI -driven   rationalization. In the next section, we will combine these ideas .   4. AI-driven tax policy to reduce economic inequality: a thought experiment   In this section, we propose a thought experiment  in which  AI systems are employed to  optimize tax  policy  and automate taxation to achieve a given normative end : minimizing economic inequality.  The  aim thereby is to provide an  example o f how the use of AI systems in the public sector is both a  continuation and intensification of Weberian rationalization  as well as to highlight the normative  tensions to which it gives rise .   Consider the following hypothetical situation: there is a broad political consensus in a specific nation - state  regarding  the aim of reduc ing economic inequality , and  the policy debate now centres on how  that objective can be reached.  Admitedly , such a situation is highly unlikely  to materiali ze. Political  consensus is rare (Rorty, 2021) . Moreover, minimizing inequality is only one conceivable policy goal;  others could be envisaged.4 However, under the assum ption  that there is a broad political consensus  to reduce economic inequality , policymakers are left with a problem of mechanism design: how to  find a policy under wh ich the affected economic agents yield  the desired out come  (Myerson, 1981) .   Hitherto , policymakers have approached such a quest by draw ing on economic theory  regarding  taxation (Ramsey, 1927; Mirrlees, 1971; Saez, 2001 ) and evidence from experimental research on the  relationship between policy , civic behaviour, and inequality  (Spicer & Becker, 1980 ; Agrano v & Palfrey,    4 Here , we assume a consensus about egalitarianism as a goal  for policy making . In practice, such a goal would  and stand in pluralist competition with other goals, such as a Nozickian minimalist state  (Nozick, 1974 ).   This is a preprint : The manuscript has been accepted for publication in Social Science Computer review .     9 2015 ). However, while useful, theoretical approaches to policy design are limited since  they fail to  capture the complexity of the real world ( Hayek, 1973). Moreover, a lthough policy experiments have  become popular, they are hard  to design,  and result s tend to suffer from limited external validity   (Peters et al., 2016) . Whether produced by lab  or field experiments, it is often unclear how well  empirical findings  about  the effectiveness of specific policies  generalize  between different social and   temporal contexts.  Historically, p olicymakers have thus face d significant uncertainty regarding  the  actual outcome s of different  tax policies.    This is where AI rationalization comes in.  Rather than having humans decid e what the policy should  be, leaving the actual outcome uncertain, policymakers only need to define the goal function, establish  constraints, and employ AI systems to optimize the policy. In Section 2, we defined an AI system  as a  machine  that can, for a given set of objectives, make decisions influencing its environment.  It does so  in two steps: first, by processing input data  to build models of the environment and, subsequently, by  using model inference to inform or perform action s in an automated manner.  AI system s ‚Äúlearn ‚Äù  insofar as they update their models when fed with new input data. Provided that the goal function is  clearly defined, such  systems thus offer a fundamentally new approach to policymaking: one that is  data -driven and based  on learning from continuous feedback.5   The idea behind AI -driven policy optimization is straightforward but  requires some understanding of  reinforcement learning (R L). Simplified, RL is a technique to train AI systems based on neural networks  operating in unknown environment s to learn the optimal policy ( i.e., set of decisions ) to maximize a  reward function (Sutton & Barto, 2018). As a framework for solving decision problems , RL has been  widely employed in areas like natural language processing  and medical diagnostics (Mousavi et al.,  2018). How ever, RL is particularly apt for policy optimization for two reasons. First, RL means learning  from mistakes . Because RL maintains a balance between exploration  (trying out what works) and  exploitation  (trying again what has worked in the past ), AI systems using RL  learn from their own  experience over time and do not require  all the data needed to solve a problem to be available  upfront . Second,  RL approaches optimization problems holistically, without dividing  them into  subtasks. This makes AI systems based on RL well -suited for complex decision problems where the  long -term  reward  is prioritized over short -term  benefits.    With this, we can  return to our thought experiment . Using RL, an AI system c ould  (i) perform large - scale policy experiments on populations, (ii) observe the effects of different policies  in real  time , and  (iii) continuously revise and refine the tax policy to reduce economic inequality.  AI-driven tax policy   optimization is thus a good example of Weberian rationalization . Recall that instrumental rationality  refers to  the most calculable, predictable, and efficient ways of achieving any given  policy objectiv e.  In this case , that objective  is to achieve a more equal distribution of resources by finding more  effective ways to shape taxpayers‚Äô behaviour.  Figure 2 illustrates the logic behind this approach .     5 Feedback is a method of controlling a system by reinserting the results of its past performance. As Wiener  (1950: 71) put it : If the information which proceeds backward from the performance can change the general  method and pattern of performance, we have a process which may well be called learning .  This is a preprint : The manuscript has been accepted for publication in Social Science Computer review .     10 Figure 2. AI-driven tax policy experimentation and optimization to maximize social equality.      Implementing AI-driven tax policy optimization  would require  policymakers to make three  system  design choices upfront. First, policymakers would need to define a goal function . To optimize for  economic equality, the goal function could include both (i) income inequality metrics , like the Gini  index or the Thiel index , and (ii) wealth inequality metrics , like the Gini coefficient  or the Palma ratio.  How to define the goal function is a non-trivial  question  that lies beyond this paper‚Äôs  scope. However,  some  general observations can be made . To start with,  policymaking is always a multi -variable  optimization. Hence , any goal function is likely  to consist of a plurality of complementary metrics .  Further,  equality could  be conceived  in different ways. Whereas utilitarians and egalitarians  focus on  ensuring equal outcomes, liberals focus on providing equal  capabilities . An AI  system employed to  maximize equality could equally  favour a liberal notion  since  it is easier to create good records of how  much money people have than what they do with it or how it affects their subjective well -being.6   Second, policymakers would need to de cide on which variables the AI system should be able to  manipulate . To maximize its goal function, the AI system would require the ability to manipulate the  variables constituting a holistic tax policy , including  tax base  (what should be taxed ?), tax rates  (how  should different assets or incomes be taxed ?), tax exemptions  (what deductions should be allowed ?),  and tax credits  (what rebates and subsidies should be granted ?). Howeve r, it should be noted that AI  systems base d on RL put no value on variables that are not part of the goal function or subject to  explicit constraints.7 Consequently , there are good reasons to limit the number of levers the AI system  has control over , e.g., to reduce  the likelihood  of unintended harms .  Third , policymakers would need to define what data sources the AI system should be able to  access .  To optimize the tax policy to achieve maximal economic equality, the system would need access to  economic data  (regarding citizens‚Äô incomes and wealth) , sociological  data  (regarding citizens‚Äô    6 The goal function  would need to include some  yardstick or constraint prevent ing the AI system from aiming  at a level of equality that is completely nivellating  (Parfit, 1995) . Rawl s‚Äô (1971)  max imin principle, w hich seeks  to maximize the welfare of societies ‚Äô least well -off members , could be one such  constraint.   7 This is what philosophers have referred to as the value alignment problem (Gabriel, 2020). One example is  the paper clip maximis er discussed by Bostrom (201 4), which highlights the concern that an AI system set to  maximize  any specific objective would, unless constrained, inadvertently end up caus ing harm.     This is a preprint : The manuscript has been accepted for publication in Social Science Computer review .     11 attitudes and behaviour) as well as  information about how these data change over time. Further, t o  perform policy experiments, the AI sy stem cannot rely on aggregate data but need s access to fine- grained data  on how individuals and groups change their behaviours in response to specific  policy  treatments.8 Such experiment ation  is already a favoured tool in economics (Mascagani, 2017). The  difference is that , fed with relevant input data in a seamless and continuous manner, the AI system   would  conduct large -scale , real -time  experiments on the same population for which it optimizes the  policy. Therefore , it would  overcome the concerns regarding  external validity traditionally associated  with policy experiments.       Some further clarifications  are needed . The key feature of AI -driven policy optimization  is learning .  This means that  while the AI system uses data  about taxpayers‚Äô income , wealth, and behaviour as  input s to calculat e the optimal tax policy to minimize economic inequality , this optimum would need  to be continually adjusted to account for changing economic and social circumstances . Further , as  already indicated, learning is contextual. In Section 3, we demonstrated how each country‚Äôs   institutional history, tax polic ies, and the civic behaviour of its population shape each other. This  means that it  is, theor etically , possible to shape  the behaviours of populations in the direction of their  stated preferences with technocratic solutions . However, it also means that  the borders  of nat ion- states would be the main constraint within which learning takes place.   Let us now summari ze our thought experiment. We explored the idea of using AI system s to optimize  the tax policy of a nation -state to promot e economic equality within its population. This would  take  the form of repeated large -scale experimentation to learn  about  the behaviour and preferences of  taxpayers  and the effectiveness and feasibility of different tax policies.  This feedback would then be  used to continuously adjust the tax policy and shape the behaviour and preferences of the population  in line with that policy.9 This is a critical point, since research has shown that voters often go against  their own interests in terms of tax policies (Bartels, 2005). Shaping the preferences of citizens in such  a way would  mean control through (AI -generated) knowledge , which  is fully in line with instrumental  rationalization . However , it would mean treating the population as experimental subjects .   Of course, our thought experiment is subject to  both technical and political  limitations . For example,   although it is clear in principle how an AI system could be used to optimize tax policy, many technical  challenges , such as data access,  could hamper its implementation . AI-driven tax policy optimization  would require that all financial transactions are made digitally and linked to a centralized national data  infrastructure.  Currently , even countries with highly digitized economies and high institutional trust  (like Sweden) fail to meet that bar, and most countries fall well short of it. Other challenges include  how to define the goal function, how to desi gn, train and validate the AI system, and how to build  adequate safeguards  into the system . Finally, linking and analysing large social scale data across  multiple sources is bound to come into tension with privacy regulations, as the controversy  surrounding SyRI, the Dutch welfare detection fraud system  discussed in Section 1, illustrated .     8 Our thought experiment hinges on data availability , which in turn depends on the  maturity of different tax  systems and data privacy regulations. However, to some degree , the required data records already exist in the  US, Sweden , and elsewhere . Thus, w hat is needed is not so much a leap in state capabilities as an upgrade of  existing infrastructure.   9 Our line of reasoning is close to Steinmo‚Äôs (2018) efforts to nudge taxpayers‚Äô  behaviour via policy  experiments and institutional reforms . The difference is that, in our thought experiment, both policy  experiments and adjustments are conducted by AI systems.    This is a preprint : The manuscript has been accepted for publication in Social Science Computer review .     12 That said , the idea of using AI systems to optimize tax policy is not just a hypothetical proposition (as  in this paper) but a growing field of research at the intersection of economics and computer science .  In an article titled Optimal taxation and insurance using machine learning , Kasy (2018) proposes a  framework that resembles our thought experiment. By combin ing insights from optimal policy theory  and statistical decision theory , Kasy  shows  how AI systems can perform (quasi -) experiments on  taxpayers an d draw on this experimental evidence to iteratively choose the policy that maximizes  social welfare.  The details of Kasy‚Äôs proposal  concern  us less  here  than hi s conclusion , which is  that  AI-driven policy optimization ‚Äúleads to  tractable, explicit expressions characterizing the optimal policy  choice‚Äù and that this  ‚Äúpoints toward a large area of potential applications for machine learning  methods in informing policy.‚Äù    Kasy‚Äôs conclusions are echoed by  Zheng et al. (2022) . In an article titled The AI Economist , Zheng et al.   argue that  ‚Äúthe challenge with policy design comes from the need to solve highly nonstationary   decision -making problem s where all actors (both taxpayers and the government) are learning .‚Äù The  solution, they suggest,  is to design an AI system that uses a two -level RL framework in which both  taxpayers and social plan ners adapt  their behaviour and policies to maximize their respective goal  functions . Zheng  et al. use simulation to show that an AI system based on ‚Äútwo -level RL can find  policies that yield higher social welfare than standard baselines ‚Äù and that AI-driven policy optimization  ‚Äúcan be useful without the need for human -coded, application -specific rules .‚Äù Like our thought  experiment, Zheng et al. employ AI systems based on RL to optimize taxation policy. The difference  is  that while they  limit the use of AI systems to simulations that inform policy, ou r thought experiment  envisions an automated implementation  of the (continuously) shifting optimal policy.    The findings presented by  Kasy (2018) and Zheng et al. (2022) indicate s that the technical limitations  associated  with our thought experiment may be overcome by further research . In contrast, the  political limitations may seem insurmountable. Our thought experiment builds on  the (unrealistic)  assumption s that there is a political consensus to minimize inequality and  that technocrats have the  freedom to implement the necessary policies. Yet this limitation has little bearing on our overarching  argument:  we do not  propose that AI -driven policy optimization should  be implemented, nor do we   seek to provide a road map for how  it could be done . Instead, the purpose of our thought experiment  is to highlight the normative tensions to which AI rationalization give s rise. We can n ow turn to these.   5. Freedom, equality, and self-determination in the iron cage   Our analysis  has show n that building a machine -like tax system via a bureaucratic state is conceivable .  However , as this section  explains , such a use  of AI systems  would  surface and intensify  the social and  ethical tensions  inherent in Weberian rationalization.       To begin with, using  an AI system to optimize tax policy to achieve a predefined normative end ‚Äì like  maximizing economic equality ‚Äì come s at the expense of other, competing values. Take individual  freedom as an example.  Both freedom and equality are central ideals of the political ideologies  in  modern democracies. However, a s Charvet (1981) demonstrate s, there is a  tension between freedom  and equality, or between the value of (free) self -determining individuals and the (equal) value that  each member of the ethical community accords to the other. Charvet  argues in a Kantian vein that  individuals must be valued for themselves, for their own ends, to constitute an object of value. But in  modern liberal democracies, this individual value must be valued equal ly for all persons.  This is a preprint : The manuscript has been accepted for publication in Social Science Computer review .     13 Consequently, there is a stand -off between equality and freedom that cannot be reconciled since  ‚Äúequal value ‚Äù and ‚Äúfree individual self -determination ‚Äù depend on each other.   The core ‚Äì Kantian ‚Äì idea is that the value we place on  each other must not be instrumental , whereby  we treat each other as means. Yet, th at is precisely what an AI -driven tax policy optimization does. To  maximize equality, the AI system would not only adjust the tax policy to extract the maximum a mount  of resources from different taxpaying individuals or groups , it would also learn the ir behaviours  through continuous experimentation ‚Äì and use th at knowledge to shape their future attitudes  and  preferences . The tension here is that AI rationalization increases centralized control, which is at odds  with individual autonomy in relation to the individual‚Äôs resources . It is important to note that , in our  case,  this instrumentalization of people applies only to one part of peoples‚Äô lives  (taxation) . Weberian  fears of disenchantment may thus  be overblown ; it is still possible to value people for reasons other  than the resources they provide. However, given that taxpaying is a major part of citizens ‚Äô political life   ‚Äì and likewise a major part of the state‚Äôs efforts to legitimize  legal authority ‚Äì the rules governing  taxation play a large role in people ‚Äôs sense of fairness.   Note that AI rationalization ‚Äì as envisioned in our thought experiment ‚Äì is not incompatible with ideas  of justice per se . The aims of AI-driven tax policy optimization  are consequentialist and seek a  redistribution of resources in line with values that have been democratically agreed upon. Rather, the  problem is  that this control of resources is centralized and hypostatized to the exclusion of other  competing political values and overrides citizens‚Äô sense of their (non -instrumental) obligations to each  other. These tensions sit at the heart of rationalization and  have been articulated in different ways by  social thinkers from  Weber  onwards . Yet AI rationalization gives rise to a further normative tension :  in theory , the limit of rationalization is that science  can only provide the means, it cannot dictate the  ends (Cantwell -Smith , 2019 ). But insofar as AI systems are used to shape the behaviour s and  preferences of citizens , they  de facto shape ends.   It is worth stressing that  this problem is not unique to AI -driven tax policy. The more general problem  is that new technologies and scientific discoveries go against the free will or autonomy of ethical  decision -making. How technology or the disenchantment of the world by science undermines Kantian  ethics in a Weberian vein has been noticed , among others,  by Gellner  in Legitimation of Belief .  According to Gellner  (197 5:187), the solution  is to grant ourselves ‚Äúa partial exemption from this cold  world since we imposed the order on t he world in the first place .‚Äù This is also what Weber meant  when he counterposed ‚Äúvalue‚Äù rationality to ‚Äúinstrumental‚Äù rationality . Value rationality is the idea  that human choices should be exempt from being instrumentalized (Brubaker 1984), and it  is also why  there is such resistance to the idea of technological determinism, whereby it is thought that humans  are made subject to impersonal forces.  One way to overcome this dilemma is to make the  implementation of new technolog ies subject to democratic acceptance, thus aligning the  technological system to human values or needs .10   A ‚Äùmeta‚Äù reflection can be made here . AI could  help facilitate with democratic deliberation  in  aggregating the inputs of democratic decision -making about what ends technologies should be  employed for . In this case, the ‚Äúvalue‚Äù that is being optimized for is democracy, whether this is  conceptualized as ‚Äúone person, one vote‚Äù (each person‚Äôs value to be valued equally) or in some other    10 It should be noted, however, that democratic alignment is no panacea, since the imposition of majority rule  on the wills of those who are subject to it can be experienced  as a different form of impersonal ‚Äúdeterminism‚Äù.   This is a preprint : The manuscript has been accepted for publication in Social Science Computer review .     14 way (such  as the aggregation of those values in representatives or interest groups).  In any event, t here  is an uneasy  ‚Äútruce ‚Äù here which  leads to many ethical and social quandaries. What  is new for our  thought experiment is that the use of AI systems to rationalize  taxation directly affects the main way  in which  citizens  are bound  to each other with respect  to the major ethical and political principles   embodied in the state . And , if an AI -driven tax policy w as applied, it could fundamentally reshape  those principles.   This is a good place to restate two key points. The first is that AI-driven policy optimization would  merely be an intensification of ongoing  rationalization processes , which a re likely to continue even  without this specific application of  AI systems . The second is that , as with other technologies,  the  implementation of AI rationalization  is likely to be complex and opaque  and, hence, not readily  understood by the public. Yet the very idea of AI rationalization, of applying such a  ‚Äúcold ‚Äù, impersonal   order t o human relations, even if it pertains to the population  level rather than to individuals, would  likely be regarded as a cause for ethical concerns. While such concerns might be misconceived, the  reality, as Weber would have diagnosed it, of a disenchanting technology displacing self -determining  beings, and in t his case the ethical grounding of the political community of citizens, needs to be  addressed in the design and application of AI systems  in the public sector .  So far, we have focused on highlighting the normative tensions associated with AI rationalization.  However, the re are also ways in which AI rationalization can benefit the institutions and processes of  liberal democracy. In our thought experiment, the technical details of  the workings of the  AI-driven  tax system may be beyond the public‚Äôs grasp. However, the ethical principles of egalitarian  redistributions are not ‚Äì and they can be formulated with greater clarity and pursued more rigorously  by AI rationalization than  legacy policymaking techniques. This would surface the tensions between  competing normative visions and enable  a discourse about  what kind of society citizens  want to live  in and what trade -offs they  are willing to make  in the process. For example, o ne alternative to the  egalitarian utilitarian interpretation of  equality would be one that maximizes equal opportunities ,  perhaps in a Rawlsian way, whereby the veil of ignorance (Rawls, 1971) is made  transparent instead,  or in line with Sen‚Äôs (1993) capabilities approach. In short, the advantage of AI-driven policy  optimization is that it  requires that normative ends are made explicit and formalized, thereby  subjecting them to public scrutiny and debate.   Our discussion in this section can be summarised as follow s. AI-driven policy  optimization is indeed  within the realm of possibility. In fact, the use of experiments to find the most effective policies and  computers to execute those policies efficiently and consistently  would merely be a continuation of  existing rationalization and bureaucratization processes . However, as our thought experiment has   shown, AI rationalization highlights several  normative tensions that are often overlooked in the  existing literature . Specifically, AI -driven policy optimization can come at the exclusion of other  competing political values and may not only override citizens‚Äô sense of their (non -instrumental)  obligations to each other  but also  undermine their self -understandings as self -determining beings.   Considered in isolation, each of these tensions ha s been discussed by different scholars in different  contexts. The tension stemming from the incompatibility of different values was examined , among  others, by Isaiah  Berlin . In his essay The pursuit of the ideal , Berlin  (1988 : 10) writes that ‚Äú Values can  clash. They can be incompatible between cultures, between groups within the same culture, and  between you and me.  Both liberty and equality are among the primary goals pursued by human  beings. But total equa lity demands the restraint on liberty .‚Äù Similarly, the tension s concerning the  This is a preprint : The manuscript has been accepted for publication in Social Science Computer review .     15 optimization of social systems were  noted already by Nor bert Wiener. As he wrote in The Human Use  of Human beings  (Wiener, 1954 , p212 ): ‚ÄúThe machine, which can learn and can make decisions on the  basis of its learning, will in no way be obliged to make such decisions as we should have made, or will  be acceptable to us.‚Äù Finally , the tension s that stem from AI systems shap ing human preferences in  ways that undermine notions of human s as  self-determining beings has been documented by  sociologists (Zuboff , 2015 ) and economists (Thaler & Sunstein , 2008)  alike .   What is novel in our  exposition  is that we have  shown that these tensions  cannot be  simply  overcome  by building  AI systems that are legal, ethical, and safe . There are of course social and ethical challenges   that can  be addressed through transparency obligations and rigorous engineering practices  (Thomas   et al., 2023) . This is especially true for harms resulting from AI systems failing to operate as advertised.   However, it is worth noting that transparency and instrumental rationality  build on the very same  assumptions that fuel Weberian rationalization processes. Consequently , proposals to design and  deploy AI systems in ways that are ‚Äúfair, transparent, and accountable‚Äù risk exacerbating rather than  alleviating the tensions associated with  AI-driven policy optimization  discussed in this section .   6. Conclusion    In this paper, we have argue d that t he social and ethical challenges  associated with the use o f AI  systems in the public sector are best understood against a longer -term  trajectory whereby calculability  is increasingly imposed on  social processes.  This claim i s based on the  observation that computation  is a ubiquitous phenomenon, not one unique to AI systems . In fact,  Weber defined ‚Äúrationalization ‚Äù  as the processes whereby  traditions , in so far as they serve to guide actions, and random chance are  replaced  with instrumental  rationality, i.e., the most calculab le, predictab le, and efficien t way s of  achie ving any given objective . And that is precisely what AI -driven policy optimization does.   Foregrounding  the continuity between AI-driven policy optimization  and larger  rationalization  processes has two direct implications for the contemporary  policy discourse : first, that the social and  ethical challenges associated with AI systems intensify ongoing rationalization and bureaucratization  processes are distinct from those resulting from AI systems failing to work as advertised ; and, second,  these two distinct sets of social and ethical challenges call for different remedies, which sometimes  stand in tension with each other.  Let us consider these in turn.     To start with, our thought experiment with AI -driven tax  policy optimization highlights normative  tensions that have hitherto received comparatively little attention from policymakers and researchers  alike . The literature on fairness, accountability, and transparency in ML  focus es on identifying and  mitigating harms that result from AI systems failing to perform as intended . For example, AI systems   may discriminate against specific individuals and groups (Mehrabi et al, 2021) , cause privacy breaches  by leak ing sensitive data (Narayanan & Shmatikov, 2016) , and cause material harm due to  malfunctioning  or misaligned specifications (Sherer, 2015) . These are indeed pressing challenges that  demand rigorous treatment from  technology providers and  policymakers  alike . However, as our  thought experiment  ‚Äì using  AI systems to optimize tax policy to promote social and economic equality   ‚Äì shows , there are  other normative tensions that result  not from AI systems  failing to work as intended   but that they intensify  ongoing  rationalization  and bureaucratization processes . These tensions  include that AI -driven policy optimization (i) comes at the exclusion of other competing political  values, (ii) overrides citizens‚Äô sense of their (non -instrumental) obligations to each other , and (iii)  undermines the notion of humans as self -determining beings.  What unites  these tensions  is that the y  This is a preprint : The manuscript has been accepted for publication in Social Science Computer review .     16 do not, even in principle, hinge on any malfunctioning or misspecification . Instead, the y are likely to  be exacerbated as AI systems become increasingly scalable and capable.     Further, emphasizing  the link between AI -driven policy  optimization and Weberian rationalization  suggests that there are limits to what can be achieved through transparency obligations and robust  engineering practices. Some of the social and ethical risks  AI systems pose can indeed be addressed  through proacti vity in design. For example, a study by Buolamwini and Gebru (2018)  found that gender  classification systems were less accurate for darker -skinned females than lighter -skinned males. After  being confronted with  these findings, technology pro viders speedily improved the accuracy of their A I  systems . This  suggest s that the problem was not intrinsic but  rather resulted from inadequate  software development processes and risk management  systems , or lack of ‚Äòguardrails‚Äô . Similarly, other  harms that result from AI systems failing to perform as intended can be addressed b y ensuring that  such  systems are used in ways that are legal, ethical , and safe , i.e. , by increasing the level of control.   In contrast, the normative tensions stemming from  rationalization are not only alleviated but  can also  be exacerbated when the level of control i s increased . This is because t he drive towards ensuring that  AI systems are designed and used in ways that are fair, transparent , and accountable is based on the  same assumptions that fuel rationalization and bureaucratization processes in the first place. These  assumptions include the modern  idea s that ( i) science can sweep away oppressive legal systems and  econom ic policies and replace them with a rule of reason that would rescue humans from moral  injustices and ( ii) soci etal processes a re calculable and quantifiable  (Watson & M√∂kander, 2023) . In  fact, building AI systems that are fair, transparent, and accountable is fully in line with the rationa listic  ideal of finding the most calculab le, predictab le, and efficien t way of achieving any given objective.   However, doing so also propel s the disenchantment of the natural world and imposes a cold,  impersonal logic to social relationships. This is the essence of  Weber‚Äôs ‚Äúiron cage.‚Äù   Before concluding, let us return  to the argument put forward by  Sparks and Jayaram (2022) in Rule by  Automation . They right in observing that the use of AI systems in the public sector constrains the space  for human discretionary power  in the execution of established rules , and thus reduces decision   subjects ‚Äô dependence on arbitrariness and cha nce. They are also right in concluding  that rule by  automation should therefore  be supported for the same reasons as  the rule of law.  However, the  impact of our formal laws and policies on society and its members has hitherto been cushioned by  their incons istent  application and enforcement that results from chance and the discretion exercised  by human decision -makers at va rious levels of the bureaucratic  hierarchy .   What our thought experiment with AI -driven policy optimization suggests is that, were our formal  laws , polic ies, and procedures  all pursued rationally, i.e., in the most calculab le, predictab le, and  efficien t way  possible, we could  find that we are not so comfortable with them in the first place.  This  point mainly serves to highlight , however,  that making more explicit the aims with which technology  can serve us would be a valuable service that AI -driven optimization  can provide , if combined with the  appropriate guardrails . In the case of tax policies, these guardrails would need to ensure that the aims  of policy, democratically arrived at, are implemented in a consistent and transparent way.  And the  implementation would depend, as discussed earlier, on state capacity, both in the sense of a capable  apparatus for gathering information and a bureaucratic organization that works in a transparent and  fair ‚Äì impersonal - way.    This is a preprint : The manuscript has been accepted for publication in Social Science Computer review .     17 To conclude, some of  the hardest social and ethical challenges surfaced by AI systems are not unique  to computer -centric information processing but mirror tensions at the heart of larger rationalization  processes. Tackling  these tensions are not only about ensuring that AI systems  are design ed and  deploy ed in ways that are ‚Äúlegal, ethical, and safe‚Äù but also ‚Äì and perhaps primarily ‚Äì about  confronting hard questions about what (types of) criteria, motivations , and evidence are to be  considered legitimate (or at least socially acceptable) for different (private and public) decision - making processes .     Acknowledgements   We are grateful to two very helpful anonymous reviewers for this journal, who helped us to clarify and  add several key points.     References   Agranov, M., & Palfrey, T. R. (2015). Equilibrium tax rates and income redistribution: A laboratory  study. Journal of Public Economics , 130, 45 -58.  Angwin, J., et al. (2016). Machine bias. Propublica . https://www.propublica.org/article/machine -bias- risk-assessments -in-criminal -sentencing   Baehr, P. (2001 ). The ‚Äúiron cage‚Äù and the ‚Äúshell as hard as steel‚Äù: Parsons, Weber, and the Stahlhartes  Geh√§use metaphor in the Protestant ethic and the spirit of capitalism . History and Theory , 40(2), 153 - 169.   Barnow, B. S. (2010). Setting up social experiments: the good, the bad, and the ugly. Zeitschrift f√ºr  ArbeitsmarktForschung , 43(2), 91 -105.   Bartels, L. M. (2005). Homer gets a tax cut: Inequality and public policy in the American mind.  Perspectives on Politics,  3(1), 15 -31.  Berlin, I. (1988). The pursuit of the ideal. In H. Hardy (Ed.), The crooked timber of mankind: Chapters  in the history of ideas  (pp. 1 ‚Äì20). Princeton:  Princeton University Press.   Besley, T., & Persson, T. (2009). The origins of state capacity: Property rights, taxation, and politics.  American economic review , 99(4), 1218 -1244.   Bostrom, N. (2014). Superintelligence: Paths, strategies, dangers . Oxford:  Oxford University Press.   Breuer, S . (1998) ‚ÄòThe Concept of Democracy in Weber‚Äôs Political Sociology‚Äô, in Ralph Schroeder (ed.),  Max Weber, Democracy and Modernization . Basingstoke: Macmillan . pp. 1 ‚Äì13.  Brubaker, R . (1984). The Limits of Rationality : An Essay on the Social and Moral Thought of Max Weber.   London: George Allen and Unwin.   Brynjolfsson, E., & McAfee, A. (2014). The second machine age . New York: Norton & Company.   Cantwell Smith, B. (2019).  The promise of artificial intelligence: reckoning and judgment . Cambridge:   MIT Press.   Cartwright, N., & Hardie, J. (2012). Evidence -based policy.  Oxford: Oxford University Press.   Charvet, J . (1981) A Critique of Freedom and Equality . Cambridge: Cambridge University Press.   This is a preprint : The manuscript has been accepted for publication in Social Science Computer review .     18 Dandeker, C . (1990) Surveillance, Power and Modernity . Cambridge: Polity Press.   Esposito, E. (2022). Artificial Communication . Cambridge MA: MIT Press.   Floridi, L.  et al . (2018). AI4People --An Ethical Framework for a Good AI Society . Minds and Machines ,  28(4), 689-707.   Gabriel, I. (2020). Artificial intelligence, values, and alignment. Minds and machines , 30(3), 411 -437.   Gasser, U. and Mayer -Schoenberger, V. (2023). Guardrails: Guiding Human Decisions in the Age of AI .  Princeton: Princeton University Press   Gellner, E. (1975).  Legitimation of belief . Cambridge: Cambridge University Press.   Gellner, E. (1992). Reason and Culture: The Historic Role of Rationality and Rationalism . Oxford:  Blackwell.   Giarratano, J. C., & Riley, G. (2004). Expert systems: principles and programming . PWS Publishing Co.   Hacking, I. (1983). Representing and Intervening . Cambridge: Cambridge University Press.   Hayek F. A.,  (1973).  Law, Legislation and Liberty. Vol. 1: Rules and Order . London: Routledge and  Kegan.   Hobson. J. (2003). ‚ÄòDisappearing Taxes or a ‚ÄòRace to the Middle‚Äô? Fiscal Policy in the OECD‚Äô, in Weiss ,  L. (ed.), States in the Global Economy: Bringing Domestic Institutions Back . Cambridge: C ambridge  University Press.   IEEE Standard Association. (2019). Ethically aligned design. Intelligent Systems, Control and  Automation: Science and Engineering , 95, 11 ‚Äì16.   Kapoor, S. & Narayanan, A. (2021). Reproducible Machine Learning: A Case Study .  https://reproducible.cs.princeton.edu/. 6 p.   Kasy, M. (2018). Optimal taxation and insurance using machine learning ‚ÄîSufficient statistics and  beyond. Journal of Public Economics , 167, 205 -219.   Kearns, M. J., & Roth, A. (2020). The ethical algorithm: The science of socially aware algorithm design.  Tantor and Blackstone Publishing.   Kleinberg, J., & Raghavan, M. (2021). Algorithmic monoculture and social welfare. Proceedings of the  National Academy of Sciences , 118(22).   Laufer, B. et al. (2022, June). Four years of FAccT. Proceedings of the 2022 ACM Conference on Fairness,  Accountability, and Transparency  (401 -426).   LeCun, Y., Bengio, Y., & Hinton, G. (2015). Deep learning. Nature , 521(7553), 436 -444.   Legg, S., & Hutter, M. (2007). A collection of definitions of intelligence. Frontiers in Artificial  Intelligence and Applications .   Lipsky, M. (1980). Street -level bureaucracy: Dilemmas of the individual in public service . New York:  Russell Sage Foundation.   Margetts, H., & Dorobantu, C. (2019). Rethink government with AI. Nature , 568(7751), 163 -165.   Marcus, G. (2020). The next decade in AI: four steps towards robust artificial intelligence. arXiv  preprint. https://arxiv.org/abs/2002.06177.   This is a preprint : The manuscript has been accepted for publication in Social Science Computer review .     19 Mascagni, G. (2018). From the lab to the field: A review of tax experiments. Journal of Economic  Surveys , 32(2), 273 -301.   Mau, S. (2019). The Metric Society: On the Quantification of the Social.  Cambridge: Polity Press.   Mehrabi, N.  et al . (2021). A survey on bias and fairness in machine learning. ACM computing surveys ,  54(6), 1 -35.  Mirrlees, J. A. (1971). An exploration in the theory of optimum income taxation. The review of  economic studies , 38(2), 175 -208.   Mommsen, W . (1984). The Age of Bureaucracy: Perspectives on the Political Sociology of Max Weber.   Oxford: Blackwell.   Moore, M. (2004). Revenues, state formation, and the quality of governance in developing countries.  International Political Science Review , 25(3), 297 -319.   Muellerleile, C., & Robertson, S. L. (2018). Digital Weberianism: Bureaucracy, information, and the  techno -rationality of neoliberal capitalism. Indiana Journal of Global Legal Studies , 25(1), 187 -216.   Mousavi, S. S., Schukat, M., & Howley, E. (2018). Deep reinforcement learning. Proceedings of SAI  Intelligent Systems Conference . Cham: Springer International Publishing.   M√∂kander, J. Auditing of AI: Legal, Ethical and Technical Approaches. DISO 2, 49 (2023).  doi.org/10.1007/s44206 -023-00074 -y  M√∂kander, J., Floridi, L. From algorithmic accountability to digital governance. Nat Mach Intell 4, 508 ‚Äì 509 (2022). doi.org/10.1038/s42256 -022-00504 -5  M√∂kander, J., Sheth, M., Watson, D.S. et al. The Switch, the Ladder, and the Matrix: Models for  Classifying AI Systems. Minds & Machines 33, 221 ‚Äì248 (2023). doi.org/10.1007/s11023 -022-09620 -y  Nalbandian, L. (2022). An eye for an ‚ÄòI:‚Äôa critical assessment of artificial intelligence tools in migration  and asylum management. Comparative Migration Studies , 10(1), 1 -23.  Narayanan, A., & Shmatikov, V. (2008, May). Robust de -anonymization of large sparse datasets.  2008  IEEE Symposium on Security and Privacy . 111-125. IEEE.   NIST. (2022). AI risk management framework . www.nist.gov/itl/ai -risk-management -framework   Nozick, R. (1974). Anarchy, state, and utopia . Oxford: John Wiley & Sons.   OECD. (2022). OECD‚Äôs Framework for the Classification of AI Systems . doi.org/10.1787/cb6d9eca -en.  ONeil , C. (2017). Weapons of Math Destruction: How Big Data Increases Inequality and Threatens  Democracy . New York: Crown Publishers.   Parfit, D. (1995). Equality or priority? . Kansas: University of Kansas.   Peters, J., Langbein, J., & Roberts, G. (2016). Policy evaluation, randomized controlled trials, and  external validity ‚ÄîA systematic review. Economics Letters , 147, 51 -54.  Piketty, T. (2014). Capital in the twenty -first century.  Cambridge  MA: Harvard University Press.   Pontusson, J . (2005) Inequality and Prosperity: Social Europe vs. Liberal America . Ithaca: Cornell  University Press.   Prasad, M. (2018). S tarving the beast: Ronald Reagan and the tax cut revolution.  New York: Russell  Sage Foundation.   This is a preprint : The manuscript has been accepted for publication in Social Science Computer review .     20 Prunkl, C. E. et al. (2021). Institutionalizing ethics in AI through broader impact requirements. Nature  Machine Intelligence , 3(2), 104 -110.   Ramsey, F. P. (1927). A Contribution to the Theory of Taxation. The economic journal , 37(145), 47 -61.  Rawls, J . (1971) A Theory of Justice . Cambridge, MA: Harvard University Press.   Russell, S. J. (2019). Human compatible: Artificial intelligence and the problem of control . London:  Penguin.   Russell, S. J., & Norvig, P. (2015). Artificial intelligence: A modern approach . Pearson.   Rorty, R. (2021). Pragmatism as Anti -authoritarianism . Cambridge MA: Harvard University Press.   Saez, E. (2001). Using elasticities to derive optimal income tax rates. The review of economic studies ,  68(1), 205 -229.   Scott, J. C. (1998). Seeing Like A State: How Certain Schemes to Improve the Human Condition have  Failed . New Haven: Yale University Press   Scruton, R. (2014). Inequality Matters. Forbes . 30 Octobe r.   www.forbes.com/sites/rogerscruton/2014/10/30/inequality -matters/   Sen, A. (1993) Capability and Well‚ÄêBeing, in Nussbaum, M & Sen, A. (eds), The Quality of Life . Oxford:   Oxford University Press.   Sen, A. (2009). The Idea of Justice . London: Allen Lane.   Singer, P. (2002). One World: The Ethics of Globalization . New Haven: Yale University Press.   Smith, E. R. & Mackie, D. M. (2007). Social Psychology . Psychology Press.   Sparks, J., & Jayaram, A. (2022). Rule by Automation: How Automated Decision Systems Promote  Freedom and Equality. Moral Philosophy and Politics , 9(2), 201 -218.   Spicer, M. W., & Becker, L. A. (1980). Fiscal inequity and tax evasion: An experimental approach.  National tax journal , 33(2), 171 -175.   Steinmo, S . (1993) Taxation and Democracy: Swedish, British and American Approaches to Financing  the Modern State . New Haven: Yale University Press.   Steinmo, S . (2010)  The Evolution of Modern States: Sweden, Japan and the United States . Cambridge:  Cambridge University Press.   Steinmo, S. H. (2018 ). The leap of faith: the fiscal foundations of successful government in Europe and  America . Oxford: Oxford University Press.   Steinmo, S., & DAttoma, J. (2021). Willing to pay?: a reasonable choice approach . Oxford: Oxford  University Press.   Sun, T. Q., & Medaglia, R. (2019). Mapping the challenges of Artificial Intelligence in the public sector:  Evidence from public healthcare. Government Information Quarterly , 36(2), 368 -383.   Sutton, R. S., & Barto, A. G. (2018). Reinforcement learning: An introduction . Cambridge MA: MIT press.   Taddeo, M., & Floridi, L. (2018). How AI can be a force for good. Science , 361(6404), 751 ‚Äì752.   Tanzi, V.  & Schuhknecht, L. (2000). Public Spending in the Twentieth Century: A Global Perspective .  Cambridge: Cambridge University Press.   This is a preprint : The manuscript has been accepted for publication in Social Science Computer review .     21 Thaler, R. H., & Sunstein, C. R. (2008). Nudge: Improving decisions about health, wealth, and happiness .  New Haven: Yale University Press.   Thomas, C. et al. (2023). The Case for a Broader Approach to AI Assurance: Addressing Hidden Harms  in the Development of Artificial Intelligence. Available at SSRN: https://ssrn.com/abstract=4660737   Tilly, C. (1990). Coercion, Capital, and European States, AD 990 -1992 . Cambridge, MA: Blackwell.   Tsamados, A. et al. (2021). The ethics of algorithms: key problems and solutions. AI & SOCIETY , 1-16.  van Bekkum, M., & Borgesius, F. Z. (2021). Digital welfare fraud detection and the Dutch SyRI  judgment. European Journal of Social Security , 23(4), 323 ‚Äì340.   Vogl, T. M. et al. (2020). Smart technology and the emergence of algorithmic bureaucracy. Public  Administration Review , 80(6), 946 -961.   Watson, David & M√∂kander, Jakob (2023). In Defense of Sociotechnical Pragmatism. In Francesca  Mazzi (ed.), The 2022 Yearbook of the Digital Governance Research Group. Springer Nature  Switzerland. pp. 131 -164.   Weber, M. (1948). From Max Weber: Essays in Sociology . London: Routledge and Kegan Paul.   Weber, M. (1967). The Protestant Ethic and the Spirit of Capitalism . London: Unwin.   Wiener, N. (1950). The human use of human beings: Cybernetics and society . London: Eyre &  Spottiswoode .  Wiggins, C. & Jones, M. L. (2023). How data happened: A history from the age of reason to the age of  algorithms . New York: Norton & Company.   Wirtz, B. W., Weyerer, J. C., & Geyer, C. (2019). Artificial intelligence and the public sector.  International Journal of Public Administration , 42(7), 596 -615.   Wolff, R. D. (2012). Democracy at work: A cure for capitalism . Chicago: Haymarket books.   Zarsky, T. (2016). The trouble with algorithmic decisions. Science Technology and Human  Values , 41(1),  118‚Äì132.   Zheng S. et al. (2022) The AI Economist: Taxation policy design via two -level deep multiagent  reinforcement learning. Science .DOI:10.1126/sciadv.abk2607   Zuboff, S. (2019). The Age of Surveillance Capitalism.  London: Profile Books.   ","cs.AI, cs.CY",Arxiv
29,Dynamic Algorithmic Service Agreements Perspective,"Bogdana Rakova, Laura Kahn",2019-12-10 19:45:08+00:00,http://arxiv.org/pdf/1912.04947v3,"A multi-disciplinary understanding of the concepts of identity, agency, relationships, interactions, and information could help us develop mitigation strategies for responsible human-algorithmic systems in the field of AI. It is imperative for us to question the use of the Terms of Service (ToS) agreements model in the context of algorithmic systems, specifically AI systems that make decisions which affect people and their livelihoods. In this position paper, we identify five areas of concern in traditional ToS agreements by drawing on studies of sociotechnical systems in Science and Technology Studies - accommodating and enabling change, co-constitution, reflective directionality, friction, and generativity. We aim to address these ToS shortcomings and propose components of a novel Dynamic Algorithmic Service Agreements (DASA) framework. The DASA could be employed as a self-regulation framework while also enabling additional feedback loops between people and algorithmic systems. Rich interaction frameworks could enable us to better negotiate and cooperate with AI systems towards accomplishing the real-world goals we use them for. We illustrate the DASA framework in the context of a Recommender System used in the curation of real and synthetic data. We do not intend for the DASA framework to replace the ToS model, but instead think it will provide practitioners with an alternative point of view for the design of dynamic interaction interfaces for AI systems that account for human identity and agency.","Dynamic Algorithmic Service Agreements Perspective Bogdana Rakova Responsible AI, Accenture 415 Mission St Floor 35 San Francisco, CA 94105 bogdana.rakova@accenture.comLaura Kahn Accenture Federal Services 800 N. Glebe Road Arlington, V A 22203 laura.kahn@accenturefederal.com Abstract A multi-disciplinary understanding of the concepts of iden- tity, agency, relationships, interactions, and information could help us develop mitigation strategies for responsible human- algorithmic systems in the Ô¨Åeld of AI. It is imperative for us to question the use of the Terms of Service (ToS) agree- ments model in the context of algorithmic systems, specif- ically AI systems that make decisions which affect people and their livelihoods. In this position paper, we identify Ô¨Åve areas of concern in traditional ToS agreements by drawing on studies of sociotechnical systems in Science and Tech- nology Studies: accommodating and enabling change, co- constitution, reÔ¨Çective directionality, friction, and generativ- ity. We aim to address these ToS shortcomings and pro- pose components of a novel Dynamic Algorithmic Service Agreements (DASA) framework. The DASA could be em- ployed as a self-regulation framework while also enabling ad- ditional feedback loops between people and algorithmic sys- tems. Rich interaction frameworks could enable us to better negotiate and cooperate with AI systems towards accomplish- ing the real-world goals we use them for. We illustrate the DASA framework in the context of a Recommender System used in the curation of real and synthetic data. We do not in- tend for the DASA framework to replace the ToS model, but instead think it will provide practitioners with an alternative point of view for the design of dynamic interaction interfaces for AI systems that account for human identity and agency. 1 Introduction Self-determination theory considers the innate psychologi- cal needs of humans for competence, autonomy, and related- ness (Deci and Ryan 2004). When designing algorithmic so- ciotechnical systems, maintaining a reasonable degree of hu- man autonomy is critical to protecting the rights and liberties of the human actors who enter into interactions with them. Human autonomy is a key component of any human-in-the- loop system. Algorithms increasingly play a critical role in curating information and automating decision-making that affects humans in a variety of sociotechnical systems, ranging from healthcare, Ô¨Ånance, housing, employment, en- tertainment, and others. However, increasingly algorithms operate in relatively closed-loop systems that lack trans- parency to the users they affect (Ajunwa and Greene 2019; Copyright c2020, Association for the Advancement of ArtiÔ¨Åcial Intelligence (www.aaai.org). All rights reserved.Sharone 2017; Schor and Attwood-Charles 2017). Further- more, there are few recourse for humans to offer feedback in the systems that make recommendations and often time irreversible decisions for and about them. Responsible AI considers human values and ethics along the whole pipeline of design, development, evaluation, and deployment of algorithmic systems (Cowls and Floridi 2018; Schrader and Ghosh 2018; Askell, Brundage, and HadÔ¨Åeld 2019). One key outcome of the use of Responsi- ble AI frameworks aims to be the improved alignment of the impacts of technology and innovation with societal de- mands and values. Having legally binding DASAs that can accommodate for human autonomy while reÔ¨Çecting societal values, could enable us to empower the human actors entan- gled within the algorithmic sociotechnical systems we are part of (Latour 2014; Bruni and Teli 2007). The main contribution of our work is to (1) outline Ô¨Åve types of sociotechnical concerns of traditional ToS agree- ments in the context of AI Systems, (2) propose a Dynamic Algorithmic Service (DAS) Agreements framework, and (3) demonstrate how it could be applied in the context of a Rec- ommender System AI models used in entertainment, adver- tising, and other media contexts. 2 Related Work User rights such as the right to be forgotten (Wolford, B. 2018), right to identity (McCombs and Gonzlez 2007), right to reasonable inference (Wachter and Mittelstadt 2019), right to explanation (Wachter, Mittelstadt, and Floridi 2017), and others, have been explored in the context of algorithmic systems. We build on that work in the context of end-user and source code license agreements that operate on the level of human-algorithmic interactions. One such agreement is the Terms of Service agreement. Algorithmic Contracts as well as Algorithmic Social Con- tracts (Rahwan 2017) have previously been proposed by le- gal, computer science, and other scholars. Furthermore, we see a need for the development of contracts which oper- ate on the level of interactions between individuals and al- gorithmic systems. Such Ô¨Åner-grained contracts could then be adopted as part of a society-in-the-loop social contract (Rahwan 2017), however they may also exist as stand-alone agreements which are adopted within a speciÔ¨Åc commu- nity, collective, population, etc. The work on human-in-the-arXiv:1912.04947v3  [cs.CY]  7 Jan 2020 loop system design within Human Factors and Ergonomics has had signiÔ¨Åcant impact on the developments in the Ô¨Åeld of Human-Computer Interaction. The concept of human-in- the-loop systems has emerged through the Ô¨Åeld of Human Supervisory Control as a process by which ‚Äùone or more human operators are intermittently programming and con- tinually receiving information from a computer that itself closes an autonomous control loop through artiÔ¨Åcial effec- tors to the controlled process or task environment‚Äù (Sheridan 1992). As explored by Sheridan, some of the potential soci- etal negatives of AI technology could be summarized with a single word: alienation (Sheridan 2006). We go on to pose the question of, what would it look like to employ a design framework incorporating a community-in-the-loop approach that goes beyond the limitations of the power imbalance between a human and an algorithmic system (Elish 2019; Hoffmann 2019). In what follows, we demonstrate the need and the opportunity to go beyond the strive towards general- ization of AI systems. Instead, different communities could have the opportunity to integrate AI Systems in their collec- tive livelihood in ways which are aligned, sustainable, and not necessarily generalizable to Society as a whole. To look for regulatory strategies, we take inspiration from Social Science and the Ô¨Åeld of Action Research - the iter- ative process of collaboration with community partners in order to deeply understand the local context of existing prob- lems, perspectives, and challenges. The goal is not necessar- ily to create a generalized solution but instead to create sus- tainable change through the design of sociotechnical inter- ventions that are conducted collaboratively with all involved stakeholders (Hayes 2011; Gaffney 2008). We build on the work of scholars in the Action Research Ô¨Åeld to propose a dynamic evaluation approach, where different levels of col- lectives of people have the agency to participate in the way AI Systems are being evaluated. Drawing from the Ô¨Åelds of Critical Algorithm Studies, Science and Technology Studies, as well as the Fairness, Ac- countability, and Transparency of ML community, we aim to evolve prior analysis of data and algorithmic impact as- sessments (Gebru et al. 2018; Stark and Hoffmann 2019; Seaver 2017; Selbst et al. 2019; Mitchell et al. 2019; Just and Latzer 2017; Reisman et al. 2018; Hoffmann 2019) by intro- ducing an algorithmic service agreement framework. Sim- ilarly, we build on prior work developed by the Canadian Government - an Algorithmic Impact Assessment question- naire (Treasury Board Canada Secretariat 2018) designed to assess and mitigate the risks associated with deploying an automated decision system. The assessment provides trans- parency into the process since it is freely available for ev- eryone to see and reuse in other contexts. Learning from this work, we aim to demonstrate the value of dynamic algorith- mic assessments in addition to qualitative questionnaires. Our interactions with algorithmic systems lead us to de- velop relationships which extend beyond the digital realms. Inevitably, they would also have Ô¨Årst and second order impli- cations on our innate sense of agency, autonomy, and iden- tity. We build on prior work on self-sovereignty and genera- tive identity (Sheldrake 2019; Immorlica, Jackson, and Weyl 2019; Zittrain 2005) in order to develop a framework whichencompasses algorithmic inferences. 3 A critical look at ToS Agreements We start by outlining Ô¨Åve kinds of sociotechnical concerns of ToS agreements related to AI systems used in the context of collecting and processing data as well as the production of algorithmic outcomes which are then interpreted within a social context. 3.1 Accommodating and enabling change We argue that ToS agreements need to allow for mutabil- ity. From a Social Science perspective, mutability is closely connected to our ability to change, our dynamic and multi- faceted human preferences, as well as multiplicity of identi- ties (Rakova and Chowdhury 2019). AI system creators need to be cognizant of the mutability of the data variables which are used in the algorithmic decision-making process and al- low for that change to happen. Furthermore, ToS agreements as well as the evaluation frameworks which are employed by AI System creators, need to be able to adapt to the dynamic nature of human identities. 3.2 Co-constitution Currently, ToS agreements do not encompass human- algorithmic interactions nor are they designed for end-user feedback. The challenge is to adequately deÔ¨Åne an agree- ment ex-ante without knowing what the outcome is going to be. For example, a person may not know they are discrimi- nated against by an algorithmic system unless it has already happened. 3.3 ReÔ¨Çexive directionality ToS agreements fail to capture the social relationship be- tween data and algorithmic outcomes. How does certain data lead to speciÔ¨Åc outcomes? Given the algorithmic outcome is it possible to reconstruct the input data? The Ô¨Åelds of explainability and interpretability in AI are going to help enable such reÔ¨Çexive directionality, however from the per- spective of a licensing framework, we may not need to un- derstand a black-box system in order to set up a methodol- ogy which protects the rights and liberties of the users of the black-box system. Similarly to the way we don‚Äôt need a neuroscience degree in order to develop a trust relationship, through understanding the mental models and decision mak- ing processes of a worker in a grocery store, when we had asked them for their help with Ô¨Ånding a speciÔ¨Åc item. 3.4 Allow for friction Similarly to mutability, currently ToS agreements do not al- low for friction. Users of a certain platform are not always notiÔ¨Åed when a change in the ToS has happened. Even if users receive notiÔ¨Åcations of changes in the ToS, often times they don‚Äôt have any opportunity to express their preferences to the ToS on a more granular level. Furthermore, they do not have a way to internalize what could be the impact of such change and often do not have the autonomy to act upon it, outside of choosing to completely opt out of the platform. What if the platform allowed us to separate the claims we make about ourselves from the claims other human and al- gorithmic actors have made about us? 3.5 Generativity Currently ToS agreements may differ from one country to another but they often fail to address the unique needs of cities, collectives, and individual communities. We deÔ¨Åne communities broadly as ‚Äùan umbrella term [deÔ¨Åned]... in ge- ographic terms... as a neighborhood or town (place-based or communities of place deÔ¨Ånitions); or in social terms, such as a group of people sharing common chat rooms on the in- ternet, a national professional association, or a labor union (communities of interest deÔ¨Ånitions)‚Äù (Phillips and Pittman 2015). Through addressing these Ô¨Åve sociotechical concerns, we hope that our work will positively contribute towards Re- sponsible AI systems which are better aligned with the val- ues of individuals and communities. 4 A Dynamic Framework The framework proposed here aims to address the concerns outlined in the previous section. Acknowledging the com- plexity of this topic, we highlight that this perspective is work in progress which we hope will spark meaningful and tangible discussions. We pose that, the DASA model could be used as a regulatory framework while also serving as a way for people to provide additional feedback to an al- gorithmic system. DASA-enabled feedback loops may en- able users to negotiate and cooperate with an AI system through intentionally nudging it into a better alignment with their respective multi-faceted human identity (Matias 2017a; Matias 2017b). The DASA is a set of code scripts which are hosted on an open source platform. Each script takes as its input the out- put of an algorithmic system and is designed to verify certain properties of the algorithmic outcome. The concrete proper- ties we aim to verify will depend on the concrete use-case, however the general scope of the veriÔ¨Åcation aims to make sure that we have algorithmic procedures which can address the sociotechnical concerns described in the previous sec- tion. The DASA scripts for a particular AI system could be created by the organization which is designing, developing, and deploying the AI system itself as well as by third party groups or organizations. The work on creating veriÔ¨Åcation scripts could become a requirement or a social norm in the development of Machine Learning algorithms, similarly to the way testing has become an inseparable part of software development. Traditionally, in Machine Learning research, there‚Äôs a difference between testing and veriÔ¨Åcation. Testing refers to evaluating the system in concrete conditions and mak- ing sure that it behaves as expected. Testing has evolved to be a major part of software development ever since its early developments in the 1950s (Juran and Godfrey 1999; Myers, Sandler, and Badgett 2011). VeriÔ¨Åcation has been deÔ¨Åned by ML researchers as ‚Äùproducing a compelling ar- gument that the system will not misbehave under a broad range of circumstances‚Äù (Goodfellow, McDaniel, and Pa- Figure 1: Outline of a traditional interaction between a user and an AI system (a) vs (b) the proposed dynamic algorith- mic service agreement process diagram. In (b) users are able to select from a list of dynamic algorithmic service agree- ments and modify their parameters, etc. The DASA scripts are executed on each algorithmic outcome provided by the AI system. Ultimately, we highlight the need for user inter- faces which allow for veriÔ¨Åcation and negotiation. pernot 2018). Goodfellow et al. discuss the limitation of ex- isting testing paradigms, highlighting the need for veriÔ¨Åca- tion frameworks for ML systems as well as the challenges in purely theoretical veriÔ¨Åcation (Goodfellow, McDaniel, and Papernot 2018). We build on their work and propose that veriÔ¨Åcation frameworks need to be able to accommodate the concerns of a broader kinds of actors while also being dy- namic. Instead of static code which is evaluated before the system is deployed they need to be able to change and ac- commodate a dynamic sociotechnical context. The veriÔ¨Åca- tion scripts which are part of the DAS agreement may be executed at a user endpoint at the same time as they are re- ceiving the algorithmic outcome from a ML system, ensur- ing that the latest veriÔ¨Åcation script is used. Cryptography methods such as the Zero-Knowledge algo- rithm, non-interactive zero-knowledge proofs (Blum, Feld- man, and Micali 1988), and other privacy-preserving meth- ods, could be utilized in the veriÔ¨Åcation procedures (Narula, Vasquez, and Virza 2018; Katz et al. 1996). 5 A DASA for a concrete AI model Here we develop a DAS agreement for an AI model which is employed in the creation or curation of real and synthetic text, image, video or audio data for the purposes of entertain- ment, advertising, propaganda or education and the algorith- mic targeting of people with this content. For the purposes of the DAS, we assume a scenario where a single user is in- teracting with an AI model. The model is a Recommender System collaborative Ô¨Åltering model. At each time step, the model aims to show the user a list of recommended items which she might want to engage with (for example reading a news article, watching a movie, acting on a post in social media, etc). Accommodating and enabling change Ultimately, the target AI system is trying to model human preferences. A DASA script could employ evaluation metrics which op- erate on the level of human-algorithmic interactions and measure quantities such as the speed of degeneration of feedback loops (Jiang et al. 2019) or the barrier-to-exit metric (Rakova and Chowdhury 2019). Further develop- ment and adoption of such metrics could provide practi- tioners with ‚Äùa proxy to the amount of effort a user needs to expend in order for the system to recognize their change in preference‚Äù (Rakova and Chowdhury 2019). For exam- ple, if the barrier-to-exit score goes above a user-deÔ¨Åned or predeÔ¨Åned threshold the DAS agreement may alarm the user about the observed behavior. This could be an indica- tion of the early formation of effects such as Ô¨Ålter bubbles or echo-chambers. Co-constitution We argue that the DASA could be a way for different stakeholders to cooperate on identifying and addressing the ethical challenges of RSs (Milano, Tad- deo, and Floridi 2019). For example, the DASA could provide a means to practically operationalize the well- being impact assessment process proposed by Musikanski et al., broadening the scope of the RS evaluation frame- work. Musikanski et al. have deÔ¨Åned well-being broadly, encompassing the domains of: ‚Äù(1) Affect, (2) Commu- nity, (3) Culture, (4) Education, (5) Economy, (6) Envi- ronment, (7) Human Settlements, (8) Health, (9) Govern- ment, (10) Psychological Well-Being/Mental well-being, (11) Satisfaction with life, and (12) Work‚Äù (Musikanski, Havens, and Gunsch 2019). In the context of RSs, it may be beyond the capabilities of a single organization to ade- quately address all of these aspects in an iterative man- ner throughout the whole pipeline of design, develop- ment, deployment, etc. However, different stakeholders could contribute to a DASA in a distributed way, while also protecting their intellectual property. For example, in a setting where a RS model is employed by a media platform, a civil rights organization may develop DASA scripts which implement indicators included in the Hu- man Settlements and Government domains. Similarly, so- cial scientists and journalists may contribute other DASA scripts which evaluate indicators within the domain of Satisfaction with life. Furthermore, a DASA is not limited to a single AI model but also recognizes the second order effects of our inter- actions with AI models. There are ripple effects of our in- teractions with RSs - our data goes on to be used in other settings as raw data for other algorithms. A DASA script might try to tackle the quantiÔ¨Åcation of such second order ripple effects. ReÔ¨Çexive directionality A DASA script could use the list of recommended items as well as other datasets available on the Internet and try to infer different properties of the input data. For example, a veriÔ¨Åcation script might check if the original input data which the user provided had beenproperly de-identiÔ¨Åed when it was used within the AI model. To do that, the veriÔ¨Åcation script could use the al- gorithmic output and try to restore the identity of the user who is receiving the recommendation. The script is being executed at the user endpoint and therefore has the ground truth data of the actual user identity. Recent research and law suits in the healthcare space have shown that it is not always straightforward what de-identiÔ¨Åcation means in certain contexts (Rajkomar et al. 2018; Wakabayashi 2019). Therefore we see an urgent need for broader multi- stakeholder veriÔ¨Åcation frameworks such as the DASA proposal. Allow for friction A DASA script could provide an ex- planation of the algorithmic outcome. The design inter- face could allow the user to explore why did the system generate a speciÔ¨Åc recommendation vs another. Given that the DASA script is being developed by the RS creator, it could include a feedback loop which allows users to ask and act on questions such as: Could I correct the course of the algorithm by nudging it into the right direction, most aligned with my true human preferences? Generativity For example, a DASA script written by a school board could have additional veriÔ¨Åcation checks, ensuring that a RS content used in educational contexts is aligned with the age group of their students. The DAS agreement is a set of veriÔ¨Åcation scripts which are mod- ular in nature. Therefore, they could be easily combined and recombined in multiple ways accommodating the spe- ciÔ¨Åc needs of individuals as well as different communities such as cities, neighbourhoods, communities of common interests, and others. Which scripts are being included in the DASA could be part of the user interface between peo- ple and AI systems and in this way be fully transparent. The goal is to provide means for different levels of veri- Ô¨Åcation and negotiation between people and AI systems. Users may choose to explore and interact with the DASA scripts at their own will. For example, a user of the RS model may engage and customize the DASA when they are not satisÔ¨Åed with the recommendations being made to them and they are curious to Ô¨Ågure out why. On the other hand, users may choose to proactively make sure the RS is aligned with their human preferences before deciding to interact with it. 6 Conclusion and Future Work We hope that our proposal on the importance of introduc- ing a Dynamic Algorithmic Service Agreement framework in the context of AI Systems, will inspire tangible discus- sions and further exploration of how such frameworks could improve the human-algorithmic interactions while uphold- ing societal values for the individual. Future work will de- velop prototypes in simulated and real-world settings as well as conduct research exploring how could DASAs be practi- cally implemented at scale given the variety of AI models and organizations building and using third party algorithmic models. Future research directions will also include discus- sions on oversight and how such agreements might Ô¨Åt into existing and future legal frameworks. References [Ajunwa and Greene 2019] Ajunwa, I., and Greene, D. 2019. Platforms at work: Automated hiring platforms and other new intermediaries in the organization of work. 61‚Äì91. [Askell, Brundage, and HadÔ¨Åeld 2019] Askell, A.; Brundage, M.; and HadÔ¨Åeld, G. 2019. The role of cooperation in responsible ai development. arXiv preprint arXiv:1907.04534 . [Blum, Feldman, and Micali 1988] Blum, M.; Feldman, P.; and Micali, S. 1988. Non-interactive zero-knowledge and its applications (Thesis) . Ph.D. Dissertation, New York, NY , USA. [Bruni and Teli 2007] Bruni, A., and Teli, M. 2007. Re- assembling the social an introduction to actor network the- ory.Management Learning 38(1):121‚Äì125. [Cowls and Floridi 2018] Cowls, J., and Floridi, L. 2018. Prolegomena to a white paper on an ethical framework for a good ai society. [Deci and Ryan 2004] Deci, E. L., and Ryan, R. M. 2004. Handbook of self-determination research . University Rochester Press. [Elish 2019] Elish, M. 2019. Moral crumple zones: Caution- ary tales in human-robot interaction (pre-print). [Gaffney 2008] Gaffney, M. 2008. Participatory action re- search: An overview‚Äìwhat makes it tick?. Kairaranga 9:9‚Äì 15. [Gebru et al. 2018] Gebru, T.; Morgenstern, J.; Vecchione, B.; Vaughan, J. W.; Wallach, H.; Daume ¬¥e III, H.; and Craw- ford, K. 2018. Datasheets for datasets. arXiv preprint arXiv:1803.09010 . [Goodfellow, McDaniel, and Papernot 2018] Goodfellow, I.; McDaniel, P.; and Papernot, N. 2018. Making machine learning robust against adversarial inputs. Communications of the ACM 61(7). [Hayes 2011] Hayes, G. R. 2011. The relationship of action research to human-computer interaction. ACM Transactions on Computer-Human Interaction (TOCHI) 18(3):15. [Hoffmann 2019] Hoffmann, A. L. 2019. Where fair- ness fails: data, algorithms, and the limits of antidiscrimi- nation discourse. Information, Communication & Society 22(7):900‚Äì915. [Immorlica, Jackson, and Weyl 2019] Immorlica, N.; Jackson, M. O.; and Weyl, E. G. 2019. Veri- fying identity as a social intersection. Available at SSRN: https://ssrn.com/abstract=3375436 or http://dx.doi.org/10.2139/ssrn.3375436 . [Jiang et al. 2019] Jiang, R.; Chiappa, S.; Lattimore, T.; Gy¬®orgy, A.; and Kohli, P. 2019. Degenerate feedback loops in recommender systems. In Proceedings of the 2019 AAAI/ACM Conference on AI, Ethics, and Society , AIES ‚Äô19, 383‚Äì390. New York, NY , USA: ACM. [Juran and Godfrey 1999] Juran, J., and Godfrey, A. B. 1999. Quality handbook. Republished McGraw-Hill 173‚Äì178. [Just and Latzer 2017] Just, N., and Latzer, M. 2017. Gover- nance by algorithms: reality construction by algorithmic se-lection on the internet. Media, Culture & Society 39(2):238‚Äì 258. [Katz et al. 1996] Katz, J.; Menezes, A. J.; Van Oorschot, P. C.; and Vanstone, S. A. 1996. Handbook of applied cryp- tography . CRC press. [Latour 2014] Latour, B. 2014. How better to register the agency of things. [Matias 2017a] Matias, J. N. 2017a. Governing Human and Machine Behavior in an Experimenting Society (The- sis). Ph.D. Dissertation. [Matias 2017b] Matias, J. N. 2017b. Persuading al- gorithms with an ai nudge. https://medium.com/mit- media-lab/persuading-algorithms-with-an-ai-nudge- 25c92293df1d. [McCombs and Gonzlez 2007] McCombs, T., and Gonzlez, J. S. 2007. Right to identity. http://scm.oas.org/pdfs/2007/CP19277.PDF. [Milano, Taddeo, and Floridi 2019] Milano, S.; Taddeo, M.; and Floridi, L. 2019. Recommender systems and their ethi- cal challenges. Available at SSRN 3378581 . [Mitchell et al. 2019] Mitchell, M.; Wu, S.; Zaldivar, A.; Barnes, P.; Vasserman, L.; Hutchinson, B.; Spitzer, E.; Raji, I. D.; and Gebru, T. 2019. Model cards for model reporting. InProceedings of the Conference on Fairness, Accountabil- ity, and Transparency , 220‚Äì229. ACM. [Musikanski, Havens, and Gunsch 2019] Musikanski, L.; Havens, J.; and Gunsch, G. 2019. IEEE P7010 Well-being Metrics Standard for Autonomous and Intelligence Systems. IEEE Standards Association. Piscataway Township, NJ: IEEE Standards . [Myers, Sandler, and Badgett 2011] Myers, G. J.; Sandler, C.; and Badgett, T. 2011. The art of software testing . John Wiley & Sons. [Narula, Vasquez, and Virza 2018] Narula, N.; Vasquez, W.; and Virza, M. 2018. zkledger: Privacy-preserving audit- ing for distributed ledgers. In 15thfUSENIXgSymposium on Networked Systems Design and Implementation ( fNSDIg 18), 65‚Äì80. [Phillips and Pittman 2015] Phillips, R., and Pittman, R. 2015. An Introduction to Community Development . New York, NY: Routledge. [Rahwan 2017] Rahwan, I. 2017. Society-in-the-loop: pro- gramming the algorithmic social contract. Ethics and Infor- mation Technology 20:5‚Äì14. [Rajkomar et al. 2018] Rajkomar, A.; Oren, E.; Chen, K.; Dai, A.; Hajaj, N.; Liu, P.; Liu, X.; Sun, M.; Sundberg, P.; Yee, H.; Zhang, K.; Duggan, G.; Flores, G.; Hardt, M.; Irvine, J.; Le, Q.; Litsch, K.; Marcus, J.; Mossin, A.; and Dean, J. 2018. Scalable and accurate deep learning for elec- tronic health records. npj Digital Medicine 1. [Rakova and Chowdhury 2019] Rakova, B., and Chowdhury, R. 2019. Human self-determination within algorithmic so- ciotechnical systems. arXiv preprint arXiv:1909.06713 . [Reisman et al. 2018] Reisman, D.; Schultz, J.; Crawford, K.; and Whittaker, M. 2018. Algorithmic impact assess- ment a practical framework for public agency accountability. https://ainowinstitute.org/aiareport2018.pdf. [Schor and Attwood-Charles 2017] Schor, J. B., and Attwood-Charles, W. 2017. The sharing economy: labor, inequality, and social connection on for-proÔ¨Åt platforms. Sociology Compass 11(8):e12493. [Schrader and Ghosh 2018] Schrader, D. E., and Ghosh, D. 2018. Proactively protecting against the singularity: Ethical decision making in ai. IEEE Security Privacy 16(3):56‚Äì63. [Seaver 2017] Seaver, N. 2017. Algorithms as culture: Some tactics for the ethnography of algorithmic systems. Big Data & Society 4(2):2053951717738104. [Selbst et al. 2019] Selbst, A. D.; Boyd, D.; Friedler, S. A.; Venkatasubramanian, S.; and Vertesi, J. 2019. Fairness and abstraction in sociotechnical systems. In Proceedings of the Conference on Fairness, Accountability, and Transparency , 59‚Äì68. ACM. [Sharone 2017] Sharone, O. 2017. LinkedIn or LinkedOut? How Social Networking Sites are Reshaping the Labor Mar- ket, volume 30. 1‚Äì31. [Sheldrake 2019] Sheldrake, P. 2019. Gen- erative identity beyond self-sovereignty. https://akasha.org/blog/2019/09/02/generative-identity- beyond-self-sovereignty. [Sheridan 1992] Sheridan, T. B. 1992. Telerobotics, automa- tion, and human supervisory control . The MIT Press. [Sheridan 2006] Sheridan, T. B. 2006. Supervisory Control . John Wiley & Sons, Ltd. chapter 38, 1025‚Äì1052. [Stark and Hoffmann 2019] Stark, L., and Hoffmann, A. L. 2019. Data is the new what? popular metaphors & profes- sional ethics in emerging data culture. [Treasury Board Canada Secretariat 2018] Treasury Board Canada Secretariat. 2018. Treasury board directive on automated decision mak- ing. https://wiki.gccollab.ca/Treasury Board Directive onAutomated Decision Making. [Wachter and Mittelstadt 2019] Wachter, S., and Mittelstadt, B. 2019. A right to reasonable inferences: re-thinking data protection law in the age of big data and ai. Columbia Busi- ness Law Review . [Wachter, Mittelstadt, and Floridi 2017] Wachter, S.; Mittel- stadt, B.; and Floridi, L. 2017. Why a Right to Explanation of Automated Decision-Making Does Not Exist in the Gen- eral Data Protection Regulation. International Data Privacy Law 7(2):76‚Äì99. [Wakabayashi 2019] Wakabayashi, D. 2019. Google and the university of chicago are sued over data sharing. https://ainowinstitute.org/aiareport2018.pdf. [Wolford, B. 2018] Wolford, B. 2018. Everything you need to know about the Right to be forgotten. https://gdpr.eu/right-to-be-forgotten/. [Zittrain 2005] Zittrain, J. L. 2005. The generative internet. Harv. L. Rev. 119:1975",cs.CY,Arxiv
30,Maintaining The Humanity of Our Models,Umang Bhatt,2017-11-15 20:29:39+00:00,http://arxiv.org/pdf/1711.05791v2,"Artificial intelligence and machine learning have been major research interests in computer science for the better part of the last few decades. However, all too recently, both AI and ML have rapidly grown to be media frenzies, pressuring companies and researchers to claim they use these technologies. As ML continues to percolate into daily life, we, as computer scientists and machine learning researchers, are responsible for ensuring we clearly convey the extent of our work and the humanity of our models. Regularizing ML for mass adoption requires a rigorous standard for model interpretability, a deep consideration for human bias in data, and a transparent understanding of a model's societal effects.","Maintaining The Humanity of Our Models Umang Bhatt Carnegie Mellon University 5000 Forbes Ave Pittsburgh, Pennsylvania 15213 umang@cmu.edu    Abstract Artificial intelligence (AI) and machine learning (ML) has been a major research interest in computer science for the better part of the last few decades. However, all too recent-ly, both AI and ML have rapidly grown to be media fren-zies, pressuring companies and researchers to claim they use these technologies. As ML continues to percolate into the laymans life, we, as computer scientists and machine learn-ing researchers, are responsible for ensuring we clearly con-vey the extent of our work and the humanity of our models. Regularizing ML for mass adoption requires a rigorous standard for model interpretability, a deep consideration for human bias in data, and a transparent understanding of a model‚Äôs societal effects.  Introduction  Mainstream media, any non-academic or non-research out-let, fawns over the tandem of machine learning (ML) and artificial intelligence (AI). The media is correct in claiming that, while ML is outperforming humans at clerical and pattern-driven work, the next wave of AI will revolutionize medicine, law, finance, and transportation by processing data more efficiently than humans (Grace and Salvatier 2017). It is not wrong to be proud of and eager about the advances made in these fields annually, but it is erroneous to overstate these technologies‚Äô capabilities in the immedi-ate future, which we define as ~1-2 years. AI growth is slowly yet drastically automating aspects of the monotony in our lives  (Schwab 2016). To clarify, in this context, we define AI as ML used to understand patterns in data and as the intelligent agents used to augment daily life.   As AI enters the limelight and displaces all regardless of the color of their collar, we, as researchers and practition-ers of the field, must poise our models to be interpretable, unbiased, impactful, and thus humane (Kaplan 2015). We define humanity and humane to be the ethereal and emo-tional impact of models on humans. In order to build a                                                  system that values humanity, we must consider the follow-ing questions: (1) How can we make our work interpreta-ble by the end user? (2) How can we ensure our algorithms are not learning patterns from yesteryear‚Äôs potentially bi-ased data? (3) How can we evaluate the societal effects of our predictions?  These three questions provide the foundation needed to succeed in maintaining the humanity of the models we create. To scale to the masses, our AI systems need be in-terpretable to a layman with no prior computer science knowledge. Laymen should be able to understand the se-quence of steps and data points used (and their weights) to achieve the final result. Our systems must draw from unbi-ased training data. This is a largely over looked portion of current ML work: most researchers claim themselves to be data-agonistic, even though it is important to care about the features, source, and context of the datasets we train on (O‚ÄôNeil 2016). Finally, our systems must be aware of the user impact of each prediction we make and pattern we find. Having a pointed, narrow goal with low impact is the current rule of thumb to ensure little disruption in other parts of a user‚Äôs life (Armstrong and Levinstein 2017). To that end, we dive into the need for all three pillars, as our field‚Äôs research continues to evolve at lightning speeds. Model Interpretability Imagine a patient visiting a doctors office in 2030. Picture that patient walking into an empty room with sensors and a large screen telling the patient what to do. Once the mini-mum readings have been made (non-invasively and implic-itly), the patient can see a diagnosis generated by our black box, say in this case ‚ÄúDiabetes‚Äù. Predicting and delivering a life-changing diagnosis in such an insensitive manner can stifle the adoption of our AI systems, since our system lacks humanity in diagnosis.  Therefore, we must prioritize exposing the inner workings of our system to promote in- terpretability - the explanation behind our prediction ‚Äì thus bringing us closer to more personable, humane models. Current State ML today begets a robust strength in prediction power in decision-making processes (at least in the supervised case, which we will assume from here). However, due to a mis-match between prediction objectives (i.e. test set perfor-mance) and the real world costs of deployment, there is an unfulfilled demand for interpretability (Lipton 2017). Laymen render models lacking interpretability effectively useless since it near impossible to follow knowledge ex-traction of those models. Though there exists no concrete definition of interpretability, it broadly refers to explaining a model in humanly understandable terms: many desiderata for modern ML systems, like robustness, fairness, and trust, are also commonly grouped with interpretability (Doshi-Velez and Kim 2017).   There is an exigency for a rigorous standardization for interpretability, since the European Union will prevent automated individual decision-making by 2018 (Goodman and Flaxman 2016). As of now, dimensionality reduction techniques like backward feature selection on a single layer perceptron or feature extraction via principle component analysis suffices to make a model interpretable in simple cases (Vellido 2012). Sparse linear classifiers and discreti-zation methods (decision trees, rule sets, etc.) are well-known interpretable models (Kim 2015). However, much interest now lies in the nonlinear, high dimensional models and related deep learning techniques. In these situations, we want to provide laymen with explanations via known interpretable models More recent techniques have actually implicitly priori-tized interpretability, albeit void of a standardization. Re-searchers working on neural modulation for semantic search in visual content and those working on joint model training are inherently making ML models more interpret-able by exposing the modular objects within the whole image and the sequence of states, respectively.  Case Study: Medicine Returning to our 2030 scenario, the patient demands an explanation of how our complex model, like Doctor AI, came to its diagnosis. We know with a high degree of con-fidence that our prediction is correct; however, now we must expose the sequence of decisions that led to our con-clusion. One option would be jointly training a recurrent neural network, a long short-term memory (LSTM) per se, with a hidden Markov model (HMM) to expose the HMM state sequences to the end user (Krakovna and Doshi-Velez 2016). This technique allows us to leverage both the pre-dictive power of an LSTM and the explicit states of an HMM. We even unlock the power of transfer learning as an LSTM model trained on a sufficiently large electronic health record can be transferred to any hospital (Choi, Ba-hadori 2016). However, a major shortcoming of this ap-proach is that a domain expert must be leveraged to name the states of the HMM: it is near impossible for a computer scientist to attempt to name a given state sequence of symptoms and vital signs as potentially contributing to a given diagnosis. In some simpler planning tasks, expert knowledge is taken into account in the prior distribution over the area of interest, but this does not generalize well to all situations (Kim 2015). Nonetheless, coupling com-bined model training with evaluating test set performance for the top-k ICD-9 codes1 can produce accurate and inter-pretable results (Lipton and Kale 2015, Nigam 2016). An-other such technique for making these predictively power-ful LSTMs more explainable is employing input gradients to generalize decision logic, which is irrespective of the dataset (Ross, Hughes, Doshi-Velez 2017). These tech-niques are all means towards the end of making our ML models more interpretable and thus more humane.  Human Bias in Data The source and features of data used as a basis for our models are essential to understanding the inherent human bias in our predictions. When productionalizing a model, we must divulge the exact source and features of the data used to train that model. Data, contrary to layman‚Äôs thoughts, does age and grow stale. Imagine if we used data from the Jim Crow days to predict in which zip codes are people most likely to go to jail again (O‚ÄôNeil 2016). Over-time, the data from yesteryear is no longer relevant. So, can we not just create a threshold or add a layer of logistic weight to our data by recency? Well, a recency bias is just as unproductive (Abah 2016). Acknowledging the exist-ence of and taking steps to correct this potentially unfair data yields more humane models, since an unbiased model fed biased data still gives a biased result. Current State When assessing the quality/recency of and reducing the bias of a dataset, two techniques are common. One tech-nique is debiasing, which manually severs the learned rela-tionship between two entities. In example, gender bias in natural language generation from processing/training on text corpuses is all too common. A gender bias-free dataset of images can be created when we place constraints on certain relationships between entities within the images (Zhao, Wang 2017). In a text generation algorithm, gender bias can be mitigated by identifying known gender biased                                                 1 We pick the top k most frequent ICD-9 (alphanumeric codes for patient diagnosis) and classify the accuracy of our model on those codes.  words, working in a gender neutral subspace, and under-standing the distance of a gender neutral world towards the preidentified gender subspaces (Bolukbasi, Chang 2016). Another technique is simply omission of the stale or biased data from training; it is trivial to state, but such a decision is lossy and certain patterns in the data will be missed.  It is crucial to note that in both scenarios, it is we, the researchers, imposing our own bias and morality on a giv-en problem space. For example, if we think (or even empir-ically show) that zip code of residence is a high predictor of where crime occurs, we are then faced with a moral struggle of whether or not to patrol more in those zip codes, disadvantaging the portion of non-criminals in a zip code deemed crime prone. The legality of our model mat-ters considerably as an ounce of human bias can violate the law (Samek 2017). To that end, we want to remove human bias disparities with as little impact on accuracy as possible (Johndrow and Lum 2017). Case Study: Recidivism Recidivism prediction, propensity of a person to return to jail once released, is bursting with human bias. Though models like PredPol exist, there is no formal feedback loop for all involved parties, and thus, we lack randomness in the data we use (Ensign, Friedler 2017). Without this ran-domness, we can propagate a human bias in our data (e.g. only patrol neighborhoods of criminals who are currently imprisoned). Unfortunately, we lack a method to under-stand the fairness of our predictions, other than the false positive rates of two subgroups within the population in question. One suggestion is to optimize parameter instabil-ity and disparity (Chouldechova and G‚ÄôSell 2017). More interpretably, we can perform a subset scan to detect if a given class has noteworthy bias for in a given subgroup (Zhang and Neill 2017). Such techniques only arise if we heed human biases in our data, which will be of utmost important as ML adoption continues to skyrocket. Societal Effects The output of our ML systems affects real flesh and blood beings, and unfortunately, all too often, we lose sight of this reality. We focus on optimizing objectives on bench-mark datasets instead of the real world applications of the code we write (Wagstaff 2012). We want to be able to transfer our expertise and models to new domains, wherein ML can augment archaic practices and automate pattern-based predictions. In example, clothing companies no longer use only intuition and actuarial science to forecast their products‚Äô performance, instead they also use ML models that incorporate seasonality, user preferences, and industry trends to decide what type of clothing should be designed in the next season (Brynjolfsson and McAffee 2014). In confluence with the proliferation of ML use cas-es, we must remain cognizant of the legality of our data, models, and predictions and be alert of user intent and re-ception. Current State Society benefits from ML models daily. These models tell us what stocks to buy, how much demand a restaurant can expect next quarter, what country poses the most threat to another, who we should date, etc. (Ross 2016). These models vicariously control us, but sometimes the main-stream media misinterprets power of ML.  In example, in the realm of natural language processing, many recent works have made bold claims that multi-agent environments have made end to end communication proto-cols without human intervention, which led the media to believe that AI agents make their languages and thus we need to shut them down. However, upon review, it be-comes evident that language cannot emerge naturally and the systems are shut down due to a lack of interpretability: that is, one AI agent may say ‚ÄúRed man ball sit!‚Äù to anoth-er agent, who understands that to mean ‚ÄúHello, how are you?‚Äù in English ‚Äì without human intervention, the agents communicate in a nonsensical, uninterpretable grammar, basically gibberish, thus stressing the need for the first pillar (Kottur, Moura 2017).  Being aware of such misinterpretations and effectively communicating the limits of ML must be kept top of mind with mass ML adoption imminent. Case Study: Pricing In the ecommerce world, companies optimize their models to maximize their profits or increase their users‚Äô purchase frequency. One such model is a dynamic pricing engine, which prices goods based on a given consumer‚Äôs willing-ness to pay. As such, these engines are used to serve the optimal price for a given user to maximize company prof-its. Plagued by sparse user level data and by legal con-straints on what features can and cannot be used, dynamic pricing experts manage programs like time-limited cou-pons forecasted via a point-process model that makes real-time, global estimates based on transaction history and patterns (Manzoor and Akoglu 2017). Such pricing pro-grams must be interpretable and unbiased; if they are not, the societal consequences of an erroneous price are cata-strophic for a company. Being aware of and responsive to the implications of our models is the final key towards more humane and adoptable ML models. Conclusion To be prepared for mass adoption of machine learning sys-tems, we, as researchers and practitioners, must adopt a framework for developing humane models that ensure in- terpretability, unbiasedness, and impact. By creating a rig-orous standard for machine learning interpretability, we can transform the medical predictive analytics industry. By understanding the inherent human bias in the data we col-lect and the sample it represents, we can ensure that we build a more unbiased model for sending prisoners back behind bars. By thinking deeply about the societal effects and ethicality of our predictions, we can ensure we deliver profitable and fair prices in the ecommerce industry. All three pillars can displace society‚Äôs perception of machine learning, as the true power and beauty of how we can use autonomous agents and machine learning comes to fruition when we maintain the humanity of our models.  Acknowledgements Many thanks to my advisors/mentors at CMU: Jose M.F. Moura, J. Zico Kolter, and David OHallaron for their val-uable discussions and my research partners: Satwik Kottur, Edgar Xi, and Sam Fazel for their continued support. References Abah, J. 2016. Recency Bias in the Era of Big Data: The Need to Strengthen the Status of History of Mathematics In Nigerian Schools. In Advances in Multidisciplinary and Scientific Research Journal. Armstrong, S., and Levinstein, B. 2017. Low Impact Artificial Intelligences. arXiv: 1705.10720 Bolukbasi, T., Chang, K., Zou, J., Saligrama, V., Kalai, A. 2016 Man is to Computer Programmer as Woman is to Homemaker? Debiasing Word Embeddings. arXiv: 1607.06520 Brynjolfsson, E., and McAffe, A. 2014. The Second Machine Age: Work, Progress, and Prosperity in a Time of Brilliant Tech-nologies. WW Norton & Company. Choi, E., Bahadori, M.T., Schuetz, A., Stewart, W.F., Sun, J. 2016. Doctor AI: Predicting Clinical Events via Recurrent Neural Networks. In Proceedings for 2016 Machine Learning and Healthcare Conference. Los Angeles, CA Chouldechova, A. and G‚ÄôSell, M. 2017. Fairer and more accurate, but for whom? In Proceedings for FAT/ML 2017. Halifax, NS, Canada. Doshi-Velez, F., and Kim, B. 2017. Towards A Rigorous Science of Interpretable Machine Learning. arXiv: 1702.08608 Doshi-Velez, F. Kortz, M, et. al. Accountability of AI Under the Law: The Role of Explanation. arXiv: 1711.01134 Ensign, D., Friedler, S., Neville, S., Scheidegger, C., Venka-tasubramanian, S. 2017. In Proceedings for FAT/ML 2017. Hali-fax, NS, Canada. Goodman, B. and Flaxman, S. 2016. European Union regulations on algorithmic decision-making and a right to explanation. In Proceedings for 2016 ICML Workshop on Human Interpretability in Machine Learning, New York, NY. Grace, K., Salvatier, J., Dafoe, A., Zhang, B., Evans, O. 2017. When Will AI Exceed Human Performance? Evidence from AI Experts. arXiv: 1705.08807 Grbovic, M., Radosavljevic, et. al. 2016. E-commerce in Your Inbox: Product Recommendations at Scale. In Proceedings for KDD 2015. Sydney, Australia.  Johndrow, J. and Lum, K. 2017. An algorithm for removing sen-sitive information: application to race-independent recidivism prediction. arXiv: 1703.04957 Kaplan, J. 2015. Humans Need Not Apply: A Guide to Wealth and Work in the Age of Artificial Intelligence. Yale University Press. Kim, B. 2015. Interactive and interpretable machine learning models for human machine collaboration. PhD diss., Massachu-setts Institute of Technology, 2015. Kottur, S., Moura, J., Lee, S., Batra, D. 2017. Natural Language Does Not Emerge Naturally in Multi-Agent Dialog. In Proceed-ings for EMNLP 2017. Denmark. Krakovna, V. and Doshi-Velez, F. 2016. Increasing the Interpret-ability of Recurrent Neural Networks Using Hidden Markov Models. In Proceedings for NIPS 2016 Workshop on Interpreta-ble Machine Learning in Complex Systems. Barcelona, Spain. Lipton, Z. 2017. The Mythos of Interpretability. In Proceedings for 2016 ICML Workshop on Human Interpretability in Machine Learning, New York, NY. Lipton, Z., Kale, D., Elkan, C., Wetzel, R. 2015. Learning to Diagnose with LSTM Recurrent Neural Networks. arXiv: 1511.03677 Manzoor, E., and Akoglu, L. 2017. RUSH! Targeted Time-limited Coupons via Purchase Forecasts. In Proceedings for KDD 2017. Halifax, NS, Canada. Nigam, P. 2016. Applying Deep Learning to ICD-9 Multi-label Classification from Medical Records. Stanford University O‚ÄôNeil, Cathy. 2016. Weapons of Math Destruction: How Big Data Increases Inequality and Threatens Democracy. Broadway Books. Ross, A. 2016. The Industries of the Future. Simon & Schuster Paperbacks. Ross, A., Hughes, M., Doshi-Velez, F. 2017. Right for the Right Reasons: Training Differentiable Models by Constraining their Explanations. arXiv:1703.03717 Schwab, K. 2016. The Fourth Industrial Revolution. Crown Busi-ness. Samek, W., Wiegand, T., Muller, K.R. 2017. Explainable Artifi-cial Intelligence: Understanding, Visualizing and Interpreting Deep Learning Models. arXiv: 1708.08296 Vellido, A., Martin-Guerreo, J., Lisboa, P. 2012. Making Ma-chine Learning Models Interpretable. In Proceedings for Europe-an Symposium on Artificial Neural Networks, Computational Intelligence, and Machine Learning 2012. Bruges, Belgium. Wagstaff, K. 2012. Machine Learning that Matters. In Proceed-ings for the 29th International Conference on Machine Learning. Edinburgh, Scotland, UK Zhao, J., Wang, T., Yatskar, M., Ordonez, V., Chang, K. 2017. Men Also Like Shopping: Reducing Gender Bias Amplification using Corpus-level Constraints. arXiv: 1707.09457 Zhang, Z. and Neill, D. 2017. Identifying Significant Predictive Bias in Classifiers. arXiv: 1611.08292",cs.CY,Arxiv
31,Integrating AI in College Education: Positive yet Mixed Experiences with ChatGPT,"Xinrui Song, Jiajin Zhang, Pingkun Yan, Juergen Hahn, Uwe Kruger, Hisham Mohamed, Ge Wang",2024-07-08 10:44:34+00:00,http://arxiv.org/pdf/2407.05810v1,"The integration of artificial intelligence (AI) chatbots into higher education marks a shift towards a new generation of pedagogical tools, mirroring the arrival of milestones like the internet. With the launch of ChatGPT-4 Turbo in November 2023, we developed a ChatGPT-based teaching application (https://chat.openai.com/g/g-1imx1py4K-chatge-medical-imaging) and integrated it into our undergraduate medical imaging course in the Spring 2024 semester. This study investigates the use of ChatGPT throughout a semester-long trial, providing insights into students' engagement, perception, and the overall educational effectiveness of the technology. We systematically collected and analyzed data concerning students' interaction with ChatGPT, focusing on their attitudes, concerns, and usage patterns. The findings indicate that ChatGPT offers significant advantages such as improved information access and increased interactivity, but its adoption is accompanied by concerns about the accuracy of the information provided and the necessity for well-defined guidelines to optimize its use.","Integrating AI in College Education: Positive yet Mixed Experiences with ChatGPT Xinrui Song1‚Ä†, Jiajin Zhang1‚Ä†, Pingkun Yan1, Juergen Hahn1, Uwe Kruger1, Hisham Mohamed1*, Ge Wang1* 1*Department of Biomedical Engineering, Rensselaer Polytechnic Institute, 1623 15th St, Troy, 12180, NY, USA. *Corresponding author(s). E-mail(s): mohamh2@rpi.edu; wangg6@rpi.edu; ‚Ä†These authors contributed equally to this work. Abstract The integration of artificial intelligence (AI) chatbots into higher educa- tion marks a shift towards a new generation of pedagogical tools, mirroring the arrival of milestones like the internet. With the launch of ChatGPT-4 Turbo in November 2023, we developed a ChatGPT-based teaching appli- cation (https://chat.openai.com/g/g-1imx1py4K-chatge-medical-imaging) and integrated it into our undergraduate medical imaging course in the Spring 2024 semester. This study investigates the use of ChatGPT throughout a semester-long trial, providing insights into students‚Äô engagement, perception, and the overall educational effectiveness of the technology. We systematically collected and ana- lyzed data concerning students‚Äô interaction with ChatGPT, focusing on their attitudes, concerns, and usage patterns. The findings indicate that ChatGPT offers significant advantages such as improved information access and increased interactivity, but its adoption is accompanied by concerns about the accuracy of the information provided and the necessity for well-defined guidelines to optimize its use. Keywords: Artificial intelligence (AI) |ChatGPT |college education |teaching assistance |learning outcome 1arXiv:2407.05810v1  [cs.AI]  8 Jul 2024 1 Introduction Large language models (LLMs) represent a significant advancement in artificial intel- ligence (AI), based on their inherent model capacities and other cutting-edge deep learning technologies, such as self-supervised pre-training. The principle of next token prediction allows the generation of text or more generally a sequence of mul- timedia tokens that is not only coherent but also contextually relevant. Trained on extensive datasets, these deep models learn complex knowledge without explicit task-specific instructions. The versatility of LLMs and large vision-language models offers opportunities for artificial general intelligence and enables a broad spectrum of applications. Launched on November 6, 2023, ChatGPT-4 Turbo represents a major enhance- ment of the family of Generative Pre-trained Transformers (GPTs). This advanced AI model builds upon the capabilities of its predecessors by synergizing text, code and image data more broadly and more deeply. The model is optimized for real-time responses that are essential for time-sensitive applications such as interactive learn- ing, produces high-quality and contextually appropriate responses, and in particular creates sophisticated AI-driven interactions in an educational scenario. Based on the ChatGPT-4 Turbo platform, we developed a teaching application (https://chat.openai.com/g/g-1imx1py4K-chatge-medical-imaging) for our under- graduate medical imaging course in the Spring 2024 semester. We were motivated by both the human-like communication capability of ChatGPT and the observation that the younger generations, especially college students, quickly adapt to new technologies. While higher education is generally cautious about the influences of IT innovations, our university has a long tradition in pedagogical innovation, allowing us to quickly investigate the use of AI in the classroom. We believe that the potential impact of ChatGPT and other chatbots on education will be comparable to or even greater than the internet technology which has dramat- ically expanded the information sources available to college students. While higher education showed initial skepticism to this new technology[1], today it is difficult to imagine a university without a Learning Management System (LMS). Furthermore, the reliance on platforms like YouTube exemplifies this shift [2]. The popularity of mobile phones further facilitates access to these resources, a transition embraced by students [3]. The COVID-19 pandemic has underscored the necessity and merits of modern technological infrastructure. While the internet brought various informational resources to students, ChatGPT- type models make retrieval and extraction of knowledge much more effective and efficient. These AI models have the potential to enable individualized learning when they are used as teaching assistants (TA) or tutors. However, even for ChatGPT-4 Turbo, the state-of-the-art AI-based chatbot, there remain uncertainties about what educational utilities it offers, how much value it adds, and how to address vari- ous associated challenges. Recently, commentaries raised concerns about the adverse consequences of ChatGPT‚Äôs integration into educational settings [4, 5]. Given the above considerations, here we evaluate our ChatGPT-4 Turbo software through a semester-long trial. We systematically collected and analyzed data concern- ing students‚Äô interactions with ChatGPT. Also, we compared students‚Äô feedback on 2 different ChatGPT-based chatbots within the same course. In the next section, we describe our methods. Then, we summarize our key results and discuss relevant issues. 2 Methods In the study, three ChatGPT models are utilized with varying capabilities: (1) ChatGPT-3.5 serves as a freely accessible baseline, (2) ChatGPT-4 Turbo represents a significantly enhanced version, and (3) a specialized application we developed, referred to as ChatGe-Medical-Imaging or ChatGe, is tailored for teaching a college-level med- ical imaging course. To remove any financial barrier, we made a policy that any student can be reimbursed for one-month use of ChatGPT-4 Turbo. In the Spring 2024 semester, two separate sections of the undergraduate medical imaging course were taught by two instructors Drs. Hisham Mohamed and Ge Wang respectively, with enrollments of 36 and 34 students. The two instructors shared the syllabus, the text- book, and exam questions, as well as three MATLAB sessions to provide students with hands-on experience. According to the timeline given in the Supplementary Informa- tion (SI), we surveyed our students through three channels: students‚Äô questionnaires, course content Q&A evaluations, and students‚Äô exam grades, and analyze the data as follows. 3 Results and Discussions 3.1 Students‚Äô Survey Results on ChatGPT Usage and Assessment Fig. 1 presents students‚Äô survey results from both sections on their ChatGPT usage and feedback. As shown in Fig. 1 (a), about 65% of the students from both sections used the ChatGPT models. Moreover, Fig. 1 (b)highlights that nearly all the users were aided by the chatbots for clarification of some course contents, and over half of them received ChatGPT‚Äôs help for programming and homework. In addition to that, Fig. 1 (c)and(d)give information on how many hours per week the students spent using which chatbots. Next, Fig. 1 (e)confirms that the students are most impressed with the convenience and interactivity of the ChatGPT models. However, few students felt highly confident in chatbots‚Äô responses. These data indicate that the students encountered false/untrustworthy answers by ChatGPT and/or they were not able to make good judgments. This is also supported by the students‚Äô reasons for not using ChatGPT, as shown in Fig. 1 (a). Finally, Fig. 1 (f)presents the students‚Äô answers to the six survey questions listed in the SI, which are related to different aspects of ChatGPT usage. The answers are required to be on a 5-point scale so that the values above 3 are positive while the values below 3 are negative. Evidently, the general attitude towards ChatGPT use in this context is overwhelmingly positive, except for Question #2 which asks if students feel ChatGe-V1 significantly better than ChatGPT-4 Turbo. This negative feedback motivated us to upgrade ChatGe-V1 to ChatGe-V2 with more course-related materials and more specific prompts as further described in the SI. 3 Yes  (65.15%) No (34.85%)Percentage of  Students Using GPT Percentage (%)Percentage of GPT Usage # of Students Hours per WeekHours of GPT Usage per Week Percentage (%)Usage of GPT Versions  Favorable Aspects of GPTPercentage (%)(a) (b) (c) (d) (e) Do not  trust GPT  (63.15%) Not used to  (26.32%)Both  (10.53%)Reasons of Not  Using GPT (f) # of Students Students‚Äô ResponsesFig. 1 Visualization of the students‚Äô feedback on AI-assisted course learning. The sub-figures (a)- (e)reflect the students‚Äô ChatGPT usage and impression. The sub-figure (fdepicts the students‚Äô evaluation on various aspects of the chatbots. (a)The percentage of the students using ChatGPT in the two classes; (b)the use of ChatGPT; (c)the number of hours of the ChatGPT usage per week; (d)the usage of different chatbot versions; (e)the best aspects of these chatbots; and (f)the students‚Äô answers to six questions (see the SI for details) on various aspects of the chatbots. 3.2 Students‚Äô Preference over Different Versions of ChatGPT Tools As mentioned already, in our course we introduced the customized ChatGPT-4 Turbo app referred to as ChatGe, whose first version is ChatGe-V1, to assist students in understanding the complex theory of medical imaging. After each lecture, the students were asked to submit questions related to the new material. The instructors and TAs selected two most relevant questions (see the SI) and prepared answers using either a human TA, ChatGPT-4, or ChatGe-V1, and then selected two out of the three answers for students to indicate and explain their preference of one over the other. Subsequently, we developed the second version of the app called ChatGe-V2, and repeated the comparative study on seven other questions. We asked ChatGPT-4 to summarize students‚Äô feedback on (Q1, Q2) to generate a prompt for ChatGe- V2 to enforce more tailored, student-friendly responses. ChatGe-V2 incorporates more course-relevant textbooks and other materials (more details on ChatGe-V1 and ChatGe-V2 can be found in the SI). Again, the students were asked to submit ques- tions related to the new material, seven questions were selected (see the SI), and the answers were similarly generated for students to vote. Our analysis is summarized in Fig.2, showing that while the original ChatGPT-4 performed better than ChatGe-V1, ChatGe-V2 improved the performance, being comparable or better than ChatGPT- 4 Turbo, ChatGe-V1 and even human TAs. Interestingly, we found a statistically significant difference in the preference of students who have used ChatGPT for the course and those who have not. The students who used ChatGPT statistically prefer ChatGe-V2 ( p-value = 0 .091 from Chi-squared test), while no statistically significant preference was found among the rest. This indicates that students accustomed to read- ing ChatGPT-generated answers might be more capable of extracting information 4 Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8 Q9Before UpdateNumber of Student VotesGPT Usage N Y ChatGeV2 ChatGPT4 SimilarFig. 2 Students‚Äô course content Q&A preference. The bar plot statistically compares students‚Äô prefer- ence for the answers generated by either ChatGPT or TAs to typical course content-related questions. Q1 and Q2 were given after exam 1, and students responses were then collected to develop ChatGeV2. from the machine‚Äôs responses. Overall, the students prefer more structured answers with bullet points. Most students dislike the upfront display of equations but some reported that formulas help when explained in detail. 3.3 Usage of ChatGPT Influenced by Promotions and Precaution Through the questionnaires, we found a significant difference in the students‚Äô adoption of ChatGPT, being strongly correlated to the instructor‚Äôs promotional or pre-cautious emphases in the classroom. In a well-intended contrast, one instructor actively pro- moted the use of ChatGPT, while the other more often cautioned the students about potential risks with ChatGPT. The impact of this contrast was evident in our post- exam survey: usage of ChatGPT was 87.5% in one section where ChatGPT was encouraged, but only 38.2% in the other section where ChatGPT was offered in a more conservative manner. Among students who chose not to use ChatGPT, our data shows that over half of this population doubted the accuracy of ChatGPT (Fig. 1 (a)). The remainder reported a lack of familiarity with the tools. As students become increasingly accustomed to chatbot assistants, the use of ChatGPT or similar tools is expected to rise. Moreover, advanced ChatGPT-type products now cite sources to support their output, alleviating the unreliability. 3.4 ChatGPT for TA Workload Reduction As shown in Fig. 2, ChatGe-V2 generates answers much faster than our TAs (instantly vs. 15-20 minutes). Even when students‚Äô questions appear erroneous, ChatGe-V2 can infer the intended meaning of the question. Moreover, the TAs gave three lectures on MATLAB programming tasks. Instead of preparing the lectures directly, the TAs found that ChatGPT generated demonstrations as effectively as they can do. This example suggests that programming projects can also leverage the power of AI. 5 4 Data and Code Availability Statement Data in this paper consists of survey results of each student. Anonymized data is available upon request. Survey questions are included in the supplementary material. All figures in this paper are generated with matplotlib in Python. 5 Competing Interest The authors declare no competing interests. References [1] Baer, W. S. Will the internet transform higher education? (Rand Santa Monica, CA, 1998). [2] Fleck, B. K., Beckman, L. M., Sterns, J. L. & Hussey, H. D. Youtube in the classroom: Helpful tips and student perceptions. Journal of Effective Teaching 14, 21‚Äì37 (2014). [3] Al-Emran, M., Elsherif, H. M. & Shaalan, K. Investigating attitudes towards the use of mobile learning in higher education. Computers in Human behavior 56, 93‚Äì102 (2016). [4] Milano, S., McGrane, J. A. & Leonelli, S. Large language models challenge the future of higher education. Nature Machine Intelligence 5, 333‚Äì334 (2023). [5] Fuchs, K. Exploring the opportunities and challenges of nlp models in higher education: is chat gpt a blessing or a curse? 8, 1166682 (2023). 6","cs.AI, cs.HC",Arxiv
32,Studying springs in series using a single spring,"Juan D. Serna, Amitabh Joshi",2010-05-27 04:30:49+00:00,http://arxiv.org/pdf/1005.4983v2,"Springs are used for a wide range of applications in physics and engineering. Possibly, one of its most common uses is to study the nature of restoring forces in oscillatory systems. While experiments that verify the Hooke's law using springs are abundant in the physics literature, those that explore the combination of several springs together are very rare. In this paper, an experiment designed to study the static properties of a combination of springs in series using only one single spring is presented. Paint marks placed on the coils of the spring allowed us to divide it into segments, and considered it as a collection of springs connected in series. The validity of Hooke's law for the system and the relationship between the spring constant of the segments with the spring constant of the entire spring is verified experimentally. The easy setup, accurate results, and educational benefits make this experiment attractive and useful for high school and first-year college students.","arXiv:1005.4983v2  [physics.ed-ph]  4 Jan 2011Studying springs in series using a single spring Juan D. Serna1and Amitabh Joshi2 1School of Mathematical and Natural Sciences, University of Arka nsas at Monticello, Monticello, AR 71656, USA 2Department of Physics, Eastern Illinois University, Charleston, IL 61920, USA E-mail:serna@uamont.edu and ajoshi@eiu.edu Abstract. Springs are used for a wide range of applications in physics and engineering. Possibly, one of its most common uses is to study the na ture of restoring forces in oscillatory systems. While experiments that verify the Hoo ke‚Äôs law using springs are abundant in the physics literature, those that explore the combination of several springs together are very rare. In this paper, an exper iment designed to study the static properties of a combination of springs in series using only o ne single spring is presented. Paint marks placed on the coils of the spring allowed us t o divide it into segments, and considered it as a collection of springs connected in s eries. The validity of Hooke‚Äôs law for the system and the relationship between the sprin g constant of the segments with the spring constant of the entire spring is veriÔ¨Åed ex perimentally. The easy setup, accurate results, and educational beneÔ¨Åts make th is experiment attractive and useful for high school and Ô¨Årst-year college students. PACS numbers: 01.50.My, 01.30.lb, 01.50.Pa, 45.20.D Studying springs in series using a single spring 2 1. Introduction Restoring forces play a very fundamental role in the study of vibra tions of mechanical systems. If a system is moved from its equilibrium position, a restorin g force will tend to bring the system back toward equilibrium. For decades, if not cen turies, springs have been used as the most common example of this type of mechanical sy stem, and have been used extensively to study the nature of restoring forces. I n fact, the use of springs to demonstrate the Hooke‚Äôs law is an integral part of every element ary physics lab. However, and despite the fact that many papers have been writte n on this topic, and several experiments designed to verify that the extension of a sp ring is, in most cases, directly proportional to the force exerted on it [1‚Äì12], not much ha s been written about experiments concerning springs connected in series. Perhaps one of the most common reasons why little attention has been paid to this topic is the fact tha t a mathematical description of the physical behaviour of springs in series can be der ived easily [13]. Most of the textbooks in fundamental physics rarely discuss the topic o f springs in series, and they just leave it as an end of the chapter problem for the student [14,15]. Onequestionthatoftenarisesfromspringexperiments is, ‚ÄúIfaun iformspringiscut into two or three segments, what is the spring constant of each se gment?‚Äù This paper describesasimpleexperimenttostudythecombinationofspringsins eriesusingonly one single spring. The goal is to prove experimentally that Hooke‚Äôs law is sa tisÔ¨Åed not only by each individual spring of theseries, but also by the combination ofsprings asa whole. To make the experiment eÔ¨Äective and easy to perform, Ô¨Årst we avo id cutting a brand new spring into pieces, which is nothing but a waste of resources and equipment misuse; second, we avoid combining in series several springs with dissimilar cha racteristics. This actually would not only introduce additional diÔ¨Éculties in the physical a nalysis of the problem (diÔ¨Äerent mass densities ofthesprings), but it would also be a source ofrandom error, since the points at which the springs join do not form coils and the segment elongations might not be recorded with accuracy. Moreover, cont act forces (friction) at these points might aÔ¨Äect the position readings, as well. Instead, we decide just to use one single spring with paint marks placed on the coils that allow us to divid e it into diÔ¨Äerent segments, and consider it as a collection of springs connec ted in series. Then the static Hooke‚Äôs exercise is carried out on the spring to observe h ow each segment elongates under a suspended mass. In the experiment, two diÔ¨Äerent scenarios are examined: the mass -spring system withanideal massless spring, andtherealistic caseofa spring whose massiscomparable to the hanging mass. The graphical representation of force again st elongation, used to obtain the spring constant of each individual segment, shows, in ex cellent agreement with the theoretical predictions, that the inverse of the spring co nstant of the entire spring equals the addition of the reciprocals of the spring constant s of each individual segment. Furthermore, the experimental results allow us to verif y that the ratio of the spring constant of a segment to the spring constant of the entire spring equals the ratio of the total number of coils of the spring to the number of coils of th e segment. Studying springs in series using a single spring 3 The experiment discussed in this article has some educational beneÔ¨Å ts that may make it attractive for a high school or a Ô¨Årst-year college laborato ry: It is easy to perform by students, makes use of only one spring for the investig ation, helps students to develop measuring skills, encourages students to use computat ional tools to do linear regression andpropagationoferror analysis, helps tounderstan d howsprings workusing the relationship between the spring constant and the number of co ils, complements the traditional static Hooke‚Äôs law experiment with the study of combinat ions of springs in series, and explores the contribution of the spring mass to the tot al elongation of the spring. 2. The model Whenaspringisstretched, itresistsdeformationwithaforceprop ortionaltotheamount ofelongation. Iftheelongationisnottoolarge, thiscanbeexpress ed bytheapproximate relationF=‚àíkx, whereFis the restoring force, kis the spring constant, and xis the elongation (displacement of the end of the spring from its equilibr ium position) [16]. Because most of the springs available today are preloaded , that is, when in the relaxed position, almost all of the adjacent coils of the helix are in contact, a pplication of only a minimum amount of force (weight) is necessary to stretch the sprin g to a position where all of the coils are separated from each other [17‚Äì19]. At this new po sition, the spring response is linear, and Hooke‚Äôs law is satisÔ¨Åed. It is not diÔ¨Écult to show that, when two or more springs are combined in series (one after another), the resulting combination has a spring const ant less than any of the component springs. In fact, if pideal springs are connected in sequence, the expression 1 k=p/summationdisplay i=11 ki(1) relates the spring constant kof the combination with the spring constant kiof each individual segment. In general, for a cylindrical spring of spring con stantkhavingN coils, which is divided into smaller segments, having nicoils, the spring constant of each segment can be written as ki=N nik. (2) Excluding the eÔ¨Äects of the material from which a spring is made, the diameter of the wire and the radius of the coils, this equation expresses the fact th at the spring constant kis a parameter that depends on the number of coils Nin a spring, but not on the way in which the coils are wound (i.e. tightly or loosely) [13]. In an early paper, Galloni and Kohen [20] showed that, under staticconditions, the elongation sustained by a non-null mass spring is equivalent to as suming that the spring is massless and a fraction of one-half of the spring mass shou ld be added to the hanging mass. That is, if a spring of mass msand relaxed length l(neither stretched nor compressed) is suspended vertically from one end in the Earth‚Äôs gravitational Ô¨Åeld, Studying springs in series using a single spring 4 the mass per unit length becomes a function of the position, and the spring stretches non-uniformly to a new length l‚Ä≤=l+‚àÜl. When a mass mis hung from the end of the spring, the total elongation ‚àÜ lis found to be ‚àÜl=/integraldisplayl 0Œæ(x)dx=(m+1 2ms)g k, (3) where Œæ(x) =m+ms(l‚àíx)/l klg (4) isthedimensionless elongation factor oftheelement oflengthbetween xandx+dx, and gis the acceleration due to gravity. An important number of papers d ealing with the static and dynamic eÔ¨Äects of the spring mass have been written in th e physics education literature. Expressions for the spring elongation as a function of t henth coil and the mass per unit length of the spring have also been derived [21‚Äì36]. 3. The Experiment We want to show that, with just onesingle spring, it is possible to conÔ¨Årm experimentally the validity of equations (1) and (2). This approach d iÔ¨Äers from Souza‚Äôs work [9] in that the constants kiare determined from the same single spring, and there is no need of cutting the spring into pieces; and from the standard e xperiment in which more than one spring is required. A soft spring is dividedinto three separate segments by placing a paint mark at selected points along its surface (see Ô¨Ågure 1). These points are c hosen by counting a certain number of coils for each individual segment such that the or iginal spring is now composed of three marked springs connected in series, with each s egment represented by an index i(withi= 1,2,3), and consisting of nicoils. An initial mass mis suspended from the spring to stretch it into its linearregion, where the equation Fi=‚àíki‚àÜxiis satisÔ¨Åed by each segment. Once the spring is brought into this regio n, the traditional static Hooke‚Äôs law experiment is performed for several diÔ¨Äerent su spended masses, ranging from 1 .0 to 50.0g. The initial positions of the marked points xiare then used to measure the relativedisplacement (elongation) of each segment after they are stretc hed by the additional masses suspended from the spring (Ô¨Ågure 2). Th e displacements are determined by the equations ‚àÜxi= (x‚Ä≤ i‚àíx‚Ä≤ i‚àí1)‚àíli, (5) where the primed variables x‚Ä≤ irepresent the new positions of the marked points, li=xi‚àíxi‚àí1are the initial lengths of the spring segments, and x0= 0, by deÔ¨Ånition. Representative graphs used to determine the spring constant of each segment are shown in Ô¨Ågures 3, 4, and 5. Studying springs in series using a single spring 5 4. Dealing with the eÔ¨Äective mass As pointed out by some authors [20,24,25,28,31], it is important t o note that there is a diÔ¨Äerence in the total mass hanging from each segment of the sp ring. The reason is that each segment supports not only the mass of the segments b elow it, but also the mass attached to the end of the spring. For example, if a spring of massmiis divided into three identical segments, and a mass mis suspended from the end of it, the total mass M1hanging from the Ô¨Årst segment becomes m+2 3ms. Similarly, for the second and third segments, the total masses turn out to be M2=m+1 3msand M3=m, respectively. However, in a more realistic scenario, the mass of th e spring and its eÔ¨Äect on the elongation of the segments must be considered , and equation (3) should be incorporated into the calculations. Therefore, for each individual segment, the elongation should be given by ‚àÜxi=(Mi+1 2mi)g ki, (6) wheremiis the mass of the ith segment, Miis its corresponding total hanging mass, andkiis the segment‚Äôs spring constant. Consequently, for the spring div ided into three identical segments ( mi=1 3ms), the total masses hanging from the Ô¨Årst, second and third segments are now m+5 6ms,m+1 2msandm+1 6ms, respectively. This can be explained by the following simple consideration: If a mass mis attached to the end of a spring of length land spring constant k, for three identical segments with elongations ‚àÜl1, ‚àÜl2, and ‚àÜl3, the total spring elongation is given by ‚àÜl= ‚àÜl1+‚àÜl2+‚àÜl3 =/integraldisplayl 3 0Œæ(x)dx+/integraldisplay2l 3 l 3Œæ(x)dx+/integraldisplayl 2l 3Œæ(x)dx =(m+5 6ms)g 3k+(m+1 2ms)g 3k+(m+1 6ms)g 3k =(m+1 2ms)g k. (7) Asexpected, equation(7)isinagreement withequation(3), andre vealsthecontribution of the mass of each individual segment to the total elongation of th e spring. It is also observed from this equation that ‚àÜl1‚àí‚àÜl2= ‚àÜl2‚àí‚àÜl3=(1 3ms)g 3k= const. (8) As we know,1 3msis the mass of each identical segment, and k1=k2=k3= 3kis the spring constant for each. Therefore, the spring stretches non -uniformly under its own weight, but uniformly under the external load, as it was also indicate d by Sawicky [28]. Studying springs in series using a single spring 6 5. Results and Discussion Two particular cases werestudied inthisexperiment. First, wecons idered aspring-mass system in which the spring mass was small compared with the hanging m ass, and so it was ignored. In the second case, the spring mass was comparable with the hanging mass and included in the calculations. We started with a conÔ¨Åguration of three approximately identical spring segments connected inseries; each segment having 12coils( n1=n2=n3= 12)‚Ä°Whenthespring was stretched by diÔ¨Äerent weights, the elongation of the segment s increased linearly, as expected from Hooke‚Äôs law. Within the experimental error, each se gment experienced the same displacement, as predicted by (8). An example of experime ntal data obtained is shown in table 1. Simple linear regression was used to determine the slope of each tren d line Ô¨Åtting the data points of the force versus displacement graphs. Figure 3 (a) clearly shows the linear response of the Ô¨Årst segment of the spring, with a resulting s pring constant of k1= 10.3¬±0.1N/m. A similar behaviour was observed for the second and third segments, with spring constants k2= 10.1¬±0.1N/m, and k3= 10.2¬±0.1N/m, respectively. For the entire spring, the spring constant was k= 3.40¬±0.01N/m, as shown in Ô¨Ågure 3(b). The uncertainties in the spring constants wer e calculated using thecorrelation coeÔ¨Écient Rof the linear regressions, as explained in Higbie‚Äôs paper ‚ÄúUncertainty in the linear regression slope‚Äù [37]. Comparing the sprin g constant of each segment with that for the total spring, we obtained that k1= 3.03k,k2= 2.97kand k3= 3.00k. As predicted by (2), each segment had a spring constant three t imes larger than the resulting combination of the segments in series, that is, ki= 3k. The reason why the uncertainty inthe spring constant of the entir e spring is smaller than the corresponding spring constants of the segments may be explained by the fact that the displacements of the spring as a whole have smaller ‚Äúrelative errors‚Äù than those of the individual segments. Table 1 shows that, whereas the displacements of the individual segments ‚àÜ xiare in the same order of magnitude that the uncertainty in the measurement of the elongation ( ¬±0.002m), the displacements of the whole spring ‚àÜ xs are much bigger compared with this uncertainty. We next considered a conÔ¨Åguration of two spring segments connec ted in series with 12 and 24 coils, respectively ( n1= 12,n2= 24). Figure 4(a) shows a graph of force against elongation for the second segment of the s pring. We obtained k2= 5.07¬±0.03N/m using linear regression. For the Ô¨Årst segment and the entire spring, the spring constants were k1= 10.3¬±0.1N/m and k= 3.40¬±0.01N/m, respectively, as shown in Ô¨Ågure 4(b). Then, we certainly observed thatk1= 3.03k andk2= 1.49k. Once again, these experimental results proved equation (2) cor rect (k1= 3kandk2=3 2k). ‚Ä°Although the three segments had the same number of coils, the Ô¨Års t and third segments had an additional portion of wire where the spring was attached and the ma sses suspended. This added extra mass to these segments, making them slightly diÔ¨Äerent from each ot her and from the second segment. Studying springs in series using a single spring 7 We Ô¨Ånally considered the same two spring conÔ¨Åguration as above, bu t unlike the previous trial, this time the spring mass (4 .5¬±0.1g) was included in the experimental calculations. Figures 5(a)‚Äì(b) show results for the two spring seg ments, including spring masses, connected in series ( n1= 12,n2= 24). Using this method, the spring constant forthewholespringwasfoundtobeslightlydiÔ¨Äerentfromthatobta inedwhenthespring was assumed ideal (massless). This diÔ¨Äerence may be explained by th e corrections made to the total mass as given by (7). The spring constants obtained f or the segments were k1= 2.94kandk2= 1.51kwithk= 3.34¬±0.04N/m for the entire spring. These experimental results were also consistent with equation (2). The e xperimental data obtained is shown in table 2. When the experiment was performed by the students, measuring t he positions of the paint marks on the spring when it was stretched, perhaps repr esented the most diÔ¨Écult part of the activity. Every time that an extra weight was add ed to the end of the spring, the starting point of each individual segment change d its position. For the students, keeping track of these new positions was a laborious task. Most of the experimental systematic error came from this portion of the activ ity. To obtain the elongation of the segments, using equation (5) substantially facilita ted the calculation and tabulation of the data for its posterior analysis. The use of com putational tools (spreadsheets) to do the linear regression, also considerably simp liÔ¨Åed the calculations. 6. Conclusions In this work, we studied experimentally the validity of the static Hook e‚Äôs law for a system of springs connected in series using a simple single-spring sch eme to represent the combination of springs. We also veriÔ¨Åed experimentally the fact t hat the reciprocal of the spring constant of the entire spring equals the addition of th e reciprocal of the spring constant of each segment by including well-known correction s (due to the Ô¨Ånite mass of the spring) to the total hanging mass. Our results quantit atively show the validity of Hooke‚Äôs law for combinations of springs in series [equation (1 )], as well as the dependence of the spring constant on the number of coils in a sp ring [equation (2)]. The experimental results were in excellent agreement, within the st andard error, with those predicted by theory. The experiment is designed to provide several educational beneÔ¨Åt s to the students, like helping to develop measuring skills, encouraging the use of comput ational tools to perform linear regression and error propagation analysis, and stim ulating the creativity and logical thinking by exploring Hooke‚Äôs law in a combined system of springs in series simulated by a singlespring. Because of it easy setup, this experiment is easy to adopt in any high school or undergraduate physics laboratory, an d can be extended to any number of segments within the same spring such that all segm ents represent a combination of springs in series. Studying springs in series using a single spring 8 Acknowledgments The authors gratefully acknowledge the School of Mathematical a nd Natural Sciences at theUniversity ofArkansas-Monticello (#11-2225-5-M00)andthe DepartmentofPhysics atEasternIllinoisUniversityforprovidingfundingandsupportfort hiswork. Comments on earlier versions of the paper were gratefully received from Caro l Trana. The authors are also indebted to the anonymous referee for the valuable comme nts and suggestions made. References [1] Mills D S 1981 The spring and mass pendulum: An exercise in mathemat ical modeling Phys. Teach.19404‚Äì5 [2] Cushing J T 1984 The spring-mass system revisited Am. J. Phys. 52925‚Äì33 [3] Easton D 1987 Hooke‚Äôs law and deformation Phys. Teach. 25494‚Äì95 [4] Hmurcik L, Slacik A, Miller H and Samoncik S 1989 Linear regression an alysis in a Ô¨Årst physics labAm. J. Phys. 57135‚Äì38 [5] SherÔ¨Ånski J 1989 The nonlinear spring and energy conservation Phys. Teach. 27552‚Äì53 [6] Glaser J 1991 A Jolly project for teaching Hooke‚Äôs law Phys. Teach. 29164‚Äì65 [7] Menz P G 1993 The physics of bungee jumping Phys. Teach. 31483‚Äì87 [8] Wagner G 1995 Apparatus for teaching physics: Linearizing a non linear spring Phys. Teach. 33 566‚Äì67 [9] Souza F M, Venceslau G M and Reis E D 2002 A new Hooke‚Äôs law experime ntPhys. Teach. 40 35‚Äì36 [10] Struganova I 2005 A spring, Hooke‚Äôs law, and Archimedes‚Äô princ iplePhys. Teach. 43516‚Äì18 [11] Freeman W L and Freda R F 2007 A simple experiment for determinin g the elastic constant of a Ô¨Åne wire Phys. Teach. 45224‚Äì27 [12] Euler M 2008 Hooke‚Äôs law and material science projects: Explorin g energy and entropy springs Phys. Educ. 4357‚Äì61 [13] Gilbert B 1983 Springs: Distorted and combined Phys. Teach. 21430‚Äì34 [14] Giancoli D C 2000 Physics for Scientist and Engineers , 3th ed. (Upper Saddle River: Prentice Hall) p 382 [15] Serway R A and Jewett Jr J W 2010 Physics for Scientist and Engineers , 8th ed. (Belmont: Brooks/Cole) p 462 [16] Symon K R 1971 Mechanics (Reading: Addison-Wesley) p 41 [17] Glanz P K 1979 Note on energy changes in a spring Am. J. Phys. 471091‚Äì92 [18] Prior R M 1980 A nonlinear spring Phys. Teach. 18601 [19] Froehle P 1999 Reminder about hooke‚Äôs law and metal springs Phys. Teach. 37368 [20] Galloni E E and Kohen M 1979 InÔ¨Çuence of the mass of the spring o n its static and dynamic eÔ¨ÄectsAm. J. Phys. 471076‚Äì78 [21] Edwards T W and Hultsch R A 1972 Mass distribution and frequenc ies of a vertical spring Am. J. Phys. 40445‚Äì49 [22] Heard T C and Newby Jr N D 1977 Behavior of a soft spring Am. J. Phys. 451102‚Äì6 [23] LancasterG 1983Measurementsofsome propertiesofnon-H ookeansprings Phys. Educ. 18217‚Äì20 [24] Mak S Y 1987 The static eÔ¨Äectiveness mass of a SlinkyTMAm. J. Phys. 55994‚Äì97 [25] French A P 1994 The suspended Slinky‚ÄîA problem in static equilibriu mPhys. Teach. 32244‚Äì45 [26] Hosken J W 1994 A Slinky error Phys. Teach. 32327 [27] Ruby L 2000 Equivalent mass of a coil spring Phys. Teach. 38140‚Äì41 [28] Sawicki M 2002 Static elongation of a suspended SlinkyTMPhys. Teach. 40276‚Äì78 [29] Ruby L 2002 Slinky models Phys. Teach. 40324 Studying springs in series using a single spring 9 [30] Toepker T P 2004 Center of mass of a suspended Slinky: An expe rimentPhys. Teach. 4216‚Äì17 [31] Newburgh R and Andes G M 1995 Galileo Redux or, how do nonrigid, e xtended bodies fall? Phys. Teach.33586‚Äì88 [32] Bowen J M 1982 Slinky oscillations and the notion of eÔ¨Äective mass Am. J. Phys. 501145‚Äì48 [33] Christensen J 2004 An improved calculation of the mass for the r esonant spring pendulum Am. J. Phys.72818‚Äì28 [34] Rodr¬¥ ƒ±guez E E and Gesnouin G A 2007 EÔ¨Äective mass of an oscillatin g spring Phys. Teach. 45 100‚Äì3 [35] Gluck P 2010 A project on soft springs and the slinky Phys. Educ. 45178‚Äì85 [36] Ess¬¥ en H and Nordmark A 2010 Static deformation of a heavy sp ring due to gravity and centrifugal forceEur. J. Phys. 31603‚Äì9 [37] Higbie J 1991 Uncertainty in the linear regression slope Am. J. Phys. 59184‚Äì85 Studying springs in series using a single spring 10 Tables and table captions Table 1. Spring divided into three identical segments ( n1=n2=n3= 12). The ‚àÜ xi corresponds to the relative displacement of the ith segment (with i= 1,2,3), and ‚àÜ xs represents the relative displacement of the entire spring. Displacement Force (¬±0.002m) ( ¬±0.001N) ‚àÜx1‚àÜx2‚àÜx3‚àÜxsF 0.000 0.000 0.000 0.000 0.000 0.005 0.005 0.005 0.015 0.049 0.010 0.010 0.010 0.030 0.098 0.015 0.014 0.015 0.044 0.147 0.020 0.019 0.019 0.058 0.196 0.024 0.024 0.025 0.073 0.245 0.029 0.029 0.029 0.087 0.294 0.034 0.034 0.033 0.101 0.343 0.038 0.039 0.039 0.116 0.392 0.043 0.044 0.043 0.130 0.441 0.048 0.048 0.049 0.145 0.491 Table 2. Spring divided into non-identical segments ( n1= 12,n2= 24). The mass of the spring was included in the experimental calculations. The ‚àÜ xicorresponds to the relative displacement of the ith segment (with i= 1,2), and ‚àÜ xsrepresents the relative displacement of the entire spring. Displacement Force (¬±0.002m) ( ¬±0.001N) ‚àÜx1‚àÜx2‚àÜxsF 0.000 0.000 0.000 0.000 0.001 0.003 0.004 0.010 0.002 0.005 0.007 0.020 0.003 0.006 0.009 0.029 0.004 0.008 0.012 0.039 0.005 0.010 0.015 0.049 0.006 0.012 0.018 0.059 0.007 0.014 0.021 0.069 0.008 0.016 0.024 0.078 0.009 0.018 0.027 0.088 0.010 0.020 0.030 0.098 Studying springs in series using a single spring 11 Figure captions Figure 1. Experimental setup to determine the spring constants of springs in series. A soft spring of mass ms= 4.43¬±0.01g, radius r= 1.0¬±0.1cm, and n= 36 turns, is divided into segments by using paint marks. Studying springs in series using a single spring 12 x1 x2 x3x1 x2 x3k2k1 k3 l3l2 l3l21l1l ‚àÜx2 ‚àÜx3‚àÜx1 +x(m)0 mm/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0 /1/1/1/1/1/1/1/1/1/1/1/1/1/1/1/1/1/1/1/1 /0/0/0/0/0/0/0/0/0/0/1/1/1/1/1/1/1/1/1/1 Figure 2. Schematic of the mass-spring system. An initial mass mis suspended from the spring to bring it into its linear region. liis the initial length of the ith spring segment with spring constant ki(i= 1,2,3). An additional mass m‚Ä≤suspended from the spring elongates each segment by a distance ‚àÜ xi. Studying springs in series using a single spring 13 00.1000.2000.3000.4000.500 0 1.00 2.00 3.00 4.00 5.00F (N) ‚àÜx ( √ó10-2 m)(a)k1 First segment Trend line 00.1000.2000.3000.4000.500 0 4.00 8.00 12.0 16.0 ‚àÜx ( √ó10-2 m)(b)k1 k First segment Entire spring Trend line Figure 3. Applied force as a function of the displacement for the Ô¨Årst spring s egment and the total spring. The spring was considered massless and divide d into three identical segments ( n1=n2=n3= 12). (a) The spring constant of the Ô¨Årst segment, k1= 10.3¬±0.1N/m, was obtained from the slope of the trend line. (b) A compariso n between elongations of the Ô¨Årst segment and total spring. Here, k= 3.40¬±0.01N/m. The springconstants k2= 10.1¬±0.1N/mand k3= 10.2¬±0.1N/mwerealsocalculated. It can be observed that ki= 3k, as predicted by equation (2). 00.1000.2000.3000.4000.500 0 2.00 4.00 6.00 8.00 10.0F (N) ‚àÜx ( √ó10-2 m)(a)k2 Second segment Trend line 00.1000.2000.3000.4000.500 0 4.00 8.00 12.0 16.0 ‚àÜx ( √ó10-2 m)(b)k1 k2 k First segment Second segment Entire spring Trend line Figure 4. Applied force as a function of the displacement for the Ô¨Årst and sec ond spring segments, and the total spring. The spring was considered massless and divided into two non-identical segments ( n2= 2n1= 24). (a) The spring constant of the second segment is k2= 5.07¬±0.03N/m. (b) A comparison between elongations of the Ô¨Årst and second segments with the total spring. k1= 10.3¬±0.1N/m and k= 3.40¬±0.01N/m. Here, k1= 3kandk2=3 2k. Studying springs in series using a single spring 14 00.0200.0400.0600.0800.100 0 0.40 0.80 1.20 1.60 2.00F (N) ‚àÜx ( √ó10-2 m)(a)k2 Second segment Trend line 00.0200.0400.0600.0800.100 0 0.50 1.00 1.50 2.00 2.50 3.00 ‚àÜx ( √ó10-2 m)(b)k1k2 k First segment Second segment Entire spring Trend line Figure 5. Applied force as a function of the displacement for the Ô¨Årst and sec ond spring segments, and the total spring. The mass of the spring was included in the experimental calculations, and the spring divided into two non-identical segments (n2= 2n1= 24). (a) The spring constants of the segments were calculated with the corrections to the mass. The second segment has a spring constant of k2= 5.05¬±0.09N/m. (b) DiÔ¨Äerences between the spring elongations of the two segments and the total spring are shown. Here, k= 3.34¬±0.04N/m",physics.ed-ph,Arxiv
33,Novel Spring Mechanism Enables Iterative Energy Accumulation under Force and Deformation Constraints,"Cole A. Dempsey, David J. Braun",2022-12-29 17:25:02+00:00,http://arxiv.org/pdf/2212.14382v1,"Springs can provide force at zero net energy cost by recycling negative mechanical work to benefit motor-driven robots or spring-augmented humans. However, humans have limited force and range of motion, and motors have a limited ability to produce force. These limits constrain how much energy a conventional spring can store and, consequently, how much assistance a spring can provide. In this paper, we introduce an approach to accumulating negative work in assistive springs over several motion cycles. We show that, by utilizing a novel floating spring mechanism, the weight of a human or robot can be used to iteratively increase spring compression, irrespective of the potential energy stored by the spring. Decoupling the force required to compress a spring from the energy stored by a spring advances prior works, and could enable spring-driven robots and humans to perform physically demanding tasks without the use of large actuators.","Novel Spring Mechanism Enables Iterative Energy Accumulation under Force and Deformation Constraints Cole A. Dempsey and David J. Braun Abstract ‚Äî Springs can provide force at zero net energy cost by recycling negative mechanical work to beneÔ¨Åt motor- driven robots or spring-augmented humans. However, humans have limited force and range of motion, and motors have a limited ability to produce force. These limits constrain how much energy a conventional spring can store and, consequently, how much assistance a spring can provide. In this paper, we introduce an approach to accumulating negative work in assistive springs over several motion cycles. We show that, by utilizing a novel Ô¨Çoating spring mechanism, the weight of a human or robot can be used to iteratively increase spring compression, irrespective of the potential energy stored by the spring. Decoupling the force required to compress a spring from the energy stored by a spring advances prior works, and could enable spring-driven robots and humans to perform physically demanding tasks without the use of large actuators. I. I NTRODUCTION Springs can enable robots actuated by motors [1]‚Äì[6] and humans ‚Äúactuated by muscles‚Äù [7]‚Äì[14] to perform physi- cally demanding tasks with reduced force requirements from the actuators. In most applications, a spring is compressed slowly over a longer period of time, while the energy stored by the spring is released rapidly [15]. In this way, the spring provides power ampliÔ¨Åcation beyond what a motor driven robot or ‚Äúmuscle actuated‚Äù human can do without the assistance of a spring. However, the energy stored by a spring is limited by the maximum force used to compress the spring. Consequently, the maximal force that a robot or human can generate limits the amount of energy a spring can store, and the level of assistive beneÔ¨Åt a spring can provide. This limitation may be alleviated by leveraging the energy storage ability of springs over multiple loading and unloading cycles instead of a single cycle. In mechanical resonance, the beneÔ¨Åt of springs is lever- aged over multiple cycles of energy storage and release, instead of a single cycle [16]‚Äì[21]. A familiar example is a pogo-stick, essentially a spring in series with the human C. A. Dempsey and D. J. Braun are with the Department of Mechanical Engineering, Vanderbilt University, Nashville, Tennessee 37235, USA. This work was supported in part by a Seeding Success Grant provide by Vanderbilt University and a National Science Foundation CAREER Award (Grant No. 2144551). The authors gratefully acknowledge the support. This paper has supplementary downloadable multimedia material. The video demonstrates the energy accumulation method presented in this work. E-mail: cole.a.dempsey@vanderbilt.edu E-mail: david.braun@vanderbilt.edu ¬© 20xx IEEE. Personal use of this material is permitted. Permission from IEEE must be obtained for all other uses, in any current or future media, including reprinting/republishing this material for advertising or promotional purposes, creating new collective works, for resale or redistribution to servers or lists, or reuse of any copyrighted component of this work in other works.legs, that allows the user to jump repeatedly to accumulate energy and reach jump heights much greater than in a single jump [22]. To accomplish such a feat, the pogo-stick relies on iteratively increasing the kinetic energy of the human through multiple jumps. This increase in kinetic energy is required to generate the large contact forces to compress the pogo-stick spring and thereby increase the energy stored by the spring. However, large forces are challenging for humans and robots to generate without increasing their kinetic energy. In this paper, we present a method and a device for iteratively accumulating energy using only the static grav- itational force provided by the mass of a spring-driven robot or the mass of a human augmented with a spring leg exoskeleton. The method utilizes the repeated application of a constant static force that is independent of the energy stored by the spring. The method also relies on a new device, which belongs to the class of Ô¨Çoating spring mechanisms recently introduced in [23]. The device is an energetically passive variable stiffness spring which automatically adjusts its stiffness to ensure that a constant force can compress the spring regardless of how much energy is stored by the spring. The working principle of the device is demonstrated using a point mass model of the human squatting with a lower- limb spring leg exoskeleton in Section II. The energy ac- cumulation method is subsequently described in Section III. Then, the prototype of the device is detailed in Section IV. Finally, the experimental validation of the proposed energy accumulation method is reported in Section V. II. E NERGY ACCUMULATION USING SPRINGS Let us consider a simple energy accumulation task where the human is augmented with a spring exoskeleton attached parallel to the legs, see Fig. 1. In this task, the user compresses the spring by repeatedly squatting with the exoskeleton. The energy stored by the spring is retained by locking the spring at the bottom of each squat. As the human returns to the standing height, the spring shifts to a new conÔ¨Åguration that grants the user a greater mechanical advantage over the spring for the next iteration. The greater mechanical advantage ensures the user can compress the spring at the beginning of each squat cycle until a desired amount of energy is accumulated in the spring. In the described iterative energy accumulation process, the force required by the human to achieve full spring compression is independent of the energy stored by the spring. In the remainder of this section, we further explore the example squatting task using a simple spring mass model ofarXiv:2212.14382v1  [cs.RO]  29 Dec 2022 Endpoints  Fixed (a) (b)Spring  CompressionChange Mechanical Advantage (c)Repeat Spring  LockedFig. 1. Repeated squatting with a Ô¨Çoating variable stiffness spring. (a) The end points of the spring are Ô¨Åxed (red) while the user compresses the spring with a squat. (b) The end points of the spring are free (blue) while the spring is locked. The mechanical advantage of the human over the spring is increased as the human stands and the spring shifts towards the knee joint. (c) By repeating the energy accumulation cycle (a)-(b), the user can iteratively increase the energy stored by the spring. the human augmented with a conceptual lower-limb variable stiffness spring exoskeleton. A. Model The human and the spring-leg exoskeleton are abstracted into the model shown in Fig. 2a. We consider a single squat, starting from an upright standing position and ending at the fully squatted position. Due to the geometric constraint of the leg, the leg deformation during a squat is given by l2[0;lmax]: (1) Because the human leg can push but cannot pull against the ground while squatting, the force exerted by the leg on the center of mass must be positive, F0: (2) Finally, we assume that the human legs can produce enough force to stand up after each squat without the support of the exoskeleton. Any leg force that can overcome the weight of the human FmgsufÔ¨Åces this assumption. (a) (b) ‚àÜlFmg 0knm Leg  Force  F Fsn- sn+‚àÜlg F ‚àÜlmax mE1max Fig. 2. Model of the human augmented with a lower-limb exoskeleton. (a) Mass-spring system. The leg deformation is described by l. The body mass is supported by a spring with stiffness knand deformed length s n; the superscripts denote the pre-squat and post-squat spring lengths, respectively, and the subscript ndenotes the number of squats performed during repeated squatting. (b) An example force-deÔ¨Çection of the human legF(red) that leads to the average leg force F=1 2mg is shown with the red line. The maximum amount of energy accumulated during one squat E1 max is shown with the dark area.An example of the human leg force that enables squatting from a standing position to the equilibrium position is shown in Fig. 2b. At standing the human limbs fully support the mass such that F=mgand the spring-leg exoskeleton does not provide any force. In the fully squatted position, the human limbs may support the mass with a force F2[0; mg) while the spring leg provides the rest of the force required to keep the center of mass in static equilibrium, mg=F+klmax: (3) At the bottom of the squat, the energy stored by the spring leg depends on the human limb force. Assuming an average limb force F, the energy stored by the spring is given by: 1 2kl2 max= (mg F)lmax: (4) In order to simultaneously satisfy (3) and (4), the average force of the human leg Fduring the squat must satisfy the following condition: F=1 2(mg+F): (5) According to (4) and (5), the maximum amount of energy that can be stored in the spring during a single squat is given by: E1 max =1 2mglmax; (6) Relation (6) directly shows that the amount of energy accumulated in the spring is restricted by the range of motion and the limited gravitational force available to compress the spring. In the next section, we introduce a novel spring mechanism that can alleviate the aforementioned limitation. III. C YCLIC ENERGY ACCUMULATION BY A FLOATING SPRING VARIABLE STIFFNESS LEG There are three main practical challenges of realizing energy accumulation beyond a single squat: (i) The mechanism must provide increased mechanical advantage to compress the spring, such that the same force Lockable spring of  stiffness ksH s - H AK xlt s+‚àÜl K A l- l+Fig. 3. Model of the variable stiffness Ô¨Çoating spring-leg. The leg segments HK andKA are equal in length. The spring is assumed to remain vertical (xis constant) as the leg deforms by l. can be used to compress the spring even as it stores more energy. (ii) The mechanism must provide controllable coupling between the spring and the leg, such that the same leg deformation can be used to input energy into the spring in subsequent squats independent of how much energy is stored by the spring. (iii) To ensure efÔ¨Åcient energy accumulation, the two prior tasks should be accomplished while maintaining the energy stored in the spring between subsequent iterations. In order to address the aforementioned challenges, a special case of the Ô¨Çoating spring mechanism proposed in [23] is presented (Fig. 3). In the original design, the mechanical advantage of the human over the spring was manipulated by changing the orientation of the spring. In the proposed design, the spring maintains a vertical orientation but shifts towards or away from the knee joint to change the mechanical advantage. Due to this difference, the proposed design always maintains positive force-deÔ¨Çection behavior. Both designs, however, alter mechanical advantage by con- trolling the endpoints of the spring while the spring is locked, which maintains the potential energy stored by the spring. In turn, this ability to control the endpoints of the spring allows the leg deformation to be decoupled from the spring deformation, independent of the energy stored by the spring. Consequently, the proposed design addresses all three of the practical challenges (i)-(iii) mentioned above. In what follows, we present the geometry that grants the spring leg mechanism energetically efÔ¨Åcient variable stiffness behavior (Section III-A), and describe the working principle of the mechanism (Section III-B) consistent with the three main requirements outlined above. A. Model Figure 3 shows the Ô¨Çoating spring variable stiffness leg for a single squat iteration. In the leg, points H,KandA coincide with the user‚Äôs hip, knee, and ankle, respectively. The thigh and shank segments HK andKA are assumed to be of equal length lt. The spring is also assumed to maintain its vertical orientation independent of the leg deformation. Inthe mechanism, the length of the spring sis deÔ¨Åned by leg length land the position of the spring x, s=x ltl; (7) while the force required at the hip Flto compress the spring is deÔ¨Åned by, Fl=x lt Fs=x lt ks(s0 s); (8) where s0is the uncompressed length of the spring and ksis the stiffness of the spring. These relations suggest that by moving the spring towards the knee joint ‚Äì decreasing x‚Äì a small constant force Fl could be used at the hip to compress the spring despite a potentially large spring force Fs, and consequently, the large amount of energy stored by the spring. The next section explores how the mechanism shown in Fig. 3 could accumulate a large amount of energy when compressed by the weight of the human over multiple squats. B. Cyclic Energy Accumulation In order to predict the behavior of the mechanism beyond a single squat, we again consider the simple example of a human performing a repetitive squat task to accumulate energy in the spring as introduced in Section II. First, similar to (3), we assume that the spring-leg supports the weight of the user at the end of each squat, mg=ksxn lt  s0 s+ n : (9) To deÔ¨Åne the spring length at the end of the squat s+ n, the spring location xnmust be related to the spring length at the beginning of the squat s  n. The simple relation below follows from locking the spring length between the end of the previous squat and the beginning of the next squat (Fig. 1), s+ n 1=s  n: (10) According to (10), the energy stored by the spring will be retained between squats, 1 2ks  s+ n 1 s02=1 2ks  s  n s02: (11) Finally, using (7) and (10), we deÔ¨Åne a recurrence relation that predicts the position of the spring across squat iterations: xn=s  n s  n 1xn 1: (12) Substituting (9), (10), and (12) into (8), we Ô¨Ånd that the force required to compress the spring at the beginning of the next squat is always lower than the constant gravitational force available to compress the spring, F  ln=  s  n s  n 1! mgmg: (13) Figure 4a shows the force-deÔ¨Çection predicted during multiple squats, during which the maximal force provided by 1234 00.2 0.4 0.6 0.8 1.000.2 0.4 0.6 0.8 1.00.51.01.52.0 Lower Force Maximum Force (b)(a) Normalized Spring DeflectionNormalized Spring Potential ‚àÜs / ‚àÜsmaxE / E1maxNormalized Hip Force Fl / mg Single Squat1.02.03.04.05.0Fig. 4. Simulated behavior for the spring-leg. (a) Force-deÔ¨Çection achieved by repeated squats, subject to a limited force (horizontal line), compared to the force required to achieve the same deformation in a single compression cycle (dashed line). The forces are normalized by the weight of the user (Section II-A). (b) Potential energy stored by the spring, normalized by the max amount of energy that can be accumulated in a single squat E1 max (6) deÔ¨Åned in (Section II-A). The four squats shown in the Ô¨Ågure were the minimum number of squats necessary to achieve full spring deformation. the human is bounded by the weight of the user (gray). This force is compared to the force required to achieve the same spring deformation in a single squat (gray dashed). Further, the vertical dashed lines show that the spring deformation is maintained between iterations, as required by (10). Figure 4b shows the energy accumulation process for the iterative method (gray), with energetic potential normalized by the maximum energy that can be achieved in a single squat provided by the weight of the user, E1 max , as deÔ¨Åned in (6). We observe that the spring accumulates the same amount of energy through four squats (gray) than in a single squat (gray dashed) but with less than half of the required force (Fig. 4a-b). Furthermore, we observe that the reduction in force translates to over Ô¨Åve times more stored energy as compared to what can be accumulated in a single squat subject to the same maximum force (Fig. 4b). Following the repeated squats, the spring can be reset to the initial mechan- ical advantage, x=lt, where the accumulated energy can be released to provide double the assistive force as compared to the maximal force used to compress the spring (Fig. 4a) and the energy stored by the spring when compressed with the maximal force in a single squat (Fig. 4b). IV. P ROTOTYPE In this section, a prototype of the Ô¨Çoating spring mecha- nism introduced in Section III is presented. A. Device Figure 5 depicts the spring-leg prototype designed for the proposed energy accumulation task. The device consists of Lockable Spring Load CellShoulder-bolt Friction Clamp (a) (b) Uni-directional PulleysSpring Endpoint BearingsLocking Sliders Retraction SpringFig. 5. Prototype Ô¨Çoating spring-leg mechanism. (a) Front view. (b) Top view. The leg segments are of relatively equal length of 205mm. The spring has a free length of approximately 114 mm and a force-deÔ¨Çection rate of 0:9N/mm. three major sub-assemblies: the leg structure, the compres- sion spring, and the spring retraction mechanism. These sub- assemblies are detailed below. First, the leg structure is formed by two linear shafts connected by brackets at the knee and pinned to create a hinge joint. The other ends of each shaft form the hip and ankle of the mechanism, as in Fig. 3. Second, a compression spring is housed in a piston- cylinder assembly where each endpoint of the assembly connects to a linear ball bearing that slides freely along the leg shafts. To lock the spring axially, a shoulder bolt passes orthogonally through a hole in the piston and rides in a slot in the cylinder, as shown in Fig. 5a. The cylinder features Ô¨Çat sides as an interface for the shoulder bolt, allowing continuous locking of the spring. Finally, two uni-directional pulleys, each with two drums, are mounted in coincidence with the knee joint pin, as shown in Fig. 5b. One pulley is keyed to the knee pin, while the other pulley spins freely on the knee pin. Both, however, can spin freely with respect to the knee brackets. The two drums on each pulley feature separate cables wrapped in opposing directions. One cable connects to an extension spring that provides a torque on the pulley, while the other cable is connected to an endpoint of the spring assembly. The system of pulleys serves to automatically shift the position of the spring assembly, and consequently change the mechanical advantage between the spring and the leg, between each compression cycle. B. Working principle In this section we examine the working principle of the prototype shown in Fig. 5. Figure 6 shows the CAD model of the prototype, which features blue and orange colored parts to help distinguish which components are responsible for each endpoint of the spring assembly. As shown, each leg segment utilizes a pulley and dual cable assembly to move Full Assembly (b) (d) Ratchet and pawl  lock pulley rotation œÑext (e) Pre-loaded  retraction springs (c) FsSpring Compression Change Mechanical Advantage Fs œÑext (a) Fig. 6. Compressing the spring and changing the mechanical advantage of the leg over the spring with the variable stiffness Ô¨Çoating spring mechanism. (a) Front view of the CAD model. (b)-(c) Compressing the spring. During compression, the endpoints of the spring are Ô¨Åxed along the leg segments by locking the rotation of each respective pulley via a ratchet and pawl. (d)-(e) Changing the mechanical advantage of the leg over the spring. To change the mechanical advantage, the mechanism extends back to its initial conÔ¨Åguration with the spring locked, allowing the pre-loaded retraction springs to rotate each pulley and simultaneously retract the spring endpoints towards the knee. the endpoints of the spring assembly in unison. During compression, see Fig. 6b-c, the spring is unlocked and applies force on the bearing-mounted endpoints of the spring. Subsequently, the ratchet and pawl lock the rotationof each pulley with respect to their associated knee bracket. This cable-pulley setup then locks the position of the end- points against the force of the spring. Following the spring compression, the spring is locked, and the pre-loaded retraction springs apply a torque on their respective pulleys, see Fig. 6d-e. Since the ratchet and pawl ensure the pulleys can only rotate in one direction, the torque on the pulley from the retraction spring tends to pull the endpoint of the spring assembly towards the knee joint. Therefore, as the mechanism returns to an initial conÔ¨Åguration, the tension in the cables automatically shifts the endpoints of the spring towards the knee for a change in mechanical advantage before the next iteration. V. E XPERIMENTAL VALIDATION In this section, we use the prototype presented in Sec- tion IV to evaluate the theoretical predictions shown in Fig. 4. A. Experimental Setup The prototype, shown in Fig. 5, was mounted on a mechanical breadboard via a linear rail. The ends of each leg segment were connected to lockable carriages. One carriage was locked in place, acting as the ankle joint Ô¨Åxing the foot of the mechanism to the ground, while the other carriage could move freely along the rail like the hip joint. A load cell (MLP-50, Transducer Techniques) was mounted to a Ô¨Çat plate on the free moving carriage to measure the force at the hip joint. B. Experimental Procedure To test the iterative energy accumulation process outlined in Section III-B, the prototype was subject to the following experimental procedure. First, with the spring unlocked, a force was applied to the load cell with constant velocity on the free slider until a pre-deÔ¨Åned maximal force was reached. At that point, force was measured by the load cell. After collecting the force data, the spring was locked axially by tightening the friction clamp and the length of the spring was measured. Next, the slider was unlocked and moved back to its initial position. As described in Fig. 6d-e, moving the slider shifted the spring to a new conÔ¨Åguration that granted greater mechanical ad- vantage over the spring. The process described here was then repeated until maximum spring deformation was achieved. C. Experimental Result Figure 7 displays the experimental result. Figure 7a, shows the force-deÔ¨Çection trend predicted in Section III-B. Force is observed to increase up to the maximum force, then decrease to allow another squat despite the increased potential of the spring. The decrease in force required to enable a new squat is accomplished by the ratchet, pawl, and pulley assembly, described in Section IV- B. The iterative force-deÔ¨Çection behavior (solid lines) is compared to the force required to reach the same spring deÔ¨Çection in a single squat (dashed line). Figure 7b shows the iterative increase in spring potential. The results show that the spring accumulates the same (a) (c)(b)Uncompressed Spring Increased Mechanical Advantagesn+ sn+123(e) Normalized Spring DeflectionNormalized Spring Potential ‚àÜs / ‚àÜsmaxE / E1max 0 0.2 0.4 0.6 0.8 1.0Energy Increment(d) Normalized Hip Force Fl / Fmax 0 0.2 0.4 0.6 0.8 1.00.250.50.751.01.25 Lower Force Energy LossMaximum Force Compressed Spring 0.51.5 Single Squat 1.0sn- FmaxFig. 7. Experiment. (a)-(b) Example of one iteration performed during the experiment (solid lines in (d)). (c) Example of stiffness change between iterations (dashed lines in (d)). (d) Experimental force-deÔ¨Çection data for iterative energy accumulation using a limited force (solid lines). The data is normalized by the maximum force used to compress the spring. The maximum force is compared to the force required to achieve the same spring deÔ¨Çection after one compression (dashed line). (e) Experimental energy accumulation data, normalized by the maximum energy that can be accumulated in a single squat subject to maximum force (solid lines). The energy stored by the spring after three iterations with the limited force is compared to the energy that could be stored after one compression using a larger force (dashed line). energetic potential in three squats (solid lines) as compared to that accumulated in one squat (dashed line). However, similar to what was predicted in Section III-B, the mechanism reduces the amount of force necessary to accumulate the same amount of potential energy. In particular, the 25% decrease in force observed in Fig. 7a resulted in 75% percent more energy accumulated by the spring compared to the energy one could store after a single squat when using the same maximal force. This result follows the same trend observed in Fig. 4. Further, when the device is reset to the initial mechanical advantage x=lt, it yields nearly 25% more assistive force (Fig. 7a) and 75% more energy com- pared to the maximum force used to repetitively compress the spring and the associated energy stored by the spring when compressed by the maximum force in a single squat (Fig. 7b). While the experimental results were similar to the theoret- ical predictions, there were notable differences. For example, the mechanism exhibited roughly 84percent efÔ¨Åciency, due to the energy loss observed during the experiment. This energy loss is shown in Fig. 7a by the black dashed lines not being vertical between iterations. The loss of energy can also be observed in Fig. 7b, where the energy accumulated in the spring Ô¨Årst decreased at the beginning of each new energy accumulation cycle. Two main factors contributed to the observed energy loss; Ô¨Årst, the cables used to couple the retraction springs to the spring assembly were not completely inextensible, and second, the ratchet and pawl only provide discrete locking positions of the spring endpoints along the leg shafts, and therefore introduced some amount of backlash. One can also observe in Fig. 7a that force is not initially zero, despite the zero initial spring potential, see Fig. 7b.This initial force was due to pre-loading of the compression spring to mitigate slack in the pulleys and cables. Also, the forces created by the retraction springs tend to pull the spring endpoints towards the knee, which in turn creates a moment about the knee that wants to straighten the leg. VI. C ONCLUSION In this paper, we studied a model of a human performing a repetitive squat-to-stand task to accumulate energy in a lower-limb spring-leg exoskeleton. This task was used as a representative example of iterative energy accumulation in a spring under force and deformation constraints. We proposed a variable stiffness Ô¨Çoating spring leg mechanism to demonstrate the novel force-deÔ¨Çection and energy storage behavior conjectured in this study. Our theoretical predictions were experimentally validated using a prototype variable stiffness Ô¨Çoating spring mechanism. The prototype supplements the Ô¨Çoating spring technology introduced in one of our prior works [23] by presenting a novel method for automatically adjusting the mechanical advantage of the human or a robot over a spring between compression iterations. The mechanism demonstrated the key novelty proposed in this work: a static gravitational force, provided by the mass of a human or robot, can be used to accumulate energy in a spring independent of the desired amount of energy stored by the spring. The new capability of iterative energy accumulation using a limited static force, enabled by the method and device presented in this paper, could allow humans and robots with limited force capability and limited range of motion to perform physically demanding tasks, for example, to jump higher [15], [20], [24], move faster [25], or lift heavier objects [26], by harnessing the energy stored in assistive springs. The results presented in this work pave the way towards novel designs of robot exoskeletons and spring- driven robots with enhanced energy storage capabilities. REFERENCES [1] D. Paluska and H. Herr, ‚ÄúThe effect of series elasticity on actuator power and work output: Implications for robotic and prosthetic joint design,‚Äù Robotics and Autonomous Systems , vol. 54, no. 8, pp. 667‚Äì 673, 2006. [2] D. J. Braun, F. Petit, F. Huber, S. Haddadin, P. van der Smagt, A. Albu- Sch¬®affer, and S. Vijayakumar, ‚ÄúRobots driven by compliant actuators: Optimal control under actuation constraints,‚Äù IEEE Transactions on Robotics , vol. 29, no. 5, pp. 1085‚Äì1101, 2013. [3] M. Plooij, M. Wisse, and H. Vallery, ‚ÄúReducing the energy consump- tion of robots using the bidirectional clutched parallel elastic actuator,‚Äù IEEE Transactions on Robotics , vol. 32, no. 6, pp. 1512‚Äì1523, 2016. [4] H. Q. Vu, X. Yu, F. Iida, and R. Pfeifer, ‚ÄúImproving energy efÔ¨Å- ciency of hopping locomotion by using a variable stiffness actuator,‚Äù IEEE/ASME Transactions on Mechatronics , vol. 21, no. 1, pp. 472‚Äì 486, 2016. [5] A. Mazumdar, S. J. Spencer, C. Hobart, J. Salton, M. Quigley, T. Wu, S. Bertrand, J. Pratt, and S. P. Buerger, ‚ÄúParallel elastic elements improve energy efÔ¨Åciency on the steppr bipedal walking robot,‚Äù IEEE/ASME Transactions on Mechatronics , vol. 22, no. 2, pp. 898‚Äì 908, 2017. [6] H. Kolvenbach, E. Hampp, P. Barton, R. Zenkl, and M. Hutter, ‚ÄúTowards jumping locomotion for quadruped robots on the moon,‚Äù in2019 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS) , (Macau, China), pp. 5459‚Äì5466, Nov. 2019. [7] K. W. Hollander, R. Ilg, T. G. Sugar, and D. Herring, ‚ÄúAn efÔ¨Åcient robotic tendon for gait assistance,‚Äù Journal of Biomechanical Engi- neering , vol. 128, no. 5, pp. 788‚Äì791, 2006. [8] S. Wang, W. Van Dijk, and H. Van Der Kooij, ‚ÄúSpring uses in exoskeleton actuation design,‚Äù IEEE International Conference on Rehabilitation Robotics , pp. 6‚Äì11, 2011. [9] S. H. Collins, M. Bruce Wiggin, and G. S. Sawicki, ‚ÄúReducing the energy cost of human walking using an unpowered exoskeleton,‚Äù Nature , vol. 522, no. 7555, pp. 212‚Äì215, 2015. [10] D. J. Braun, S. Apte, O. Adiyatov, A. Dahiya, and N. Hogan, ‚ÄúCompliant actuation for energy efÔ¨Åcient impedance modulation,‚Äù in 2016 IEEE International Conference on Robotics and Automation (ICRA) , (Stockholm, Sweden), pp. 636‚Äì641, May 2016. [11] D. J. Braun, V . Chalvet, T. H. Chong, S. S. Apte, and N. Hogan, ‚ÄúVariable stiffness spring actuators for low-energy-cost human aug- mentation,‚Äù IEEE Transactions on Robotics , vol. 35, no. 6, pp. 1435‚Äì 1449, 2019. [12] A. Sutrisno and D. J. Braun, ‚ÄúHow to run 50% faster without external energy,‚Äù Science Advances , vol. 6, no. 13, pp. 1‚Äì11, 2020. [13] W. Shin, G. Park, J. Lee, H. Chang, and J. Kim, ‚ÄúPower transmission design of fast and energy-efÔ¨Åcient stiffness modulation for human power assistance,‚Äù in 2021 IEEE International Conference on Robotics and Automation (ICRA) , (Xi‚Äôan, China), pp. 10877‚Äì10883, May-June 2021. [14] C. Wang, L. Dai, D. Shen, J. Wu, X. Wang, M. Tian, Y . Shi, and C. Su, ‚ÄúDesign of an ankle exoskeleton that recycles energy to assist propulsion during human walking,‚Äù IEEE Transactions on Biomedical Engineering , vol. 69, no. 3, pp. 1212‚Äì1224, 2022. [15] E. W. Hawkes, C. Xiao, R. A. Peloquin, C. Keeley, M. R. Begley, M. T. Pope, and G. Niemeyer, ‚ÄúEngineered jumpers overcome biological limits via work multiplication,‚Äù Nature , vol. 604, pp. 657‚Äì661, 2022. [16] O. Okubo, E. Nakano, and M. Handa, ‚ÄúDesign of a jumping machine using self-energizing spring,‚Äù vol. 1, (Osaka, Japan), pp. 186‚Äì191, Nov. 1996. [17] D. J. Braun, M. Howard, and S. Vijayakumar, ‚ÄúExploiting variable stiffness in explosive movement tasks,‚Äù in Proceedings of Robotics: Science and Systems , (Los Angeles, CA, USA), June-July 2011. [18] A. Velasco, M. Garabini, M. G. Catalano, and A. Bicchi, ‚ÄúSoft actuation in cyclic motions: Stiffness proÔ¨Åle optimization for energy efÔ¨Åciency,‚Äù in 2015 IEEE-RAS 15th International Conference on Humanoid Robots (Humanoids) , (Seoul, Korea (South)), pp. 107‚Äì113, Nov. 2015. [19] D. W. Haldane, M. M. Plecnik, J. K. Yim, and R. S. Fearing, ‚ÄúRobotic vertical jumping agility via Series-Elastic power modulation,‚Äù Science Robotics , vol. 1, no. 1, p. eaag2048, 2016.[20] A. Sutrisno and D. J. Braun, ‚ÄúEnhancing mobility with quasi-passive variable stiffness exoskeletons,‚Äù IEEE Transactions on Neural Systems and Rehabilitation Engineering , vol. 27, no. 3, pp. 487‚Äì496, 2019. [21] C. W. Mathews and D. J. Braun, ‚ÄúDesign of parallel variable stiffness actuators,‚Äù IEEE Transactions on Robotics , pp. 1‚Äì15, 2022. [22] G. B. Hansburg, ‚ÄúPogo stick,‚Äù U.S. Patent 2 793 036 May 21, 1957. [23] S. Y . Kim and D. J. Braun, ‚ÄúNovel variable stiffness spring mechanism: Modulating stiffness independent of the energy stored by the spring,‚Äù inInternational Conference on Intelligent Robots and Systems (IROS) , (Prague, Czech Republic), pp. 8232‚Äì8237, IEEE, Sept. 2021. [24] P. Arm, R. Zenkl, P. Barton, L. Beglinger, A. Dietsche, L. Ferrazzini, E. Hampp, J. Hinder, C. Huber, D. Schaufelberger, F. Schmitt, B. Sun, B. Stolz, H. Kolvenbach, and M. Hutter, ‚ÄúSpacebok: A dynamic legged robot for space exploration,‚Äù in 2019 International Conference on Robotics and Automation (ICRA) , (Montreal, QC, Canada), pp. 6288‚Äì 6294, May 2019. [25] T. Zhang and D. J. Braun, ‚ÄúTheory of fast walking with human-driven load-carrying robot exoskeletons,‚Äù IEEE Transactions on Neural Sys- tems and Rehabilitation Engineering , vol. 30, pp. 1971‚Äì1981, 2022. [26] E. P. Lamers, A. J. Yang, and K. E. Zelik, ‚ÄúFeasibility of a biomechanically-assistive garment to reduce low back loading during leaning and lifting,‚Äù IEEE Transactions on Biomedical Engineering , vol. 65, no. 8, pp. 1674‚Äì1680, 2018",cs.RO,Arxiv
34,Knowledge Infused Learning (K-IL): Towards Deep Incorporation of Knowledge in Deep Learning,"Ugur Kursuncu, Manas Gaur, Amit Sheth",2019-12-01 22:36:14+00:00,http://arxiv.org/pdf/1912.00512v2,"Learning the underlying patterns in data goes beyond instance-based generalization to external knowledge represented in structured graphs or networks. Deep learning that primarily constitutes neural computing stream in AI has shown significant advances in probabilistically learning latent patterns using a multi-layered network of computational nodes (i.e., neurons/hidden units). Structured knowledge that underlies symbolic computing approaches and often supports reasoning, has also seen significant growth in recent years, in the form of broad-based (e.g., DBPedia, Yago) and domain, industry or application specific knowledge graphs. A common substrate with careful integration of the two will raise opportunities to develop neuro-symbolic learning approaches for AI, where conceptual and probabilistic representations are combined. As the incorporation of external knowledge will aid in supervising the learning of features for the model, deep infusion of representational knowledge from knowledge graphs within hidden layers will further enhance the learning process. Although much work remains, we believe that knowledge graphs will play an increasing role in developing hybrid neuro-symbolic intelligent systems (bottom-up deep learning with top-down symbolic computing) as well as in building explainable AI systems for which knowledge graphs will provide scaffolding for punctuating neural computing. In this position paper, we describe our motivation for such a neuro-symbolic approach and framework that combines knowledge graph and neural networks.","Knowledge Infused Learning (K-IL): Towards Deep Incorporation of Knowledge in Deep Learning Ugur Kursuncu, Manas Gaur, Amit Sheth AI Institute, University of South Carolina Columbia, SC, USA {kursuncu@mailbox.sc.edu, mgaur@email.sc.edu, amit@sc.edu} Abstract Learning the underlying patterns in data goes beyond instance-based generalization to external knowledge repre- sented in structured graphs or networks. Deep learning that primarily constitutes neural computing stream in AI has shown signiÔ¨Åcant advances in probabilistically learning la- tent patterns using a multi-layered network of computational nodes (i.e., neurons/hidden units). Structured knowledge that underlies symbolic computing approaches and often supports reasoning, has also seen signiÔ¨Åcant growth in recent years, in the form of broad-based (e.g., DBPedia, Yago) and do- main, industry or application speciÔ¨Åc knowledge graphs. A common substrate with careful integration of the two will raise opportunities to develop neuro-symbolic learning ap- proaches for AI, where conceptual and probabilistic repre- sentations are combined. As the incorporation of external knowledge will aid in supervising the learning of features for the model, deep infusion of representational knowledge from knowledge graphs within hidden layers will further enhance the learning process. Although much work remains, we be- lieve that knowledge graphs will play an increasing role in de- veloping hybrid neuro-symbolic intelligent systems (bottom- up deep learning with top-down symbolic computing) as well as in building explainable AI systems for which knowledge graphs will provide scaffolding for punctuating neural com- puting. In this position paper, we describe our motivation for such a neuro-symbolic approach and framework that com- bines knowledge graph and neural networks. Introduction Data-driven bottom-up machine/deep learning (ML) and top-down knowledge-driven approaches to creating reliable models, have shown remarkable success in speciÔ¨Åc areas, such as search, speech recognition, language translation, computer vision, and autonomous vehicles. On the other hand, they have had limited success in understanding and deciphering contextual information, such as detection of ab- stract concepts in online/ofÔ¨Çine human interactions. Current Equally Contributed Copyright c2020 held by the author(s). In A. Martin, K. Hinkel- mann, H.-G. Fill, A. Gerber, D. Lenat, R. Stolle, F. van Harmelen (Eds.), Proceedings of the AAAI 2020 Spring Symposium on Com- bining Machine Learning and Knowledge Engineering in Practice (AAAI-MAKE 2020). Stanford University, Palo Alto, California, USA, March 23-25, 2020. Use permitted under Creative Commons License Attribution 4.0 International (CC BY 4.0).challenges in the translation of research methods and re- sources into practice often draw from a class of rarely stud- ied problems that do not yield to contemporary bottom-up ML methods. Policymakers and practitioners assert serious usability concerns that constrain adoption, notably in high- consequence domains (Topol 2019). In most cases, data- dependent ML algorithms require high computing power and large datasets, where the crucial signals may still be sparse or ambiguous, threatening precision (Cheng 2018). Moreover, the ML models that are deployed in the ab- sence of transparency and accountability (Rudin 2019) and trained on biased datasets, can lead to grave consequences, such as potential social discrimination and unfair treatment (Olteanu et al. 2019). Further, the potentially severe impli- cations of false alarms in an ML-integrated real-world appli- cation may affect millions of people (Kursuncu et al. 2019a; Kursuncu 2018). The fundamental challenges are common to a majority of problems in a variety of domains with real world impact. SpeciÔ¨Åcally, these challenges are: (1) dependency on large datasets required for bottom-up, data-dependent ML algo- rithms (Valiant 2000; De Palma, Kiani, and Lloyd 2019), (2)bias in the dataset , enabling the model to emphpoten- tially cause social discrimination and unfair treatment, (3) multidimensionality, ambiguity andsparsity , as the data in- volves unconstrained concepts and relationships with mean- ing from different contextual dimensions of the content such as religion, history and politics (Kursuncu et al. 2019a; Kursuncu 2018). Further, the limited number of labeled in- stances available for training may fail to represent the true nature of concepts and relationships in data sets, leading to ambiguous or sparse true signals (4) the lack of information traceability for model explainability , (5) the coverage of in- formation speciÔ¨Åc to a domain that would be missed other- wise, (6) the complexity of model architecture in time and space1, and (7) false alarms in model performance. Conse- quently, we believe standard separate knowledge graph KG and ML methods are vulnerable to deduce or learn spurious concepts and relationships that appear deceptively good on a KG or training datasets, yet do not provide adequate re- 1https://www.theguardian.com/commentisfree/2019/nov/ 16/can-planet-afford-exorbitant-power-demands-of-machine- learningarXiv:1912.00512v2  [cs.AI]  29 Feb 2020 sults when the data set contains contextual and dynamically changing concepts and relations. In this position paper, we describe innovations that will operationalize more abstract models built upon the charac- teristics of a domain to render them computationally ac- cessible within neural network architectures. We propose a neuro-symbolic method, knowledge-infused learning that measures information loss in latent features learned by neu- ral networks through KGs with conceptual and structural relationship information, for addressing the aforementioned challenges. The infusion of knowledge during the represen- tation learning phase raises the following central research questions: (i) How do we decide whether to infuse knowl- edge or not, at a particular stage while learning between layers, and how to quantify knowledge to be infused? (ii) How to merge latent representations between layers with external knowledge representations, and (iii) How to prop- agate the knowledge through the learned latent representa- tion? Considering the future deployment of AI in applica- tions, the potential impact of this approach is signiÔ¨Åcant. As stated in (Karpathy 2015), the deeper the network, the denser the representation and better the learning. A large number of parameters and the layered nature of neural net- works make them modiÔ¨Åable based on speciÔ¨Åc problem characteristics. However, the challenges (1, 3, 5 and 7) make neural networks vulnerable to the sudden appearance of relevant-but-sparse or ambiguous features, in often noisy big data (Valiant 2000; De Palma, Kiani, and Lloyd 2019; Kursuncu et al. 2019b). On the other hand, KG-based ap- proaches structure search within a feature space deÔ¨Åned by domain experts. To compensate for the vulnerability of the aforementioned challenges, incorporating knowledge to the learned representation in principled fashion is required. A promising approach is to base this on a measurable discrep- ancy between the knowledge captured in the neural network and external resources. Computational modeling coupled with knowledge infu- sion in a neural network will disambiguate important con- cepts deÔ¨Åned in a KG with their different semantic meanings through its structural relations. Knowledge infusion will re- deÔ¨Åne the emphasis of sparse but essential, and irrelevant but frequently occurring terms and concepts, boosting re- call without reducing precision. Further, it will provide ex- planatory insight into the model, robustness to noise and re- duce dependency on frequency in the learning process. This neuro-symbolic learning approach will potentially transform existing methods for data analysis and building computa- tional models. While the impact of this approach is trans- ferable (and replicable) to a majority of domains, the ex- plicit implications are particularly apparent for social sci- ence (Kursuncu et al. 2019a) and healthcare domains (Gaur et al. 2018). Related Work As the incorporation of knowledge has been explored in var- ious forms in prior research, in this section, we describe the methodologies and applications speciÔ¨Åcally related to knowledge-infused learning: Neural language models, neu- ral attention models, knowledge based neural networks, allof which utilize external knowledge before/after the repre- sentation has been generated. Neural Language Models (NLMs) NLMs are a category of neural networks capable of learn- ing sequential dependencies in a sentence, and preserve such information while learning a representation. In particular, LSTM (Long Short Term Memory) networks (Hochreiter and Schmidhuber 1997) have emerged from the failure of RNNs (Recurrent Neural Networks) in remembering long- term information. Concerning the loss of contextual infor- mation while learning, (Cho et al. 2014) proposed a context- feed forward LSTM architecture in which context is learned by the previous layer merged with forgetting and modula- tion gates of the next layer. However, if erroneous contex- tual information is learned in previous layers, it is difÔ¨Åcult to correct (Masse, Grant, and Freedman 2018), which is a problem magniÔ¨Åed by noisy data and content sparsity (e.g. Twitter, Reddit, Blogs). As the inclusion of structured knowledge (e.g., Knowl- edge Graphs) in deep learning, improves information re- trieval (Sheth and Kapanipathi 2016), prior research has shown the signiÔ¨Åcance of knowledge in the pursuit of im- proving NLMs, such as in commonsense reasoning (Liu and Singh 2004). The transformer NLMs such as BERT, (De- vlin et al. 2018) (including its variants BioBert and SciB- ERT), are still data dependent. BERT has been utilized in hybrid frameworks such as (Scarlini, Pasini, and Navigli 2020) in the creation of sense embeddings using BabelNet and NASARI. (Liu et al. 2019a) proposed K-BERT, that en- riches the representations by injecting the triples from KGs into the sentence. As this incorporation of knowledge for BERT takes place in the form of attention, we consider the K-BERT as semi-deep infusion (Sheth et al. 2019). Simi- larly, ERNIE (Sun et al. 2019) incorporated external knowl- edge to capture lexical, syntactic, and semantic information, enriching BERT. Neural Attention Models (NAM) NAM (Rush, Chopra, and Weston 2015) highlights par- ticular features that are important for pattern recogni- tion/classiÔ¨Åcation based on a hierarchical architecture. The manipulation of attentional focus is effective in solving real world problems involving massive amounts of data (Halevy, Norvig, and Pereira 2009; Sun et al. 2017). On the other hand, some applications demonstrate the limitation of at- tentional manipulation in a set of problems such as sen- timent (mis)classiÔ¨Åcation (Maurya 2018) and suicide risk (Corbitt-Hall et al. 2016), where feature presence is inher- ently ambiguous, just as in the online radicalization prob- lem (Kursuncu et al. 2019a). For example, in the suicide risk prediction task, references to suicide-related terminol- ogy appear in social media posts of both victims as well as supportive listeners, and the existing NAMs fail to cap- ture semantic relations between terms that help differenti- ate the suicidal user from a supportive user (Gaur et al. 2019). To overcome such limitations in a sentiment clas- siÔ¨Åcation task, (V o et al. 2017) adds sentiment scores into the feature set for enhancing the learned representation and modiÔ¨Åes the loss function to respond to values of the sen- timent score during learning. However, (Sheth et al. 2017; Kho et al. 2019) have pointed out the importance of using domain-speciÔ¨Åc knowledge especially in cases where the problem is complex in nature (Perera et al. 2016). (Bian, Gao, and Liu 2014) has empirically demonstrated the effec- tiveness of combining richer semantics from domain knowl- edge with morphological and syntactic knowledge in the text, by modeling knowledge as an auxiliary task that reg- ularizes the learning of the main objective in a deep neural network. Knowledge-based Neural Networks (Yi et al. 2018) introduced a knowledge-based, recurrent at- tention neural network (KB-RANN) that modiÔ¨Åes the at- tentional mechanism by incorporating domain knowledge to improve model generalization. However, their domain- knowledge is statistically derivable from the input data itself and is analogous to merely learning an interpolation function over the existing data. (Dugas et al. 2009) proposed a modiÔ¨Å- cation in the neural network by adopting Lipschitz functions for its activation function. (Hu et al. 2016) proposed a com- bination of deep neural networks with logic rules by employ- ing knowledge distillation procedure (Hinton, Vinyals, and Dean 2015) of transferring the learned tacit knowledge from larger neural network, to the weights of the smaller neural network in data-limited settings. These studies for incorpo- rating knowledge in a deep learning framework have not in- volved declarative knowledge structures in the form of KGs (e.g., DBpedia) (Chen et al. 2019). However, (Casteleiro et al. 2018) recently showed how the Cardiovascular Disease Ontology (CDO) provided context and reduced ambiguity, improving performance on a synonym detection task. (Shen et al. 2018) employed embeddings of entities in a KG, de- rived through Bi-LSTMs, to enhance the efÔ¨Åcacy of NAMs. (Sarker et al. 2017) presented a conceptual framework for explaining artiÔ¨Åcial neural networks‚Äô classiÔ¨Åcation behavior using background knowledge on the semantic web. (Makni and Hendler ) explained a deep learning approach to learn RDFS2rules from both synthetic and real-world seman- tic web data. They also claim their approach improves the noise-tolerance capabilities of RDFS reasoning. All of the frameworks in the above subsections utilized external knowledge before or after the representation has been generated by NAMs, rather than within the deep neural network as in our approach (Sheth et al. 2019). We propose a learning framework that infuses domain knowledge within the latent layers of neural networks for modeling. Preliminaries Symbolic representation of a domain, besides its probabilis- tic representation, is crucial for neuro-symbolic learning. In our approach, we propose to homogenize symbolic informa- tion from KGs (see Section Knowledge Graphs) and contex- tual neural representations (see Section Contextual Model- ing), in neural networks. 2https://www.w3.org/2001/sw/wiki/RDFS Figure 1: Contextual Dimension Modeling Diagram (Kur- suncu et al. 2019a) Embedding algorithm above (W2V: Word2Vec) can be replaced by other algorithms such as BERT. For each dimension, a speciÔ¨Åc corpus is utilized to create the model and the generated representation of content is concatenated. Generating the three contextual dimension representations of a social media post will emphasize the weights of such essential lexical cues. Knowledge Graphs A Knowledge graph (KG) is a conceptual model of a do- main that stores and structures declarative knowledge in a human and machine-readable format, constituting factual ground truth and embodying a domain ontology of objects, attributes, and relations. KGs rely on symbolic propositions, employing generic conceptual relationships in taxonomies, partonomies and speciÔ¨Åc content with labeled links. Exam- ples include DBpedia, UMLS, and ICD-10. The factual in- formation about the domain is represented in the form of instances (or individuals) of those concepts (or classes) and relationships (Gruber 2008; Sheth and Thirunarayan 2012). Therefore, a domain can be described or modeled through KGs in a way that both computers and humans can under- stand. As KGs differentiate contextual nuances of concepts in the content, they play a key role in our framework with extensive use by several functions. Contextual Modeling Capturing contextual cues in the language is crucial in our approach; hence, we utilize NLMs to generate embeddings of the content. Recent embedding algorithms have emerged to create such representations such as Word2Vec (Goldberg and Levy 2014), GLoVe (Pennington, Socher, and Manning 2014), FastText (Athiwaratkun, Wilson, and Anandkumar 2018) and BERT (Devlin et al. 2018). Modeling context-sensitive problems in different domains (e.g., healthcare, cyber social threats, online extremism and harassment), depends heavily on carefully designed features to extract meaningful information, based on characteristics of the problems and a ground truth dataset. Moreover, iden- tifying these characteristics and differentiating the content requires different levels of granularity in the organization of features. For instance, in the problem of online Islamist ex- tremism, the information being shared in social media posts by users in extremism-related social networks displays an intent that depends on the user‚Äôs type (e.g., recruiter, fol- lower). Hence, as these user types show different character- istics (Kursuncu et al. 2018), for reliable analysis, it is criti- cal to consider different contextual dimensions (Kursuncu et al. 2019a; Kursuncu 2018). Moreover, the ambiguity of di- agnostic terms (e.g., jihad) also mandates representation of terms in different contexts. Hence, to better reÔ¨Çect these dif- ferences, creating multiple models enables us to represent the multiple contextual dimensions for a reliable analysis. Figure 1 details the contextual dimension modeling work- Ô¨Çow. A Proposed Comprehensive Approach Although the existing research (Gaur et al. 2018; Bhatt et al. 2018a) shows the contribution of incorporating external knowledge in ML, this incorporation mostly takes place be- fore or after the actual learning process (e.g., feature extrac- tion, validation); thus remaining shallow. We believe that deep knowledge infusion, within the hidden layers of neu- ral networks, will greatly improve the performance by: (i) reducing false alarm and information loss, (ii) boosting re- call without sacriÔ¨Åcing precision, (iii) providing Ô¨Åner gran- ular representation, (iv) enabling explainability (Islam et al. 2019; Kursuncu et al. 2019c) and (v) reducing bias. SpeciÔ¨Å- cally, we believe that it will become a critical and integral component of AI models that are integrated in deployed tools, e.g, in healthcare, where domain knowledge is cru- cial and indispensable in decision making processes. For- tunately, these domains are rich in terms of their respec- tive machine-readable knowledge resources, such as manu- ally curated medical KGs (e.g., UMLS (McInnes, Pedersen, and Pakhomov 2009), ICD-10 (Brouch 2000) and DataMed (Ohno-Machado et al. 2017)). In our prior research (Gaur et al. 2018), we utilized ML models coupled with these KGs to predict mental health disorders among 20 Mental Disorders (deÔ¨Åned in the DSM-5) for Reddit posts. Typical approaches for such predictions employ word embeddings, such as Word2Vec, resulting in sub-optimal performance when they are used in domain-speciÔ¨Åc tasks. We have in- corporated knowledge into the embeddings of Reddit posts by (i) using Zero Shot learning (Palatucci et al. 2009), (ii) modulating (e.g., re-weighting) their embeddings, similar to NAMs, and obtained a signiÔ¨Åcant reduction in the false alarm rate, from 13% (without knowledge) to 2.5% (with knowledge). In another study, we have leveraged the domain knowledge in KGs to validate model weights that explain di- verse crowd behavior in the Fantasy Premier League partic- ipants (FPL) (Bhatt et al. 2018b). However, very little previ- ous work has tried to integrate such functional knowledge toan existing deep learning framework. We propose to further develop an innovative deep knowledge-infused learning approach that will reveal pat- terns that are missed by traditional approaches because of sparse feature occurrence, feature ambiguity and noise. This approach will support the following integrated aims: (i) In- fusion of Declarative Domain Knowledge in a Deep Learn- ing framework, and (ii) Optimal Sub-Knowledge Graph Creation and Evolution. The overall architecture in Figure 2 guides our proposed research on these two aims. Our methods will disambiguate important concepts deÔ¨Åned in the respective KGs with their different semantic meanings through its structural relations. Knowledge infusion will re- deÔ¨Åne the emphasis of sparse-but-essential , and irrelevant- but-frequently-occurring terms and concepts, boosting recall without reducing precision. Knowledge-Infused Learning Each layer in a neural network architecture produces a la- tent representation of the input vector ( ht). The infusion of knowledge during the representation learning phase raises the following central research questions: R1: How do we decide whether to infuse knowledge or not, at a particular stage while learning between layers, and how to quantify knowledge to be infused? R2: How to merge latent repre- sentations between layers with external knowledge represen- tations, and R3: How to propagate the knowledge through the learned latent representation? We propose to deÔ¨Åne two functions to address these two questions: Knowledge-Aware Loss Function (K-LF) andKnowledge Modulation Function (K-MF) , respectively. ConÔ¨Ågurations of neural networks can be designed in var- ious ways depending on the problem. As our aim is to in- fuse knowledge within the neural network, such an opera- tion can take place (i) before the output layer (e.g., Soft- Max), (ii) between hidden layers (e.g., reinforcing the gates of an NLM layer, modulating the hidden states of NLM lay- ers, Knowledge-driven NLM dropout and recurrent dropout between layers). To illustrate (i), we describe our initial ap- proach to neural language models that infuses knowledge before the output layer, which we believe will shed the light towards a reliable and robust solution with more research and rigorous experimentations. Seeded Sub-Knowledge Graph The Seeded Sub- Knowledge Graph, is a subset of KGs, which participate broadly in our technical approach. Generic KGs (e.g., DBpedia (Bizer et al. 2009), YAGO2 (Hoffart et al. 2013), Freebase (Bollacker et al. 2008)) may contain over a million entities and close to a billion relationships. Using the entire graph of linked data on the web can cause; (1) unnecessary computation and (2) noise due to irrelevant knowledge, and has sometimes failed to beneÔ¨Åt intelli- gent application (Roy, Park, and Pan 2017). However, real-world problems are domain-speciÔ¨Åc and require only a relevant (sub) portion of the full graph. Creation of a Seeded Sub-KG (Lalithsena 2018) based on a ground truth dataset is needed, to represent a particular domain using information-theoretic approaches (e.g., KL divergence) Figure 2: Overall Architecture: Contextual representations of data are generated, and domain knowledge ampliÔ¨Åes the signiÔ¨Å- cance of speciÔ¨Åc important concepts that are missed in the learning model. ClassiÔ¨Åcation error determines the need for updating a Seeded SubKG with more relevant knowledge, resulting in a Seeded SubKG that is more reÔ¨Åned and informative to our model. and probabilistic soft logic (Kimmig et al. 2012). Further, a sub-graph discovery approach (Cameron et al. 2015; Lalithsena 2018) can also be used utilizing probabilistic graphical models (e.g., deep belief networks, conditional random Ô¨Åelds). In our approach, the Seeded SubKG will be updated with more knowledge based on difference between the learned representation and relevant knowledge repre- sentation from the KG (see Section Differential Knowledge Engine). Ke: Knowledge Embedding Creation Representation of knowledge in the Seeded SubKG will be generated as embedding vectors. SpeciÔ¨Åc contextual dimension models and/or more generic models can be utilized to create an em- bedding of each concept and their relations in the Seeded SubKG. Unlike traditional approaches that compute the rep- resentation of each concept in the KGs by simply taking an average of embedding vectors of concepts, we leverage the existing structural information of the graph. This procedure is formally deÔ¨Åned: Ke=X ij[Ci;Cj]O Dij (1) whereKeis the representation of the concepts enriched by the relationships in the Seeded-KG, ( Ci,Cj) is the rele- vant pair of concepts in the Seeded-KG, Dijis the distance measure (e.g., Least Common Subsumer (Baader, Sertkaya, and Turhan 2007)) between the two concepts CiandCj. Novel methods will further be examined building upon this initial approach above as well as existing tools that include TRANS-E (Bordes et al. 2013), TRANS-H (Wang et al. 2014), and HOLE (Nickel et al. 2016) for the creation of embeddings from KGs. Knowledge Infusion Layer In a many-to-one NLM (Shivakumar et al. 2018) network with Thidden layers, theTthlayer contains the learned representation before theoutput layer. The output layer (e.g., SoftMax) of the NLM model estimates the error to be back-propagated. As the techniques for knowledge infusion between hidden layers or just before the output layers will be explored, in this sub- section, we explain the Knowledge Infusion Layer (K-IL) which takes place just before the output layer. Algorithm 1 Routine for Infusion of Knowledge in NLMs 1:procedure KNOWLEDGE INFUSION 2:Data :NLM type;#Epochs; #Iter;K e 3:Output :  !MT 4: forne=1 to #Epochs do 5:  !hT,   !hT 1 TrainingNLM( NLM Type ,#Iter) 6: while (DKL(   !hT 1jj !Ke) DKL(  !hTjj !Ke)>)do 7: hT (Whk(  !hT !Ke) +bhk) 8: Whk Whk-kr(K-LF ) 9:  !MT   !hTWhk 10: return:  !MT Algorithm 1 takes the type of neural language model, number of epochs, iterations and the seeded knowledge graph embedding Keas input, and returns a knowledge in- fused representation of the hidden state MT. In line 4, the infusion of knowledge takes place after each epoch without obstructing the learning of the vanilla NLM model and is ex- plained in lines 5-10. Within the knowledge infusion process (lines 7-9), we optimize the loss function in equation 2 with convergence condition deÔ¨Åned as the reduction in the dif- ference between the DKLofhTandhT 1in the presence ofKe. Considering the vanilla structure of a NLM (Greff et al. 2017), MTis utilized by the fully connected layer for classiÔ¨Åcation. To illustrate an initial approach in Figure 3, we use LSTMs as NLMs in our neural network. K-IL functions add an additional layer before the output layer of our proposed Figure 3: Inner Mechanism of the Knowledge Infusion Layer neural network architecture. This layer takes the latent vec- tor (hT 1) of the penultimate layer, the latent vector of the last hidden layer ( hT) and the knowledge embedding ( Ke), as input. In this layer, we deÔ¨Åne two particular functions that will be critical for merging the latent vectors from the hidden layers and the knowledge embedding vector from the KG. Note that the dimensions of these vectors are the same be- cause they are created from the same models (e.g., contex- tual models), which makes the merge operation of those vec- tors possible and valid. K-LF: Knowledge-Aware Loss Function In neural net- works, hidden layers may de-emphasize important patterns due to the sparsity of certain features during learning, which causes information loss. In some cases, such patterns may not even appear in the data. However, such relations or pat- terns may be deÔ¨Åned in KGs with even more relevant knowl- edge. We call this information gap between the learned rep- resentation of the data and knowledge representation as dif- ferential knowledge . Information loss in a learning process is relative to the distribution that suffered the loss. Hence, we propose a measure to determine the differential knowledge and guide the degree of knowledge infusion in learning. As our initial approach to this measure, we developed a two- state regularized loss function by utilizing Kullback Leibler (KL) divergence. Our choice of KL divergence measure is largely inÔ¨Çuenced by the Markov assumptions made in lan- guage modeling and have been highlighted in (Longworth 2010). The K-LF measure estimates the divergence between the hidden representations ( hT 1;hT) and knowledge rep- resentation ( Ke), to determine the differential knowledge to be infused. Formally we deÔ¨Åne it as: arg min(~hT 1;~hT;~Ke)K-LF, where hT 1is an input for convergence constraint. K-LF =minDKL(~hTjj~Ke); s:t:DKL(~hTjj~Ke)<DKL(~hT 1jj~Ke)(2) We minimize the relative entropy for information loss tomaximize the information gain from the knowledge repre- sentation (e.g., Ke). We will compute differential knowl- edge (rK-LF) through such optimization approach; thus, the computed differential knowledge will also determine the degree of knowledge to be infused. rK-LF will be com- puted in the form of embedding vectors, and the dimensions fromKewill be preserved. K-MF: Knowledge Modulation Function We need to merge the differential knowledge representation with the partially learned representation. However, this operation cannot be done arbitrarily as the vector spaces of both repre- sentations are different both in dimension and distribution if not same (Duman Àáci¬¥c and Blockeel 2017). We explain an ini- tial approach for the K-MF to modulate the learned weight matrix of the neural network with the hidden vector through an appropriate operation (e.g., Hadamard pointwise multi- plication). This operation at the Tthlayer can be formulated as: Equation for Whk=Whk krK-LF, where Whkis the learned weight matrix infusing knowledge, kis learn- ing momentum (Sutskever et al. 2013), rK-LF is differ- ential knowledge. The weight matrix ( Whk) is computed through the learning epochs utilizing the differential knowl- edge embedding (rK-LF). Then we merge Whkwith the hidden vector hTthrough the K-MF. Considering that we use Hadamard pointwise multiplication as our initial ap- proach, we formally deÔ¨Åne the output MTof K-MF as: This operation at the Tthlayer can be formulated as: ~MT=~hTWhk(3) where MTis Knowledge-Modulated representation, hT is the hidden vector and Whkis the learned weight matrix infusing knowledge. Further investigations of techniques for K-MF constitutes a central research topic for the research community. Differential Knowledge Engine In deep neural networks, each epoch generates an error that is back-propagated until the model reaches a saddle point in the local minima, and the error is reduced in each epoch. The error indicates the difference between probabilities of actual and predicted labels, and this difference can be used to enrich the Seeded SubKG in our proposed knowledge- infused learning (K-IL) framework. In this subsection, we discuss the sub-knowledge graph operations that are based on the difference between the learned representation of our knowledge-infused model (MT), and the representation of the relevant sub-knowledge graph from the KG, which we name the differential sub- knowledge graph. We deÔ¨Åne a Knowledge Proximity func- tion to generate the Differential Sub-knowledge Graph , and Update Seeded SubKG to insert the differential sub- knowledge graph into the Seeded SubKG. Knowledge Proximity Upon the arrival of the learned representation from the knowledge-infused learning model, we query the KG for retrieving related information to the respective data point. In this particular step, it is important to Ô¨Ånd the optimal proximity between the concept and its related concepts. For example, from the ‚ÄúSouth Carolina‚Äù concept, we may traverse the surrounding concepts with a varying number of hops (empirically decided). Finding the optimal number of hops towards each direction from the concept in question is still an open research question. As we Ô¨Ånd optimal proximity of a particular concept in the KG, we propagate KG based on the proximity starting from the concept in question. Differential SubKG Once we obtain the SubKG from the graph propagation, we create a differential SubKG that will reÔ¨Çect the difference in knowledge from the Seeded SubKG. For this procedure, research is needed to formulate the prob- lem using variational autoencoders to extract a differential subKG (Dkg) and, we believe it will provide missing infor- mation in the Seeded-KG. Update function The differential subKG generated as a result of minimizing knowledge proximity is considered as an input factual graph to the update procedure. As a re- sult, the procedure dynamically evolves the Seeded subKG with missing information from differential subKG. We pro- pose to utilize Lyapunov stability theorem (Liu, Zhang, and Chen 2014) and Zero Shot learning to update the Seeded- KG usingDkg.Dkgand Seeded-KG represent two knowl- edge structures requiring a process of transferring the knowl- edge from one structure to another (Hamaguchi et al. 2017). We deÔ¨Åne this process as generation of semantic mapping weights that encodes and decodes the two semantic spaces, utilizing the Lyapunov stability constraint and Sylvester op- timization approach: Given two semantic spaces belonging to a domain D (e.g., online extremism, mental health), we tend to attain an equilibrium position deÔ¨Åned as: jjSkg WDkgjj2 F=jjWSkg Dkgjj2 F (4) jj:jjFrepresents Frobenius norm and is a proportional- ity constant belong to R. Equation 4 reÔ¨Çects Lyapunov sta- bility theorem and to achieve such a stable state we deÔ¨Åne our optimization function as follows: L=min(jjSkg WD kgjj2 F jjWSkg Dkgjj2 F); >0;W2RXR (5) Equation 5 is solvable using Sylvester optimization and its derivation is deÔ¨Åned in a recent study (Gaur et al. 2018). Applications for K-IL ArtiÔ¨Åcial intelligence models will be widely deployed in real world decision making processes in the foreseeable future, once the challenges described in Section 1, are overcome. As we argue that the incorporation of external structured knowl- edge will address these challenges, it will beneÔ¨Åt various application domains such as social and health sciences, au- tomating processes that require knowledge and intelligence. SpeciÔ¨Åcally, it will have a potentially signiÔ¨Åcant impact onpredictive analysis of online communications such as misin- formation and extremism, conversational modeling, and dis- ease prediction. As predicting online extremism is challenging and false alarms create serious implications potentially affecting mil- lions of individuals, (Kursuncu et al. 2019a) showcased that the (shallow) infusion of external domain-speciÔ¨Åc knowl- edge improves precision, reducing potential social discrim- ination. Further, in prediction of mental health diseases de- Ô¨Åned in DSM-5, (Gaur et al. 2018) shallow knowledge infu- sion reduces false alarms by 30%. On the other hand, conver- sational models pose an important application area as (Liu et al. 2019b) proposed a conversation framework where the fusion of KGs and text mutually reinforce each other to gen- erate knowledge-aware responses, improving the model in generalizability and explainability. In another study, (Young et al. 2018) integrated commonsense knowledge into the conversational models selecting the most appropriate re- sponse. While machine learning Ô¨Ånds many application ar- eas in medicine for disease prediction, large data is not al- ways available. In this case knowledge-infused learning gen- erates more representative features thereby avoiding overÔ¨Åt- ting. A study (Tan et al. 2019) on early diagnosis of lung cancer using computed tomography images, infused knowl- edge in the form of expert-curated features into the learn- ing process through CNN. Despite the small data set, the enriched feature space in their knowledge-infused learning process improved sensitivity and speciÔ¨Åcity of the model. In contrast to the applications above, we believe that the deep infusion of external knowledge within latent layers will enhance the coverage of the information being learned by the model based on KGs. Hence, this will provide better generalizability, reduction in bias and false alarms, disam- biguation, less reliance on large data, explainability, reliabil- ity and robustness, to the real world applications in critical aforementioned domains with signiÔ¨Åcant impact. Conclusion Combining deep learning and knowledge graphs in a hybrid neural-symbolic learning framework will further enhance performance and accelerate the convergence of the learn- ing processes. SpeciÔ¨Åcally, the impact of this improvement in very sensitive domains such as health and social science, will be signiÔ¨Åcant with respect to their implications for real- world deployment. Adoption of the tools that automate tasks that require knowledge and intelligence, and are traditionally done by humans, will improve with the help of this frame- work that marries deep learning and knowledge graph tech- niques. SpeciÔ¨Åcally, we envision that the infusion of knowl- edge as described in this framework will capture information for the corresponding domain in Ô¨Åner granularity of abstrac- tion. We believe that this approach will provide reliable so- lutions to the problems faced in deep learning, as described in Sections 1 and 5. Hence, in real world applications, re- solving these issues with both knowledge graphs and deep learning in a hybrid neuro-symbolic framework will greatly contribute to fulÔ¨Ålling AI‚Äôs promise. Acknowledgement We acknowledge partial support from the National Science Foundation (NSF) award CNS-1513721: ‚ÄúContext-Aware Harassment Detection on Social Media. Any opinions, con- clusions or recommendations expressed in this material are those of the authors and do not necessarily reÔ¨Çect the views of the NSF. References Athiwaratkun, B.; Wilson, A. G.; and Anandkumar, A. 2018. Probabilistic fasttext for multi-sense word embed- dings. arXiv preprint arXiv:1806.02901 . Baader, F.; Sertkaya, B.; and Turhan, A.-Y . 2007. Comput- ing the least common subsumer wrt a background terminol- ogy. Journal of Applied Logic 5(3):392‚Äì420. Bhatt, S.; Gaur, M.; Bullemer, B.; Shalin, V .; Sheth, A.; and Minnery, B. 2018a. Enhancing crowd wisdom using explainable diversity inferred from social media. In 2018 IEEE/WIC/ACM International Conference on Web Intelli- gence (WI) , 293‚Äì300. IEEE. Bhatt, S.; Gaur, M.; Bullemer, B.; Shalin, V . L.; Sheth, A. P.; and Minnery, B. 2018b. Enhancing crowd wisdom us- ing explainable diversity inferred from social media. In IEEE/WIC/ACM International Conference on Web Intelli- gence . Santiago, Chile: IEEE. Bian, J.; Gao, B.; and Liu, T.-Y . 2014. Knowledge-powered deep learning for word embedding. In Joint European con- ference on machine learning and knowledge discovery in databases , 132‚Äì148. Springer. Bizer, C.; Lehmann, J.; Kobilarov, G.; Auer, S.; Becker, C.; Cyganiak, R.; and Hellmann, S. 2009. Dbpedia-a crystal- lization point for the web of data. Web Semantics: science, services and agents on the world wide web 7(3):154‚Äì165. Bollacker, K.; Evans, C.; Paritosh, P.; Sturge, T.; and Taylor, J. 2008. Freebase: a collaboratively created graph database for structuring human knowledge. In Proceedings of the 2008 ACM SIGMOD international conference on Manage- ment of data , 1247‚Äì1250. AcM. Bordes, A.; Usunier, N.; Garcia-Duran, A.; Weston, J.; and Yakhnenko, O. 2013. Translating embeddings for model- ing multi-relational data. In Advances in neural information processing systems , 2787‚Äì2795. Brouch, K. L. 2000. Where in the world is icd-10? Where in the World Is ICD-10?/AHIMA, American Health Informa- tion Management Association . Cameron, D.; Kavuluru, R.; RindÔ¨Çesch, T. C.; Sheth, A. P.; Thirunarayan, K.; and Bodenreider, O. 2015. Context-driven automatic subgraph creation for literature-based discovery. Journal of biomedical informatics 54:141‚Äì157. Casteleiro, M. A.; Demetriou, G.; Read, W.; Prieto, M. J. F.; Maroto, N.; Fernandez, D. M.; Nenadic, G.; Klein, J.; Keane, J.; and Stevens, R. 2018. Deep learning meets on- tologies: experiments to anchor the cardiovascular disease ontology in the biomedical literature. Journal of biomedical semantics 9(1):13.Chen, B.; Hao, Z.; Cai, X.; Cai, R.; Wen, W.; Zhu, J.; and Xie, G. 2019. Embedding logic rules into recurrent neural networks. IEEE Access 7:14938‚Äì14946. Cheng, J. 2018. Ai reasoning systems: Pac and applied methods. arXiv preprint arXiv:1807.05054 . Cho, K.; Van Merri√´nboer, B.; Gulcehre, C.; Bahdanau, D.; Bougares, F.; Schwenk, H.; and Bengio, Y . 2014. Learning phrase representations using rnn encoder-decoder for statis- tical machine translation. arXiv preprint arXiv:1406.1078 . Corbitt-Hall, D. J.; Gauthier, J. M.; Davis, M. T.; and Witte, T. K. 2016. College students‚Äô responses to suicidal content on social networking sites: an examination using a simulated facebook newsfeed. Suicide and Life-Threatening Behavior 46(5):609‚Äì624. De Palma, G.; Kiani, B.; and Lloyd, S. 2019. Random deep neural networks are biased towards simple functions. In Advances in Neural Information Processing Systems , 1962‚Äì 1974. Devlin, J.; Chang, M.-W.; Lee, K.; and Toutanova, K. 2018. Bert: Pre-training of deep bidirectional transformers for lan- guage understanding. arXiv preprint arXiv:1810.04805 . Dugas, C.; Bengio, Y .; B√©lisle, F.; Nadeau, C.; and Gar- cia, R. 2009. Incorporating functional knowledge in neural networks. Journal of Machine Learning Research 10(Jun):1239‚Äì1262. Duman Àáci¬¥c, S., and Blockeel, H. 2017. Demystifying rela- tional latent representations. In International Conference on Inductive Logic Programming , 63‚Äì77. Springer. Gaur, M.; Kursuncu, U.; Alambo, A.; Sheth, A.; Daniu- laityte, R.; Thirunarayan, K.; and Pathak, J. 2018.  let me tell you about your mental health! contextualized classiÔ¨Å- cation of reddit posts to dsm-5 for web-based intervention. Gaur, M.; Alambo, A.; Sain, J. P.; Kursuncu, U.; Thirunarayan, K.; Kavuluru, R.; Sheth, A.; Welton, R.; and Pathak, J. 2019. Knowledge-aware assessment of severity of suicide risk for early intervention. In The World Wide Web Conference , 514‚Äì525. Goldberg, Y ., and Levy, O. 2014. word2vec explained: de- riving mikolov et al.‚Äôs negative-sampling word-embedding method. arXiv preprint arXiv:1402.3722 . Greff, K.; Srivastava, R. K.; Koutn√≠k, J.; Steunebrink, B. R.; and Schmidhuber, J. 2017. Lstm: A search space odyssey. IEEE transactions on neural networks and learning systems 28(10):2222‚Äì2232. Gruber, T. 2008. Ontology, encyclopedia of database sys- tems, ling liu and m. Tamer √ñzsu (Eds.) . Halevy, A.; Norvig, P.; and Pereira, F. 2009. The unreason- able effectiveness of data. IEEE Intelligent Systems 24(2):8‚Äì 12. Hamaguchi, T.; Oiwa, H.; Shimbo, M.; and Matsumoto, Y . 2017. Knowledge transfer for out-of-knowledge-base en- tities: a graph neural network approach. arXiv preprint arXiv:1706.05674 . Hinton, G.; Vinyals, O.; and Dean, J. 2015. Distill- ing the knowledge in a neural network. arXiv preprint arXiv:1503.02531 . Hochreiter, S., and Schmidhuber, J. 1997. Long short-term memory. Neural computation 9(8):1735‚Äì1780. Hoffart, J.; Suchanek, F. M.; Berberich, K.; and Weikum, G. 2013. Yago2: A spatially and temporally enhanced knowl- edge base from wikipedia. ArtiÔ¨Åcial Intelligence 194:28‚Äì61. Hu, Z.; Ma, X.; Liu, Z.; Hovy, E.; and Xing, E. 2016. Harnessing deep neural networks with logic rules. arXiv preprint arXiv:1603.06318 . Islam, S. R.; Eberle, W.; Bundy, S.; and Ghafoor, S. K. 2019. Infusing domain knowledge in ai-based black box models for better explainability with application in bankruptcy pre- diction. arXiv preprint arXiv:1905.11474 . Karpathy, A. 2015. The unreasonable effectiveness of re- current neural networks. Andrej Karpathy blog 21. Kho, S. J.; Padhee, S.; Bajaj, G.; Thirunarayan, K.; and Sheth, A. 2019. Domain-speciÔ¨Åc use cases for knowledge- enabled social media analysis. In Emerging Research Chal- lenges and Opportunities in Computational Social Network Analysis and Mining . Springer. 233‚Äì246. Kimmig, A.; Bach, S.; Broecheler, M.; Huang, B.; and Getoor, L. 2012. A short introduction to probabilistic soft logic. In Proceedings of the NIPS Workshop on Probabilistic Programming: Foundations and Applications , 1‚Äì4. Kursuncu, U.; Gaur, M.; Lokala, U.; Illendula, A.; Thirunarayan, K.; Daniulaityte, R.; Sheth, A.; and Arpinar, I. B. 2018.  what‚Äôs ur type? contextualized classiÔ¨Åcation of user types in marijuana-related communications using com- positional multiview embedding. In IEEE/WIC/ACM Inter- national Conference on Web Intelligence(WI‚Äô18) . Kursuncu, U.; Gaur, M.; Castillo, C.; Alambo, A.; Thirunarayan, K.; Shalin, V .; Achilov, D.; Arpinar, I. B.; and Sheth, A. 2019a. Modeling islamist extremist com- munications on social media using contextual dimensions: Religion, ideology, and hate. Proceedings of the ACM on Human-Computer Interaction 3(CSCW):151. Kursuncu, U.; Gaur, M.; Lokala, U.; Thirunarayan, K.; Sheth, A.; and Arpinar, I. B. 2019b. Predictive analysis on twitter: Techniques and applications. In Emerging Research Challenges and Opportunities in Computational Social Net- work Analysis and Mining . Springer. 67‚Äì104. Kursuncu, U.; Gaur, M.; Thirunarayan, K.; and Sheth, A. 2019c. Explainability of medical ai through domain knowl- edge. Ontology Summit 2019, Medical Explanation . Kursuncu, U. 2018. Modeling the Persona in Persua- sive Discourse on Social Media Using Context-aware and Knowledge-driven Learning . Ph.D. Dissertation, University of Georgia. Lalithsena, S. 2018. Domain-speciÔ¨Åc knowledge extraction from the web of data . Ph.D. Dissertation, Wright State Uni- versity. Liu, H., and Singh, P. 2004. Commonsense reasoning in and over natural language. In International Conference on Knowledge-Based and Intelligent Information and Engi- neering Systems , 293‚Äì306. Springer. Liu, W.; Zhou, P.; Zhao, Z.; Wang, Z.; Ju, Q.; Deng, H.; andWang, P. 2019a. K-bert: Enabling language representation with knowledge graph. arXiv preprint arXiv:1909.07606 . Liu, Z.; Niu, Z.-Y .; Wu, H.; and Wang, H. 2019b. Knowl- edge aware conversation generation with explainable rea- soning over augmented graphs. In Proceedings of the 2019 Conference on Empirical Methods in Natural Lan- guage Processing and the 9th International Joint Confer- ence on Natural Language Processing (EMNLP-IJCNLP) , 1782‚Äì1792. Liu, M.; Zhang, D.; and Chen, S. 2014. Attribute rela- tion learning for zero-shot classiÔ¨Åcation. Neurocomputing 139:34‚Äì46. Longworth, C. 2010. Kernel methods for text-independent speaker veriÔ¨Åcation . Ph.D. Dissertation, University of Cam- bridge. Makni, B., and Hendler, J. Deep learning for noise-tolerant rdfs reasoning. Masse, N. Y .; Grant, G. D.; and Freedman, D. J. 2018. Alle- viating catastrophic forgetting using context-dependent gat- ing and synaptic stabilization. Proceedings of the National Academy of Sciences 115(44):E10467‚ÄìE10475. Maurya, A. K. 2018. Learning low dimensional word based linear classiÔ¨Åers using data shared adaptive bootstrap aggre- gated lasso with application to imdb data. arXiv preprint arXiv:1807.10623 . McInnes, B. T.; Pedersen, T.; and Pakhomov, S. V . 2009. Umls-interface and umls-similarity: open source software for measuring paths and semantic similarity. In AMIA An- nual Symposium Proceedings , volume 2009, 431. American Medical Informatics Association. Nickel, M.; Rosasco, L.; Poggio, T. A.; et al. 2016. Holo- graphic embeddings of knowledge graphs. In AAAI , vol- ume 2, 3‚Äì2. Ohno-Machado, L.; Sansone, S.-A.; Alter, G.; Fore, I.; Grethe, J.; Xu, H.; Gonzalez-Beltran, A.; Rocca-Serra, P.; Gururaj, A. E.; Bell, E.; et al. 2017. Finding useful data across multiple biomedical data repositories using datamed. Nature genetics 49(6):816. Olteanu, A.; Castillo, C.; Diaz, F.; and Kiciman, E. 2019. Social data: Biases, methodological pitfalls, and ethical boundaries. Frontiers in Big Data 2:13. Palatucci, M.; Pomerleau, D.; Hinton, G. E.; and Mitchell, T. M. 2009. Zero-shot learning with semantic output codes. In Advances in neural information processing sys- tems, 1410‚Äì1418. Pennington, J.; Socher, R.; and Manning, C. 2014. Glove: Global vectors for word representation. In Proceedings of the 2014 conference on empirical methods in natural lan- guage processing (EMNLP) , 1532‚Äì1543. Perera, S.; Mendes, P. N.; Alex, A.; Sheth, A. P.; and Thirunarayan, K. 2016. Implicit entity linking in tweets. In International Semantic Web Conference , 118‚Äì132. Springer. Roy, A.; Park, Y .; and Pan, S. 2017. Learning domain- speciÔ¨Åc word embeddings from sparse cybersecurity texts. arXiv preprint arXiv:1709.07470 . Rudin, C. 2019. Stop explaining black box machine learn- ing models for high stakes decisions and use interpretable models instead. Nature Machine Intelligence 1(5):206‚Äì215. Rush, A. M.; Chopra, S.; and Weston, J. 2015. A neural at- tention model for abstractive sentence summarization. arXiv preprint arXiv:1509.00685 . Sarker, M. K.; Xie, N.; Doran, D.; Raymer, M.; and Hit- zler, P. 2017. Explaining trained neural networks with semantic web technologies: First steps. arXiv preprint arXiv:1710.04324 . Scarlini, B.; Pasini, T.; and Navigli, R. 2020. Sensembert: Context-enhanced sense embeddings for multilingual word sense disambiguation. In Proc. of AAAI . Shen, Y .; Deng, Y .; Yang, M.; Li, Y .; Du, N.; Fan, W.; and Lei, K. 2018. Knowledge-aware attentive neural network for ranking question answer pairs. In The 41st International ACM SIGIR Conference on Research & Development in In- formation Retrieval , 901‚Äì904. ACM. Sheth, A., and Kapanipathi, P. 2016. Semantic Ô¨Åltering for social data. IEEE Internet Computing 20(4):74‚Äì78. Sheth, A., and Thirunarayan, K. 2012. Semantics empow- ered web 3.0: managing enterprise, social, sensor, and cloud- based data and services for advanced applications. Synthesis Lectures on Data Management 4(6):1‚Äì175. Sheth, A.; Perera, S.; Wijeratne, S.; and Thirunarayan, K. 2017. Knowledge will propel machine understand- ing of content: Extrapolating from current examples. arXiv preprint arXiv:1707.05308 . Sheth, A.; Gaur, M.; Kursuncu, U.; and Wickramarachchi, R. 2019. Shades of knowledge-infused learning for enhanc- ing deep learning. IEEE Internet Computing 23(6):54‚Äì63. Shivakumar, P. G.; Li, H.; Knight, K.; and Georgiou, P. 2018. Learning from past mistakes: Improving automatic speech recognition output via noisy-clean phrase context modeling. arXiv preprint arXiv:1802.02607 . Sun, C.; Shrivastava, A.; Singh, S.; and Gupta, A. 2017. Re- visiting unreasonable effectiveness of data in deep learning era. In Computer Vision (ICCV), 2017 IEEE International Conference on , 843‚Äì852. IEEE. Sun, Y .; Wang, S.; Li, Y .; Feng, S.; Chen, X.; Zhang, H.; Tian, X.; Zhu, D.; Tian, H.; and Wu, H. 2019. Ernie: En- hanced representation through knowledge integration. arXiv preprint arXiv:1904.09223 . Sutskever, I.; Martens, J.; Dahl, G.; and Hinton, G. 2013. On the importance of initialization and momentum in deep learning. In International conference on machine learning , 1139‚Äì1147. Tan, J.; Huo, Y .; Liang, Z.; and Li, L. 2019. Expert knowledge-infused deep learning for automatic lung nod- ule detection. Journal of X-ray science and technology 27(1):17‚Äì35. Topol, E. J. 2019. High-performance medicine: the conver- gence of human and artiÔ¨Åcial intelligence. Nature medicine 25(1):44‚Äì56. Valiant, L. G. 2000. Robust logics. ArtiÔ¨Åcial Intelligence 117(2):231‚Äì253.V o, K.; Pham, D.; Nguyen, M.; Mai, T.; and Quan, T. 2017. Combination of domain knowledge and deep learn- ing for sentiment analysis. In International Workshop on Multi-disciplinary Trends in ArtiÔ¨Åcial Intelligence , 162‚Äì 173. Springer. Wang, Z.; Zhang, J.; Feng, J.; and Chen, Z. 2014. Knowl- edge graph embedding by translating on hyperplanes. In AAAI , volume 14, 1112‚Äì1119. Yi, K.; Jian, Z.; Chen, S.; Chen, Y .; and Zheng, N. 2018. Knowledge-based recurrent attentive neural network for trafÔ¨Åc sign detection. arXiv preprint arXiv:1803.05263 . Young, T.; Cambria, E.; Chaturvedi, I.; Zhou, H.; Biswas, S.; and Huang, M. 2018. Augmenting end-to-end dialogue systems with commonsense knowledge. In Thirty-Second AAAI Conference on ArtiÔ¨Åcial Intelligence","cs.AI, cs.CL, cs.LG",Arxiv
35,Domain Knowledge Aided Explainable Artificial Intelligence for Intrusion Detection and Response,"Sheikh Rabiul Islam, William Eberle, Sheikh K. Ghafoor, Ambareen Siraj, Mike Rogers",2019-11-22 04:36:46+00:00,http://arxiv.org/pdf/1911.09853v2,"Artificial Intelligence (AI) has become an integral part of modern-day security solutions for its ability to learn very complex functions and handling ""Big Data"". However, the lack of explainability and interpretability of successful AI models is a key stumbling block when trust in a model's prediction is critical. This leads to human intervention, which in turn results in a delayed response or decision. While there have been major advancements in the speed and performance of AI-based intrusion detection systems, the response is still at human speed when it comes to explaining and interpreting a specific prediction or decision. In this work, we infuse popular domain knowledge (i.e., CIA principles) in our model for better explainability and validate the approach on a network intrusion detection test case. Our experimental results suggest that the infusion of domain knowledge provides better explainability as well as a faster decision or response. In addition, the infused domain knowledge generalizes the model to work well with unknown attacks, as well as opens the path to adapt to a large stream of network traffic from numerous IoT devices.","Domain Knowledge Aided Explainable ArtiÔ¨Åcial Intelligence for Intrusion Detection and Response Sheikh Rabiul Islam, William Eberle, Sheikh K. Ghafoor, Ambareen Siraj, Mike Rogers Departmemt of Computer Science Tennessee Technological University Cookeville, U.S. sislam42@students.tntech.edu, fweberle, sghafoor, asiraj, mrogers g@tntech.edu Abstract ArtiÔ¨Åcial Intelligence (AI) has become an integral part of modern-day security solutions for its ability to learn very complex functions and handling ‚ÄúBig Data‚Äù. However, the lack of explainability and interpretability of successful AI models is a key stumbling block when trust in a model‚Äôs pre- diction is critical. This leads to human intervention, which in turn results in a delayed response or decision. While there have been major advancements in the speed and performance of AI-based intrusion detection systems, the response is still at human speed when it comes to explaining and interpreting a speciÔ¨Åc prediction or decision. In this work, we infuse pop- ular domain knowledge (i.e., CIA principles) in our model for better explainability and validate the approach on a network intrusion detection test case. Our experimental results sug- gest that the infusion of domain knowledge provides better explainability as well as a faster decision or response. In ad- dition, the infused domain knowledge generalizes the model to work well with unknown attacks, as well as opens the path to adapt to a large stream of network trafÔ¨Åc from numerous IoT devices. 1 Introduction Most of the recent advancements in ArtiÔ¨Åcial Intelligence (AI), and more speciÔ¨Åcally Machine Learning (ML), have come from complex non-linear models such as Deep Neu- ral Networks, Ensemble Methods, and Support Vector Ma- chines. These models are also known as ‚Äúblack box‚Äù models as they are complex to interpret and explain, which arises from their inherent non-linear capabilities, multiple param- eters, and very complex transformations. In addition, some algorithms require a very large number of samples (i.e., large training sets) to work efÔ¨Åciently, where it is very difÔ¨Åcult to Ô¨Ågure out what the model learned from the dataset and which portion of the data set has more inÔ¨Çuence on the out- put (Kabul 2018). Due to these challenges, the black box models lacks ex- plainability and interpretability, ultimately resulting in a lack Copyright c2020 held by the author(s). In A. Martin, K. Hinkel- mann, H.-G. Fill, A. Gerber, D. Lenat, R. Stolle, F. van Harmelen (Eds.), Proceedings of the AAAI 2020 Spring Symposium on Com- bining Machine Learning and Knowledge Engineering in Practice (AAAI-MAKE 2020). Stanford University, Palo Alto, California, USA, March 23-25, 2020. Use permitted under Creative Commons License Attribution 4.0 International (CC BY 4.0).of trust in the model and prediction, as well as possibly leading to a delayed human response/decision. This limita- tion also involves ethical issues in a few sensitive domains like Ô¨Ånance (e.g., credit approval), health care (e.g., dis- ease diagnosis), and security (e.g., identifying target). For instance, AI and ML are becoming an integral part of se- curity solutions and defense. To mitigate the unethical use of AI as well as to promote the responsible use of AI sys- tems, various governments have started taking different pre- cautionary initiatives. Recently, the European Union imple- mented the rule of ‚Äúright of explanation‚Äù, where a user can ask an explanation of algorithmic decision (Goodman and Flaxman 2017). In addition, more recently the US govern- ment introduced a new bill, the ‚ÄúAlgorithmic Accountability Act‚Äù, which would require companies to assess their ma- chine learning systems for bias and discrimination, with a need to take corrective measures (Wyden 2019). The U.S. Department of Defense (DoD) has identiÔ¨Åed explainability as a key stumbling block in the adoption of AI-based solu- tions in many of their projects. Their DARPA division has invested $2 billion on an Explainable ArtiÔ¨Åcial Intelligence (XAI) program (Turek 2019; Rankin 2019). Network intrusions are a common cyber-crime activity, estimated to cost around $6 trillion annually in damages by 2021 (Doyle 2019). In order to combat these attacks, an In- trusion Detection System (IDS) is a security system to mon- itor network and computer systems (Hodo et al. 2016). Re- search in AI-based IDS has shown promising results (Hodo et al. 2016), (Shone et al. 2018), (Kim et al. 2016), (Javaid et al. 2016), (Li, Sun, and Wang 2012), and has become an in- tegral part of security solutions due to its capability of learn- ing complex, nonlinear functions and analyzing large data streams from numerous connected devices. A recent survey by (Dong and Wang 2016) suggests that deep learning-based methods are accurate and robust to a wide range of attacks and sample sizes. However, there are concerns regarding the sustainability of current approaches (e.g., intrusion detec- tion/prevention systems) when faced with the demands of modern networks and the increasing level of human inter- action (Shone et al. 2018). In the age of IoT and Big Data, an increasing number of connected devices and associated streams of network trafÔ¨Åc have exacerbated the problem. In addition, the delay in detection/response increases the chance of zero day exploitation , whereby a previously un-arXiv:1911.09853v2  [cs.AI]  22 Feb 2020 known vulnerability is just discovered by the attacker, and the attacker immediately initiates an attack. However, im- proved explainability of an AI model could quicken inter- pretation, making it more feasible to accelerate the response . Explainability is the extent to which the internal working mechanism of the machine or AI system can be explained in human terms. And interpretability is the extent to which a cause and effect (i.e., understanding of what‚Äôs happen- ing) can be observed within a system. In other words, in- terpretability is a form of abstract knowledge about what‚Äôs happening and explainability is about the detailed step-by- step knowledge of what is happening (Montavon, Samek, and M ¬®uller 2018), (Turek 2019). However, while some lit- erature treat interpretability and explainability as the same, they are actually two different traits of a model. Just because a model can be interpreted does not mean that it can be ex- plained, and explainability needs to go beyond the algorithm (Lipton 2016). Explainability and interpretability of a model could be achieved before, during, and after modeling. From the lit- erature, we Ô¨Ånd that interpretability in pre-modeling (i.e., before modeling) is under-focused. (Miller 2018) argue that explainability should incorporate knowledge from a differ- ent domain such as philosophy, psychology, and cognitive science, so that the explanation is not just based on the re- searcher‚Äôs intuition of what constitutes a good explanation. However, we also Ô¨Ånd that the use of domain knowledge for explainability is under-focused. In this work, we introduce a novel approach for an AI-based explainable intrusion de- tection and response system, and demonstrate its effective- ness by infusing a popular network security principle (CIA principle) into the model for better explainability and inter- pretability of the decision. We use a recent and comprehensive IDS dataset (CI- CIDS2017) which covers necessary criteria with com- mon updated attacks such as DDoS, Brute Force, XSS, SQL Injection, InÔ¨Åltration, Portscan, and Botnet. We in- fuse CIA principle in the model that provides a concise and interpretable set of important features. Computer se- curity rest on CIA principles, Cstands for conÔ¨Ådential- ity‚Äîconcealment of information or resources, Istands for integrity ‚Äîtrustworthiness of data or resources, and Astands foravailability ‚Äîability to use the information or resource desired (Matt and others 2006). For instance, security com- promise in conÔ¨Ådentiality could happen through eavesdrop- ping unencrypted data, compromise in integrity could hap- pen through an unauthorized attempt to change data, and the compromise in availability could happen through the delib- erate arrangement of denial to access data or service. We also convert the domain knowledge infused features into three features C, I, and A by quantitatively comput- ing compromises associated with each of those for each record. Output expressed as these generalized and newly constructed set of features provides better explainability with negligible compromises in performance. We also found that generalization provides more resiliency against un- known attacks. In summary, our contributions in this work are as follows: (1) we demonstrate a method for the collection and use ofdomain knowledge in an intrusion detection/response sys- tem; (2) we introduce a way to bring popular security prin- ciples (e.g., CIA principles) to aid in interpretability and ex- plainability; (3) our experimental results show that infusing domain knowledge into ‚Äúblack box‚Äù models can make them better explainable with little or no compromise in perfor- mance ; and (4) domain knowledge infusion increases gener- alizability, which leads to better resiliency against unknown attack. We start with a background of related work (Section 2) followed by a description of our proposed approach, an in- tuitive description of standard supervised algorithms, and an overview of the dataset (Section 3) used in this work. In Sec- tion 4, we describe our experiments, followed by Section 5 which contains discussion on results from the experiments. We conclude with limitations and future work in Section 6. 2 Background Research in Explainable ArtiÔ¨Åcial Intelligence (XAI) is a re- emerging Ô¨Åeld, after the earlier work of (Chandrasekaran, Tanner, and Josephson 1989), (Swartout and Moore 1993), and (Swartout 1985). Previous work focused on primarily explaining the decision process of knowledge-based sys- tems and expert systems. The classical learning paradigm Explanation-Based Learning (EBL), introduced in the early ‚Äô80s, can also be regarded as a precursor of explainability. EBL involves learning a problem-solving technique by ob- serving and analyzing solutions to a speciÔ¨Åc problem (De- Jong 1981), (Mitchell, Keller, and Kedar-Cabelli 1986). The main reason for the renewed interest in XAI research has stemmed from recent advancements in AI and ML and their application to a wide range of areas, as well as concerns over unethical use and undesired biases in the models. In addi- tion, recent concerns and laws by different governments are necessitating more research in XAI. (Yang and Shafto 2017), use Bayesian Teaching , where a smaller subset of examples is used to train the model in- stead of the whole dataset. The subset of examples is chosen by domain experts as the examples are most relevant to the problem of interest. However, for this purpose, choosing the right subset of examples in the real-world is challenging. (Lei, Barzilay, and Jaakkola 2016) propose an approach for sentiment analysis where a subset of text from the whole text is selected as the rationale for the prediction. In addition, the selected subset of text is concise and sufÔ¨Åcient enough to act as a substitute for the original text, and still capable of making the correct prediction. Although their approach out- performs available attention-based models (from deep learn- ing) with variable-length input (e.g., a model for document summarization) , it is limited to only text analysis. When the explanation is based on feature importance, it is necessary to keep in mind that features that are globally im- portant may not be important in the local context, and vice versa (Ribeiro, Singh, and Guestrin 2016). (Ribeiro, Singh, and Guestrin 2016) propose a novel explanation technique capable of explaining the prediction of any classiÔ¨Åer (i.e., in the model agnostic way) with a locally interpretable model (i.e., in the vicinity of the instance being predicted) around the prediction. Their concern is on two issues: (1) whether the user should trust the prediction of the model and act on that, and (2) whether the user should trust a model to be- have reasonably-well when deployed. In addition, they in- volve human judgment in their experiment (i.e., human in the loop) to decide whether to trust the model or not. (Kim et al. 2017) propose a concept attribution-based ap- proach (i.e., sensitivity to concept) that provides an inter- pretation of the neural network‚Äôs internal state in terms of human-friendly concepts. Their approach, Testing with CAV (TCAV) , quantiÔ¨Åes the prediction‚Äôs sensitivity to the high di- mensional concept. For example, a user-deÔ¨Åned set of exam- ples that deÔ¨Ånes the concept ‚Äústriped‚Äù, TCA V can quantify the inÔ¨Çuence of ‚Äústriped‚Äù in the prediction of ‚Äúzebra‚Äù as a single number. To learn the high dimensional concepts they use a Concept Activation Vector (CA V) ‚ÄîCA Vs are learned from training a linear classiÔ¨Åer that can distinguish between the activations produced by a particular concept‚Äôs examples and examples in any layer. Most of these approaches try to Ô¨Ånd out how the predic- tion deviates from the base/average scenario. Lime (Ribeiro, Singh, and Guestrin 2016) tries to generate an explana- tion by locally (i.e., using local behavior) approximating the model with an interpretable model (e.g., decision trees, lin- ear model). However, it is limited by the use of the only linear model to approximate the local behavior. (Lundberg and Lee 2017) propose ‚ÄúSHAP‚Äù which uniÔ¨Åes seven previ- ous approaches: LIME (Ribeiro, Singh, and Guestrin 2016), DeepLIFT (Shrikumar, Greenside, and Kundaje 2017), Tree Interpreter (Ando 2019), QII (Datta, Sen, and Zick 2016), Shapley sampling values ( ÀáStrumbelj and Kononenko 2014), Shapley regression values (Lipovetsky and Conklin 2001), and Layer-wise relevance propagation (Bach et al. 2015) to make the explanation of prediction for any machine learn- ing model. While SHAP comes with theoretical guarantees about consistency and local accuracy from game theory, it needs to run many evaluations of the original model to esti- mate a single vector of feature importance (Lundberg 2019). ELI5 also uses the LIME algorithm internally for explana- tions. In addition, ELI5 is not truly model agnostic, mostly limited to tree-based and other parametric or linear models. Furthermore, Tree Interpreter is limited to only tree-based approaches (e.g., Random Forest, Decision Trees). AI-based IDSs have continued to show promising perfor- mance (Hodo et al. 2016),(Shone et al. 2018),(Kim et al. 2016),(Javaid et al. 2016),(Li, Sun, and Wang 2012). (Shone et al. 2018) propose an approach in combination of both shallow (Random Forest) and deep learning (Auto Encoder), capable of analyzing a wide range of network trafÔ¨Åc, out- performing mainstream Deep Belief Networks (DBN). In a literature survey on traditional IDS vs deep learning IDS by (Dong and Wang 2016), they suggest deep learning-based methods provide better accuracy for a wide range of sam- ples sizes and a variety of network trafÔ¨Åc or attacks (Dong and Wang 2016). However, in all of the previous work, there are still long training times and a reliance on a human oper- ator (Shone et al. 2018). However, incorporating domain knowledge for explain- ability has garnered little attention. Previously, we intro- duced the concept of infusing domain knowledge (Islam etal. 2019), albeit for bankruptcy prediction with a limited fo- cus. (Miller 2018) have argued that incorporating knowl- edge from different domains will provide better explain- ability. In addition, (Kim et al. 2017) use the prediction‚Äôs sensitivity to high dimensional concepts (e.g., the concept ‚Äústriped‚Äù to ‚ÄúZebra‚Äù) for explaining the prediction. Further- more, both LIME (Ribeiro, Singh, and Guestrin 2016) and SHAP (Lundberg and Lee 2017) use a simpliÔ¨Åed input map- ping‚Äîmapping the original input to a simpliÔ¨Åed set of input. To the best of our knowledge, none of the models incorpo- rate domain knowledge with a focus towards better explain- ability and interpretability. Although our proposed concep- tual model comes with a negligible compromise in accuracy, it comes with better explainability and interpretibility, and scalability to big data problems. 3 Methodology Figure 1: Proposed Technique 3.1 Proposed Approach The proposed approach consists of two components: a fea- ture generalizer , which gives a generalized feature set with the help of domain knowledge in two different ways; and an evaluator that produces and compares the results from the ‚Äúblack box‚Äù model for multiple conÔ¨Ågurations of features: domain knowledge infused features, newly constructed fea- tures from domain knowledge infused features, selected fea- tures, and all features. 3.2 Feature Generalizer The feature generalizer (Figure 1, top portion), takes orig- inal features of the dataset ( X1,X2, .... Xn2Xwhere X is the set of all features) and infuse domain knowledge to Table 1: Mapping of network attack with related component of CIA principles Attack Related component of CIA DoS GoldenEye A Heartbleed C DoS hulk A DoS Slowhttp A DoS slowloris A SSH-Patator C FTP-Patator C Web Attack C, I, A InÔ¨Çitration C Bot C, I, A PortScan C DDoS A produce/re-construct a concise and better interpretable fea- ture set ( X1‚Äô,X2‚Äô, ..... Xk‚Äô2X‚Äôwhere X‚Äôis the universal set of original/transformed/constructed features, but here k is much smaller than n) in two different ways: Feature Mapping As stated earlier, we use CIA princi- ples as domain knowledge, which stands for conÔ¨Ådentiality , integrity , and availability . We analyze all types of attacks for associated compromises in each component of CIA prin- ciples (see Table 1). The Heartbleed vulnerability is related to a compromise in conÔ¨Ådentiality as an attacker could gain access to the memory of the systems protected by the vul- nerable version of the OpenSSL. A Web attack (e.g., Sql in- jection) is related to a compromise in conÔ¨Ådentiality andin- tegrity (e.g., read/write data using injected query), and avail- ability (e.g., Ô¨Çooding the database server with injected com- plex queries like a cross join). InÔ¨Åltration attack is related to a compromise in conÔ¨Ådentiality as it normally exploits soft- ware vulnerability (e.g., Adobe Acrobat Reader) to create a backdoor and reveal information (e.g., IPs). Port scan attack is related to a compromise in conÔ¨Ådentiality as the attacker sends packets with varying destination ports to learn the ser- vices and operating systems from the reply. All DoS and DDoS attacks are related to a compromise in availability as it aims to hamper the availability of service or data. Further- more, SSH patator andFTP patator are brute force attacks and are usually responsible for a compromise in conÔ¨Åden- tiality . Botnet (i.e., robot network‚Äîa network of malware- infected computers) could provide a remote shell, Ô¨Åle up- load/download option, screenshot capture option, and key logging options which has potential for all of the conÔ¨Åden- tiality, integrity, and availability related compromises. Furthermore, from the feature ranking of the origi- nal dataset provider (Sharafaldin, Lashkari, and Ghorbani 2018), for each type of attack, we take the top three fea- tures according to their importance (i.e., feature importance from Random Forest Regressor) and calculate the mapping (Table 2) with related compromises under CIA principles. For example, the feature Average Packet Size is renamed as Avg Packet Size - A where -A indicates that it is a key feature for the compromise of availability (see Table 2). To get thismapping between feature and associated compromises, we Ô¨Årst Ô¨Ånd the mapping between an attack and related com- promises (from Table 1, formulated as Equation 2). In other words, Formula 1 gives the name of the associated attack where the feature is in the top three feature to identify that particular attack and Formula 2 gives associated compro- mises in C, I, or A from the attack name. Thus, with the help of domain knowledge, we keep 22 features (see Table 2) out of a total of 78 features. We will refer to these features as the domain features . The feature descriptions in Table 2 are taken from the data processing software‚Äôs website (net 2019). f(feature )!attack (1) f(attack )!C; I; orA (2) Feature Construction We also construct three new fea- tures, C, I, and A, from the domain features by quantita- tively calculating compromises associated with each of the domain features. For that purpose, we calculate the correla- tion coefÔ¨Åcient vector of the dataset to understand whether the increase in the value of a feature has a positive or nega- tive impact on the target variable. We then convert the corre- lation coefÔ¨Åcient (a.k.a coeff ) vector V in to a 1 or -1 based on whether the correlation coefÔ¨Åcient is positive or negative accordingly. We also group the domain features and corre- sponding coeff tuple into three groups. Using formula 3, 4, and 5, we aggregate each group (from C, I, and A) of domain features into the three new features C, I, and A. We also scale all feature values from 0 to 1 before starting the aggregation process. During the aggregation for a particular group (e.g., C), if the correlation coefÔ¨Åcient vector (e.g., V i) for a feature (e.g., C i) of that group has a negative value, then the product of the feature value and the correlation coefÔ¨Åcient for that feature is deducted, and vice-versa if positive. In addition, when a feature is liable for more than one compromise, the feature value is split between the associated elements of CIA principles. C=nX i=0CiVi (3) I=nX i=0IiVi (4) A=nX i=0AiVi (5) 3.3 Evaluator The task of the evaluator (Figure 1, bottom side) is to ex- ecute (supervised models or algorithms) and compare the performance (in detecting malicious and benign records) of four different types of conÔ¨Ågurations of features, as follows: (1) using all features, (2) using selected features (selection is done by feature selection algorithm), (3) using domain knowledge infused features, and (4) using newly constructed features C, I, and A from domain knowledge infused fea- tures. In addition, the evaluator performs the following two tests: Table 2: Mapping of feature with related component of CIA principles Feature Description In top 3 features of attack Renamed feature ACK Flag Count Number of packets with ACK SSH-Patator ACK Flag Count - C Active Mean Mean time a Ô¨Çow was active before becoming idle DoS Slowhttp, InÔ¨Åltration Active Mean - AC Active Min Minimum time a Ô¨Çow was active before becoming idle DoS Slowhttp Active Min - A Average Packet Size Average size of packet DDoS Avg Packet Size - A Bwd IAT Mean Mean time between two packets sent in the backward direction DoS slowloris Bwd IAT Mean - A Bwd Packet Length Std Standard deviation size of packet in backward direction DoS Hulk, DoS GoldenEye, DDoS, Heartbleed, DoS HulkBwd Packet Length Std - AC Bwd Packets/s Number of backward packets per second Bot, PortScan Bwd Packets/s - CIA Fwd IAT Mean Mean time between two packets sent in the forward direction DoS slowloris Fwd IAT Mean - A Fwd IAT Min Minimum time between two packets sent in the forward direction DoS slowloris, DoS GoldenEye Fwd IAT Min - A Fwd Packet Length Mean Mean size of packet in forward direction Benign, Bot Fwd Packet Length Mean - CIA Fwd Packets/s Number of forward packets per second FTP-Patator Fwd Packets/s - C Fwd PSH Flags Number of times the PSH Ô¨Çag was set in packets travelling in the for- ward direction (0 for UDP)FTP-Patator Fwd PSH Flags - C Flow Duration Duration of the Ô¨Çow in Microsecond DDoS, DoS slowloris, DoS Hulk, DoS Slowhttp, InÔ¨Åltration, Heart- bleedFlow Duration - AC Flow IAT Mean Mean inter-arrival time of packet DoS GoldenEye Flow IAT Mean - A Flow IAT Min Minimum inter-arrival time of packet DoS GoldenEye Flow IAT Min - A Flow IAT Std Standard deviation inter-arrival time of packet DDoS, DoS Slowhttp, DoS Hulk Flow IAT Std - A InitWin bytes forward The total number of bytes sent in initial window in the backward direc- tionWeb Attack Init Win Bytes Fwd - CIA PSH Flag Count Number of packets with PUSH PortScan PSH Flag Count - C SubÔ¨Çow Fwd Bytes The average number of packets in a sub Ô¨Çow in the forward direction Benign, SSH-Patator, Web Attack, Bot, Heartbleed, InÔ¨ÅltrationSubÔ¨Çow Fwd Bytes - CIA SYN Flag Count Number of packets with SYN FTP-Patator SYN Flag Count - C Total Length of Fwd Packets Total size of packet in forward direction Benign, SSH-Patator, Web Attack, Bot, Heartbleed, InÔ¨ÅltrationTotal Length of Fwd Packets - CIA 1. Explainability Test: The purpose of this test is to discover the comparative advantages or disadvantages of incorpo- rating domain knowledge in the experiment; and 2. Generalizability Test: The purpose of this test is to an- alyze how different approaches perform in unknown or unseen attack detection. We delete all training records for a particular attack one at a time and investigate the perfor- mance of the model on the same test set, which includes records from unknown or unseen attacks. Details of these tests are described in Section 4. 3.4 Algorithms We use six different algorithms for predicting malicious records: one of those is a probabilistic classiÔ¨Åer based on Naive Bayes theorem, and the remaining Ô¨Åve are supervised ‚Äúblack box‚Äù models. The algorithm descriptions are taken from our previous work (Islam et al. 2019). ArtiÔ¨Åcial Neural Network (ANN) An ArtiÔ¨Åcial Neural Network is a non-linear model, capable of mimicking hu- man brain functions to some extent. It consists of an input layer, one or multiple hidden layer(s), and the output layer. Each layer consists of multiple neurons that help to learn the complex pattern. Each subsequent layer learns more abstract concepts before it Ô¨Ånally merges into the output layer. Support Vector Machine (SVM) The Support Vector Machine (SVM) was Ô¨Årst introduced by (Boser, Guyon, and Vapnik 1992) and has been used for many supervised classi- Ô¨Åcation tasks. In addition to linear classiÔ¨Åcation, the model can learn an optimal hyperplane that separates instances of different classes using a highly non-linear implicit mapping of input vectors in high dimensional feature space (i.e., ker- nel trick) (Hooman et al. 2016). When the number of sam- ples is too high (i.e., millions) then it is very costly in terms of computation time.Random Forest (RF) A Random Forest is a tree-based ensemble technique developed by (Breiman 2001) for the supervised classiÔ¨Åcation task. In RF, many trees are gener- ated from the bootstrapped subsamples (i.e., random sample drawn with replacement) of the training data. In each tree, the splitting attribute is chosen from a smaller random sub- set of attributes of that tree (i.e., the chosen split attribute that is the best among that random subset). This random- ness helps to make trees less correlated as correlated trees make the same kinds of prediction errors and can overÔ¨Åt the model. In less correlated trees, a few trees may be wrong but many others will be right and as a group the trees can move in the right direction as the output from all the trees are averaged for the Ô¨Ånal prediction. Extra Trees (ET) Extremely Randomized Trees or Ex- tra Trees (ET) is a tree-based ensemble technique simialr to RF. The only difference is in the process of splitting attribute selections and determining the threshold (cutoff) value, both are chosen in an extremely random fashion (Is- lam, Ghafoor, and Eberle 2018). Similar to RF, a random subset of features are taken into consideration for the split selection, but instead of choosing the most discriminative cut off threshold, ET cut off thresholds are set to random values. Thus, the best of these randomly chosen values is set as the threshold for the splitting rule (ens 2019) on a partic- ular node. Unlike DT, RF has multiple trees which leads to a reduced variance. However, bias is introduced, as a subset of the whole feature set is chosen for each tree instead of all features. ET was proposed by (Geurts, Ernst, and We- henkel 2006), and has achieved a state of the art perfor- mance in some anomaly/intrusion detection research (Islam 2018), (Islam, Eberle, and Ghafoor 2018),(Islam, Ghafoor, and Eberle 2018). Gradient Boosting (GB) (Friedman 2001), generalized Adaboost to a Gradient Boosting algorithm to allow a vari- ety of loss function. Here the shortcoming of weak learners is identiÔ¨Åed using the gradient instead of highly weighted data points as in Adaboost. Gradient Boosting (GB) is a classiÔ¨Åer/regression model in the form of an ensemble of weak prediction models, such as Decision Trees. It works sequentially like the AdaBoost algorithm, in that each sub- sequent model tries to minimize the loss function (i.e., Mean Squared Error) by paying special focus on instances that were hard to get right in the previous model. Naive Bayes (NB) Naive Bayes algorithm is based on Bayes Theorem, which was formulated in the seventeenth century. It is a supervised, simple, and comparatively fast algorithm based on statistics. In a real-world problem, it is unusual that all features are independent. However, Naive Bayes assumes conditional independence among features and surprisingly works well in many cases. It also requires a small amount of training data to estimate the necessary pa- rameters (nai 2019). This assumption of Naive Bayes helps to avoid lots of computations (e.g., computing the condi- tional probability for each feature with others) and makes it a faster algorithm. Besides, the avoidance of a condi- tional probability calculation helps (the class conditional feature distribution can be independently estimated as one- dimensional distribution) in Big Data problems where the curse of dimensionality is a concern. However, NB is a bad estimator of a probabilty (Zhang 2004). We use the Bernoulli Naive Bayes (Manning, Raghavan, and 2010) for our exper- iments where each feature is assumed to be binary-valued. 3.5 Data In this work, we use a recent and comprehensive IDS dataset namely CICIDS2017, published in 2017, covers necessary criteria with common updated attacks such as DoS, DDoS, Brute Force, XSS, SQL Injection, InÔ¨Åltration, Portscan, and Botnet. In fact, this dataset is created to eliminates the shortcomings (e.g., lack of trafÔ¨Åc diversity and vol- ume, lack of variety of attacks, anonymized packet infor- mation, and out of date) of previous well known IDS dataset such as DARPA98, KDD99, ISC2012, ADFA13, DEFCON, CAIDA, LBNL, CDX, Kyoto, Twente, and UMASS since 1998. This is a labeled dataset containing 78 network traf- Ô¨Åc features (some features are listed in Table 2) extracted and calculated from pcap Ô¨Åle using CICFlowMeter soft- ware (Lashkari et al. 2017) for all benign and intrusive Ô¨Çows (Sharafaldin, Lashkari, and Ghorbani 2018) . This new IDS dataset includes seven common updated family of attacks satisfying real-world criteria, also publicly available at here: https://www.unb.ca/cic/datasets/ids-2017.html . Each record of the dataset is labeled by the particular type of attack. We make a new feature ‚ÄúClass‚Äù, which is the tar- get feature. We set the value of the ‚ÄúClass‚Äù attribute to 1 for all records labeled as any of 14 types of attacks, as those are malicious/intrusive, and set the value to 0 for the re- maining records as those are benign. Following that, in the whole dataset, there are total 2,830,743 records for 14 differ- ent attacks, 2,273,097 are benign and 557,646 are malicious. Approximately 24.5% of the records are malicious, giving us an imbalanced dataset which impacts the performance(e.g., bias to the class of majority samples) of some machine learning algorithms. To overcome this problem, we use the well-known oversampling technique SMOTE (Chawla et al. 2002) to oversample the minority class. In (Dong and Wang 2016), the author uses SMOTE to overcome the issue in their empirical study on the comparison of traditional vs deep learning-based IDS. SMOTE creates synthetic samples rather than just oversampling with replacement. The minor- ity class is oversampled by creating new examples along with the line segments joining any or all of k nearest mi- nority samples, where k is chosen based on the percentage of oversampling required (i.e., hyperparameter to the algo- rithm) (Chawla et al. 2002). 4 Experiments 4.1 Experimental Setup We execute the experiments in a GPU enabled Linux ma- chine with 12GB of RAM and core i7 processor. All super- vised machine learning algorithms are implemented using the Python-based Scikit-learn (sci 2019) library. In addition, we use TensorÔ¨Çow (ten 2019) for the ArtiÔ¨Åcial Neural Net- work. Due to resource limitations, instead of using the whole dataset, we take a stratiÔ¨Åed sample of the data which is big enough (i.e., 300K records) for a single GPU enabled com- modity machine. We make the sampled dataset available to the research community at (sam 2019). Furthermore, we use 70% of the data for training the models and kept 30% of the data as a holdout set to test the model. We conÔ¨Årm the target class had the same ratio in both sets. To avoid the adverse ef- fect of class imbalance in classiÔ¨Åcation performance, we re- sample the minority class of the training set using SMOTE (Chawla et al. 2002) to balance the dataset. However, we do not re-sample the test set, as real-world data is skewed and oversampling the test set could exhibit an overoptimistic per- formance. We run all supervised machine learning algorithm using four different approaches: 1. With all features: using all 78 features of the dataset with- out discarding any features. 2. With selected features: using Random Forest Regres- sor(adapting with the work of (Sharafaldin, Lashkari, and Ghorbani 2018)) to select important features of the dataset, giving us 50 important features having a nonzero inÔ¨Çuence on the target variable; 3. With domain knowledge infused features: using infused domain knowledge features (see Section 3.2), we will use the term domain features interchangeably to express it in short form; and 4. With newly constructed features from domain knowl- edge infused features: using newly constructed features C, I, and A (see Section 3.2) from domain knowledge infused features, we will use the term domain features- constructed interchangeably to express it in short form. The following are two types of experiments using each of the four feature settings. Table 3: Performance using all features vs selected features Alg. Acc. Prec. Rec. F-score AUC RF-A 0.9987 0.9965 0.9971 0.9968 0.9997 RF-S 0.9986 0.9962 0.9966 0.9964 0.9997 Difference 0.0002 0.0003 0.0006 0.0005 0.0000 ET-A 0.9981 0.9951 0.9951 0.9951 0.9994 ET-S 0.9980 0.9950 0.9950 0.9950 0.9994 Difference 0.0001 0.0002 0.0001 0.0001 0.0000 ANN-A 0.9802 0.9155 0.9908 0.9516 0.9984 ANN-S 0.9740 0.8929 0.9860 0.9372 0.9968 Difference 0.0062 0.0226 0.0047 0.0145 0.0017 SVM-A 0.9109 0.6996 0.9595 0.8092 0.9780 SVM-S 0.8869 0.6433 0.9565 0.7692 0.9746 Difference 0.0239 0.0563 0.0030 0.0400 0.0034 GB-A 0.9960 0.9854 0.9944 0.9899 0.9995 GB-S 0.9957 0.9840 0.9945 0.9892 0.9996 Difference 0.0003 0.0014 (0.0001) 0.0007 (0.0001) NB-A 0.7753 0.4371 0.4888 0.4615 0.8601 NB-S 0.7621 0.4144 0.5019 0.4539 0.8508 Difference 0.0132 0.0228 (0.0131) 0.0076 0.0093 4.2 Explainability Test For this test, we run six supervised algorithms RF, ET, SVM, GB, ANN, and NB using the four described feature settings and report the results Section 5.1. Unlike NB, other classi- Ô¨Åers are ‚Äúblack box‚Äù in nature. NB is a probabilistic classi- Ô¨Åer based on Bayes Theorem with strong conditional inde- pendence assumption among features. The main purpose to include NB in the experiment is the generalizability test. 4.3 Generalizability Test For testing the generalizability of the approach, we train the classiÔ¨Åer without the representative of a particular attack, and test it with the presence of the representative of that par- ticular attack, in order to classify it malicious/benign. To be more speciÔ¨Åc, we delete all records of a particular attack from the training set, train the classiÔ¨Åer with the records of the remaining 13 attacks, and test the classiÔ¨Åer with all 14 attacks. We report the percentage of deleted attacks that are correctly detected as malicious (see Section 5.2). We repeat this one by one for all 14 attacks. We make the source code available to the research community to replicate the experi- ments at (pro 2019). 5 Results The following sections discuss results from the two cate- gories of experiments previously described. 5.1 Findings from Explainability Test Comparing the performance using all features vsselected features , Table 3 shows that models using all features (de- noted with an appended -A, for instance RF-A) tend to show better results in terms of all performance metrics. However, while the difference with the selected features setting is neg- ligible ( <.0007 for RF) for any performance metric, that might be a result of the elimination of features with little signiÔ¨Åcance. In addition, Random Forest outperforms other algorithms SVM, ET, GB, ANN, and NB under this feature setting (i.e., using all features). So we consider the results using all features as a baseline to compare against our pro- posed approach.Table 4: Performance using domain features vs constructed features Alg. Acc. Prec. Rec. F-score AUC RF-D1 0.9973 0.9920 0.9945 0.9932 0.9993 RF-D2 0.9511 0.9446 0.7985 0.8654 0.9572 Difference 0.0463 0.0475 0.1960 0.1278 0.0421 ET-D1 0.9969 0.9913 0.9932 0.9923 0.9989 ET-D2 0.9756 0.9321 0.9448 0.9384 0.9954 Difference 0.0214 0.0592 0.0483 0.0538 0.0036 ANN-D1 0.9497 0.8300 0.9362 0.8799 0.9865 ANN-D2 0.5952 0.3241 0.9721 0.4862 0.7921 Difference 0.3544 0.5059 (0.0359) 0.3937 0.1945 SVM-D1 0.8489 0.5747 0.8968 0.7005 0.9252 SVM-D2 0.7195 0.3739 0.6281 0.4687 0.7886 Difference 0.1294 0.2008 0.2687 0.2318 0.1366 GB-D1 0.9881 0.9513 0.9904 0.9705 0.9986 GB-D2 0.9230 0.7692 0.8701 0.8165 0.9789 Difference 0.0652 0.1821 0.1204 0.1539 0.0198 NB-D1 0.7982 0.4881 0.5028 0.4953 0.8553 NB-D2 0.5591 0.2687 0.7195 0.3913 0.6591 Difference 0.2391 0.2194 (0.2167) 0.1040 0.1962 Before starting the comparison of results from our ap- proach with all features (i.e., baseline), we seek the best feature setting among two domain related feature settings of our proposed approach. In other words, in our attempt to Ô¨Ånd the better approach among using domain knowledge in- fused features vs newly constructed features (C, I, and A) from domain knowledge infused features, we Ô¨Ånd that, in almost all cases, the model with domain knowledge infused features (denoted with an appended -D1, for instance RF- D1) performs better than the counterpart (see Table 4). Al- though for RF, the maximum performance gap is .2 in the recall, for ET that gap is .048 with a similar precision. As the domain features (22 features) contain a lot more detail than the newly constructed features C, I, and A (3 features), it loses few details. In terms of individual algorithms, RF is again a clear winner this time using domain features. Al- though NB and ANN exhibit better recall using constructed features, it comes with compromises in precision. So, over- all we consider the domain features setting as the best over the constructed features. While we know the best feature setting is the all features , as shown in the comparison of all features vsselected fea- tures in the Table 3), we also know the best feature setting domain features from domain features vsconstructed fea- tures (see Table 4). So we further compare the performance of models using the two best settings all features (i.e., base- line) vs domain features . We Ô¨Ånd that, among all models, RF using all features (denoted with an appended -A, for instance RF-A) performs better than all other algorithms (see Ta- ble 5 and Figure 3). Interestingly, RF using domain knowl- edge infused features (denoted with an appended -D1, for instance RF-D1) also shows promising performance. The difference between these two in terms of any performance metrics is negligible ( <.005). In fact, the result of RF us- ing the domain knowledge infused feature settings is better than what (Sharafaldin, Lashkari, and Ghorbani 2018) re- ports using the same dataset. The slight improvement might stem from the experimental settings (e.g., training test set split, re-sampling techniques). Furthermore, in the domain knowledge infused feature setting we are using only 22 fea- tures out of 78 total, where each feature indicates the asso- ciated compromises (e.g., conÔ¨Ådentiality, integrity, or avail- ability), capable of producing better explainable and inter- pretable results compared to the counterpart. The prediction for a particular sample can be represented as: P(D) =b+GX g=0contribution (g) (6) where b is the model average and g is the generalized do- main feature (e.g., ACK Flag Count - C), P(D) is the prob- ability value of the decision. Instead of using contributions from each of the domain features, we can express the output in terms of the contribution from each element of the do- main concept. For that, we need to aggregate contributions from all features into three groups (C, I, and A). This will en- able an analyst to understand the nature of the attack more quickly (Figure 2). For instance, when the greater portion of a feature contribution for a sample is from features tagged with -A (i.e., Availability ) then it might be a DDoS attack, which usually comes with very high compromises in avail- ability of data or service. We use the imlpackage from the programming language Rto generate the breakdown of fea- ture contributions of a particular sample‚Äôs prediction (Figure 2). Figure 2: Breakdown of the prediction for a random sample in terms of C, I, and A. 5.2 Findings from Generalizability Test Recall that the purpose of this test is to test the resiliency against unknown attacks. First, we use Random Forest (RF), the best performing algorithm so far, using all four settings of features. As shown in Table 6 and Figure 4, we see that ex- cept for the constructed feature settings (denoted by Cons.), the performances of other feature settings (all, selected, and domain) are similar. The constructed features fail to provide comparable performance for RF as it has only three fea- tures and loses data details (i.e., too much generalization). Surprisingly, a few unknown attacks are only detectable us- ing the domain knowledge infused features. For instance, Web Attack Sql Injection is detected as suspicious only by domain knowledge infused features. Overall, although theTable 5: Performance using all features vs domain features Alg. Acc. Prec. Rec. F-score AUC RF-A 0.9987 0.9965 0.9971 0.9968 0.9997 RF-D1 0.9973 0.9920 0.9945 0.9932 0.9993 Difference 0.0014 0.0045 0.0027 0.0036 0.0004 ET-A 0.9981 0.9951 0.9951 0.9951 0.9994 ET-D1 0.9969 0.9913 0.9932 0.9923 0.9989 Difference 0.0011 0.0038 0.0020 0.0029 0.0004 ANN-A 0.9802 0.9155 0.9908 0.9516 0.9984 ANN-D1 0.9497 0.8300 0.9362 0.8799 0.9865 Difference 0.0305 0.0855 0.0546 0.0717 0.0119 SVM-A 0.9109 0.6996 0.9595 0.8092 0.9780 SVM-D1 0.8489 0.5747 0.8968 0.7005 0.9252 Difference 0.0619 0.1249 0.0627 0.1087 0.0528 GB-A 0.9960 0.9854 0.9944 0.9899 0.9995 GB-D1 0.9881 0.9513 0.9904 0.9705 0.9986 Difference 0.0079 0.0341 0.0039 0.0194 0.0009 NB-A 0.7753 0.4371 0.4888 0.4615 0.8601 NB-D1 0.7982 0.4881 0.5028 0.4953 0.8553 Difference (0.0229) (0.0510) (0.0140) (0.0338) 0.0048 Figure 3: Performance deviations of using domain knowl- edge infused features from baseline domain knowledge infused feature setting perform slightly worse than the all feature setting, it comes with an explain- able features set with the added capability of identifying a few unknown attacks. To reiterate, the constructed features set consists of only three features (C, I, and A) constructed from aggregating do- main knowledge infused features. As this feature setting is composed of only three features, it is an extreme generaliza- tion of features and it loses a lot of details of data. However, this time it comes with an exceptional capability which we realize after applying a statistical approach (Naive Bayes) on the dataset. We Ô¨Ånd that (see Table 7), for NB, the newly constructed feature setting is best as NB is also able to detect unknown attacks with similar accuracy compared to other feature settings by RF in Table 6. The most interesting thing about this capability is that this feature set is composed of only three features (C, I, and A), takes comparatively less time to execute, and comes with the added beneÔ¨Åt of very good explainability. Once the prediction is expressed as a percentage of inÔ¨Çuence from each of C, I, and A, the analyst would be able to perceive the level of compromise more in- tuitively from the hints about the type of attack (e.g., DDoS will show a high percentage of A‚Äîcompromise in Avail- ability). However, from Table 3, 4, and 5, we can see that NB‚Äôs Table 6: Performance of unseen attack detection using RF Attack Count All(%) Sel.(%) Dom.(%) Cons.(%) Ddos 4184 99.90 99.90 99.90 62.86 PortScan 4973 99.90 99.94 99.94 66.28 Bot 54 77.78 77.78 75.93 22.22 InÔ¨Åltration 1 100 100 100 0.00 Web Attack-BF 49 95.92 95.92 91.84 75.51 Web Attack-XSS 23 95.65 95.65 91.30 65.22 Web Attack-Sql 1 0.00 0.00 100 0.00 FTP-Patator 251 99.20 100 99.20 81.67 SSH-Patator 198 98.99 99.49 96.97 75.76 DoS slowloris 188 99.47 99.47 98.94 61.70 DoS Slowloris 174 99.43 99.43 96.55 31.61 Dos Hulk 7319 99.71 99.73 99.34 96.19 DoS GoldenEye 314 99.36 99.68 98.41 85.03 Heartbleed 1 100 100 100 100 Figure 4: Unknown attack detection rate using Random For- est performance comes at a cost of precision and recall (i.e., produces comparatively more false positives and false neg- atives). In addition, NB is a bad probability estimator of the predicted output (Zhang 2004). However, NB with con- structed features setting could be recommended as an addi- tional IDS for quick interpretation of huge trafÔ¨Åc data given the decision is treated as tentative with the requirement of a further sanity check. We also calculate the average time taken by each algorithm for all four feature settings and found that NB is the fastest algorithm. RF, ET, GB, ANN, and SVM take 2.80, 9.27, 77.06, 15.07, and 444.50 times more execution time compared to NB. Besides, the best al- gorithm, RF (1stin terms of the performance metric and 2nd in terms of execution time), can be executed in parallel using anApache Spark for a far better run-time (Chen et al. 2016) making it highly scalable to big data problems. Overall, domain knowledge infusion provides better ex- plainability with negligible compromises in performance. In addition, the generalization provides better execution time and resiliency with unknown attacks. 6 Conclusion and Future Work AI-based approaches have become an integral part of secu- rity solutions due to the potential for handling ‚ÄúBig Data‚Äù and handling diverse network trafÔ¨Åc data. Cybercrime- related damages continue to rise, and network intrusions are a key tactic. Although AI-based IDS provides accelerated speeds in intrusion detection ,response is still at a humanTable 7: Performance of unseen attack detection using NB Attack Count All(%) Sel.(%) Dom.(%) Cons.(%) Ddos 4184 76.94 74.59 83.22 100 PortScan 4973 0.18 0.18 6.64 100 Bot 54 0.00 0.00 100 InÔ¨Åltration 1 0.00 0.00 0.00 100 Web Attack-BF 49 6.12 6.12 83.67 100 Web Attack-XSS 23 0.00 0.00 95.65 100 Web Attack-Sql 1 100 100 0.00 100 FTP-Patator 251 0.00 0.00 0.00 48.61 SSH-Patator 198 0.00 0.00 0.00 100 DoS slowloris 188 25.53 30.85 38.30 66.49 DoS Slowloris 174 71.26 79.89 75.29 78.16 Dos Hulk 7319 67.78 67.78 67.03 35.37 DoS GoldenEye 314 50.32 65.29 47.13 96.82 Heartbleed 1 100 100 0.00 0.00 Figure 5: Unknown attack detection rate using Naive Bayes speed where there is human in the loop. The lack of explain- ability of an AI-based model is a key reason for this bottle- neck. To mitigate this problem, we infuse the CIA principle (i.e., domain knowledge) in the AI-based black box model for better explainability and generalizability of the model. Our experimental results show realizable successes in better explainability with a comprehensive, up to date, and real- world network intrusion dataset. In addition, the infused do- main knowledge helps in detecting an unknown attack as it generalizes the problem, which ultimately opens the door to accommodate big data. Going forward, Ô¨Ånding an optimal solution to segregate the contribution of each participating feature (sample wise) considering interactions (i.e., correlations among features complicate explanations) among features will aid in better explainability of an individual prediction (i.e., per sample). Besides, to ensure trust, estimating the level of uncertainty in the model will be another extension of this work. There are some open challenges surrounding explainability and in- terpretability such as an agreement of what an explanation is and to whom, a formalism for the explanation, and quan- tifying the human comprehensibility of the explanation. Acknowledgment Thanks to Tennessee Tech‚Äôs Cyber-security Education, Re- search and Outreach Center (CEROC) for supporting this research. References [Ando 2019] Ando, S. 2019. Interpreting random forests. http://blog.datadive.net/interpreting-random-forests/. [Bach et al. 2015] Bach, S.; Binder, A.; Montavon, G.; Klauschen, F.; M ¬®uller, K.-R.; and Samek, W. 2015. On pixel-wise explanations for non-linear classiÔ¨Åer decisions by layer-wise relevance propagation. PloS one 10(7):e0130140. [Boser, Guyon, and Vapnik 1992] Boser, B. E.; Guyon, I. M.; and Vapnik, V . N. 1992. A training algorithm for optimal margin classiÔ¨Åers. In Proceedings of the Ô¨Åfth annual workshop on Computational learning theory , 144‚Äì152. ACM. [Breiman 2001] Breiman, L. 2001. Random forests. Ma- chine learning 45(1):5‚Äì32. [Chandrasekaran, Tanner, and Josephson 1989] Chandrasekaran, B.; Tanner, M. C.; and Josephson, J. R. 1989. Explaining control strategies in problem solving. IEEE Intelligent Systems (1):9‚Äì15. [Chawla et al. 2002] Chawla, N. V .; Bowyer, K. W.; Hall, L. O.; and Kegelmeyer, W. P. 2002. Smote: synthetic mi- nority over-sampling technique. Journal of artiÔ¨Åcial intelli- gence research 16:321‚Äì357. [Chen et al. 2016] Chen, J.; Li, K.; Tang, Z.; Bilal, K.; Yu, S.; Weng, C.; and Li, K. 2016. A parallel random forest algorithm for big data in a spark cloud computing environ- ment. IEEE Transactions on Parallel and Distributed Sys- tems 28(4):919‚Äì933. [Datta, Sen, and Zick 2016] Datta, A.; Sen, S.; and Zick, Y . 2016. Algorithmic transparency via quantitative input in- Ô¨Çuence: Theory and experiments with learning systems. In 2016 IEEE symposium on security and privacy (SP) , 598‚Äì 617. IEEE. [DeJong 1981] DeJong, G. 1981. Generalizations based on explanations. In IJCAI , volume 81, 67‚Äì69. [Dong and Wang 2016] Dong, B., and Wang, X. 2016. Com- parison deep learning method to traditional methods using for network intrusion detection. In 2016 8th IEEE Inter- national Conference on Communication Software and Net- works (ICCSN) , 581‚Äì585. IEEE. [Doyle 2019] Doyle, M. 2019. Dont be lulled into a false sense of security. https://www.securityroundtable.org/dont- lulled-false-sense-cybersecurity/. [ens 2019] 2019. Ensemble methods. https://scikit-learn.org /stable/modules/ensemble.html. [Friedman 2001] Friedman, J. H. 2001. Greedy function ap- proximation: a gradient boosting machine. Annals of statis- tics1189‚Äì1232. [Geurts, Ernst, and Wehenkel 2006] Geurts, P.; Ernst, D.; and Wehenkel, L. 2006. Extremely randomized trees. Ma- chine learning 63(1):3‚Äì42. [Goodman and Flaxman 2017] Goodman, B., and Flaxman, S. 2017. European union regulations on algorithmic decision-making and a right to explanation. AI Magazine 38(3):50‚Äì57.[Hodo et al. 2016] Hodo, E.; Bellekens, X.; Hamilton, A.; Dubouilh, P.-L.; Iorkyase, E.; Tachtatzis, C.; and Atkinson, R. 2016. Threat analysis of iot networks using artiÔ¨Åcial neural network intrusion detection system. In 2016 Interna- tional Symposium on Networks, Computers and Communi- cations (ISNCC) , 1‚Äì6. IEEE. [Hooman et al. 2016] Hooman, A.; Marthandan, G.; Yusoff, W. F. W.; Omid, M.; and Karamizadeh, S. 2016. Statistical and data mining methods in credit scoring. The Journal of Developing Areas 50(5):371‚Äì381. [Islam et al. 2019] Islam, S. R.; Eberle, W.; Bundy, S.; and Ghafoor, S. K. 2019. Infusing domain knowledge in ai-based‚Äù black box‚Äù models for better explainability with application in bankruptcy prediction. arXiv preprint arXiv:1905.11474 . [Islam, Eberle, and Ghafoor 2018] Islam, S. R.; Eberle, W.; and Ghafoor, S. K. 2018. Credit default mining using combined machine learning and heuristic approach. arXiv preprint arXiv:1807.01176 . [Islam, Ghafoor, and Eberle 2018] Islam, S. R.; Ghafoor, S. K.; and Eberle, W. 2018. Mining illegal insider trading of stocks: A proactive approach. In 2018 IEEE International Conference on Big Data (Big Data) , 1397‚Äì1406. IEEE. [Islam 2018] Islam, S. R. 2018. An efÔ¨Åcient technique for mining bad credit accounts from both olap and oltp . Ph.D. Dissertation, Tennessee Technological University. [Javaid et al. 2016] Javaid, A.; Niyaz, Q.; Sun, W.; and Alam, M. 2016. A deep learning approach for network intru- sion detection system. In Proceedings of the 9th EAI Inter- national Conference on Bio-inspired Information and Com- munications Technologies (formerly BIONETICS) , 21‚Äì26. ICST (Institute for Computer Sciences, Social-Informatics and . [Kabul 2018] Kabul, I. K. 2018. Explainable ai. https://www.kdnuggets. com/2018/11/interpretability-trust- ai-machine-learning.html. [Kim et al. 2016] Kim, J.; Kim, J.; Thu, H. L. T.; and Kim, H. 2016. Long short term memory recurrent neural network classiÔ¨Åer for intrusion detection. In 2016 International Con- ference on Platform Technology and Service (PlatCon) , 1‚Äì5. IEEE. [Kim et al. 2017] Kim, B.; Wattenberg, M.; Gilmer, J.; Cai, C.; Wexler, J.; Viegas, F.; and Sayres, R. 2017. In- terpretability beyond feature attribution: Quantitative test- ing with concept activation vectors (tcav). arXiv preprint arXiv:1711.11279 . [Lashkari et al. 2017] Lashkari, A. H.; Draper-Gil, G.; Ma- mun, M. S. I.; and Ghorbani, A. A. 2017. Characterization of tor trafÔ¨Åc using time based features. In ICISSP , 253‚Äì262. [Lei, Barzilay, and Jaakkola 2016] Lei, T.; Barzilay, R.; and Jaakkola, T. 2016. Rationalizing neural predictions. arXiv preprint arXiv:1606.04155 . [Li, Sun, and Wang 2012] Li, Z.; Sun, W.; and Wang, L. 2012. A neural network based distributed intrusion detection system on cloud platform. In 2012 IEEE 2nd international conference on Cloud Computing and Intelligence Systems , volume 1, 75‚Äì79. IEEE. [Lipovetsky and Conklin 2001] Lipovetsky, S., and Conklin, M. 2001. Analysis of regression in game theory ap- proach. Applied Stochastic Models in Business and Industry 17(4):319‚Äì330. [Lipton 2016] Lipton, Z. C. 2016. The mythos of model interpretability. arXiv preprint arXiv:1606.03490 . [Lundberg and Lee 2017] Lundberg, S. M., and Lee, S.-I. 2017. A uniÔ¨Åed approach to interpreting model predic- tions. In Advances in Neural Information Processing Sys- tems, 4765‚Äì4774. [Lundberg 2019] Lundberg, S. 2019. Shap vs lime. https://github.com /slundberg/shap/issues/19. [Manning, Raghavan, and 2010] Manning, C.; Raghavan, P.; and , H. 2010. Introduction to information retrieval. Natural Language Engineering 16(1):100‚Äì103. [Matt and others 2006] Matt, B., et al. 2006. Introduction to computer security . Pearson Education India. [Miller 2018] Miller, T. 2018. Explanation in artiÔ¨Åcial intel- ligence: Insights from the social sciences. ArtiÔ¨Åcial Intelli- gence . [Mitchell, Keller, and Kedar-Cabelli 1986] Mitchell, T. M.; Keller, R. M.; and Kedar-Cabelli, S. T. 1986. Explanation- based generalization: A unifying view. Machine learning 1(1):47‚Äì80. [Montavon, Samek, and M ¬®uller 2018] Montavon, G.; Samek, W.; and M ¬®uller, K.-R. 2018. Methods for interpret- ing and understanding deep neural networks. Digital Signal Processing 73:1‚Äì15. [nai 2019] 2019. Naive bayes. https://scikit-learn.org/ sta- ble/modules/naive bayes.html. [net 2019] 2019. NetÔ¨Çow meter. http://netÔ¨Çowmeter.ca/ net- Ô¨Çowmeter.html. [pro 2019] 2019. domain-knowledge-aided code. https://github.com/ SheikhRabiul/domain-knowledge- aided-explainable-ai-for-intrusion-detection-and-response. [Rankin 2019] Rankin, K. 2019. The dark secret at the heart of ai. https://www.technologyreview.com/s/604087/the- dark-secret-at-the-heart-of-ai/. [Ribeiro, Singh, and Guestrin 2016] Ribeiro, M. T.; Singh, S.; and Guestrin, C. 2016. Why should i trust you?: Ex- plaining the predictions of any classiÔ¨Åer. In Proceedings of the 22nd ACM SIGKDD international conference on knowl- edge discovery and data mining , 1135‚Äì1144. ACM. [sam 2019] 2019. domain-knowledge-aided dataset. https://github.com/ SheikhRabiul/domain-knowledge- aided-explainable-ai-for -intrusion-detection-and- response/tree/master/data/ combined sampled.zip. [sci 2019] 2019. Scikit-learn: Machine learning in python. https://scikit-learn.org/stable/. [Sharafaldin, Lashkari, and Ghorbani 2018] Sharafaldin, I.; Lashkari, A. H.; and Ghorbani, A. A. 2018. Toward gener- ating a new intrusion detection dataset and intrusion trafÔ¨Åc characterization. In ICISSP , 108‚Äì116.[Shone et al. 2018] Shone, N.; Ngoc, T. N.; Phai, V . D.; and Shi, Q. 2018. A deep learning approach to network intru- sion detection. IEEE Transactions on Emerging Topics in Computational Intelligence 2(1):41‚Äì50. [Shrikumar, Greenside, and Kundaje 2017] Shrikumar, A.; Greenside, P.; and Kundaje, A. 2017. Learning important features through propagating activation differences. In Pro- ceedings of the 34th International Conference on Machine Learning-Volume 70 , 3145‚Äì3153. JMLR. org. [ÀáStrumbelj and Kononenko 2014] ÀáStrumbelj, E., and Kononenko, I. 2014. Explaining prediction models and in- dividual predictions with feature contributions. Knowledge and information systems 41(3):647‚Äì665. [Swartout and Moore 1993] Swartout, W. R., and Moore, J. D. 1993. Explanation in second generation expert sys- tems. In Second generation expert systems . Springer. 543‚Äì 585. [Swartout 1985] Swartout, W. R. 1985. Rule-based expert systems: The mycin experiments of the stan- ford heuristic programming project: Bg buchanan and eh shortliffe,(addison-wesley, reading, ma, 1984); 702 pages. [ten 2019] 2019. TensorÔ¨Çow. https://www.tensorÔ¨Çow.org/. [Turek 2019] Turek, M. 2019. Explainable ai. https://www.darpa.mil/ program/explainable-artiÔ¨Åcial- intelligence. [Wyden 2019] Wyden, B. 2019. Algorithmic accountability. https://www.wyden.senate.gov/imo/media/doc/Algorithmic%20 Accountability%20Act%20of%202019%20Bill%20Text.pdf. [Yang and Shafto 2017] Yang, S. C.-H., and Shafto, P. 2017. Explainable artiÔ¨Åcial intelligence via bayesian teaching. In NIPS 2017 workshop on Teaching Machines, Robots, and Humans . [Zhang 2004] Zhang, H. 2004. The optimality of naive bayes. AA1(2):3","cs.AI, cs.CR",Arxiv
36,Self-Initiated Open World Learning for Autonomous AI Agents,"Bing Liu, Eric Robertson, Scott Grigsby, Sahisnu Mazumder",2021-10-21 18:11:02+00:00,http://arxiv.org/pdf/2110.11385v3,"As more and more AI agents are used in practice, it is time to think about how to make these agents fully autonomous so that they can learn by themselves in a self-motivated and self-supervised manner rather than being retrained periodically on the initiation of human engineers using expanded training data. As the real-world is an open environment with unknowns or novelties, detecting novelties or unknowns, characterizing them, accommodating or adapting to them, gathering ground-truth training data, and incrementally learning the unknowns/novelties are critical to making the agent more and more knowledgeable and powerful over time. The key challenge is how to automate the process so that it is carried out on the agent's own initiative and through its own interactions with humans and the environment. Since an AI agent usually has a performance task, characterizing each novelty becomes critical and necessary so that the agent can formulate an appropriate response to adapt its behavior to accommodate the novelty and to learn from it to improve the agent's adaptation capability and task performance. The process goes continually without termination. This paper proposes a theoretic framework for this learning paradigm to promote the research of building Self-initiated Open world Learning (SOL) agents. An example SOL agent is also described.","arXiv:2110.11385v3  [cs.AI]  29 Feb 2024Self-Initiated Open World Learning for Autonomous AI Agent s Bing Liu1, Eric Robertson2, Scott Grigsby2, Sahisnu Mazumder1 1Department of Computer Science, University of Illinois at C hicago, USA 2PAR Government Systems Corporation, USA liub@uic.edu, {ericrobertson, scott grigsby}@partech.com, sahisnumazumder@gmail.com Anextended and revised version of this work has been published in the AI Magazine (AAAI) as follows: Bing Liu, Sahisnu Mazumder, Eric Robertson, and Scott Grigsby. ‚Äú AI Autonomy: Self-initiated Open-world Continual Learning and Adapta- tion.‚Äù AI Magazine (2023). Click here for the pdf of the revised version: AI Magazine version link Please consider the AI Magazine 2023 version as mentioned above for citation. Abstract As more and more AI agents are used in practice, it is time to think about how to make these agents fully autonomous so that they can learn by themselves in a self-motivated and sel f- supervised manner rather than being retrained periodicall y on the initiation of human engineers using expanded train- ing data. As the real-world is an open environment with un- knowns or novelties, detecting novelties or unknowns, char- acterizing them, accommodating or adapting to them, gather- ingground-truth training data, and incrementally learning the unknowns/novelties are critical to making the agent more an d more knowledgeable and powerful over time. The key chal- lenge is how to automate the process so that it is carried out on the agent‚Äôs own initiative andthrough its own interactions with humans and the environment. Since an AI agent usually has a performance task, characterizing each novelty becomes critical and necessary so that the agent can formulate an ap- propriate response to adapt its behavior to accommodate the novelty and to learn from it to improve the agent‚Äôs adapta- tion capability and task performance. The process goes con- tinually without termination. This paper proposes a theore tic framework for this learning paradigm to promote the researc h of building Self-initiated Open world Learning (SOL) agents. An example SOL agent is also described. 1 Introduction Classic machine learning (ML) makes closed world assump- tion, which means that what are seen by the system in testing or deployment must have been seen in training (Fei and Liu2016; Bendale and Boult 2015; Liu 2020), i.e., there is noth- ing new or novel occurring in testing or deployment. This assumption is invalid in practice as the real world is an open environment with unknowns or novel objects. For humans, novelties or unknowns serve as an intrinsic motivation for learning. Human novelty detection results in a cascade of unique neural responses and behavioral changes that enable exploration and Ô¨Çexible memory encoding of the novel infor- mation. As learning occurs, this novelty response is soon lo st as repeated exposure to novelty results in fast neural adap- tation (Tulving and Kroll 1995; Murty et al. 2013). In order to make an AI agent thrive in the real open world, like hu- mans, it has to detect novelties and learn them incrementall y to make the system more knowledgeable and adaptable. It must do so on its own initiative rather than relying on hu- man engineers to retrain the system periodically. That is, i t must learn in the open world in aself-motivated manner in the context of its performance task . We use the hotel guest-greeting bot example from (Chen and Liu 2018) to illustrate Self-initiated Open world Learning (SOL). The performance task of the bot is to greet hotel guests. When it sees a guest it has learned, e.g., John, it greets him by saying ‚ÄúHi John, how are you today ?‚Äù When it sees a new guest, it should detect this guest as new or novel because it has never seen him/her before. This is a nov- elty detection problem (also known as out-of-distribution (OOD) detection ). It then needs to accommodate oradapt to the novel situation, e.g., by saying to the new guest ‚ÄúHello, welcome to our hotel! What is your name, sir ?‚Äù If the guest replies ‚Äú David ,‚Äù the bot takes some pictures of the guest to gather training data and then incrementally or continually learn to recognize David. The name ‚Äú David ‚Äù serves as the class label of the pictures taken. When it sees this guest again, it can say ‚ÄúHi David, how are you today ?‚Äù (he is no longer novel) Clearly, in an actual hotel, the situation is much more com- plex than this. First of all, if the bot uses a video camera, when it sees a novel object, it experiences a data distribution change as it sees the new object for a period of time rather than just one image instance. It is desirable to detect the ne w object as quickly as possible. Next, how does the system know that the novel object is actually a person, not a dog? If the system can recognize the object as a person, how does it know that he/she is a hotel guest, not a policeman? In or- der to adapt to the novel object or situation, the system must Ô¨Årst characterize the novel object as without it, the agent does not know how to adapt . In this case, some classiÔ¨Åca- tion is needed to decide whether it is a person with luggage. If the object is a person but has no luggage, the bot will not respond or learn to recognize the person as it is irrelevant to its performance task. If it is a moving object but not a per- son, it should notify a hotel employee and learn to recognize the object so that it will no longer be novel when it is seen again in the future. In short, for each characterization, th ere is a corresponding response oradaptation strategy , which can be NIL (i.e., do nothing). This discussion shows that in order to characterize, the agent must already have rich worl d knowledge. Clearly, there is also a riskinvolved when mak- ing an incorrect decision. As classic learning matures, we should go beyond the ex- isting framework to study how to enable the learner to learn by itself via its own interactions with humans and the en- vironment, involving no human engineers. This paper pro- poses the SOL framework to promote the research of au- tonomous learning agents so that they can face the real open world and learn by themselves. An example SOL agent in the context of dialogue systems or chatbots that implements the main ideas in this paper will also be discussed. Although open world learning has been studied by several researchers (Bendale and Boult 2015; Fei, Wang, and Liu 2016; Xu et al. 2019), it mainly focuses on novelty detec- tion (Parmar, Chouhan, and Rathore 2021), which is also called open set detection orout-of-distribution detection in the literature. Recently, zero-shot out-of-distribution detec- tion is investigated in (Esmaeilpour et al. 2022) based on the pre-trained model CLIP (Radford et al. 2021). Some re- searchers have further studied how to automatically iden- tify the classes or categories of the detected novel object instances (Shu, Xu, and Liu 2018). Yet, some others have studied learning the novel objects or classes after they hav e been detected (Bendale and Boult 2015; Fei, Wang, and Liu 2016; Xu et al. 2019). An recent survey of the topic can be found in (Yang et al. 2021). There is also a general discus- sion paper about open world learning in (Langley 2020), which presents many interesting blue sky ideas. However, SOL differs from these prior studies in many aspects. (1)SOL stresses self-initiation in learning, which means that all the learning activities from start to end are self- motivated and self-initiated by the agent itself. The proce ss involves no human engineers. (2)Due to self-initiation, SOL enables learning after the model deployment like human learning on the job or while working, which has not been been attempted before. In ex- isting learning paradigms, after a model has been deployed, there is no more learning until the model is updated or re- trained on the initiation of human engineers. (3)SOL is also a lifelong and continual learning paradigm again because learning is self-initiated and can be done con - tinually or lifelong. It is thus connected with lifelong andcontinual learning, which is another active research area i n machine learning (Chen and Liu 2018). (4)SOL involves extensive interactions of the learning agent and human users, other AI agents, and the environ- ment. The main purpose is to acquire ground-truth labels and training data by itself. (5)SOL makes learning autonomous and a learning agent equipped with SOL can face the real open world. We also believe that SOL is necessary for the next generation ma- chine learning techniques. Finally, note that although SOL focuses on self-initiated learning, it does not mean that th e learning system cannot learn a task given by humans or other AI agents incrementally or continually 2 Self-Initiated Open World Learning (SOL) Our agent has a primary performance task and a pair of key modules(T,S), whereTis the primary task-performer (e.g., the dialogue system of the greeting bot) and Sisa set of supporting or peripheral functions (e.g., the vision system and the speech system of the bot) that supports the primary task-performer. The primary task-performer as well as each support function may consist of four main sub-components (L,E,N,I), where Lis a SOL learner, Eis the execu- tor that performs the task or function, Nis a novelty char- acterizer for characterizing each novelty so that Ecan for- mulate an appropriate response to the novelty, and Iis an interactive module for the agent or Lto communicate with humans or other agents (e.g., to gain ground-truth training data). Since each function and the primary task performer has the same components, we will discuss them in general rather than distinguishing them, but will distinguish them when necessary. We will not discuss the relationships and interactions of the components. Below, we Ô¨Årst discuss the SOL learner L, which starts with novelty and/or data shift detection. 2.1 Data Shift The classic ML depends on the independent and identically distributed (IID) assumption. SOL deals with non-IID data, which is commonly know as data shift . We use supervised learning as the task to develop the ideas, which can be easily adapted to other learning settings. Let the training data be Dtr={(xi,yi)}n i=1, wherexi‚àà Xis a training example following the training distribution Ptr(x)andyi‚ààYtris the corresponding class label of xi andYtris the set of all class labels that appear in Dtr. Note that P(x,y) =P(y|x)P(x). Givenx‚ààXand y‚ààYtrin both training and testing, existing research has proposed the following three main types of data shift hap- pening in testing (Moreno-Torres et al. 2012). DeÔ¨Ånition (covariate shift). Covariate shift refers to the distribution change of the input variable xbetween training and test phases, i.e., Ptr(y|x) =Pte(y|x)andPtr(x)/ne}ationslash= Pte(x), wherePteis the test distribution. DeÔ¨Ånition (prior probability shift). Prior probability shift refers to the distribution change of the class variable y between training and test phases, i.e., Ptr(x|y) =Pte(x|y) andPtr(y)/ne}ationslash=Pte(y). DeÔ¨Ånition (concept drift). Concept drift refers to the change in the posterior probability distribution between training and test phases, i.e., Ptr(y|x)/ne}ationslash=Pte(y|x)and Ptr(x) =Pte(x). Clearly, the most general data shift is: Ptr(y|x)/ne}ationslash= Pte(y|x)andPtr(x)/ne}ationslash=Pte(x). However, there is another change not explicitly included in the above data shift, i.e., novelty ornovel instances that appear in testing or deployment and do not belong to any known classes, which are the focus of SOL. Covariate shift may have novel instances belonging to known classes. 2.2 Novel Instances and Classes Novelty is an agent-speciÔ¨Åc concept. An object may be novel to one agent based on its partial knowledge of the world but not novel to another agent. In the context of su- pervised learning, the world knowledge is the training data Dtr={(xi,yi)}n i=1withxi‚ààXandyi‚ààYtr. Leth(x) be the latent or internal representation of xin the agent‚Äôs mind,h(Di tr)be the latent representation of the training data of classyi, andk(=|Ytr|) be the total number of train- ing classes. We use ¬µ(h(x),h(Di tr))to denote the novelty score of a test instance xwith respect to h(Di tr). The de- gree of novelty of xwith respect to Dtr,¬µ(h(x),h(Dtr)), is deÔ¨Åned as the minimum novelty score with regard to every class, ¬µ(h(x),h(Dtr)) = min( ¬µ(h(x),h(D1 tr)),...,¬µ(h(x),h(Dk tr))) (1) The novelty function ¬µcan be deÔ¨Åned based on speciÔ¨Åc applications. For example, if the training data of each clas s follows the Gaussian distribution, one may use the distance from the mean to compute the novelty score. DeÔ¨Ånition (novel instance) : A test instance xis novel if its novelty score ¬µ(x,.)is greater than or equal to a thresh- old value Œ≥such that xcan be assigned a new class not in Ytr. Incovariate shift , a novel instance may still be assigned to an existing class as the class assignment is application o r agent speciÔ¨Åc. For example, we have a training class called animal and the learner has seen dogandchicken in the ani- malclass, but during testing, a tiger shows up. In the covari- ate shift case, tiger can be added to the existing animal class, although tiger is novel as it has not been seen before. DeÔ¨Ånition (novel class) : A newly created class ynew (ynew/‚ààYtr) assigned to some novel instances is called a novel class (unknown orunseen class ). The classes in Ytr are called known orseen classes . Novelty is not restricted to the perceivable physical world but also includes the agent‚Äôs internal world, e.g., novel in - terpretations of world states or internal cognitive states that have no correspondence to any physical world state. Inter- ested readers may also read (Boult et al. 2021) for a more nuanced and perception-based study of novelty. There are several related concepts to novelty. We clarify their difference from novelty here. Outlier or anomaly : An outlier is a data point that is far away from the main data clusters, but it may not be un- known. For example, the salary of a company CEO is anoutlier with regard to the salary distribution of the compan y employees, but that is known and thus not novel. Unknown outliers are novel. Anomalies can be considered outliers or instances that are one off and never repeated. Though tech- nically ‚Äúnovel‚Äù they may not need to result in a new class. Surprise or unexpectedness : Based on the prior knowl- edge of the agent, the probability P(x|Q)ofxoccurring in a particular context Qis very low, but xhas occurred in Q, which is surprising orunexpected . Ifxhas been seen before, it is not novel. In human cognition, surprise is an emotional response to an instance which greatly exceeds the expected uncertainty within the context of a task. Outliers, anomali es, and novelty can all lead to surprise. 2.3 DeÔ¨Ånitions of Learning in SOL The classic ML makes the i.i.d assumption, which is often violated in practice. Here we deÔ¨Åne several other assump- tions and learning paradigms that are progressively more an d more aligned with the real-world learning needs of SOL. DeÔ¨Ånition (closed-world assumption) : No new or novel classes appear in testing. Other types of data shift may occu r. DeÔ¨Ånition (closed-world learning) : It refers to the learn- ing paradigm that makes the closed-world assumption. DeÔ¨Ånition (learning with data shift) : It refers to the learning paradigm that deals with certain types of data shif t in testing or deployment, but not new classes. DeÔ¨Ånition (open world learning) : It refers to the learn- ing paradigm that can detect data shifts and novel instances in testing or deployment. The learner can learn the novel classes labeled by humans from the identiÔ¨Åed novel in- stances and update the model using the new data. The re- training or model updating is initiated by human engineers. That is, there is no self-initiated learning after model dep loy- ment. Note that for covariate shift, the assignment of shifted dat a (or novel) instances to existing training classes is normal ly done by humans. For concept shift, the shifted classes are caused by humans or by the environment. DeÔ¨Ånition (self-initiated open world learning (SOL)): It refers to the learning paradigm that has the capability of open-world learning and the agent is able to initiate a learn - ing process by itself during application (after deployment ) with no involvement of human engineers. The learning of the new classes is incremental, i.e., no re-training of previou s classes. The process is thus lifelong or continuous, which makes the agent smarter and smarter over time. Note that apart from learning, SOL‚Äôs performance task also demands characterization and adaptation, which we dis - cuss in Section 2.5. 2.4 Steps in Learning in SOL Learning in SOL involves the following three main steps. We ignore updating the existing model to deal with data shift because if we can deal with novel classes, it is relatively ea sy to deal with the other types of data shift (see Section 2.1). Step 1 -Novelty detection . This step involves detecting data instances (1) whose classes do not belong to Ytror (2) have covariate shift, and it is done automatically. A fair amount of research has been done on this under open-set classiÔ¨Åcation or out-of-distribution detection (Pang et al. 2021). Step 2 -Acquiring class labels and creating a new learning task on the Ô¨Çy : This step Ô¨Årst clusters the detected novel in- stances. Each cluster represents a new class. It may be done automatically or through interactions with humans using th e interaction module I. Interacting with humans should pro- duce more accurate clusters and also obtain meaningful clas s labels. If the detected data is insufÔ¨Åcient for building an a ccu- rate model to recognize the new classes, additional ground- truth data may be collected via interaction with humans. A new learning task is then created. In the case of our hotel greeting bot, since the bot detects a single new guest (automatically), no clustering is needed . It then asks the guest for his/her name as the class label. It also takes more pictures as the training data. With the la- beled ground-truth data, a new learning task is created to incrementally learn to recognize the new guest on the Ô¨Çy. The learning agent may also interact with the environment to obtain training data. In this case, the agent must have an internal evaluation system that can assign rewards to differ- ent states of the world, e.g., for reinforcement learning. Step 3 -Incrementally learn the new task. After ground- truth training data has been obtained, the learner Lin- crementally learns the new task. This is continual learn- ing(Chen and Liu 2018), an active and challenging ML re- search area, which is deÔ¨Åned as learning a sequence of tasks incrementally. 2.5 Novelty Characterization and Adaptation In a real-life application, classiÔ¨Åcation may not be the pri - mary task. For example, in a self-driving car, object classi Ô¨Å- cation supports its primary performance task of driving. To drive safely, the car has to take some actions to adapt or re- spond to the new object, e.g., slowing down and avoiding the object. In order to know what actions to take, it must char- acterize the new object. Based on the characterization, ap- propriate actions are formulated to accommodate or respond to the novel object. The response process may also involve learning. DeÔ¨Ånition (novelty and response) : It is a pair (c,r), wherecis the characterization of the novelty andris the response to the novelty, which is a plan of dynamically for- mulated actions based on the characterization of the novelt y and the agent‚Äôs interactions with the novel item. If the sys- tem cannot characterize a novelty, it will take the default response . In some situations, the agent does not know what to do. The response is Learn , i.e., to learn the actions to take. DeÔ¨Ånition (characterization of novelty) : It is a descrip- tion of the novelty based on the agent‚Äôs existing knowledge of the world. According to the description, the agent choose s a speciÔ¨Åc course of actions to respond to the novelty. Characterization of novelty can be done at different levels of detail, which may result in more or less precise responses . Based on the ontology and attributes related to the perfor- mance task, the description can be deÔ¨Åned based on the type of the object and the attribute of the object . For example, for self-driving cars, when sensing a novel object, the carcan identify both the movement of the object and the loca- tion of the object relative to the direction of travel‚Äìon the road or off the road. Thus, some classiÔ¨Åcation of movement and location in this case is needed to characterize the nov- elty which, in turn, facilitates determination of the agent ‚Äôs responding action(s). For instance, if the novel object is a mobile object, the car may wait for the object to leave the road before driving. Another common characterization strategy is to compare the similarity between the novel object and the existing known objects. For example, if it is believed that the novel object looks like a pig, then the agent may react like when it sees a pig on the road. In our greeting bot example, when it can characterize a novelty as a new guest, its response is to say ‚Äù Hello, wel- come to our hotel! What is your name, sir ?‚Äù If the bot has difÔ¨Åculty with object characterization, it can take a default action , either ‚Äòdo nothing‚Äô or ‚Äòreport to a hotel staff.‚Äô The set of responses are speciÔ¨Åc to the application. For a self-driv ing car, the default response to a novel object is to slow down the car as soon as possible so that it will not hit the novel object . This discussion implies that in order to effectively charac - terize a novelty, the agent must already have a great of world knowledge that it can use to describe the novelty. Without such knowledge, it will not be able to characterize the nov- elty in meaningful ways. The characterization and response process is often inter- active in the sense that based on the initial characterizati on, the agent may choose a course of actions, but after some actions are taken, it will get some feedback from the envi- ronment. Based on the feedback and the agent‚Äôs additional observations, the course of actions may be revised. Focus of attention. Due to the performance task, the agent should focus on detecting and characterizing novel- ties that are critical to the performance task. For example, in the self-driving car application, the agent should focus on novel objects or events that are or may potentially appear on the road in front of the car. It should not pay attention to novel objects in the shops along the street as they do not affect driving. In characterizing a novel object on the road , it should focus on those aspects that are important to driving, i.e., whether it is a still or a moving object. If it is a moving object, the agent must determine its direction of moving. Learning to respond. As indicated above, in some situ- ations, the system may not know how to respond to a new object or situation. In this case, it needs to learn by itself (see Section 2.4). There are many ways to learn, e.g., (1)Asking a human . In the case of the self-driving car, when it does not know what to do, it may ask the passen- ger using the interactive module I(e.g., in natural language) and then follow the instruction and also remember or learn it for future use. For example, if the car sees a black patch on the road that it has never seen before, it can ask ‚Äú what is that black thing in front? ‚Äù The passenger may answer ‚Äú that is tar .‚Äù In the case of an unrecognized response, such as no prior information on tar, the system may progress with fur- ther inquiry, asking the passenger ‚Äú what should I do? ‚Äù (2)Imitation learning . On seeing a novel object, if the car in front drives through it with no issue, the car may choose the same course of action as well and learn it for future use. (3)Performing reinforcement learning . By interacting with the environment through trial and error exploration, t he agent learns a good response policy for future use. As men- tioned earlier, in this case the agent must have an internal evaluation system that can assign rewards to environment states. If multiple novelties are detected at the same time, it is more difÔ¨Åcult to respond as the agent must reason over the characteristics of all novel objects to dynamically formul ate an overall plan of actions that prioritize the responses. 2.6 Risk There is risk in achieving performance goals of an agent when making an incorrect decision. For example, classifyin g a known guest as unknown or an unknown guest as known may negatively affect guest impressions resulting in nega- tive reviews. For a self-driving car, misidentiÔ¨Åcations ca n result in wrong responses, which could be a matter of life and death. Thus, risk assessment must be made in making each decision. Risk assessment can also be learned from ex- periences or mistakes. In the example of a car passing over tar, after the experience of passing over shiny black surfac es safely many times, if the car slips in one instance, the car agent must assess the risk of continuing the prior procedure . Given the danger, a car may weight the risk excessively, slowing down on new encounters of shiny black surfaces. 3 An Example SOL System Although novelty detection (Yang et al. 2021; Pang et al. 2021) and incremental or continual learning (Chen and Liu 2018; Parisi et al. 2019) have been studied widely, little work has been done to build a SOL system. Here we describe a dialogue system (called CML) that is based on the SOL framework and performs each function in SOL continually by itself after the system has been deployed (Mazumder et al. 2020; Liu and Mazumder 2021). CML is an natural language interface like Amazon Alexa and Siri. Its performance task is to take a user command in natural language (NL) and perform the user requested API action in the underlying application. There is no sup- port function in this application. The key issue is how to understand paraphrased NL commands from the user in or- der to map a user command to a system‚Äôs API call. Novelty equates to the system‚Äôs failure in understanding a user com- mand. After the system automatically detects a novelty (a hard-to-understand user command), it will try to understan d the command and also learn the command so that it will be able to understand it and related commands in the future. The novelty characterization step of SOL here is to iden- tify the part of the command that the system does not un- derstand. Based on the characterization, the system adapts by asking the user via an interactive dialogue to obtain the ground truth API action requested by the user, which also serves as a piece of training data for continual learning . In the adaptation or accommodation process, risk is also con- sidered.Consider the following example. The user issues the com- mand ‚Äú turn off the light in the kitchen ‚Äù that the system does not understand (i.e., a novelty ), Based on the current sys- tem state, it decides which part of the command it can under- stand and which part it has difÔ¨Åculty (i.e., characterization ). Based on the characterization result, it provides the user a list of top-k predicted actions (see below) described in NL and asks the user to select the most appropriate action from the given list (i.e., adaptation ). Bot: Sorry, I didn‚Äôt get you. Do you mean to: option-1. switch off the light in the kitchen, or option-2. switch on the light in the kitchen, option-3. change the color of the light? The user answers the desired action (option-1). The ac- tion API [say, SwitchOffLight (arg:place)] correspond- ing to the selected action (option-1) is retained as the ground truth action for the issued NL command. In sub- sequent turns of the dialogue, the agent can also ask the user questions to acquire ground truth values associated wi th arguments of the selected action, as deÔ¨Åned in the API. CML then incrementally learns to map the original com- mand ‚Äú turn off the light in the kitchen ‚Äù to the API action, SwitchOffLight (arg:place). This learning ensures that in the future the system will not have problem understand- ing the related commands. Risk is considered in the system in two ways. First, it does not ask the user too many questions in order not to an- noy the user. Second, when the characterization is not con- Ô¨Ådent, the system simply asks the user to say his/her com- mand again rather than providing a list of random options to choose from. 4 Key Challenges Although novelty detection and continual learning have bee n researched extensively (Yang et al. 2021; Pang et al. 2021), they remain to be challenging. Limited work has been done to address the following (this list is by no means exhaustive ): Obtaining training data on the Ô¨Çy. One key feature of SOL is interaction with humans to obtain ground-truth train - ing data, which needs a dialogue system. Building an effec- tive dialogue system is very challenging. We are unaware of any such system for SOL except CML (Mazumder et al. 2020), but CML is only for simple command learning. Few-shot continual learning. It is unlikely for the learn- ing agent to collect a large volume of training data via in- teraction with the user. Then, an effective and accurate few - shot continual/incremental learning method is necessary. Novelty characterization. This is critical because it de- Ô¨Ånes the characteristics used to recognize world state and determine the best response strategy. For example, if a self - driving car encounters a novel/new mobile object, its re- sponse will be different from encountering an immobile ob- ject. Even if we know it is a mobile object, the system may also need to know which direction it is moving and the mov- ing speed in order to formulate an appropriate response. The challenge is that a large number of classiÔ¨Åers or other mod- els may need to be built. This means that the system or agent must have a very rich world model and a large amount of knowledge related to its performance task before it can ef- fectively characterize novelties. Learning to respond. This task is especially challenging in a real-world physical environment (Dulac-Arnold et al. 2021). For example, due to safety concerns, learning during driving (which is required by SOL) by a self-driving car us- ing reinforcement learning (RL) is very dangerous. Further - more, for RL to work, the agent must have a highly effective internal reward or evaluation system to assign rewards to ac - tions and states and to be aware of safety constraints . Little work has been done so far. Knowledge revision. It is inevitable that the system may misinterpret, generalize or otherwise assemble incor- rect knowledge. A SOL system must have a mechanism to detect and revise the inaccurate knowledge on its own. Again, little work has been done. 5 Conclusion A truly intelligent system must be able to learn au- tonomously and continually in the open world on its own initiative after deployment in order to adapt to the ever- changing world and gain more and more knowledge to be- come more and more powerful over time. This paper pro- posed a self-initiated open world learning (SOL) framework for the purpose, and presented the concepts, steps and key challenges. An example SOL system is also described. We believe that the future research in SOL will bring ML and AI to the next level. Acknowledgments This paper beneÔ¨Åted greatly from numerous discussions in the DARPA SAIL-ON Program PI meetings. This work was supported in part by a DARPA Contract HR001120C0023. Bing Liu and Sahisnu Mazumder are also partially sup- ported by two National Science Foundation (NSF) grants (IIS-1910424 and IIS-1838770), and a Northrop Grumman research gift. The views expressed in this document are those of the authors and are not those of funders. References Bendale, A.; and Boult, T. 2015. Towards open world recog- nition. In Proceedings of the IEEE conference on computer vision and pattern recognition , 1893‚Äì1902. Boult, T.; Grabowicz, P.; Prijatelj, D.; Stern, R.; Holder, L.; Alspector, J.; Jafarzadeh, M.; Ahmad, T.; Dhamija, A.; Li, C.; et al. 2021. Towards a Unifying Framework for Formal Theories of Novelty. In Proceedings of the AAAI Conference on ArtiÔ¨Åcial Intelligence , volume 35, 15047‚Äì15052. Chen, Z.; and Liu, B. 2018. Lifelong machine learning . Mor- gan & Claypool Publishers. Dulac-Arnold, G.; Levine, N.; Mankowitz, D. J.; Li, J.; Padu - raru, C.; Gowal, S.; and Hester, T. 2021. Challenges of real- world reinforcement learning: deÔ¨Ånitions, benchmarks and analysis. Machine Learning 1‚Äì50.Esmaeilpour, S.; Liu, B.; Robertson, E.; and Shu, L. 2022. Zero-Shot Out-of-Distribution Detection Based on the Pre- trained Model CLIP. In Proceedings of the AAAI conference on artiÔ¨Åcial intelligence . Fei, G.; and Liu, B. 2016. Breaking the closed world assump- tion in text classiÔ¨Åcation. In Proceedings of the 2016 Confer- ence of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies , 506‚Äì514. Fei, G.; Wang, S.; and Liu, B. 2016. Learning cumulatively to become more knowledgeable. In Proceedings of the 22nd ACM SIGKDD International Conference on Knowledge Dis- covery and Data Mining , 1565‚Äì1574. Langley, P. 2020. Open-world learning for radically au- tonomous agents. In Proceedings of the AAAI Conference on ArtiÔ¨Åcial Intelligence , volume 34, 13539‚Äì13543. Liu, B. 2020. Learning on the job: Online lifelong and con- tinual learning. In Proceedings of the AAAI Conference on ArtiÔ¨Åcial Intelligence (AAAI-2020) . Liu, B.; and Mazumder, S. 2021. Lifelong and continual learning dialogue systems: learning during conversation. In Proceedings of the AAAI Conference on ArtiÔ¨Åcial Intelli- gence (AAAI-2021) . Mazumder, S.; Liu, B.; Wang, S.; and Esmaeilpour, S. 2020. An Application-Independent Approach to Building Task-Oriented Chatbots with Interactive Continual Learni ng. NeurIPS-2020 Workshop on Human in the Loop Dialogue Systems . Moreno-Torres, J. G.; Raeder, T.; Alaiz-Rodr¬¥ ƒ±guez, R.; Chawla, N. V .; and Herrera, F. 2012. A unifying view on dataset shift in classiÔ¨Åcation. Pattern recognition 45(1): 521‚Äì530. Murty, V . P.; Ballard, I. C.; MacdufÔ¨Åe, K. E.; Krebs, R. M.; and Adcock, R. A. 2013. Hippocampal networks habituate as novelty accumulates. Learning & Memory 20(4): 229‚Äì 235. Pang, G.; Shen, C.; Cao, L.; and Hengel, A. V . D. 2021. Deep learning for anomaly detection: A review. ACM Com- puting Surveys (CSUR) 54(2): 1‚Äì38. Parisi, G. I.; Kemker, R.; Part, J. L.; Kanan, C.; and Wermter , S. 2019. Continual lifelong learning with neural networks: A review. Neural Networks . Parmar, J.; Chouhan, S. S.; and Rathore, S. S. 2021. Open- world Machine Learning: Applications, Challenges, and Op- portunities. arXiv preprint arXiv:2105.13448 . Radford, A.; Kim, J. W.; Hallacy, C.; Ramesh, A.; Goh, G.; Agarwal, S.; Sastry, G.; Askell, A.; Mishkin, P.; Clark, J.; et al. 2021. Learning transferable visual models from natur al language supervision. arXiv preprint arXiv:2103.00020 . Shu, L.; Xu, H.; and Liu, B. 2018. Unseen class discovery in open-world classiÔ¨Åcation. arXiv preprint arXiv:1801.05609 . Tulving, E.; and Kroll, N. 1995. Novelty assessment in the brain and long-term memory encoding. Psychonomic Bul- letin & Review 2(3): 387‚Äì390. Xu, H.; Liu, B.; Shu, L.; and Yu, P. 2019. Open-world learn- ing and application to product classiÔ¨Åcation. In The World Wide Web Conference , 3413‚Äì3419. Yang, J.; Zhou, K.; Li, Y .; and Liu, Z. 2021. General- ized out-of-distribution detection: A survey. arXiv preprint arXiv:2110.11334","cs.AI, cs.HC, cs.LG",Arxiv
37,To Be Forgotten or To Be Fair: Unveiling Fairness Implications of Machine Unlearning Methods,"Dawen Zhang, Shidong Pan, Thong Hoang, Zhenchang Xing, Mark Staples, Xiwei Xu, Lina Yao, Qinghua Lu, Liming Zhu",2023-02-07 09:48:29+00:00,http://arxiv.org/pdf/2302.03350v2,"The right to be forgotten (RTBF) is motivated by the desire of people not to be perpetually disadvantaged by their past deeds. For this, data deletion needs to be deep and permanent, and should be removed from machine learning models. Researchers have proposed machine unlearning algorithms which aim to erase specific data from trained models more efficiently. However, these methods modify how data is fed into the model and how training is done, which may subsequently compromise AI ethics from the fairness perspective. To help software engineers make responsible decisions when adopting these unlearning methods, we present the first study on machine unlearning methods to reveal their fairness implications. We designed and conducted experiments on two typical machine unlearning methods (SISA and AmnesiacML) along with a retraining method (ORTR) as baseline using three fairness datasets under three different deletion strategies. Experimental results show that under non-uniform data deletion, SISA leads to better fairness compared with ORTR and AmnesiacML, while initial training and uniform data deletion do not necessarily affect the fairness of all three methods. These findings have exposed an important research problem in software engineering, and can help practitioners better understand the potential trade-offs on fairness when considering solutions for RTBF.","To Be Forgotten or To Be Fair: Unveiling Fairness Implications of Machine Unlearning Methods Dawen Zhang, Shidong Pan, Thong Hoang, Zhenchang Xing, Mark Staples, Xiwei Xu, Lina Yao, Qinghua Lu, Liming Zhu CSIRO‚Äôs Data61 Abstract The right to be forgotten (RTBF) is motivated by the desire of people not to be perpetually disadvan- taged by their past deeds. For this, data deletion needs to be deep and permanent, and should be removed from machine learning models. Researchers have proposed machine unlearning algorithms which aim to erase specific data from trained models more efficiently. However, these methods modify how data is fed into the model and how training is done, which may subsequently compromise AI ethics from the fairness perspective. To help software engineers make responsible decisions when adopting these unlearning meth- ods, we present the first study on machine unlearning methods to reveal their fairness implications. We designed and conducted experiments on two typical machine unlearning methods (SISA and AmnesiacML) along with a retraining method (ORTR) as baseline using three fairness datasets under three different deletion strategies. Experimental results show that under non-uniform data deletion, SISA leads to better fairness compared with ORTR and AmnesiacML, while initial training and uniform data deletion do not necessarily affect the fairness of all three methods. These findings have exposed an important research problem in software engineering, and can help practitioners better understand the potential trade-offs on fairness when considering solutions for RTBF. 1 Introduction Machine learning (ML) systems play an important role in high-stake domains. For example, ML is used to identify human faces in images and videos [1], rec- ommend products to customers [2], and recognize criminals accurately [3]. ML has been called software 2.0 because its behaviours are not written explicitly by programmers, but instead are learned from large datasets [4]. When ML software learns about individuals, it uses datasets collected about them. This data contains a broad range of information that may be used to identify individuals, such as personal emails, credit card numbers, and employee records. Governments or data subjects may sometimes ask ML service providers to remove sensitive information from their datasets for security or privacy purposes or for regu-latory requirements. For example, Clearview AI1, a facial recognition company owning more than 20 bil- lion images, was requested by France‚Äôs Commission Nationale Informatique et Libert¬¥ es to delete data due to a data protection law. In 2014, the Court of Jus- tice of the European Union ordered Google, a multi- national technology company, to remove links to sen- sitive personal data from its internet search results2. Later on, Europol3, the European Union Agency for Law Enforcement Cooperation, was asked to delete individuals‚Äô data having no criminal activity. Such types of demands are expected to grow in the future as regulation and privacy awareness increases. 1https://www.buzzfeednews.com/article/richardnieva/clearview- ordered-to-delete-in-france 2https://www.reuters.com/article/us-eu-alphabet-privacy- idUSKBN1W90R5 3https://www.bleepingcomputer.com/news/security/europol- ordered-to-erase-data-on-those-not-linked-to-crime/ 1arXiv:2302.03350v2  [cs.SE]  10 Jan 2024 The ‚Äúright to be forgotten‚Äù (RTBF) is covered in legislation in different regions, such as the General Data Protection Regulation (GDPR) in the Euro- pean Union [5], the California Consumer Privacy Act (CCPA) in the United States [6], and the Personal In- formation Protection and Electronic Documents Act (PIPEDA) in Canada [7]. These have given the data subject, i.e., service users, the right to request the deletion of their personal data and somehow get rid of their past [8]. When ML service providers receive such requests, they have to remove the personal data from the training set as well as update ML models to satisfy legislative purposes. Moreover, the data dele- tion is supposed to be deep and permanent due to the prime purpose of this right, exposing a key research challenge in various ML applications [9]. Researchers have proposed machine unlearning ap- proaches to enable the RTBF to be efficiently im- plemented when constructing ML models. Specifi- cally, machine unlearning is the problem of making a trained ML model forget the impact of one or multi- ple data points in the training data. As ML models capture the knowledge learned from data, it is neces- sary to erase what they have learned from the deleted data to fulfill the RTBF requirements. A na¬® ƒ±ve strat- egy is to retrain ML models from scratch by exclud- ing the deleted data from the training data. How- ever, this process may incur significant computational costs and may be practically infeasible [10]. Machine unlearning aims to avoid the large computational cost of fully retraining ML models from scratch and at- tempts to update ML models to enable the RTBF. In recent years, machine unlearning has been ex- tensively investigated to address these problems [11‚Äì 16]. There are two main types of machine unlearn- ing approaches: exact machine unlearning , and ap- proximate machine unlearning . While the exact ma- chine unlearning approach ensures that the data dele- tion has no impact on the updated ML model by totally excluding it from the training set, and the approximate machine unlearning approach attempts to update the trained ML model weights to remove the deleted data‚Äôs contribution from the trained ML model. Current machine unlearning research focuses on ef- ficiency and the RTBF satisfaction, but overlooksmany other critical AI properties, such as AI fair- ness. AI fairness is a non-functional property of ML software. It concerns algorithmic bias in ML models and whether they are biased toward any pro- tected attribute classes, such as race, gender, or fa- milial status. There is a rich literature about AI fair- ness [17‚Äì24]. For example, Biswas and Rajan [22] conducted an empirical study, employing 40 models collected from Kaggle, to evaluate the fairness of ML models. The results help AI practitioners to accel- erate fairness in building ML software applications. Zhang and Harman [21] later presented another em- pirical study on the influence of feature size and train- ing data size on the fairness of ML models. It sug- gests that when the feature size is insufficient, the ML models trained on a large training dataset have more unfairness than those trained on a small train- ing dataset. This work also assists us to ensure ML models‚Äô fairness in practice. To the best of our knowledge, there is no prior work studying the fairness implications of machine unlearning methods. However, ignoring fairness in the construction process of machine unlearning sys- tems will adversely affect the benefit of people in protected attribute groups such as race, gender, or familial status. For this reason, ML systems built based on these machine unlearning methods, may vi- olate anti-discrimination legislation, such as the Civil Rights Act [25]. In this paper, we conduct an em- pirical study to evaluate the fairness of machine un- learning models to help AI practitioners understand how to build the fairness ML systems satisfying the RTBF requirements. We aim to answer the following research questions. RQ1: (Initial training) What are the impacts of machine unlearning methods on fairness before the ‚Äúright to be forgotten ‚Äù requests arrive? RQ2: (Uniform distribution) What are the im- pacts of machine unlearning methods on fairness when the deleted data has uniform distribution? RQ3: (Non-uniform distribution) What are the impacts of machine unlearning methods on fairness when the deleted data has non-uniform distribution? To conduct the empirical study, we employ two popular machine unlearning methods, i.e., SISA and AmnesiacML on three AI fairness datasets. SISA 2 (Sharded, Isolated, Sliced, and Aggregated) [13] and AmnesiacML [16] are an exact machine unlearn- ing method and an approximate machine unlearning method, respectively. The three datasets, such as Adult, Bank, and COMPAS, have been widely used to evaluate the fairness of machine learning systems on different tasks, i.e., income prediction, customer churn prediction, and criminal detection. We use four different evaluation metrics, i.e., disparate impact, statistical parity difference, average odds difference, and equal opportunity difference, to measure the fair- ness of machine unlearning methods. We then ana- lyze the results to answer the research questions. The main contributions of our paper are as follows: ‚Ä¢We designed and conducted an empirical study to evaluate the impacts of machine unlearning on fairness. Specifically, we employed two well- recognized machine unlearning methods on three AI fairness datasets and adopted four evaluation metrics to measure the fairness on machine un- learning systems. ‚Ä¢Our results show that adopting machine un- learning methods does not necessarily affect the fairness during initial training. When the data deletion is uniform, the fairness of the resulting model is hardly affected. When the data dele- tion is non-uniform, SISA leads to better fair- ness than other methods. Through these find- ings, we shed light on fairness implications of machine unlearning, and provide knowledge for software engineers about the potential trade-offs when selecting solutions for RTBF. 2 Background This section provides the background knowledge, in- cluding machine unlearning methods and AI fairness metrics. 2.1 Machine Unlearning Methods The classification problem is a type of task that many machine learning systems aim to solve and in which machine unlearning can be leveraged. Given adataset of input-output pairs D= (x, y)‚àà X √óY , we aim to construct a prediction function FD:X ‚Üí Y that maps these inputs to outputs. The prediction function FDis often learned by minimizing the fol- lowing objective function: min FDX iL(FD(xi), yi) +Œª‚Ñ¶(FD) (1) where L(.), ‚Ñ¶(FD), and Œªare the empirical loss func- tion, the regularization function, and the trade-off value, respectively. Let DrandDurepresent the re- tained dataset and the deleted dataset respectively. DrandDuare mutually exclusive, i.e., Dr‚à© Du= √ò andDr‚à™ Du=D. When the ‚Äúright to be forgotten‚Äù (RTBF) requests arrive, a machine unlearning system needs to remove DufromDand update the predic- tion function FD. Machine unlearning attempts to achieve a model FDr, only trained from the retained dataset Dr, without incurring a significant compu- tational cost. Hence, the model FDris often used to evaluate the performance of machine unlearning methods. There are mainly two types of machine unlearning approaches, such as exact machine unlearning and approximate machine unlearning. We present a typ- ical method for each machine unlearning approach. Specifically, SISA and AmnesiacML are selected to represent the exact machine unlearning approach and the approximate machine unlearning approach, re- spectively. These methods, adopted for deep learn- ing models, are efficient and effective in dealing with RTBF requests. We will briefly describe them in the following subsections. 2.1.1 SISA [13] This is an exact machine unlearning method aim- ing to reduce the computational cost of the retrain- ing process by employing a data partitioning tech- nique. Figure 1 briefly describes an overview frame- work of SISA. In the beginning, the original data D is split into Sshards, such as ‚à©i‚àà|S|Di= √ò and ‚à™i‚àà|S|Di=D. Each shard Di‚àà D is then fur- ther split into Kslices, i.e., ‚à©k‚àà|K|Dik= √ò and ‚à™k‚àà|K|Dik=Di. A deep learning (DL) model is con- structed on each shard. The DL model is updated 3 Original Dataset Sub-dataset SlicesSub-dataset SlicesSub-dataset Slices Aggregation OutputShard Shard ShardFigure 1: An overview framework of SISA. The dataset is first sharded into multiple shards. Each shard is further sliced into multiple slices. Each shard is put into a deep learning model trained by gradu- ally increasing the number of slices. The output of the DL models is combined using a voting-based ag- gregation. by gradually increasing the number of slices. Note that all the parameters of the DL model are kept in storage. After finishing the training process, SISA contains multiple DL models. Finally, the output re- sults are collected by employing a voting mechanism on a list of outputs of DL models. When RTBF re- quests arrive, SISA automatically locates the shards and the slices containing the deleted data Du. SISA then retrains the DL models of these shards from the particular cached stage, i.e., before the slices of the deleted data were put into the DL models. The priori probability is the probability of an event happening when we have a limited number of possible outcomes that equally occur [26]. Machine unlearn- ing methods can easily improve their performance when we know the priori probability of data deletion from different groups. For example, wealthy families prefer to keep their privacy for safety purposes, so they tend to send RTBF requests compared to other people [27]. Another example is that people with a Shard Shard Shard Shard(a) Instances with a higher deletion probability, il- lustrated as red squares, are allocated to the same shards so that when RTBF requests arrive, fewer shards are required to be retrained compared with the naive way of randomly allocating the instances. Shard Shard ShardSlices ShardSlices(b) Instances with high likelihood, illustrated as red squares, are placed in the last slices. When we receive the RTBF requests, the DL model of each shard is retrained from a check- point before those slices containing the deleted data are merged. Figure 2: SISA‚Äôs strategies aim to reduce the compu- tational cost of the retraining process. higher educational background are more likely to re- move their personal information from public [28]. There are two strategies for SISA to leverage the priori probability to speed up the training process, hence reducing the computational cost. The first strategy is to allocate the instances with a higher deletion probability into the same shards. This means the retraining process would happen on fewer shards compared with randomly allocating the in- stances. The second strategy is to allocate the in- stances with a higher deletion probability to the last slices. In this case, the retraining process would hap- pen on fewer slices compared with randomly allocat- ing the instances. Figure 2a and Figure 2b briefly describe the first and second strategies, respectively. SISA is efficient and effective in dealing with ma- chine unlearning problems. The method has in- spired many later works [29‚Äì31]. Its source code is placed at https://github.com/cleverhans-lab/ machine-unlearning . 2.1.2 AmnesiacML [16] This is a method of approximate machine unlearning approach. AmnesiacML makes use of the character- istics of batch training in neural networks. During the training process, the updated parameters of a 4 DL model for each batch are recorded and kept in storage. The training process is expressed as follows: Œ∏M=Œ∏initial +EX e=1BX b=1‚àÜŒ∏e,b (2) where Œ∏initial is the initial parameters of the DL model, EandBrepresent the total number of epochs and the total number of batches in each epoch, re- spectively. The updated parameters are stored as {Œ≥b|Œ≥b=PE e=1‚àÜŒ∏e,b,1‚â§b‚â§B}. When we receive the RTBF requests, AmnesiacML automatically locates the batches containing the in- stances that need to be deleted. After that, the DL model‚Äôs parameters are rolled back to remove the im- pact of the deleted data on the trained DL model as follows: Œ∏M‚Ä≤=Œ∏M‚àíÀÜBX ÀÜb=1Œ≥ÀÜb(3) A strategy for AmnesiacML is easily adopted when we comprehend the priori probability of deleted data from different groups. For example, instances with a higher priori probability of being removed can be placed into the same batches. Hence, the process of updating parameters in the DL model will require a less computational cost. Similar to SISA, AmnesiacML shows its efficiency and effectiveness in machine unlearning problems. However, it does not ensure the impact of deleted data being completely forgotten in the updated DL model. The open-source repository of AmnesiacML can be found at https://github.com/lmgraves/ AmnesiacML 2.2 AI Fairness Metrics The goal of AI fairness is to correct machine learn- ing (ML) models with the assumption that models should not be biased between any protected classes, i.e., race, sex, familial status, etc. Each protected class partitions a population into different groups, such as the privileged group and the unprivileged group. In this section, we employ four different fair- ness metrics, such as disparate impact, statisticalparity difference, average odds difference, and equal opportunity difference, to evaluate the impact of ma- chine unlearning methods on fairness. These metrics are widely adopted in measuring the fairness of ML systems [17‚Äì24]. Letxs‚àà {0,1}indicates the binary label of a pro- tected class ( xs= 1 for the privileged group). Let ÀÜy‚àà {0,1}be the predicted outcome of a ML classifi- cation model (ÀÜ y= 1 for the favourable decision). Let y‚àà {0,1}be the binary classification label ( y= 1 is favourable). We present the four fairness evaluation metrics as follows. Disparate impact (DI) [32] measures the ratio of the favourable outcome of the unprivileged group (xs= 0) against the privileged group ( xs= 1). P[ÀÜy= 1|xs= 0] P[ÀÜy= 1|xs= 1](4) Statistical parity difference (SPD) [33] is the dif- ference of the favourable outcome of the unprivileged group ( xs= 0) against the privileged group ( xs= 1). P[ÀÜy= 1|xs= 0]‚àíP[ÀÜy= 1|xs= 1] (5) Average odds difference (AOD) [34] calculates the average of difference in true positive rate and false positive rate between unprivileged and privi- leged groups. 1 2(|P[ÀÜy= 1|xs= 0, y= 1]‚àíP[ÀÜy= 1|xs= 1, y= 1]| +|P[ÀÜy= 1|xs= 0, y= 0]‚àíP[ÀÜy= 1|xs= 1, y= 0]|) (6) Equal opportunity difference (EOD) [34] evalu- ates the difference in true positive rate between un- privileged group and privileged groups. P[ÀÜy= 1|xs= 0, y= 1]‚àíP[ÀÜy= 1|xs= 1, y= 1] (7) All fairness metrics are range from -1 to 1. Among them, DI achieves the greatest fairness of the classi- fication model when it equals 1. The remaining fair- ness metrics, i.e., SPD, AOD, and EOD, attain the greatest fairness when their values are 0. 5 3 Methodology This section first describes our experimental design and setup. Then we briefly present the datasets, the data deletion strategies, and our evaluation metrics. 3.1 Experiment Design Our empirical study starts by first collecting the benchmark fairness datasets. For each dataset, we preprocess and split it into training and testing datasets. The training dataset is then employed to train machine unlearning models. We use six evalua- tion metrics to measure the performance and fairness of these models. Figure 3 briefly presents an overview framework of our experimental design. To identify the fairness datasets, we first refer to the work on fairness testing for machine learn- ing models that employed six datasets, such as Ger- man Credit, Adult, Bank, US Executions, Fraud De- tection, and Raw Car Rentals [35]. Among these datasets, only German Credit, Adult, and Bank are available. We also collect the Heart Disease dataset [36], referring to the presence of heart disease in patients, and the COMPAS dataset [37], aiming to predict the probability of criminals reoffending. In total, we acquire five datasets, i.e., German Credit, Adult, Bank, Heart Disease, and COMPAS, across various domains. As machine unlearning methods are efficient and effective on large datasets [13,16], we re- move datasets that have fewer than 1,000 instances including German Credit and Heart Disease. Hence, there are three datasets, i.e., Adult, Bank, and COM- PAS, that are employed to evaluate the impacts of machine unlearning methods in our experiments. We apply the same data preprocessing approach for all three datasets. Specifically, we employ the AI Fairness 360 toolkit [38], which is an open-source li- brary for fairness metrics, to clean up invalid or miss- ing values, transform categorical values into a one-hot encoding, and convert non-numerical binary values to a binary label (e.g., male: 1,female : 0). We further preprocess the datasets to employ them for fairness evaluation. Specifically, we specify favourable labels or the predicted outcome of our model. We also iden- tify sensitive features (or protected classes) for theprivileged and unprivileged groups. For example, in the Adult dataset, the prediction label is a favourable label, indicating whether a person has a high annual salary. We define sexas a sensitive feature. We as- sume that a male often has a higher annual salary than a female ; hence, the male should be put in the privileged group while the female should be in the un- privileged group regarding the sensitive feature sex. For each dataset, we shuffle and split it into the train- ing dataset (80%) and the testing dataset (20%). We then feed the training dataset into our models. To conduct our experiments, we employ a multi- layer perceptron (MLP), a simple feedforward net- work [39]. The MLP model includes an input layer, a hidden layer, and an output layer. We train the MLP model by optimizing a cross-entropy loss func- tion [40]. Two machine unlearning methods, such as SISA and AmnesiacML, are built based on the MLP model. A na¬® ƒ±ve approach of using original training and retraining (denoted as ORTR ) is also built based on the MLP model as the baseline. We consider two experimental scenarios. ‚Ä¢Scenario 1: Before any ‚Äú right to be forgotten ‚Äù (RTBF) requests, what are the impacts of machine unlearning methods on fairness? In this setting, the training dataset is put into three different mod- els, such as ORTR, SISA, and AmnesiacML (see Figure 3), to train these models. We then employ the testing dataset to evaluate the performance and fairness of these trained models. ‚Ä¢Scenario 2: When the RTBF requests arrive, what are the impacts of machine unlearning meth- ods on fairness? In this setting, we employ data deletion strategies (see Figure 3) to remove in- stances from the training dataset. For each data deletion strategy, we compare the performance and fairness of ORTR with two machine unlearning methods, such as SISA and AmnesiacML. For each dataset, we apply 5-fold cross-validation and take the mean of the results. We have conducted our experiments using an Nvidia T4 GPU and an Intel Xeon Silver 4114 CPU with 16 GB RAM and 12 GB RAM, respectively. The OS is Debian 10.10 LTS 64 bit. The machine learning framework is PyTorch 6  Datasets   - Adult    - Bank   - COMP ASPreprocess data - data cleaning - data encodingFor each datasetPreprocess for fairness - favourable labels - sensitive features - (un)privileged groupsShuffle & split - train: 80% - test: 20%train test Models - OR TR - SISA - AmnesiacML Fairness resultsData deletion strategies - uniform distribution - non-uniform distribution We conduct the experiment five times and take the mean of resultsEvaluation metrics  Performance   - accuracy   - f1 Fairness   - DI, SPD,       AOD, EODFor each strategyFigure 3: Experimentation to evaluate the performance and fairness of machine unlearning methods under different scenarios. . v.1.12 with CUDA 11.3, and the Python language version is 3.7. 3.2 Datasets We conduct our experiments by employing three widely-used fairness datasets to evaluate the impacts of machine unlearning methods on fairness. These datasets are briefly described as follows. ‚Ä¢Adult [41]. This dataset is extracted from the 1994 Census Bureau database4. Its task is to pre- dict whether a person can earn over $50,000 USD per year. The dataset includes 48,842 instances and 14 features. The sensitive features for this dataset are sexandrace. ‚Ä¢Bank [42]. The dataset is collected from market- ing campaigns of a Portuguese banking institution. Its task is to predict whether a client will sub- scribe to a bank term deposit. The dataset con- tains 45,211 instances and 17 features. We use age as the sensitive feature for this dataset. ‚Ä¢COMPAS [37]. The dataset contains recidivism records, which are used to build a prediction sys- 4https://www.census.gov/programs- surveys/ahs/data/1994.htmltem to forecast the possibility of a criminal defen- dant reoffending. The dataset has 7,215 instances and seven features. The sensitive features are de- fined as sexandrace. All the sensitive features are selected by following the previous work [21,22,24]. 3.3 Data Deletion Strategies To send the ‚Äú right to be forgotten ‚Äù (RTBF) requests, we adopt two data deletion strategies. Each strategy has various settings presented as follows. Uniform distribution. For this strategy, we as- sume that the deleted data has a uniform distribu- tion, i.e., each instance has an equal probability of being removed from the training dataset. To select a range of proportions of the total amount of deleted data, we leverage the work of Bertram et al [43]. Specifically, we randomly remove 1%, 5%, 10%, and 20% of the training data. Non-uniform distribution. For this strategy, we assume that the deleted data has a non-uniform dis- tribution, i.e., each instance has a different proba- bility of being removed from the training dataset. Some people have a higher probability of sending RTBF requests compared to other people. For ex- ample, people who are from wealthy families or have 7 a high educational background prefer to keep their sensitive information private for security and privacy purposes [27, 28]. As these personal details are un- available in our datasets, to better understand the fairness implications under different cases when the deleted data is a non-uniform distribution, we first as- sume that the people who request the RTBF are pre- dominantly from privileged groups, and we assume another scenario that people exercising the RTBF are predominantly from unprivileged groups. 3.4 Evaluation Metrics We consider two types of evaluation metrics in our experiments, which are performance and fairness. Performance measure. Before evaluating the fair- ness of models, we calculate their performance in terms of accuracy and F1 score. ‚Ä¢Accuracy: The ratio of true predictions among the total number of predictions [44]. ‚Ä¢F1 score: The harmonic mean between precision and recall [45]. Fairness measure. To measure the fairness of models, we adopt the four fairness metrics, i.e., dis- parate impact (DI), statistical parity difference, aver- age odds difference, and equal opportunity difference, briefly mentioned in Section 2.2. For simplicity in presenting and observing, we convert all the fairness metric values into their absolute values. As disparate impact (DI) value differs from other fairness metrics, we use |1 - DI |to evaluate the fairness of our mod- els. In this case, all four fairness metrics achieve the greatest fairness when their values equal 0. 4 Experiments In this section, we provide results and insights from the experimentation, to answer our research ques- tions. RQ1: (Initial training) What are the impacts of machine unlearning methods on fairness before the ‚Äú right to be forgotten ‚Äù requests arrive? 0 0.2 0.4 0.6 0.8 1 ORTR 5h1c 10h1c 15h1c 20h1c ORTR 5h1c 10h1c 15h1c 20h1c ORTR 5h1c 10h1c 15h1c 20h1c MLP 5h1c 10h1c 15h1c 20h1c ORTR 5h1c 10h1c 15h1c 20h1cC-R C-S B-Y A-R A-S |1-DI| |SPD| |AOD| |EOD|(a) Fairness metrics for 5/10/15/20 shards one slice 0 0.2 0.4 0.6 0.8 1 ORTR 5h1c 10h1c 15h1c 20h1c ORTR 5h1c 10h1c 15h1c 20h1c ORTR 5h1c 10h1c 15h1c 20h1cCOMPAS Bank Adult Accuracy F1-score(b) Performance metrics for 5/10/15/20 shards one slice 0 0.2 0.4 0.6 0.8 1 ORTR 5h5c 10h5c 15h5c 20h5c ORTR 5h5c 10h5c 15h5c 20h5c ORTR 5h5c 10h5c 15h5c 20h5c ORTR 5h5c 10h5c 15h5c 20h5c ORTR 5h5c 10h5c 15h5c 20h5cC-R C-S B-Y A-R A-S |1-DI| |SPD| |AOD| |EOD| (c) Fairness metrics for 5/10/15/20 shards five slices 0 0.2 0.4 0.6 0.8 1 ORTR 5h5c 10h5c 15h5c 20h5c ORTR 5h5c 10h5c 15h5c 20h5c ORTR 5h5c 10h5c 15h5c 20h5cCOMPAS Bank Adult Accuracy F1-score(d) Performance metrics for 5/10/15/20 shards five slices Figure 4: Fairness (the smaller, the better) and per- formance (the higher, the better) evaluation results of SISA with different shards (5/10/15/20h) and slices (1/5/10c) The exact machine unlearning methods, such as 8 00.10.20.30.40.50.60.70.8 ORTR - 1% ORTR - 5% ORTR - 10% ORTR - 20% SISA - 1% SISA - 5% SISA - 10% SISA - 20% AmnesiacML - 1% AmnesiacML - 5% AmnesiacML - 10% AmnesiacML - 20% ORTR - 1% ORTR - 5% ORTR - 10% ORTR - 20% SISA - 1% SISA - 5% SISA - 10% SISA - 20% AmnesiacML - 1% AmnesiacML - 5% AmnesiacML - 10% AmnesiacML - 20% ORTR - 1% ORTR - 5% ORTR - 10% ORTR - 20% SISA - 1% SISA - 5% SISA - 10% SISA - 20% AmnesiacML - 1% AmnesiacML - 5% AmnesiacML - 10% AmnesiacML - 20% ORTR - 1% ORTR - 5% ORTR - 10% ORTR - 20% SISA - 1% SISA - 5% SISA - 10% SISA - 20% AmnesiacML - 1% AmnesiacML - 5% AmnesiacML - 10% AmnesiacML - 20% ORTR - 1% ORTR - 5% ORTR - 10% ORTR - 20% SISA - 1% SISA - 5% SISA - 10% SISA - 20% AmnesiacML - 1% AmnesiacML - 5% AmnesiacML - 10% AmnesiacML - 20% C-R C-S B-Y A-R A-S |1-DI| |SPD| |AOD| |EOD|Figure 5: Fairness (the smaller, the better) evaluation results of different training methods after uniform data deletion under various deletion proportions. -0.1-0.0500.050.10.150.20.250.30.350.4 ORTR - 1% ORTR - 5% ORTR - 10% ORTR - 20% SISA - 1% SISA - 5% SISA - 10% SISA - 20% AmnesiacML - 1% AmnesiacML - 5% AmnesiacML - 10% AmnesiacML - 20% ORTR - 1% ORTR - 5% ORTR - 10% ORTR - 20% SISA - 1% SISA - 5% SISA - 10% SISA - 20% AmnesiacML - 1% AmnesiacML - 5% AmnesiacML - 10% AmnesiacML - 20% ORTR - 1% ORTR - 5% ORTR - 10% ORTR - 20% SISA - 1% SISA - 5% SISA - 10% SISA - 20% AmnesiacML - 1% AmnesiacML - 5% AmnesiacML - 10% AmnesiacML - 20% ORTR - 1% ORTR - 5% ORTR - 10% ORTR - 20% SISA - 1% SISA - 5% SISA - 10% SISA - 20% AmnesiacML - 1% AmnesiacML - 5% AmnesiacML - 10% AmnesiacML - 20% ORTR - 1% ORTR - 5% ORTR - 10% ORTR - 20% SISA - 1% SISA - 5% SISA - 10% SISA - 20% AmnesiacML - 1% AmnesiacML - 5% AmnesiacML - 10% AmnesiacML - 20% C-R C-S B-Y A-R A-S |1-DI| |SPD| |AOD| |EOD| Figure 6: Difference of fairness between before and after the deletion. Value 0 indicates no fairness change, while positive values and negative values indicate worsen fairness and improved fairness respectively. SISA, modify how data is fed into machine learn- ing models, affecting the fairness of these models be- fore RTBF is requested, i.e., initial training. This research question is aimed to understand the impact of machine unlearning methods on fairness in initial training. Specifically, we compare SISA with ORTR, a na¬® ƒ±ve approach built based on a MLP model. Note that the approximate machine unlearning methods, such as AmnesiacML, only update the ML models‚Äô parameters without modifying their architecture. We therefore ignore AmnesiacML in this research ques- tion. We evaluate the impact of SISA and ORTR on fair- ness across different numbers of shards (5, 10, 15, 20) and numbers of slices (1, 5). We execute the ex- periments on three different datasets, such as Adult, Bank, and COMPAS. For ease of observation, we de-note Adult, Bank, and COMPAS as A,B, and C, respectively. Sex,Race, and Age, which are the sen- sitive features, are represented as S,R, and Y, respec- tively. The number of shards and the number of slices are represented as handc, respectively. For example, given 1,000 instances, 5h5c means these instances are split into five shards. Each shard is then further split into five slices. In the end, each shard contains 200 instances and each slice includes 40 instances. Figure 4a shows the fairness evaluation results of SISA initial training with 5/10/15/20 shards and one slice. The baseline is ORTR. We can see that for some datasets and features, the |1‚àíDI|value gets better when the number of shards increases, including B- YandA-R, while for C-S andA-S the value gets worse when the number of shards increases. Simi- larly, for other metrics, the trends are not always one 9 way along the increasing number of shards. Although there are some tendencies within each dataset, over- all across all datasets, we cannot come up with an interpretation towards any outstanding fairness im- pact from the SISA method and its number of shards. In terms of performance, there is degradation of less than 10% in accuracy for Adult and Bank datasets, while there is no apparent degradation for the COMPAS dataset. This could be because the COMPAS dataset is much smaller than the Adult and Bank datasets and has fewer useful features, making it easier to converge and less likely to experience per- formance degradation from data partitioning. The fairness evaluation results of SISA at initial training with five slices are shown in Figure 4c. Com- paring the fairness between one slice and five slices, we find no noticeable difference across all fairness metrics. We have the similar observation on perfor- mance metrics shown in Figure 4b and Figure 4d, and this is expectedly identical to what was reported in the SISA paper [13]. During initial training, no significant fairness impacts are observed from using machine un- learning methods, such as SISA. In addition, compared with ORTR, SISA has performance degradation on larger datasets. RQ2: (Uniform distribution) What are the impacts of machine unlearning methods on fairness when the deleted data has uniform distribution? A uniform data deletion strategy assumes that ev- ery instance has an equal possibility of being removed from trained models. In this research question, we want to explore how much these machine unlearning methods impact fairness when the deleted data is in uniform distribution. For this research question, we employ a range of deletion rates from small to large (1%, 5%, 10%, 20%) chosen from the statistics [43]. For SISA, we apply its default setting (i.e., 5h1c). For AmnesiacML, we train its model according to the requirements in the paper [16].Figure 5 presents the results of fairness in various deletion proportions. We see that there is no clear trend indicating which methods achieve better results across all datasets (i.e., Adult, Bank, and COMPAS) and sensitive features ( Sex,Race, and Age). Figure 6 shows the difference in fairness before and after ap- plying the deletion strategy. It indicates that Amne- siacML is likely to be prone to fairness loss caused by this deletion strategy, while SISA is the most robust. However, the difference in fairness between before and after data deletion is unclear in Adult and COM- PAS datasets. The main reason is that the deleted data is in uniform distribution, i.e., each instance has an equal probability of being removed from trained models, leading to similar fairness results in this set- ting. We also see that all methods have a relatively large variation in fairness on the Bank dataset. The reason is that this dataset is highly imbalanced com- pared to other datasets, such as Adult and COM- PAS. Specifically, among 45,211 instances, only 963 instances (2.13%) are labeled as negative instances in the Bank dataset. Figure 7 illustrates the performance of this data deletion strategy. It shows that the deleted data has minimal impact in terms of performance on trained models. As the deletion proportion is 1% - 20%, we believe the deleted data might be insufficient to cause non-trivial performance degradation. Under the data deletion of uniform distribu- tion, the fairness is not clearly affected by ma- chine unlearning methods, while ORTR out- performs SISA and AmnesiacML on perfor- mance metrics. RQ3: (Non-uniform distribution) What are the impacts of machine unlearning methods on fairness when the deleted data has non-uniform distribution? People from different groups have the equal right to send RTBF requests to remove their sensitive infor- mation, but they may have varied probabilities [28]. In this research question, we aim to understand the impacts of machine unlearning methods on fairness when the deleted data has non-uniform distribution. 10 00.10.20.30.40.50.60.70.80.91 ORTR - 1% ORTR - 5% ORTR - 10% ORTR - 20% SISA - 1% SISA - 5% SISA - 10% SISA - 20% AmnesiacML - 1% AmnesiacML - 5% AmnesiacML - 10% AmnesiacML - 20% ORTR - 1% ORTR - 5% ORTR - 10% ORTR - 20% SISA - 1% SISA - 5% SISA - 10% SISA - 20% AmnesiacML - 1% AmnesiacML - 5% AmnesiacML - 10% AmnesiacML - 20% ORTR - 1% ORTR - 5% ORTR - 10% ORTR - 20% SISA - 1% SISA - 5% SISA - 10% SISA - 20% AmnesiacML - 1% AmnesiacML - 5% AmnesiacML - 10% AmnesiacML - 20% ORTR - 1% ORTR - 5% ORTR - 10% ORTR - 20% SISA - 1% SISA - 5% SISA - 10% SISA - 20% AmnesiacML - 1% AmnesiacML - 5% AmnesiacML - 10% AmnesiacML - 20% ORTR - 1% ORTR - 5% ORTR - 10% ORTR - 20% SISA - 1% SISA - 5% SISA - 10% SISA - 20% AmnesiacML - 1% AmnesiacML - 5% AmnesiacML - 10% AmnesiacML - 20% C-R C-S B-Y A-R A-S Accuracy F1-scoreFigure 7: Performance (the higher, the better) results of different training methods after uniform data deletion under various deletion proportions. The simplest way to conduct the experiments is to remove the deleted data so that it has a similar dis- tribution to the percentage of each group (privileged or unprivileged groups) for each sensitive feature on the whole dataset. As our datasets are imbalanced on some features, this RTBF simulation strategy highly likely leads to empty groups. To overcome this prob- lem, we simplify our scenario by removing the data only from either the privileged group or the unprivi- leged group. Specifically, we remove 50% of the data for each group, making the potential impact on fair- ness more apparent. Note that we assume the prior probability of a certain group (the privileged group or the unprivileged group) is known. Figure 8a and Figure 8b present the results on data deletion from the privileged group and the unprivi- leged group, respectively. From the charts we can see that SISA with a sharding strategy (see Figure 2a) achieve the best |1‚àíDI|values for nine out of ten com- binations. Figure 9 shows that SISA with a sharding strategy may also have fairness improvements after data deletion. The extent of improvements varies under different datasets, such as Adult, Bank, and COMPAS, and different sensitive features, i.e., Sex, Race, and Age. Furthermore, we plot the differences between SISA with and without the sharding strategy in Figure 10. Overall, the fairness is likely to be im- proved across all metrics when the sharding strategy is applied. Moreover, such improvements are likely to happen on those datasets and sensitive features with more imbalanced distributions. -0.3-0.25-0.2-0.15-0.1-0.0500.050.10.150.2 ORTR SISA-sharding SISA-slicing AmnesiacML ORTR SISA-sharding SISA-slicing AmnesiacML ORTR SISA-sharding SISA-slicing AmnesiacML ORTR SISA-sharding SISA-slicing AmnesiacML ORTR SISA-sharding SISA-slicing AmnesiacML C-R C-S B-Y A-R A-S |1-DI| |SPD| |AOD| |EOD|(a) Fairness evaluation results after deletion from privi- leged group. -0.3-0.25-0.2-0.15-0.1-0.0500.050.10.150.2 ORTR SISA-sharding SISA-slicing AmnesiacML ORTR SISA-sharding SISA-slicing AmnesiacML ORTR SISA-sharding SISA-slicing AmnesiacML ORTR SISA-sharding SISA-slicing AmnesiacML ORTR SISA-sharding SISA-slicing AmnesiacML C-R C-S B-Y A-R A-S |1-DI| |SPD| |AOD| |EOD| (b) Fairness evaluation results after deletion from un- privileged group. Figure 8: Fairness (the smaller, the better) evalua- tion results of non-uniform deletion. The results are shown as the distances from the ORTR results (base- line). SISA with a slicing strategy (see Figure 2b) is also likely to outperform ORTR on |1‚àíDI|. However, it achieves less performance compared to SISA with a sharding strategy. For ORTR, we observe that the 11 -0.18-0.13-0.08-0.030.02C-R C-S B-Y A-R A-S |1-DI| |SPD| |AOD| |EOD|(a) Fairness change after deletion using SISA with sharding strategy on privi- leged groups. -0.18-0.13-0.08-0.030.02C-R C-S B-Y A-R A-S |1-DI| |SPD| |AOD| |EOD|(b) Fairness change after deletion using SISA with sharding strategy on un- privileged groups. Figure 9: Fairness change after deletion using SISA with sharding strategy. -0.16-0.11-0.06-0.010.04C-R C-S B-Y A-R A-S |1-DI| |SPD| |AOD| |EOD| (a) Fairness difference be- tween SISA with and with- out applying sharding strat- egy on privileged groups. -0.16-0.11-0.06-0.010.04C-R C-S B-Y A-R A-S |1-DI| |SPD| |AOD| |EOD|(b) Fairness difference be- tween SISA with and with- out applying sharding strat- egy on unprivileged groups. Figure 10: Fairness difference between SISA with and without applying sharding strategy. fairness changes between before and after retraining are weak. Similarly, AmnesiacML tends to be close to the ORTR across all indicators. Performance-wise, we observed no significant per- formance difference between before and after the data deletion, or between methods with and with- out strategies applied. The changes in performance indicators are always less than 5%. The performance differences between different methods are likely to be inherited from the methods instead of escalated from unlearning strategies or distribution settings.Under the data deletion of non-uniform dis- tribution, SISA with a sharding strategy achieves better fairness. The performance has no significant degradation from deletion using machine unlearning methods. 5 Discussion Our research explores machine unlearning methods on fairness and has gained empirical observations about fairness regarding initial training, data deletion with uniform distribution, and data deletion with non-uniform distribution. We will discuss these ob- servations as follows. Before the ‚Äúright to be forgotten‚Äù requests arrive, we see that there are no significant impacts of ma- chine unlearning methods, such as SISA, on fairness. The observations also indicate that SISA achieves lower performance on large datasets, such as Adult and Bank, in this setting. When the deleted data is in uniform distribution, there is no clear impact of machine unlearning meth- ods on fairness. The observations also show that ORTR, a naive approach that retrains a model from scratch, outperforms SISA and AmnesiacML in terms of accuracy and F1 score on large datasets, i.e., Adult and Bank. When the deleted data is in a non-uniform distri- bution, SISA with a sharding strategy (see Figure 2a) is more likely to achieve better fairness compared to other models. Moreover, we also see that there is no significant performance difference between before and after the data deletion in machine unlearning meth- ods. 6 Threat to Validity 6.1 Internal validity To perform our empirical study, we employed two machine unlearning methods on three AI fairness datasets. For machine unlearning algorithms, we reused existing implementations by following their 12 open-source repositories. All three datasets are well- known and widely used by AI fairness researchers. We employed the AIF360 library to preprocess the datasets for fairness evaluation. We have carefully checked the code and data, but there might be some remaining errors. Although there was some random- ness involved in the experiments, we have tried to minimize this threat by conducting experiments mul- tiple times (5-fold cross-validation). 6.2 External validity Threats to external validity refer to the generaliz- ability of the study. In our experiments, we only used three AI fairness datasets, collected from three tasks, i.e., income prediction, customer churn pre- diction, and criminal detection, with a total of five protected classes and two machine unlearning meth- ods to perform our experiments. We also performed two data deletion strategies. This may be a threat to external validity as these datasets, tasks, methods, and data deletion strategies may not be generalized beyond our studies. As the datasets and methods are widely adopted in AI fairness and machine un- learning research fields respectively, we believe that there is minimal threat to external validity. In the fu- ture, we plan to investigate more machine unlearning methods and AI fairness datasets. 6.3 Construct validity Threats to construct validity indicate evaluation met- rics failing to be selective. We employed different evaluation metrics, widely used to measure fairness in machine learning models, to minimize threats to construct validity. 7 Related Work This section introduces the work related to machine unlearning and AI fairness. 7.1 Machine Unlearning Machine unlearning was first presented by Cao and Yang [11]. Its objective is to build a system that canremove the impact of a data point in the training data. Early works on machine unlearning focused on traditional machine learning (ML) models, i.e., sup- port vector machines, linear classification, logistic re- gression, etc., by facilitating incremental and decre- mental learning techniques to efficiently retrain ML models after adding or removing multiple data points from the training set [46‚Äì49]. Since then, machine un- learning has been extensively studied to reduce the computational cost of retraining deep learning (DL) models [11‚Äì16]. Specifically, there are two main re- search approaches for employing machine unlearning in deep neural networks, i.e., exact machine unlearn- ingandapproximate machine unlearning . The exact machine unlearning approach requires a new model to be trained from scratch by removing the deleted data from the training set. This approach ensures that the deleted data has no impact on the new model as we exclude it from the training set. To make the retraining process more efficient, previous works [12, 13] divided the training data into multi- ple disjoint shards and DL models were trained on each of these shards. Hence, when a request to re- move data points from the training set comes, we only need to retrain the models containing the removed data points. The exact machine unlearning approach necessitates changes in the DL architecture, making testing and maintaining the DL system challenging. The approximate machine unlearning approach starts with the trained DL model and attempts to update its weights so that the model will no longer be affected by the removed data points from the training data. Izzo et al. [50] showed that we may achieve a linear time complexity in machine unlearning by up- dating a projective residual of the trained DL mod- els. Guo et al. [51] and Golatkar et al. [52] employed a Newton step on the model weights to eliminate the influence of removed data points. Graves et al. [16] later proposed an amnesiac unlearning method by storing a list of batches and their updated weights; hence, DL models only need to undo the updated weights from the batches containing the removed data points. The approximate machine unlearning approach is more computationally efficient than the exact machine learning approach. However, we are unsure whether the removed data points have been 13 completely forgotten in the trained model. Although machine unlearning methods have been comprehensively studied, their fairness has not been investigated in the process of building machine un- learning systems. To fill in this gap, we perform an extensive study on the two machine unlearning approaches, i.e., extract and approximate, to reveal their fairness implications. 7.2 AI Fairness AI fairness or machine learning (ML) fairness has been deeply investigated during the last decade [17‚Äì 23]. Its basic idea is that the prediction model should not be biased between different individuals or groups from the protected attribute class (e.g., race, sex, fa- milial status, etc.). There are mainly two major types of AI fairness, i.e., group fairness andindividual fair- ness [19,23]. Group fairness requires the prediction model to produce different predictive results for different groups in the protected attribute class. Several stud- ies proposed a specific kind of utility maximization decision function to satisfy a fairness constraint and derive optimal fairness decisions [53‚Äì56]. Hardt et al. [54] employed the Bayes optimal non-discriminant to derive fairness in a classification model. Corbett- Davies et al. [53] considered AI fairness as a con- strained optimization problem to maximize accuracy while satisfying group fairness constraints. Menon and Williamson [55] investigated the trade-off be- tween accuracy and group fairness in AI models and proposed a threshold function for the fairness prob- lem. Group fairness often ignores the individual char- acteristics of the group, leading to permit unfairness in training ML models [57]. Individual fairness on the other hand expects the prediction model to produce similar predictive re- sults among similar individuals who are only differ- ent in protected attributes. Udeshi et al. [58] pre- sented Aequitas, a fully automated and directed test generation framework, to generate test inputs and improve the individual fairness of ML models. Ag- garwal et al. [35] employed both symbolic execution (together with local explainability) to identify factors making decisions and then generate test inputs. Sunet al. [59] combined both input mutation and meta- morphic relations to improve the fairness of machine translation. Other works explore the effectiveness and effi- ciency of existing ML methods for software fair- ness [21,22,24]. Specifically, researchers focus on im- proving fairness in ML systems by leveraging miti- gation techniques [22], removing biased instances in training data [24], or improving the quality of fea- tures in the datasets [21]. Even though AI fairness has been widely adopted, its properties have not been revealed in machine un- learning. We perform an empirical study on the three AI fairness datasets, i.e., Adult, Bank, and COM- PAS to understand the impacts of machine unlearn- ing models on fairness. 8 Conclusion and Future Work Machine unlearning emerges with the need to imple- ment the ‚Äúright to be forgotten‚Äù (RTBF) efficiently while existing studies overlook its impact on fairness. To the best of our knowledge, we are the first to perform an empirical study on the impacts of ma- chine unlearning methods on fairness. We designed and conducted experiments on two typical machine unlearning methods (SISA and AmnesiacML) along with a retraining method (ORTR) using three fair- ness datasets under three different deletion strategies. We found that SISA leads to better fairness compared with AmnesiacML and ORTR, while initial training and uniform data deletion do not necessarily affect the fairness of all three methods. Our research has shed light on fairness implications of machine un- learning and provided knowledge for software engi- neers about the trade-offs when considering machine unlearning methods as a solution for RTBF. In the future, more research efforts are needed to broaden the understanding of fairness implications into other machine unlearning methods as well as investigate the underlying causes of their impact on fairness. 14 References [1] P. Singhal, P. K. Srivastava, A. K. Tiwari, and R. K. Shukla, ‚ÄúA survey: Approaches to facial detection and recognition with machine learn- ing techniques,‚Äù in Proceedings of Second Doc- toral Symposium on Computational Intelligence . Springer, 2022, pp. 103‚Äì125. [2] W. Li, J. Matejka, T. Grossman, J. A. Konstan, and G. Fitzmaurice, ‚ÄúDesign and evaluation of a command recommendation system for software applications,‚Äù ACM Transactions on Computer- Human Interaction (TOCHI) , vol. 18, no. 2, pp. 1‚Äì35, 2011. [3] C. Rudin and B. Ustun, ‚ÄúOptimized scoring systems: Toward trust in machine learning for healthcare and criminal justice,‚Äù Interfaces , vol. 48, no. 5, pp. 449‚Äì466, 2018. [4] A. J. Ratner, B. Hancock, and C. R¬¥ e, ‚ÄúThe role of massively multi-task and weak supervision in software 2.0.‚Äù in CIDR , 2019. [5] ‚ÄúGeneral data protection regulation,‚Äù https:// gdpr-info.eu/. [6] ‚ÄúCalifornia consumer privacy act,‚Äù https://oag. ca.gov/privacy/ccpa. [7] ‚ÄúAnnouncement: Privacy commissioner seeks federal court determination on key issue for canadians‚Äô online reputa- tion,‚Äù https://www.priv.gc.ca/en/opc-news/ news-and-announcements/2018/an 181010/. [8] J. Rosen, ‚ÄúThe right to be forgotten,‚Äù Stan. L. Rev. Online , vol. 64, p. 88, 2011. [9] J. Stoyanovich, B. Howe, and H. V. Jagadish, ‚ÄúResponsible data management,‚Äù Proceedings of the VLDB Endowment , vol. 13, no. 12, pp. 3474‚Äì 3488, 2020. [10] N. C. Thompson, K. Greenewald, K. Lee, and G. F. Manso, ‚ÄúThe computational limits of deep learning,‚Äù arXiv preprint arXiv:2007.05558 , 2020.[11] Y. Cao and J. Yang, ‚ÄúTowards making systems forget with machine unlearning,‚Äù in 2015 IEEE Symposium on Security and Privacy . IEEE, 2015, pp. 463‚Äì480. [12] T. Baumhauer, P. Sch¬® ottle, and M. Zeppelzauer, ‚ÄúMachine unlearning: Linear filtration for logit- based classifiers,‚Äù Machine Learning , pp. 1‚Äì24, 2022. [13] L. Bourtoule, V. Chandrasekaran, C. A. Choquette-Choo, H. Jia, A. Travers, B. Zhang, D. Lie, and N. Papernot, ‚ÄúMachine unlearning,‚Äù in2021 IEEE Symposium on Security and Pri- vacy (SP) . IEEE, 2021, pp. 141‚Äì159. [14] A. Golatkar, A. Achille, and S. Soatto, ‚ÄúForget- ting outside the box: Scrubbing deep networks of information accessible from input-output obser- vations,‚Äù in European Conference on Computer Vision . Springer, 2020, pp. 383‚Äì398. [15] M. Du, Z. Chen, C. Liu, R. Oak, and D. Song, ‚ÄúLifelong anomaly detection through unlearn- ing,‚Äù in Proceedings of the 2019 ACM SIGSAC Conference on Computer and Communications Security , 2019, pp. 1283‚Äì1297. [16] L. Graves, V. Nagisetty, and V. Ganesh, ‚ÄúAmnesiac machine learning,‚Äù Proceedings of the AAAI Conference on Artificial Intelligence , vol. 35, no. 13, pp. 11 516‚Äì11 524, May 2021. [Online]. Available: https://ojs.aaai.org/index. php/AAAI/article/view/17371 [17] A. Finkelstein, M. Harman, S. A. Mansouri, J. Ren, and Y. Zhang, ‚Äú‚Äúfairness analysis‚Äù in requirements assignments,‚Äù in 2008 16th IEEE International Requirements Engineering Confer- ence. IEEE, 2008, pp. 115‚Äì124. [18] K. Ahmad, M. Bano, M. Abdelrazek, C. Arora, and J. Grundy, ‚ÄúWhat‚Äôs up with requirements engineering for artificial intelligence systems?‚Äù in2021 IEEE 29th International Requirements Engineering Conference (RE) . IEEE, 2021, pp. 1‚Äì12. 15 [19] N. Mehrabi, F. Morstatter, N. Saxena, K. Ler- man, and A. Galstyan, ‚ÄúA survey on bias and fairness in machine learning,‚Äù ACM Computing Surveys (CSUR) , vol. 54, no. 6, pp. 1‚Äì35, 2021. [20] J. M. Zhang, M. Harman, L. Ma, and Y. Liu, ‚ÄúMachine Learning Testing: Survey, Landscapes and Horizons,‚Äù IEEE Transactions on Software Engineering , vol. 48, no. 1, pp. 1‚Äì36, 2020. [21] J. M. Zhang and M. Harman, ‚Äú‚Äùignorance and prejudice‚Äù in software fairness,‚Äù in 2021 IEEE/ACM 43rd International Conference on Software Engineering (ICSE) . IEEE, 2021, pp. 1436‚Äì1447. [22] S. Biswas and H. Rajan, ‚ÄúDo the machine learn- ing models on a crowd sourced platform exhibit bias? an empirical study on model fairness,‚Äù in Proceedings of the 28th ACM joint meeting on European software engineering conference and symposium on the foundations of software en- gineering , 2020, pp. 642‚Äì653. [23] C. Dwork, M. Hardt, T. Pitassi, O. Reingold, and R. Zemel, ‚ÄúFairness through awareness,‚Äù in Proceedings of the 3rd innovations in theoretical computer science conference , 2012, pp. 214‚Äì226. [24] J. Chakraborty, S. Majumder, Z. Yu, and T. Menzies, ‚ÄúFairway: A way to build fair ml software,‚Äù in Proceedings of the 28th ACM Joint Meeting on European Software Engineering Con- ference and Symposium on the Foundations of Software Engineering , 2020, pp. 654‚Äì665. [25] N. Murakawa, The first civil right: How liberals built prison America . Oxford University Press, 2014. [26] K. M. Leung, ‚ÄúNaive bayesian classifier,‚Äù Poly- technic University Department of Computer Sci- ence/Finance and Risk Engineering , vol. 2007, pp. 123‚Äì156, 2007. [27] N. Upton, E. J. Teal, and J. T. Felan, ‚ÄúStrategic and business planning practices of fast growth family firms,‚Äù Journal of small business man- agement , vol. 39, no. 1, pp. 60‚Äì72, 2001.[28] ‚ÄúCharter of fundamental rights and general data protection regulation,‚Äù https://europa.eu/ eurobarometer/surveys/detail/2222, 2019. [29] C. Chen, F. Sun, M. Zhang, and B. Ding, ‚ÄúRec- ommendation unlearning,‚Äù in Proceedings of the ACM Web Conference 2022 , 2022, pp. 2768‚Äì 2777. [30] N. Aldaghri, H. Mahdavifar, and A. Beirami, ‚ÄúCoded machine unlearning,‚Äù IEEE Access , vol. 9, pp. 88 137‚Äì88 150, 2021. [31] M. Chen, Z. Zhang, T. Wang, M. Backes, M. Humbert, and Y. Zhang, ‚ÄúGraph unlearn- ing,‚Äù arXiv preprint arXiv:2103.14991 , 2021. [32] A. Chouldechova, ‚ÄúFair prediction with dis- parate impact: A study of bias in recidivism pre- diction instruments,‚Äù Big data , vol. 5, no. 2, pp. 153‚Äì163, 2017. [33] T. Calders and S. Verwer, ‚ÄúThree naive bayes approaches for discrimination-free classifica- tion,‚Äù Data mining and knowledge discovery , vol. 21, no. 2, pp. 277‚Äì292, 2010. [34] M. Hardt, E. Price, and N. Srebro, ‚ÄúEqual- ity of opportunity in supervised learning,‚Äù Ad- vances in neural information processing systems , vol. 29, 2016. [35] A. Aggarwal, P. Lohia, S. Nagar, K. Dey, and D. Saha, ‚ÄúBlack box fairness testing of machine learning models,‚Äù in Proceedings of the 2019 27th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering , 2019, pp. 625‚Äì635. [36] ‚ÄúHeart disease data set,‚Äù https://archive.ics.uci. edu/ml/datasets/heart+disease, 1988. [37] https://github.com/propublica/ compas-analysis, 2017. [38] R. K. Bellamy, K. Dey, M. Hind, S. C. Hoff- man, S. Houde, K. Kannan, P. Lohia, J. Mar- tino, S. Mehta, A. Mojsilovi¬¥ c et al. , ‚ÄúAi fairness 16 360: An extensible toolkit for detecting and mit- igating algorithmic bias,‚Äù IBM Journal of Re- search and Development , vol. 63, no. 4/5, pp. 4‚Äì1, 2019. [39] H. Ramchoun, Y. Ghanou, M. Ettaouil, and M. A. Janati Idrissi, ‚ÄúMultilayer perceptron: Ar- chitecture optimization and training,‚Äù Interna- tional Journal of Interactive Multimedia and Ar- tificial Intelligence , 2016. [40] M. Martinez and R. Stiefelhagen, ‚ÄúTaming the cross entropy loss,‚Äù in German Conference on Pattern Recognition . Springer, 2018, pp. 628‚Äì 637. [41] ‚ÄúAdult data set,‚Äù https://archive.ics.uci.edu/ ml/datasets/adult, 1996. [42] ‚ÄúBank marketing data set,‚Äù https://archive.ics. uci.edu/ml/datasets/Bank+Marketing, 2012. [43] T. Bertram, E. Bursztein, S. Caro, H. Chao, R. C. Feman, P. Fleischer, A. Gustafsson, J. Hemerly, C. Hibbert, L. Invernizzi, L. K. Don- nelly, J. Ketover, J. Laefer, P. Nicholas, Y. Niu, H. Obhi, D. Price, A. Strait, K. Thomas, and A. Verney, ‚ÄúFive years of the right to be forgot- ten,‚Äù in Proceedings of the Conference on Com- puter and Communications Security , 2019. [44] A. Gunawardana and G. Shani, ‚ÄúA survey of accuracy evaluation metrics of recommendation tasks.‚Äù Journal of Machine Learning Research , vol. 10, no. 12, 2009. [45] H. Dalianis, ‚ÄúEvaluation metrics and evalua- tion,‚Äù in Clinical text mining . Springer, 2018, pp. 45‚Äì53. [46] M. Karasuyama and I. Takeuchi, ‚ÄúMultiple in- cremental decremental learning of support vec- tor machines,‚Äù IEEE Transactions on Neural Networks , vol. 21, no. 7, pp. 1048‚Äì1059, 2010. [47] C.-H. Tsai, C.-Y. Lin, and C.-J. Lin, ‚ÄúIncremen- tal and decremental training for linear classifica- tion,‚Äù in Proceedings of the 20th ACM SIGKDD international conference on Knowledge discovery and data mining , 2014, pp. 343‚Äì352.[48] G. Cauwenberghs and T. Poggio, ‚ÄúIncremental and decremental support vector machine learn- ing,‚Äù Advances in neural information processing systems , vol. 13, 2000. [49] E. Romero, I. Barrio, and L. Belanche, ‚ÄúIncre- mental and decremental learning for linear sup- port vector machines,‚Äù in Artificial Neural Net- works ‚Äì ICANN 2007 , J. M. de S¬¥ a, L. A. Alexan- dre, W. Duch, and D. Mandic, Eds. Berlin, Hei- delberg: Springer Berlin Heidelberg, 2007, pp. 209‚Äì218. [50] Z. Izzo, M. A. Smart, K. Chaudhuri, and J. Zou, ‚ÄúApproximate Data Deletion from Ma- chine Learning Models,‚Äù arXiv e-prints , p. arXiv:2002.10077, Feb. 2020. [51] C. Guo, T. Goldstein, A. Hannun, and L. Van Der Maaten, ‚ÄúCertified data removal from machine learning models,‚Äù in Proceedings of the 37th International Conference on Machine Learning , ser. Proceedings of Machine Learning Research, H. D. III and A. Singh, Eds., vol. 119. PMLR, 13‚Äì18 Jul 2020, pp. 3832‚Äì3842. [Online]. Available: https://proceedings.mlr.press/v119/ guo20c.html [52] A. Golatkar, A. Achille, and S. Soatto, ‚ÄúEter- nal sunshine of the spotless net: Selective for- getting in deep networks,‚Äù in Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition , 2020, pp. 9304‚Äì9312. [53] S. Corbett-Davies, E. Pierson, A. Feller, S. Goel, and A. Huq, ‚ÄúAlgorithmic decision making and the cost of fairness,‚Äù in Proceedings of the 23rd acm sigkdd international conference on knowl- edge discovery and data mining , 2017, pp. 797‚Äì 806. [54] M. Hardt, E. Price, and N. Srebro, ‚ÄúEqual- ity of opportunity in supervised learning,‚Äù Ad- vances in neural information processing systems , vol. 29, 2016. [55] A. K. Menon and R. C. Williamson, ‚ÄúThe cost of fairness in binary classification,‚Äù in Conference 17 on Fairness, Accountability and Transparency . PMLR, 2018, pp. 107‚Äì118. [56] J. Baumann, A. Hann¬¥ ak, and C. Heitz, ‚ÄúEnforc- ing group fairness in algorithmic decision mak- ing: Utility maximization under sufficiency,‚Äù arXiv preprint arXiv:2206.02237 , 2022. [57] M. Kearns, S. Neel, A. Roth, and Z. S. Wu, ‚ÄúPre- venting fairness gerrymandering: Auditing and learning for subgroup fairness,‚Äù in International Conference on Machine Learning . PMLR, 2018, pp. 2564‚Äì2572.[58] S. Udeshi, P. Arora, and S. Chattopadhyay, ‚ÄúAutomated directed fairness testing,‚Äù in Pro- ceedings of the 33rd ACM/IEEE International Conference on Automated Software Engineering , 2018, pp. 98‚Äì108. [59] Z. Sun, J. M. Zhang, M. Harman, M. Papadakis, and L. Zhang, ‚ÄúAutomatic testing and improve- ment of machine translation,‚Äù in Proceedings of the ACM/IEEE 42nd International Conference on Software Engineering , 2020, pp. 974‚Äì985. 18","cs.SE, cs.AI",Arxiv
38,Linear mass Density of vertically suspended heavy springs,Cyril Belardinelli,2019-09-18 20:34:31+00:00,http://arxiv.org/pdf/1909.08689v1,"In the present article the linear mass Density for vertically suspended heavy springs is calculated for two different cases. First for a spring of invariable length suspended at the top and fixed at the bottom of the spring, then for a hanging heavy spring with an additional load. Both cases are solved by minimizing the total energy which is a sum of potential energy and energy due to the deformation.","arXiv:1909.08689v1  [physics.class-ph]  18 Sep 2019Linear mass density of vertically suspended heavy springs. Cyril Belardinelli‚àó Lucerne University of Applied Sciences and Arts, Technikumstrasse 21, CH-6048 Horw, Switzerland (Dated: September 20, 2019) Abstract Inthepresentarticlethelinearmassdensity Œªforvertically suspendedheavyspringsiscalculated for two diÔ¨Äerent cases. First for a spring of invariable lengt h suspended at the top and Ô¨Åxed at the bottom of the spring, then for a hanging heavy spring with an additional load. Both cases are solved by minimizing the total energy E[Œª] which is a sum of potential energy and energy due to the deformation. Keywords: Hooke‚Äôs law, Gravitational Ô¨Åeld, Euler-Lagrange-equa tion, Variational Calculus ‚àóElectronic mail: cyril.belardinelli@hslu.ch 1 I. INTRODUCTION Hooke‚Äôs law for ideal springs is a recurring subject in elementary phy sics courses. In most textbook problems the mass of the spring itself is neglected. A n interesting question arises when one asks for the static deformation of the spring when it is suspended vertically with or without a mass hanging at the free end. Due to its own weight a nd the loaded mass the spring deforms in a non-uniform way giving rise to a non-con stant mass density function Œª(x). The issue of heavy springs has already been treated rather inte nsely by various authors.2‚Äì4,6‚Äì8However, an explicit formula for the linear mass density of suspende d heavy springs does not seem to occur in the literature. The issues p resented in this article are nicely solved by the standard methods of variational calculus.1,5 II. SUSPENDED SPRING WITH FIXED ENDS In this section we consider an ideal spring of mass m, natural length l0and stiÔ¨Äness k. The spring is vertically suspended where both ends are Ô¨Åxed at a dist ancel>l0. FIG. 1: vertically suspended ideal spring of stiÔ¨Äness k, natural length l0and mass mwith Ô¨Åxed ends. The spring has in its stretched form a length of l. The spring‚Äôs linear mass density in its undeformed state is Œª0=m l0. In its suspended position, the spring‚Äôs linear mass densit yŒª(x) increases from top to bottom due to its weight. 2 To Ô¨Ånd the linear mass density Œª(x) one minimizes the energy functional Etot[Œª] which is given by the sum of the potential energy Epotand deformation energy Ed: Etot[Œª] =Epot[Œª]+Ed[Œª] (1) The potential energy formulated as a functional of Œª(x) is given by: Epot[Œª] =‚àíg/integraldisplayl 0xŒª(x)dx (2) The energy functional Ed[Œª] due to deformation is given by: Ed[Œª] =kl0 2/integraldisplayl 0/parenleftbiggŒª0 Œª(x)‚àí2+Œª(x) Œª0/parenrightbigg dx (3) One has to minimize Eq. (1) under the constraints of invariable mass a nd non-negativity of Œª(x): m=/integraldisplayl 0Œª(x)dxandŒª(x)>0‚àÄx‚àà[0,l] (4) In order to take account of the constraints one introduces a Lag range-multiplier ¬µwith which the functional reads as follows: F[Œª] =Etot[Œª]‚àí¬µ/bracketleftbigg m‚àí/integraldisplayl 0Œª(x)dx/bracketrightbigg (5) Variation of the functional Eq. (5) leads to the following Euler-Lagr ange-equation.1,5: kl0Œª0 2/parenleftbigg1 Œª2 0‚àí1 Œª2(x)/parenrightbigg ‚àígx+¬µ= 0 (6) From the latter equation one deduces ( Œª0l0=m): Œª(x) =Œª0/radicalBig 1+2¬µm kl2 0‚àí2mg kl2 0x(7) The Lagrange-multiplier ¬µin Eq. (5) is Ô¨Åxed by the constraint Eq. (4). A short calculation yields: ¬µ=k 2m(l2‚àíl2 0)+mg2 8k+gl 2(8) By inserting ¬µinto Eq. (7) one gets the Ô¨Ånal form for the linear mass density Œª(x). For further calculations an expression in terms of dimensionless variable s is convenient. The reduced mass density ÀúŒª:=Œª Œª0reads then: ÀúŒª(Àúx) =1/radicalBig (Œ± 2+Àúl)2‚àí2Œ±Àúx,0<Àúx <Àúl (9) 3 where the dimensionless parameters read: Œ±:=mg kl0Àúx:=x l0Àúl:=l l0(10) reduced mass density 0.60.811.21.41.61.8 0 0.2 0.4 0.6 0.8 1 1.2 œá FIG. 2: reduced mass density ÀúŒª(Àúx) of Eq. (9) for Œ±= 0.8 (dotted curve) and Œ±= 1.5 (solid). For both plots: Àúl= 1.3 III. HEAVY SPRING SUSPENDED AT THE TOP END WITH LOAD In this section we calculate the linear mass density Œª(x) for a static spring of mass mand stiÔ¨Änesskwhich is suspended only at the top end. The spring is loaded with an add itional massMat the bottom end. The calculation can be done in almost the same man ner as in the previous section. The calculation starts again with the same fun ctional Eq. (7) which has to be minimized. To Ô¨Åx the Lagrange-multiplier ¬µone can use the fact that at the bottom end the spring is only deformed by the additional load M. It is a simple task to derive the spring‚Äôs mass density Œª(l) at the bottom end, as shown in the following. dxdenotes an inÔ¨Ånitesimal intervall of the suspended spring at the bo ttom end. The corre- sponding natural (undeformed) length of dxis denoted by dx0. By Hooke‚Äôs law one has: k‚Ä≤(dx‚àídx0) =Mg (11) 4 FIG. 3: free hanging ideal spring of stiÔ¨Äness k, natural length l0and mass m. The elongation ‚àÜ x is due to the spring‚Äôs own weight and additional load M. wherek‚Ä≤denotes the stiÔ¨Äness of the spring of inÔ¨Ånitesimal length dx0which is given by: k‚Ä≤=kl0 dx0(12) Inserting the latter expression into Eq. (11) one gets: kl0/parenleftbiggdx dx0‚àí1/parenrightbigg =Mg (13) By using the relation:Œª0 Œª(l)=dx dx0one arrives at: kl0/parenleftbiggŒª0 Œª(l)‚àí1/parenrightbigg =Mg (14) Solving for Œª(l) yields: Œª(l) =Œª0 1+Mg kl0(15) For an unloaded spring (i.e. M= 0) the density at the bottom is, as expected, identical to Œª0since the spring does not experience any weight at the bottom. The n by Eq. (7) one gets the Lagrange-multiplier ¬µ: ¬µ=gl+M mgl0+M2g2 2mk(16) At this stage one can determine the total length lof the spring by imposing once more the constraint of invariable mass:/integraldisplayl 0Œª(x)dx=m (17) 5 Rewriting the latter integral in terms of the usual dimensionless var iables (by adding the dimensionless parameter Œ≤:=Mg kl0) one gets: /integraldisplayÀúl 0dÀúx/radicalBig (1+Œ≤)2+2Œ±(Àúl‚àíÀúx)= 1 (18) Evaluation of the integral and solving for the total relative length Àúlgives: Àúl= 1+Œ± 2+Œ≤ (19) or respectively: l=l0+mg 2k+Mg k(20) For an unloaded spring (i.e. M= 0) the elongation ‚àÜ xdue to its own weight is given by ‚àÜx=mg 2kwhich is a well known result.4,6By Eq. (19) one gets immediately an expression for the reduced mass density: ÀúŒª(x) =1/radicalbig (1+Œ±+Œ≤)2‚àí2Œ±Àúx,0<Àúx <Àúl (21) reduced mass density 0.40.50.60.70.80.91 0 0.2 0.4 0.6 0.8 1 1.2 1.4 1.6 œá FIG. 4: Typical plot of the reduced mass density ÀúŒª(Àúx) given by Eq. (21) for no load ( M= 0) and Œ±= 1.5. At the bottom end of the spring (i.e. x=l0+mg 2k) one has a reduced mass density which assumes the value ÀúŒª=Œª(l) Œª0= 1 as shown by the plot. 6 IV. RELATIVE CHANGE OF ‚àÜEpotVS.‚àÜEd The distribution of mass along the suspended spring is Ô¨Åxed by the co ndition of minimiz- ing total energy. It is interesting to determine the ratio‚àÜEpot ‚àÜEdof relative change in potential energy and deformation energy induced by the spring‚Äôs deformatio n. A. spring with Ô¨Åxed ends The relative change in potential energy is given by: ‚àÜEpot=‚àí/integraldisplayl 0xŒª(x)dx+1 2mgl0=‚àímgl0/integraldisplayÀúl 0ÀúxdÀúx/radicalBig (Œ± 2+Àúl)2‚àí2Œ±Àúx+1 2mgl0(22) The latter integral can be evaluated easily, one gets then ‚àÜEpot=‚àímgl0Œ± 12(23) From the latter result one concludes that the lowering of the cente r of mass is given by: ‚àÜx=Œ± 12l0=mg 12k(24) On the other hand, the relative change in the deformation energy is given by the following expression: ‚àÜEd=1 2kl0/integraldisplayl 0/parenleftbiggŒª0 Œª(x)‚àí2+Œª(x) Œª0/parenrightbigg dx‚àí1 2kl2 0(Àúl‚àí1)2(25) In dimensionless form the later expression becomes: ‚àÜEd=1 2kl2 0/integraldisplayÀúl 0Ô£Æ Ô£∞/radicalbigg/parenleftBigŒ± 2+Àúl/parenrightBig2 ‚àí2Œ±Àúx‚àí2+/parenleftBigg/radicalbigg/parenleftBigŒ± 2+Àúl/parenrightBig2 ‚àí2Œ±Àúx/parenrightBigg‚àí1Ô£π Ô£ªdx‚àí1 2kl2 0(Àúl‚àí1)2(26) Evaluation of the latter expression yields: ‚àÜEd=1 24kl2 0Œ±2(27) We conclude therefore: ‚àÜEpot ‚àÜEd= 2 (28) 7 B. spring suspended at top end To calculate the change in potential energy ‚àÜ Epotone determines the center of mass (CM) of the suspended spring. It is given by the integral: CM=1 l0/integraldisplay1+mg 2k 0xdx/radicalBig (1+mg l0k)2‚àí2mg kl0x(29) Once again, in dimensionless form one has: CM=l0/integraldisplay1+Œ± 2 0ÀúxdÀúx/radicalbig (1+Œ±)2‚àí2Œ±Àúx=/parenleftbigg1 2+Œ± 3/parenrightbigg l0 =l0 2+mg 3k(30) Due to the self weight of the spring the center of mass lowers by an a mount ofmg 3kwhich is a known result.8With this result one determines immediately ‚àÜ Epot: ‚àÜEpot=‚àí1 3k/parenleftBigmg k/parenrightBig2 (31) The change in deformation energy is readily evaluated. One has: ‚àÜEd=1 2kl2 0/integraldisplay1+Œ± 2 0/bracketleftBigg/radicalBig (1+Œ±)2‚àí2Œ±Àúx‚àí2+/parenleftbigg/radicalBig (1+Œ±)2‚àí2Œ±Àúx/parenrightbigg‚àí1/bracketrightBigg dx‚àí1 2kl2 0(Àúl‚àí1)2(32) Evaluation gives: ‚àÜEd=1 6kl2 0Œ±2=2 3k/parenleftBigmg 2k/parenrightBig2 (33) Interestingly, one gets the same ratio: ‚àÜEpot ‚àÜEd= 2 (34) 8 1R.CourantandD.Hilbert. Methoden der mathematischen Physik, 2nd ed. , volume1. Interscience Publishers, Inc. New York, 1943. 2J. T. Cushing. The spring-mass system revisited. Am. J. Phys. , 52:925‚Äì933, 1984. 3H. Essen and A.B. Nordmark. Static deformation of heavy spri ng due to gravity and centrifugal force.Eur. J. Phys. , 31:603‚Äì609, 2010. 4E. E. Galloni and M. Kohen. InÔ¨Çuenceof the mass of the springo n its static and dynamic eÔ¨Äects. Am. J. Phys. , 47:1076‚Äì1078, 1979. 5H. Goldstein. Classical Mechanics . Addison-Wesley, Massachusetts, 2nd edition, 1980. 6S. Y. Mak. The static eÔ¨Äectiveness mass of a slinky. Am. J. Phys. , 55:994‚Äì997, 1987. 7L. Ruby. Equivalent mass of a coil spring. The Physics Teacher , 38:140‚Äì141, 2000. 8J. D. Serna and A. Joshi. Finding the center of mass of a soft sp ring.College Mathematics Journal, 42, 2010. 9",physics.class-ph,Arxiv
39,Data Dialogue with ChatGPT: Using Code Interpreter to Simulate and Analyse Experimental Data,"Andrew Low, Z. Yasemin Kalender",2023-11-21 08:08:57+00:00,http://arxiv.org/pdf/2311.12415v2,"Artificial Intelligence (AI) has the potential to fundamentally change the educational landscape. So far, much of the physics education research relating to AI has focused on lecture-based assessment and the ability of ChatGPT to answer conceptual surveys and traditional exam-style questions. In this study, we shift the focus by investigating ChatGPT's ability to complete an introductory mechanics laboratory activity by using Code Interpreter, a recent plugin that allows users to generate and analyse data by writing and running Python code `behind the scenes'. By uploading a common `spring constant' lab activity using Code Interpreter, we investigate the ability of ChatGPT to interpret the activity, generate realistic model data, produce a line-fit, and calculate the reduced chi square statistic. By analysing our interactions with ChatGPT, along with the Python code generated by Code Interpreter, we assess how the quality and accuracy of ChatGPT's responses depends on different levels of prompt detail. We find that although ChatGPT is capable of completing the lab activity and generating plausible-looking data, the quality of the output is highly dependent on the detail and specificity of the text prompts provided. We find that the data generation process adopted by ChatGPT in this study leads to heteroscedasticity in the simulated data, which may be difficult for novice learners to spot. We also find that when real experimental data is uploaded via Code Interpreter, ChatGPT is capable of correctly plotting and fitting the data, calculating the spring constant and associated uncertainty, and calculating the reduced chi square statistic. This work offers new insights into the capabilities of Code Interpreter within a laboratory setting and highlights a variety of text-prompt strategies for the effective use of Code Interpreter in a lab context.","Data Dialogue with ChatGPT: Using Code Interpreter to Simulate and Analyse Experimental Data Andrew Low1and Z. Yasemin Kalender1 1Department of Physics, University of Livepool, Liverpool, UK, L69 7ZE‚àó Artificial Intelligence (AI) has the potential to fundamentally change the educational landscape. Chatbot‚Äôs such as ChatGPT allow users to engage in conversations that mimic human interactions. So far, much of the physics education research relating to AI has focused on lecture-based assessment and the ability of ChatGPT to answer conceptual surveys and traditional exam-style questions. In this study, we shift the focus by investigating ChatGPT‚Äôs ability to complete an introductory mechanics laboratory activity by using Code Interpreter, a recent plugin that allows users to generate and analyse data by writing and running Python code ‚Äòbehind the scenes‚Äô. By uploading a common ‚Äòspring constant‚Äô lab activity using Code Interpreter, we investigate the ability of ChatGPT to interpret the activity, generate realistic model data, produce a line-fit, and calculate the reduced chi square statistic. By analysing our interactions with ChatGPT, along with the Python code generated by Code Interpreter, we assess how the quality and accuracy of ChatGPT‚Äôs responses depends on different levels of prompt detail. We find that although ChatGPT is capable of completing the lab activity and generating plausible-looking data, the quality of the output is highly dependent on the detail and specificity of the text prompts provided. We find that the data generation process adopted by ChatGPT in this study leads to heteroscedasticity in the simulated data, which may be difficult for novice learners to spot. We also find that when realexperimental data is uploaded via Code Interpreter, ChatGPT is capable of correctly plotting and fitting the data, calculating the spring constant and associated uncertainty, and calculating the reduced chi square statistic. This work offers new insights into the capabilities of Code Interpreter within a laboratory setting and highlights a variety of text-prompt strategies for the effective use of Code Interpreter in a lab context. I. INTRODUCTION In the last few years, artificial intelligence (AI) has emerged as a potentially revolutionary technology with multiple uses including natural language interpretation, machine learning, and complex data analysis. Perhaps the most famous example is ChatGPT, a large language model chatbot developed by OpenAI [1] which, by Jan- uary 2023, had become the fastest growing consumer soft- ware application in history, with over 100 million users [2] (almost 60% aged 18-34 [3]). The role that AI, espe- cially software applications like ChatGPT, plays in higher education has been a topic of extensive research, with numerous studies exploring the implications for student learning, academic integrity, and traditional models of assessment [4‚Äì17]. Over the past year, a wide range of ChatGPT plug- ins have been developed to overcome some of the funda- mental constraints of Large Language Models (LLMs), and enhance the functionality and reliability of Chat- GPT [18]. In July 2023, ChatGPT released a beta ver- sion of Code Interpreter, which enables users to upload and download files, analyse data, perform mathematical calculations, and create and interpret code, all of which are essential tools in STEM-related disciplines. Code Interpreter‚Äôs ability to write and execute Python code ‚Äòbehind the scenes‚Äô and display the output within the standard ChatGPT user interface has been hailed as a game-changer for data analysis, and expands the range of ‚àóandrew.low@liverpool.ac.ukpossible applications of ChatGPT within an educational setting [19]. In this study, we test some of the key features of the Code Interpreter plug-in. As a novelty in its approach and context, our study investigates the capability of Code Interpreter to interpret and complete an introductory physics laboratory activity within an undergraduate de- gree programme. In addition, this study aims to explore the broader implications for how Code Interpreter might impact teaching and learning within a laboratory con- text. Below, we will describe related literature on AI use in higher education, laboratory teaching, and our re- search questions for this study. II. LITERATURE REVIEW A. ChatGPT models Large Language Models such as ChatGPT are capa- ble of mimicking human conversation by generating re- sponses to text prompts, after being trained on a vast quantity of textual material. ChatGPT is perhaps the most well-known LLM, and is based upon a [G]enerative [P]retrained [T]ransformer model [1, 20, 21]. ChatGPT was trained on a huge sample of human text (notably the ‚ÄòCommon Crawl‚Äô dataset) [22] and works by predicting certain combinations of words within a given context. In March 2023, OpenAI released ChatGPT-4 [23] which is capable of delivering significantly superior performance over its GPT3.5 predecessor. In July 2023, OpenAI released a beta version of Code Interpreter [24], a ground-breaking plugin that increasesarXiv:2311.12415v2  [physics.ed-ph]  31 Dec 2023 2 ChatGPT‚Äôs capability and potential applications by writ- ing and running Python code, performing mathematical operations, analysing data, and providing graphical visu- alisations within the standard ChatGPT user interface. Additionally, it allows users to upload data in a number of formats, read files, summarise content, and carry out code-based data analysis, which was previously not fea- sible using the standard version of ChatGPT3.5 or Chat- GPT4. At the time of writing, ChatGPT Code Inter- preter is only available for ChatGPT Plus subscription users [25], or ChatGPT Enterprise users [26], but will likely be rolled out more widely in the future. B. AI use in Higher Education Given the wide range of potential applications of LLM‚Äôs, it is not surprising that research has begun to explore these technologies within an educational setting. For example, it has already been demonstrated that ChatGPT4 is able to pass key standardised tests includ- ing SAT, LSAT, MCAT and GRE [27], as well as the Advance Placement exams in high schools, and Medical and MBA qualifier tests [15, 28]. This impressive per- formance provides additional evidence of ChatGPT‚Äôs ca- pacity to ‚Äòunderstand‚Äô and generate responses to complex conceptual questions. While AI‚Äôs capabilities have naturally raised concerns among some school and university teachers regarding academic integrity, there has also been growing interest in how AI might be used to support teaching and learn- ing, although it is still unclear how best to achieve this. In order to address some of these issues, several policy reports have been commissioned to provide useful guide- lines and strategies on how to incorporate AI within the educational system [29‚Äì31]. Even though STEM teach- ing is yet to be significantly impacted by the early Chat- GPT models, the advanced features of new incoming AI models and plug-ins can easily be adopted by students to solve complex science and engineering problems [8], and it is therefore essential for STEM educators to critically reflect upon their teaching and assessment practices. As one of the key domains in STEM education, Physics presents a compelling arena for testing the capabilities of LLM‚Äôs. The combination of mathematical equations, data analysis, problem-solving techniques, and sophisti- cated conceptual understanding makes it an ideal plat- form for a detailed exploration of the advantages, disad- vantages, and unrealised potential of LLMs as learning tools [5‚Äì7, 10‚Äì13, 17]. In one of the first studies to explore AI in a physics con- text, Kortemeyer [7] evaluated ChatGPT-3.5 using the material of a calculus-based physics course, and found that, despite exhibiting many of the misconceptions and mistakes of a beginner learner, ChatGPT-3.5 was able to pass the course. A similar study by West[5] revealed the ability of ChatGPT to answer conceptual physics ques- tions about kinematics and Newtonian dynamics. Westfound that, in some cases, ChatGPT-3.5 could match or even exceed the median performance of a university stu- dent who had completed one semester of college physics. In follow-up research conducted by West, it was shown that ChatGPT-4 performed almost as well as an experi- enced physicist on standard mechanics topics, indicating a significant improvement over GPT-3.5 [6]. While some promising early research has been con- ducted in the area of physics education, it is still unclear what impact AI will have on traditional models of assess- ment [4, 16], or how AI can be optimally utilised to foster critical thinking within a university setting. Although AI platforms have their uses, these are yet to be fully inte- grated into schools and universities, and ‚Äònatural‚Äô intelli- gence is still considered the best approach for developing productive study habits, workflows, and mathematical skills [12]. Oss [12] suggests that using AI technologies in addition to traditional teaching methods is preferable to simply replacing them. According to Oss, AI should be used as ‚Äúobjects-to-think-with‚Äù, promoting creativity, critical and reflective thinking, and concept comprehen- sion when used in conjunction with well-designed learn- ing activities [8]. It has been well documented [11] that ChatGPT is prone to errors and misinformation. Anybody who has interacted with ChatGPT for a considerable amount of time will have noticed that the quality and detail of the questions asked and subsequent responses are often cor- related. For a user to ensure a high quality output, it is essential to adopt an iterative approach to questioning, whereby the user learns from the preceding question and response in order to improve and clarify the questions posed. While experts may be able to confidently apply such reasoning behaviours when using ChatGPT, it is still unclear whether novice learners are able to recog- nise flaws, contradictions, and misinformation generated by ChatGPT. When integrating ChatGPT into an ed- ucational setting, it is therefore crucial to thoughtfully consider how to cultivate critical thinking amongst stu- dents. C. Brief history on Physics Labs Instructional laboratory courses represent core compo- nents of most undergraduate STEM degree programmes, helping students to develop investigative and practical skills, as well as providing opportunities to develop pro- fessional research and report-writing skills. Furthermore, effective laboratory instruction has the potential to foster expert-like attitudes and behaviors [32]. They empower students to exercise critical judgement, modify experi- ments as needed [33], and instill a sense of agency and ownership over their research projects [34]. However, current lab curricula, often characterized by rigid structures and content-reinforcing practices, may fall short in providing these valuable learning experiences [35‚Äì37]. The prevalent ‚Äúcookbook‚Äù approach to lab edu- 3 cation, in which students follow instructions without nec- essarily questioning or analysing the underlying process, fails to foster positive attitudes and genuine science prac- tises [33]. This type of instruction may produce STEM graduates with inadequate skills who lose out on impor- tant chances to become experts in the design, planning, and analysis of experiments. In light of the evolving educational landscape and the dynamic skill requirements of the job market, traditional approaches, especially in laboratory settings, need to be rethought. This reevaluation becomes particularly ur- gent considering the rapidly changing needs of education and industry as a result of the emergence of AI technolo- gies like ChatGPT. While the role of AI in science teaching has largely focused on assessments [5, 7], numerous questions remain unanswered regarding the role of AI in science laboratory settings. This paper aims to bridge this gap by exploring how Code Interpreter can be utilised for interpreting and completing an introductory physics lab activity. We also examine the relationship between the level of detail in prompts and quality of output. The subsequent section outlines our research questions regarding the integration of AI within the framework of a conventional, ‚Äúcookbook style‚Äù laboratory activity. III. RESEARCH QUESTIONS In this paper, we address the following three research questions: 1. How effectively can ChatGPT Code Interpreter generate, analyse, and interpret data relating to an introductory laboratory activity? 2. What strategies can be implemented to optimise ef- fective communication with ChatGPT during labo- ratory tasks to ensure high quality, reliable output? 3. What are the implications of AI tools like Chat- GPT Code Interpreter on introductory laboratory courses? Our goal is to contribute to the ongoing dialogue con- cerning the role of AI in education, specifically within the context of laboratory science education. By explor- ing the potential benefits and challenges of using Code Interpreter in laboratory activities, we provide valuable insights for educators, researchers, and educational pol- icymakers adapting to the AI transformation in educa- tion. IV. METHOD A. Lab Context In this study, we looked at an introductory physics lab activity - Spring Constant . This typical traditional labactivity is routinely administered in Semester 1 of Year 1 amongst Physics undergraduate students in many physics departments including our institution. The main goal of the activity is for students to determine the spring con- stant of a helical spring using two different approaches. The first approach involves suspending masses from the spring, measuring the extension, plotting a mass vs ex- tension graph, then using the gradient to determine a value for the spring constant. The second approach in- volves displacing a mass on a spring and measuring the period of oscillation, then plotting a period-squared ver- sus mass graph and using the gradient to determine a value for the spring constant. This activity aims to test students‚Äô ability to complete a simple experiment, propagate uncertainties, perform a chi-squared fit of the data, and determine an empirical value for the spring constant, along with an associated uncertainty. The format of lab teaching in this institution is largely traditional or ‚Äúcookbook style‚Äù as an analogy where tasks and instructions are presented as a check- list (see Fig 1) for students to work through sequentially: collect data, analyse, compare with the true value, and discuss how the procedure could be improved. The ex- pected time to complete this experiment is 9 hours in to- tal for collecting and analysing data and writing results. Students work individually. Instructors and lab demon- strators (graduate students) are available for students to ask questions and help them with the experimental set- up. B. Using ChatGPT-4 Advance Data Analysis In this study, we considered three separate ‚ÄòAp- proaches‚Äô that made use of Code Interpreter to complete the Spring Constant lab activity. In all cases, we began by uploading the Lab Activity Microsoft Word document (see supplementary material) using the ChatGPT-4 Code Interpreter interface. In the first two approaches, we asked ChatGPT Code Interpreter to generate simulated data for the experiment through a series of prompts. Af- ter Approach 1 (basic prompting), we completed several more attempts to understand the underlying mechanism of Code Interpreter, and how to calibrate our prompts before moving on to Approach 2 (detailed prompting). In Approach 3, we uploaded real experimental data in the form of an Mircosoft Excel spreadsheet, and asked ChatGPT to use this data to complete the activity. V. RESULTS I: CHATGPT PROMPTS AND RESPONSES In what follows, we describe all three Approaches used to complete the Spring Constant lab Activity. We de- scribe the key interactions with ChatGPT by highlight- ing a selection of prompts and responses. In Sec VI, we will discuss in more detail the Python code that was 4 FIG. 1: Spring Constant Lab Activity sheet (student version) which includes purpose of the activity, duration, and a list of step-by-step tasks to complete. The design of this lab activity is considered traditional ‚Äúcook-book style‚Äù [38]. written by Code Interpreter to perform the data analysis. You can find the entire conversation for each Approach, along with the Python code generated for each Approach, in the Supplementary documents. A. Approach 1: Simple Interaction with ChatGPT After uploading the Lab Activity Word document, we asked ChatGPT: ‚ÄúCan you work on this activity and an- swer the questions?‚Äù . ChatGPT responded by providing a concise summary of the activity (Figure 2). ChatGPT correctly identified two methods to determine the spring constant. It then laid out a road map for each approach, covering everything from data collection to data fitting, and noted that the œá2statistic can be used to comment on the quality of the fit. ChatGPT pointed out that ‚Äúconducting the actual experiment and recording physical measurements will have to be done by you, as I am an AI and can‚Äôt interact with the world‚Äù . At this point, we FIG. 2: The response of ChatGPT after uploading the Spring Constant Activity during Approach 1. After successfully processing the Word document, ChatGPT presented a summary describing the activity, discussion points, and the capabilities and limitations of ChatGPT to complete this activity. prompted ChatGPT to generate model data: User: ‚ÄúCan you generate some model data with associated measurement uncertainties (at least 10 values)? and present the data in a table‚Äù Figure 3 includes the simulated values generated by ChatGPT for different masses, the spring extension, and period of oscillation. The table also provides uncertainty values for Extension andPeriod . It is clear from Figure 3 that ChatGPT assigned a 2% uncertainty to the mass and time period values. In this initial Approach, we de- liberately did not ask ChatGPT to explain or justify the uncertainty values, as we wanted to mimic the behavior of a novice learner. We followed up by asking, ‚Äúcan you now do the ac- tivity based on the data above?‚Äù . The calculated values of the spring constant for each method, along with the associated uncertainties, are shown in 3. It is worth not- 5 FIG. 3: Output table for Approach 1 showing the mass, extension, and period values, as well as the calculated spring constant values and associated uncertainties for Method 1 and 2, respectively. ing that ChatGPT did not fit the data to a straight line and plot a graph, rather opting to calculate the spring constant for each individual set of measurements. After prompting ChatGPT to compare the two meth- ods, ChatGPT noted that ‚ÄúMethod 1 generally results in smaller uncertainties compared to Method 2‚Äù and that ‚Äúthis could make Method 1 a more reliable method‚Äù and that the accuracy and precision of the measurements could be improved by, ‚Äúusing more accurate measuring equipment‚Äù , or by, ‚Äútaking more measurements to average out random errors‚Äù , comments reminiscent of a novice learner. In this first Approach, we did not ask for further ex- planations, but instead proceeded by asking ChatGPT to generate a L ATEX lab report. A copy of the lab report can be found in the supplementary materials. B. Approach 2: Including detailed prompts In Approach 2, we decided to include more detail in our prompts and focus on graph plotting, experimental un- certainties, and error propagation. Whereas in the first Approach we began by uploading the activity and ask- ing,‚Äúcan you work on this activity and answer the ques- tions?‚Äù , we decided in the second Approach to change the phrasing to, ‚ÄúI would like you to read and interpret this activity‚Äù . The hope was that by asking ChatGPT to firstinterpret the activity, a higher quality output would be generated in the conversation. We decided to initially focus on Method 1 and provide a reasonably detailed prompt that outlined the general features of the approach required to determine the spring constant:User: ‚ÄúOk, let‚Äôs start with Method 1. I would like you to pretend you are a human completing this experiment. I would like you to simulate realistic experimental data, as well as specify the relevant measurement uncertainties, and plot a graph with error bars, then perform a chi-squared fit, and deter- mine the reduced chi-squared statistic. You should then use the graph to determine k. You should use the uncertainty in the gradient to determine the un- certainty in k by propagating the uncertainties cor- rectly.‚Äù When reading the initial response, we noticed that ChatGPT had suggested a range of forces between 1 N and 10 N. However, since the instructions explicitly stated a maximum mass value of 800 g, we provided an additional prompt: ‚Äúthe instructions tell you that the masses vary from 50gto800g‚Äù. ChatGPT then pro- ceeded to write the necessary Python code to simulate and plot the data. The graphical output can be seen in Figure 4. ChatGPT reported a spring constant of 52 .12¬± 0.65N/m , and a reduced chi-squared statistic of 2.01, suggesting that ‚Äúthe fit is reasonable, but the model might not perfectly represent the data, or the uncertain- ties might be slightly underestimated.‚Äù . ChatGPT also noted that ‚Äúthe estimated spring constant is consistent with the true value used to generate the data, within the uncertainty‚Äù . At this stage, we decided to probe ChatGPT to un- derstand how it had determined the uncertainty in the spring constant from the model fit data, given that we had not provided any specific details in our prompt. We were keen to see whether ChatGPT had correctly prop- agated the uncertainty in the gradient to determine the 6 FIG. 4: Plot showing Extension ( x) versus Force ( F) for Method 1 of the Spring Constant Activity (Approach 2). uncertainty in the spring constant. We began by asking: User: ‚ÄúCan you explain, step by step, how you used the fit and the uncertainty in the gradient to deter- mine the uncertainty in the spring constant accord- ing to method 1?‚Äù The response began by stating which variables were plotted on the xandyaxes. ChatGPT correctly identi- fied that the spring constant would be equal to: k= 1/G where Gis the gradient of the graph, and recognised that the magnitude of the uncertainty in the spring constant would be ‚àÜ k=1 G2‚àÜGwhere ‚àÜ Gis the uncertainty in the gradient (determined from the line fit). ForMethod 2 , we decided to build on the responses provided by ChatGPT during Method 1 and provide additional detail, including step by step instructions of how the uncertainty in the spring constant could be de- termined using the uncertainty in the gradient of the graph: User: ‚Äúwe want to determine the spring constant by an alternative method that involves timing the period of oscillation of a mass attached to a spring as it undergoes simple harmonic motion. In this experiment, we will consider 100g, 200g, ..., 800g. For each mass, we will record the time period of 20 complete oscillations. For each mass, we will repeat this process 5 times, and then calculate the mean value corresponding to a single oscillation. We will then calculate the standard deviation of the period, and the standard error on the mean. We will do this for each mass. We will then plot a graph with T2 on the y-axis and m on the x-axis. The gradient of this graph will be equal to 4œÄ2/k, and therefore the spring constant will be equal to: k= 4œÄ2/gradient. The uncertainty in the gradient will be equal to: ‚àÜk=|‚àÇk/‚àÇG | ‚àó‚àÜG= 4œÄ2/G2‚àó‚àÜGwhere ‚àÜGis the uncertainty in the gradient, and Gis the gra- dient.‚Äù We provided further detailed instructions relating to the nature of the simulated data, the plot, and the prop- agation of uncertainties: User: ‚ÄúWith this in mind, I would like you to create a table of model data with the following columns: m,‚àÜm, T mean,‚àÜT, T2,‚àÜT2. The mass values should vary from 50g to 800g. We will as- sume that the uncertainty in the mass value ‚àÜmis 5%of the stated mass value. For the time period measurements, assume that the biggest source of uncertainty is determining the start and end point of the oscillation and the random effect this will have on the measured time periods. The data should feel realistic and subject to random noise. The aim should be that when the data is plotted, the points do not lie exactly on the line, and that the error bars representing ‚àÜmand‚àÜT2should be clearly visible on the graph. The data should be consistent with a spring constant of 51.5N/m within the limits of the stated uncertainty. Plot a graph with T2on the y-axis, and mass on the x-axis, along with error bars represented by ‚àÜT2and‚àÜm. You should per- form a chi-squared fit of the data and determine the reduced chi-squared statistic, which should be be- tween 0.5 and 4, and the spring constant. By using the uncertainty in the gradient, you should calculate the uncertainty in the spring constant which will be ‚àÜk= 4œÄ2/G2‚àó‚àÜGwhere ‚àÜGis the uncertainty in the gradient, and Gis the gradient‚Äù The plotted data and line fit can be seen in Figure 5. The method used by ChatGPT to generate the data points and uncertainty values for time period will be dis- cussed in the next section. ChatGPT reported a spring constant of 51 .37¬±0.66N/m , and a reduced chi-squared statistic of 1 .61, suggesting a reasonably good fit. Chat- GPT commented that the spring constant value was con- sistent with the ‚Äòtrue‚Äô spring constant value of 51 .5N/m , within the limits of the stated uncertainty. ChatGPT further noted that Method 1 ‚Äúrequires ac- curate measurements of small extensions, which can be challenging‚Äù , whereas Method 2 requires the timing of oscillations, which can be challenging for fast oscillations and‚Äúcalculating the period from the timing of multiple os- cillations)‚Äù . We ended Approach 2 by asking ChatGPT to write a L ATEX lab report (supplementary materials). C. Approach 3: Uploading experimental data In Approach 3, we explored ChatGPT Code Inter- preters ability to complete the activity using ‚Äòreal‚Äô ex- perimental data that had been stored in a Microsoft Ex- cel spreadsheet. This is likely the most common way 7 FIG. 5: Plot with squared values of period ( T2) on the y-axis versus mass ( m) values on the x-axis for Method 2 of the Spring Constant Activity (Approach 2). Error bars included for both variables. in which students will use ChatGPT Code Interpreter. After uploading the Spring Constant Lab activity and asking ChatGPT to ‚Äúplease complete the activity‚Äù , the excel file was uploaded and ChatGPT was prompted to ‚Äúread both sheets of the data‚Äù . We decided to explicitly prompt ChatGPT to perform an Orthogonal Distance Regression (ODR) fit to ensure that both xandyerrors were included when performing the fit: User: ‚ÄúOk, can you now use the data from Sheet 1. There are four columns, the data in column 1 and 2 represents the y-data and y-error respectively. The data in columns 3 and 4 represents the x-data and x-error respectively. Convert into SI units. Perform an ODR fit. Then use the fit data to calculate the spring constant and uncertainty in spring constant. The spring constant will be equal to the gradient multiplied by g. Also state the reduced chi-squared statistic for the plot.‚Äù ChatGPT then proceeded to write and run the nec- essary Python code, plot a graph (Figure 6), before re- sponding with a value for the spring constant of 50 .86¬± 2.80N/m and a reduced chi-squared statistic of 1 .88. Next, we asked ChatGPT to ‚Äúexplain, step by step, how you determined the uncertainty in the spring con- stant‚Äù . ChatGPT responded by noting that the spring constant can be determined from the gradient, G, of the Mass versus Extension graph as k=g.G, where gis the gravitational field strength. ChatGPT noted that the error in the spring constant, ‚àÜ k, is given by ‚àÜk=|dk/dG |.‚àÜGwhere ‚àÜ Grefers to the uncertainty in the gradient (extracted from the ODR fit parameters), and since k=g.G, it follows that ‚àÜ k=|g|.‚àÜG. An identical set of instructions was provided to Chat- GPT for Method 2 , this time referring to the data in Sheet 2. After performing an ODR fit, ChatGPT correctly determined the spring constant from the gra- dient of a T2versus mgraph, arriving at a value of FIG. 6: Plot showing mass ( m) versus extension ( x) for Method 1 of the Spring Constant Activity (Approach 3). The estimated uncertainty on the mass is too small to see on this plot. 65.97¬±0.75N/m , with a reduced chi-square statistic of 12.32. ChatGPT noted that the value of 12.32 is ‚Äúsignif- icantly larger than 1, suggesting that the fit is not as good as it could be‚Äù . It then went on to say that this might be due to, ‚Äúsystematic errors in the experiment‚Äù , but did not elaborate further. Next, we prompted ChatGPT to explain how the spring constant uncertainty value was determined. Chat- GPT correctly identified that the uncertainty in the spring constant is given by ‚àÜ k=| ‚àí4œÄ2/G2|.‚àÜGwhere Gis the gradient of the T2vsmgraph. Finally, we asked ChatGPT to produce a L ATEXlab report using an identi- cal set of prompts to those used in Approach 2 (supple- mentary materials). VI. RESULTS II: PYTHON CODE One of the primary tasks in this research study was to establish whether ChatGPT Code Interpreter was capa- ble of generating and analysing data relating to the up- loaded Spring Constant Activity. In all three Approaches , Code Interpreter wrote Python code in response to our prompts. Here we will describe and discuss the Python code that was generated. Table I summarises the features of data generation and analysis by comparing Approach 1andApproach 2 . A. Approach 1 After prompting ChatGPT to ‚Äúgenerate some model data‚Äù , ChatGPT began by extracting the ‚Äòtrue‚Äô value of the spring constant from the Spring Constant lab activ- ity. After importing the necessary numpy python library, ChatGPT generated an array of 10 random masses be- tween 0.1kg and 0.8kg: 8 Aspect Approach 1 Approach 2 Generating mass values A random uniform distribution was used to generate 10 masses between 0.1kg and 0.8kg.A linearly spaced method to generate 16 masses between 0.05kg and 0.8kg. Generating ‚Äòtrue‚Äô extension and period valuesForces calculated from masses by multiply- ing with g, and then used Hooke‚Äôs law to generate the true extension for these forces using x=mg/k . True time periods calcu- lated using T= 2œÄp m/k.Forces calculated from masses by multiply- ing with g, and then used Hooke‚Äôs law to generate the true extension for these forces using x=mg/k . True time periods calcu- lated using T= 2œÄp m/k. Adding noise to simulate ran- dom measurement errorThe standard deviation of the noise was fixed at 0.02 irrespective of the value of extension, and noise was added uniformly to all of the data points.The standard deviation of the noise was variable, and was given by the product of the relative uncertainty and the ‚Äòtrue‚Äò value (of force, extension, or time period). The magnitude of the noise was proportional to the magnitude of the data point (larger forces/extensions/periods had larger abso- lute noise). Errors The error was assumed to be 2% of both mass, extension and period measurements.2% for the force measurements, 5% for ex- tension and period measurements. For the period measurements, the error for the pe- riod was taken as the standard error on the mean of five repeat measurements. TABLE I: Describing the four key aspects of the data generation process using ChatGPT Code Interpreter. A comparison of Approach 1 and 2. k_true = 51.5 g = 9.81 np. random . seed (0) masses = np. random . uniform (0.1 , 0.8 , 10) ChatGPT used ktrue (shaded red), along with the randomly generated masses, to reverse engineer values for the extension and time periods using the equations x=mg/k andT= 2œÄp m/k respectively: extensions = masses * g / k_true + np. random . normal (0, 0.02 , 10) periods = 2 * np.pi * np. sqrt ( masses / k_true ) + np. random . normal (0, 0.02 , 10) We see that random noise from a normal distribution was added to these calculated values to simulate mea- surement error. A constant percentage uncertainty of 2% for each individual ‚Äòmeasurement‚Äô was assumed, and this was used as the standard deviation of the normal distribution of noise that was added to the ‚Äòtrue‚Äô values. ForMethod 1 , the spring constant was calculated ask=F/x, and the uncertainty in each spring con- stant value, ‚àÜ k, was determined by propagating the uncertainties in the force, ‚àÜ F, and the uncertainty in the extension, ‚àÜ x, using the error propagation equation, ‚àÜk=kp (‚àÜF/F)2+ (‚àÜ x/x)2, as seen below: forces = data [‚ÄôMass (kg)‚Äô] * g k1 = forces / data [‚ÄôExtension (m)‚Äô] force_uncertainties = g * 0.02k1_uncertainties = k1 * np. sqrt (( force_uncertainties / forces )**2 + ( data [‚ÄôExtension uncertainty (m)‚Äô] / data [‚ÄôExtension (m)‚Äô]) **2) We note that the uncertainty in the force, ‚àÜ F, was incorrectly calculated as ‚àÜ F=g√ó0.02 (highlighted in red in the code above), which would imply that each force value had a constant uncertainty equal to 2% of the gravitational field strength. However, the correct equation for the uncertainty in the force should have been ‚àÜ F=Fp (‚àÜm/m )2+ (‚àÜ g/g)2, which reduces to ‚àÜF=F(‚àÜm/m ) if we assume that the uncertainty in the gravitational field strength is negligible. Since the fractional uncertainty in the mass was assumed to be 2%, the uncertainty in the force should have been calculated as ‚àÜF=F√ó0.02 = mg√ó0.02, and so we see that the expression provided by ChatGPT was missing a factor of m. ForMethod 2 , the spring constant was correctly cal- culated as k= 4œÄ2m/T2, and the uncertainty in the spring constant was correctly determined by propagat- ing the uncertainties in mass, ‚àÜ m, and time period, ‚àÜ T, as seen in the code snippet below: k2 = 4 * np.pi **2 * data [‚ÄôMass (kg)‚Äô] / data [‚ÄôPeriod (s)‚Äô]**2 mass_uncertainties = data [‚ÄôMass (kg)‚Äô] * 0.02 k2_uncertainties = k2 * np. sqrt (( mass_uncertainties / data [‚Äô Mass (kg) ‚Äô]) **2 + (2 * data [‚Äô Period uncertainty 9 (s) ‚Äô] / data [‚Äô Period (s) ‚Äô]) **2) It might not be immediately obvious that the red- shaded expression above is the correct error propaga- tion equation, since kis a function of mandT2, and therefore the ‚Äòcorrect‚Äô error propagation equation should be ‚àÜ k=kp (‚àÜm/m )2+ (‚àÜ T2/T2)2. However, this is equivalent to the expression generated by ChatGPT since ‚àÜ(T2) = 2 T‚àÜT, and therefore the relative uncertainty in T2is given by ‚àÜ( T2)/T2= 2(‚àÜ T/T). Substituting this into the error propagation equation shows the equiva- lence of the two expressions. It is interesting to note that during Approach 1, Chat- GPT opted to calculate the spring constant separately for each pair of ‚Äòmeasured‚Äô masses and time periods (see Figure 3), rather than taking the standard graphical ap- proach and plotting a graph with T2on the y-axis and mon the x-axis, performing a line fit, and then using the gradient to determine the spring constant. Although we do not know the reasons for ChatGPT‚Äôs ‚Äòchoices‚Äô in Approach 1, we will see that by changing the prompts in Approach 2, the methods used by Code Interpreter will also change. B. Approach 2 In Approach 2, we included more detail in our prompts with a focus on graph plotting, experimental uncertain- ties, and error propagation. This resulted in a more so- phisticated approach. For Method 1 , ChatGPT used the ‚Äòtrue‚Äô spring constant, along with 16 equally spaced mass values between 0.05kg and 0.8kg, to reverse engi- neer the ‚Äòtrue‚Äô extension values using Hooke‚Äôs Law. A relative uncertainty of 2% was assumed for the force mea- surements, and 5% for the extension measurements. The ‚Äòtrue‚Äô force and extension values were then used to gen- erate measured forces andmeasured extensions : def hooke_law (force , k): return force / k np. random . seed (0) true_extensions = hooke_law (forces , true_k ) measured_forces = np. random . normal (forces , force_uncertainty * forces ) measured_extensions = np. random . normal ( true_extensions , extension_uncertainty * true_extensions ) We see from the red-highlighted code segments above, measured forces was drawn from a normal distribution centered at the ‚Äòtrue‚Äô force, with a standard deviation of 2% of the true force. A similar approach was used to gen- erate measured extensions , this time with a standard deviation of 5% of the true extension. Since the standard deviation of the noise scales with the size of the force and extension, it follows that when the data is plotted, the points corresponding to larger force and extension val- ues are scattered further from the fitted line than thepoints corresponding to smaller extension/force values. This heteroscedasticity in the data is precisely what we observe in Figure 4. Further discussion of this point can be found in the Appendix. Next, having explicitly prompted ChatGPT to per- form a line fit on the simulated data, ChatGPT used thecurve fitfunction from the SciPy library to fit the hooke lawfunction to the synthetic data generated ear- lier in the code: popt , pcov = curve_fit ( hooke_law , measured_forces , measured_extensions , sigma = extension_errors , absolute_sigma = True ) fitted_k = popt [0] fitted_k_error = np. sqrt ( pcov [0][0]) We note from the red-highlighted code above that de- spite ChatGPT generating synthetic data that included uncertainties in both force and extension, the curve fit function used for the line-fitting only makes use of the y- error‚Äôs (extension), and neglects to factor in the x-errors (force). We see from the code snippet that the spring con- stant kis obtained from popt[0] and the uncertainty in kis the square root of the first diagonal element of the covariance matrix np.sqrt(pcov[0][0]) . Next, following our detailed prompt, ChatGPT pro- ceeded to calculate the reduced chi-squared statistic. The first step was to calculate the fitted extensions using thekvalue from the line-fit along with the hooke law function. We see from the red-highlighted code be- low that the y-residuals (difference between ‚Äòmeasured‚Äô and ‚Äòfitted‚Äô extensions) were determined and used to calculate the chi-square statistic (which is the sum of the squared standardised residuals). This involved di- viding each residual by the corresponding uncertainty ‚Äòextension errors‚Äô to standardise it, before squaring and then summing all the standardised residuals. The reduced chi-square statistic was then calculated by di- viding the chi-square statistic by the number of de- grees of freedom, which is the number of data points, len(measured forces) , minus the number of fitted pa- rameters, len(popt) : fitted_extensions = hooke_law ( measured_forces , fitted_k ) residuals = measured_extensions - fitted_extensions chi_square = np.sum (( residuals / extension_errors ) **2) reduced_chi_square = chi_square / (len( measured_forces ) - len( popt )) We note that since the line-fit (and hence fitted k) and residuals only factored in the extension errors (and not the force errors), the (reduced) chi-square statistic calculated by ChatGPT likewise only factored in the extension-errors, though this was not explicitly men- tioned in the ChatGPT response. Finally, following our 10 explicit prompt, a graph was plotted (see Figure 4) using the standard matplotlib Python library. ForMethod 2 , we prompted ChatGPT to simulate 5 repeated measurements for the time period (see supple- mentary material). ChatGPT began by using the ‚Äòtrue‚Äô spring constant value, along with the equation for the pe- riod of oscillation of a mass on a spring, T= 2œÄp m/k, to generate ‚Äòtrue‚Äô time periods ( true periods ). Then, for each value in true periods , the code generated an array of 5 measured periods by drawing from a normal distribution with a mean equal to the true period value, and a standard deviation equal to 5% of the true period value (shown in red below): np. random . seed (0) true_periods = oscillation_period ( masses , true_k ) measured_periods = np. array ([ np. random . normal ( true_period , 0.05* true_period , 5) for true_period in true_periods ]) It is worth noting that, much like with Method 1, be- cause the standard deviation of the measurement noise was made proportional to the true value, the ‚Äòmeasured periods‚Äô appeared more scattered around the true value for larger period values. You can clearly observe this het- eroscedasticity in the plotted data appearing in the T2 versus mgraph in Figure 5. This point is discussed in more detail in the Appendix. In Approach 2, we explicitly prompted Chat GPT to calculate the mean, standard deviation and standard er- ror using the ‚Äòrepeat measurements‚Äô, as can be seen in the code chunk below: mean_periods = np. mean ( measured_periods , axis =1) std_periods = np.std( measured_periods , axis =1, ddof =1) sem_periods = std_periods / np. sqrt ( measured_periods . shape [1]) Next, ChatGPT correctly calculated the squared Pe- riods and the error on the squared Periods, ‚àÜ T2, by propagating the uncertainty in T(the standard error on the mean Time Period) according to the relation ‚àÜT2= 2T‚àÜT(highlighted red): squared_periods = mean_periods **2 squared_periods_errors = 2 * mean_periods * sem_periods The next step was similar to Method 1 where Chat- GPT wrote the code to perform the line fit and calculate the spring constant, and its uncertainty, from the model fit parameters: popt , pcov = curve_fit ( squared_period_model , masses , squared_periods , sigma = squared_periods_errors , absolute_sigma = True )fitted_slope = popt [0] fitted_slope_error = np. sqrt ( pcov [0][0]) fitted_k = 4 * np.pi **2 / fitted_slope fitted_k_error = np. abs (4 * np.pi **2 / fitted_slope **2 * fitted_slope_error ) We note from the red-highlighted code above that the fitted spring constant ( fitted k) was correctly deter- mined from the gradient ( fitted slope ) according to the relation k= 4œÄ2/G(where Gis the gradient). We also note that the uncertainty in the spring constant was correctly calculated by propagating the uncertainty in gradient, ‚àÜ G, using the relation: ‚àÜ k=|4œÄ2/G2|‚àÜG. Again, similar to Method 1, the chi-square statistic was calculated by taking each residual (difference between the ‚Äòmeasured‚Äô T2values and the fitted T2values), dividing by the corresponding uncertainty ‚àÜ T2, squaring the re- sult, and then summing over all data points. We note that, as with Method 1, the calculation of the chi-square statistic only involved use of the ‚àÜ T2errors. Finally, the data was plotted, along with error bars representing ‚àÜ T2and ‚àÜ m(see Figure 5). We note that error bars representing both ‚àÜ T2and ‚àÜ mwere included in the plot, despite the fact that only the ‚àÜ T2errors were considered in the least squares line fit. It is in- teresting to note that, similar to Method 1, even with detailed prompts, ChatGPT opted for a line-fitting pro- cedure that neglected the errors in the mass values. For this reason, we decided to change the phrasing of our prompts during Approach 3 and explicitly ask ChatGPT to perform an Orthogonal Distance Regres- sion (ODR) fit to the data, since this type of fit factors in both the x-errors and y-errors. C. Approach 3 In Approach 3, we uploaded real student data to Code Interpreter in the form of an Excel spreadsheet. The spreadsheet consisted of two sheets, one for each method. Each sheet contained four columns corresponding to x- values, x-errors, y-values, and y-errors. InMethod 1 , ChatGPT began by loading both sheets from the Excel file into separate dataframes us- ing Python‚Äôs Pandas module read excel : df1 = pd. read_excel (xls , ‚ÄôMethod 1‚Äô) df2 = pd. read_excel (xls , ‚ÄôMethod 2‚Äô) df1 , df2 Having prompted ChatGPT (see SectionV C) to per- form an ODR fit, ChatGPT began by importing the nec- essary Python libraries and defining the linear model (in red): from scipy . odr import ODR , Model , Data import numpy as np def f(B, x): return B [0]* x + B [1] 11 Next, following the prompt to perform an ODR fit, ChatGPT began by assigning data and errors to appro- priately named variables: y = df1[‚Äômass (g)‚Äô]. values y_err = df1[‚Äôerror (g)‚Äô]. values x = df1[‚Äôextension (mm)‚Äô]. values x_err = df1[‚Äôerror (mm)‚Äô]. values ChatGPT then proceeded to run the ODR fit by first creating an instance of the Model class provided by scipy.odr , then creating an instance of the Data class which was used to store the data (both xandyvari- ables) and their associated uncertainties (or weights) for the ODR fit. Finally, an instance of the ODR class was created with the data, the model, and an initial estimate of the parameters ( B[0] andB[1] equal to 0). The ODR fit was then run, and the model fit parameters were ex- tracted: linear = Model (f) mydata = Data (x, y, wd =1./ x_err **2 , we =1./ y_err **2) myodr = ODR(mydata , linear , beta0 =[0. , 0.]) output = myodr . run () B = output . beta B_err = output . sd_beta The model fit parameter, B[0] (representing the slope of the fitted line) and Berr[0] (representing the error in the slope) were then correctly used to to calculate a value for the spring constant kand the uncertainty in the spring constant, ‚àÜ k(shaded red): g = 9.81 k = B[0] * g k_err = B_err [0] * g The reduced chi-square statistic was then calculated using the resvarattribute from the ODR output, ex- plicitly accounting for uncertainties in both the xand yvariables. This follows from the fact that the ODR chi-square statistic is formed by squaring the weighted orthogonal distances, and then summing over all data points. Since the weighted orthogonal distance factors in uncertainties in both x and y variables, it follows that the same is true for the chi-square statistic. Finally, the data was plotted with error bars, with the fit line overlaid on the plotted data points (Figure 6). Method 2: ChatGPT began by extracting the rele- vant measured data, along with uncertainties, from Sheet 2 of the Excel file and assigning them to separate vari- ables. ChatGPT then ran the ODR fit, extracted the fit parameters, and used these to calculate k, ‚àÜk, and the reduced chi-square statistic. The Python code used was similar to Method 1, although the spring constant and uncertainty in the spring constant had to be calculated from the fit parameters using error propagation:output = myodr . run () B = output . beta B_err = output . sd_beta k = 4 * np.pi **2 / B[0] k_err = 4 * np.pi **2 * B_err [0] / B [0]**2 chi_square = output . res_var We note that ChatGPT correctly calculated k= 4œÄ2/Gwhere G=B[0] represents the slope of the line fit, and ‚àÜ k= 4œÄ2‚àÜG/G2where Berr[0] is equal to the uncertainty in the slope, ‚àÜ G. Again, the reduced chi-square statistic was calculated using the resvarat- tribute from the ODR output. The data was then plotted with error bars, with the fit line overlaid. In summary, ChatGPT was able to use our prompts to correctly perform an ODR fit, calculate the reduced chi- square statistic, and plot the data with an appropriate line fit, producing results identical to those obtained by the researchers using the same data set. VII. DISCUSSION This study has demonstrated that although ChatGPT Code Interpreter was capable of interpreting and com- pleting an introductory laboratory activity, the quality and accuracy of ChatGPT‚Äôs output varied significantly across three different Approaches, highlighting the im- portance of prompt detail and specificity when using Code Interpreter for data generation and analysis. As outlined in the results section, we initially prompted ChatGPT to ‚Äúwork on‚Äù the activity and simulate data to complete the task (Approach 1). The initial prompts used were specifically written to mimic a novice Chat- GPT user and a novice learner in physics. Expanding on this, the interactions of Approach 2 included more detailed instructions relating to the simulation and anal- ysis of data, and were more representative of expert-level knowledge. Results from Section V and VI revealed some changes in ChatGPT‚Äôs approach to data generation and analysis across Approach 1 and 2. Lastly, Approach 3 made use of ‚Äòreal‚Äô student data and involved targeted prompts relating to data analysis that built on Approach 1 and 2. In the subsequent sections, we address each of our research questions by discussing the key insights gained from our interactions with ChatGPT, the quality of the data generated and analysed by ChatGPT, and the possible implications for lab instructors and students. A. Simulation, Analysis, and Error Propagation Research Question 1: How effectively can ChatGPT Code Interpreter generate, analyse, and interpret data relating to an introductory laboratory activity? A key aspect of the research project was to test whether ChatGPT Code Interpreter was able to gener- ate realistic data for the activity and then analyse the 12 Key features for the experiment Approach 1 Approach 2 Approach 3 1. Used real data √ó √ó ‚úì 2. Generated realistic simulated data √ó √ó ‚àí 3. Used line fit approach √ó ‚úì ‚úì 4. Both xandyerrors considered in line fit √ó √ó ‚úì 5. Plotted graph with error bars √ó ‚úì ‚úì 6. Correct methodology for spring constant ‚úì ‚úì ‚úì 7. Correct error propagation √ó ‚úì ‚úì 8. Plausible spring constant (and uncertainty) ‚úì ‚úì ‚àí TABLE II: Summary of key features across three Approaches, where ‚úìand√ódenote ‚Äúexisting‚Äù and ‚Äúnon-existing‚Äù, respectively. Because Approach 3 uses real student data, feature 2 and 8 were ‚ÄúNot applicable‚Äù. Details relating to each of these features can be found in the Discussion section. data to determine values for the spring constant (and as- sociated uncertainties). A summary of the key features, successes, and failures of the each Approach is provided in Table II. 1. Generating realistic measurement data A summary of the data generation process for Ap- proach 1 and 2 can be found in Table I. In both cases, simulated data was created for extensions and time pe- riods by using x=mg/k andT= 2œÄp m/k to generate ‚Äòtrue‚Äô values of extension and time period (for an array of mass values). Noise was then added to simulate random measurement error. In Approach 1, this was achieved by setting the standard deviation of the normal distribution (from which the noise was drawn) at a fixed value of 0.02, which represented the constant relative uncertainty that had been assumed for all ‚Äòmeasurements‚Äô. In Approach 2, the standard deviation of the normal distribution rep- resenting the noise was variable, equal to the product of the relative uncertainty (5%) and the ‚Äòtrue‚Äô value. As a result, data points with larger absolute values tended to be more dispersed around the ‚Äòtrue‚Äô values. This het- eroscedasticity in the simulated data can be clearly iden- tified by the dispersion of the data around the line-fit for larger absolute values in both Figure 4 and Figure 5. A detailed explanation of how the data generation process in Attempt 2 led to heteroscedastic data is outlined in the Appendix. It is worth emphasising that although both of the least squares line fits for Method 1 and Method 2 (in Approach 2) led to plausible values for the spring constant and its associated uncertainty, the data itself is not plausible due to the assumed relative uncertainties in extension and time period measurements, as well as the heteroscedas- tic dispersion of the data points at large absolute val- ues. Most introductory labs require students to measure extension using a metre rule, and time periods using a stop clock. If repeat measurements are taken, then it isstandard practise to estimate the ‚Äòrandom‚Äô component of measurement uncertainty as the standard error on the mean value of the repeat measurements. In this case, it is highly unlikely that both the magnitude of the abso- lute uncertainty, and the dispersion of the data points around the line fit, will increase for larger absolute val- ues. For this reason, we consider the simulated data to be ‚Äòunrealistic‚Äô. 2. Analysis, error propagation, and chi-square Both Approach 1 and Approach 2 resulted in spring constant values consistent with the value of 51 .5N/m stated in the lab activity documentation. For Method 1 of Approach 1, the spring constant was calculated di- rectly from Hooke‚Äôs Law as k=F/x, where F=mg, for each pair of force and extension measurements. The uncertainty in the spring constant was then determined using error propagation. However, as noted in the results section, the force uncertainty was incorrectly defined as a constant 2% of the gravitational field strength, leading to an incorrect estimation of the uncertainty in the force. For Method 2 of Approach 1, the spring constant was cor- rectly determined using the relation k= 4œÄ2m/T2, and the corresponding uncertainty in kwas correctly calcu- lated by propagating the uncertainties ‚àÜ T2and ‚àÜ m. It is important to note that, although perfectly rea- sonable, the method suggested by ChatGPT during Ap- proach 1 isn‚Äôt typically used in introductory lab courses. Instead of using the measurements to perform a linear fit and then deriving the spring constant and its uncertainty from the line fit parameters (gradient and uncertainty in the gradient), ChatGPT calculated the spring constant and its uncertainty for each measurement pair indepen- dently. The approach suggested by ChatGPT could have been improved if the mean and standard error on the mean of the individual spring constants had then been calculated, but this step was not taken. In Approach 2, ChatGPT was explicitly prompted to 13 ‚Äúplot a graph with error bars‚Äù and‚Äúperform a chi-squared fit‚Äù, with ChatGPT opting for a least squares line fit us- ing Python‚Äôs curve fitfunction. However, this line fit approach only included y-errors (extension uncertainties andT2uncertainties), and assumed that the uncertain- ties in the independent variables (Force and mass) were negligible by comparison. However, if the x-errors are non-negligible, as was the case in both Method 1 and Method 2 (as can be seen by the size of the error bars in Figure 4 and Figure 5), then a more appropriate ap- proach would have been for ChatGPT to use an Orthog- onal Distance Regression (ODR) line-fit that takes into account both x-errors and y-errors. However, despite the limitations of the line-fitting approach, the gradient and uncertainty in the gradient resulting from the curve fit line-fit were correctly used to determine values for the spring constant and uncertainty in the spring constant. In Approach 3, real student data was uploaded and ChatGPT was prompted to ‚Äúperform an ODR fit, then use the fit data to calculate the spring constant and un- certainty in spring constant‚Äù . For both Method 1 and Method 2, the ODR fit parameters were used to cor- rectly calculate the spring constant and its uncertainty, and these values matched the values obtained by the re- searchers when performing the analysis on the real stu- dent data. In both Approach 2 and Approach 3, Chat- GPT was able to correctly plot the data (including error bars), with the fit line overlaid on the plotted data points. Finally, the reduced chi-square statistic was correctly calculated using the model fit parameters and uncertain- ties in both Method 1 and Method 2 (although it is again worth mentioning that in Approach 2, only the y-errors were included in the fit and calculation of the reduced chi-square statistic). However, in Approach 3, having provided the initial prompt to use an ODR fit, the re- duced chi-square statistic took into account uncertainties in both the xandyvariables. B. Providing Prompts to ChatGPT Research Question 2: What strategies can be im- plemented to optimise effective communication with ChatGPT during laboratory tasks to ensure high qual- ity, reliable output? The evolution of our interactions with ChatGPT across Approach 1, 2 and 3 revealed that the specificity and structure of the prompts plays a crucial role in guiding ChatGPT‚Äôs responses, as does the addition of context and detail. We also found that by engaging in follow- up questions and asking for clarification, the quality and relevance of ChatGPT‚Äôs output improves. In summary: ‚Ä¢Specificity Matters: A detailed and specific ini- tial prompt will often lead to a more targeted and comprehensive reply. By providing as much rele- vant information as possible in the initial prompt,fewer follow-on questions and clarifications will be needed. For example, the initial prompts provided during Approach 2 led to a more comprehensive analysis than Approach 1.. ‚Ä¢Iterative Questioning: By gradually refining the prompts and iterating on previous interactions, the quality and relevance of response is improved. By actively querying and questioning ChatGPT re- sponses, mistakes in output can be more easily identified and corrected. ‚Ä¢Explicit Instruction: By clearly stating the de- sired format or approach to a given task, ChatGPT is more likely to present you with relevant and use- ful information. For example, explicitly stating the required format for the column headings in a ta- ble, or which variables should be plotted on the x andyaxes, or how the errors should be propagated through an equation. ‚Ä¢Avoid Ambiguity and Assumptions: In the absence of clear and specific instructions, ChatGPT is likely to make assumptions that are not explic- itly stated or justified. For example, in Approach 1, without specifying how we wanted the data to be generated and analysed, ChatGPT proceeded to calculate the spring constant using pairs of values, rather than a graphical line-fitting approach. C. Implications for Laboratory Classes Research Question 3: What are the implications of AI tools like ChatGPT Code Interpreter on introductory laboratory courses? Student Implications: ChatGPT has the potential to help bridge the gap between what a student can ac- complish independently, and what they can achieve with targeted expert support [39], especially in beginning lab- oratory settings where ChatGPT can support data mod- elling, analysis, and interpretation. However, our expe- rience in this study suggests that novice learners might struggle to identify ChatGPT errors, or to provide the necessary level of prompt detail when questioning Chat- GPT. High quality ChatGPT output requires highly de- tailed and expert-like prompts, as well as a critically trained eye that is capable of spotting potential errors and scrutinising Python code to better understand the cause of the underlying problem. Even with Code Inter- preter‚Äôs remarkable powers, users must still exercise cau- tion and critical thinking when interpreting data analysis outputs. However, despite the challenges, there is still scope to design tailored ChatGPT activities that encour- age students to think critically about the questions they pose, iterate on previous interactions, and scrutinise the answers provided by ChatGPT. These are precisely the 14 types of scientific skills that we should be encouraging and developing in our students. Given that many students are already using ChatGPT without expert guidance and support [40], it is essential to be proactive and provide students with training ses- sions and guidelines on how to use ChatGPT effectively and ethically as a tutoring resource. It is the responsibil- ity of educational institutions to ensure that students are well-informed about how to use AI tools in a responsible manner. Instructor Implications: ChatGPT Code Inter- preter is an exciting new tool that provides a variety of opportunities for university instructors. In addition to the important role of ensuring equitable and ethical use of ChatGPT, instructors can also use ChatGPT to help prepare unique, challenging, and tailored problem- solving activities that help to engage students. Further- more, Code Interpreter can be used to generate simulated data for lab activities, create plots and visualisations of existing data, and perform simple calculations. Code In- terpreter can be used to design interactive slider-based simulations and animations that can help students to vi- sualise and conceptualise challenging topics (such as the relationship between error bars, line fits, and the reduced chi-square statistic). Code Interpreter also has the potential to save time and effort in preparing teaching materials and provide instructors with the opportunity to provide quick, visual representations of data. Code Interpreter also allows for the export of data files, images, and python scripts, allow- ing for the quick distribution and sharing of information. However, instructors should be aware of the limitations and potential errors that may arise when using Chat- GPT, as highlighted in this article. It is essential that instructors scrutinise the output generated by ChatGPT to ensure accuracy and reliability, especially if generating resources for use by students. Although it is not discussed in this paper, the authors have initiated a new research study in which ChatGPT Code Interpreter is used to generate novel and exciting lab activities. Initial results are encouraging in terms model data generation, detailed lesson plans, marking rubrics, and synoptic extension activities. We hope to report further on this in the near future. VIII. LIMITATIONS OF CHATGPT AND FUTURE DIRECTIONS Understanding the limitations of AI tools is essential when considering their use and integration into intro- ductory labs. While ChatGPT was able to generate plausible-looking values for the spring constant (and as- sociated uncertainty) in Approach 1,2 and 3, there were several limitations and challenges observed. As already noted, the random-noise-adding process in Attempt 2 led to heteroscedastic data. This issue could be addressed by providing a greater level of specificity in the promptsrelating to how the measurement errors should be ap- proximated. However, it is unlikely that a novice learner would spot such an error or know how to address it. Another issue worth mentioning is that Code Inter- preter will sometimes produce significantly different out- puts when provided with the same identical prompt in- put. For example, during our initial investigations we uploaded the same lab activity via Code Interpreter into four separate ChatGPT sessions, and provided an identi- cal initial prompt relating to data generation and graph plotting. Three of the four plots looked reasonable, giv- ing rise to a spring constant and uncertainty consistent with the stated value 51.5 N/m. However, one of the plots gave rise to a spring constant of 36859.69 N/m. This observation highlights that while Code Interpreter can often reproduce similar data and results when pro- vided with identical prompts, there are instances where this is certainly not the case. This is yet another exam- ple that highlights the importance of sense-checking and scrutinising the output provided by ChatGPT. Given students‚Äô varying levels of expertise and famil- iarity with lab work, ChatGPT, and Python, there is a risk that students will not be able to identify errors in Code Interpreter‚Äôs output, or be able to effectively use Code Interpreter to tackle specific physics problems. This could lead to misconceptions in their understanding of key concepts. Future studies should therefore focus on examining how students interact with ChatGPT Code Interpreter to solve physics problems. Despite the relative success of Code Interpreter in gen- erating and analysing data for this introductory lab ac- tivity, its effectiveness in handling more advanced or inquiry-based laboratory activities remains uncertain. However, considering the rapid speed of AI development, we expect that that future iterations of ChatGPT will be increasingly capable of addressing more complex experi- mental scenarios in university-level physics education. IX. APPENDIX: HETEROSCEDASTICITY IN SIMULATED DATA An interesting feature of the data generation process in Appproach 2 was the fact that ChatGPT opted to simulate random measurement error by: ‚Ä¢Assuming a relative uncertainty in all measure- ments of mass, force, extension, and time period. ‚Ä¢Adding random noise to each measurement with the noise drawn from a normal distribution with a standard deviation equal to the product of the relative uncertainty and the measurement value. The result of these two assumptions is that: ‚Ä¢The size of the error bar for each measurements is proportional to the magnitude of the measurement value. 15 FIG. 7: The top histograms (fig. a and b) show the distributions of period values for a true period (indicated by the red dashed line) of 5s and a true period of 10s, assuming that the standard deviation of the distribution is equal to 5% of the true value. The bottom histograms (fig. c and d) show the mean values of the measured periods. ‚Ä¢The data is heteroscedastic. This means the dis- persion of the plotted points around the line-fit is greater for larger measurement values. In other words, the variance of the errors increases with the value of the independent variable. We can see this explicitly by looking at how the data was simulated for the force-extension graph in Figure 4 during Approach 2. As mentioned earlier, the ‚Äòtrue‚Äô val- ues of extension were calculated from the simulated mass values using Hooke‚Äôs Law: x=mg k Next, following ChatGPT‚Äôs approach, we add a noise variable, œµ, to the extension measurements. The noise variable œµis chosen to follow a standard normal distri- bution, meaning it has a mean of zero and a standard deviation of one. We can scale the standard deviation to be equal to the product of the the relative uncertainty, u, of the extension measurements and the true extension value, x, by multiplying œµbyux. It then follows that the simulated ‚Äòmeasured‚Äô extension, xmeasured , will be equal to:xmeasured =x+xœµu=x(1 +œµu) Next, imagine repeating this data generation process a very large number of times, and then calculating the variance of the simulated extension measurements: Var(xmeasured ) = Var ( x(1 +œµu)) =x2u2 where we made use of the fact that the ‚Äòtrue‚Äô extension, x, is a constant, and that Var( cX) =c2Var(X) where cis a constant, Var( X+Y) = Var( X)+Var( Y) when XandY are independent, and Var( œµ) = 1. It then follows that the standard deviation of the simulated measurement values would be equal to the square root of the variance: œÉ(xmeasured ) =‚àö x2u2=xu So we see that the standard deviation of the simu- lated measured extension is proportional to the true ex- tension, with larger values of measured extension more dispersed around the true value than smaller values. In 16 other words, as the extension (and mass) increases, the variability of the measured extensions also increases, re- sulting in a heteroscedastic pattern of the data as ob- served in Figure 4. We can follow a similar procedure to show that the data generation process suggested by ChatGPT leads to heteroscedastic data in T(and therefore T2), as clearly evident in Figure 5. If we recall, ChatGPT began by generating equally spaced mass values, then used T= 2œÄpm kto generate ‚Äòtrue‚Äô period values. Random noise was then added to these true period values to generate the ‚Äòmeasured‚Äô period: Tmeasured =T+Tœµu=T(1 +œµu) Following an identical argument to that used when considering xmeasured , it is simple to show that: œÉ(Tmeasured ) =‚àö T2u2=Tu For each true period, T, ChatGPT generated five val- ues of Tmeasured and then calculated a mean period Tmean. Let‚Äôs consider the standard deviation of Tmean. The first step is to write: Tmean =1 55X i=1T(1 +œµiu) It then follows that: Var(Tmean) = Var  1 55X i=1T(1 +œµiu)! =T2 255X i=1Var ((1 + œµiu)) =T2u2 5The standard deviation of the mean time period is then: œÉ(Tmean) =p Var(Tmean) =Tu‚àö 5 This result confirms that the standard deviation of the mean of five repeat measurements is proportional to the ‚Äòtrue‚Äô time period, and hence for larger time period val- ues, we expect the plotted data to be more dispersed. We also see that the standard deviation of the mean of the 5 measured time periods is reduced by a factor of‚àö 5 com- pared to the standard deviation of a single measured time period. This reduction is due to the averaging process, which tends to cancel out random fluctuations, resulting in a more precise estimate of the true value. What we have shown is a special case of the common expression for the standard deviation of the mean (standard error of the mean): œÉ(¬ØX) =œÉ(X)‚àön where œÉ(X) is the standard deviation of a single mea- surement, œÉ(¬ØX) is the standard deviation of the mean, andnis the number of measurements. A visualisation of this effect is shown in the histograms appearing in Fig- ure 7. We see that the width of the distribution for the measured period increases as we move from T= 5sto T= 10s. Furthermore, we see that for both time peri- ods, the width of the distribution representing the mean time period is smaller than the width of the distribution representing a single measurement. Furthermore, we see that the width is reduced by a factor of‚àö 5. Finally, we note that mean distribution is wider when the true time period is 10s compared to 5s, again demonstrating that the data generated via this approach will be het- eroscedastic. [1] OpenAI, ‚ÄúOptimizing language models for dialogue,‚Äù (2022). [2] D. F. Carr, ‚ÄúChatgpt recovers to near-peak lev- els,‚Äù https://www.similarweb.com/blog/insights/ ai-news/chatgpt-comeback/ , accessed: 2023-11-14. [3] ‚Äúchat.openai.com website traffic demographics,‚Äù https://www.similarweb.com/website/chat.openai. com/overview , accessed: 2023-11-14. [4] D. R. E. Cotton, P. A. Cotton, and J. R. Shipway, ‚ÄúChat- ting and cheating: Ensuring academic integrity in the era of chatgpt,‚Äù Innovations in Education and Teaching In- ternational 0, 1‚Äì12 (2023). [5] C. G. West, ‚ÄúAi and the fci: Can chatgpt project an understanding of introductory physics?‚Äù (2023), arXiv:2303.01067 [physics.ed-ph].[6] C. G. West, ‚ÄúAdvances in apparent conceptual physics reasoning in gpt-4,‚Äù (2023), arXiv:2303.17012 [physics.ed-ph]. [7] G. Kortemeyer, ‚ÄúCould an artificial-intelligence agent pass an introductory physics course?‚Äù Physical Review Physics Education Research 19(2023), 10.1103/phys- revphyseducres.19.010132. [8] M. Vasconcelos and R. Santos, ‚ÄúEnhancing stem learning with chatgpt and bing chat as objects to think with: A case study,‚Äù Eurasia Journal of Mathematics, Science and Technology Education 19, em2296 (2023). [9] R. Santos, ‚ÄúEnhancing physics learning with chatgpt, bing chat, and bard as agents-to-think-with: A compar- ative case study,‚Äù (2023). [10] M. N. Dahlkemper, S. Z. Lahme, and P. Klein, ‚ÄúHow do 17 physics students evaluate artificial intelligence responses on comprehension questions? a study on the perceived scientific accuracy and linguistic quality of chatgpt,‚Äù Phys. Rev. Phys. Educ. Res. 19, 010142 (2023). [11] B. Gregorcic and A. Pendrill, ‚ÄúChatgpt and the frus- trated socrates,‚Äù Phys. Edu. 58(2023), 10.1088/1361- 6552/acc299. [12] S. Oss, ‚ÄúArtificial intelligence at school: please han- dle with care,‚Äù Phys. Edu. 58(2023), 10.1088/1361- 6552/acd7c0. [13] W. Yeadon, O. Inyang, A. Mizouri, A. Peach, and C. P. Testrow, ‚ÄúThe death of the short-form physics es- say in the coming ai revolution,‚Äù Phys. Edu. 58(2023), 10.1088/1361-6552/acc5cf. [14] T. Kumar and M. A. Kats, ‚ÄúChatgpt-4 with code in- terpreter can be used to solve introductory college-level vector calculus and electromagnetism problems,‚Äù (2023), arXiv:2309.08881 [cs.AI]. [15] T. H. Kung, M. Cheatham, A. Medenilla, C. Sillos, L. De Leon, C. ElepaÀú no, M. Madriaga, R. Aggabao, J. Maningo G. Diaz-Candido, and V. Tseng, ‚ÄúPerformance of chat- gpt on usmle: Potential for ai-assisted medical educa- tion using large language models,‚Äù PLoS digital health 2, e0000198 (2023). [16] J. Gecker, ‚ÄúPaper exams, chatbot bans: Colleges seek to ‚Äòchatgpt-proof‚Äô assignments,‚Äù (2023). [17] P. Bitzenbauer, ‚ÄúChatgpt in physics education: A pilot study on easy-to-implement activities,‚Äù Contemporary Educational Technology 15, ep430 (2023). [18] OpenAI, ‚ÄúChatGPT Plugins,‚Äù (2023), accessed: 2023- 11-14. [19] C.K. Lo, ‚ÄúWhat is the impact of chatgpt on education? a rapid review of the literature,‚Äù Educ. Sci. 13, 410 (2023). [20] A. Vaswani, N. Shazeer, N. Parmar, J. Uszkoreit, L. Jones, A. N. Gomez, L. Kaiser, and I. Polosukhin, ‚ÄúAttention is all you need.‚Äù (2017). [21] L. Ouyang, J. Wu, X. Jiang, D. Almeida, C. L. Wain- wright, P. Mishkin, C. Zhang, S. Agarwal, K. Slama, A. Ray, J. Schulman, J. Hilton, F. Kelton, L. Miller, M. Simens, A. Askell, P. Welinder, P. Christiano, J. Leike, and R. Lowe, ‚ÄúTraining language models to follow instructions with human feedback,‚Äù (2022), arXiv:2203.02155 [cs.CL]. [22] T. B. Brown, B. Mann, and N. Ryder et al., ‚ÄúLan- guage models are few-shot learners,‚Äù in Advances in Neu- ral Information Processing Systems , Vol. 33, edited by H. Larochelle, M. Ranzato, R. Hadsell, M.F. Balcan, and H. Lin (Curran Associates, Inc., 2020) pp. 1877‚Äì1901. [23] OpenAI, ‚ÄúGpt-4 technical report,‚Äù (2023), arXiv:2303.08774 [cs.CL]. [24] OpenAI, ‚ÄúCode Interpreter,‚Äù (2023). [25] OpenAI, ‚ÄúIntroducing ChatGPT Plus,‚Äù (2023). [26] OpenAI, ‚ÄúIntroducing ChatGPT Enterprise,‚Äù (2023). [27] Lakshmi Varanasi, ‚ÄúAi models like chatgpt and gpt-4 are acing everything from the bar exam to ap biology. here‚Äôsa list of difficult exams both ai versions have passed.‚Äù (2023). [28] C. Terwiesch, ‚ÄúWould chat gpt3 get a wharton mba? a prediction based on its performance in the operations management course,‚Äù (2023). [29] M. A. Cardona, R. J. Rodr¬¥ ƒ±guez, and K. Ishmael, ‚ÄúArtifi- cial intelligence and the future of teaching and learning,‚Äù (2023). [30] E. Sabzalieva and A. Valentini, ‚ÄúChatgpt and artificial intelligence in higher educa- tion: Quick start guide,‚Äù https://www.iesalc. unesco.org/wp-content/uploads/2023/04/ ChatGPT-and-Artificial-Intelligence-in-higher-education-Quick-Start-guide_ EN_FINAL.pdf , accessed: 2023-11-16. [31] UK Department for Education, ‚ÄúGenera- tive artificial intelligence (ai) in education,‚Äù https://www.gov.uk/government/publications/ generative-artificial-intelligence-in-education/ generative-artificial-intelligence-ai-in-education , accessed: 2023-11-16. [32] B. R. Wilcox and H. J. Lewandowski, ‚ÄúA summary of research-based assessment of students‚Äô beliefs about the nature of experimental physics,‚Äù American Journal of Physics 86, 212‚Äì219 (2018). [33] N. G. Holmes and H. J. Lewandowski, ‚ÄúInvestigating the landscape of physics laboratory instruction across north america,‚Äù Phys. Rev. Phys. Educ. Res. 16, 020162 (2020). [34] Z. Y. Kalender, E. Stump, K. Hubenig, and N. G. Holmes, ‚ÄúRestructuring physics labs to cultivate sense of student agency,‚Äù Phys. Rev. Phys. Educ. Res. 17, 020128 (2021). [35] ‚ÄúEngage to Excel: Producing one million additional col- lege graduates with degrees in science, technology, engi- neering, and mathematics,‚Äù (2012). [36] E. M. Smith, M. M. Stein, and N.G. Holmes, ‚ÄúHow ex- pectations of confirmation influence students‚Äô experimen- tation decisions in introductory labs,‚Äù Physical Review Physics Education Research 16, 010113 (2020). [37] N. G. Holmes, B. Keep, and C. E. Wieman, ‚ÄúDeveloping scientific decision making by structuring and supporting student agency,‚Äù Phys. Rev. Phys. Educ. Res. 16, 010109 (2020). [38] C. Wieman, ‚ÄúComparative Cognitive Task Analyses of Experimental Science and Instructional Labo- ratory Courses,‚Äù The Physics Teacher 53, 349‚Äì 351 (2015), https://pubs.aip.org/aapt/pte/article- pdf/53/6/349/9864497/349 1online.pdf. [39] Lev S Vygotsky, ‚ÄúThe development of scientific concepts in childhood.‚Äù (1962). [40] ‚ÄúOne-third of college students used chat- gpt for schoolwork during the 2022-23 aca- demic year,‚Äù https://www.intelligent.com/ one-third-of-college-students-used-chatgpt-for-schoolwork-during-the-2022-23-academic-year/ , accessed: 2023-11-16",physics.ed-ph,Arxiv
40,Dissipative particle dynamics simulation plus slip-springs for entangled polymers with various slip-spring densities,"Yuichi Masubuchi, Hong-Xia Guo, Fan Wang, Bamim Khomami, Mahdi Boudaghi-Khajehnobar, Yuya Doi, Takato Ishida, Takashi Uneyama",2024-01-31 03:10:45+00:00,http://arxiv.org/pdf/2401.17565v1,"Slip-spring models are valuable tools for simulating entangled polymers, bridging the gap between bead-spring models with excluded volume and network models with presumed reptation motion. This study focuses on the DPD-SS (Dissipative Particle Dynamics - Slip-Spring) model, which introduces slip-springs into the standard DPD polymer model with soft-core interactions. By systematically adjusting the fugacity of slip-springs, the density of slip-springs within the system is varied. Simulation results demonstrate the compatibility of models with different slip-spring densities in terms of diffusion and linear relaxation modulus when the average number of slip-springs per chain is the same. The conversion between DPD-SS models concerning length and time is achieved through Rouse scaling, which utilizes the average number of DPD beads between consecutive anchoring points of slip-springs. Additionally, the modulus conversion is accomplished through the plateau modulus that takes account of fluctuations around entanglement. Notably, diffusion and relaxation modulus from the DPD-SS model align with those reported for standard Kremer-Grest and DPD models featuring strong repulsive interactions.","1 Dissipative particle dynamics simulation plus slip-springs for entangled polymers  with various slip-spring densities  a*Yuichi Masubuchi, bcHong-Xia Guo, bcFan Wang,  dBamim Khomami, dMahdi Boudaghi-Khajehnobar,  aYuya Doi, aTakato Ishida, and aTakashi Uneyama  a Department of Materials Physics, Nagoya University, Nagoya 4648603, Japan bBeijing National Laboratory for Molecular Sciences, Joint Laboratory of Polymer Sciences and Materials, State Key Laboratory of Polymer Physics and Chemistry,  Institute of Chemistry, Chinese Academy of Sciences, Beijing 100190, P. R. China;  cUniversity of Chinese Academy of Sciences, Beijing 100049, P. R. China d Department of Chemical & Biomolecular Engineering, University of Tennessee, Knoxville, Tennessee, 37996, USA  *to whom correspondence should be addressed mas@mp.pse.nagoya-u.ac.jp ver Jan 31, 2024  Abstract Slip-spring models are valuable tools for simulating entangled polymers, bridging the gap between bead-spring models with excluded volume and network models with presumed reptation motion. This study focuses on the DPD-SS (Dissipative Particle Dynamics - Slip-Spring) model, which introduces slip-springs into the standard DPD polymer model with soft-core interactions. By systematically adjusting the fugacity of slip-springs, the density of slip-springs within the system is varied. Simulation results demonstrate the compatibility of models with different slip-spring densities in terms of diffusion and linear relaxation modulus when the average number of slip-springs per chain is the same. The conversion between DPD-SS models concerning length and time is achieved through Rouse scaling, which utilizes the average number of DPD beads between consecutive anchoring points of slip-springs. Additionally, the modulus conversion is accomplished through the plateau modulus that takes account of fluctuations around entanglement. Notably, diffusion and relaxation modulus from the DPD-SS model align with those reported for standard Kremer-Grest and DPD models featuring strong repulsive interactions.   Keywords Coarse-grained molecular simulations; entangled polymer dynamics; viscoelasticity;    2  Introduction The dissipative particle dynamics (DPD) method1‚Äì4 has been established as applicable to various soft-matter systems. For the case of polymers3, each polymer chain is represented by consecutive DPD beads connected by springs. The beads interact with each other according to the soft-core interaction5. The known problem of this standard DPD modeling is that the soft-core interaction does not prohibit crossing between polymers. Consequently, the entangled polymer dynamics are not reproduced. This issue was first reported by Spenley6, who conducted a series of DPD simulations for polymer melts with the inter-particle interaction and connectivity for the chains proposed by Groot and Warren3. The results demonstrate that the molecular weight ùëÅ dependence of the longest relaxation time ùúè and the diffusion constant ùê∑ can be expressed as ùúè‚àùùëÅ!.#$¬±&.& and ùê∑‚àùùëÅ(!.&)¬±&.&) in 3‚â§ùëÅ‚â§100, without transition to entangled dynamics.   Pan and Manke7 added the segmental repulsive potential (SRP) developed by Kumar and Larson8 to the standard DPD interactions. They succeeded in reproducing the transition from the Rouse to the entangled behaviors; for ùëÅ>30, they reported ùê∑‚àùùëÅ(!.$ while retaining the Rouse behavior for the short chains. Goujon et al.9 carefully examined this approach concerning chain crossability.  Yamanoi et al.10 utilized this method to report shear rheology. Sirk et al.11 proposed a modified SRP by altering the inter-bond interaction for computational efficiency. Iwaoka et al.12 considered an adjustable multipoint interaction to attain a cylindrical excluded bond volume.  The other direction was proposed by Nikunen et al.13, who discussed the condition of uncrossability according to the relationship between the maximum bond stretch and the effective bead size defined by the intensity of repulsive force. Consequently, they realized the entangled polymer dynamics by intensifying repulsive interaction. This approach is straightforward and easily implemented in the conventional DPD method. However, the drawback is that the level of coarse-graining is close to that achieved by the modeling with Lenard-Jones-type hard-core interactions14. For instance, the critical molecular weight for the onset of entanglement in the molecular weight dependence of the diffusion coefficient is seen at ùëÅ~50, irrespective of the interaction parameter, according to Nikunen et al.13 Groot15 also examined a similar approach. Mohagheghi and Khomami16 improved the model of Nikunen et al. by introducing bending potential along the chain to gain entanglement density and reduce entanglement molecular weight. They explored the entangled polymer dynamics under fast shear16‚Äì18 and elongation19 using this model (MK model, hereafter). Nafar Sefiddashti et al.20,21 reported the careful mapping of the MK model with an atomistic model of polyethylene. The chain statistics and dynamics have recently been reported in further detail by Wang et al.22 By adopting the same model, Li et al.23 conducted a deep study on the slip phenomena and the individual configuration   3 dynamics of interfacial copolymer chains in the entangled polymer‚àípolymer interface under fast shear flow.  Another approach is the inclusion of slip springs. Likhtman24 proposed a single-chain model in which a Rouse chain is trapped by several virtual springs representing dynamic constraints. For these additional springs, one end is anchored at a specific position in space, whereas the other end slides along the chain. Due to this sliding motion, the virtual spring is called a slip spring. Inspired by this single-chain model, multi-chain versions have been developed in parallel25‚Äì30. Among them, Langeloth et al.28 installed slip springs into the DPD model with the standard inter-beads interaction (employed by Spenley6). This model reproduces the entangled polymer dynamics28,31, even though the beads overlap. Utilizing the advantage of the DPD-based approach, they extended the model to polymer solutions, for which the polymers entangled via slip springs are mixed with DPD beads representing solvent32. Other studies33,34 have also been reported with this model.  The distinguishable feature of the slip spring approach is that the level of coarse-graining can be chosen arbitrarily35. As established experimentally, the dynamics of different polymeric liquids are universal when the number of entanglements per chain is the same under equilibrium, irrespective of the number of Kuhn segments between entanglements36. This universality has been confirmed for a multi-chain slip-spring (MCSS) model35. Namely, the diffusion and the relaxation modulus are convertible when the number of anchoring points per chain is identical among the systems with different numbers of Rouse segments per chain. The conversion factors for length, time, and modulus37 are theoretically derived according to the average number of Rouse beads between anchoring points. This feature allows us to adopt a suitable number of beads per chain according to the length and time ranges in focus and computation costs. However, the same is not guaranteed for other models that employ different inter-bead interactions like DPD interaction. Namely, the MCSS model is carefully designed to retain the Gaussian chain statistics by canceling the effect of slip springs via the specific soft-core inter-bead interaction.   In this study, we examined the DPD-based slip spring models. Hereafter, we refer to it as the DPD-SS model (meaning DPD with slip-springs). We confirmed that the arbitrariness for the coarse-graining level is observed, consistent with the MCSS model, despite the difference in the inter-bead interaction. If the conversion factors are chosen adequately, the attained polymer dynamics agree with those reported by the standard Kremer-Grest and the DPD simulations with strong repulsive interactions. Details are shown below.   Model and Simulations   4 We combine slip springs with the conventional DPD scheme28,31,32. Besides including slip springs, our model is essentially the same as the earlier DPD studies2,3,6. We consider polymer melts, in which each polymer chain is represented by consecutive DPD beads with the mass ùëö. The force for particle i is written as  ùêÖ*=ùêÖ*++ùêÖ*,+ùêÖ*-.																																																												(1) Here, ùêÖ*+, ùêÖ*,, and ùêÖ*- are concervative, dissipative, and random forces, respectively.   ùêÖ*+ includes virtual force due to slip-springs in addition to conventional soft-core repulsive force and bonding force; ùêÖ*+=4ùêü*.+*/.+4ùêü*.012345+4ùêü*.65789(59:83;5.																							(2)	ùêü*.+ is the soft-core repulsive interaction written as	ùêü*.+=7ùëé*.91‚àíùëü*.ùëü<<ùêû*.(ùëü*.<ùëü<)0(ùëü*.‚â•ùëü<)	,																																										(3) where ùê´*.=ùê´*‚àíùê´., ùëü*.=Bùê´*.B, and ùêû*.=ùê´*./ùëü*.. ùëé*. is the repulsion parameter ùëé*. chosen at 25ùëò=ùëá/ùëü>, and ùëü> is the cut-off radius. ùêü*.0 is the bonding force between DPD beads connected along the chain written as ùêü*.0=ùëòùê´*.,																																																																																					(4) where ùëò is the spring constant chosen at ùëò=2ùëò=ùëá/ùëü>.   ùêü*.6 is the contribution of slip-springs separately introduced from the bonding springs. For a pair of particles connected by a slip-spring,  ùêü*.6=ùëòùê´*.,																																																																																				(5) where ùëò is the same spring constant as that for ùêü*.0. These slip-springs hop along the chain according to the cumulative probability below.  ùõπ=ùëò=ùëáŒîùë°ùúÅ?ùëü>)91‚àítanhŒîùêπ2ùëò=ùëá<																																								(6) Here, ùúÅ5 is the friction coefficient of hopping, and Œîùë° is the step size of numerical integration. Œîùêπ is the energy difference according to the change in spring length induced by the hopping written below. Œîùêπ=12ùëò(ùêÆ@)‚àíùêÆ))																																																									(7) Here, ùêÆ and ùêÆ‚Ä≤are the end-to-end vectors before and after the hopping. When a slip spring reaches the chain end by the hopping, the spring is annihilated with the following cumulative probability.  ùõπ(=ùëò=ùëáŒîùë°ùúÅ?ùëü>)																																																																							(8)   5 Vise versa, we create a new spring to connect a randomly selected chain end and one of the surrounding beads. A creation attempt is accepted with the following probability.  ùõπA=exp(‚àíùëòùêÆ)2ùëò=ùëá‚ÅÑ)																																																	(9) Here, ùêÆ is the end-to-end vector of the newly created slip spring. We attempt the creation procedure with the number of trials below to fulfill the detailed balance. ùêæ=2ùëÅB3454ùúã3ùëü>5ùúå1Œîùë°ùúÅ?ùúâ																																															(10) Here, ùëÅB345 is the number of chain ends, ùëü>5 is the cut-off distance for the creation (different from ùëü>), and ùúâ is the fugacity of slip springs. Since ùêæ is not an integer in general, we take ‚åäùêæ‚åã or ‚åàùêæ‚åâ in each time step stochastically to have ùêæ as the time average. The parameters are chosen according to the previous studies as ùëò=ùëáŒîùë°ùúÅ?ùëü>)‚ÅÑ=0.06 and ùëü>5=3ùëü>. ùúâ is systematically varied to control the slip spring density. Note that overlapping and crossing between slip-springs along the chain is allowed. If slip-spring degeneracy is disallowed, the chain dynamics slow down due to the asymmetric exclusion process of slip-springs38.   ùêÖ*, and ùêÖ*- are dissipative and random forces written as ùêÖ*,=4‚àíùõæùë§,(ùëü*.)(ùêû*.‚àôùêØ*.)ùêû*.*/.,																																														(11) ùêÖ*-=4ùúéùë§-(ùëü*.)ùúÉ*.ùêû*..*/.																																																														(12) Here, ùë§,(ùëü) and ùë§-(ùëü) are the weighting functions given by ùë§,(ùëü)=[ùë§-(ùëü)])=j(1‚àíùëü))(ùëü<ùëü<)0(ùëü‚â•ùëü<).																				(13) ùêØ*. is the relative velocity. ùúÉ*. is a Gaussian random value obeying ‚å©ùúÉ*.‚å™=0 and ‚å©ùúÉ*.(ùë°)ùúÉCD(ùë°‚Ä≤)‚å™=(ùõø*Cùõø.D+ùõø*Dùõø.C)ùõø(ùë°‚àíùë°‚Ä≤). ùõæ and ùúé are chosen to satisfy the fluctuation-dissipation relation.  ùúé)=2ùõæùëò=ùëá.																																																																												(14)  The other parameters for simulations are set as follows. The bead density ùúå1 is fixed at 3ùëü>(. The bead number per polymer chain ùëÅ varies from 7 to 150 depending on the slip spring density. The number of polymers is ùëÄ=200 or 300 to achieve sufficient simulation box dimensions compared to the polymer size. The integration timestep for the DPD dynamics is Œîùë°EFE=0.06ùúè, where ùúè=oùëü>)ùëöùëò=ùëá‚ÅÑ. Eight independent simulation runs were performed for each condition. After equilibration, we acquired the data for a sufficiently long time, which is at least 10 times longer than the longest relaxation time of each system. We choose units of length, time, and energy as ùëü>, ùúè, and ùëò=ùëá, and quantities reported hereafter are normalized according to these standard DPD units.     6 Results and Discussion Figure 1 shows the quantity ùëÅG66 defined below. ùëÅG66‚â°2ùëÄ66ùëÅùëÄ																																																									(14) Here, ùëÄ66 is the number of slip springs in the system. The factor of 2 in the numerator stands for the two anchoring points of each spring, and hence ùëÅG66 is the average number of DPD beads between two consecutive anchoring points of the slip springs along the chain. In Fig 1 (a), ùëÅG66 is plotted against the DPD bead number per chain ùëÅ for various ùúâ values. ùëÅG66 slightly decreases with increasing ùëÅ, and it converges to a steady value depending on ùúâ for the large-ùëÅ limit. Note that for the case of the original MCSS model, ùëÅG66 weakly increases with increasing ùúâ before reaching steady values. This qualitative difference between the models is due to the intra-chain correlation.25 Nevertheless, the ùëÅ-dependence is relatively weak, and we discuss the asymptotic value at the large-ùëÅ limit ùëÅG66H, following the previous study.  Figure 1 (b) shows ùëÅG66H as a function of ùúâ. As seen in the previous studym ùëÅG66H is in inverse proportion to ùúâ. This behavior is consistent with what has been reported for the original MCSS model, for which the following relation has been reported with neglecting intra-chain correlation. 1ùëÅG66H~2ùúâùúå19ùúãùëò?</)																																										(15) For the parameters chosen for this specific study, we have ùëÅG66H~0.16ùúâ(!. This relation is drawn by the broken line in Fig 1 (b), demonstrating a good agreement with the DPD-SS results shown by the symbol. This correspondence implies that the difference in the inter-bead interaction is not critical for ùëÅG66H.     7  Figure 1 Average number of DPD beads between consecutive anchoring points of slip springs ùëÅG66 plotted against the bead number per chain ùëÅ for various slip spring activities ùúâ (a), and ùëÅG66 in the long chain limit ùëÅG66H as a function of ùúâ (b). In Panel (a), ùúâ=0.002, 0.004, 0.01, 0.02, 0.04, 0.1, and 0.2 from top to bottom. The broken line in Panel (b) shows the relationship ùëÅG66H=0.16ùúâ(!.   Figure 2 shows the squared end-to-end distance ùëÖ) normalized by the bond number ùëÅ‚àí1. For comparison, the case without slip springs (ùúâ=0) is also indicated by black unfilled circles and cross.  (The latter indicates the data extracted from Spenley6.) As clearly seen, DPD chains are not Gaussian with small ùëÅ values, and ùëÖ)/(ùëÅ‚àí1)>1 even for the large-ùëÅ limit due to the repulsive interaction. This nature is also seen in DPD-SS results. With increasing ùúâ, the introduced slip springs compress the chains, and such an effect is seen for small- ùëÅ cases. Nevertheless, the change in ùëÖ) statistics is relatively small compared to the distribution shown by the error bars for long chains with ùëÅ‚â•10. 10-1100101102NeSS2461012461022N100101102NeSS‚àû10-32410-22410-124Œæ(a) (b)  8  Figure 2 The squared end-to-end distance ùëÖ) normalized by the bond number per chain ùëÅ‚àí1 plotted against the bead number per chain ùëÅ with various slip spring activities ùúâ. The DPD-SS results for ùúâ=0.002, 0.004, 0.01, 0.02, 0.04, 0.1, and 0.2 are shown in red by filled circle, unfilled circle, filled triangle, unfilled triangle, filled square, unfilled square, and cross. The black unfilled circle shows the results for ùúâ=0 (DPD without slip springs). The cross indicates the result reported by Spenley6. Error bars indicate the distribution.   Figure 3 (a) shows the diffusion coefficient ùê∑ as a function of ùëÅ for various ùúâ. To see the onset of entanglement, we plot ùê∑ùëÅ) (the so-called Likhtman plot24), where the slopes of 1 and 0 correspond to the Rouse and reptation predictions. As reported earlier, ùê∑ follows the Rouse behavior when ùúâ=0. As the value of ùëÅ increases, the entangled dynamics are realized by slip springs. As observed for polymers experimentally39, the ùëÅ-dependence of ùê∑ is more intense than the reptation theory40 that predicts ùê∑‚àùùëÅ(). Thus, ùê∑ùëÅ) decreases with increasing ùëÅ in the large-ùëÅ range after showing a plateau. Irrespective of the value of ùúâ, the DPD-SS results are consistent with this established behavior. Figure 3 (b) demonstrates that the ùê∑ùëÅ) curves with different ùúâ values can be superposed when ùê∑ and ùëÅ are normalized by the values corresponding to the peak of ùê∑ùëÅ). (Here, the results for ùúâ‚â§0.004 were omitted since they did not exhibit concave curves in the examined range of ùëÅ.) Since the peak means the onset of entanglement, we refer to these characteristic values as ùê∑< and ùëÅ<.   The ùëÅ‚àídependence of ùê∑ for DPD-SS is consistent with that reported for the standard bead-spring simulations and the earlier DPD simulations with strong repulsive interactions. In Fig 3 (b), these earlier results are also shown for comparison. The results from simulations of the bead-spring model proposed by Kremer and Grest (the KG model hereafter) are indicated by black symbols14,41‚Äì44. The plot is made with the critical values of ùê∑ and ùëÅ for the onset of entanglement for the KG model chosen at ùê∑<JK=1.4√ó10(L (in units of Lenard-Jones liquids) and ùëÅ<JK=150. Our results with various ùúâ values are located within the scatter of those for the bead-spring simulations. The results from the DPD simulations reported by Nikunen et al.13 with the repulsion parameter ùëé*.=100 and the bead density ùúå=1 are shown by blue open circles, for which the critical values are assumed as 3.02.01.00.0R2 / (N-1) 246810124681022N  9 ùê∑<M=5.9√ó10(L  and ùëÅ<M=110. The blue and green open triangles are the data by Nafar Sefiddashti et al.21 and Wang et al.22 for the MK-DPD simulations with ùëé*.=200, the bending potential parameter ùëòN=2, and the bead density ùúå=1. For this case, the critical values are chosen as ùê∑<OJ=7.7√ó10(L and ùëÅ<OJ=48. These DPD results are also consistent with ours (in red) within a reasonable deviation range.      Figure 3 Diffusion coefficient ùê∑ multiplied by the squared bead number per chain ùëÅ) plotted against the bead number per chain ùëÅ for various slip spring activities ùúâ (a), and those normalized by the characteristic values for the onset of entanglement ùê∑< and ùëÅ< (b). The results for ùúâ=0.002, 0.004, 0.01, 0.02, 0.04, 0.1, and 0.2 are shown by filled circle, unfilled circle, filled triangle, unfilled triangle, filled square, unfilled square, and cross in red. The black unfilled circle in Panel (a) shows the results for ùúâ=0 (without slip springs). The solid line in Panel (a) indicates a slope of 1, showing the Rouse scaling. In Panel (b), the results for ùúâ‚â§0.004 are omitted. Black circles, crosses, triangles, squares, and rhombohedrals exhibit the results from literature for the Kremer-Grest model reported by Kremer and Grest14, Bulacu and van der Giessen41, Likhtman et al.42, Xu et al.43, and Takahashi et al.44, respectively. The blue open circle, blue triangle, and green triangle show the DPD results by Nikunen et al.13, Nafar Sefiddashti et al.21 and Wang et al.22, respectively.   10-1241002410124DN2 100246810124681022N1 10-1241002DN2 / (DcNc2 )10-210-1100101N / Nc(a) (b)  10 Figures 4 (a) and (b) show ùê∑< and ùëÅ< as functions of ùúâ. These panels exhibit the relations written as ùê∑<=0.12ùúâ and ùëÅ<=1.1ùúâ(!. These relations can be converted to ùê∑<=1.8√ó10()ùëÅG66H(! and ùëÅ<=7.2ùëÅG66H according to eq 7. In Panel (c), we plot the relaxation time of the chain with the molecular weight of ùëÅ<, showing the relation written as ùúè<=0.35ùëÅ<)=0.42ùúâ(), which is converted as ùúè<=18ùëÅG66H). The results demonstrate that the chains with the molecular weight of ùëÅ< exhibit the Rouse behavior. The conversion between the DPD-SS systems with different ùúâ values can be achieved according to the Rouse scaling, as reported for the original MCSS model35.  For the relation between ùëÅ< and ùëÅG66H, one may argue that for entangled polymers, the critical molecular weight ùëÄ< is close to 2ùëÄG and the relation shown here is inconsistent with this established, yet empirical, relation36,40,45. However, tabulated ùëÄG values are based on plateau moduli ùê∫P, and the relationship between ùê∫P and ùëÅG66H is dependent on imposed fluctuations on the entanglement network37,46‚Äì48.     11   Figure 4 The characteristic bead number per chain ùëÅ< (a) and diffusion coefficient ùê∑< (b) for the onset of entanglement plotted against slip spring activities ùúâ. Panel (c) shows the end-to-end relaxation time ùúè< for the chains with ùëÅ< at each ùúâ. Black broken lines indicate ùëÅ<=1.1ùúâ(!, ùê∑<=0.12ùúâ, and ùúè<=0.35ùëÅ<).   To further evaluate the compatibility among the systems with different ùúâ, we compare the mean-squared displacement of the bead located at the chain center ùëî!(ùë°). Figure 5 (a) shows reasonable agreement of DPD-SS results with some literature data14,41,42,44,49 for the KG model with the bead number per chain of ùëÅJK=50,100,200, and 350. As established earlier, ùëî!(ùë°) shows a few slope changes reflecting different subdiffusive motions before exhibiting Fickean diffusion. To see the 10-32410-224Dc6810-2246810-124Œæ24101241022Nc6810-2246810-124Œæ 100101102103104œÑc100241012410224Nc(a) (b) (c)  12 transition from the diffusion along the chain contour (ùëî!(ùë°)~ùë°!/)) to the normal diffusion (ùëî!(ùë°)~ùë°), we plot ùëî!(ùë°)ùë°(!/) in Figure 5 (b), following Likhtman42. DPD-SS simulations shown by solid curves nicely reproduce the data of the KG model indicated by symbols, irrespective of ùúâ values. Here, the conversion is attained with the relations (ùúéJK/ùëü<))=13ùëÅG66H(!=84ùúâ and ùúèJK/ùúè=1.6√ó10)ùëÅG66H()=6.6√ó10Lùúâ), where ùúéJK and ùúèJK  are units of length and time for the KG model. These conversion rules for length and time are consistent with the diffusion coefficient. Namely, from the superposition shown in Fig 3 (b), we have ùê∑<JK/ùê∑<=(1.4√ó10(L)/(1.8√ó10()ùëÅG66H(!)=7.8√ó10(ùëÅG66H=1.2√ó10(ùúâ(!. This relation is close to what is obtained from the rules for length and time, ùê∑JK/ùê∑=(ùúéJK/ùëü<))/(ùúèJK/ùúè)=8.1√ó10(ùëÅG66H=1.3√ó10(ùúâ(!. The conversion rule for length is also consistent with the conversion for molecular weight ùëÅJK/ùëÅ=ùëÅ<JK/ùëÅ<=21ùëÅG66H(!=1.3√ó10)ùúâ if we take into account of the effect of repulsive interactions on the Kuhn length, as shown in Fig 2.   Figure 5 Mean-squared displacement of the central bead ùëî!(ùë°) (a) and that normalized by Rouse behavior ùëî!(ùë°)ùë°(!/) (b) for various slip spring fugacities ùúâ for different ùëÅ chains corresponding to Kremer-Grest chains with ùëÅJK=50,100,200, and 350 from left to right. Symbols show the literature data for the KG model14,41,42,44,49.   However, we note that the conversion factor for length determined via diffusion is inconsistent with the chain dimension. Figure 6 compares ùëÖ) between DPD-SS and KG models. Although the 100101102103104g1KG100101102103104105106107tKG Kremer & Grest Likhtman et al. Bulacu & van der Giessen Takahashi et al Zhou & Larson Œæ=0.01 0.02 0.04 0.1 0.2 10-124610024g1KG tKG-1/2100101102103104105106107tKG(a) (b)  13 ùëÅ‚àídependence of ùëÖ) is close to Gaussian in both cases, DPD-SS underestimates ùëÖ) with the conversion factor (ùúéJK/ùëü<))=84ùúâ. This discrepancy was also reported for the comparison of original MCSS model with the KG model30,35, and the reason is the difference in chain density, chain stiffness, and inter-beads interactions29,50.     Figure 6 End-to-end distance as a function of the bead number per chain for various slip spring fugacities ùúâ converted to the Kremer-Grest model. Symbols show the literature data for the KG model14,44,51,52. Error bars indicate the distribution.   The other conversion factor we have to determine is that of modulus. Because modulus can be interpreted as thermal energy per unit volume, one may expect that the conversion of modulus is automatically achieved by the conversion factors for energy and length already determined. However, modulus depends on fluctuations in the entanglement network, and the conversion rule must be obtained separately. Figure 7 (a) shows linear relaxation modulus ùê∫(ùë°) for various ùúâ values compared with the literature data42,44 for melts of Kremer-Grest chains with ùëÅJK=50,100,200, and 350. We omit the glassy part since such behavior is not included in the DPD-SS model. Consequently, the short-time behavior follows the Rouse prediction and ùê∫(ùë°)~ùë°(!/). After the Rouse behavior, long chains exhibit an entanglement plateau. For critical comparison, we plot ùê∫(ùë°)ùë°!/) in Figure 7 (b), in which convex curves reflecting entanglement can be seen for the long chains. DPD-SS simulations reproduce these established behaviors if a conversion factor for modulus is appropriately chosen for each ùúâ, as shown by curves. To be fair, we note that DPD-SS results for ùëÅJK=200 and 350 somewhat underestimate the data by Likhtman (triangle). However, the deviation is smaller than that observed between KG simulation data in literature. See the data by Takahashi et al.44 (cross for ùëÅJK=200), for example.    According to the previous study37,48, the plateau modulus of slip-spring systems is written as  100101102103104RKG2 100101102103104NKG Kremer & Grest Auhl et al.  Sen et al.  Takahashi et al.  Œæ =0.01 0.02 0.04 0.1 0.2  14 ùê∫P=1115ùúåùëÅBQQHu1+4vùëÅ5ùëÅBQQHwx(!)																																																							(16) Due to this relationship between modulus and ùëÅBQQH, the conversion factor for modulus is rather complicated and not written as a power-law function of ùëÅBQQH. Instead, we have found that the conversion rule can be described as ùê∫JK/ùê∫=2.6√ó10()ùê∫P(!. This relation is consistent with the previous study for the original MCSS model.35    Figure 7 Linear relaxation modulus ùê∫(ùë°) (a) and that normalized by Rouse behavior ùê∫(ùë°)ùë°!/) (b) for various slip spring activities ùúâ for different ùëÅ chains corresponding to Kremer-Grest models with ùëÅJK=50,100,200, and 350 from left to right. Symbols show the literature data42,44.   Let us turn our attention to the comparison with the entangled DPD model, in which the strong repulsive interaction realizes uncrossability between chains. We discuss the model proposed by Mohagheghi and Khomami16, who introduced bending rigidity to reduce the entanglement molecular weight. Following the strategy we attained above for the KG model, we have determined the conversion factors as (ùëü<OJ/ùëü<))=53ùúâ, ùúèOJ/ùúè=8.3√ó10ùúâ), ùëÅOJ/ùëÅ=42ùúâ, and ùê∫OJ/ùê∫=1.2√ó10()ùê∫P. Here, subscript MK refers to as the Mohagheghi-Khomami model. The DPD-SS results are shown only for ùúâ=0.2 owing to the universality among different ùúâ values.  The comparisons for ùëî!(ùë°) and ùëî!(ùë°)ùë°(!/) are shown in Fig. 8 for several cases with various ùëÅOJ. Most ùëî!(ùë°) data are from the literature, but a few are newly added for this study. The MSD from DPD-SS simulations (red curves) reasonably agrees with that from MK simulations for short chains with ùëÅOJ‚â§150, as seen in Fig 5 for the comparison to KG simulations. However, behavior for the longest chain with ùëÅOJ=400 is different from that in MK. The reason for this discrepancy is 10-12410024101GKGtKG1/2101102103104105106tKG10-32410-22410-1GKG101102103104105106tKG Œæ = 0.01 0.02 0.04 0.1 0.2 Likhtman et al. Takahashi et al. (NKG =200)(a) (b)  15 unknown, and we need further evaluation for well-entangled cases.    `  Figure 8 Comparison between DPD-SS and MK simulations for the mean-square displacement of the central bead ùëî!(ùë°) (a) and that normalized by Rouse behavior ùëî!(ùë°)ùë°(!/) (b). The chain lengths were ùëÅOJ=60,90,100,150,200,and	400, from left to right. The blue cross shows the data reported by Nafar Sefiddashti et al.21 for ùëÅOJ=400, and newly added ones for ùëÅOJ=100 and 200. The gray circle indicates the data from Wang et al.22. Note that the MK results include two datasets for ùëÅOJ=200 and 400. The red curves are the DPD-SS results with ùúâ=0.2.   Figure 9 shows the comparisons for chain dimension and relaxation modulus. Panel (a) demonstrates that the conversion factor for length (ùëü<OJ/ùëü<)) is not compatible with the chain dimension, as also seen in the comparison to the KG model (see Fig 6). As mentioned above, the reason for this discrepancy is the difference in chain density, chain stiffness, and inter-bead interactions29,50. Concerning ùê∫(ùë°), because the calculation is challenging for fine-grained models, correspondence between the models is not excellent. Nevertheless, a reasonable agreement is confirmed in Panel (b).   100101102103104g1MK100 102 104 106 108tMK 0.12412410g1MK tMK-1/2100 102 104 106 108tMK(a) (b)  16  Figure 9 Comparisons for the squared end-to-end distance ùëÖ) (a) and the linear relaxation modulus ùê∫(ùë°) (b), between the MK simulations reported by Wang et al.22 (black symbols) and our DPD-SS simulations with ùúâ=0.2 (red curves and symbols). The bead number per chain for the MK model is ùëÅR=60, 90, 150, and 250 in Panel (b). Error bars in Panel (a) indicate the distribution.   Conclusions The effect of slip-spring fugacity on the polymer dynamics for the multi-chain slip-spring model with the standard DPD interaction (DPD-SS model) was examined. The slip-spring density depends on the fugacity as theoretically derived for the original MCSS model, implying that the difference in the inter-bead interaction does not have a significant effect on the thermodynamics of the model. For the dynamics, the onset of entanglement was nicely reproduced for the molecular weight dependence of the diffusion constant, irrespective of the fugacity, and the results obtained for different fugacities can be superposed with the conversion factors for the diffusion constant and molecular weight. The compatibility between the models with different fugacities was also observed for the mean-square displacement of the central bead in the polymer chain and linear relaxation modulus, with conversion factors for length, time, and modulus. The results are convertible to the literature data for the Kremer-Grest and Mohagheghi-Khomami simulations.   Although these results encourage applications of the DPD-SS model toward various problems, we note that the modeling has been established only for linear polymers with homogeneous chemistry in bulk under equilibrium. The chain dynamics under fast and large deformations53,54 have yet to be discussed. Extensions toward branch polymers55 and gelation56 have been reported for the original MCSS but are not guaranteed for the model with the DPD interaction. Consecutive studies in such 10-310-210-1100GMK (t)100 102 104 106 tMK102241032RMK210124681022468103NMK(a) (b)  17 directions are ongoing, and the results will be reported elsewhere.   Acknowledgments This study is partly supported by JST-CREST (JPMJCR1992) and JSPS KAKENHI (22H01189).  References 1 P. J. Hoogerbrugge and J. M. V. A. Koelman, Europhysics Letters (EPL), 1992, 19, 155‚Äí160. 2 P. Espa√±ol and P. Warren, Europhysics Letters (EPL), 1995, 30, 191‚Äí196. 3 R. D. Groot and P. B. Warren, J Chem Phys, 1997, 107, 4423. 4 P. Espa√±ol and P. B. Warren, J Chem Phys, 2017, 146, 150901. 5 T. Kinjo and S. Hyodo, Phys Rev E, 2007, 75, 051109. 6 N. A. Spenley, Europhys Lett, 2000, 49, 534‚Äí540. 7 G. Pan and C. W. Manke, Int J Mod Phys B, 2003, 17, 231‚Äí235. 8 S. Kumar and R. G. Larson, J Chem Phys, 2001, 114, 6937. 9 F. Goujon, P. Malfreyt and D. J. Tildesley, J Chem Phys, 2008, 129, 034902. 10 M. Yamanoi, O. Pozo and J. M. Maia, J Chem Phys, 2011, 135, 044904. 11 T. W. Sirk, Y. R. Slizoberg, J. K. Brennan, M. Lisal and J. W. Andzelm, J Chem Phys, 2012, 136, 134903. 12 N. Iwaoka, K. Hagita and H. Takano, J Chem Phys, 2018, 149, 114901. 13 P. Nikunen, I. Vattulainen and M. Karttunen, Phys Rev E, 2007, 75, 036713. 14 K. Kremer and G. S. Grest, J Chem Phys, 1990, 92, 5057. 15 R. D. Groot, J Chem Phys, 2013, 138, 224903. 16 M. Mohagheghi and B. Khomami, ACS Macro Lett, 2015, 4, 684‚Äí688. 17 M. Mohagheghi and B. Khomami, J Rheol (N Y N Y), 2016, 60, 849‚Äí859. 18 M. Mohagheghi and B. Khomami, J Rheol (N Y N Y), 2016, 60, 861‚Äí872. 19 M. Boudaghi, M. H. Nafar Seddashti, B. J. Edwards and B. Khomami, J Rheol (N Y N Y), 2022, 66, 551‚Äí569. 20 M. H. Nafar Sefiddashti, B. J. Edwards and B. Khomami, Macromolecules, 2019, 52, 8124‚Äí8143. 21 M. H. Nafar Sefiddashti, M. Boudaghi-Khajehnobar, B. J. Edwards and B. Khomami, Sci Rep, , DOI:10.1038/s41598-020-61374-8. 22 F. Wang, L.-K. Feng, Y.-D. Li and H.-X. Guo, Chinese Journal of Polymer Science, 2023, 41, 1392‚Äí1409. 23 Y. Li and H. Guo, J Phys Chem B, 2023, 127, 9642‚Äí9655. 24 A. E. Likhtman, Macromolecules, 2005, 38, 6128‚Äí6139.   18 25 T. Uneyama and Y. Masubuchi, J Chem Phys, 2012, 137, 154902. 26 V. C. Chappa, D. C. Morse, A. Zippelius and M. M√ºller, Phys Rev Lett, 2012, 109, 148302. 27 A. Ram√≠rez-Hern√°ndez, F. A. Detcheverry, B. L. Peters, V. C. Chappa, K. S. Schweizer, M. M√ºller and J. J. de Pablo, Macromolecules, 2013, 46, 6287‚Äí6299. 28 M. Langeloth, Y. Masubuchi, M. C. B√∂hm and F. M√ºller-plathe, J Chem Phys, 2013, 138, 104907. 29 G. G. Vogiatzis, G. Megariotis and D. N. Theodorou, Macromolecules, 2017, 50, 3004‚Äí3029. 30 Y. Masubuchi and T. Uneyama, Soft Matter, 2018, 14, 5986‚Äí5994. 31 M. Langeloth, Y. Masubuchi, M. C. B√∂hm and F. M√ºller-Plathe, J Chem Phys, 2014, 141, 194904. 32 Y. Masubuchi, M. Langeloth, M. C. B√∂hm, T. Inoue and F. M√ºller-Plathe, Macromolecules, 2016, 49, 9186‚Äí9191. 33 T. Aoyagi, Nihon Reoroji Gakkaishi, 2021, 49, 79‚Äí86. 34 R. Miwatani, K. Z. Takahashi and N. Arai, Polymers (Basel), , DOI:10.3390/polym12020382. 35 Y. Masubuchi, Y. Doi and T. Uneyama, J Phys Chem B, 2022, 126, 2930‚Äí2941. 36 J. D. Ferry, Viscoelastic Properties of Polymers, John Wiley & Sons, Inc., 3rd edn., 1980. 37 T. Uneyama and Y. Masubuchi, Macromolecules, 2021, 54, 1338‚Äí1353. 38 Y. Masubuchi, Y. Doi, T. Ishida and T. Uneyama, Nihon Reoroji Gakkaishi, 2023, 51, 211‚Äí217. 39 T. P. Lodge, Phys Rev Lett, 1999, 83, 3218‚Äí3221. 40 M. Doi and S. F. Edwards, The Theory of Polymer Dynamics, Oxford University Press, Clarendon, 1986. 41 M. Bulacu and E. van der Giessen, J Chem Phys, 2005, 123, 114901. 42 A. E. Likhtman, S. K. Sukumaran and J. Ramirez, Macromolecules, 2007, 40, 6748‚Äí6757. 43 X. Xu, J. Chen and L. An, J Chem Phys, 2015, 142, 074903. 44 K. Z. Takahashi, N. Yamato, K. Yasuoka and Y. Masubuchi, Mol Simul, 2017, 43, 1196‚Äí1201. 45 W. Graessley, Polymeric Liquids & Networks: Dynamics and Rheology, Garland Science, London, 2008. 46 R. Everaers, New J Phys, 1999, 1, 12.1-12.54. 47 R. Everaers, Phys Rev E Stat Nonlin Soft Matter Phys, 2012, 86, 1‚Äí5. 48 Y. Masubuchi, Y. Doi and T. Uneyama, Nihon Reoroji Gakkaishi (Journal of the Society   19 of Rheology, Japan), 2020, 48, 177‚Äí183. 49 Q. Zhou and R. G. Larson, Macromolecules, 2007, 40, 3443‚Äí3449. 50 A. P. Sgouros, G. Megariotis and D. N. Theodorou, Macromolecules, 2017, 50, 4524‚Äí4541. 51 R. Auhl, R. Everaers, G. S. Grest, K. Kremer and S. J. Plimpton, Journal of Chemical Physics, 2003, 119, 12718. 52 S. Sen, S. K. Kumar and P. Keblinski, Macromolecules, 2005, 38, 650‚Äí653. 53 Y. Masubuchi, J Chem Phys, 2015, 143, 224905. 54 Y. Masubuchi and T. Uneyama, Korea Australia Rheology Journal, 2019, 31, 241‚Äí248. 55 Y. Masubuchi, Macromolecules, 2018, 51, 10184‚Äí10193. 56 Y. Masubuchi and T. Uneyama, Soft Matter, 2019, 15, 5109‚Äí5115",cond-mat.soft,Arxiv
41,Controllable Mechanical-domain Energy Accumulators,"Sung Y. Kim, David J. Braun",2022-12-29 17:45:53+00:00,http://arxiv.org/pdf/2212.14389v2,"Springs are efficient in storing and returning elastic potential energy but are unable to hold the energy they store in the absence of an external load. Lockable springs use clutches to hold elastic potential energy in the absence of an external load, but have not yet been widely adopted in applications, partly because clutches introduce design complexity, reduce energy efficiency, and typically do not afford high fidelity control over the energy stored by the spring. Here, we present the design of a novel lockable compression spring that uses a small capstan clutch to passively lock a mechanical spring. The capstan clutch can lock over 1000 N force at any arbitrary deflection, unlock the spring in less than 10 ms with a control force less than 1 % of the maximal spring force, and provide an 80 % energy storage and return efficiency (comparable to a highly efficient electric motor operated at constant nominal speed). By retaining the form factor of a regular spring while providing high-fidelity locking capability even under large spring forces, the proposed design could facilitate the development of energy-efficient spring-based actuators and robots.","Controllable Mechanical-domain Energy Accumulators Sung Y . Kim and David J. Braun Abstract ‚Äî Springs are efÔ¨Åcient in storing and returning elas- tic potential energy but are unable to hold the energy they store in the absence of an external load. Lockable springs use clutches to hold elastic potential energy in the absence of an external load, but have not yet been widely adopted in applications, partly because clutches introduce design complexity, reduce energy efÔ¨Åciency, and typically do not afford high Ô¨Ådelity control over the energy stored by the spring. Here, we present the design of a novel lockable compression spring that uses a small capstan clutch to passively lock a mechanical spring. The capstan clutch can lock over 1000 Nforce at any arbitrary de- Ô¨Çection, unlock the spring in less than 10mswith a control force less than 1%of the maximal spring force, and provide an 80% energy storage and return efÔ¨Åciency (comparable to a highly efÔ¨Åcient electric motor operated at constant nominal speed). By retaining the form factor of a regular spring while providing high-Ô¨Ådelity locking capability even under large spring forces, the proposed design could facilitate the development of energy- efÔ¨Åcient spring-based actuators and robots. I. I NTRODUCTION The use of springs has shown signiÔ¨Åcant energetic beneÔ¨Åts in a range of applications where the ability of a spring to store and release energy can assist motor-driven and human- driven robots. Springs are especially useful in creating energy efÔ¨Åcient oscillatory motion by resonance based actuation [1], [2], [3] as key components of compliant actuators [4], [5], prosthetic devices [6], [7], [8], [9] and human exoskeletons developed for lifting [10], [11], walking [12], [13], and running [14], [15]. In these applications, springs lower the peak power and torque that must be provided by a motor or human. However, the use of regular springs is limited, as they are unable to hold energy in the absence of an external mechanical load. Adding an internal locking mechanism to a regular spring allows the Ô¨Çow of energy through the spring to be controlled [16], and, as such, may alleviate the above- mentioned limitation. Sung Y . Kim and David J. Braun are with the Advanced Robotics and Control Laboratory within the Center for Rehabilitation Engineering and Assistive Technology, Department of Mechanical Engineering, Vanderbilt University, Nashville, TN 37235. This work was supported in part by a Seeding Success Grant provide by Vanderbilt University and a National Science Foundation CAREER Award (Grant No. 2144551). The authors gratefully acknowledge the support. This paper has supplementary downloadable multimedia material avail- able at http://ieeexplore.ieee.org. The video demonstrates the locking of the capstan clutch mechanism. Email: sung.kim@vanderbilt.edu Email: david.braun@vanderbilt.edu ¬© 2023 IEEE. Personal use of this material is permitted. Permission from IEEE must be obtained for all other uses, in any current or future media, including reprinting/republishing this material for advertising or promotional purposes, creating new collective works, for resale or redistribution to servers or lists, or reuse of any copyrighted component of this work in other works.Lockable springs can provide a means of controlling the timing of storage and release of energy in spring-driven robots and compliant actuators. When used in parallel with a motor, lockable springs have been shown to reduce peak torque and energy [17], [18], [19] by providing precisely timed force assistance. When used in parallel with the ankle joint, springs that lock using latches have been shown to reduce the metabolic cost of walking [13] by providing force assistance during push-off. Although all of these applications beneÔ¨Åt from a spring which can store energy, current lockable spring designs face limitations because clutches introduce design complexity, add mass, reduce energy efÔ¨Åciency, and typically do not afford high Ô¨Ådelity control over the energy stored by the spring. In this paper, we present a novel lockable compression spring that uses a small capstan clutch to passively lock a mechanical spring. The spring can store over 50 Jof energy while it enables fast locking and unlocking (10 ms) under high loads ( >1000 N) using small amounts of energy (0 :1J), making it advantageous for autonomous applications. By pro- viding automatic unidirectional locking when compressed, the spring is able to accumulate energy when compressed multiple times. Furthermore, no external electrical power is required to automatically lock the spring, and minimal power is required to unlock the spring. Because the design closely resembles a regular spring in size and form factor, it can replace regular compression springs without requiring compensatory design adaptations. The proposed lockable spring is a mechanical domain energy accumulator that allows sequential compression and efÔ¨Åcient accumulation of elastic potential energy. This kind of spring could be used to design novel compliant actuators [20], [21] that could change their force-deÔ¨Çection behavior without changing the energy stored by the spring, useful in physically demanding tasks ‚Äì for example, when a human or robot must overcome load inertia during weight-lifting [22], [23], [5] or when a human or robot must interact with the environment during running [24], [25], [20] and jumping [26], [27]. Furthermore, lockable springs can also Ô¨Ånd their applications in reducing the energy requirement of industrial pick-and-place robots during gravity compensa- tion, or when the desired motion is periodic but must stop while the end-effector picks up the load. Finally, a lockable spring can provide energetically conservative holding torque without requiring large amounts of electrical power at the motorized joint, and return stored spring potential energy to move the robot with controllable timing at higher actuation efÔ¨Åciency [18]. Lockable springs could Ô¨Ånd their place in next generation actuators and autonomous robots.arXiv:2212.14389v2  [cs.RO]  22 Feb 2023 Compression Extension xFspring  Fspring x Espring ElossLock Flock Compression and Locking x(a) (b) mspring mlockFig. 1. (a) Simple model of a lockable spring. (b) Spring force and elastic potential energy stored during compression and energy loss when locking the length of the spring. II. L OCKABLE SPRINGS The ideal lockable spring should retain the characteristics of a regular spring and provide control over the energy storage and release by locking and unlocking the spring. In order to quantify how a design of a lockable spring meets the characteristics of an ideal spring, we will compare (i) the energy efÔ¨Åciency of the lockable spring compared to the energy efÔ¨Åciency of a regular spring, (ii) the force required to lock or unlock the spring compared to the maximal spring force, and the (iii) mass-energy density of the lockable versus the non-lockable spring. These three quantities are introduced below, and a simple representation of a lockable spring is shown in Fig. 1(a). A. EfÔ¨Åciency of locking While a regular spring is highly efÔ¨Åcient in returning stored potential energy, the added locking function in a lockable spring may introduce energy dissipation and conse- quently compromise the energy efÔ¨Åciency of the spring. In particular, since the lock cannot engage instantaneously or be completely rigid, there will be energy losses associated with the engagement and disengagement of the lock, see Fig. 1(b). In order to quantify the energy loss due to the locking of the spring, we deÔ¨Åne the energy efÔ¨Åciency of the spring: h=1 Eloss Espring1; (1) where Elossis the energy loss incurred by the lock in a work- loop where the spring is compressed to store energy, Espring , prior to the engagement of the lock. In applications, hshould be maximized such that the energy that can be stored and returned by the lockable spring is the same as the energy that can be stored and returned by the spring without the locking mechanism. A lockable spring with efÔ¨Åciency h0:8 would be similar to a 90% efÔ¨Åcient electric motor operated at a constant nominal speed ‚Äì Ô¨Årst to regenerate energy, and then to drive a robot using theregenerated energy with a 0 :90:9100% =81% overall efÔ¨Åciency. B. Locking and unlocking force Ideally, the locking mechanism should easily lock and un- lock the spring even if the spring force is large. Locking and unlocking under high loads may be achieved by providing a mechanical advantage to the locking force with a large lever mechanism [7]. However, the overall size of the locking mechanism should be small relative to the spring in order to reduce weight. Due to these conÔ¨Çicting objectives, creating small locking mechanisms that can lock and unlock large spring forces has been nontrivial [28]. In order to quantify the locking force, we deÔ¨Åne the ratio between the maximal locking force, Flock, and the maximal spring force, Fspring , as a function of the non-dimensional design parameters Pthat deÔ¨Åne the size ‚Äì for example, the maximal width, height, length ‚Äì of the locking mechanism: 0lF=jFlockj jFspringj=f(P): (2) In applications, lFshould be minimized while taking into account the limited size of the locking mechanism. Our target value is lF0:01, such that the force required to lock and unlock the spring is at most 1% of the spring force. C. Mass-energy density The mass-energy density of a spring is the amount of elastic potential energy that can be stored in the spring per unit mass. In general, the addition of a locking mechanism increases the total mass of the spring assembly [28], but does not affect the energy storage capacity of the spring. As a result, the added mass of the locking mechanism decreases the mass-energy density of the spring. The mass-energy density of a lockable spring, Espring=(mspring +mlock), compared to a regular, non- lockable spring, Espring=mspring , depends on the mass of the spring and the combined mass of the spring and locking mechanism: rE=mspring mspring+mlock1: (3) In applications, the mass energy density rEshould be maximized by minimizing the mass of the locking mech- anism. An appropriate target value could be rE0:5, which implies that the added mass of the locking mechanism does not exceed the mass of the spring. While an ideal non-lockable spring would be characterized with h=1,lF=0, and rE=1, a practical lockable spring, satisfying h0:8 (80% efÔ¨Åciency), lF0:01 (1% locking force), and rE0:5 (50% energy density), would enable controllable energy storage and release. We note that the proposed metrics can be used to assess differences between designs created for the same purpose. For example, they can be used to compare two different lock- able springs that use the same spring but different clutches or compare a lockable spring design to a non-lockable spring design if both designs use the same spring. On the other Cable out (a) Capstan  clutch  Compression  spring  (b) Clutch-release  solenoid Spring  housingConstant force  springCable  pulley 483 mm 72 mm Wire  housing  Tensioning spring Length-lockable  cable  Compression  spring Cable  anchor point (c) (d)  Length  Compre spr Cab  anchorCompression Extension  Cable  Constant force spring Cable pulley Cable  Constant  force spring Cable pulley  Compression springCompression  spring Fig. 2. (a)-(b) Lockable compression spring prototype with clutch unit (gray) and compression die spring (green). The spring is always unlocked in compression. The spring can be controlled to lock or unlock in extension. (c) Cross-section of the lockable spring. (d) Working principle of the lockable spring. The small constant force spring (orange) winds the cable pulley when the large spring (green) compresses, while the capstan clutch enables or prevents the rotation of the pulley when the large spring extends. hand, these metrics should not be used to compare lockable spring designs created for different applications, especially if they use different springs. III. D ESIGN OF A LOCKABLE SPRING In this section, we introduce a lockable compression spring where the locking is achieved using a capstan clutch. A pro- totype comprised of two main components ‚Äì a compression spring and a clutch unit ‚Äì is shown in Fig. 2(a)-(b). The CAD model of the prototype is shown in Fig. 2(c). The working principle of the spring is illustrated in Fig. 2(d). In what follows, we describe the design and working principle of the lockable compression spring. A. Prototype The prototype uses a compression die spring as the energy storage element, Fig. 2(a,c). The stiffness of the die spring is 14 :8 N/mm, and the length of the spring is 305 mm. The spring can be compressed 90 mm to provide over 1200 N force while storing over 50 J of elastic potential energy. As the spring is compressed, hollow telescoping shafts, placed within the inner diameter of the spring, prevent buckling of the spring. The key component of the prototype is the clutch unit, which houses a steel pulley, a constant force spring, and a capstan clutch mechanism. These three components are placed co-axially on a keyed shaft supported in the aluminum housing with bearings, see Fig. 2(b,c). The steel pulley of drum diameter 24 mm holds a Ô¨Çexible cable that runs through the center of the spring. A braided Technora cable (1:75 mm wide, 1 :2 mm thick) was chosen due to its superior Ô¨Çexibility, low elongation under load ( <4%), and high strength (2 :7 kN). The cable is anchored at the bottom of the spring, routed up through the telescoping shafts, wrappedaround the pulley, and terminated inside the braking drum of the capstan clutch. Tension in the cable is maintained as the spring is compressed by a constant force torsional spring that applies a torque of 145 mNm to the keyed shaft. The main component of the clutch unit is the capstan clutch mechanism [29]. The mechanism consists of a stain- less steel wire wrapped around an aluminum drum, see Fig. 2(b,c). The 2 :4 mm diameter wire is turned 6 times around the 38 mm diameter drum of length 20 mm. The resulting coils are housed in a 3-D printed guide that encases the drum. One end of the wire is terminated in the housing of the clutch unit, and the other end is terminated in the armature of a solenoid (LEDEX 195202-231). Around the armature is a small spring that pre-tensions the stainless steel wire with a small locking force ( Flock=0:65 N). B. Locking and unlocking force As the spring is compressed, the braided cable that travels through the middle of the spring is wound around a pulley, Fig. 2(c,d). A torsional spring maintains tension in the cable by applying torque about the rotational axis of the pulley, see Fig. 2(d). Any attempt to extend the spring and unwind the cable will reverse the rotation of the pulley in the braking direction. When the clutch is braking, the rotation of the pulley is locked. As a result, neither the cable nor the spring can extend, and the energy stored by the spring is retained. The capstan clutch uses friction to brake in the direction of the wire coil. The braking force is created from the surface contact between the stainless steel wire and the aluminum drum. The friction between the surfaces prevents rotation by tightening the steel wire around the drum when the drum attempts to rotate. Surface contact is maintained by pulling the wire with a small spring placed around the solenoid armature that anchors one end of the wire. The maximal Spring locked Load removed Load cell Linear slides Clutch unit Die spring(a) (b) (B) Locking (A) Compression (D) Extension (C) CompressionFig. 3. Experimental setup: Instron testing apparatus while (a) the spring being compressed and (b) the spring being locked. Work-loop for mechanical energy accumulation. (A-D) The four sub-Ô¨Ågures represent the loading conÔ¨Ågurations of a lockable spring. locking force is deÔ¨Åned by [30]: lF=jFlockj jFspringj=rp rde 2pmld dw<0:001; (4) where rp=12 mm is the radius of the cable pulley, rd= 19 mm is the radius of the aluminum braking drum, ld= 20 mm is the width of the braking drum, dw=2:4 mm is the diameter of the stainless steel wire while m=0:4 is the coefÔ¨Åcient of static friction. Retaining elastic potential energy with the capstan does not require control force or external energy, whereas releasing the energy stored by the spring requires the solenoid to compensate the small locking force provided by the tensioning spring, which is at most Flock=0:65 N for our device. C. Mass-energy density The total mass of the lockable spring is 1 :94 kg. The mass includes the die spring, the controllable capstan clutch unit, and the telescoping shafts that prevent buckling. In comparison, the mass of the spring and the support structures, excluding the capstan clutch, is 1 :32 kg. Thus, the ratio between the mass-energy density of the spring with and without the capstan clutch is: rE=mspring mspring+mlock=0:68: (5) We Ô¨Ånd that the mass-energy density of our prototype is comparable to that of the small non-controllable ratchet and pawl mechanism used in [13] (we calculated rE=0:63 by using 0 :098 kg for the spring mass and 0 :057 kg for the mass of the clutch). We anticipate that, by using weight and material optimiza- tion, we could further increase the mass energy density of the prototype presented in this paper. IV. E NERGY EFFICIENCY In order to quantify the energy efÔ¨Åciency of the lockable spring, an experiment was conducted. The experimental setup is shown in Fig. 3(a,b). The prototype was conÔ¨Ågured in a vertically constrained experimental setup, and an Instron5944 compression testing device (equipped with a 2 kN load- cell) was used to measure the spring force. A. Typical work-loop In a typical work-loop, the spring is compressed by an external load, and the energy stored by the spring upon compression is retained by the automatic activation of the capstan clutch as the spring starts to extend, see Fig. 3(A,B). The compression and locking may be done repeatedly to accumulate a large amount of energy, see Fig. 3(C). Once the desired amount of energy is accumulated in the locked spring, the energy is released by unlocking the capstan clutch and allowing the spring to extend, see Fig. 3(D). B. Experimental procedure An experiment demonstrating the mechanical energy ac- cumulation capability of the lockable spring was per- formed. Through this experiment, the functionality of the locking mechanism was tested, and the efÔ¨Åciency of the lockable spring was assessed. The experiment was based on the compression-locking-extension work-loop shown in Fig. 3(A-D). The details of the experiment are introduced below. During the experiment, the spring was incrementally com- pressed and locked to Ô¨Åve increasing spring deÔ¨Çections, Dl2 f10;30;50;70;90gmm. To achieve these spring deÔ¨Çections, the following sequential loading procedure was performed. First, the initially un-deÔ¨Çected spring was compressed by Dl=10 mm, see Fig. 3(A). Second, the Instron testing apparatus was commanded to remove the compressive load by raising until the locked spring lost contact with the load- cell, see Fig. 3(B). Third, the Instron lowered back onto the already compressed spring and compressed it from the previously locked deÔ¨Çection, Dl=10 mm, until Dl=30 mm, see Fig. 3(C). This loading procedure was repeated until the compressed length reached Dl=90 mm. Subsequently, the capstan clutch was disengaged, and the spring extended to release the energy it stored, see Fig. 3(D). Throughout the entire process, the Instron testing apparatus ensured slow (a) 0200400600800100012001400Spring force (N) Compression  Extension while spring locked  Extension while spring unlocked Experimental procedure: Repeated until the deflection is 90 mm (A) (B) (C) (D)  (b) 010 20 30 40 50 60 70  0 10 20 30 40 50 60 70 80 90  Spring deflection (mm)Energy efficiency (%)  Energy stored (J)  0100 80  60  40  20 Fig. 4. Results of the experiment: (a) Measured force-deÔ¨Çection data. (b) Energy efÔ¨Åciency and the energy stored in the spring. compression and extension of the spring, 0 :5 mm/s in both directions, and the force-deÔ¨Çection data was recorded. C. EfÔ¨Åciency of the lockable spring Figure 4(a) shows the results of the sequential compression test. Figure 4(a) (solid line) represents the force of the spring while it is compressed whereas Fig. 4(a) (dashed line) represents the force of the spring while it extends. Figure 4(b) summarizes the experimental data. Figure 4(b) (solid black line) represents the efÔ¨Åciency of the spring after each compression. Figure 4(b) (solid red line) represents the total energy stored by the spring. Based on the experimental data, the capstan clutch was able to lock the spring force up to 1000 N. Furthermore, the energy stored by the spring was more than 50 J, while the energy efÔ¨Åciency of the lockable spring was: h2[74;84]%: (6) In order to calculate the energy efÔ¨Åciency, the energy loss is computed by taking the area under the rapidly decreasing portions of the force-deÔ¨Çection curve in Fig. 4(a) (dashed lines). The rapidly decreasing portions of the force-deÔ¨Çection curve represent the spring force when the lock is engaged. We Ô¨Ånd that the spring is capable of an average 80% energy storage and return efÔ¨Åciency using the capstan clutch. D. Force, time, and energy required to lock the spring Retaining elastic potential energy in a compressed spring did not require control force or external energy. However,releasing the energy stored by the spring required the solenoid to compensate the locking force provided by the small spring located in the capstan lock. The solenoid control was performed off-board with a spike-and-hold method to instantaneously pull in and hold the armature of the solenoid. The control of the capstan lock was done rapidly: it took less than 10 ms for the brake to fully disengage and release the locked spring providing 1000 N force. A video demonstrating the fast operation of the capstan clutch is provided in the supplementary material. As mentioned previously, the capstan clutch is naturally locked, and, as such, holding over 1000 N spring force and retaining over 50 J of energy required no control force or external energy. The only energy required to operate the lock was to unlock the capstan clutch. The energy to unlock the clutch was the energy required to move the solenoid against the small locking force Flock=0:65 N. Consequently, the energy required to unlock the spring was mainly dependent on the locking speed, instead of the large spring force. In order to lock the capstan clutch in Dt=10 ms, we used p=15V0:6A<10 W peak power; consequently, the energy required to unlock the clutch was DE=pDt<0:1 J. This amount of energy is less than 0 :2% of the energy stored by the spring, see Fig. 4(b) (red line). An alternative to the capstan clutch is the electro-adhesive clutch [31] that has lower power consumption (17mW), lower weight (52 g), but longer response time (20 ms) for a comparable 1000 N holding force. The Ô¨Årst two features are desirable, but electro-adhesive clutches also require a high- voltage source to operate, which does not beneÔ¨Åt autonomous applications [32]. V. C ONCLUSION In this work, we introduced a novel, self-contained design of a compression spring that is continuously lockable and unlockable at high spring forces and exhibits elastic behavior nearly identical to that of a regular compression spring. We showed that the spring is able to efÔ¨Åciently store and hold elastic potential energy at any desired locking position and can return that energy with 20% energy loss. The main limitation of the lockable spring is related to the energy loss due to the non-instantaneous locking, the compliance of the cable limiting the deformation of the spring, and the abrasive wear inevitable to capstan mecha- nisms due to the friction between the components. Designing a capstan clutch with faster self-locking capability and using a cable with high axial stiffness could increase the energy efÔ¨Åciency of lockable springs. Material optimization for the wire rope and the braking drum may mitigate the wear between the components while maintaining the necessary friction coefÔ¨Åcient. The most comparable existing mechanism to the proposed lockable spring is the clutch-able bi-directional spring re- cently introduced in [18], because it is also self-contained and can therefore self-lock the spring to hold energy. How- ever, the clutch-able bi-directional spring and the prototype lockable spring presented in this paper are developed for different applications. Namely, compared to the lockable spring presented in this paper, the clutch-able bi-directional spring can store less than 2% of the energy (less than 1 J), has approximately half the mass energy density ( rE<0:32), and needs at least twice as much time to both lock and unlock the spring (20 ms). Regardless of the design, the ability to retain elastic potential energy in the mechanical domain and release the stored energy at a precisely controlled timing can provide the means for energy efÔ¨Åcient spring-based actuation. For example, lockable springs can be applied in pick-and-place robots, where controlling the timing to release the energy stored by the spring may be useful in performing an array of tasks throughout the workspace of the robot, instead of purely cyclic tasks that align with the elastic behavior of a non-lockable spring [18]. Additionally, the ability to accumulate energy can provide a means to generate more force for physically demanding tasks. Lockable springs may be also used in mechanically adaptive, but energetically- conservative, spring mechanisms [20], [21], developed to help robots and humans perform physically demanding tasks using little to no external energy. ACKNOWLEDGMENT The authors would like to thank Isabel Peppard and John Rector for their assistance during the experimentation. REFERENCES [1] D. J. Braun, M. Howard, and S. Vijayakumar, ‚ÄúExploiting variable stiffness in explosive movement tasks,‚Äù in Proceedings of Robotics: Science and Systems , (Los Angeles, CA, USA), June-July 2011. [2] C. W. Mathews and D. J. Braun, ‚ÄúParallel variable stiffness actuators,‚Äù inInternational Conference on Intelligent Robots and Systems (IROS) , (Prague, Czech Republic), pp. 8225‚Äì8231, IEEE, September 2021. [3] R. Balderas Hill, S. Briot, A. Chriette, and P. Martinet, ‚ÄúPerforming energy-efÔ¨Åcient pick-and-place motions for high-speed robots by using variable stiffness springs,‚Äù Journal of Mechanisms and Robotics , vol. 14, no. 5, p. 051004, 2022. [4] D. J. Braun, V . Chalvet, and A. Dahiya, ‚ÄúPositive-negative stiffness actuators,‚Äù IEEE Transactions on Robotics , vol. 35, no. 1, pp. 162‚Äì 173, 2019. [5] D. J. Braun, V . Chalvet, C. T. Hao, S. S. Apte, and N. Hogan, ‚ÄúVariable stiffness spring actuators for low energy cost human augmentation,‚Äù IEEE Transactions on Robotics , pp. 1435‚Äì1445, 2019. [6] S. H. Collins and A. D. Kuo, ‚ÄúControlled energy storage and return prosthesis reduces metabolic cost of walking,‚Äù Proc. on ISB XXth Congress and the American Society of Biomechanics Annual Meeting , vol. 600, p. 800, August 2005. [7] E. J. Rouse, L. M. Mooney, and H. M. Herr, ‚ÄúClutchable series- elastic actuator: Implications for prosthetic knee design,‚Äù International Journal of Robotics Research , vol. 33, no. 13, pp. 1611‚Äì1625, 2014. [8] M. Grimmer, M. Holgate, R. Holgate, A. Boehler, J. Ward, K. Hollan- der, T. Sugar, and A. Seyfarth, ‚ÄúA powered prosthetic ankle joint for walking and running,‚Äù Biomedical engineering online , vol. 15, no. 3, pp. 37‚Äì52, 2016. [9] F. Gao, Y . Liu, and W.-H. Liao, ‚ÄúDesign of powered ankle-foot prosthesis with nonlinear parallel spring mechanism,‚Äù Journal of Mechanical Design , vol. 140, no. 5, p. 055001, 2018. [10] E. P. Lamers, A. J. Yang, and K. E. Zelik, ‚ÄúFeasibility of a biomechanically-assistive garment to reduce low back loading during leaning and lifting,‚Äù IEEE Transactions on Biomedical Engineering , vol. 65, no. 8, pp. 1674‚Äì1680, 2018. [11] M. M. Alemi, J. Geissinger, A. A. Simon, S. E. Chang, and A. T. Asbeck, ‚ÄúA passive exoskeleton reduces peak and mean emg during symmetric and asymmetric lifting,‚Äù Journal of Electromyography and Kinesiology , vol. 47, pp. 25‚Äì34, 2019.[12] G. S. Sawicki, C. L. Lewis, and D. P. Ferris, ‚ÄúIt pays to have a spring in your step,‚Äù Exercise and Sport Sciences Reviews , vol. 37, no. 3, pp. 130‚Äì138, 2009. [13] S. H. Collins, M. Bruce Wiggin, and G. S. Sawicki, ‚ÄúReducing the energy cost of human walking using an unpowered exoskeleton,‚Äù Nature , vol. 522, no. 7555, pp. 212‚Äì215, 2015. [14] R. Nasiri, A. Ahmadi, and M. N. Ahmadabadi, ‚ÄúReducing the energy cost of human running using an unpowered exoskeleton,‚Äù IEEE Trans- actions on Neural Systems and Rehabilitation Engineering , vol. 26, no. 10, pp. 2026‚Äì2032, 2018. [15] C. S. Simpson, C. G. Welker, S. D. Uhlrich, S. M. Sketch, R. W. Jackson, S. L. Delp, S. H. Collins, J. C. Selinger, and E. W. Hawkes, ‚ÄúConnecting the legs with a spring improves human running economy,‚Äù Journal of Experimental Biology , vol. 222, no. 17, p. jeb202895, 2019. [16] M. Plooij, W. Wolfslag, and M. Wisse, ‚ÄúClutched elastic actuators,‚Äù IEEE/ASME Transactions on Mechatronics , vol. 22, no. 2, pp. 739‚Äì 750, 2017. [17] D. F. H ¬®auÔ¨Çe, M. Taylor, S. Schmitt, and H. Geyer, ‚ÄúA clutched parallel elastic actuator concept: Towards energy efÔ¨Åcient powered legs in prosthetics and robotics,‚Äù in International Conference on Biomedical Robotics and Biomechatronics (BioRob) , (Rome, Italy), pp. 1614‚Äì 1619, IEEE, June 2012. [18] M. Plooij, M. Wisse, and H. Vallery, ‚ÄúReducing the energy consump- tion of robots using the bidirectional clutched parallel elastic actuator,‚Äù IEEE Transactions on Robotics , vol. 32, no. 6, pp. 1512‚Äì1523, 2016. [19] F. Heremans, S. Vijayakumar, M. Bouri, B. Dehez, and R. Ronsse, ‚ÄúBio-inspired design and validation of the efÔ¨Åcient lockable spring ankle (elsa) prosthesis,‚Äù in International Conference on Rehabilitation Robotics , (Toronto, ON, Canada), pp. 411‚Äì416, IEEE, June 2019. [20] T. Zhang and D. J. Braun, ‚ÄúHuman driven compliant transmission mechanism,‚Äù in International Conference on Robotics and Automation (ICRA) , (Xi‚Äôan, China), pp. 7094‚Äì7099, IEEE, June 2021. [21] S. Y . Kim and D. J. Braun, ‚ÄúNovel variable stiffness spring mechanism: Modulating stiffness independent of the energy stored by the spring,‚Äù inInternational Conference on Intelligent Robots and Systems (IROS) , (Prague, Czech Republic), pp. 8232‚Äì8237, IEEE, September 2021. [22] M. De Looze, H. Toussaint, J. Van Dieen, and H. Kemper, ‚ÄúJoint moments and muscle activity in the lower extremities and lower back in lifting and lowering tasks,‚Äù Journal of Biomechanics , vol. 26, no. 9, pp. 1067‚Äì1076, 1993. [23] S. Toxiri, T. Verstraten, A. Calanca, D. G. Caldwell, and J. Ortiz, ‚ÄúUsing parallel elasticity in back-support exoskeletons: a study on en- ergy consumption during industrial lifting tasks,‚Äù in Wearable Robotics Association Conference , (Scottsdale, AZ, USA), pp. 1‚Äì6, IEEE, March 2019. [24] J. P. Hunter, R. N. Marshall, and P. J. McNair, ‚ÄúRelationships between ground reaction force impulse and kinematics of sprint-running accel- eration,‚Äù Journal of Applied Biomechanics , vol. 21, no. 1, pp. 31‚Äì43, 2005. [25] A. Sutrisno and D. J. Braun, ‚ÄúHow to run 50% faster without external energy,‚Äù Science Advances , vol. 6, no. 13, pp. 1‚Äì11, 2020. [26] M. F. Bobbert, K. G. Gerritsen, M. C. Litjens, and A. J. Van Soest, ‚ÄúWhy is countermovement jump height greater than squat jump height?,‚Äù Medicine and Science in Sports and Exercise , vol. 28, no. 11, pp. 1402‚Äì1412, 1996. [27] A. Sutrisno and D. J. Braun, ‚ÄúEnhancing mobility with quasi-passive variable stiffness exoskeletons,‚Äù IEEE Transactions on Neural Systems and Rehabilitation Engineering , vol. 27, no. 3, pp. 487‚Äì496, 2019. [28] M. Plooij, G. Mathijssen, P. Cherelle, D. Lefeber, and B. Vanderborght, ‚ÄúLock your robot: A review of locking devices in robotics,‚Äù IEEE Robotics and Automation Magazine , vol. 22, no. 1, pp. 106‚Äì117, 2015. [29] H. In, S. Kang, and K.-J. Cho, ‚ÄúCapstan brake: Passive brake for tendon-driven mechanism,‚Äù in International Conference on Intelligent Robots and Systems , (Vilamoura, Algarve, Portugal), pp. 2301‚Äì2306, IEEE, October 2012. [30] I. Stuart, ‚ÄúCapstan equation for strings with rigidity,‚Äù British Journal of Applied Physics , vol. 12, no. 10, p. 559, 1961. [31] S. Diller, C. Majidi, and S. H. Collins, ‚ÄúA lightweight, low-power electroadhesive clutch and spring for exoskeleton actuation,‚Äù in Inter- national Conference on Robotics and Automation (ICRA) , (Stockholm, Sweden), pp. 682‚Äì689, IEEE, May 2016. [32] S. B. Diller, S. H. Collins, and C. Majidi, ‚ÄúThe effects of elec- troadhesive clutch design parameters on performance characteristics,‚Äù Journal of Intelligent Material Systems and Structures , vol. 29, no. 19, pp. 3804‚Äì3828, 2018",cs.RO,Arxiv
42,Design of a Variable Stiffness Spring with Human-Selectable Stiffness,"Chase W. Mathews, David J. Braun",2023-02-27 01:55:31+00:00,http://arxiv.org/pdf/2302.13471v1,"Springs are commonly used in wearable robotic devices to provide assistive joint torque without the need for motors and batteries. However, different tasks (such as walking or running) and different users (such as athletes with strong legs or the elderly with weak legs) necessitate different assistive joint torques, and therefore, springs with different stiffness. Variable stiffness springs are a special class of springs which can exert more or less torque upon the same deflection, provided that the user is able to change the stiffness of the spring. In this paper, we present a novel variable stiffness spring design in which the user can select a preferred spring stiffness similar to switching gears on a bicycle. Using a leg-swing experiment, we demonstrate that the user can increment and decrement spring stiffness in a large range to effectively assist the hip joint during leg oscillations. Variable stiffness springs with human-selectable stiffness could be key components of wearable devices which augment locomotion tasks, such as walking, running, and swimming.","Design of a Variable Stiffness Spring with Human-Selectable Stiffness Chase W. Mathews and David J. Braun Abstract ‚Äî Springs are commonly used in wearable robotic devices to provide assistive joint torque without the need for motors and batteries. However, different tasks (such as walking or running) and different users (such as athletes with strong legs or the elderly with weak legs) necessitate different assistive joint torques, and therefore, springs with different stiffness. Variable stiffness springs are a special class of springs which can exert more or less torque upon the same deÔ¨Çection, provided that the user is able to change the stiffness of the spring. In this paper, we present a novel variable stiffness spring design in which the user can select a preferred spring stiffness similar to switching gears on a bicycle. Using a leg-swing experiment, we demonstrate that the user can increment and decrement spring stiffness in a large range to effectively assist the hip joint during leg oscillations. Variable stiffness springs with human- selectable stiffness could be key components of wearable devices which augment locomotion tasks, such as walking, running, and swimming. I. I NTRODUCTION Mechanical springs are commonly used in wearable de- vices [1] to provide assistive torque without the use of motors and batteries. Prior works have shown that unpowered spring- driven exoskeletons can reduce the metabolic cost of walking by 7% [2] and running by 8% [3]; in both cases, a Ô¨Åxed stiffness spring was optimized across users. Alternatively, a variable stiffness spring with selectable stiffness could enable users to choose the most optimal spring stiffness for the task, similar to how a bicycle derailleur enables cyclists to select the most optimal gear ratio independent of the cyclist and the cycling speed. Variable stiffness springs have been previously used in lower limb prostheses [4], [5] and orthoses [6], [7] to help humans with motions such as walking, running, and stair- ascent. Many of the previously designed variable stiffness springs [8]‚Äì[12] ensure that a small force can be used to adjust the spring stiffness when the spring is unloaded [13]. However, for oscillatory motions such as the swing of the hip during walking, running, or swimming, the spring may only be at equilibrium for a fraction of a second during each cycle of the motion. Consequently, if the human aims to effortlessly change stiffness during an oscillatory task, then the human must precisely apply the force to change stiffness when the spring is not deÔ¨Çected at each cycle. C. W. Mathews and D. J. Braun are with the Advanced Robotics and Control Laboratory within the Center for Rehabilitation Engineering and Assistive Technology, Department of Mechanical Engineering, Vanderbilt University, Nashville, Tennessee 37235, USA. This work was supported in part by a Seeding Success Grant provide by Vanderbilt University and a National Science Foundation CAREER Award (Grant No. 2144551). The authors gratefully acknowledge the support. E-mail: chase.w.mathews@vanderbilt.edu E-mail: david.braun@vanderbilt.edu Fig. 1. Variable stiffness spring with human-selectable stiffness. Using a variable stiffness robot actuator, we have previ- ously shown that a small but fast motor can change spring stiffness during oscillatory motion, once each motion cycle, by applying precisely timed forces [12]. Replacing the motor with a human limb and a bicycle hand shifter is impractical because the user would be required to operate the hand shifter at precise times. However, by placing a spring in series between the hand shifter and the mechanism which adjusts spring stiffness, the requirement for precisely timed movements can be eliminated. We use this idea of replacing a weak but fast motor with a human Ô¨Ånger in our design of a variable stiffness spring with human-selectable stiffness. In this paper, we propose the design of a variable stiffness mechanism which enables the human to change the stiffness of the spring in the same way the derailleur enables cyclists to change the gear ratio of the bicycle. The device consists of a 3D printed composite spiral spring and a variable stiffness mechanism. The stiffness of the spring is changed by a series-spring actuated Bowden cable hand shifter, and a unique self-locking mechanism implemented with a linear ratchet and pawl. We show that the device allows the user to effectively change the assistance provided to the user in a leg swing experiment, where the hip joint of the human is augmented with the variable stiffness spring. We further demonstrate that the user can increment and decrement the spring stiffness using a bicycle hand shifter, the same way a cyclist would down-shift or up-shift the gear ratio to adapt to different terrains and speeds while riding the bicycle. II. M ODEL The model of the human-driven variable stiffness spring joint is shown in Fig. 2a. The joint is composed of a spring and a mechanism that changes the stiffness of the spring. The free body diagram of the model is shown in Fig. 2b. Below we present the model of the mechanism.arXiv:2302.13471v1  [cs.RO]  27 Feb 2023 xx (c) (d)LoadŒ∏ 1 dk (x) 2   dx Œ∏ fk(x)Œ∏LoadŒ∏ F VSMVSM (a) (b) fOne-way lock  k(x) /g3661 Loadx Œ∏l dPivot point  Fig. 2. (a) Model of the variable stiffness spring with human-selectable stiffness, consisting of the hand shifter, series spring, and the self-locking variable stiffness mechanism. The hand shifter enables the human to extend the series spring, which changes the position of the pivot point x. (b) Schematic representation of the variable stiffness spring. The torque-angle relation of the variable stiffness spring is deÔ¨Åned by (see Fig. 2b): t=t(x;q)k(x)q; (1) where tis the joint torque, qis the joint angle, kis the joint stiffness, while xdenotes the position of the pivot point. The joint stiffness k(x)depends on the design of the mechanism. The stiffness of the torsional spring introduced in [12], and shown in Fig. 2a, is given by the following relation: k(x) =¬∂t ¬∂q q=0kSx l+d x2 ; (2) where kSis the constant stiffness of the torsional spring attached to the joint, dis the length of the linkage attached to the shaft, while lis the length of the linkage attached to the spring. According to (2), the stiffness of the joint is a monotonically increasing function of x. Changing the position of the pivot point changes the mechanical advantage of the spring over the joint. The equation governing the motion of the pivot point is given by: m¬®x=f F(q;x) =f 1 2dk(x) dxq2; (3)where mis the mass of the stiffness modulating mechanism, fis the external force applied to modulate joint stiffness, while Fis the reaction force of the spring aiming to move the pivot point by back-driving the stiffness modulating mechanism (see Fig. 2b). The latter effect appears because the spring always tends to move the pivot-point to the position associated with the lowest joint stiffness. In order to prevent the reaction force of the spring from changing the position of the pivot-point, we use a spring- loaded linear ratchet-pawl mechanism (Fig. 2a). The mecha- nism locks when the force required to move the pivot point fexceeds the threshold locking force f0of the spring loaded pawl; it is unlocked otherwise. When the ratchet-pawl mechanism is locked, the reaction force of the joint spring cannot move the pivot point in the direction that lowers the joint stiffness, 0<f0<f)Àôx0; (4) but the externally applied force fcan be used to move the pivot point and increase the joint stiffness, given that the externally applied force is larger than the reaction force of the spring, f>F(q;x)in (3). When the ratchet-pawl mechanism is unlocked 0 <f<f0, the reaction force of the spring can be used to lower the joint stiffness under the following condition 0 <f<f0<F(q;x) in (3). This condition will be satisÔ¨Åed when the spring is considerably deÔ¨Çected, as in that case, the reaction force of the spring is much larger than the threshold force f0used to lock the ratchet-pawl mechanism. III. W ORKING PRINCIPLE We will now examine the physical requirements to change the joint stiffness using small forces. Let us consider a variable stiffness joint placed at the human hip and attached to the leg. Let us further assume that the leg swings back and forth with frequency w, and amplitude qmax, in walking or running, q=qmaxsinwt: (5) Now, to increase the joint stiffness, we must apply an external force fthat is larger than the spring force opposing the motion of the pivot point, f>F(q;x) =1 2dk(x) dxq2)¬®x>0: (6) This condition can be satisÔ¨Åed by an arbitrarily small force f, when the spring is un-deÔ¨Çected, q=0, or a small force when the spring is slightly deÔ¨Çected, q0. Now, let us assume that the force provided by the human is limited, 0ffmax; (7) and using (5) and (6), let us estimate the time available to change the stiffness of the joint using the maximal force that can be provided by the human Dt T<2 pr fmax Fmax; (8) Spring PawlSeries springShaft link Intermediate linkBowden cable   (to shifter) Linear ratchetOutput Shaft Upshift (increment stiffness) Downshift (decrement stiffness)Bowden cableIndex indicator(a) (c) (b) Pawl-releasespringMounting Plate Section view (b)Fig. 3. Design of the spring mechanism. (a) Isometric view. (b) Section view. (c) Bowden cable and the hand shifter. The size of the mechanism is 150mm x 130mm x 77mm. The mass of the mechanism is 1.13kg. The combined mass of the hand shifter and the Bowden cable is 0.3kg. where T=2p=wis the period of leg oscillations. Relation (8) suggests that if the maximal force to change the spring stiffness fmaxis small compared to the maximal reaction force of the spring Fmax, then the time window in which the joint stiffness can be changed Dtis also small: fmax Fmax1)Dt T1: (9) Therefore, the timing of the external force fmust be precise in order to increase the spring stiffness with a small force. The requirement for precise timing is circumvented in our device by using a spring between the hand shifter and the pivot point, see Fig. 2 (series spring). In a typical work cycle, the human would actuate the hand shifter once or multiple times in order to reduce the length of the Bowden cable, and consequently extend the series spring of stiffness ks, until the maximum force is reached, f=ksDxfmax: (10) If the ratchet-pawl mechanism is unlocked, then extending the spring will move the pivot point and increase the joint stiffness. If the ratchet-pawl mechanism is locked, extending the spring will increase the force in the series spring but will not move the pivot point or increase the joint stiffness. Since the series spring can be extended while the ratchet- pawl mechanism is locked (6), the human can use the hand shifter over nearly the whole period of oscillations T, except perhaps the short time window Dtwhen the ratchet-pawl mechanism unlocks and the series spring moves the pivot point to increase the joint stiffness T Dt T1: (11) Consequently, the time available for the human to apply force is not limited to Dt, and is largely independent of the force applied by the human. In summary, the series spring removes the precise timing requirement to change the joint stiffness using small forces. The series spring also enables the user to extend the spring over multiple oscillation cycles, which further mitigates the precise timing required to change the joint stiffness without the series spring (9), or the time available to change stiffness during a single cycle with the series spring (11).IV. P ROTOTYPE In this section, we show the design of the human-selectable variable stiffness spring. Figure 3 shows the main compo- nents of the mechanism; (i) the torsional variable stiffness spring, (ii) the hand shifter, and (iii) the self-locking pivot point mechanism. In the following we describe each of these components in detail. A. The torsional variable stiffness spring We use a 3D printed carbon Ô¨Åber reinforced spiral torsion spring (Fig. 3 green spring) due to customizability and large volumetric energy density. The spring was fabricated using Onyx (nylon Ô¨Ålled with chopped carbon Ô¨Åber) with half of the layers reinfored with continuous strands of carbon Ô¨Åber. The carbon Ô¨Åber spring has an estimated stiffness of kS24 Nm/rad. We use the adjutable pivot-point linkage mechanism presented in [12] (Fig. 3 yellow) to vary the mechanical advantage of the spiral spring over the joint. We performed a static deÔ¨Çection experiment to estimate the torque-deÔ¨Çection behavior of the variable stiffness joint. During the experiment, the spring was deÔ¨Çected at six different stiffness conÔ¨Ågurations. The measured torque-angle data is shown in Fig. 4. Joint Angle (deg)Joint Torque (Nm)1 3 5 7 9 11 Shifter Index -40 -30 -20 -10 0 10 20 30 40-40-30-20-10010203040 Fig. 4. Torque-angle characteristics of the variable stiffness spring. (i) Increment (ii) Decrement Œîx (a) Self-locking adjustable pivot point mechanism (b) Conceptual diagram Œîx kP kskP ks Bowden cable Pawl Linear ratchetBowden cableParallel Spring Series spring Fig. 5. (a) Prototype showing the self-locking pivot point mechanism. (b) Working principle of the self-locking pivot point mechanism; (i) the conÔ¨Åguration for increasing stiffness, and (ii) the conÔ¨Åguration for decreasing stiffness. The supplementary video shows the operation of the mechanism. The joint is characterized with the following torsional stiffness values, k2[6;70]Nm/rad : (12) This stiffness enables the spring to provide [3;36]Nm as- sistive joint torque at 30 deg joint rotation, which amounts to around 35% of the average human hip torque for a 75 kg person during walking at normal speeds (1 :6 m/s) [14]. Finally, Fig. 4 also shows that the hand shifter and the locking mechanism can be used to change the stiffness and hold the torque provided by the torsional spring. B. The hand shifter The hand shifter is shown in Fig. 3c. The hand shifter has two levers that, when pressed, either extend or retract the Bowden cable. The Bowden cable is a steel cable routed inside a Ô¨Çexible housing. In the bicycle, the Bowden cable shifts the chain between different sets of sprockets. Bowden cables have been extensively used in wearable devices to transfer force [15]‚Äì[17]. In our device, the two ends of the Bowden cable are fastened to the hand shifter and the series spring, while the series spring is connected to the pawl which can rotate about the pivot point, as shown in Fig. 3a. By changing the length of the Bowden cable, the human generates a force and a moment about the pivot point. The moment generated about the pivot point disengages the pawl from the ratchet, such that the force can move the pivot point. In this way, using the hand shifter and the Bowden cable, the human can change the stiffness of the joint. C. Self-locking pivot point In our device, the pivot point self-locks through the use of a linear ratchet-pawl mechanism, shown in Fig. 5. The mechanism which changes stiffness consists of a linear ratchet rack, a pawl, a series spring between the pawl and the Bowden cable, and a parallel spring between the pawl and the pivot-point housing. The pawl engages with the ratchet to prevent the motion of the pivot point when the large spiral spring is loaded. The series and parallel springs of stiffnessksandkp(see Fig. 5) control the engagement of the pawl to enable the user to change the stiffness of the joint. To increase stiffness, the user generates a force on the Bowden cable, which deÔ¨Çects the series spring. When the large spiral spring is un-deÔ¨Çected, the series spring pulls the pawl and consequently translates the pivot point (see Fig. 5b-i). The stiffness of the series spring ks6000 N/m is chosen small enough such that the user can extend it, but large enough such that it can move the pivot point when the large spiral spring is unloaded. To decrease stiffness, the user extends the Bowden cable, which causes the cable to slack. When the cable slacks, the series spring becomes unloaded, which allows the parallel spring to disengage the pawl. In this case, the force imposed by the large deÔ¨Çected spiral spring can move the pivot point, to reduce the joint stiffness, until the slack of the Bowden cable is removed and the pawl is re-engaged (Fig. 5b-ii). The stiffness of the parallel spring kp485 N/m has been chosen large enough to disengage the pawl around zero joint deÔ¨Çection and small enough to allow the series spring to re-engage the pawl upon a small joint deÔ¨Çection. V. E VALUATION In this section, we present a leg swing experiment where the human-selectable variable stiffness spring joint (shown in Fig. 1) is used to augment the human hip joint (shown in Fig. 6). The purpose of the experiment is to validate the working principle of the device which enables the human to quickly change joint stiffness over a large range during continuous oscillations. In what follows, we (i) present the experimental setup, (ii) describe the experimental protocol, and (iii) summarize the results of the experiment. A. Setup To verify the function of the device, we designed a desk- mounted setup where the variable stiffness spring joint can be attached to the leg of a human, as shown in Fig. 6a. The leg of the subject was fastened to the spring using a 3D printed clamp, while the clamp was connected to the -20020 Joint Angle (deg)  020 40 Pivot Point Position (mm)  0 5 10 15 20 25 30 35 40  Time (s) -20020 Joint Torque (Nm) Shifter Index 1034 2 1 Shifter Index 1(b)(ii) (i)  (c) (e)(d) 12 1 4 3 Œîx  Œîx   Œîx Stiffness Increment Stiffness Decrement Joint stiffness increased Spring extended Spring not extended Joint stiffness decreased(a) Hand shifter Lever armRotary joint Prismatic joint Leg clampVariable stiffness spring  Minimum StiffnessMaximum StiffnessFig. 6. Experiment. (a) Setup. (b) Snapshots of the mechanism while (i) stiffness is incremented and (ii) stiffness is decremented. (c) Angular position of the leg. (d) Position of the pivot point. (e) Estimated torque on the joint. joint using a lever arm. The lever arm features a rotary joint and a prismatic joint such that the leg is not constrained to move in the lateral and longitudinal directions while being attached to the joint. The hip angle qwas captured using a rotary magnetic encoder. The position of the pivot point xwas measured using a linear magnetic encoder. The torque provided by the variable stiffness joint was estimated using the the measured joint angle q, the measured pivot point position x, and the experimental torque-deÔ¨Çection curves shown in Fig. 4. B. Protocol We performed a simple exploratory experiment where the subject was asked to (i) swing one leg continuously back and forth at a comfortable frequency and a relatively constant amplitude of 20 degrees, (ii) fully increment the bicycle shifter until the maximum stiffness has been reached, and subsequently, (iii) fully decrement the shifter until the minimum stiffness was reached. The protocol was approved by the Institutional Review Board of Vanderbilt University Medical Center (N220192). C. Results The experimental data is shown in Fig. 6. The mechanism is shown in Fig. 6b while the joint stiffness was incremented (i) and decremented (ii). The angle of the hip joint is shownin Fig. 6c. The position of the pivot point is shown in Fig. 6d. The joint torque is shown in Fig. 6e. Figure 6b shows snapshots of the device during the experiment with the corresponding timestamps labeled in Fig. 6c. The left snapshot shows an example of a stiffness increment where the series spring is Ô¨Årst extended while the leg is away from equilibrium; in this case, the mechanism is locked, and subsequently, the series spring pulls the pivot point to a higher stiffness conÔ¨Åguration when the leg is around equilibrium (Fig. 6b-i). The right snapshot shows an example of a stiffness decrement where the Bowden cable is slacked and the parallel spring lifts the pawl until the pivot point moves to a lower stiffness conÔ¨Åguation and the slack of the Bowden cable is removed (Fig. 6b-ii). Figure 6c shows the joint angle during the experiment. We observe that the subject was able to generate continuous oscillatory leg motion such that the amplitude of the joint angle was around 20 degrees. Figure 6d shows the position of the pivot point, and there- fore the joint stiffness, during the experiment. We observe that the stiffness was increased from the minimum value (shifter index 1, where k(x)6 Nm/rad) to the maximum value (shifter index 10, where k(x)70 Nm/rad) during the oscillatory motion. We note that position of the pivot point oscillates approximately 2 mm for each stiffness conÔ¨Åguation. This oscillation was caused by the return spring which by default disangages the pawl in order to decrement stiffness as described in Section IV-C. The oscillations did not cause detrimental effects during the experiment. Figure 6e shows the estimated joint torque of the device during the experiment. We observe that, as the user increased the joint stiffness of the spring, the torque of the spring was also increased from 1 Nm to around 20 Nm. In summary, the experiment demonstrated that, (i) the locking mechanism was able to successfully hold a given joint stiffness conÔ¨Åguration as the device generated 1   20 Nm joint torque, and (ii) the user was able to effectively use the hand shifter to increment and decrement joint stiff- ness in a relatively large range of 6  70 Nm/rad, during continuous swings. The results show that the proposed device enables the human to adapt joint stiffness using an intuitive interface provided by the hand shifter of the bicycle. VI. C ONCLUSION In this paper, we presented a novel human-adjustable variable stiffness joint in which the user can select different joint stiffness in the same way cyclists select different gear ratios on a bicycle. We show that the device enables the human to use small and non-precisely timed forces to change joint stiffness, rather than requiring the user to provide large forces, or small but precisely timed forces. We verify the ability of the human-adjustable variable stiffness joint to maintain and change stiffness during continuous oscillatory motion. Customization of robot exoskeleton assistance for different users, tasks, and speeds has been shown to reduce metabolic demand in walking and running [1], [18], [19], and may be useful for other everyday tasks. Individualized joint stiffness values could provide beneÔ¨Åts to users across different speeds of walking [20]. Individualized joint stiffness values may also help improve joint motion patterns and correct a reduced joint motion range of users with impairment [21]. Finally, individualized joint stiffness values may be used to better augment users performing physically demanding tasks, such as lifting, jumping [22], running [23], or walking with a heavy load [24]. Human-adjustable variable stiffness joints can be key components of mechanically adaptive robot exoskeletons where different users can choose between different levels of assistance for different locomotion tasks. REFERENCES [1] G. S. Sawicki, O. N. Beck, I. Kang, and A. J. Young, ‚ÄúThe exoskeleton expansion: improving walking and running economy,‚Äù Journal of NeuroEngineering and Rehabilitation , vol. 17, no. 1, p. 25, 2020. [2] S. H. Collins, M. Bruce Wiggin, and G. S. Sawicki, ‚ÄúReducing the energy cost of human walking using an unpowered exoskeleton,‚Äù Nature , vol. 522, no. 7555, pp. 212‚Äì215, 2015. [3] R. Nasiri, A. Ahmadi, and M. N. Ahmadabadi, ‚ÄúReducing the energy cost of human running using an unpowered exoskeleton,‚Äù IEEE Trans- actions on Neural Systems and Rehabilitation Engineering , vol. 26, no. 10, pp. 2026‚Äì2032, 2018. [4] M. Tran, L. Gabert, M. Cempini, and T. Lenzi, ‚ÄúA lightweight, efÔ¨Åcient fully powered knee prosthesis with actively variable transmission,‚Äù IEEE Robotics and Automation Letters , vol. 4, no. 2, pp. 1186‚Äì1193, 2019.[5] M. K. Shepherd and E. J. Rouse, ‚ÄúDesign of a quasi-passive ankle-foot prosthesis with biomimetic, variable stiffness,‚Äù in IEEE International Conference on Robotics and Automation , (Singapore), pp. 6672‚Äì6678, May 2017. [6] B. Weinberg, J. Nikitczuk, S. Patel, B. Patritti, C. Mavroidis, P. Bonato, and P. Canavan, ‚ÄúDesign, control and human testing of an active knee rehabilitation orthotic device,‚Äù Proceedings - IEEE International Conference on Robotics and Automation , no. April, pp. 4126‚Äì4133, 2007. [7] C. M. Thalman, J. Hsu, L. Snyder, and P. Polygerinos, ‚ÄúDesign of a soft ankle-foot orthosis exosuit for foot drop assistance,‚Äù Proceed- ings - IEEE International Conference on Robotics and Automation , vol. 2019-May, pp. 8436‚Äì8442, 2019. [8] A. Jafari, N. G. Tsagarakis, I. Sardellitti, and D. G. Caldwell, ‚ÄúA new actuator with adjustable stiffness based on a variable ratio lever mechanism,‚Äù IEEE/ASME Transactions on Mechatronics , vol. 19, no. 1, pp. 55‚Äì63, 2014. [9] H. F. Lau, A. Sutrisno, T. H. Chong, and D. J. Braun, ‚ÄúStiffness modu- lator: A novel actuator for human augmentation,‚Äù Proceedings - IEEE International Conference on Robotics and Automation , pp. 7742‚Äì7748, 2018. [10] D. J. Braun, V . Chalvet, and A. Dahiya, ‚ÄúPositive-negative stiffness actuators,‚Äù IEEE Transactions on Robotics , vol. 35, no. 1, pp. 162‚Äì 173, 2019. [11] D. J. Braun, V . Chalvet, T.-H. Chong, S. S. Apte, and N. Hogan, ‚ÄúVariable stiffness spring actuators for low-energy-cost human aug- mentation,‚Äù IEEE Transactions on Robotics , vol. 35, no. 6, pp. 1435‚Äì 1449, 2019. [12] C. W. Mathews and D. J. Braun, ‚ÄúParallel variable stiffness actuators,‚Äù inIEEE/RSJ International Conference on Intelligent Robots and Systems , (Prague, Czech Republic), pp. 8225‚Äì8231, September 2021. [13] V . Chalvet and D. J. Braun, ‚ÄúCriterion for the design of low- power variable stiffness mechanisms,‚Äù IEEE Transactions on Robotics , vol. 33, no. 4, pp. 1002‚Äì1010, 2017. [14] M. Grimmer and A. Seyfarth, ‚ÄúMimicking human-like leg function in prosthetic limbs,‚Äù in Neuro-Robotics: From Brain Machine Interfaces to Rehabilitation Robotics (P. Artemiadis, ed.), Trends in Augmen- tation of Human Performance, pp. 105‚Äì155, Dordrecht: Springer Netherlands, 2014. [15] Q. Wu, X. Wang, F. Du, and X. Zhang, ‚ÄúDesign and control of a powered hip exoskeleton for walking assistance,‚Äù International Journal of Advanced Robotic Systems , vol. 12, no. 3, p. 18, 2015. [16] L. Cappello, D. K. Binh, S.-C. Yen, and L. Masia, ‚ÄúDesign and preliminary characterization of a soft wearable exoskeleton for upper limb,‚Äù in 2016 6th IEEE International Conference on Biomedical Robotics and Biomechatronics (BioRob) , (Singapore), pp. 623‚Äì630, June 2016. [17] V . L. Chiu, M. Raitor, and S. H. Collins, ‚ÄúDesign of a hip exoskeleton with actuation in frontal and sagittal planes,‚Äù IEEE Transactions on Medical Robotics and Bionics , vol. 3, no. 3, pp. 773‚Äì782, 2021. [18] M. K. Shepherd, D. D. Molinaro, G. S. Sawicki, and A. J. Young, ‚ÄúDeep learning enables exoboot control to augment variable-speed walking,‚Äù IEEE Robotics and Automation Letters , vol. 7, no. 2, pp. 3571‚Äì3577, 2022. [19] K. A. Ingraham, C. D. Remy, and E. J. Rouse, ‚ÄúThe role of user preference in the customized control of robotic exoskeletons,‚Äù Science Robotics , vol. 7, no. 64, p. eabj3487, 2022. [20] B. A. Shafer, J. C. Powell, A. J. Young, and G. S. Sawicki, ‚ÄúEmulator- based optimization of a semi-active hip exoskeleton concept: Sweeping impedance across walking speeds,‚Äù IEEE Transactions on Biomedical Engineering , pp. 1‚Äì12, 2022. [21] Q. Zhang, V . Nalam, X. Tu, M. Li, J. Si, M. D. Lewek, and H. H. Huang, ‚ÄúImposing healthy hip motion pattern and range by exoskeleton control for individualized assistance,‚Äù IEEE Robotics and Automation Letters , vol. 7, no. 4, pp. 11126‚Äì11133, 2022. [22] A. Sutrisno and D. J. Braun, ‚ÄúEnhancing mobility with quasi-passive variable stiffness exoskeletons,‚Äù IEEE Transactions on Neural Systems and Rehabilitation Engineering , vol. 27, no. 3, pp. 487‚Äì496, 2019. [23] A. Sutrisno and D. J. Braun, ‚ÄúHow to run 50% faster without external energy,‚Äù Science Advances , vol. 6, no. 13, p. eaay1950, 2020. [24] T. Zhang and D. J. Braun, ‚ÄúTheory of fast walking with human-driven load-carrying robot exoskeletons,‚Äù IEEE Transactions on Neural Sys- tems and Rehabilitation Engineering , vol. 30, pp. 1971‚Äì1981, 2022",cs.RO,Arxiv
43,On Sparse Discretization for Graphical Games,Luis E. Ortiz,2014-11-12 20:59:07+00:00,http://arxiv.org/pdf/1411.3320v1,"This short paper concerns discretization schemes for representing and computing approximate Nash equilibria, with emphasis on graphical games, but briefly touching on normal-form and poly-matrix games. The main technical contribution is a representation theorem that informally states that to account for every exact Nash equilibrium using a nearby approximate Nash equilibrium on a grid over mixed strategies, a uniform discretization size linear on the inverse of the approximation quality and natural game-representation parameters suffices. For graphical games, under natural conditions, the discretization is logarithmic in the game-representation size, a substantial improvement over the linear dependency previously required. The paper has five other objectives: (1) given the venue, to highlight the important, but often ignored, role that work on constraint networks in AI has in simplifying the derivation and analysis of algorithms for computing approximate Nash equilibria; (2) to summarize the state-of-the-art on computing approximate Nash equilibria, with emphasis on relevance to graphical games; (3) to help clarify the distinction between sparse-discretization and sparse-support techniques; (4) to illustrate and advocate for the deliberate mathematical simplicity of the formal proof of the representation theorem; and (5) to list and discuss important open problems, emphasizing graphical-game generalizations, which the AI community is most suitable to solve.","arXiv:1411.3320v1  [cs.AI]  12 Nov 2014On Sparse Discretization for Graphical Games Luis E. Ortiz leortiz@cs.stonybrook.edu Department of Computer Science, Stony Brook University, Stony Brook, NY 11794-4400 USA Abstract This short paper concerns discretization schemes for represent ing and computing ap- proximate Nash equilibria, with emphasis on graphical games, but brie Ô¨Çy touching on normal-form and poly-matrix games. The main technical contributio n is a representation theorem that informally states that to account for every exact N ash equilibrium using a nearby approximate Nash equilibrium on a grid over mixed strategies, a uniform discretiza- tion size linearon the inverseofthe approximationquality and natura lgame-representation parameters suÔ¨Éces. For graphical games, under natural condit ions, the discretization is logarithmic in the game-representation size, a substantial improve ment over the linear de- pendency previously required. The paper has Ô¨Åve other objective s: (1) given the venue, to highlight the important, but often ignored, role that work on const raint networks in AI has in simplifying the derivation and analysis of algorithms for computing ap proximate Nash equilibria; (2) to summarize the state-of-the-art on computing ap proximate Nash equi- libria, with emphasis on relevance to graphical games; (3) to help clar ify the distinction between sparse-discretization and sparse-support techniques ; (4) to illustrate and advocate for the deliberate mathematical simplicity of the formal proof of th e representation the- orem; and (5) to list and discuss important open problems, emphasiz ing graphical-game generalizations, which the AI community is most suitable to solve. 1. Introduction There has been quite a bit of work over last 10 years, mostly, b ut not exclusively, in the theoretical computer science community, on the problem of c omputing approximate Nash equilibria in games (see, e.g., thework of Kearns, Littman, & Singh, 2001; Vickrey & Koller, 2002; Ortiz & Kearns, 2003; Lipton, Markakis, & Mehta, 2003; Singh, Soni, & Wellman, 2004; Soni, Singh, & Wellman, 2007; Daskalakis, Mehta, & Pap adimitriou, 2007; Tsak- nakis & Spirakis, 2007; Feder, Nazerzadeh, & Saberi, 2007; D askalakis & Papadimitriou, 2008; Daskalakis, Mehta, & Papadimitriou, 2009; Kontogian nis, Panagopoulou, & Spirakis, 2009; H¬¥ emon, de Rougemont, & Santha, 2008; Awasthi, Balcan , Blum, SheÔ¨Äet, & Vempala, 2010; Bosse, Byrka, & Markakis, 2010; Ponsen, de Jong, & Lanc tot, 2011 and the refer- ences therein; see also the book by Nisan, Roughgarden, ¬¥Eva Tardos, & Vazirani, 2007 for additional references).1 1. To keep the focus and length of this short paper, the presen tation and motivation of the signiÔ¨Åcance and broader scientiÔ¨Åc and practical impact the study of Nash equilibria is beyond the scope of this paper. Similarly, the main focus here is on graphical games (GGs) andabsolute approximations of Nash equilibria, the most common type of approximation found in t he literature. However, the curious reader can go to Appendix A to Ô¨Ånd a brief discussion of the signiÔ¨Åcan ce of Nash equilibria (Appendix A.1), other classes of graphical models for game theory (Appendix A.2), and other types of approximations of Nash equilibria (Appendix A.3). Ortiz This short paper revisits the simple uniform-discretization scheme that Kearns et al. (2001) originally introducedinthecontextof n-player2-action graphical games (GGs) . (For- mal deÔ¨Ånitions of concepts from game theory, graph theory, A I, and uniform-discretization appear in Section 3. The presentation in the Introduction wi ll remain informal.) Kearns et al. (2001) showed that if the size of the individual grid that the uniform- discretization scheme induces over the probability of play ing an action was O(2k/«´), where kis the size of the largest set of neighbors of any player and «´is an approximation quality parameter, then for each exact Nash equilibrium of the GG, it s closest joint mixed-strategy in theresultingregular jointgrid is an approximate «´-Nash equilibriumof the GG.2Kearns et al. (2001) used that discretization to design a special ty pe of dynamic-programming algorithm tailored to computing approximate Nash equilibr ia in GGs with tree-structured graphs they called TreeNash that runs in time linear in the number of players and O(2k2), assuming a Ô¨Åxed «´. The size of the input representation of the n-player 2-action GG is O(n2k). In collaboration with Prof. Kearns, we later extended TreeNash as a heuristic for GGs with loopy graphs, leading to an algorithm we called NashProp , which stands for ‚ÄúNash Propagation‚Äù (Ortiz & Kearns, 2003). An unpublished note drafted back in December 2002 (Ortiz, 20 02), later posted online3 as part of a course on computational game theory taught by Pro f. Michael Kearns during the Spring2003 at the University of Pennsylvania, provided a signiÔ¨Åcantly sharperbound of O(k/«´) on the size of the discretization required to achieve the sa me approximation result. The revised bound was logarithmic in the representation size of the game, as opposed to the previous linearbound that Kearns et al. (2001) derived.4The revised, signiÔ¨Åcantly tighter upper-bound led to an improved running time of O(kk) forTreeNash in terms of just k, which meant that, when using the sparser discretization der ived in the old note (Ortiz, 2002),TreeNash becomes a quasi-polynomial time approximation scheme (qua si-PTAS) to compute an «´-Nash equilibrium. Daskalakis and Papadimitriou (2008) in dependently rediscovered this result, about Ô¨Åve years later, using a con siderably more complex approach to theproof/derivation than thesimple, algebraic approac h presented in theold note (Ortiz, 2002) and here. Similarly, some of the results regarding algorithmic impli cations presented here that fol- lowed from the old note (Ortiz, 2002), particularly for norm al-form games, have also been independently rediscovered in the literature usingdiÔ¨Äeren t approaches throughout the years (see, e.g., some of the results of Lipton et al., 2003, and Das kalakis & Papadimitriou, 2008). Those particular results, discussed in more detail in the te chnical sections of this paper, followed immediately from the improved discretization bou nd given in the old note (Or- tiz, 2002), combined with previously known results from the CSP and graphical-models literature in AI. The present short paper extends the old note (Ortiz, 2002) an d shows how the im- proved discretization-size bounds for GGs, and some specia lizations, fall oÔ¨Ä immediately as corollaries of a theorem that holds for GG generalizations. 2. In an «´-Nash equilibrium, players tolerate losing expected gains , up to an «´amount, from not unilaterally deviating. 3.http://www.cis.upenn.edu/ ~mkearns/teaching/cgt/revised_approx_bnd.pdf 4. Note that Kearns et al. (2001) only considered the case of binaryactions, i.e., m= 2, hence mdoes not play a role in the results within the context of that paper. 2 Sparse Discretization for Graphical Games In particular, the current paper presents a result on the suÔ¨É cient size for uniform dis- cretization to capture, in a formal sense, every possible Na sh equilibrium of the game via another close approximate Nash equilibria in the induced gr id over the space of mixed strategies of players in the game. As example corollaries of the main result, for graphi- cal games with largest neighborhood size k, the suÔ¨Écient size is O(km/«´), which implies, O(nm/«´) for standard normal-form games, while for n-playerm-action poly-matrix games, the suÔ¨Écient size is O(m/«´). Similarly, the representation result yields immediate com putational results based on connection to algorithms for constraint satisfaction problems (CSPs) . Section 6 presents anddiscussesseveral resultson polynomialandquasi-poly nomial timealgorithms for several interesting subclasses of graphical andnormal-form games that fall oÔ¨Ä from that connection. The paper ends with a discussion of the algorithmic implicat ions that the main technical result may have on other work in computational game theory. I t also lists several open problems. 2. Motivation This section provides additional motivation for the necess ity and signiÔ¨Åcance of the study of the problem of computing approximate Nash equilibria, pa rticularly in GGs, and for the development and dissemination of this short paper, with emphasis on its particular relevance to the AI community. 2.1 The Computational Complexity of Nash Equilibria: State of AÔ¨Äairs Chen and Deng (2005b) settled the complexity of computing an exact Nash equilibrium in bimatrix games, a 50-years-old open problem, proving the pr oblem to be PPAD-complete (see also later work by Chen & Deng, 2006 and Chen, Deng, & Teng , 2009).5Daskalakis, Goldberg, and Papadimitriou (2006) later proved the same re sult (see also the presentation of Daskalakis, Goldberg, & Papadimitriou, 2009a, 2009b). T his means that a polynomial- time algorithm for this problem is unlikely. This seminal re sult was the culmination of a series of results that same year for 3-player (Daskalakis & P apadimitriou, 2005; Chen & Deng, 2005a), and 4-player (Daskalakis, Goldberg, & Papadi mitriou, 2005) normal-form games. Withinthegame-theory community, Bubelis(1979) deviseda polynomial-timereduction of anyn-player normal-form game to some 3-player normal-form game ; in the theoretical computer science community, Goldberg and Papadimitriou (2 005) rediscovered a similar result, reducing n-player normal-form games to 4-player normal-form games. T his last result rendered the computational complexity of computing a Nash equilibrium in arbitrary n-player normal-form games as PPAD-complete (Goldberg & Pap adimitriou, 2005). Several results on the PPAD-completeness of computing Nash equilibria in arbitrary GGs served as lemmas to the proofs for normal-form games (Das kalakis et al., 2005; Daskalakis & Papadimitriou, 2005). In fact, GGs played a ver y important role in Ô¨Ånally settling the computational complexity of bimatrix games. 5. Papadimitriou (1994) introduced the complexity class PP AD to characterize Ô¨Åxed-point-type problems such as those of Nash equilibria in which a solution always ex ists. A discussion on the complexity class PPAD is beyond the scope of this short paper. 3 Ortiz There is other important, seminal work regarding the comput ation of Nash equilibria prior to the hardness results discussed above, including so me regarding other equilibrium notions such as pure-strategy Nash equilibria and correlat ed equilibria (Aumann, 1974, 1987) in graphical and normal-form games (see, e.g., the wor k of Gilboa and Zemel (1989), McKelvey and McLennan (1996), Kakade, Kearns, Langford, an d Ortiz (2003), Gottlob, Greco, and Scarcello (2005), Conitzer and Sandholm (2008), Papadimitriou and Rough- garden (2008), Roughgarden (2009), Jiang and Leyton-Brown (2011), and the references therein). But the focus of this short paper is on representin g and computing approximate Nash equilibria in GGs . 2.2 A Caveat: Exact vs. Approximate Nash Equilibria in Multiplayer Games Technically, the result for more than 3 players is for the pro blem of computing an approxi- mateNash equilibrium with an approximation quality exponentially small in the represen- tation size of thegame. Thisis because, as is well-known sin ceNash‚Äôs journal version (Nash, 1951) of his original paper (Nash, 1950), Nash presents a pok er-inspired game of 3 players, built in collaboration with Lloyd Shapley, a 2012 Nobel Laur eate in Economics, in which all payoÔ¨Ä hypermatrixentries/values are rationalnumbers, butwhose uniqueNash equilibrium contains mixed strategies with irrational numbers. Chen, Deng, and Teng (2006) also proved that there does not ex ist a fully-polynomial- time approximation scheme (FPTAS) for computing an approxi mate Nash equilibrium, unless PPAD=P (see also the presentation of Chen et al., 2009 ).6For this result, they proved that the approximation quality can not go below an inverse-polynomial function of the representation size of the game. They stated in their pap er, without proof, that it is easy to extend the result for 2-player normal-form games to n-player normal-form games andn-player graphical games. Hence, computing a Nash equilibrium (or more formally, an approximate Nash equilibrium with approximation qualit y inversely-exponential in the representation size of the game), in an arbitrary n-player GG is PPAD-complete. Yet, it is still open whether there exists a polynomial-time appr oximation scheme (PTAS) for n-player games in normal-form and arbitrary GGs. Theresultof Daskalakis et al. (2009a) also impliedthat the problemof computingan ap- proximate Nash equilibrium in n-player normal-form games, for n‚â•2, with approximation quality inversely exponential on the game‚Äôs representatio n size is PPAD-complete. All of the above helps us motivate the study of approximate Na sh equilibria in arbitrary GGs from a technical perspective: (a) there are multiplayer games with payoÔ¨Ä matrices represe nted entirely using rational numbers but with unique Nash equilibria formed of mixed stra tegies with irrational numbers; (b) computing ‚Äúexact‚Äù Nash equilibria is likely to be comput ationally intractable in gen- eral; and 6. Formal deÔ¨Ånitions of the diÔ¨Äerent approximation schemes , which textbooks such as those of Vazirani (2001) and Williamson and Shmoys (2011) cover, are beyond th e scope of this short paper. See Ap- pendix D for a general description of some of the approximati on schemes. 4 Sparse Discretization for Graphical Games (c) while there is no FPTAS to compute an approximate Nash equ ilibrium with approx- imation quality below a value inversely polynomial of the re presentation size of the game, the existence of a PTAS is open. Here, we provide an array of results, from polynomial time, t o FPTAS and quasi-PTAS, for a variety of GGs under reasonable conditions on the paramete rs and network characteristics of the GG. 2.3 ‚ÄúWhy revisit an old research note now?‚Äù There are several motivations for reviving the old note (Ort iz, 2002). ‚Ä¢The note has gained signiÔ¨Åcance and relevance with time. The sparse discretization and main representation results are proving to be particula rly useful in establishing polynomial running times for a speciÔ¨Åc class of dynamic-pro gramming and propaga- tion algorithms. ‚Ä¢Many algorithmic results immediately follow from the conne ction to the previous work on constraint networks in AI. Thus, this paper highligh ts the usefulness and signiÔ¨Åcance of those results, coming from the AI community, regarding the use of constraint networks to solve network-structured CSPs. ‚Ä¢The derivation of the proof of the result on sparse discretiz ation isdeliberately sim- ple,relative to considerably more mathematically complex proo fs of the same results (see, e.g., the derivations by Daskalakis & Papadimitriou, 2008):no fancy mathe- matical sophistication needed when simple algebraic manip ulations suÔ¨Éce. Similarly, this short paper highlights the important, but often ignore d, role that the work on constraint networks in AI has in simplifying the derivation and analysis of algorithms to compute approximate Nash equilibria in GGs and some of the ir specializations, including normal-form games. ‚Ä¢This paper helps clarify the distinct pros and cons of the two approaches most often used to compute approximate Nash Equilibria: sparse suppor t vs. sparse discretiza- tion. ‚Ä¢This paper seeks to present the state-of-the-art on computi ng approximate Nash equi- libria in GGs, and lists several important open problems, pa rticular for GG general- izations, with important practical consequences, and for w hich the AI community is particularly well-suited to eventually solve. The following discussion expands on the Ô¨Årst two bullet poin ts, with some emphasis on prior and current work in my research group or with collabora tors, but mentioning brieÔ¨Çy potential implications for the work of other AI researchers . 2.3.1 Games as CSPs The computation of Nash equilibria in games is inherently a C SP, an area of great rele- vance to AI research. In the game-induced CSP, we have one var iable for each player‚Äôs mixed strategy, one domain for each player corresponding to the simplex over the player‚Äôs 5 Ortiz actions, and a set of constraints for each player‚Äôs Nash equi librium conditions. For exam- ple, for binary-action games, recall that a mixed-strategy is just a probability, real-valued number between 0 and 1; thus, the number of mixed-strategies available to each player is uncountable . Hence, the corresponding CSP would have real-valued varia bles, each with an uncountably inÔ¨Ånite domain size: an inÔ¨Åniteorcontinuous CSP . The same holds for multi-action games. As stated previously, Kearns et al. (2001) introduced the id ea in AI of using a uniform discretization of the mixed strategies of each player which leads to a regular grid. This turns the problem of computing approximate Nash equilibria into adiscrete CSP (Vickrey & Koller, 2002), i.e., a CSP with Ô¨Ånite, discrete domains. Th is paper considers the same type of discretization. One motivation to revisit the old note (Ortiz, 2002) is the im plications it has on ex- tensions of NashProp (Ortiz & Kearns, 2003) based on survey propagation (SP) (Mezard, 2003; Parisi, 2003d; Parisi, 2003a; Braunstein & Zecchina, 2004; Braunstein, M¬¥ ezard, & Zecchina, 2005; Maneva, Mossel, & Wainwright, 2007), a mess age-passing technique with roots in physics and introduced to computer science to solve boolean satisÔ¨Åability prob- lems, such as random 3-SAT formulas (M¬¥ ezard, Parisi, & Zecc hina, 2002; Parisi, 2003c; M¬¥ ezard, 2004), and more generally, a variety of CSPs, such a s graph 3-coloring (Parisi, 2003b). Ortiz (2008) introduced an axiomatic way to view the standard SP algorithm for boolean satisÔ¨Åability, and an approach called constraint propagation relaxation (CPR) that facilitates the derivation of SP-like techniques tailored to speciÔ¨Åc CSPs. In the case of GGs, the computation of each message-passing, between players, takesexponential time in the size of the discretization of the space of mixed strategies. (A thorough description of the SP-like version of NashProp is beyond the scope of this paper.) But the improved bound on the discretization size for each player is logarithmic in the representation size of the GG, assuming a constant number of actions , leading to a running time that is polynomial in 1/«´, where«´is the approximation-quality parameter, and either quasi- polynomial in the representation size of the game in the case of arbitrary maxi mum neighborhood size k, or simply polynomial in the case kis bounded by a constant, independent of the number of playersn. The representation size of each message is simply quadratic ink,mand 1/«´, even ifkandmare free parameters. Another motivation for considering GG generalizations is t hat they include the class ofgraphical poly-matrix games , which in the case of 2-action games relates to linear (or generalized linear) inÔ¨Çuence games (Irfan & Ortiz, 2011, 2013; Irfan, 2013). In part because of their very compact representations (i.e., of size O(nm2)),poly-matrix games (Janovskaja, 1968) arean important class of games withingame theory. We r evisit their graphical version when we consider generalizations of GGs in Section 7. In summary, particular interest in the application of CPR to derive better algorithms for computing and counting Nash equilibria in arbitrary, loopy GGs,as well as more speciÔ¨Åc GG classes such as linear or generalized-linear inÔ¨Çuence games (Irfan & Ortiz, 2011, 2013; Irfan, 2013), motivates this paper in large part. Similarly, the new bounds may also provide improvements to p revious discretization- based schemes for computing «´-Nash equilibria in other similar models (e.g., those of Sin gh et al., 2004; Soni et al., 2007). 6 Sparse Discretization for Graphical Games 3. Preliminaries This section introduces the basic technical notation and co ncepts necessary to understand the upcoming technical sections of the research note. 3.1 Basic Notation Denoteby x‚â°(x1,x2,...,x n)ann-dimensionalvectorandby x‚àíi‚â°(x1,...,x i‚àí1,xi+1,...,x n) the same vector without component i. Similarly, for every set S‚äÇ[n]‚â° {1,...,n}, denote byxS‚â°(xi:i‚ààS) the (sub-)vector formed from xusing only components in S, such that, ifSc‚â°[n]‚àíSdenotes the complement of S,x‚â°(xS,xSc)‚â°(xi,x‚àíi) for every i. If A1,...,A nare sets, denote by A‚â° √ói‚àà[n]Ai,A‚àíi‚â° √ój‚àà[n]‚àí{i}AjandAS‚â° √ój‚ààSAj. IfG= (V,E) is an undirected graph, then for each i‚ààVdenote by Ni‚â° {j|(j,i)‚ààE} theneighbors of node/vertex iinG, andNi‚â° Ni/uniontext{i}theneighborhood of node/vertex iin G. Note that we have i /‚àà Nibuti‚ààNifor alli‚ààV. 3.2 Graphical Games in Local Normal-Form PayoÔ¨Ä Representations ThissectionformallydeÔ¨Ånes graphical games (GGs) , whicharegraphicalmodelsforcompact representations of classical game representations in game theory (Kearns et al., 2001). GGs extend and generalize normal-form games. In particular, a normal-form game is a GG with a complete/fully-connected graph. DeÔ¨Ånition 1. Agraphical game (GG) consists of an undirected graph G= (V,E),7where each node i‚ààVin the graph corresponds to a player iin the game, and for each player i, we have a set of actionsor pure strategies Aiand a local payoÔ¨Ä hypermatrix/function M‚Ä≤ i:ANi‚ÜíR, whereNiis theneighborhood of player iin the graph deÔ¨Åned with respect to the edges Eof the graph. The (global) payoÔ¨Ä hypermatrix/function Miof player iis such that, for each joint-action x‚ààA‚â°AV, we have Mi(x)‚â°M‚Ä≤ i(xNi). That is, the payoÔ¨Ä that each individual player ireceives when all players, including i, take joint-action/pure- strategyxis afunction of the joint-actions xNiof player i‚Äôs neighborhood Nionly, thus conditionally independent of xV‚àíNigivenxNi. It is convention to let V={1,...,n} ‚â°[n], so thatn‚â° |V|. The representation size of each local payoÔ¨Ä hypermatrix M‚Ä≤ iisŒò(|ANi|) = O(mk), wherem‚â°maxi‚ààV|Ai|andk‚â°maxi‚ààV|Ni|. The representation size of the GG isŒò(/summationtext i‚ààV|ANi|) =O(nmk). If for all iwe have Ni=V, then the GG is a standard normal-form game , also called strategic- or matrix-form game, which has a rep resentation sizeŒò(n|A|) =O(nmn). A GG achieves considerable representation savings wheneve rk‚â™n. 3.3 Solution Concepts Ajoint mixed strategy p‚â°(p1,...,pn) in a game is formed from each individual mixed strategy pi‚â°(pi(xi) :xi‚ààAi) for player i, which is a probability distribution over the players actions Ai(i.e.,pi(xi)‚â•0 for all xi‚ààAiand/summationtext xi‚ààAipi(xi) = 1). Denote by Pi‚â° {pi|pi(xi)‚â•0,for allxi‚ààAiand/summationtext xi‚ààAipi(xi) = 1}the set of all possible mixed 7. It is easy to extend the same result to GGs with directed graphs. 7 Ortiz strategies of player i(i.e., all possible probability distributions over Ai). Similar to the vector notation introduced above, for all iand any clique/set S‚äÇV, denote by p‚àíiandpS the mixed strategies corresponding to all the players exceptiand all the players in clique S, respectively, so that p‚â°(pi,p‚àíi)‚â°(pS,pV‚àíS). A joint mixed strategy pinduces a joint (product) probability distribution over the joint action s paceA, such that, for all x‚ààA, p(x)‚â°/producttext i‚ààVpi(xi) is the probability, with respect to joint mixed strategy p, that joint actionxis played. Theexpected payoÔ¨Ä of player iwith respect to joint mixed strategy pis denoted by Mi(p)‚â°/summationtext x‚ààAp(x)Mi(x). DeÔ¨Ånition 2. For any «´‚â•0, a joint mixed-strategy p‚àóis called an «´-Nash equilibrium if for every player i, and for all xi‚ààAi,Mi(p‚àó i,p‚àó ‚àíi)‚â•Mi(xi,p‚àó i)‚àí«´. That is, no player can increase its expected payoÔ¨Ä more than «´byunilaterally deviating from its mixed strategy partp‚àó iin the equilibrium, assuming the others play according to th eir respective parts p‚àó ‚àíi. ANash equilibrium , or more formally, a mixed-strategy Nash Equilibrium, is th en a 0-Nash equilibrium. Note that, for all p‚àíi‚àà P‚àíi, maxpi‚ààPiMi(pi,p‚àíi) = max xi‚ààAiMi(xi,p‚àíi)‚â•Mi(x‚Ä≤ i,p‚àíi), for allx‚Ä≤ i‚ààAi. Also, note that the equilibrium conditions are invariant t o aÔ¨Éne transforma- tions. In the case of GGs with local payoÔ¨Ä matrices represent ed in tabular/matrix/normal- form, it is convention to assume, without loss of generality , that the payoÔ¨Ä values are such that, for each player i‚ààV, we have min xMi(x) = min xNiM‚Ä≤ i(xNi) = 0 and max xMi(x) = maxxNiM‚Ä≤ i(xNi) = 1. Note that in the case of GGs using such ‚Äútabular‚Äù represe ntations, we do not lose generality by assuming the maximum and minimum local payoÔ¨Ä values of each player are 0 and 1, respectively, because we can compute them both eÔ¨Éciently. This willnotbe the case for GG generalizations, in the worst case. Sectio n 7 revisits this point. 4. Discretization Schemes The discretization scheme considered here is similar to tha t of (Kearns et al., 2001), except that we allow for the possibility of diÔ¨Äerent discretization sizes for the mixed strategies of players. DeÔ¨Ånition 3. In an(individually-uniform) discretization scheme , the uncountable set I= [0,1]of possible value assignments to the probability pi(xi)of each action xiof each player i is approximated by a Ô¨Ånite grid deÔ¨Åned by the set /tildewideIi={0,œÑi,2œÑi,...,(si‚àí1)œÑi,1}of values separated by the same distance œÑi= 1/sifor some integer si. Thus the discretization size is|/tildewideIi|=si+1. Then, we would only consider mixed strategies qisuch that qi(xi)‚àà/tildewideIifor allxi, and/summationtext xi‚ààAiqi(xi) = 1. Theinduced discretized space of joint mixed strategies is /tildewideI‚â° √ói‚ààV/tildewideI|Ai| i, subject to the individual normalization constraints. 5. Sparse Discretization The obvious question is, how small can we make siand still guarantee that there exists an«´-Nash equilibrium in the induced discretized space of joint mixed strategies? The following corollary provides a stronger answer for GGs: it p rovides values for the si‚Äôs that 8 Sparse Discretization for Graphical Games guarantee that for everyNash equilibrium, its closest point in the induced grid is an «´-Nash equilibrium. An interesting aspect of the result is that sidepends only on information local to player i‚Äôs neighborhood: the number of actions |Ai|available to player iand the largest number of neighbors |Nj|of the neighbors j‚àà Niof player i. Note that the corresponding discretization bound provided in (Kearns et al., 2001) in the context of GGs is exponential in the largest neighborhood size k. In contrast, the bound here islinearink, a substantial reduction. ThecorollaryisaGGinstantiation oftheNash-equilibriaR epresentation Theorembased on sparse discretization, Theorem 3, which holds for a broad er class of GG generalizations. The statement and discussion of the theorem is in Section 7. T he statement of the corollary uses notation introduced above. Corollary 1. (Sparse Discretization for Graphical Games) For anym-action graph- ical game and any «´ >0, a (individually-uniform) discretization with si=/ceilingleftbigg2|Ai|maxj‚ààNi|Nj| «´/ceilingrightbigg =O/parenleftbiggmk «´/parenrightbigg for each player iis suÔ¨Écient to guarantee that for everytrue (i.e., not approximate) Nash equilibrium of the game, its closest (in ‚Ñì‚àûdistance) joint mixed strategy in the induced discretized space is also an «´-Nash equilibrium of the game. 6. Algorithmic Implications One objective of this research note is to clarify the distinc tion between sparse discretization and sparse support in the context of approximate Nash equili bria. The next subsection deals with that objective in the context of normal-form game s. Then, the second subsec- tion presents the algorithmic implications of the sparse-d iscretization approach, borrowing heavily from standard results in AI, and highlighting their simplifying usefulness and pow- ers. Before starting the presentation, it is important to note a c rucial distinction between the parameters of interest in GGs versus those of normal-form ga mes, a specialization of GGs. In the study of GGs, the main objects of interest, in terms of i nput-game representation size, is the number of players nand the graph structure (e.g., the maximum number of neighbors k, the graph tree-width, or the hypertree-width of the game-i nduced constraint network), and their eÔ¨Äect in both representation and computa tions of (approximate) Nash equilibria; the maximum number of actions mof each player plays a lesser role, and is often assumed constant. Yet, the statements of the results h ere still sometimes include the explicit dependence on m, so that such dependence is clear should malso be an impor- tant component/aspect of interest in evaluating the qualit y of the approximations and the resulting algorithms. 6.1 Sparse Discretization vs. Sparse/Small Support Before starting this subsection, it is important to clarify that the work of Alth¬® ofer (1994) does not imply, and cannot be used to derive, the sparse repre sentation result presented as the main technical contribution here. Instead, the appro ximation bounds presented 9 Ortiz in Lipton et al. (2003) follow immediately from those of Alth ¬® ofer (1994); in fact, both use the same approach based on applying Ho¬® eÔ¨Äding bounds (Hoe Ô¨Äding, 1963) and the probabilistic method (Alon & Spencer, 2004). More recently , H¬¥ emon et al. (2008) derived a slightly improved small-support upper-bound result in mul ti-player games by using a more general large deviation bound than Ho¬® eÔ¨Äding‚Äôs, due to McDia rmid (1989). It is equally important to understand the distinctions betw een the two types of approx- imations. Each type has their own pros and cons. As a warmup to the results and discussion regarding GGs and th eir generalization, let us Ô¨Årst consider GG simpliÔ¨Åcations, starting with the simple c ase of 2-player games in normal form, and then moving to n-player games in normal-form. 6.1.1 Bimatrix games Inthesmall-supportapproachtoapproximation, weperform abrute-forcesupport-enumeration search over all possible/parenleftbigm r/parenrightbig subsets of strategies, where ris the minimum support necessary to guarantee the desired absolute approximation quality «´ >0; thus, it is important to keep in mind that rdepends on «´. Hence, the running time of approximation algorithms of that type is/parenleftbigm r/parenrightbig =O(mr), thus polynomial in mbutexponential in a function of the approximation parameter. Given «´ >0, the support size that results from the approach of Alth¬® ofer (1994) and Lipton et al. (2003) is r=O/parenleftBig ln(mn) «´2/parenrightBig . It is a well-known fact that given the supports for each player in a Nash equilibrium, one can set up a simple linear program (LP) to Ô¨Ånd the Nash equilibrium. Each call to the LP r uns in polynomial time inr. This leads to a naive brute-force algorithm, also called ‚Äús upport enumeration,‚Äù for computing «´-Nash equilibrium in bimatrix games: for each possiblesupp ortset of size r, run an LP to either Ô¨Ånd an «´-Nash equilibrium or decide there is none with that particul ar set. There are/parenleftbigm r/parenrightbig =O(mr) possible support for each player. Hence, for 2-player game s, the algorithm runs in time mO(r)=mO/parenleftBig lnm «´2/parenrightBig , thusexponential in 1/«´2, and also exponential in (lnm)2, which means quasi-polynomial inm. But, there is actually an alternative to the LP. Because of th e probabilistic way in which the result for sparse supports arises (i.e., using a combina tion of HoeÔ¨Äding‚Äôs or other large deviation bound and invoking the probabilistic method), we only need to search over mixed strategies in the support whose individual probability val ue has the form zk/r, for each actionk= 1,...,m, and/summationtext kzk/r= 1, 0‚â§zk‚â§r. Lipton et al. (2003) call such ‚Äúdis- cretization scheme‚Äù r-uniform. Another way of viewing this is as a uniform-discre tization scheme of size r+ 1, which does not seem to guarantee to Ô¨Ånd all Nash equilibri a, but it does guarantee to Ô¨Ånd at least one. Thus, in that case, the wor st-case running time to Ô¨Ånd at least one «´-Nash equilibrium is ( mr)O(r). Recalling that r=O/parenleftbiglnm «´2/parenrightbig , we have that the worst-case running time is still exponential in 1/«´2and exponential in (ln m)2, thus quasi-polynomial inm. Regardless, because the representation size of the game is N=O(m2), both algorithms run in time NO(lnN), thusboth are quasi-PTASs for computing approximate Nash equili bria in bimatrix games (Lipton et al., 2003). In contrast, suppose that sis the size of the uniform-grid sparse discretization prese nted here. A simple analysis reveals s=O/parenleftbigm «´/parenrightbig . Hence, using the sparse discretization, a naive brute-forcesearchrunsintime O/parenleftbig/parenleftbigm «´/parenrightbigm/parenrightbig , thuspolynomial in1/«´, butexponential inmlnm. 10 Sparse Discretization for Graphical Games 6.1.2 Multiplayer games For multiplayer games, one cannot use an LP to compute an «´-Nash equilibrium even if one were to know the support of the «´-Nash equilibrium strategies of all players. This is becaus e now the «´-Nash equilibrium conditions are highly non-linear, invol ving the product of n variables, where nis the number of players, each variable corresponding to the probability of a particular action in the mixed strategy of a player. (Rec all that a Nash equilibrium is a product distribution.) Thus, it might Ô¨Årst appear uncle ar how to eÔ¨Éciently perform this computation eÔ¨Éciently in multiplayer games. It would s eem, on the surface, that for sparse support, an algorithm based on support enumeration w ould run in worst-case time O(mrnrtime(n,m,r)), where rtime( n,m,r) is the worst-case running time of the algorithm that attempts to compute an «´-Nash equilibrium with the given players‚Äô supports, and is a direct function of r,m, andn, and of course, indirectly, of «´too. But, as mentioned in the case of bimatrix games, because of th e probabilistic way in which the result for sparse supports arises, we only need to s earch over the set of r-uniform mixed strategies in the support. Thus, using this approach o f support enumeration the worst-case running time becomes rtime( n,m,r) =O/parenleftbig/parenleftbigm r/parenrightbig rr/parenrightbig . Thus, the total running time isO((mr)rn). Lipton et al. (2003) proved that using r=O/parenleftBig n2ln(n2m) «´2/parenrightBig is suÔ¨É- cient.8Substituting that value of r, the expression of the worst-case running time becomes mO/parenleftBig (n3ln(n2m))/parenleftBig 1 «´2ln1 «´2/parenrightBig/parenrightBig . Now, to obtain a quasi-PTAS, we would have to impose a condi- tion onn, suchas n=O(lnm). Thisisunlikethebimatrix-gamecaseinwhichnorestrict ion was necessary. In contrast, for sparse discretization in multiplayer game s, the value of s=O/parenleftbigm n «´/parenrightbig . Hence, a brute-force search algorithm applied to a normal-f orm game, for example, would run in worst-case time/parenleftbigmn «´/parenrightbigO(mn), thuspolynomial in 1/«´, butexponential inmnlnmn. (The results for GGs are in a later section.) To obtain a quasi -PTAS, we would have to impose a condition on m=poly(n), notn. 6.1.3 Tradeoff The tradeoÔ¨Ä is now clear. If the interest is m, and«´is Ô¨Åxed, then the approach of Alth¬® ofer (1994) and Lipton et al. (2003) is better. On the other hand, i f the interest is «´, andm is Ô¨Åxed, which is often the case for GGs as discussed above, th en the sparse discretization wins. It is important to note that the sparse discretization guarantees the computation ofall«´-Nash equilibria, while the sparse-support approach can on ly guarantee one«´-Nash equilibrium. It is also important to note that in the case of m ultiplayer games, the sparse- support approach yields a quasi-PTAS only after bounding n, which is the quantity of most interest in GGs. The sparse-discretization approach bound sm, which is the number of actions of each player to obtain a quasi-PTAS, but mis not as signiÔ¨Åcant in a GG setting asnis. 8. The reader should be aware that the notation of Lipton et al . (2003) is the exact opposite of the one here: here ndenotes the number of players, while there it denotes the max imum number of actions of any player; also, here mdenotes the maximum number of actions of any player, while th ere it denotes the number of players. 11 Ortiz 6.2 Reductions to Consistency in CSPs This section involves concepts from AI and graph theory; in t he interest of space, the reader is referred to appropriate standard references (see, e.g., the textbooks of Russell & Norvig, 2003, for AI and Dechter, 2003 for graph theory as used in AI; o r Bollobas, 1979 for graph theory). The representation result of the last section has several im mediate computational conse- quences for the problem of computing approximate Nash equil ibria in GGs with local payoÔ¨Ä matrices represented in tabular form, and in turn, also for m ulti-player games represented in standard normal (tabular) form. To simplify the presentation, let us assume that payoÔ¨Ä value s are in [0 ,1], all the players in the GG have the same number of actions mand the largest neighborhood size in the graph of the game is k, so that the representation size of the GG is Œò( nmk). For this case, the uniform discretization presented in Theorem 3 has size s=si=O(mk/«´) for alli. 6.2.1 Sparse-discretization GG-induced CSP Once we introduce a discretization over the space of mixed st rategies, then it is natural to formulate the problem of computing «´-Nash equilibria on the induced discretized space as a CSP,ormorespeciÔ¨ÅcallyinthecaseofGGs, asaspecialtypeo fconstraintnetwork(Dechter, 2003). (In the interest of keeping this paper short, please s ee Russell & Norvig, 2003, or other introductory textbook on AI, for general information on CSPs. The presentation here contains only the CSP concepts necessary exclusively w ithin the context of the paper‚Äôs topic.) Several researchers have taken this or related appr oaches either explicitly or implic- itly (Kearns et al., 2001; Vickrey & Koller, 2002; Ortiz & Kea rns, 2003; Soni et al., 2007). The CSP for the game has one variable, domain and constraint f or each player. Each vari- able corresponds to mixed strategy pifor each player i. Each variable‚Äôs domain corresponds to the discretized set /tildewideIm iof mixed strategies for each player i, properly corrected to account for normalization. The approximate best-response equilibrium conditions are the following: for each player i, each constraint function (table) ci:/tildewideImk i‚Üí {0,1}is deÔ¨Åned such that, for allpN(i)‚àà/tildewideImk i,ci(pN(i)) = 1 if and only if Mi(pi,p‚àíi)‚â•maxx‚Ä≤ i‚ààAiMi(x‚Ä≤ i,p‚àíi)‚àí«´. Each constraint hasarity at most kandencodestheapproximatebest-responseequilibriumcon di- tions, each represented in tabular form using smk=O((mk/«´)mk) bits. The transformation takes time O(poly(n,(mk/«´)mk)) and the size of the resulting CSP is T= Œò(n(mk/«´)mk). As previously discussed, for GGs, it is natural to consider t he number of players n as being the ‚Äúfree‚Äù parameter of the representation. Hence, ifmklog(mk) =O(log(n)) and«´=n‚Ñ¶(‚àí1/(mk))= (mk)‚àí‚Ñ¶(1)= (logn)‚àí‚Ñ¶(1), then both the time to perform the CSP transformation andits resultingrepresentation sizearep olynomial intherepresentation size of the game (i.e., polynomial in the number of players). Simi larly, ifmandkare bounded (by a constant, independent of n), then the representation size of the game is linear in n and the running time of the transformation is polynomial in nand 1/«´. Note that this is a natural restriction on the game parameters because othe rwise the representation size would be exponential in the number of players, thus defeatin g the main purpose of the GG representation in the Ô¨Årst place: succinctness. 12 Sparse Discretization for Graphical Games At this point, we can apply any of a large number of existing oÔ¨Ä- the-shelf techniques for solving the induced game-CSP, or apply techniques such as NashProp (Ortiz & Kearns, 2003) that take advantage oftheparticularpropertiesofth egamebest-responseconstraints. Instead, in the next section, we will see how standard result s for solving constraint networks (Dechter, 2003) lead immediately to simple deriva tions of algorithmic results for GGs, some of which had been independently re-discovered by e mploying more sophisticated mathematical tools (Daskalakis & Papadimitriou, 2008). Fa cilitated in large part by the knowledge acquired for solving constraint networks and oth er graphical models in the AI community over the last 50 years, the derivations here are qu ite straightforward and do not require complex mathematics. By building on existing AI kno wledge, fancy mathematical derivations for the same result become unnecessary despite their elegance. 6.2.2 An approach based on the GG-induced CSP hypergraph An approach to solving CSPs in AI, now over 10 years olds, work s on the hypergraph induced by the game CSP (Gottlob, Leone, & Scarcello, 2001). If Tis the representation size of the game-CSP, wis the hypertree width of the hypergraph, and the correspond ing hypertree decomposition for the CSP has been computed, then solving the CSP takes time O(Tw+1log(T)) (Gottlob, Leone, & Scarcello, 2000, 2002; Gottlob et al., 2001) (see also page158 of ‚ÄúBibliographical andHistorical Notes‚Äù Section in Chapter5ofRussell &Norvig, 2003). In the case of GGs, we can compute the hypertree decomp osition that the algorithm would use in time O(n2w+2). The following theorem summarizes the discussion. As a pream ble to a discussion on primal graphs and treewidths later in the section, note that it is known that a CSP might have hypergraphs with bounded hypertree width, but whose primalgraph has unbounded treewidth. However, thetreewidth always bounds thehypertreewidth. Thus, therestriction that thehypertreewidthbeboundedbya constant may not beas limiting to theapplication of the results as it Ô¨Årst appears. Theorem 1. There exists an algorithm that, given as input a number «´ >0and a GG withnplayers, maximum neighborhood size kand maximum number of actions m, and whose corresponding CSP has a hypergraph with hypertree widt hw, computes an «´-Nash equilibrium of the GG in time [n(mk/«´)mk]O(w). Thefollowingcorollary characterizes thecomputational c omplexityoftheapproximation schemes resulting from instances of the last theorem. Corollary 2. There exists an algorithm that, given as input a GG with corres ponding hypergraph of hypertree width wbounded by a constant independent of the number of players n, with a logarithmic function of nrestricting the maximum number of actions mand the maximum neighborhood size kasmklog(mk) =O(log(n)), and given «´=n‚Ñ¶(‚àí1/(mk))= (mk)‚àí‚Ñ¶(1)= (logn)‚àí‚Ñ¶(1), outputs an «´-Nash equilibria of the game in time polynomial in the representation size of the input. If, in particular, bo thmandkare bounded by constants independent of n, then the algorithm runs in polynomial time in nand1/«´, for any«´ >0; hence, the algorithm is a fully polynomial time approximation scheme (FPTAS) . If, instead, the expression constraining mandkas a logarithmic function of nholds, and w=polylog(n), then the algorithm is a quasi-polynomial timeapproximation scheme(quasi- PTAS). 13 Ortiz 6.2.3 A side note on normal-form games For normal-form games, k=nandw= 1. This leads to the following corollary. Corollary 3. There exists a quasi-PTAS for computing an «´-Nash equilibrium of n-player m-action normal-form games with m=O(poly(n))that runs in time NO(polylog(N)log(1/«´))=/parenleftbig1 «´/parenrightbigO(polylog(N)), whereN=nŒò(n)is the representation size of the game. If, in particular, mis bounded by a constant independent of n, then the running time is NO(loglog(N) «´), where N= 2Œò(n)is the corresponding representation size of the game. As brieÔ¨Çy mentioned in Section 6.1.2, we can also obtain the s ame result by using the sparse-support approach of Lipton et al. (2003), even if m= 2O(n), but the dependence is exponential in 1/«´2(i.e.,NO(polylog (N)(1/«´)2); orNO(log(N) «´2), ifmis bounded by a constant). The result of the last corollary for the case of mÔ¨Åxed or bounded by a constant is stated by Daskalakis and Papadimitriou (2008). The same result for mÔ¨Åxed or bounded by a constant also follows from Theorem 4 of Kearns (2007). While no formal proof appears for Theorem 4 of Kearns (2007), the theorem follows immediately from the proof in the original note of Ortiz (2002). But, it is important to emphasize, as touched upon in Section 6.1.2, that in the case of normal-form games, we could have obtained the result dire ctly by using an exhaustive search over the induced grid over mixed strategies, which is essentially what the algorithm referred to in the corollary reduces to in this case. Hence, w e could output not just one «´-Nash equilibrium, but all«´-Nash equilibria in the induced grid in the worst-case runni ng time given in the corollary. The algorithms based on the spar se-support approach can only guarantee to output one«´-Nash equilibrium among all mixed strategies of a given maximum support. Algorithms based on sparse support that wo uld output (a compact representation of) all«´-Nash equilibria do not seem to exist, even for the given maxi mum support size; let alone (a compact representation of) all «´-Nash equilibria in the game, as the exhaustive search that uses the sparse discretizatio n result presented here does for normal-form games. Section 6.1 here discusses the distinct ions between the sparse-support and the sparse-discretization approaches. 6.2.4 An approach based on the GG-induced CSP primal graph Another approach is to build a clique (or join) tree from the primal graph of the game-CSP, which in the case of the GGs is the graph created by forming cli ques of every neighborhood. Then, one applies a dynamic programming (or message-passin g) algorithm on the clique tree. Once the clique tree is built, the running time is linea r in the number of nodes of the join tree and exponential in the size of the largest clique as sociated to a node in the clique tree. If the primal graph has treewidth w‚Ä≤, the largest clique associated to the optimal clique tree is w‚Ä≤+1. It has been common knowledge in the graphical-models com munity for quite a while now, almost two decades, at least (see, e.g., th e textbooks of Dechter, 2003; Russell & Norvig, 2003, and the references therein, for a rec ent accounting of previous work in this area) that if the primal graph of a CSP has treewid thw‚Ä≤that is logarithmic in the number of nodes n, then one can solve the CSP in polynomial time if the CSP is represented in tabular form. The following theorem and co rollary follow from careful 14 Sparse Discretization for Graphical Games application of previously known results for solving constr aint networks and other related graphical models. Note that the treewidth w‚Ä≤‚Ä≤of the original graph of the game is always no smaller than the hypertree width wof its hypergraph (Gottlob et al., 2005). In addition, the GG‚Äôs primal graph treewidth w‚Ä≤‚â§(w‚Äù+1)k(Daskalakis & Papadimitriou, 2006). So the interesting bounds in the hypertree case is as given in th e corollary. Also, this means that the results can be easily extended to GGs with (original ) graphs that have O(log(n)) treewidth as long as kis bounded. Finally, if a graph with nnodes has treewidth w‚Ä≤, then the graph has at most ( w‚Ä≤+1)nedges (see, e.g., the work of Becker & Geiger, 2001). Because the number of edges of a GG primal graph is O(k2n),w‚Ä≤=O(log(n)) implies k=O(/radicalbig log(n)). Theorem 2. There exists an algorithm that, given as input a number «´ >0and ann-player m-action GG with maximum neighborhood size kand primal-graph treewidth w‚Ä≤, computes an«´-Nash equilibrium of the game in time 2O(w‚Ä≤)nlog(n)+n[(mk/«´)mk]O(w‚Ä≤). Corollary 4. There exists a PTAS for computing an approximate Nash equilib ria inn- player GGs with bounded maximum number of actions, bounded n eighborhood size and primal-graph treewidth w‚Ä≤=O(log(n)). The new discretization bounds also provide signiÔ¨Åcant impr ovements on the representa- tion results and running times for NashProp and its variants (Kearns et al., 2001; Ortiz & Kearns, 2003). 7. Graphical Multi-hypermatrix Games: Generalizing Graph ical Games This section introduces graphical multi-hypermatrix games (GMhGs) , a class of games that extends and generalizes GGs while capturing many classical game-theoretic model repre- sentations, as discussed below. This class of games is not so me theoretical concoction: they are not only convenient in their generality, covering a larg e number of existing models, but also practical. Indeed, Yu and Berthod (1995) used the same t ype of games to establish an equivalence between localmaximum- a-posteriori (MAP) inference in Markov random Ô¨Åelds and the Nash equilibria of the induced game.9 This section also states and discuss the core theorem on spar se discretization in this broader class generalizing GGs. The simplicity, broadness and strength of impact makes this extension theorem the major technical contribution of this research note. DeÔ¨Ånition 4. Agraphical multi-hypermatrix game (GMhG) is deÔ¨Åned by a set Vofn players, and for each player i‚ààV, a set of actions, or pure strategies, Ai; a setCi‚äÇ2V ofcliques, or hyperedges, such that if C‚àà Citheni‚ààC; and a set {M‚Ä≤ i,C:AC‚ÜíR| 9. Unbeknown at the time, the MRF-induced game is a potential game (Monderer & Shapley, 1996); therefore sequential (orsynchronous ) best-response dynamics converges. Because, in addition, the goal in MAP inference is to obtain a globaloptimum conÔ¨Åguration, in an attempt to avoid local minima, Y u and Berthod (1995) proposed a Metropolis-Hastings-style a lgorithm, which is also similar to simulated annealing algorithms used for solving satisÔ¨Åability probl ems, and other local methods such as WalkSAT. We can view their proposed method as a kind of learning-in-games scheme (Fudenberg & Levine, 1999) based on best-response with random exploration, or ‚Äútrembl ing hand‚Äù best-response, in which, at every round, each player individually play some best-response, w ith some probability; otherwise the player replays the player‚Äôs previous/last response. 15 Ortiz C‚àà Ci}oflocal-clique payoÔ¨Ä matrices . For each player i‚ààV, the sets N(i)‚â° ‚à™C‚ààCiC andNi‚â° {j‚ààV|i‚ààN(j),j/ne}ationslash=i}are the clique of players aÔ¨Äecting i‚Äôs payoÔ¨Ä including i (i.e.,i‚Äôs neighborhood) and those aÔ¨Äected by inot including i, respectively. The localand global payoÔ¨Ä matrices M‚Ä≤ i:AN(i)‚ÜíRandMi:A‚ÜíRofiare (implicitly) deÔ¨Åned as M‚Ä≤ i(xN(i))‚â°/summationtext C‚ààCiM‚Ä≤ i,C(xC)andMi(x)‚â°M‚Ä≤ i(xN(i)), respectively. Connections to other game classes. If for each player, each clique set is a singleton, we obtain a graphical game , and the single clique in the set deÔ¨Ånes the neighborhood of t he player(i.e., inthatcase, Ci={N(i)}foralli). Furthermore, if, inaddition, each cliqueisthe complete setof players, thenthegame isastandard normal-form game , alsocalled strategic- or matrix-form game (i.e., in that case, N(i) =Vfor alli). A GMhG becomes a classical, standard polymatrix game (Janovskaja, 1968) if for each player i,Ci={{i,j} |j‚ààV,j/ne}ationslash=i}, which is the set of cliques of pairs of nodes involving the pla yer and every other player.10 In contrast to hypergraphical games (Papadimitriou, 2005), a GMhG is more expressive, in part because a GMhG does not require that the same ‚Äúsub-game‚Äù (i.e., local-clique payoÔ¨Ä hypermatrix) be shared among all players in the clique of the ‚Äúsub-game.‚Äù For example, a local-clique payoÔ¨Ä hypermatrix may appear in the summatio n deÔ¨Åning the local payoÔ¨Ä hypermatrix of exactly one player.11A GMhG has the polynomial intersection property and thus a polynomial correlated equilibrium scheme (Papad imitriou, 2005). Representation size. TherepresentationsizeofaGMhGisŒò(/summationtext i‚ààV/summationtext C‚ààCi/producttext j‚ààC|Aj|) = O(nlmc), where l‚â°maxi‚ààV|Ci|andc‚â°maxi‚ààVmaxC‚ààCi|C|. Hence, the size is dominated by the representation of the local-clique payoÔ¨Ä matrices, w hich are each of size exponen- tial in their respective clique size. However, this represe ntation size could be considerably smaller than for a graphical game, which is exponential in th e neighborhood size. For ex- ample, if for each i, we have |Ci| ‚â§k, and for each C‚àà Ci, we have |C|= 2, then the GMhG becomes a graphical poly-matrix game , with representation size O(nkm2),linearin the maximum number of neighbors k, compared to O(nmk) for a standard graphical game with ‚Äútabular‚Äù representations, which is exponential ink. PayoÔ¨Ä Scale. Normalizing the payoÔ¨Ä of a GG in standard local strategic/no rmal-form takes linear time in the representation size of the game, bec ause we can Ô¨Ånd the minimum and maximum local payoÔ¨Ä values for each local payoÔ¨Ä hypermat rix (which, for each player, is exponential in the size of the player‚Äôs neighborhood) sim ply by going over each payoÔ¨Ä value in the hypermatrix in sequence. However, such an appro ach is intractable in GMhGs in general. Denote the maximum and minimum payoÔ¨Ä values for e ach player i‚ààV,ui‚â° maxxNi/summationtext C‚ààCiM‚Ä≤ i,C(xC) andli‚â°minxNi/summationtext C‚ààCiM‚Ä≤ i,C(xC), respectively. Computing bothui andliis NP-hard. To see this, Ô¨Årst note that uiandliare the result of a max and min operation over an additive function of the set of the player‚Äô s hyper-edges and its possible joint-actions. It is easy to reduce the problem of Ô¨Ånding a so lution to an arbitrary contraint network to that of computing bothuiandlifor each player i. Hence, in general, we do not have much of a choice but to assume that the payoÔ¨Äs of all pla yers are in the same scale, so that using a global approximation-quality value «´is meaningful; and to compute 10. Note that this is the standard deÔ¨Ånition of polymatrix ga mes. It requires symmetry in the hyperedges: for all pair of players i,j‚ààV,i/ne}ationslash=j,{i,j} ‚àà Ci‚à©Cj. 11. Appendix B expands on the relation between GMhGs and hype rgraphical games. 16 Sparse Discretization for Graphical Games the individual maximum and minimum values of each hypermatr ix payoÔ¨Ä of each player as a way to set up the sparse uniform-discretization. Some additional notation is necessary before stating the th eorem. Denote by ui,C‚â° maxxC‚ààACM‚Ä≤ i,C(xC) andli,C‚â°minxC‚ààACM‚Ä≤ i,C(xC) the largest and smallest payoÔ¨Ä values achieved by the local-grid payoÔ¨Ä hypermatrix M‚Ä≤ i,C, respectively; and by Ri,C‚â°ui,C‚àíli,C itslargest range of values. Theorem 3. (Sparse Nash-Equilibria Representation) For any graphical multi-hypermatrix game and any «´such that 0< «´‚â§2 min i‚ààV/summationtext C‚ààCiRi,C(|C|‚àí1) maxC‚Ä≤‚ààCi|C‚Ä≤|‚àí1, a (uniform) discretization with si=/ceilingleftBigg 2|Ai|maxj‚ààNi/summationtext C‚ààCjRj,C(|C|‚àí1) «´/ceilingrightBigg for each player iis suÔ¨Écient to guarantee that for everyNash equilibrium of the game, its closest (in ‚Ñì‚àûdistance) joint mixed strategy in the induced discretized s pace is also an «´-Nash equilibrium of the game. The proof of the theorem appears in Appendix C, deliberately . This is not only because it is simple, based on algebraic manipulations only, but als o because the proof is irrelevant to the evaluation of the signiÔ¨Åcance of the actual result stated in the theorem. Stating the proof here would simply be distracting, getting in the way of the really important objective: determining the importance of the theorem on its own. Thetheoremestablishesminimalsizesforeachplayer‚Äôsind ividuallyuniform-discretization to capture a compact representation of allNash equilibria with respect to the resulting grid over joint mixed strategies in GMhGs. Hence, as a result of the theorem, we can represent every exact Nash equilibria of any GMhG via a sparse multi-di mensional grid over the joint mixed-strategies induced by a sparse uniform-discretizat ion of the individual probabilities of each action of each mixed strategy of each player individual ly.This sparse discretization can lead not only to compact representations of the set of exa ct NE, but also to tractable algorithms or eÔ¨Äective methods for the computation of approx imate Nash equilibria in some classes of games. We have already seen examples of important representational and com- putational implications that result from the theorem‚Äôs app licationin the previous section, which focused on GGs and some of their specializations, such as normal-form games. Also, the generalized bound has already proved useful to der ive and analyze dynamic- programing algorithms for computing approximate Nash equi libria in non-trivial special cases ofinterdependent defense (IDD) games withspeciÔ¨Åc, practical graphstructures.Chan, Ceyko, and Ortiz (2012) recently introduced IDD games to mod el, study, and analyze se- curity and defense mechanism for deterrence in network-str uctured interdependent security systems under the risk of a deliberate attack from an externa l agent. One objective is the potential to study the eÔ¨Äect of minimal interventions in o verall system security for deterrence purposes. 17 Ortiz Another example in which the generalized bounds have proven useful is in the design of speciÔ¨Åc instantiations of CPR that lead to versions of sur vey propagation for arbitrary GGs, which generalize NashProp (Ortiz & Kearns, 2003), and for linear inÔ¨Çuence games (Irfan & Ortiz, 2011, 2013; Irfan, 2013). In the particular c ase ofSurvey NashProp , the theorem helpedusjumpamajorhurdle. Each message-passing processinmostgeneral CPR instances require time exponential in the size of the larges t variable domains in the CSP; this is in contrast to NashProp whose running time is linear in the domain size. In the case ofSurvey NashProp , that would be exponential in the number of mixed-strategies it considers due to the discretization of the mixed-strateg y space; for NashProp , on the other hand, that would be quasi-linear. But using the genera lized version of the sparse discretization result given in the last theorem, we can now p erform each message-passing in time exponential in k2, which means quasi-linear in the size of the input with respect to k, while keeping the size of the messages quadratic in the representation size of the game, assuming mis bounded by a constant, independent of n. In short, this means that we can now perform each message-passing step in time quasi-linear in the size of the game ! Unlike for standard GGs, the broader algorithmic and comput ational implications of the sparse discretization in GMhGs remains wide open for the most part. The next section lists and brieÔ¨Çy discusses several of such open problems. 8. Concluding Remarks and Open Problems to the AI Community Whilesparse-discretizationresultfor graphical games (GGs) anditsalgorithmicimplications are actually old, going back to a simple unpublished note wro te in 2002 (Ortiz, 2002), posted online a few months later as part of a course on computa tional game theory at the University of Pennsylvania,12it has gained considerable relevance over the last few years because of the need to deal with even more compact representa tions than GGs provide, and algorithms/heuristics that requirerunningtimes exponen tialinthesizeofthediscretization, thus linear in the size of the model, under many reasonable co nditions. Of particular relevance along this line is prior and current exploration o f extensions, based on constraint propagation relaxation (Ortiz, 2008), of survey propagati on to the problem of computing approximate Nash equilibria in GGs and recent work on linear inÔ¨Çuence games, and their generalizations (Irfan & Ortiz, 2011, 2013; Irfan, 2013). A s stated at the end of Section 2, the new bounds may also provide improvements to previous dis cretization-based schemes for computing «´-Nash equilibria in other similar models, such as those in th e work of Singh et al. (2004) and Soni et al. (2007). Several open questions remain, perhaps most important of wh ich are those related to computation in GG generalizations such as GMhGs. The follow ing is a partial list of open problems for which the AI community, and in particular, the c ommunity on constraint networks (Dechter, 2003) for CSPs, are very well equipped to solve. ‚Ä¢Can we combine the sparse-support and sparse-discretizati on approach to obtain a betteralgorithm? For example, canwereducedependencyont henumberof actions or theaccuracy parameter, withoutundulyincreasingthedepe ndencyoneither? Anaive 12.http://www.cis.upenn.edu/\homedirmkearns/teaching/c gt/ 18 Sparse Discretization for Graphical Games approach does not seem to work, but maybe a more sophisticate d approach would. Are the sparse-discretization and sparse-support approac hes simply incompatible? ‚Ä¢Can we do away with the uniform discretization scheme and still guarantee that every Nash equilibria is near a grid point? Would it help if the obje ctive is to Ô¨Ånd a single approximate solution only? What if we want our approximate N ash equilibria to also be ‚Äústable‚Äù (i.e., near an actual Nash equilibrium)? ‚Ä¢Computing exactNash equilibria, or more formally, approximate Nash equili bria with exponentially smallapproximation parameter, in n-player 2-action poly-matrixgames, which is a GG generalization, is PPAD-complete. This result is an implicit corollary of the work of Daskalakis et al. (2009b), although they do not provide any explicit, formal proof. Yet, the design of eÔ¨Écient algorithms or eÔ¨Äecti ve heuristics for com- putingapproximate Nash equilibria in such GG generalizations is wide open! A na ive application of the sparse-discretization approach does no t seem to help. Can sparse discretization or a sparse-support approach help? If so, ho w? ‚Ä¢There is no substantive work on using the sparse-support app roach for GGs, at least not directly. Action-graph games (Jiang, Leyton-Brown, & Bhat, 2011) con- tain GGs. Thompson, Leung, and Leyton-Brown (2011) designe d methods based on the sparse-support approach to compute approximate Nash eq uilibria in the context of action-graph games. How exactly do these methods apply to GGs directly, or in- directly, if at all? Can we adapt those methods to obtain dire ct versions, still based on sparse support, for computing approximate Nash equilibr ia in GGs? Is the sparse- support approach simply incompatible with GGs, when it come s to the design of eÔ¨Écient or eÔ¨Äective algorithms for computing approximate Na sh equilibria that are also natural within the GG context? ‚Ä¢One can view a sparse discretization as generating an equiva lent game in which the discretized mixed-strategy space of the original game beco mes the pure strategies of the equivalent game. It seems possible to extend the computa tional results of Gottlob et al. (2005) by considering the computation of pure-strate gy Nash equilibria of the equivalent game, which corresponds to approximate mixed-s trategy Nash equilibria of the original game. How to do this exactly requires further re search and thus remains open. Acknowledgement This manuscript was supported in part by NSF CAREER Award IIS -1054541. Appendix A. What is Beyond the Scope of This Short Paper? This section brieÔ¨Çy discusses some motivation for the study of Nash equilibria and other technical aspects that, while interesting, addressing the m within this short paper will make it lose its focus. 19 Ortiz A.1 SigniÔ¨Åcance of Non-cooperative Game Theory and Nash Equilibria At this point, it would not be an exaggeration to say that game theory and the concept of Nah equilibrium have touched almost all areas of science and engineering. The list of the multitude of areas and applications would be too long to pres ent here. It is beyond the scope of this note to discuss the theoretical and practical r elevance that non-cooperative game theory and the concept of a Nash equilibrium have to real -world problem. But, here are a few quotes from the organization that awards what most p eople call the ‚ÄúNobel Prize in Economics‚Äù every year. They give a taste for the broader im pact of non-cooperative game theory and the Nash equilibria as a solution concept. Summary: ‚ÄúThe Sveriges Riksbank Prize in Economic Sciences in Memory of Alfred Nobel 1994 was awarded jointly to John C. Harsanyi, Jo hn F. Nash Jr. and Reinhard Selten ‚Äùfor their pioneering analysis of equilibria in the theory o f non-cooperative games‚Äù.‚Äù13 Press Release: ‚ÄúGame theory is a mathematical method for analyzing strateg ic interaction.‚Äù14 Press Release: ‚ÄúManyinterestingeconomicissues,suchastheanalysisofo ligopoly, originate in non-cooperative games. In general, Ô¨Årms canno t enter into bind- ing contracts regarding restrictive trade practices becau se such agreements are contrary to trade legislation. Correspondingly, the inter action among a govern- ment, special interest groups and the general public concer ning, for instance, the design of tax policy is regarded as a non-cooperative gam e. Nash equilib- rium has become a standard tool in almost all areas of economi c theory. The most obvious is perhaps the study of competition between Ô¨Årm s in the theory of industrial organization. But the concept has also been used in macroeconomic theory for economic policy, environmental and resource eco nomics, foreign trade theory, theeconomics of information, etc. inorderto impro veourunderstanding of complex strategic interactions.‚Äù15 A.2 Other Game-theoretic Graphical Models This note does not consider other kinds of graphical models f or game theory such as mul- tiagent inÔ¨Çuence diagrams (MAIDs) (Koller & Milch, 2003), which provide graphical mod- els for extensive-form games, action-graph games (Jiang et al., 2011),16which exploit ‚Äúcontext-sensitive‚Äù conditional expected-payoÔ¨Ä indepen dence, and expected utility networks (EUNs) (La Mura, 2000), which focuses on models for the ‚Äústrategic‚Äù decision-making aspects of a single, individual player. 13.http://www.nobelprize.org/nobel_prizes/economic-sci ences/laureates/1994/ 14.http://www.nobelprize.org/nobel_prizes/economic-sci ences/laureates/1994/press.html 15.http://www.nobelprize.org/nobel_prizes/economic-sci ences/laureates/1994/press.html 16. Thompson et al. (2011) considers enumeration methods ba sed on sparse support tocompute approximate Nash equilibria in the context of action-graph games. 20 Sparse Discretization for Graphical Games A.3 Relative and Constant Approximations This note only considers absolute approximations , the most commonly studied form of ap- proximation of Nash equilibria. Relative approximations h ave also been the subject of study, but mostly for non-graphical models (H¬¥ emon et al., 2 008). A very recent interest is to provide polynomial-time algori thms for computing Nash equilibria of speciÔ¨Åc, constant approximation quality (see, e.g., work by Tsaknakis & Spi- rakis, 2007; Daskalakis et al., 2009; H¬¥ emon et al., 2008; Bo sse et al., 2010 and the references therein). Most results of this kind are in 2-player games. Se veral authors have shown how to turn such polynomial algorithms for a constant approxima tion quality from 2-player to results for n-player, with a larger, still constant approximation quality. Most of that work uses a sparse-support approach. This type of approximate Na sh equilibria problem does not seem to have been studied for arbitrary GGs, just special izations such as normal-form games. This paper does not consider such problems to compute approximate Nash equi- libria with constant approximation quality here, except fo r revisiting it in the list of open problems at the end. Appendix B. Expanding on the Relation between GMhGs and Hypergraphical Games In the standard deÔ¨Ånition of hypergraphical games we have a h ypergraph ( V,E), where each vertexi‚ààVcorresponds to a player iin the game and E ‚äÇ2Vis a set of hyperedges (i.e., sets of subsets of V). Each player i‚ààVhas a Ô¨Ånite set of actions Ai. There is ‚Äúgame‚Äù for each hyperedge C‚àà E. By ‚Äúgame‚Äù here we mean that each player i‚ààChas the same set of actions Aiin all (local) ‚Äúgames‚Äù deÔ¨Åned by E, and a local payoÔ¨Ä hypermatrix M‚Ä≤‚Ä≤ i,C(xC) that is a function of the joint-actions xC‚ààACof all the players in C. Let C‚Ä≤‚Ä≤ i‚â° {C‚àà E |i‚ààC}be the (local) set of hyperedges that the hypergraphical gam e induces for each player i‚ààV. The Ô¨Ånal/global payoÔ¨Ä functions of each player iin the hypergraphical game is Mi(x)‚â°/summationtext C‚ààC‚Ä≤‚Ä≤ iM‚Ä≤‚Ä≤ i,C(xC). Note that by deÔ¨Ånition, for all pairs of players i,j‚ààV, we have that, for any hyperedge C‚àà Esuch that i,j‚ààC, the following symmetry property must hold in a hypergraphi cal game:C‚àà C‚Ä≤‚Ä≤ iif and only if C‚àà C‚Ä≤‚Ä≤ j.GMhGs do not require this symmetry condition. Of course, from a mathematical perspective, one can always take a GMhG with a set of player‚Äôs hyperedges Ciand local hypermatrices M‚Ä≤ i,Cfor each player i‚ààVand hyperedge C‚àà Ci, and turn it into a hypermatrix game; just as one can take a GG a nd turn it into a normal-form game. In the case of the GMhG transformati on, we can set the set of hyperedges Eof the GMhG-induced hypergraphical game to E ‚â° ‚à™ i‚ààV‚à™C‚ààCiC, and, letting the GMhG-induced hyperedges C‚Ä≤ i‚â° {C‚àà E |i‚ààC}for alli‚ààV. Then, for every i‚ààV, we must either create a local zero-valued hypermatrix M‚Ä≤‚Ä≤ i,C(xC)‚â°0, for all xC‚ààAC ifC/ne}ationslash‚àà Ci; otherwise, if C‚àà Ci, set the local hypermatrix of the hypergraphical game to M‚Ä≤‚Ä≤ i,C‚â°M‚Ä≤ i,C. Indeed, one can take any game with a Ô¨Ånite number of players an d actions and always turnitback intoanormal-formgame. But, froma computational perspective, suchtransfor- mations could take anexponential amount of timeandspace, d efeatingthemainpurposefor introducing compact, tractable, and Ô¨Çexible representati ons of signiÔ¨Åcant expressive power in the Ô¨Årst place! Although, from a theoretical standpoint, the given transformation from 21 Ortiz GMhGs to hypergraphical games is computationally eÔ¨Écient, from apractical standpoint, the loss in expressive power is clear, and signiÔ¨Åcant. Appendix C. Proof of Theorem 3 To simplify notation, given any joint mixed-strategy (i.e. , a product distribution) p, for all B‚äÇV, andxB‚ààAB, we denote by p(xB)‚â°/producttext i‚ààBpi(xi) =/summationtext x‚àíBp(xB,x‚àíB) the joint mixed-strategy over players in Bonly (i.e., marginal product-distributions of pover the joint-actions of players in B). Letpandqbe two joint mixed strategies and, for each player iand each action xi, denote by ‚àÜ i(xi)‚â°pi(xi)‚àíqi(xi). In a slight abuse of notation, let ‚àÜ(xS)‚â°/producttext k‚ààS‚àÜk(xk). The following very simple lemma is a cornerstone of the proof . Lemma 1. (Product-Distribution DiÔ¨Äerences) For any clique B‚äÇVof players, for any clique joint action xB, p(xB)‚àíq(xB) =/summationdisplay S‚àà2B‚àí‚àÖ‚àÜ(xS)q(xB‚àíS). Proof.The lemma follows by applying a binomial expansion: p(xB) =/productdisplay j‚ààB(qj(xj)+‚àÜj(xj)) =/summationdisplay S‚àà2B‚àÜ(xS)q(xB‚àíS) =q(xB)+/summationdisplay S‚àà2B‚àí‚àÖ‚àÜ(xS)q(xB‚àíS). To further simplify the presentation of the proof it is conve nient to introduce a slight abuse of notation: for all, i‚ààC,C‚àà Ci,B,S‚äÇC,B‚à©S=‚àÖ,xS‚ààAS,pC‚àíB‚àíS‚àà PC‚àíB‚àíS, letM‚Ä≤ i,C(xS,‚àÜB,pC‚àíB‚àíS)‚â°/summationtext xB‚ààAB‚àÜ(xB)M‚Ä≤ i,C(xS,xB,pC‚àíB‚àíS). The following useful claim follows immediately from the las t lemma of joint product distribution diÔ¨Äerences (Lemma 1). Claim 1. Under the conditions of Lemma 1, for all i‚ààV,C‚àà Ci,B‚äÇC,xB‚ààABand pC‚àíB,qC‚àíB‚àà PC‚àíB, we have M‚Ä≤ i,C(xB,pC‚àíB)‚àíM‚Ä≤ i,C(xB,qC‚àíB) =/summationdisplay S‚àà2C‚àíB‚àí‚àÖM‚Ä≤ i,C(xB,‚àÜS,qC‚àíB‚àíS). 22 Sparse Discretization for Graphical Games Proof.ApplyingthelastlemmaonthediÔ¨Äerencesbetweenproductdis tributions(Lemma1), we have M‚Ä≤ i,C(xB,pC‚àíB)‚àíM‚Ä≤ i,C(xB,qC‚àíB) =/summationdisplay xC‚àíBÔ£Æ Ô£∞/summationdisplay S‚àà2C‚àíB‚àí‚àÖ‚àÜ(xS)q(xC‚àíB‚àíS)Ô£π Ô£ªM‚Ä≤ i,C(xC) =/summationdisplay S‚àà2C‚àíB‚àí‚àÖ/summationdisplay xS‚àÜ(xS)/summationdisplay xC‚àíB‚àíSq(xC‚àíB‚àíS)M‚Ä≤ i,C(xC) =/summationdisplay S‚àà2C‚àíB‚àí‚àÖM‚Ä≤ i,C(xB,‚àÜS,qC‚àíB‚àíS). Using some algebra we can show another useful claim. Claim 2. Under the conditions of Lemma 1, for all i‚ààV, andC‚àà Ci, we have /summationdisplay S‚àà2C‚àí‚àÖM‚Ä≤ i,C(‚àÜS,qC‚àíS) =/summationdisplay B‚àà2C‚àí{i}‚àí‚àÖM‚Ä≤ i,C(pi,‚àÜB,qC‚àíB‚àí{i}). Proof.First note that we can decompose the left-hand side of the equ ation in the claim as /summationdisplay S‚àà2C‚àí‚àÖM‚Ä≤ i,C(‚àÜS,qC‚àíS) =/summationdisplay B‚àà2C‚àí{i}‚àí‚àÖM‚Ä≤ i,C(qi,‚àÜB,qC‚àíB‚àí{i})+ /summationdisplay B‚àà2C‚àí{i}‚àí‚àÖM‚Ä≤ i,C(‚àÜi,‚àÜB,qC‚àíB‚àí{i}). Now note that, using the deÔ¨Ånition of ‚àÜ i, we have M‚Ä≤ i,C(‚àÜi,‚àÜB,qC‚àíB‚àí{i}) =M‚Ä≤ i,C(pi,‚àÜB,qC‚àíB‚àí{i})‚àíM‚Ä≤ i,C(qi,‚àÜB,qC‚àíB‚àí{i}). The claim follows after making the appropriate substitutio n for that expressions and sim- plifying: /summationdisplay S‚àà2C‚àí‚àÖM‚Ä≤ i,C(‚àÜS,qC‚àíS) =/summationdisplay B‚àà2C‚àí{i}‚àí‚àÖM‚Ä≤ i,C(qi,‚àÜB,qC‚àíB‚àí{i})+ /summationdisplay B‚àà2C‚àí{i}‚àí‚àÖ(M‚Ä≤ i,C(pi,‚àÜB,qC‚àíB‚àí{i})‚àíM‚Ä≤ i,C(qi,‚àÜB,qC‚àíB‚àí{i})) =/summationdisplay B‚àà2C‚àí{i}‚àí‚àÖM‚Ä≤ i,C(pi,‚àÜB,qC‚àíB‚àí{i}). 23 Ortiz Suppose pisaNashequilibriumofthegame, whichmustexistbyNash‚ÄôsT heorem(Nash, 1951). Applying the last two claims above, we obtain Mi(p) =Mi(q)+/summationdisplay C‚ààCi/summationdisplay S‚àà2C‚àí‚àÖM‚Ä≤ i,C(‚àÜS,qC‚àíS) =Mi(q)+/summationdisplay C‚ààCi/summationdisplay B‚àà2C‚àí{i}‚àí‚àÖM‚Ä≤ i,C(pi,‚àÜB,qC‚àíB‚àí{i}) ‚â•max x‚Ä≤ iMi(x‚Ä≤ i,p‚àíi) =max x‚Ä≤ iÔ£Æ Ô£∞Mi(x‚Ä≤ i,q‚àíi)+/summationdisplay C‚ààCi/summationdisplay B‚àà2C‚àí{i}‚àí‚àÖM‚Ä≤ i,C(x‚Ä≤ i,‚àÜB,qC‚àíB‚àí{i})Ô£π Ô£ª. Rearranging and simplifying, we obtain the following expre ssion: Mi(q)‚â•max x‚Ä≤ iMi(x‚Ä≤ i,q‚àíi)+ /summationdisplay C‚ààCi/summationdisplay B‚àà2C‚àí{i}‚àí‚àÖ/parenleftbig M‚Ä≤ i,C(x‚Ä≤ i,‚àÜB,qC‚àíB‚àí{i})‚àíM‚Ä≤ i,C(pi,‚àÜB,qC‚àíB‚àí{i})/parenrightbig . Letqbe the closest (in ‚Ñì‚àûdistance) joint mixed strategy in /tildewideI, deÔ¨Åned using sizes sias given in the statement of the theorem, to exact Nash equilibr iump. Hence, we have |‚àÜi(xi)| ‚â§«´ 2|Ai|maxj‚ààNi/summationtext C‚ààCjRj,C(|C|‚àí1). Consider the conditional expected hypermatrix payoÔ¨Ä diÔ¨Äere nce in parenthesis within the innermost summation inside the maximization of the equilib rium condition above. Noting that |M‚Ä≤ i,C(x‚Ä≤ i,xB,qC‚àíi,B)‚àíM‚Ä≤ i,C(pi,xB,qC‚àíi,B)| ‚â§Ri,C, we obtain the following lower bound on that innermost summat ion: /parenleftbig M‚Ä≤ i,C(x‚Ä≤ i,‚àÜB,qC‚àíi,B)‚àíM‚Ä≤ i,C(pi,‚àÜB,qC‚àíi,B)/parenrightbig ‚â•/summationdisplay xB/bracketleftBigg/productdisplay k‚ààB|‚àÜk(xk)|/bracketrightBigg (‚àíRi,C) =‚àíRi,C/summationdisplay xB/productdisplay k‚ààB|‚àÜk(xk)|.(1) 24 Sparse Discretization for Graphical Games We can upper bound the last factor in the right-hand side of th e last expression as /summationdisplay xB/productdisplay k‚ààB|‚àÜk(xk)|=/productdisplay k‚ààB/summationdisplay xk|‚àÜk(xk)| ‚â§/productdisplay k‚ààB/summationdisplay xk«´ 2|Ak|maxj‚ààNk/summationtext C‚Ä≤‚ààCjRj,C‚Ä≤(|C‚Ä≤|‚àí1) =/productdisplay k‚ààB«´ 2 maxj‚ààNk/summationtext C‚Ä≤‚ààCjRj,C‚Ä≤(|C‚Ä≤|‚àí1) ‚â§/productdisplay k‚ààB«´ 2/summationtext C‚Ä≤‚ààCiRi,C‚Ä≤(|C‚Ä≤|‚àí1) =/parenleftBigg «´ 2/summationtext C‚Ä≤‚ààCiRi,C‚Ä≤(|C‚Ä≤|‚àí1)/parenrightBigg|B| . Thus, using the resulting lower bound on the expression give n in (1), we obtain Mi(q)‚â•max x‚Ä≤ iMi(x‚Ä≤ i,q‚àíi)‚àí/summationdisplay C‚ààCi/summationdisplay B‚àà2C‚àí{i}‚àí‚àÖRi,C/parenleftBigg «´ 2/summationtext C‚Ä≤‚ààCiRi,C‚Ä≤(|C‚Ä≤|‚àí1)/parenrightBigg|B| . The second term in the right-hand side of the last expression equals /summationdisplay C‚ààCiRi,C/summationdisplay B‚àà2C‚àí{i}‚àí‚àÖ/parenleftBigg «´ 2/summationtext C‚Ä≤‚ààCiRi,C‚Ä≤(|C‚Ä≤|‚àí1)/parenrightBigg|B| =/summationdisplay C‚ààCiRi,CÔ£Æ Ô£∞/parenleftBigg 1+«´ 2/summationtext C‚Ä≤‚ààCiRi,C‚Ä≤(|C‚Ä≤|‚àí1)/parenrightBigg|C|‚àí1 ‚àí1Ô£π Ô£ª ‚â§/summationdisplay C‚ààCiRi,C/bracketleftBigg «´(|C|‚àí1)/summationtext C‚Ä≤‚ààCiRi,C‚Ä≤(|C‚Ä≤|‚àí1)/bracketrightBigg =«´. Thelast inequality follows fromusingtheupperboundcondi tion on«´given inthestatement of the theorem and applying the well-known inequality, 1 + z‚â§exp(z)‚â§1 +z+z2for |z|<1 (Cormen, Leiserson, & Rivest, 1990). This completes the pr oof of the theorem. Appendix D. Approximation Schemes This appendix presents a brief, general description of the d iÔ¨Äerent approximation schemes. To begin, it is important to note that it is most common to deÔ¨Ån e approximations in terms ofrelativefactors. Here, given the standard/traditional mathematic al deÔ¨Ånition of approx- imate Nash equilibria in a game setting, the description ass umes that the approximation quality is in absolute terms. The description assumes that the problem is that of co mputing absolute approximations of Nash equilibria in games, as deÔ¨Å ned in the main body of the text. DeÔ¨Ånition 5. LetNbe the representation size of the input game Gand«´ >0the (absolute) approximation quality. An algorithm Ais apolynomial-timeapproximationscheme(PTAS) 25 Ortiz if, for every «´ >0, on input G,Aruns in time polynomial in N. If, in addition, Aruns in time polynomial in1 «´, thenAis afully-polynomial-time approximation scheme (FPTAS) . If, instead, Aruns in time NO(polylog(N)), where polylog (N)denotes a polynomial function oflogN, thenAis aquasi-polynomial-time approximation scheme (quasi-PTAS ). References Alon, N., & Spencer, J. H. (2004). The Probabilistic Method (Second edition). John Wiley & Sons. Alth¬® ofer, I. (1994). On sparse approximations to randomiz ed strategies and convex combi- nations. Linear Algebra and its Applications ,199, Supplement 1 (0), 339 ‚Äì 355. Special Issue Honoring Ingram Olkin. Aumann, R. (1974). Subjectivity and correlation in randomi zed strategies. Journal of Mathematical Economics ,1. Aumann, R. (1987). Correlated equilibrium as an expression of Bayesian rationality. Econo- metrica,55. Awasthi, P., Balcan, M.-F., Blum, A., SheÔ¨Äet, O., & Vempala, S . (2010). OnNash-equilibria of approximation-stable games. In Kontogiannis, S., Kouts oupias, E., & Spirakis, P. (Eds.),Algorithmic Game Theory , Vol. 6386 of Lecture Notes in Computer Science , pp. 78‚Äì89. Springer Berlin Heidelberg. Becker, A., & Geiger, D. (2001). A suÔ¨Éciently fast algorithm for Ô¨Ånding close to optimal clique trees. ArtiÔ¨Åcial Intelligence ,125(1-2), 3 ‚Äì 17. Bollobas, B. (1979). Graph Theory . Springer. Bosse, H.,Byrka,J.,&Markakis,E.(2010). Newalgorithmsf orapproximateNashequilibria in bimatrix games. Theoretical Computer Science ,411(1), 164 ‚Äì 173. Braunstein, A., M¬¥ ezard, M., & Zecchina, R. (2005). Survey p ropagation: an algorithm for satisÔ¨Åability. Random Structures and Algorithms ,27, 201. Braunstein, A., & Zecchina, R. (2004). Survey propagation a s local equilibrium equations. Journal of Statistical Mechanics: Theory and Experiment ,6, 7. Bubelis, V. (1979). On equilibria in Ô¨Ånite games. International Journal of Game Theory , 8(2), 65‚Äì79. Chan, H., Ceyko, M., & Ortiz, L. (2012). Interdependent defe nse games: Modeling in- terdependent security under deliberate attacks. In Proceedings of the Twenty-Eighth Conference Annual Conference on Uncertainty in ArtiÔ¨Åcial Inte lligence (UAI-12) , pp. 152‚Äì162, Corvallis, Oregon. AUAI Press. Chen, X., & Deng, X. (2005a). 3-NASH is PPAD-complete. Tech. rep. 134, Electronic Colloquium on Computational Complexity (ECCC). http://eccc.hpi-web.de/ eccc-reports/2005/TR05-134/index.html . Chen, X., & Deng, X. (2005b). Settling the complexity of 2-pl ayer Nash-equilibrium. Tech. rep. 140, Electronic Colloquium on Computational Complexi ty (ECCC). http:// eccc.hpi-web.de/eccc-reports/2005/TR05-140/index.ht ml. 26 Sparse Discretization for Graphical Games Chen, X., & Deng, X. (2006). Settling the complexity of two-p layer Nash equilibrium. InProceedings of the 47th Annual IEEE Symposium on Foundations of Computer Science (FOCS‚Äô06) . Chen, X., Deng, X., & Teng, S.-H. (2006). Computing Nash equi libria: Approximation and smoothed complexity. In FOCS, pp. 603‚Äì612. IEEE Computer Society. Chen, X., Deng, X., & Teng, S.-H. (2009). Settling the comple xity of computing two-player Nash equilibria. J. ACM,56(3), 14:1‚Äì14:57. Conitzer, V., & Sandholm, T. (2008). New complexity results about Nash equilibria. Games and Economic Behavior ,63(2), 621‚Äì641. SecondWorldCongressoftheGameTheory Society. Cormen, T., Leiserson, C., & Rivest, R. (1990). Introduction to Algorithms . The MIT Press, Cambridge, MA. Daskalakis, C., Goldberg, P. W., & Papadimitriou, C. H. (200 6). The complexity of com- puting a Nash equilibrium. In STOC. Daskalakis, C., Goldberg, P. W., & Papadimitriou, C. H. (200 9a). The complexity of com- puting a Nash equilibrium. Commun. ACM ,52(2), 89‚Äì97. Daskalakis, C., Goldberg, P. W., & Papadimitriou, C. H. (200 9b). The complexity of computing a Nash equilibrium. SIAM Journal on Computing ,39(1), 195‚Äì259. Daskalakis, C., Mehta, A., & Papadimitriou, C. (2007). Prog ress in approximate Nash equilibria. In EC ‚Äô07: Proceedings of the 8th ACM conference on Electronic co mmerce, pp. 355‚Äì358, New York, NY, USA. ACM. Daskalakis, C., Mehta, A., & Papadimitriou, C. (2009). A not e on approximate Nash equilibria. Theoretical Computer Science ,410(17), 1581 ‚Äì 1588. Internet and Network Economics. Daskalakis, C., & Papadimitriou, C. H. (2006). Computingpu reNash equilibria ingraphical games via Markov random Ô¨Åelds. In EC ‚Äô06: Proceedings of the 7th ACM conference on Electronic commerce , pp. 91‚Äì99, New York, NY, USA. ACM. Daskalakis, C., & Papadimitriou, C. H. (2008). Discretized multinomial distributions and Nash equilibria in anonymous games. In FOCS. Daskalakis, K., Goldberg, P. W., &Papadimitriou, C. H. (200 5). Thecomplexity of comput- ingaNashequilibrium. Electronic Colloquium on Computational Complexity (ECCC) . Daskalakis, K., & Papadimitriou, C. H. (2005). Three-playe r games are hard. Electronic Colloquium on Computational Complexity (ECCC) . Dechter, R. (2003). Constraint Processing . Morgan Kaufmann. Feder, T., Nazerzadeh, H., & Saberi, A. (2007). Approximati ng Nash equilibria using small- support strategies. In Proceedings of the 8th ACM Conference on Electronic Com- merce, EC ‚Äô07, pp. 352‚Äì354, New York, NY, USA. ACM. Fudenberg, D., & Levine, D. (1999). The Theory of Learning in Games . MIT Press. Gilboa, I., & Zemel, E. (1989). Nash and correlated equilibr ia: some complexity considera- tions.Games and Economic Behavior ,1, 80‚Äì93. 27 Ortiz Goldberg, P. W., & Papadimitriou, C. H. (2005). Reducibilit y among equilibrium problems. Electronic Colloquium on Computational Complexity (ECCC) . Gottlob, G., Greco, G., & Scarcello, F. (2005). Pure Nash equ ilibria: Hard and easy games. JAIR,24, 357‚Äì406. Gottlob, G., Leone, N., & Scarcello, F. (2000). A comparison of structural CSP decompo- sition methods. ArtiÔ¨Åcial Intelligence ,124(2), 243 ‚Äì 282. Gottlob, G., Leone, N., & Scarcello, F. (2001). Hypertree de compositions: A survey. In MFCS ‚Äô01: Proceedings of the 26th International Symposium on M athematical Foun- dations of Computer Science , pp. 37‚Äì57, London, UK. Springer-Verlag. Gottlob, G., Leone, N., & Scarcello, F. (2002). Hypertree de compositions and tractable queries. Journal of Computer and System Sciences ,64, 579‚Äì627. H¬¥ emon, S., de Rougemont, M., & Santha, M. (2008). Approxima te Nash equilibria for multi-player games. In Monien, B., & Schroeder, U.-P. (Eds. ),Algorithmic Game Theory, Vol. 4997 of Lecture Notes in Computer Science , pp. 267‚Äì278. Springer Berlin Heidelberg. HoeÔ¨Äding, W. (1963). Probability inequalities for sums of bo unded random variables. Jour- nal of the American Statistical Association ,58(301), 13‚Äì30. Irfan, M., & Ortiz, L. (2011). A game-theoretic approach to i nÔ¨Çuence in networks. In AAAI Conference on ArtiÔ¨Åcial Intelligence . Irfan,M. T.(2013). Causal Strategic Inference in Social and Economic Networks . Ph.D.the- sis, Stony Brook University, Department of ComputerScienc e.http://www.bowdoin. edu/~mirfan/papers/Mohammad_Tanvir_Irfan_Dissertation.pd f. Irfan, M. T., & Ortiz, L. E. (2013). On inÔ¨Çuence, stable behav ior, and the most inÔ¨Çuential individuals in networks: A game-theoretic approach. CoRR,abs/1303.2147 . Janovskaja, E. B. (1968). Equilibrium situations in multi- matrix games. Litovsk. Mat. Sb. , 8, 381‚Äì384. Jiang, A. X., & Leyton-Brown, K. (2011). Polynomial computa tion of exact correlated equilibrium in compact games. SIGecom Exchanges ,10(1), 6‚Äì8. Jiang, A. X., Leyton-Brown, K., & Bhat, N. A. (2011). Action- graph games. Games and Economic Behavior ,71, 141‚Äì173. DOI:10.1016/j.geb.2010.10.012. Kakade, S., Kearns, M., Langford, J., & Ortiz, L. (2003). Cor related equilibria in graphical games. In EC ‚Äô03: Proceedings of the 4th ACM conference on Electronic co mmerce, pp. 42‚Äì47, New York, NY, USA. ACM. Kearns, M. (2007). Graphical games. In Nisan, N., Roughgard en, T.,¬¥Eva Tardos, & i, V. V. V. (Eds.), Algorithmic Game Theory , chap. 7, pp. 159‚Äì180. Cambridge University Press. Kearns, M. J., Littman, M. L., & Singh, S. P. (2001). Graphica l models for game theory. In UAI ‚Äô01: Proceedings of the 17th Conference in Uncertainty in ArtiÔ¨Åcial Intelligence , pp. 253‚Äì260, San Francisco, CA, USA. Morgan Kaufmann Publis hers Inc. 28 Sparse Discretization for Graphical Games Koller, D., & Milch, B. (2003). Multi-agent inÔ¨Çuence diagra ms for representing and solving games.Games and Economic Behavior ,45(1), 181‚Äì221. Kontogiannis, S. C., Panagopoulou, P. N., & Spirakis, P. G. ( 2009). Polynomial algorithms for approximating Nash equilibria of bimatrix games. Theor. Comput. Sci. ,410(17), 1599‚Äì1606. La Mura, P. (2000). Game networks. In Proceedings of the 16th Conference on Uncertainty in ArtiÔ¨Åcial Intelligence (UAI) , pp. 335‚Äì342. Lipton,R.J.,Markakis, E.,&Mehta, A.(2003). Playinglarg egames usingsimplestrategies. InProceedings of the 4th ACM Conference on Electronic Commerce , EC ‚Äô03, pp. 36‚Äì 41, New York, NY, USA. ACM. Maneva, E., Mossel, E., & Wainwright, M. J. (2007). A new look at survey propagation and its generalizations. J. ACM,54(4). McDiarmid, C. (1989). On the method of bounded diÔ¨Äerences. Surveys in Combinatorics , 141, 148‚Äì188. McKelvey, R. D., & McLennan, A. (1996). Computation of equil ibria in Ô¨Ånite games. In Handbook of Computational Economics , Vol. I, pp. 87‚Äì142. M¬¥ ezard, M., Parisi, G., & Zecchina, R. (2002). Analytic and Algorithmic Solution of Ran- dom SatisÔ¨Åability Problems. Science,297(5582), 812‚Äì815. Mezard, M. (2003). PHYSICS/COMPUTER SCIENCE: Passing Mess ages Between Disci- plines.Science,301(5640), 1685‚Äì1686. M¬¥ ezard, M. (2004). Message passing in random satisÔ¨Åabilit y problems.. Monderer, D., & Shapley, L. S. (1996). Potential games. Games and Economic Behavior , 14(1), 124 ‚Äì 143. Nash, J. (1951). Non-cooperative games. Annals of Mathematics ,54, 286‚Äì295. Nash, J. F. (1950). Equilibrium points in n-person games. Proceedings of the National Academy of Sciences of the United States of America ,35(1), 48‚Äì49. Nisan, N., Roughgarden, T., ¬¥Eva Tardos, & Vazirani, V. V. (Eds.). (2007). Algorithmic Game Theory . Cambridge University Press. Ortiz, L. E. (2002). Approximation bound reÔ¨Ånement of KLS. U npublished Note, http: //www.cis.upenn.edu/ ~mkearns/teaching/cgt/revised_approx_bnd.pdf . Ortiz, L. E. (2008). CPR for CSPs: A probabilistic relaxatio n of constraint propagation. In Platt, J., Koller, D., Singer, Y., & Roweis, S. (Eds.), Advances in Neural Information Processing Systems 20 , pp. 1113‚Äì1120. Curran Associates, Inc. Ortiz, L. E., & Kearns, M. (2003). Nash propagation for loopy graphical games. In Becker, S. B., Thrun, S. T., & Obermayer, K. (Eds.), Advances in Neural Information Pro- cessing Systems 15 , pp. 817‚Äì824. Papadimitriou, C. H. (1994). On the complexity of the parity argument and other ineÔ¨Écient proofs of existence. J. Comput. Syst. Sci. ,48(3), 498‚Äì532. 29 Ortiz Papadimitriou, C. H. (2005). Computing correlated equilib ria in multi-player games. In STOC ‚Äô05: Proceedings of the thirty-seventh annual ACM sympos ium on Theory of computing , pp. 49‚Äì56. Papadimitriou, C. H., & Roughgarden, T. (2008). Computing c orrelated equilibria in multi- player games. J. ACM,55(3), 14:1‚Äì14:29. Parisi, G. (2003a). A backtracking survey propagation algo rithm for K-satisÔ¨Åability. eprint arXiv:cond-mat/0308510 . Parisi, G. (2003b). Constraint optimization and statistic al mechanics. CoRR, cs.CC/0312011 . Parisi, G. (2003c). On the probabilistic approach to the ran dom satisÔ¨Åability problem. CoRR,cs.CC/0308010 . Parisi, G. (2003d). Some remarks on the survey decimation al gorithm for k-satisÔ¨Åability. CoRR,cs.CC/0301015 . Ponsen, M., de Jong, S., & Lanctot, M. (2011). Computing appr oximate Nash equilibria and robust best-responses using sampling. J. Artif. Int. Res. ,42(1), 575‚Äì605. Roughgarden, T. (2009). Computing equilibria: A computati onal complexity perspective. Economic Theory . Russell, S. J., & Norvig, P. (2003). ArtiÔ¨Åcial Intelligence: A Modern Approach . Pearson Education. Singh, S. P., Soni, V., & Wellman, M. P. (2004). Computing app roximate Bayes-Nash equilibria in tree-games of incomplete information. In Bre ese, J. S., Feigenbaum, J., & Seltzer, M. I. (Eds.), ACM Conference on Electronic Commerce , pp. 81‚Äì90. ACM. Soni, V., Singh, S. P., & Wellman, M. P. (2007). Constraint sa tisfaction algorithms for graphical games. In Durfee, E. H., Yokoo, M., Huhns, M. N., & S hehory, O. (Eds.), AAMAS, p. 67. IFAAMAS. Thompson,D., Leung,S.,&Leyton-Brown, K.(2011). Computi ngNashequilibriaofaction- graph games via support enumeration. In Chen, N., Elkind, E. , & Koutsoupias, E. (Eds.),Internet and Network Economics , Vol. 7090 of Lecture Notes in Computer Science, pp. 338‚Äì350. Springer Berlin Heidelberg. Tsaknakis, H., & Spirakis, P. (2007). An optimization appro ach for approximate Nash equilibria. In Deng, X., & Graham, F. (Eds.), Internet and Network Economics , Vol. 4858 ofLecture Notes in Computer Science , pp. 42‚Äì56. Springer Berlin Heidelberg. Vazirani, V. V. (2001). Approximation Algorithms . Springer. Vickrey, D., & Koller, D. (2002). Multi-agent algorithms fo r solving graphical games. In Proceedings of the Eighteenth National Conference on ArtiÔ¨Åc ial Intelligence (AAAI- 02), pp. 345‚Äì351. Williamson, D. P., & Shmoys, D. B. (2011). The Design of Approximation Algorithms . Cambridge. Yu, S., & Berthod, M. (1995). A game strategy approach for ima ge labeling. Computer Vision and Image Understanding ,61(1), 32 ‚Äì 37. 30","cs.AI, cs.GT",Arxiv
44,Automated Biodesign Engineering by Abductive Meta-Interpretive Learning,"Wang-Zhou Dai, Liam Hallett, Stephen H. Muggleton, Geoff S. Baldwin",2021-05-17 12:10:26+00:00,http://arxiv.org/pdf/2105.07758v1,"The application of Artificial Intelligence (AI) to synthetic biology will provide the foundation for the creation of a high throughput automated platform for genetic design, in which a learning machine is used to iteratively optimise the system through a design-build-test-learn (DBTL) cycle. However, mainstream machine learning techniques represented by deep learning lacks the capability to represent relational knowledge and requires prodigious amounts of annotated training data. These drawbacks strongly restrict AI's role in synthetic biology in which experimentation is inherently resource and time intensive. In this work, we propose an automated biodesign engineering framework empowered by Abductive Meta-Interpretive Learning ($Meta_{Abd}$), a novel machine learning approach that combines symbolic and sub-symbolic machine learning, to further enhance the DBTL cycle by enabling the learning machine to 1) exploit domain knowledge and learn human-interpretable models that are expressed by formal languages such as first-order logic; 2) simultaneously optimise the structure and parameters of the models to make accurate numerical predictions; 3) reduce the cost of experiments and effort on data annotation by actively generating hypotheses and examples. To verify the effectiveness of $Meta_{Abd}$, we have modelled a synthetic dataset for the production of proteins from a three gene operon in a microbial host, which represents a common synthetic biology problem.","Automated Biodesign Engineering by Abductive Meta-Interpretive Learning Wang-Zhou Dai1, Liam Hallett2, Stephen H. Muggleton1, Geoff S. Baldwin2 1Department of Computing, Imperial College London, SW7 2AZ, UK. 2Department of Life Science, Imperial College London, SW7 2AZ, UK. fw.dai, l.hallett19, s.muggleton, g.baldwin g@imperial.ac.uk Abstract The application of ArtiÔ¨Åcial Intelligence (AI) to synthetic bi- ology will provide the foundation for the creation of a high throughput automated platform for genetic design, in which a learning machine is used to iteratively optimise the system through a design-build-test-learn (DBTL) cycle. However, mainstream machine learning techniques represented by deep learning lacks the capability to represent relational knowl- edge and requires prodigious amounts of annotated training data. These drawbacks strongly restrict AI‚Äôs role in synthetic biology in which experimentation is inherently resource and time intensive. In this work, we propose an automated biode- sign engineering framework empowered by Abductive Meta- Interpretive Learning ( Meta Abd), a novel machine learning approach that combines symbolic and sub-symbolic machine learning, to further enhance the DBTL cycle by enabling the learning machine to 1) exploit domain knowledge and learn human-interpretable models that are expressed by formal lan- guages such as Ô¨Årst-order logic; 2) simultaneously optimise the structure and parameters of the models to make accurate numerical predictions; 3) reduce the cost of experiments and effort on data annotation by actively generating hypotheses and examples. To verify the effectiveness of Meta Abd, we have modelled a synthetic dataset for the production of pro- teins from a three gene operon in a microbial host, which rep- resents a common synthetic biology problem. Introduction The development of Synthetic Biology has created a lot of new tools for building genetic designs and the application of automation is now beginning to impact the Ô¨Åeld, with the possibility of creating large datasets. In parallel, ArtiÔ¨Åcial Intelligence has made huge impacts in its application to the analysis and interpretation of big data, including biological data. However, the true potential of the intersection of the two areas is still far from fulÔ¨Ålled, as it is still unclear how AI can facilitate the Design-Build-Test-Learn (DBTL) cycle. Synthetic biology seeks to optimise biological systems for speciÔ¨Åc functionalities, such as biosynthesis, biosens- ing, and genetic circuits. The systems implemented in such applications typically consist of genetic devices comprised Copyright ¬© 2020, Association for the Advancement of ArtiÔ¨Åcial Intelligence (www.aaai.org). All rights reserved.of discrete genetic parts whose background knowledge and hypotheses are usually symbolic and discrete (Endy 2005). Conversely, quantitative engineering and optimisation of such pathways requires numerical modelling systems that can handle uncertainty and time-series data, e.g., dynamic systems and Ordinary Differential Equations. These are sub-symbolic and only have a continuous parameter space. Hence, to build an automated DBTL cycle driven by AI, the integration of symbolic and numerical calculus is required. Nevertheless, most current AI research is restricted to one side or the other. The data-driven AI, which is rep- resented by deep learning and statistical learning, aims at learning numerical functions from massive annotated data or a simulated environment that allows for a huge number of trial-and-errors. The knowledge-driven AI, such as In- ductive Logic Programming and constraint-based problem solving, alternatively focuses on the combinatorial search for a symbolic hypothesis in a discrete space while using pre-deÔ¨Åned domain knowledge to prune the search space. Several frameworks have been proposed to combine the two AI paradigms, such as Statistical Relational AI and Neuro- Symbolic Learning. However, to build a gradient-based end- to-end learning pipeline, most of these approaches try to re- place symbolic reasoning with statistical inferences or neu- ral network modules and sacriÔ¨Åce the ability to learn rela- tional hypotheses and exploit symbolic domain knowledge, which is critical in synthetic biology. In this paper, we proposed to employ the newly pro- posed Abductive Meta-Interpretive Learning ( Meta Abd) to improve the DBTL cycle for automated biodesign engineer- ing, which is illustrated by Fig. 1. Meta Abdis a novel ma- chine learning approach that combines abduction and induc- tion to enable symbolic knowledge induction from numeri- cal data. SpeciÔ¨Åcally, it is designed for simultaneously op- timising symbolic hypotheses such as differential equation structures or genetic constructs based on biological back- ground knowledge and Ô¨Åtting the unknown parameters in the models via numerical optimisation. We aim to verify the effectiveness of our proposed ap- proach with synthetic time series data from Ô¨Çuorescent pro- tein production, in which the speciÔ¨Åc genetic design pro- vides the discrete control variables to be optimised.arXiv:2105.07758v1  [cs.AI]  17 May 2021 Figure 1: Integrating numerical and symbolic modelling for auto- mated bioengineering Related Work Computational scientiÔ¨Åc discovery has been a major re- search topic since the early days of ArtiÔ¨Åcial Intelligence. King et al. (2004) learns genetic function by utilising ab- ductive logical reasoning in inductive logic programming, which is a general framework for logic-based machine learn- ing. Dzeroski and Todorovski (1995) learn the differen- tial equation structures through a combinatorial search con- strained by logical background knowledge and a set of qual- itative conditions inferred from the training data. Yet it is challenging for these symbolic-based methods to learn mod- els directly from noisy numeric data and make accurate quantitative predictions. The explosion of computing power in the last decades has paved the way for scientiÔ¨Åc discovery with evolutionary algorithms and deep learning (Schmidt and Lipson 2009; Udrescu and Tegmark 2020). However, due to the lack of expressive power, these models cannot make use of generic biological background knowledge that is represented by formal languages. The Approach Meta Abdis a novel Inductive Logic Programming approach aiming to bridge symbolic and sub-symbolic machine learn- ing in a mutually beneÔ¨Åcial way (Dai and Muggleton 2020). SpeciÔ¨Åcally, Meta Abdtakes numerical models, e.g., neu- ral networks and differential systems, as logic predicates for processing noisy raw data, and then uses logical abduc- tion and induction to train numerical models and learn sym- bolic hypotheses jointly. For example, in synthetic biology the symbolic hypotheses may represent the biological sys- tem at multiple levels: describing the transgenic constructs, the proteins expressed from these transgenic constructs, the enzymatic pathways these proteins comprise, and host and environmental interactions with the transgenic system. The behaviour of such an engineered system can be represented by differential equation structures; assembled from simple numerical models describing the interactions cellular molec- ular species using mass action and Michaelis‚ÄìMenten ki- netics. Unlike the previous work, Meta Abdcan incorporate complex biological background knowledge and learn nu- merical model for making quantitative predictions jointly. Another component of our approach is Active Learning (AL), which can signiÔ¨Åcantly reduce the cost of learning by letting the machine actively choose the experiments to be conducted (King et al. 2004). For synthetic biology tasks that usually have large design spaces, this could be one of the most important features for the automated DBTL cycle.Empirical Study on Synthetic Data To develop the Meta Abdframework for synthetic biology, we have created a synthetic dataset from a modiÔ¨Åed ver- sion of the Wei√üe model (Wei√üe et al. 2015) for an operon of three Ô¨Çuorescent proteins to allow for rapid in silico ex- ploration of the feature space. It has been adapted to repre- sent multiple discrete features (e.g. promoter, gene orders, RBS strengths, etc.) mathematically and produces data that reÔ¨Çects biologically coherent emergent behaviour in time. This modiÔ¨Åed Wei√üe model is utilised to encode and pro- cess experimental data into conceptual system knowledge, which forms the ‚ÄúPerception module‚Äù aspect of the frame- work (see Fig. 1). This encoded knowledge can be symbol- ically represented and passed to Meta Abdfor symbolic re- gression analysis, forming the ‚ÄúReasoning module‚Äù. An Ac- tive Learning strategy is then employed to generate subse- quent experimental candidates through logical abduction. Future Work The synthetic dataset has been deliberately constructed around a biodesign problem that can be addressed exper- imentally. The DNA-BOT platform enables an automated BASIC DNA assembly framework providing a methodol- ogy for the Ô¨Çexible modular assembly of operons in terms of promoter, gene order and RBS strength (Storch et al. 2020). The synthetic design will be constructed and analysed with Meta Abdto demonstrate its applicability to a real-world biodesign space. Further development of this approach will focus on the optimisation of a biosynthetic pathway. The platform will expand beyond gene expression of a multigene operon to incorporate the kinetics of the resulting enzymatic pathway. Active learning will be applied to selectively generate novel hypotheses and propose experiments to enable the inclusion of system design rules from complex enzymatic behaviours while reducing the experimental costs. References [Dai and Muggleton 2020] Dai, W., and Muggleton, S. H. 2020. Abductive knowledge induction from raw data. CoRR abs/2010.03514. [Dzeroski and Todorovski 1995] Dzeroski, S., and Todorovski, L. 1995. Discovering dynamics: From inductive logic programming to machine discovery. Journal of Intelligent Information Systems 4(1):89‚Äì108. [Endy 2005] Endy, D. 2005. Foundations for engineering biology. Nature 438:449‚Äì53. [King et al. 2004] King, R. D.; Whelan, K. E.; Jones, F. M.; Reiser, P. G. K.; Bryant, C. H.; Muggleton, Stephen H.and Kell, D. B.; and Oliver, S. G. 2004. Functional genomic hypothesis generation and experimentation by a robot scientist. Nature 427:247‚Äì252. [Schmidt and Lipson 2009] Schmidt, M., and Lipson, H. 2009. Dis- tilling free-form natural laws from experimental data. science 324(5923):81‚Äì85. [Storch et al. 2020] Storch, M.; Haines, M. C.; and Baldwin, G. S. 2020. DNA-BOT: a low-cost, automated DNA as- sembly platform for synthetic biology. Synthetic Biology 5(1). doi:10.1093/synbio/ysaa010. [Udrescu and Tegmark 2020] Udrescu, S., and Tegmark, M. 2020. Ai feynman: A physics-inspired method for symbolic regression. Science Advances 6(16). [Wei√üe et al. 2015] Wei√üe, A. Y .; Oyarz ¬¥un, D. A.; Danos, V .; and Swain, P. S. 2015. Mechanistic links between cellular trade-offs, gene expression, and growth. Proceedings of the National Academy of Sciences 112(9):E1038‚ÄìE1047","cs.AI, cs.LG",Arxiv
45,Accelerating exploration of Marine Cloud Brightening impacts on tipping points Using an AI Implementation of Fluctuation-Dissipation Theorem,"Haruki Hirasawa, Sookyung Kim, Peetak Mitra, Subhashis Hazarika, Salva Ruhling-Cachay, Dipti Hingmire, Kalai Ramea, Hansi Singh, Philip J. Rasch",2023-02-03 19:08:38+00:00,http://arxiv.org/pdf/2302.01957v1,"Marine cloud brightening (MCB) is a proposed climate intervention technology to partially offset greenhouse gas warming and possibly avoid crossing climate tipping points. The impacts of MCB on regional climate are typically estimated using computationally expensive Earth System Model (ESM) simulations, preventing a thorough assessment of the large possibility space of potential MCB interventions. Here, we describe an AI model, named AiBEDO, that can be used to rapidly projects climate responses to forcings via a novel application of the Fluctuation-Dissipation Theorem (FDT). AiBEDO is a Multilayer Perceptron (MLP) model that uses maps monthly-mean radiation anomalies to surface climate anomalies at a range of time lags. By leveraging a large existing dataset of ESM simulations containing internal climate noise, we use AiBEDO to construct an FDT operator that successfully projects climate responses to MCB forcing, when evaluated against ESM simulations. We propose that AiBEDO-FDT can be used to optimize MCB forcing patterns to reduce tipping point risks while minimizing negative side effects in other parts of the climate.","Accelerating Exploration of Marine Cloud Brightening Impacts on Tipping Points Using an AI Implementation of Fluctuation-Dissipation Theorem. Haruki Hirasawa1, Sookyung Kim2, Peetak Mitra2,3, Subhashis Hazarika2, Salva Ruhling-Cachay2,4, Dipti Hingmire1, Kalai Ramea2, Hansi Singh1, Philip J. Rasch5 1University of Victoria, Victoria, BC, Canada 2Palo Alto Research Center, Palo Alto, CA, US 3Excarta, Palo Alto, CA, US 4University of California San Diego, San Diego, CA, US 5University of Washington, Seattle, WA, US Corresponding authors: hhirasawa@uvic.ca, sookim@parc.com Abstract Marine cloud brightening (MCB) is a proposed climate inter- vention technology to partially offset greenhouse gas warm- ing and possibly avoid crossing climate tipping points. The impacts of MCB on regional climate are typically estimated using computationally expensive Earth System Model (ESM) simulations, preventing a thorough assessment of the large possibility space of potential MCB interventions. Here, we describe an AI model, named AiBEDO, that can be used to rapidly projects climate responses to forcings via a novel application of the Fluctuation-Dissipation Theorem (FDT). AiBEDO is a Multilayer Perceptron (MLP) model that uses maps monthly-mean radiation anomalies to surface climate anomalies at a range of time lags. By leveraging a large existing dataset of ESM simulations containing internal cli- mate noise, we use AiBEDO to construct an FDT operator that successfully projects climate responses to MCB forcing, when evaluated against ESM simulations. We propose that AiBEDO-FDT can be used to optimize MCB forcing patterns to reduce tipping point risks while minimizing negative side effects in other parts of the climate. Introduction Marine Cloud Brightening Tipping points in the climate system are critical components of the climate response to anthropogenic warming, as they have the potential to undergo rapid, self-perpetuating, and possibly irreversible changes (McKay et al. 2022). Should warming approach or cross a threshold that activates such a tipping point, the damage caused by crossing the threshold may be sufÔ¨Åciently severe that a climate intervention ought to be undertaken to prevent it. One such class of interven- tions are solar radiation modiÔ¨Åcation (SRM) methods which slightly modify the climate‚Äôs energy budget by scattering away a portion of incoming sunlight (also called solar radia- tion) to counter some of the effects of greenhouse warming. Here, we consider one such SRM technique, Marine Cloud Brightening (MCB), in which sea salt aerosols would be injected into marine boundary layer clouds to increase Copyright ¬© 2022, Association for the Advancement of ArtiÔ¨Åcial Intelligence (www.aaai.org). All rights reserved.their albedo (Latham et al. 2012). If MCB were to be de- ployed with the aim of limiting tipping point risk, it is crucial that we carefully assess if MCB does indeed reduce these risks and rule out MCB scenarios that might cause unin- tended climate changes or exacerbate tipping points (Dia- mond et al. 2022). Due to the short atmospheric lifetime of tropospheric aerosol particles, MCB interventions would be highly localized. This presents both a substantial challenge and a potential opportunity, as the possibility space of MCB interventions is vast, both in terms of strength and spatial pattern. Thus, a thorough assessment of the feasibility of MCB interventions must consider a wide range of poten- tial scenarios. On the other hand, it may be possible to Ô¨Ånd speciÔ¨Åc patterns of MCB intervention that achieve desirable climate effects while minimizing negative side effects. Typically, the effect of MCB is evaluated using simula- tions in Earth System Models (ESMs), which are compre- hensive, dynamic models of the coupled atmosphere-ocean- land-ice system (Rasch, Latham, and Chen 2009; Jones, Haywood, and Boucher 2009; Stjern et al. 2018). However, ESM simulations are computationally expensive, requiring tens of thousands of core-hours to obtain sufÔ¨Åcient sam- ple sizes to assess the impact of a given intervention sce- nario. Thus, they are impractical as tools to explore a wide range of possible MCB intervention patterns. To accelerate this exploration, we have developed AiBEDO, an AI model that emulates the relationship between atmospheric radiative Ô¨Çux anomalies and resulting surface climate changes. By us- ing AiBEDO to project the climate impact of cloud radiative Ô¨Çux anomalies, we can rapidly evaluate the impact of MCB- like perturbations on the climate. Fluctuation-Dissipation Theorem As there are few MCB forcing simulations that have been conducted in the most recent generation of Coupled Model Intercomparison phase 6 (CMIP6) ESMs, we cannot train on an existing repository of ESM responses to MCB forcing. Thus, the design philosophy of AiBEDO borrows from the Fluctuation-Dissipation Theorem (FDT), a theorem emerg- ing from statistical mechanics that posits that the response of a dynamical system to a perturbation can be inferred from the time-lagged correlation statistics of natural inter-arXiv:2302.01957v1  [physics.ao-ph]  3 Feb 2023 nal Ô¨Çuctuations in the system (Kubo 1966; Leith 1975). Because the climate is such a dynamical system, FDT has been used to estimate the linear response of the climate to a range of forcings: CO 2doubling and solar radiation per- turbations (Cionni, Visconti, and Sassi 2004) and regional ocean heat convergence anomalies (Liu et al. 2018), among others. If the statistics of the dynamical system are Gaus- sian, the FDT operator Lcan be computed by convolving the covariance matrix between the predictor variables ~ xand predictand variables ~ y,C~ y;~ x(), and the autocovariance ma- trix of~ x,C~ x;~ x(0), over time lags . The climatological mean responseh~ yi=hy0i hyi(angle brackets indicating the cli- matological mean) to a constant forcing ~fis then computed as h~ yi=L 1~f=Z1 0C~ y;~ x()C 1 ~ x;~ x(0)d ~f (1) As FDT is limited to the linear component of the climate re- sponse, we seek to use an AI model with the intention of cap- turing both linear and non-linear components of the response and loosening some of the conditions required by classical FDT (namely that the probability density function of the rel- evant climate statistics must be Gaussian or quasi-Gaussian; see Cionni, Visconti, and Sassi 2004; Majda, Abramov, and Gershgorin 2010). Here, we deÔ¨Åne an AiBEDO operator A(~ xi(t)), which maps the statistical relationship from a given input ~ xi(t) Ô¨Åeld to an output ~ yi(t+)Ô¨Åeld after some time lag , A(~ xi(t)) :~ xi(t)!~ yi(t+): (2) withiindexing the different initial conditions sampled from internal climate noise. Due to uncertainties in the initial con- dition~ xi(from monthly averaging and discrete sampling of the Ô¨Åelds) and the chaotic dynamics of the system, there is no unique mapping from a given input ~ xi(t)to a later output ~ yi(t+). Rather, AiBEDO projects the mean of the dis- tribution of possible ~ yi(t+)trajectories after months given the initial conditions ~ xi(t). We denote this mean using an overline, and the output of AiBEDO as ~ yi(t+). If we consider a case where ~ xi(t)is perturbed by a inÔ¨Ånitesimally small one-month forcing ~f0, the mean evolution becomes A(~ xi+~f0) =~ y0 i(t+). Linearizing the response, we ap- proximate the effect of the forcing as ~ yi(t+) =~ y0 i(t+) ~ yi(t+) =A(~ xi(t) +~f0) A(~ xi(t))(3) We assume that the time-mean climate response is equiv- alent to the mean response across many different initial con- ditions~ xi(ergodicity). Thus, we can compute the climate mean lag-response to a time varying forcing ~f(t)by av- eraging over Nsamples of internal variability ~ xi. Follow- ing FDT, we then integrate the average lag- responses from = 0to some upper limit =Tmax, where the response to a perturbation approximately converges to noise (we choose 48 months), to obtain the climate mean response: h~ y(t)i=TmaxX =01 NNX i=0 A(~ xi+~f(t )) A(~ xi) (4)This allows us to replace the linear response function of clas- sic FDT with a non-linear AiBEDO response function. Note, we assume there are no non-linearities between the AiBEDO responses at different lags (i.e., that the effect of ~f(t)is not affected by the changes induced by ~f(t 1),~f(t 2), etc). In this study, we discuss the model architecture and train- ing data used to construct this novel AI-based approach to FDT, evaluate the performance of AiBEDO when emulat- ing climate noise, and present a comparison of the AiBEDO response to MCB-like perturbations to the responses in the fully-coupled ESM. Finally, we propose strategies for esti- mating uncertainties in the AiBEDO response and exploring the possibility space of MCB intervention scenarios using AiBEDO. By assessing a wide range of MCB scenarios on a scale not possible with ESM experimentation, we aim to determine optimal scenarios to avoid crossing potential tip- ping points and rule out scenarios with undesirable impacts on tipping points. Methods Model Architecture Here, we describe the generation of the AiBEDO operator Ato map input radiative Ô¨Çux anomalies at time t(input: ~ xi(t)2Rdcin) to corresponding output surface climate variable anomalies after a time lag (output:~ yi(t+)2 Rdcout). To tackle this, we formulate the problem as a pixel-wise regression problem, learning a mapping from in- put Ô¨Åelds to output Ô¨Åelds, A:Rdcin!Rdcout, where dis the dimension of the data, and cinandcoutare input and output channels, respectively, that are comprised of cli- mate variables (listed in Table 1). To train the model A, we minimizeLmse, the pixel-wise mean squared loss between the estimated climate response output b~ yand the ground-truth climate response ~ y, averaged over all dimensions of output: Lmse =1 coutdX kbyt+l yt+lk2 2; (5) Spherical Sampling The ESM data we use here is origi- nally on a regular latitude-longitude grid, which is difÔ¨Åcult to utilize for training purposes due to the large differences in grid areas between points near the equator versus those at the poles. SpeciÔ¨Åcally, it is challenging to accurately de- pict the Earth‚Äôs rotational symmetry through the use of two- dimensional meshes, leading to inaccurate representations of signiÔ¨Åcant climate patterns in ML models that assume a two-dimensional format of data. For this reason, we utilize a geodesy-aware spherical sampling that converts the 2D lati- tude longitude grid to a spherical icosahedral mesh. Icosahe- dral grids are speciÔ¨Åed at the lowest resolution by deÔ¨Åning twenty equilateral triangles to form a convex polygon, called an icosahedron. The vertices of the icosahedron are equally spaced points on the sphere that circumscribes it. The reso- lution of the mesh can be increased by dividing each edge of the icosahedron in half and projecting each new point onto the circumscribed sphere. By resampling in this manner, we are able to iteratively increase the resolution on the sphere. Here, we perform bilinear interpolation (non-conservative) from 2-D climate data to a level-5 icosahedral grid which whose vertices deÔ¨Åne a 1-D vector of length 10242 (i.e, d =10242) with a nominal resolution of 220 km. Machine Learning method In this work, we utilize a Multi-Layer Perceptron (MLP) model. MLP models have proven to be effective for spatio-temporal modeling of ESM data (Park, Yoo, and Nadiga 2019; Wang et al. 2014). MLP is a representative structure of Deep Neural Networks (DNNs) in which an input and an output layer are inter-connected with multiple hidden layers. Each node in a given layer is fully connected with all nodes in the previous layer. The con- nection between any two nodes represents a weighted value that passes through the connection signal between them. A non-linear activation function is used in each node to repre- sent non-linear correlation in the connection between nodes. The operation between consecutive layers is deÔ¨Åned as mul- tiplication between nodes in previous layer and correspond- ing weight parameters, and applying activation function. Here, we use MLP with 4-hidden layers and 1024 nodes in each layer with layer normalization (Ba, Kiros, and Hin- ton 2016). We use Gaussian error linear units (Gelu) activa- tion in each layer (Hendrycks and Gimpel 2016). We com- bine MLP with the spherical sampling approach to create an S-MLP architecture to generate A. A schematic of our S-MLP model architecture is shown in Figure 1. Figure 1: Schematic view of the Spherical Multi-Layer Per- ceptron (S-MLP) model used in this study. Training data Because the signal-to-noise ratio in short-term climate Ô¨Çuc- tuations is small, FDT requires a large amount of train- ing data. We use a subset of the Community Earth System Model 2 Large Ensemble (CESM2-LE) as a source of inter- nal climate variations (Rodgers et al. 2021) (Table 2), specif- ically the 50 ensemble members in which historical simula- tions are forced with smoothed biomass burning emissions between 1997 and 2014. Each of these 50 ensemble mem- bers is forced identically, but is initialized with different ini- tial conditions, meaning that individual members differ only in the chaotic Ô¨Çuctuations internal to the climate system. As such, the CESM2-LE is one of the largest data sets of single- ESM CMIP6-generation simulations for training and testing our model, as it provides a total of nearly 100,000 months of data.We use a set of six input variables and three output vari- ables. These variables are listed in Table 1. The data are pre- processed by subtracting the ensemble mean of the LE at each grid point, month, and year of the historical time series. This removes both the seasonal cycle and long term secular trends in the data, leaving only monthly Ô¨Çuctuations inter- nal to the system. We then bilinearly remap the data from the original 2D latitude-longitude ESM grid to the spherical icosahedral grid for use by the AI model using Climate Data Operators (cdo; Schulzweida 2022). Validation dataset To validate AiBEDO‚Äôs ability to plausibly model the cli- mate response to MCB-like perturbations, we compare the AiBEDO response to responses from a novel set of fully dy- namic, coupled CESM2 simulations (Hirasawa et al. 2023). These simulations are summarized in Table 2. MCB forc- ing is imposed by increasing in-cloud liquid cloud droplet number concentrations to 600cm 3within three selected re- gions in the northeast PaciÔ¨Åc, southeast PaciÔ¨Åc, and south- east Atlantic, together and separately in SSP2-4.5 simula- tions (Shared Socioeconomic Pathway 2 - 4.5Wm 2forc- ing). The effect of MCB is then calculated by taking the dif- ference between the perturbed simulations and the baseline SSP2-4.5 simulations. In addition to the coupled CESM2 simulations, we have conducted ‚ÄúÔ¨Åxed-sea surface tempera- ture‚Äù (Ô¨Åxed SST) simulations, wherein the MCB-like forc- ing is imposed in the model with SSTs held to climatolog- ical values. These are used to calculate the effective radia- tive forcing (ERF) due to the MCB forcing (Forster et al. 2016). AiBEDO is perturbed ( ~f) with the annual mean cres ,crel ,cresSurf ,crelSurf ,netTOAcs , and netSurfcs anomaly Ô¨Åelds from the year-2000 MCB Per- turbed minus year-2000 Control simulations. Thus, we can compare AiBEDO and CESM2 responses to the same MCB ERF. Note that it is crucial that ~fis computed using Ô¨Åxed SST simulations, as radiation anomalies computed this way do not include radiative feedbacks, which are considered to be part of the response rather than the forcing. In principle, the effects of these feedbacks are encoded in the mappings AiBEDO has learned. Thus, AiBEDO responses using radi- ation perturbations computed from coupled CESM2 simu- lations avoids ‚Äúdouble counting‚Äù the effect of the radiative feedbacks. In order to calculate the response to the radiative pertur- bations, we Ô¨Årst run AiBEDO on 480 randomly sampled months of preprocessed CESM2 internal variability radia- tion anomalies to obtain a control ensemble of AiBEDO out- puts. Then, we run AiBEDO on the same 480-month sample, but with the MCB radiation perturbations added to the vari- ability, giving us a perturbed ensemble of AiBEDO outputs. The impact of the MCB perturbations is estimated as the dif- ference between the control and perturbed AiBEDO outputs. This is repeated for the different time lags. This methodol- ogy ensures that the input anomaly Ô¨Åelds in the simulations are not too different from the model training data set. Run- ning AiBEDO with the regional radiation perturbations re- sults in artifacts, as the near-zero anomalies outside the per- Variable Description Role in AiBEDO cres Net TOA shortwave cloud radiative effect input crel Net TOA longwave cloud radiative effect input cresSurf Net Surface shortwave cloud radiative effect input crelSurf Net Surface longwave cloud radiative effect input netTOAcs Net TOA clear-sky radiative Ô¨Çux input netSurfcs Net surface clear-sky radiative Ô¨Çux plus all-sky surface heat Ô¨Çux input lsMask Land fraction input ps Surface pressure output tas Surface air temperature output pr Precipitation output Table 1: Name, description, and use by AiBEDO of variables derived from CESM2 LE historical smoothed biomass burning monthly mean data. Thus, cin= 7 channels and cout= 3 channels. All radiative and heat Ô¨Çuxes at the surface and top of atmosphere (TOA) are positive down. Experiment Role Forcing Time span N Historical LE training, testing, validation historical 1850 - 2015 50 Y2000 Control perturbation Year 2000 Fixed SST 1 - 20 N/A Y2000 MCB Perturbed perturbationYear 2000 Fixed SST + MCB in NEP, SEP, and SEA1 - 10 N/A SSP2-4.5 LE response validation SSP2-4.5 2015 - 2100 17 SSP2-4.5 + ALL MCB response validationSSP2-4.5 + MCB in NEP, SEP, and SEA2015 - 2065 3 SSP2-4.5 + NEP response validation SSP2-4.5 + MCB in NEP 2015 - 2065 3 SSP2-4.5 + SEP response validation SSP2-4.5 + MCB in SEP 2015 - 2065 3 SSP2-4.5 + SEA response validation SSP2-4.5 + MCB in SEA 2015 - 2065 3 Table 2: CESM2 simulations used to train and verify AiBEDO. NEP, SEP, SEA denote regions where 600cm 3CDNC MCB forcing is imposed, where NEP - Northeast PaciÔ¨Åc (0 to 30N; 150W to 110W), SEP - Southeast PaciÔ¨Åc (30S to 0; 110W to 70W), SEA - Southeast Atlantic (0 to 30N; 25W to 15E). Note the Ô¨Åxed SST simulations use constant climatological conditions, so we do not note speciÔ¨Åc years for these simulations. turbation regions are entirely unlike any Ô¨Åelds the model is trained on. Model training and inference The decoupled weight decay regularization optimization method, AdamW (Loshchilov and Hutter 2017) was utilized to train our model in an iterative manner. The learning rate was initially set to 210 4and exponentially decayed at a rate of 110 6per epoch. We trained the model for 15 epochs with a batch size of 10. Our S-MLP models have  108M trainable parameters, and it takes around 1 minute per single epoch for training. The model inference takes an av- erage of 0.5 seconds per data point to generate a prediction. Results Emulation of Climate Noise We validate the baseline performance of AiBEDO for em- ulating the connection between input radiative Ô¨Çuxes to the output surface climate variables (i.e. equation 2) for a sam- ple of preprocessed CESM2 data in Fig. 2 a-f from the CESM2‚Äôs CMIP6 contribution, data that is not included in the training dataset but uses the same ESM and bound- ary conditions. This is done by Ô¨Årst running AiBEDO witha set of preprocessed input variables from CESM2, then computing the root mean squared error (RMSE) of the re- sulting AiBEDO output time series with the corresponding lagged CESM2 output time series at each grid point. We Ô¨Ånd that the RMSE is generally highest in regions where internal variability is also high, such as high tas (Fig. 2a) andps(Fig. 2e) RMSE at high latitudes and high pr(Fig. 2c) RMSE in the tropics. We then compute the ratio of the RMSE and the CESM2 standard deviation in time: smaller values identify regions where AiBEDO performs best rela- tive to the internal climate noise. This ratio indicates that for all three output variables (Fig. 2b,d,f), AiBEDO performs substantially better in the tropics and subtropics and over oceans, with the tropical PaciÔ¨Åc in particular being well rep- resented (this may be a result of the high variance explained by the El Nino-Southern Oscillation). The ratio is slightly under 1 for much of the mid and high latitudes and over land, especially for pr, which may be a consequence of the re- moval of the seasonal cycle and less direct radiation-surface climate connections in these regions, as they are strongly controlled by synoptic variability. There are a few regions where AiBEDO has a greater than 1 ratio, notably for prin the dry regions of the subtropical south PaciÔ¨Åc and Atlantic 2d. This again may be a consequence of missing seasonal in- Figure 2: One-month lag AiBEDO compared to CESM2 LE data (a-f). Panels a,c,e show the root mean squared error (RMSE) computed in the time dimension at each icosahedral spherical grid point calculate across 480 months. Panels b,d,f show the ratio of RMSE to the standard deviation of the preprocessed data. Panels a,b show surface temperature ( tas), c,d show precipitation (pr), and e,f show surface pressure ( ps). Panels h,g show the normalized RMSE (h) and correlations (g) computed along the spatial dimension in solid lines for the three output variables from different AiBEDO lag models. Dashed lines show the normalized RMSE and correlation computed assuming that the anomaly at month 0 remains the same over time (i.e. the persistence null hypothesis). RMSE here is normalized by the climatological spatial standard deviation of the output variable anomalies. formation, as the rainfall in the region is linked to seasonal shifts in the intertropical convergence zone. Fig. 2 g,h shows the spatial RMSE (normalized by the standard deviation) and correlation scores for different ver- sions of AiBEDO trained at different lags respectively. As lag increases, the predictive skill of the model decreases as expected. Notably, we Ô¨Ånd that the model outperforms per- sistence consistently across time lags, indicating AiBEDO has learned a considerable amount of information beyond the simple memory of 0-month temperature anomalies. We see that AiBEDO performs better than background climate noise even at relatively long time 36-month time lags with best performance for precipitation, followed by temperature and surface pressure. Because the normalized RMSE be- comes approximately one after 24 months and the correla- tion drops to zero at 48-months for all three variables, we select 48 months as the upper limit for the time lag integra- tion. Response to MCB perturbations To validate that AiBEDO can plausibly project climate re- sponses to MCB-like perturbations, we compare the CESM2 coupled model responses to those from the lag-integrated AiBEDO responses (i.e. equation 4) for radiative Ô¨Çux anomalies computed from Ô¨Åxed-SST MCB simulations. Here, we use a preliminary version of AiBEDO with lags = 1, 2, 3, 4, 5, 6, 12, 24, 36, and 48 months. To compute the lag integral we use Simpson‚Äôs rule integration to inter- polate between the unevenly spaced lags. Fig. 3 shows the CESM2 and AiBEDO responses for the three output vari- ables. We Ô¨Ånd that AiBEDO is able to reproduce the pattern of climate response to MCB, with correlation scores of 0.83 fortas, 0.72 for pr, and 0.8 for ps. However, there are substantial discrepancies in the magnitude of the responses, with AiBEDO generally projecting larger anomalies than CESM2. This is reÔ¨Çected in the relatively high RMSE when comparing the Ô¨Åelds. This magnitude discrepancy may be a result of the missing lags in the integration, which will be Ô¨Ålled in future versions of the model. Nevertheless, AiBEDO successfully identiÔ¨Åes key remote teleconnected responses to the MCB forcing, speciÔ¨Åcally the La Ni Àúna-like tas signal in the PaciÔ¨Åc, with strong cooling in the tropical PaciÔ¨Åc and warming in the midlatitudes east of Asia and Australia, as well as cooling over low-latitude land regions. One notable discrepancy is that northern Eura- sia warms in AiBEDO, while there is a weak cooling tas signal in CESM2. This may be in part due to the low signal to noise of the response in this region. AiBEDO also repro- duces key prchanges: it projects drying in northeast Brazil, central Africa, and southern North America and Europe and wetting in the Sahel, south and southeast Asia, Australia, and central America. Using these responses, we can esti- mate the tendency of MCB impacts to affect key regional tipping points. For example, Amazon and Sahel prchanges indicate increased risk of Amazon dieback and Sahel green- ing, respectively (Zemp et al. 2017; McKay et al. 2022). The general cooling of the tropical ocean suggests a reduced risk of coral dieoff tipping points. However, owing to the lower performance of AiBEDO at high latitudes, we may struggleto evaluate key crysopheric tipping points, such as Eurasian and North American permafrost loss. We also assess the impact of MCB forcing in the indi- vidual NEP, SEP, and SEA regions compared to CESM2 simulations with equivalent regional forcing (Fig. 4). We Ô¨Ånd that AiBEDO performance is weaker when considering these regional perturbations than when all three regions are perturbed together. In particular, AiBEDO‚Äôs performance when projecting the NEP forcing response declines from a global spatial correlation of 0.79 for ALL to 0.39 for NEP. AiBEDO correlations scores are better for SEA at 0.48 and best for SEP at 0.75. The weak NEP correlation is due to AiBEDO‚Äôs too-strong La Ni Àúna-like response in the PaciÔ¨Åc, possibly indicating that the model over-learns from the El NiÀúno-Southern Oscillation at the expense of other modes of variability. Nevertheless, AiBEDO correctly attributes cli- mate responses to the different forcing regions in several key regions. For example, it correctly identiÔ¨Åes that SEP forcing causes La Ni Àúna-like cooling and increases in South Asian, West Africa, and Australian rainfall; and Ô¨Ånds that SEA forcing causes tropical PaciÔ¨Åc warming and Amazon drying (not shown). In all four cases, AiBEDO performs bet- ter in the tropics relative to higher latitudes and better over oceans (Fig. 4b) than over land (Fig. 4c). This aligns with the regions where AiBEDO emulation skill is the highest (Fig. 2b), indicating that the ability of the model to correctly project climate responses to MCB forcing is closely related to its ability to emulate internal variability. Discussion In this study, we present a novel framework for rapidly pro- jecting climate responses to forcing by replacing the linear response function in FDT with a non-linear AI model, which we name AiBEDO. AiBEDO is a MLP model with spheri- cal sampling that maps the relationship between monthly- mean radiative Ô¨Çux anomalies and surface climate variable anomalies. The model successfully emulates the connection between variations in radiative Ô¨Çuxes and surface climate variables out to lags of several months. We verify AiBEDO‚Äôs projections for the case of MCB by comparison to fully cou- pled CESM2 MCB responses and Ô¨Ånd that our model is able to skillfully project the pattern of surface temperature, pre- cipitation, and surface pressure response to MCB. We argue the model has sufÔ¨Åcient skill to to be useful in estimating the effects of MCB interventions on regional climate indices re- lated to key tipping points, particularly at low latitudes and over oceans. For example, AiBEDO projections reproduce rainfall decreases in the southeast Amazon and increases in the Sahel found in reference CESM2 MCB simulations, in- dicative of increased risks to tipping points associated with Amazon dieback and Sahel greening. To the authors‚Äô knowledge, this is the Ô¨Årst application of Fluctuation-Dissipation theory to climate data using AI methods. We use a generalization of linear FDT with which we can use a non-linear model to generate mean climate responses to radiative Ô¨Çux anomalies. Notably we use a large single-ESM ensemble of climate model data, which is crucial for AiBEDO to successfully learn the mapping Figure 3: Annual mean temperature (top row - a,b), precipitation (middle row - c,d), and surface pressure (bottom row - e,f) anomalies due to a constant MCB-like forcing for CESM2 (left column) and AiBEDO (right column). Note that the color scale is larger in the AiBEDO Ô¨Ågures. Spatial correlation scores and RMSE between the CESM2 and AiBEDO are displayed in the Ô¨Ågure labels on the left side. Figure 4: Correlation scores between CESM2 and AiBEDO tas responses to MCB forcing for both land and ocean (a), just ocean (b), and just land (c) in different latitude bands for all MCB regions (ALL), Northeast PaciÔ¨Åc (NEP), southeast PaciÔ¨Åc (SEP), and Southeast Atlantic (SEA).between climate variables, particularly as the time lag in- creases. Thus, large ensembles like the CESM2-LE are vital resources for training models like AiBEDO. This produces a novel AI model that can plausibly project the impact of MCB on climate, opening the possibility of exploring forc- ing scenarios on a vastly larger scale than is possible with ESMs. We note that while we have selected radiative Ô¨Çux vari- ables as inputs and surface climate variables as outputs here, in principle AI-FDT can be applied to any set of inputs and outputs for which there is sufÔ¨Åcient signal-to- noise for a model to learn. Thus, AI models of this kind have the potential to serve as tools with which large ex- isting datasets can be leveraged to generate Ô¨Årst look esti- mates prior to undertaking computationally expensive new ESM simulations, as an AiBEDO projection can be gener- ated inO(101)processor-seconds while just one of the cou- pled CESM2 MCB simulations we performed here required O(109)processor-seconds. Future Work To provide practical information about climate responses to forcing, we must estimate the uncertainty in the projec- tions. Here we only consider the uncertainty due to internal variability in the input data when running AiBEDO, but we must also consider uncertainty due to the underlying training dataset. In particular, because ESMs are only an approxima- tion of the real world, different ESMs exhibit different inter- nal Ô¨Çuctuations. In the case of climate modeling, multi-ESM ensembles, made possible by the Coupled Model Intercom- parison Project (CMIP), can be used to quantify this model uncertainty. Thus, we plan to develop an analogous ensem- ble of AiBEDO models trained on internal Ô¨Çuctuations from different ESMs. Because of the large data requirements of training AiBEDO, we must use single-model initial con- dition Large Ensembles, of which there exist several from CMIP5 and CMIP6 ESMs (Deser et al. 2020), such as the MPI-ESM1.1 Grand Ensemble (Maher et al. 2019) and the CanESM2 Large Ensemble (Kushner et al. 2018). Furthermore, though we have veriÔ¨Åed AiBEDO perfor- mance in the response to MCB here (which is largely a shortwave cloud perturbation), AiBEDO includes longwave and clearsky input variables. Thus, AiBEDO may be able to project responses to greenhouse gas and anthropogenic sulphate forcings (both tropospheric pollution and strato- spheric injections). We therefore plan to apply AiBEDO to these forcings as well by perturbing the model with ERFs computed from Ô¨Åxed SST simulations with these emissions (Forster et al. 2016). Using the rapid generation of projections enabled by AiBEDO, we will also develop a method for optimizing MCB forcing patterns to achieve regional climate targets, drawing from the robust existing body of AI-based opti- mization methods. This will allows us to explore an array of possible MCB scenarios to Ô¨Ånd which ones may produce desirable regional outcomes. For example, which MCB forc- ing pattern might achieve the greatest global mean cooling while minimizing drying in the Amazon? Or which patterns minimize polar ampliÔ¨Åcation? This exploration will acceler- ate the generation of policy-relevant MCB forcing scenarios and allow estimates of the scenario uncertainty in MCB in- tervention impacts, which is arguably the largest uncertainty in SRM generally (MacMartin et al. 2022). Acknowledgements We thank Linda Hedges of Silver Lining and Brian Dob- bins of the National Center for Atmospheric Research for their assistance with AWS and CESM2 computing. The de- velopment of AIBEDO is funded under the DARPA AI- assisted Climate Tipping-point Modeling (ACTM) program under award DARPA-PA-21-04-02. AiBEDO training and CESM2 simulations were performed using Amazon Web Services (AWS) computing resources thanks to a gener- ous computing grant from Amazon. We thank the CESM2 Large Ensemble Community Project and supercomputing resources provided by the IBS Center for Climate Physics in South Korea. Documentation of this project can be found at https://aibedo.readthedocs.io/en/latest/index.html.References Ba, J. L.; Kiros, J. R.; and Hinton, G. E. 2016. Layer nor- malization. arXiv preprint arXiv:1607.06450 . Cionni, I.; Visconti, G.; and Sassi, F. 2004. Fluctuation dis- sipation theorem in a general circulation model: FDT IN A GENERAL CIRCULATION MODEL. Geophysical Re- search Letters , 31(9): n/a‚Äìn/a. Deser, C.; Lehner, F.; Rodgers, K. B.; Ault, T.; Delworth, T. L.; DiNezio, P. N.; Fiore, A.; Frankignoul, C.; Fyfe, J. C.; Horton, D. E.; Kay, J. E.; Knutti, R.; Lovenduski, N. S.; Marotzke, J.; McKinnon, K. A.; Minobe, S.; Randerson, J.; Screen, J. A.; Simpson, I. R.; and Ting, M. 2020. Insights from Earth system model initial-condition large ensembles and future prospects. Nature Climate Change , 10(4): 277‚Äì 286. Diamond, M. S.; Gettelman, A.; Lebsock, M. D.; Mc- Comiskey, A.; Russell, L. M.; Wood, R.; and Feingold, G. 2022. To assess marine cloud brightening‚Äôs technical feasi- bility, we need to know what to study‚Äîand when to stop. Proceedings of the National Academy of Sciences , 119(4): e2118379119. Forster, P. M.; Richardson, T.; Maycock, A. C.; Smith, C. J.; Samset, B. H.; Myhre, G.; Andrews, T.; Pincus, R.; and Schulz, M. 2016. Recommendations for diagnosing ef- fective radiative forcing from climate models for CMIP6: RECOMMENDED EFFECTIVE RADIATIVE FORCING. Journal of Geophysical Research: Atmospheres , 121(20): 12,460‚Äì12,475. Hendrycks, D.; and Gimpel, K. 2016. Gaussian error linear units (gelus). arXiv preprint arXiv:1606.08415 . Hirasawa, H.; Hingmire, D.; Singh, H.; Rasch, P. J.; Kim, S.; Hazarika, S.; Mitra, P.; and Ramea, K. 2023. Impact of Re- gional Marine Cloud Brightening Interventions on Climate Tipping Points. In Preparation . Jones, A.; Haywood, J.; and Boucher, O. 2009. Climate impacts of geoengineering marine stratocumulus clouds. Journal of Geophysical Research: Atmospheres , 114(D10): 2008JD011450. Kubo, R. 1966. The Ô¨Çuctuation-dissipation theorem. Re- ports on Progress in Physics , 29(1): 255. Kushner, P. J.; Mudryk, L. R.; MerryÔ¨Åeld, W.; Ambadan, J. T.; Berg, A.; Bichet, A.; Brown, R.; Derksen, C.; D ¬¥ery, S. J.; Dirkson, A.; Flato, G.; Fletcher, C. G.; Fyfe, J. C.; Gillett, N.; Haas, C.; Howell, S.; Lalibert ¬¥e, F.; McCusker, K.; Sigmond, M.; Sospedra-Alfonso, R.; Tandon, N. F.; Thackeray, C.; Tremblay, B.; and Zwiers, F. W. 2018. Cana- dian snow and sea ice: assessment of snow, sea ice, and re- lated climate processes in Canada‚Äôs Earth system model and climate-prediction system. The Cryosphere , 12(4): 1137‚Äì 1156. Latham, J.; Bower, K.; Choularton, T.; Coe, H.; Connolly, P.; Cooper, G.; Craft, T.; Foster, J.; Gadian, A.; Galbraith, L.; Iacovides, H.; Johnston, D.; Launder, B.; Leslie, B.; Meyer, J.; Neukermans, A.; Ormond, B.; Parkes, B.; Rasch, P.; Rush, J.; Salter, S.; Stevenson, T.; Wang, H.; Wang, Q.; and Wood, R. 2012. Marine cloud brightening. Philo- sophical Transactions of the Royal Society A: Mathematical, Physical and Engineering Sciences , 370(1974): 4217‚Äì4262. Leith, C. 1975. Climate Response and Fluctuation Dissipa- tion. Journal of the Atmospheric Sciences , 32: 2022‚Äì2026. Liu, F.; Lu, J.; Garuba, O.; Leung, L. R.; Luo, Y .; and Wan, X. 2018. Sensitivity of Surface Temperature to Oceanic Forcing via q-Flux Green‚Äôs Function Experiments. Part I: Linear Response Function. Journal of Climate , 31(9): 3625‚Äì 3641. Loshchilov, I.; and Hutter, F. 2017. Decoupled weight decay regularization. arXiv preprint arXiv:1711.05101 . MacMartin, D. G.; Visioni, D.; Kravitz, B.; Richter, J.; Fel- genhauer, T.; Lee, W. R.; Morrow, D. R.; Parson, E. A.; and Sugiyama, M. 2022. Scenarios for modeling solar radiation modiÔ¨Åcation. Proceedings of the National Academy of Sci- ences , 119(33): e2202230119. Maher, N.; Milinski, S.; Suarez-Gutierrez, L.; Botzet, M.; Dobrynin, M.; Kornblueh, L.; Kr ¬®oger, J.; Takano, Y .; Ghosh, R.; Hedemann, C.; Li, C.; Li, H.; Manzini, E.; Notz, D.; Putrasahan, D.; Boysen, L.; Claussen, M.; Ilyina, T.; Olon- scheck, D.; Raddatz, T.; Stevens, B.; and Marotzke, J. 2019. The Max Planck Institute Grand Ensemble: Enabling the Exploration of Climate System Variability. Journal of Ad- vances in Modeling Earth Systems , 11(7): 2050‚Äì2069. Majda, A. J.; Abramov, R.; and Gershgorin, B. 2010. High skill in low-frequency climate response through Ô¨Çuctuation dissipation theorems despite structural instability. Proceed- ings of the National Academy of Sciences , 107(2): 581‚Äì586. McKay, D. I. A.; Staal, A.; Abrams, J. F.; Winkelmann, R.; Sakschewski, B.; Loriani, S.; Fetzer, I.; Cornell, S. E.; Rock- str¬®om, J.; and Lenton, T. M. 2022. Exceeding 1.5¬∞C global warming could trigger multiple climate tipping points. Sci- ence, 377: 6611. Park, J. H.; Yoo, S.; and Nadiga, B. 2019. Machine learning climate variability. In Proceedings of the 33rd Conference on Neural Information Processing Systems (NeurIPS), Van- couver, BC, Canada , 8‚Äì14. Rasch, P. J.; Latham, J.; and Chen, C.-C. J. 2009. Geoengi- neering by cloud seeding: inÔ¨Çuence on sea ice and climate system. Environmental Research Letters , 4(4): 045112. Rodgers, K. B.; Lee, S.-S.; Rosenbloom, N.; Timmermann, A.; Danabasoglu, G.; Deser, C.; Edwards, J.; Kim, J.-E.; Simpson, I. R.; Stein, K.; Stuecker, M. F.; Yamaguchi, R.; B¬¥odai, T.; Chung, E.-S.; Huang, L.; Kim, W. M.; Lamarque, J.-F.; Lombardozzi, D. L.; Wieder, W. R.; and Yeager, S. G. 2021. Ubiquity of human-induced changes in climate vari- ability. Earth System Dynamics , 12(4): 1393‚Äì1411. Schulzweida, U. 2022. CDO User Guide (2.1.0). Stjern, C. W.; Muri, H.; Ahlm, L.; Boucher, O.; Cole, J. N. S.; Ji, D.; Jones, A.; Haywood, J.; Kravitz, B.; Lenton, A.; Moore, J. C.; Niemeier, U.; Phipps, S. J.; Schmidt, H.; Watanabe, S.; and Kristj ¬¥ansson, J. E. 2018. Response to marine cloud brightening in a multi-model ensemble. Atmo- spheric Chemistry and Physics , 18(2): 621‚Äì634.Wang, J.; Zhang, W.; Wang, J.; Han, T.; and Kong, L. 2014. A novel hybrid approach for wind speed prediction. Infor- mation Sciences , 273: 304‚Äì318. Zemp, D. C.; Schleussner, C.-F.; Barbosa, H. M. J.; Hirota, M.; Montade, V .; Sampaio, G.; Staal, A.; Wang-Erlandsson, L.; and Rammig, A. 2017. Self-ampliÔ¨Åed Amazon forest loss due to vegetation-atmosphere feedbacks. Nature Com- munications , 8(1): 14681","physics.ao-ph, cs.AI, J.2; I.2.1",Arxiv
46,Human Comprehensible Active Learning of Genome-Scale Metabolic Networks,"Lun Ai, Shi-Shun Liang, Wang-Zhou Dai, Liam Hallett, Stephen H. Muggleton, Geoff S. Baldwin",2023-08-24 12:42:00+00:00,http://arxiv.org/pdf/2308.12740v2,"An important application of Synthetic Biology is the engineering of the host cell system to yield useful products. However, an increase in the scale of the host system leads to huge design space and requires a large number of validation trials with high experimental costs. A comprehensible machine learning approach that efficiently explores the hypothesis space and guides experimental design is urgently needed for the Design-Build-Test-Learn (DBTL) cycle of the host cell system. We introduce a novel machine learning framework ILP-iML1515 based on Inductive Logic Programming (ILP) that performs abductive logical reasoning and actively learns from training examples. In contrast to numerical models, ILP-iML1515 is built on comprehensible logical representations of a genome-scale metabolic model and can update the model by learning new logical structures from auxotrophic mutant trials. The ILP-iML1515 framework 1) allows high-throughput simulations and 2) actively selects experiments that reduce the experimental cost of learning gene functions in comparison to randomly selected experiments.","Human Comprehensible Active Learning of Genome-Scale Metabolic Networks Lun Ai1, Shi-Shun Liang2, Wang-Zhou Dai3, Liam Hallett2, Stephen H. Muggleton1, Geoff S. Baldwin2 1Department of Computing,2Department of Life Science, Imperial College London, UK. 3School of Intelligence Science and Technology, Nanjing University, China. {lun.ai15,shishun.liang20,l.hallett19, s.muggleton, g.baldwin }@imperial.ac.uk, daiwz@nju.edu.cn Abtract An important application of Synthetic Biology is the engineering of the host cell system to yield useful products. However, an increase in the scale of the host system leads to huge design space and requires a large number of validation trials with high experimental costs. A comprehensible machine learning approach that efficiently explores the hypothesis space and guides experimental design is urgently needed for reliable host cell engineering. We introduce a novel machine learning framework ILP-iML1515 based on Inductive Logic Programming (ILP). ILP-iML1515 actively learns abduced hypotheses of gene functions from auxotrophic mutant trials. In contrast to numerical models, ILP-iML1515 is built on comprehensible logical representations of a genome-scale metabolic model of E.coli , iML1515, and can update the model by learning new logical terms. We show that ILP-iML1515 framework 1) allows high- throughput simulations and 2) actively selects experiments that reduce the experimental cost of learning gene functions in comparison to randomly selected experiments. 1 Introduction Escherichia coli (E.coli ) is a widely accepted recombinant host for synthesising key products. The most comprehensive metabolic model of E.coli [5] to date, iML1515, comprises 1515 genes and 2719 metabolic reactions. However, iML1515 is incomplete with respect to core gene functions and it has been demonstrated to contain errors [1]. Correction of the host metabolic network would improve its reliability, but the complexity of GEMs and experimental design space makes learning challenging both from the computational and experimental standpoint. Computational approaches to efficiently learn and navigate the design space would greatly enhance our ability to predictably engineer these biological systems. We present preliminary results of a new framework ILP-iML1515 that uses Inductive Logic Programming (ILP) techniques [6]. We show that active learning of abduced hypotheses can be applied to genome-scale metabolic network models (GEMs). This study examines the most comprehensive GEM of E. coli, iML1515 [5]. The biochemical, genetic, and genomic knowledge bases in iML1515 are compiled into logical representations that express the relationship between genes, reactions and metabolites. Such symbolic representations can be inspected by experts and are further processed into a novel matrix encoding for phenotype simulation. Through this new framework, we demonstrate a 4000-fold improvement in computational time, making whole- genome hypothesis generation and validation more accessible. We implement active learning to select auxotrophic mutant experiments that provide the maximal information entropy to discriminate candidate hypotheses with low experimental resource cost. To show the capability of ILP-iML1515, we delete gene functions in iML1515 and learn from hypotheses that cover all gene-enzyme associations in iML1515. The framework successfully recovers these removed gene functions from active learning with1 10of the experimental resource cost spent by randomly selected experiments. 2 Related work Computational scientific discovery has been central to the research of Artificial Intelligence (AI). Modelling of biosynthetic systems typically involves genetic devices whose information can be effectively encoded in a symbolic and discrete format [3]. Knowledge-driven AI utilises the domain knowledge to prune a discrete search space for symbolic hypotheses. In comparison, the 1arXiv:2308.12740v2  [cs.AI]  31 Aug 2023 quantitative engineering of biological pathways depends on numerical structures or constraints. This approach is represented by evolutionary and deep learning algorithms [8, 9, 2] which learn numerical functions based on a large number of annotated data and extensive trial-and-errors. Owing to the lack of expressiveness, changing the structure of these machine learning systems and updating background knowledge are often difficult. The application of these systems in an experimental workflow is thus limited by flexibility, data efficiency and interpretability. Inductive Logic Programming (ILP) [6] is a logic-based machine learning approach driven by both background knowledge and data. Examples, hypotheses, and background knowledge are represented by logic programs. Hypothesis generation and abduction which are core to scientific discovery, are facilitated by ILP [7]. Logic programs are interpretable representations and are well-suited for operating on structured knowledge bases such as biological models. The Robot Scientist [4] demonstrated that abductive learning could be used to learn metabolic networks faster and at less cost than random experiments. However, this demonstration was based on a metabolic network of only 17 genes in aromatic amino acid pathways. In contrast, our ILP-iML1515 framework implements the genome-scale metabolic network model iML1515 that includes 1515 genes and 2719 reactions. 3 Framework No. Genes Robot 17 Scientist ILP-iML1515 1515 Table 1: Model sizes. Figure 1: ILP-iML1515 framework. ILP-iML1515 operates on a model that is nearly 90 times larger than the model encoded in the Robot Scientist (Table 1). Our framework (Figure 1) takes discretised data that describe phenotype observations in selected auxotrophic mutant experiments. The outcomes of the experiments are supplied by online databases or the laboratory. We implement a novel matrix encoding of metabolic reactions in iML1515. iML1515 is first converted into logical representations that express the coding function of genes ( codes , enzyme ) and the involvement of metabolites in reactions ( reaction ,metabolites ). Figure 1 shows an example of these logical terms. Based on these terms, we assemble several binary vectors and matrices. These are used to saturate the synthesisable set of metabolites by mutant strains. Metabolite saturation is dependent on the knockout gene of the auxotrophic mutants and the growth media. Given a defined set of hypothesised gene functions, synthetic phenotypic data are simulated by applying binary operations to binary vectors and matrices. Binary operations compute the closure set of synthesisable metabolites and we make a binary phenotypic classification according to the inclusion of essential metabolites. Simulated phenotypes are assessed against experimental observations. Test outcomes are supplied to the abductive reasoning module where we confirm hypotheses consistent with the experimental outcomes and prune the inconsistent hypotheses. All candidate hypotheses are generated from compiled knowledge bases. The remaining hypotheses are tested with further experiments suggested by active learning. Based on information entropy, the active learning module selects experiments that maximise the discrimination between candidate 2 Wall time per simulation (sec) Robot Scientist ILP-iML1515 No parallelisation 250 0.6 20 CPUs 27 0.06 Table 2: Simulation run-time efficiency. hypotheses and minimise the expected cost of experimental resources. To complete the cycle, experiments that are actively selected will be conducted in the laboratory or consulted from online data sources. 4 Results Figure 2: Experimental cost reduction. In GEMs, abduction of gene function hypotheses and in-vivo validations requires exploring large hypothesis spaces and design spaces. Both are challenging due to the complexity of these models and the cost of conducting physical experiments. Our results show that the ILP-iML1515 framework can efficiently perform phenotype simulations and actively suggest informative experiments to be performed in the laboratory. Based on abductive logical reasoning [7] and active learning [4], we automate the selection of experiments to optimise experimental resources. In Table 2, we examine the computational efficiency of our new logical matrix encoding against the metabolic model encoding in the Robot Scientist [4]. The Robot Scientist encoding of iML1515 has been adapted to the same logic programming environment (SWI-Prolog) as ILP- iML1515. We compare the average simulation time of our new logical matrix encoding against the metabolic model encoding in Robot Scientist. We take advantage of the parallelisation with this encoding and computation runtime has been improved significantly. With multiple core 3 parallelisation, logical matrix encoding uses1 4000of the simulation time. In Figure 2, we compare the effect of actively selected experiments for recovering known gene functions. ILP-iML1515 was used to generate synthetic data of 23617 single-knockout trials [5]. Active learning algorithm (ase) is contrasted against two alternative trial selection methods: selection of the cheapest trials (naive) and random trial selection (random). We randomly sampled three genes in the iML1515 model. To create the incomplete models, we removed one gene function from the three. For abduction, we generated potential gene-enzyme mappings for all enzyme functions in iML1515. We recover the model by introducing the consistent abduced hypothesis. The synthetic trial outcomes are compared against trial outcomes predicted by recovered models. The y-axis is the sum of the chemical cost in log10when selected trials are performed. Since predictions of recovered models are compared with synthetic data, 100% predictive accuracy indicates successful recovery of the deleted gene functions. Both active learning (blue) and random trial selection (green) enable the correct gene functions to be learned (100% accuracy). However, active learning only uses 1/10 the cost of random selection (red dotted lines). 5 Future Work Future work aims to integrate this approach with a high-throughput experimental workflow. The focus will be to use CRISPRi, an advanced biological gene editing tool, to target repress genes for experimental confirmation of candidate hypotheses during active learning. Importantly this approach will enable us to address multiple gene-loci in combination, which are not addressable by current mutagenesis approaches. References [1] D. B. Bernstein, B. Akkas, M. N. Price, and A. P. Arkin. Critical assessment of E. coli genome-scale metabolic model with high-throughput mutant fitness data, 2023. [2] R. T. Q. Chen, Y. Rubanova, J. Bettencourt, and D. Duvenaud. Neural ordinary differential equations. In Proceedings of the 32nd International Conference on Neural Information Processing Systems , page 6572‚Äì6583, 2018. [3] D. Endy. Foundations for Engineering Biology. Nature , 438:449‚Äì53, 12 2005. [4] R. D. King, K. E. Whelan, F. M. Jones, P. G. K. Reiser, C. H. Bryant, S. H. Mug- gleton, D. B. Kell, and S. G. Oliver. Functional genomic hypothesis generation and experimentation by a robot scientist. Nature , 427:247‚Äì252, 2004. [5] J. M. Monk, C. J. Lloyd, E. Brunk, N. Mih, A. Sastry, Z. King, R. Takeuchi, W. No- mura, Z. Zhang, H. Mori, A. M. Feist, and B. O. Palsson. iML1515, a knowledgebase that computes escherichia coli traits. Nature Biotechnology , 35(10):904‚Äì908, 2017. [6] S. H. Muggleton. Inductive logic programming. New Generation Computing , 8:295‚Äì318, 1991. [7] S. H. Muggleton and C. H. Bryant. Theory completion using inverse entailment. InProceedings of the 10th International Workshop on Inductive Logic Programming (ILP-00) , pages 130‚Äì146, 2000. [8] M. Schmidt and H. Lipson. Distilling free-form natural laws from experimental data. science , 324(5923):81‚Äì85, 2009. [9] S. Udrescu and M. Tegmark. AI Feynman: A physics-inspired method for symbolic regression. Science Advances , 6(16), 2020. 4","cs.AI, cs.LG, q-bio.MN, q-bio.QM",Arxiv
47,How Real Is Real? A Human Evaluation Framework for Unrestricted Adversarial Examples,"Dren Fazlija, Arkadij Orlov, Johanna Schrader, Monty-Maximilian Z√ºhlke, Michael Rohs, Daniel Kudenko",2024-04-19 06:42:01+00:00,http://arxiv.org/pdf/2404.12653v1,"With an ever-increasing reliance on machine learning (ML) models in the real world, adversarial examples threaten the safety of AI-based systems such as autonomous vehicles. In the image domain, they represent maliciously perturbed data points that look benign to humans (i.e., the image modification is not noticeable) but greatly mislead state-of-the-art ML models. Previously, researchers ensured the imperceptibility of their altered data points by restricting perturbations via $\ell_p$ norms. However, recent publications claim that creating natural-looking adversarial examples without such restrictions is also possible. With much more freedom to instill malicious information into data, these unrestricted adversarial examples can potentially overcome traditional defense strategies as they are not constrained by the limitations or patterns these defenses typically recognize and mitigate. This allows attackers to operate outside of expected threat models. However, surveying existing image-based methods, we noticed a need for more human evaluations of the proposed image modifications. Based on existing human-assessment frameworks for image generation quality, we propose SCOOTER - an evaluation framework for unrestricted image-based attacks. It provides researchers with guidelines for conducting statistically significant human experiments, standardized questions, and a ready-to-use implementation. We propose a framework that allows researchers to analyze how imperceptible their unrestricted attacks truly are.","How Real Is Real? A Human Evaluation Framework for Unrestricted Adversarial Examples Dren Fazlija1, Arkadij Orlov2, Johanna Schrader1, Monty-Maximilian Z ¬®uhlke1, Michael Rohs2, Daniel Kudenko1 1L3S Research Center, Appelstr. 4, 30167 Hannover, Germany 2Leibniz University Hannover, Welfengarten 1, 30167 Hannover, Germany {dren.fazlija, schrader, zuehlke, kudenko }@l3s.de, arkadij.orlov@stud.uni-hannover.de, michael.rohs@hci.uni-hannover.de Abstract With an ever-increasing reliance on machine learning (ML) models in the real world, adversarial examples threaten the safety of AI-based systems such as autonomous vehicles. In the image domain, they represent maliciously perturbed data points that look benign to humans (i.e., the image modifica- tion is not noticeable) but greatly mislead state-of-the-art ML models. Previously, researchers ensured the imperceptibility of their altered data points by restricting perturbations via ‚Ñìpnorms. However, recent publications claim that creating natural-looking adversarial examples without such restric- tions is also possible. With much more freedom to instill ma- licious information into data, these unrestricted adversarial examples can potentially overcome traditional defense strate- gies as they are not constrained by the limitations or patterns these defenses typically recognize and mitigate. This allows attackers to operate outside of expected threat models. How- ever, surveying existing image-based methods, we noticed a need for more human evaluations of the proposed image modifications. Based on existing human-assessment frame- works for image generation quality, we propose S COOTER ‚Äì an evaluation framework for unrestricted image-based at- tacks. It provides researchers with guidelines for conduct- ing statistically significant human experiments, standardized questions, and a ready-to-use implementation. We propose a framework that allows researchers to analyze how impercep- tible their unrestricted attacks truly are. Introduction Since 2013, it has been well-established that malicious en- tities can mislead sophisticated computer vision models by adding imperceptible noise to images (Szegedy et al. 2013). The resulting adversarial examples (AEs) look benign to hu- mans. However, due to the restricted nature of the attacks, their effectiveness can be limited significantly through im- age pre-processing (Dziugaite, Ghahramani, and Roy 2016) and certified robust defense strategies (Li, Xie, and Li 2020). Hence, unrestricted AEs have garnered increasingly more interest in the last few years. Such attacks alter images sig- nificantly through modifications that humans easily over- look, which is achieved by taking semantic information into account. For example, (Shamsabadi, Sanchez-Matilla, and Cavallaro 2020) perform significant color changes only to AAAI 2024 Spring Symposium on User-Aligned Assessment of Adaptive AI Systems. Stanford University, Stanford, CA, USA.non-sensitive areas (e.g., furniture) that look natural to the human eye across a wide range of colors. Works on unre- stricted attacks should rigorously assess the imperceptibility of the resulting images, as this characteristic can no longer be assumed. However, few publications employ human eval- uation experiments to support their claim ‚Äì none of which offer statistically significant insights. Hence, providing the research community with a statistically significant human evaluation protocol based on well-established study design recommendations is crucial. Contributions. To facilitate research into unrestricted adversarial examples, we propose S COOTER (Systemizing Confusion OverObservations ToEvaluate Realness) ‚Äì a human evaluation framework for examining the qual- ity of unrestricted adversarial images (i.e., the impercep- tibility of modifications). Drawing inspiration from exist- ing tools (Otani et al. 2023) and following study design recommendations (Aguinis, Villamor, and Ramani 2021), SCOOTER enables researchers to make statistically signif- icant claims about the imperceptibility of image-based at- tacks. The S COOTER framework encompasses (i)a ready- to-use web application with a modular design allowing re- searchers to integrate their images easily; (ii)a carefully crafted study protocol that guides researchers in every step of performing online studies; (iii)an online leaderboard en- abling the comparisons of state-of-the-art attacks across dif- ferent target models; (iv)an image database containing all generated AEs for further analyses. State-Of-The-Art Assessment Protocols The most similar work to ours is the evaluation proto- col of (Otani et al. 2023) for analyzing the quality of Text-To-Image generators. The authors provide researchers with well-designed domain-specific questions and user in- terfaces, recommendations for several design choices (e.g., requirements that participants need to fulfill), and templates for reporting human evaluation results. While our goals align with the authors‚Äô, their protocol does not sufficiently guide inexperienced researchers in difficult aspects of experiment design. Most notable is the lack of methods to guarantee high-quality evaluation data. For example, their protocol does not cover standard measures like attention and instruc- tion manipulation checks. The researchers also publicly state their eligibility requirements, which is not recommended asarXiv:2404.12653v1  [cs.AI]  19 Apr 2024 it increases the self-misrepresentation of participants (Agui- nis, Villamor, and Ramani 2021; Bauer et al. 2020). In con- trast to their work, we aim to support inexperienced re- searchers by rigorously defining every detail of the study design. Another adjacent publication (Zhou et al. 2019) pro- vides a basic framework for collecting human image qual- ity assessments. While the resulting protocols HYPE timeand HYPE‚àûare widely used in subjective image quality assess- ment tasks, they display similar weaknesses to (Otani et al. 2023). We build on the insights of both publications while considering these flaws. Framework Design Online Study Design. To evaluate the imperceptibility of unrestricted attacks, we propose to conduct a 13-minute on- line study on Prolific1. We use Prolific because it can pre- screen participants without publicly sharing eligibility re- quirements while providing higher-quality data than other services (Douglas, Ewell, and Brauer 2023). We use the built-in prescreeners to filter out workers who are colorblind and those who self-report to be not fluent in English. We further ensure workers‚Äô capabilities by performing a short colorblindness and comprehension check. In line with Pro- lific compensation guidelines and related publications, we offer an average compensation of ¬£7.60 per hour. To support our protocol‚Äôs critical design decisions (e.g., the slider-based input as in Figure 3), we developed a Flask-based2web ap- plication to perform these studies. Research groups can use the web app to replicate our study design for their experi- ments. Colorblindness Check. The most prominent attack vec- tors for unrestricted AEs are the colors of an image. As such, colorblind annotators will likely overestimate the im- perceptibility of most attacks. Thus, participants must cor- rectly classify five different Ishihara-like images (Ishihara et al. 1918) before accessing the study‚Äôs central portion (see Figure 1). These images emulate so-called Ishihara plates, which are widely used diagnostic tools for vision deficien- cies. Four images show a digit, while one image always dis- plays no digit. Failing this check will end the study, and the user will be compensated for 1 minute of work. Comprehension Check. After passing the colorblindness check, we provide users with a brief explanation outlining common modification strategies. Examples include image filters and the change of colors in a particular area of the im- age. After reading the explanation, the user must pass a com- prehension check. We display six image pairs, each contain- ing a random unmodified and one random modified image (see Figure 2). To move on to the main portion of the study, participants must correctly classify the modified image of at least five pairs. Failing this check will end the study, and the user will be paid for 2.5 minutes of work. Main Study. Here, we aim to analyze the imperceptibil- ity of an attack strategy for one specific victim model. We evaluate generated AEs by asking users to rate the degree of modification for 106 images, 50 of which are unmodified 1https://www.prolific.com/ 2https://flask.palletsprojects.com/ImageNet (Russakovsky et al. 2015) samples, that the vic- tim classifies correctly with high confidence. Another 50 im- ages represent random AEs generated by the assessed attack. The remaining six images represent attention checks to en- sure the attentiveness of participants. Instead of a forced bi- nary choice between ‚Äùmodified‚Äù and ‚Äùunmodified‚Äù, we want users to rate how confident they feel about the degree of modification via a slider input (see Figure 3). The input ranges from -100, I am 100% certain that this image is unmodified , to +100, I am 100% certain that this image is modified . Collecting continuous ratings from many participants will lead to better-informed comparisons be- tween unrestricted attacks, as such ratings can capture finer nuances of attack perceptibility (Chyung et al. 2018). For instance, attack A, which produces successful attacks with imperceptible modifications, could be rated the same as at- tack B, whose successful modifications ‚Äùbarely convince‚Äù the average user. Empirical Sample Size Estimation. A key factor for conducting statistically significant studies is the choice of an appropriate sample size. However, we cannot perform an apriori sample size estimation due to this domain‚Äôs lack of an established effect size. Hence, we must perform studies to empirically determine a suitable number of participants per (attack, model) pair. For this purpose, we plan to col- lect large amounts of data for three attacks on one single victim model. Given 3,000 modified and 3,000 unmodified images per (attack, model) pair, which we distribute across 60 unique datasets, we want to collect at least ten samples per image. Hence, we must invite at least 600 people per (at- tack, model) pair. To create a recommended buffer of 15% for low-quality annotations (Aguinis, Villamor, and Ramani 2021), we will invite another 90 annotators per attack-model pair. Using the adversarially trained ResNet-50 (He et al. 2015) model of (Salman et al. 2020), we will collect data from 690 annotators for three attacks, which vary in com- plexity. Based on these results, we will then be able to deter- mine the sufficient (and ideally much smaller) sample size needed for analyzing unrestricted attacks. Conclusions Unrestricted image-based attacks will play a significant role in the near future, especially considering the rapid progress made in AI-based image generation (Croitoru et al. 2023). We provide an accessible toolbox that supports high-quality research into this developing field while increasing aware- ness for unrestricted AE research. Acknowledgments This work is supported by the Center for Digital Innova- tions of Lower Saxony (ZDIN) and has received funding from the Lower Saxony Ministry of Science and Culture under grant numbers ZN3492 (‚ÄùZukunftslabor Gesellschaft & Arbeit‚Äù) and 51171389 (‚ÄùCAIMed - Nieders ¬®achsisches Zentrum f ¬®ur KI & Kausale Methoden in der Medizin‚Äù) within the Lower Saxony ‚Äúzukunft.niedersachsen‚Äù funding program of the V olkswagen Foundation. References Aguinis, H.; Villamor, I.; and Ramani, R. S. 2021. MTurk Research: Review and Recommendations. Journal of Man- agement , 47(4): 823‚Äì837. Bauer, B.; Larsen, K. L.; Caulfield, N.; Elder, D.; Jordan, S.; and Capron, D. 2020. Review of best practice recommenda- tions for ensuring high quality data with amazon‚Äôs mechan- ical turk. Chyung, S. Y .; Swanson, I.; Roberts, K.; and Hankinson, A. 2018. Evidence-based survey design: The use of continuous rating scales in surveys. Performance Improvement , 57(5): 38‚Äì48. Croitoru, F.-A.; Hondru, V .; Ionescu, R. T.; and Shah, M. 2023. Diffusion models in vision: A survey. IEEE Transac- tions on Pattern Analysis and Machine Intelligence . Douglas, B. D.; Ewell, P. J.; and Brauer, M. 2023. Data quality in online human-subjects research: Comparisons between MTurk, Prolific, CloudResearch, Qualtrics, and SONA. Plos one , 18(3): e0279720. Dziugaite, G. K.; Ghahramani, Z.; and Roy, D. M. 2016. A study of the effect of jpg compression on adversarial images. arXiv preprint arXiv:1608.00853 . He, K.; Zhang, X.; Ren, S.; and Sun, J. 2015. Deep Residual Learning for Image Recognition. CoRR , abs/1512.03385. Ishihara, S.; et al. 1918. Tests for color blindness. American Journal of Ophthalmology , 1(5): 376. Li, L.; Xie, T.; and Li, B. 2020. Sok: Certified robustness for deep neural networks. arXiv preprint arXiv:2009.04131 . Otani, M.; Togashi, R.; Sawai, Y .; Ishigami, R.; Nakashima, Y .; Rahtu, E.; Heikkil ¬®a, J.; and Satoh, S. 2023. Toward ver- ifiable and reproducible human evaluation for text-to-image generation. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition , 14277‚Äì14286. Russakovsky, O.; Deng, J.; Su, H.; Krause, J.; Satheesh, S.; Ma, S.; Huang, Z.; Karpathy, A.; Khosla, A.; Bernstein, M.; Berg, A. C.; and Fei-Fei, L. 2015. ImageNet Large Scale Vi- sual Recognition Challenge. International Journal of Com- puter Vision (IJCV) , 115(3): 211‚Äì252. Salman, H.; Ilyas, A.; Engstrom, L.; Kapoor, A.; and Madry, A. 2020. Do adversarially robust imagenet models transfer better? Advances in Neural Information Processing Systems , 33: 3533‚Äì3545. Shamsabadi, A. S.; Sanchez-Matilla, R.; and Cavallaro, A. 2020. Colorfool: Semantic adversarial colorization. In Pro- ceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition , 1151‚Äì1160. Szegedy, C.; Zaremba, W.; Sutskever, I.; Bruna, J.; Erhan, D.; Goodfellow, I.; and Fergus, R. 2013. Intriguing proper- ties of neural networks. arXiv preprint arXiv:1312.6199 . Zhou, S.; Gordon, M.; Krishna, R.; Narcomey, A.; Fei-Fei, L. F.; and Bernstein, M. 2019. Hype: A benchmark for hu- man eye perceptual evaluation of generative models. Ad- vances in neural information processing systems , 32.Appendix Figure 1: Prototype of the Colorblindness Check Interface Figure 2: Prototype of the Comprehension Check Interface Figure 3: Prototype of the Main Study Interface",cs.AI,Arxiv
48,Sliding Mechanism for Actin Myosin System,"Bao-quan Ai, Xian-ju Wang, Guo-tao Liu, Liang-gang Liu, M. Nakano, H. Matsuura",2003-06-27 12:11:51+00:00,http://arxiv.org/pdf/physics/0306192v1,"Based on the Stochastic Inclined Rods Model (SIRM) proposed by H. Matsuura and M. Nakano, we study the microscopic motion of actin myosin system including the motion of the G-actin. Our model is composed of an inclined spring (rod), a myosin head, a myosin filament and G-actins. We discuss the stochastic resonance between the myosin head and random noise. The results of calculation show that the model can convert the random motion to one directional motion, and the myosin head works as a resonator of random noise which absorbs the energy through the stochastic resonance. The intermolecular potential between the myosin head and G-actin and the inclined rod play a key role for the muscle's motion. The energy consumed by the motor is directly supplied from the surroundings (i.e., the thermal motions of water molecules).","arXiv:physics/0306192v1  [physics.bio-ph]  27 Jun 2003Sliding Mechanism for Actin Myosin System Bao-quan Ai, Xian-ju Wang,Guo-tao Liu and Liang-gang Liu Department of Physics, ZhongShan University, GuangZhou, P . R. China M. Nakano Department of Information Science, University of Occupati onal and Environmental Health, Japan H. Matsuura Department of Project Center, National Graduate Institute for Policy Studies, Japan Abstract Based on the Stochastic Inclined Rods Model (SIRM) proposed by H. Matsuura and M. Nakano, we study the microscopic motion of actin myosin system including the motion of the G-actin. Our model is com- posed of an inclined spring (rod), a myosin head, a myosin Ô¨Åla ment and G-actins. We discuss the stochastic resonance between the m yosin head and random noise. The results of calculation show that the mo del can convert the random motion to one directional motion, and the myosin head works as a resonator of random noise which absorbs the en ergy through the stochastic resonance. The intermolecular pote ntial between the myosin head and G-actin and the inclined rod play a key rol e for the muscle‚Äôs motion. The energy consumed by the motor is directl y supplied from the surroundings (i.e., the thermal motions of water mo lecules). Keywords : SIRM, Intermolecular potential, Actin myosin system. 1 Introduction Biologicalsystemsareamongthemostchallengingsubjectsforthe oreticalphysi- cists as well as experimentalists or simulationists. More and more biolo gists and theoretical biophysicists have focused on studying the mecha nism of living systems and mincing the biological structure to invent subtle artiÔ¨Åc ial instru- ments. Nowadays it is exciting to study a problem how motor protein g ets a energy of movement and what makes myosin slide in one direction along the Ô¨Ålaments. Based on diÔ¨Äerent system, three diÔ¨Äerent families of mot or proteins have been identiÔ¨Åed [1][2][3]: Kinesis and dyneins move along tubulin Ô¨Ålame nts [4], myosin moves along actin Ô¨Ålaments [5][6]. The motion mechanism of the se motors can be described in general as follows [1][7][8]: Ô¨Årstly the motor protein binds Adenosinetriphoshpate (ATP), then hydrolyzes the bound A TP and ab- sorbs the energy, subsequently, it releases the products Adeno sinediphosphate (ADP) and Phosphate (P). So the motors move constantly within ch emical cy- cle. The molecular motors play a key role in transducing chemical ener gy into mechanical work at a molecular scale. In 1954 H. F. Huxley, H. E. Huxley and R. M. Simmons [9][10][11] propose d the rotation cross bridge model to study muscular mobility. In thes e earliest 1 theoretical descriptions, the asymmetry of the system was intro duced via asym- metric transition rates and speciÔ¨Åc conformational changes were also discussed. This model has been widely spread in past two decades and has becom e a standard model even in college textbooks, but extensive experime ntations have failed to Ô¨Ånd evidence for a large conformational change in myosin he ad during the force generation process [12]. So it is worth while to reconsider a n old idea, proposed by A. F. Huxley in 1957, the motor protein uses thermal e nergy that exists at physiological temperature to perform work [13], such as t he thermal ratchet model [14] [15], the isothermal ratchet model [16]. Recently, there have been many reports that discuss the relation between the muscle‚Äôs movement and Stochastic Resonance (SR) or thermal noise [17][18] [19][20]. These explanations, however, somewhat abstract from th e viewpoint of biology, and these models are lacking in dynamic descriptions of act in myosin interaction. The newly resonance models for muscle‚Äôs motion was named the Stoch as- tic Inclined Rods Model (SIRM) proposed by H. Matsuura and M. Nak ano [21][22][23][24]. The energy of the motion was supplied from the random n oise and the system always moves to one direction by using of stochastic resonance. The movement of the system does not break the second law of the t hermody- namics, because the actin myosin system is open to the surrounding s and the energy Ô¨Çows in from their surroundings. The SIRM presents a perf ectly sliding mechanism for the actin myosin system. The main aim of our paper is to study the motion of actin myosin system in- cluding the G-actin‚Äôs motion. We discuss the stochastic resonance o f the myosin head and give the numerical results for the motion of the system. W e Ô¨Ånd that there is a relative sliding motion between the G-actin and the myosin ow ing to the intermolecular potential and the structure of the inclined rod. 2 Model and Formalism The structure of the actin myosin system is shown in Fig. 1[21] toget her with structure of the muscle. It consists of the chain structure of th e actin of length around 100 nmand a bundle of hundreds of myosin which has an inclined rod and a head of 0.45 million Dalton. The whole system exists in a water solut ion and the interaction with water molecules cannot be neglected. Fig. 1 In order to explain the contraction of the muscle, namely solve the m otion of actin myosin system, we simulate it by a mechanical model as shown in Fig. 2. We call this model as stochastic inclined rod model (SIRM). The mo tion mechanism of the SIRM is as follows: Ô¨Årstly, ATP is hydrolyzed and rele ases the energy which makes the random noise interacts with the myosin h ead and myosin head obtains the energy from random noise then the head vib rates, it collides with a G-actin and obliquely kicks the G-actin sphere, because the di- rection of vibration is inclined against the line of the actin Ô¨Åbers and my osin molecules obtain the propellant force along the direction of the Ô¨Åber s. In this 2 way, the Ô¨Ålament can move to one direction while the G-actin moves to oppo- site direction. The actin myosin system can move to one direction owin g to the structure of inclined rods of myosin and the intermolecular potentia l between the myosin head and the G-acin. Fig. 2 According to Fig. 2 we can construct the equations of the motion fo r the head of myosin. m‚àÇ2x ‚àÇt2=‚àí‚àÇ(Ua+Us) ‚àÇx+Fx(t)‚àíŒ±‚àÇx ‚àÇt. (1) m‚àÇ2y ‚àÇt2=‚àí‚àÇ(Ua+Us) ‚àÇy+Fy(t)‚àíŒ≤‚àÇy ‚àÇt. (2) With regard to the center of gravity ( x2,y2) of the Ô¨Ålament, we set a similar equation: M‚àÇ2x2 ‚àÇt2=‚àí‚àÇUs ‚àÇx2+Fx2(t)‚àíŒ∑‚àÇx2 ‚àÇt. (3) The variable y2is Ô¨Åxed since the myosin Ô¨Ålament does not signiÔ¨Åcantly move along the y-direction compared to the x-direction. The equation of the G-actin is shown as follow: Mg‚àÇ2xg ‚àÇt2=‚àí‚àÇUa ‚àÇxg+Fxg(t)‚àíŒ≥‚àÇxg ‚àÇt. (4) WhereFx(t),Fy(t),Fx2(t),Fxg(t)areÔ¨Çuctuationofthethermalnoise, m,M,M g are the masses of myosin head, myosin Ô¨Ålament and the G-actin, res pectively, Œ±,Œ≤,Œ∑,Œ≥ are viscous constants, and the Ô¨Çuctuation forces follow Ô¨Çuctuat ion- dissipative relation [25][26][27]: < Fa(t)>= 0. (5) < Fa(t)Fb(s)>= 2kBTŒ∂Œ¥a,bŒ¥(t‚àís). (6) wherea,b=x,y,x2,xg;Œ∂=Œ±,Œ≤,Œ∑,Œ≥;kBis Boltzmann constant. Tis absolute temperature. t,sare time. As for the intermolecular potential between the myosin head and G- acitn we adopt Jennard-Jone potential: Ua=i=n/summationdisplay i=0(pr‚àí12 i‚àíqr‚àí6 i)U. (7) Whereri=/radicalbig (x‚àíxi)2+(y‚àíyi)2‚àíR;xi=xg+iR;yi=yg; (xg,yg) stands the coordinates of the center of the G-actin and R is its rad ius.p,q,U are the parameters of the potential. The potential of the myosin rod is approximately expressed as follow s: Us=Klexp(‚àí/radicalbig (x‚àíx2)2+(y‚àíy2)2+L) +Klexp(/radicalbig (x‚àíx2)2+(y‚àíy2)2‚àíL) +1 2KŒ∏(Œ∏‚àíŒ∏0)2. (8) 3 WhereKŒ∏,Klare parameters of potential of the spring and Lis nature length of the spring, tan( Œ∏) =x2‚àíx y2‚àíy,Œ∏,Œ∏0are current angle and initial angle be- tween the rod and level axis. ( x2,y2) is the center of gravity of myosin bundle. 3 stochastic resonance We discuss the stochastic resonance between the myosin head and the thermal noise to show that SIRM moves to one direction with accepting energ y from thermal noise. Because the above equations are so complex and hig hly non- linear that we cannot obtain a strict analytical solution, we only discu ss the motion of the myosin head and set up the following simple equation for t he head, where the j-th G-actin is the nearest one to the head: m‚àÇ2x ‚àÇt2= 12pU(x‚àíxj)‚àí13‚àí6qU(x‚àíxj)‚àí7‚àí2(x‚àíx2+L)K+Fx(t)‚àíŒ±‚àÇx ‚àÇt. (9) Because the Ô¨Çuctuation F(t) can be given in the following form [22]: Fa(t) =/radicalbigg kBTŒ∂ œÄ/summationdisplay jœÅj aexp(i‚Ñ¶jt). (10) < Fa(t)Fb(s)>=kBTŒ∂ œÄ/summationdisplay j,lŒ¥a,bŒ¥j,lexpi(‚Ñ¶ls‚àí‚Ñ¶jt). (11) < œÅj a‚àóœÅl b>=Œ¥a,b,< œÅj a‚àó>=< œÅl b>= 0. (12) If we assume that the thermal noise contains all of frequency, on e of the noise frequency is expressed as follows: Fx(t) m‚Üíf mexp(i‚Ñ¶t). (13) Thus Eq.(9) can be given: ‚àÇ2Œæ ‚àÇt2+2¬µ‚àÇŒæ ‚àÇt+œâ2Œæ=f mexp(i‚Ñ¶t)‚àíŒµŒ±Œæ2‚àíŒµŒ≤Œæ3. (14) WhereŒæ=x‚àíx2+L,Œæj=xj‚àíx2+L, 2¬µ=Œ± m. œâ2 0=2K m+156pU mŒæ14 j‚àí42qU mŒæ8 j,ŒµŒ±=2184pU 2mŒæ15 j‚àí336qU 2mŒæ9 j,ŒµŒ≤=32760pU 3!mŒæ16 j‚àí3024qU 3!mŒæ10 j. (15) Here we use Taylor expansion for the intermolecular force of the G- actin and ignore the higher order terms. WhenŒµ= 0 and ¬µ2> œâ2 0we can get the solution of the Eq. (14) as follows: Œæ=a0e‚àí¬µtcos(œât+œë0)+aei(‚Ñ¶t‚àíŒ¥). (16) Whereœâ=/radicalbig œâ2 0‚àí¬µ2,a=f m‚àö (œâ2 0‚àí‚Ñ¶2)2+4¬µ2‚Ñ¶2, tanŒ¥=‚àí2¬µ‚Ñ¶ œâ2 0‚àí‚Ñ¶2,a0,œë0are determined by initial conditions. 4 IfŒµ/negationslash= 0, we can use a eÔ¨Äective frequency for the Eq. (14)[28]: œâ‚àó=œâ0+3Œµa2 8œâ2 0. (17) So we can rewrite the Eq.(14) as follow: ‚àÇ2Œæ ‚àÇt2+2¬µ‚àÇŒæ ‚àÇt+œâ‚àó2Œæ=f mexp(i‚Ñ¶t). (18) So the solution of the Eq. (18) should have the same form as that of Eq.(14), but the amplitude ashould be satisÔ¨Åed the following relation: a2=(f m)2 (œâ‚àó2‚àí‚Ñ¶2)2+4¬µ‚Ñ¶2(19) If we assume the frequency ‚Ñ¶ = œâ0+‚àÜ, we can obtain: (œâ‚àó2‚àí‚Ñ¶2)2= 4œâ0(3Œµa2 8œâ0‚àí‚àÜ)2. (20) We can rewrite the Eq. (19) as follow: œÉ[(œÉ‚àí‚àÜ)2+(¬µ Œµ)] =F. (21) WhereœÉ=3a2 8œâ0,F=3f2 32m2œâ3 0Œµ2. From the Eq. (21) we can get the relation between the resonance amplitude and the shift frequency from th e resonance point. Fig. 3 The Ô¨Ågure shows the relation between the square of resonance am plitudeœÉand the shift frequency from the resonance point ‚àÜ, which is the solutio n of the Eq. (21). If the amplitude of noise Fis small, the peak occurs at ‚àÜ = 0, as the amplitude of the noise increases, the shape of œÉchanges gradually while it keeps the character that has the only one maximum, which truly shows the existence of the stochastic resonance between the myosin head and the the rmal noise. After a suÔ¨Écient time, the damping terms of the Eq.(16) goto zero, and only oscillational term aei(‚Ñ¶t‚àíŒ¥)survives. It is clear that these equations (Eq. (1)- Eq. (4)) do not have an energy source except the thermal noise t ermF(t). In the case, the energy of the myosin has the constant value which is d etermined by the amplitude a. And the average absorbed energy per unit time will be E(‚Ñ¶) = 2‚Ñ¶2¬µma2. 4 Numerical results We adopt a numerical method to solve the above equations. The par ameters of the equations are shown in the Table.1. Table. 1 5 The numerical results are shown in Fig. 4-Fig. 8. Fig. 4 The Ô¨Ågure shows the horizontal position of myosin head, the trace has irregular- ity and randomness like Brownian particles, but movement is a transla cational one as a whole. Fig 5 The solid line shows the vertical motion of the myosin head and the str etching motion of the rod is described with the dash line. From the Ô¨Ågure we ca n know that the stretching vibration of the spring has irregularity and the collision be- tween the G-actin and the myosin head distorts their relative motion from a trigonometric function. Fig 6 The dash line shows the motion of the Ô¨Ålament and the solid line shows th e position of the G-actin. From the Ô¨Ågure we can know there is a relativ e sliding motion between the Ô¨Ålament and the G-actin. The Ô¨Ålament can move t o one direction while the G-actin moves to opposite direction. Fig 7 The Ô¨Ågure gives the relative between the horizontal movement of m yosin Ô¨Åla- ment and the initial angle. From the Ô¨Ågure we can know that the moto r can move fastest when the initial angle is nearly equal to 45‚ó¶. But if the initial angle is too small or too big, the motor moves slowly, even cannot mov e. So the initial angle of the inclined rod is important for SIRM to move to one dire ction. Fig 8 From the Ô¨Ågure we can know that the shape of the G-actin is importa nt for the system to move. If the G-actin if Ô¨Çat ( R= 0) the SIRM can not move, on the other hand, if the radius of the G-actin is too big ( R= 40). The system can not move, either. The motor can move at the highest speed at R= 20. 5 Summary and conclusion Based on SIRM we present a sliding mechanism for the actin myosin sys tem and set up the dynamic equations for the model. Because equations (Eq. (1) - Eq. (8) ) are so complex and highly nonlinear that we cannot obtain a strict analyticalsolution, we adopt a numericalmethod to solvethese two dimensional Langevin equations. We discuss the motion of the myosin head and Ô¨Ån d there is a stochastic resonance between the head and the noise. Our mod el propose a microscopic mechanism for the actin myosin system: Ô¨Årstly, the the rmal noise 6 interacts with the myosin head, and the resonance occurs betwee n the myosin head and the noise, then it collides with a G-actin and obliquely kicks the G- actin sphere, because the direction of vibration is inclined against th e line of the actin Ô¨Åbers, myosin molecules obtain the propellant force along the d irection of the Ô¨Åber and the myosin can move to one direction. From the numerical results we can know there is a relative sliding motio n between the Ô¨Ålament and the G-actin. The Ô¨Ålament can move to one d irec- tion while the G-actin moves to opposite direction. When the system a bsorbs the energy from the thermal noise constantly through stochast ic resonance, the intermolecular potential and the inclined rod make the Ô¨Ålament move t o one direction. The system can convert the random noise to one directio nal motion. SIRM is thermally open to the outer surroundingsand it has a outer h eat source of ATP. The heat consumed by SIRM is directly supplied from the surr ound- ings and the energy provided to the surroundings comes from the o uter source or reserviorthrough a general energetic Ô¨Çow. From a macroscop ic point of view, SIRM can move by getting heat from its surroundings. Noise in dynamical systems is usually considered a nuisance. But in cer tain nonlinear systems including electronic circuits and biological sensory apparatus the presenceofnoise can in fact enhance the detection ofthe wea ksignals. From the above results, we point out the possibility that the actin myosin s ystem can use thermal noise around for the movement in similar way. This viewpo int is completely new as the traditional viewpoint thinks the water disturb s the mo- tion as viscosity. 7 References [1] F. Julicher, A. Ajdari and J. Prost, Rev. Mod. Phys., 69 (1997) 1269. [2] T. Kreis and R. Vale, Cytoskeletal and motor proteins, Oxford U niversity Press (1993). [3] K. Y. Wang, S. B. Xue, H. T. Liu, Cell Biology, (Beijing Normal Unive rsity Press, in Chinese ), (1998) 238-246. [4] E. Mandelkow and A. Hoenger, Current Opinion in Cell Biology, 11 (1 999) 34. [5] G.G.BorisyandT.M.Svitkina, CurrentOpinioninCellBiology,12(2 000) 104. [6] T. Yanagida, K. Kitamura,H. Tanaka, A. Hikikoshi lwane and S. Esa ki, Current Opinion in Cell Biology, 12 (2000) 20. [7] T. L. Hill, Prog. Biophys. Mol., 28 (1994) 267. [8] J. A. Spudich, Nature, (1990) 284. [9] A. E. Huxley and R. M. Simmons, Nature, 233 (1971) 533. [10] A. F. Huxley and R. Niedergerke, Nature, 173 (1954) 971. [11] A. F. Huxley and J. Hanson, Nature, 173 (1954) 973. [12] T. Yanagida and E. Homsher, Plenum Press, New York, (1984) 8 33. [13] A. F. Huxley, Prog. BioPhys., 7 (1957) 255. [14] M. O. Magasco, Phys. Rev. Lett., 71 (1993) 1477. [15] R. D. Astumian, Phys. Rev. Lett., 72 (1994) 1766. [16] A. Parmeggiani, J. Frank, A. Ajdari and J. Prost, Phys. Rev. E, 60 (1999) 2127 [17] W. Kurt and M. Frank, Nature, 373 (1995) 33-36. [18] J. J. Collins, C. C. Chow and T. T. ImhaÔ¨Ä, Nature, 383 (1996) 77 0. [19] J. Rousslet, L. Solomw, A. Ajdoari and J. Prost, Nature, 370 (1994) 446- 449. [20] G. Hu, A. DaÔ¨Äertsshofer, H. Haken, Phys. Rev. Lett., 76 (19 96) 4874-4877. [21] H. Matsuure and M. Nakano, Biomedical and Human Science, 3 (1 ) (1997) 47. 8 [22] H. Matsuure and M. Nakano, Information, Vol.3(2) (2000) 203 -230. [23] H. Matsuure and M. Nakano, Proc. of the IEEE-EMBS Asia-Pac iÔ¨Åc Con- ference on Biomedical Engineering, (2000) 377. [24] H. Matsuura and M. Nakano, AIP(American Institute of Physic s) Confer- ence Proceeding 519, Statistical Physics (2000) 557-559. [25] G. E. Uhelenbeck and Ornsteinn, Phys. Rev., 36 (1930) 823. [26] M. C. Wang and G. E. Uhelenbeck, Rev. Mod. Phys., 17 (1954) 32 3. [27] K. Tawada and K. J. Sekimoto, Theor. Biol., 150 (1991) 193. [28] L. K. Liu, S. D. Liu, Nonlinear Equations in Physics, (2000) 107. 9 6 Figure captions Table. 1. The parameters of the equations. Œ±,Œ≤,Œ∑,Œ≥ are viscous constants, M,m,M gare the mass of myosin bundle and myosin head, respectively, Lis nature length of the spring, p,q,Uare the parameters of the potential, KŒ∏,Kl are tangent constant and radial constant of the spring. Fig. 1. Actin myosin system as an element of the muscle shown in the bottom of the Ô¨Ågure. The structure of muscle is also shown from the upper level to lower level (see ref.[21]). Fig. 2. The model for actin myosin system. The coordinates of the head of myosin and the end of myosin connected to the Ô¨Ålament are ( x,y) and (x2,y2), respectively. The body of the myosin is assumed to be represented as a spring. Fig. 3. The Ô¨Ågure shows the solution of Eq. (21) and give the relation be- tween the square of resonance amplitude œÉ=3a2 8œâ0and the shift frequency ‚àÜ from resonance point. From the up to the bottom, diÔ¨Äerent lines co rrespond to F=3f2 32m2œâ3 0Œµ2: 20, 15, 10, 5, 1, respectively. Fig. 4. The Ô¨Ågure shows the horizontal motion of the myosin head (see Eq. (1)). Fig. 5. The solid line shows the vertical movement of the myosin head and the dash line presents the stretching displacement sof the rod and s= /radicalbig (x‚àíx2)2+(y‚àíy2)2‚àíL(see Eq. (2)). Fig. 6. The dash line gives the movement of the Ô¨Ålament ( x2) and the solid line shows the position ( xg) of the G-actin (see Eq. (3) and Eq. (4)). Fig. 7. The curve shows the horizontal displacement of the myosin Ô¨Ålament at diÔ¨Äerent initial angle Œ∏0(t= 60unittime ). Fig. 8. The curves give the relation between the radius of G-actin and the displacement of Ô¨Ålament in given time, diÔ¨Äerent lines correspond to diÔ¨Ä erent radiusRshown in the Ô¨Ågure. 10 Table. 1. The Parameters of the Equations. 1 unit time 10‚àí11s Œ±,Œ≤,Œ∑,Œ≥ 1U20000 1 unit length 10‚àí9m p,q 100 m1000 1 unit mass 2.5√ó10‚àí21kg L 100 M3000 KŒ∏ 500000 Kl500Mg10000 11 This figure Fig1.jpg is available in jpg  format from: http://arxiv.org/ps/physics/0306192v1 This figure Fig2.jpg is available in jpg  format from: http://arxiv.org/ps/physics/0306192v1 -10 -5 0 5 100.00.51.01.52.02.53.03.54.04.5 F=20 F=15 F=10 F=5 F=1œÉ Œî 0 5 10 15 20 25 30020406080100120140160x-displacement of the myosin head (relative units) t (relative units) 0 5 10 15 20 25 30-15-10-50510152025303540455055 the y-displacement of the myosin head  the stretching motion of the myosin roddisplacement (relative units) t (relative units) 0 5 10 15 20 25 3020406080100120140160180200220240 displacement of the myosin filament  diaplacement of the G-actinx-displacement  (relative units) t (relative units) 20 40 60 80450460470480490500510x-displacement of the G-actin (relative unites) Œ∏0 0 5 10 15 20 25 308090100110120130140150160170180190200210220230240 R=40R=30R=20 R=10 R=1displacement of myosin filament time (relative units)","physics.bio-ph, q-bio",Arxiv
49,Transfer Learning for Performance Modeling of Configurable Systems: A Causal Analysis,"Mohammad Ali Javidian, Pooyan Jamshidi, Marco Valtorta",2019-02-26 18:53:38+00:00,http://arxiv.org/pdf/1902.10119v1,"Modern systems (e.g., deep neural networks, big data analytics, and compilers) are highly configurable, which means they expose different performance behavior under different configurations. The fundamental challenge is that one cannot simply measure all configurations due to the sheer size of the configuration space. Transfer learning has been used to reduce the measurement efforts by transferring knowledge about performance behavior of systems across environments. Previously, research has shown that statistical models are indeed transferable across environments. In this work, we investigate identifiability and transportability of causal effects and statistical relations in highly-configurable systems. Our causal analysis agrees with previous exploratory analysis \cite{Jamshidi17} and confirms that the causal effects of configuration options can be carried over across environments with high confidence. We expect that the ability to carry over causal relations will enable effective performance analysis of highly-configurable systems.","Transfer Learning for Performance Modeling of ConÔ¨Ågurable Systems: A Causal Analysis Mohammad Ali Javidian, Pooyan Jamshidi, Marco Valtorta Department of Computer Science and Engineering University of South Carolina, Columbia, SC, USA Abstract Modern systems (e.g., deep neural networks, big data analytics, and compilers) are highly conÔ¨Åg- urable, which means they expose di erent perfor- mance behavior under di erent conÔ¨Ågurations. The fundamental challenge is that one cannot simply measure all conÔ¨Ågurations due to the sheer size of the conÔ¨Åguration space. Transfer learning has been used to reduce the measurement e orts by transfer- ring knowledge about performance behavior of sys- tems across environments. Previously, research has shown that statistical models are indeed transferable across environments. In this work, we investigate identiÔ¨Åability and transportability of causal e ects and statistical relations in highly-conÔ¨Ågurable sys- tems. Our causal analysis agrees with previous ex- ploratory analysis (Jamshidi et al. 2017) and con- Ô¨Årms that the causal e ects of conÔ¨Åguration options can be carried over across environments with high conÔ¨Ådence. We expect that the ability to carry over causal relations will enable e ective performance analysis of highly-conÔ¨Ågurable systems. Introduction To understand and predict the e ect of conÔ¨Åguration options in conÔ¨Ågurable systems, di erent sampling and learning strategies have been proposed (Sieg- mund et al. 2015; Valov et al. 2017; Sarkar et al. 2015), albeit often with signiÔ¨Åcant cost to cover the highly dimensional conÔ¨Åguration space. Recently, we performed an exploratory analysis to understand why and when transfer learning works for conÔ¨Åg- urable systems (Jamshidi et al. 2017). In this pa- per, instead of statistical analysis, we employ causal analysis to address the possibility of identifying in- Ô¨Çuential conÔ¨Åguration options that have a causal re- lation with the performance metrics of conÔ¨Ågurable systems (identiÔ¨Åability) and whether such causal re- lations are transferable across environments (trans- portability). Copyright c2019, Association for the Advancement of ArtiÔ¨Åcial Intelligence (www.aaai.org). All rights reserved. Figure 1: Exploiting causal inference for performance analysis. Recently, transfer learning has been used to de- crease the cost of learning by transferring knowl- edge about performance behavior across environ- ments (Jamshidi et al. 2018; Valov et al. 2017). For- tunately, performance models typically exhibit simi- larities across environments, even environments that dier substantially in terms of hardware, workload, or version (Jamshidi et al. 2017). The challenge is to (i) identify similarities and (ii) make use of them to ease learning of performance models. To estimate causal e ects, scientists normally perform randomized experiments where a sample of units drawn from the population of interest is subjected to the speciÔ¨Åed manipulation directly. In many cases, however, such a direct approach is not possible due to expense or ethical considera- tions. Instead, investigators have to rely on obser- vational studies to infer e ects. One of the funda- mental questions in causal analysis is to determine when e ects can be inferred from statistical infor- mation, encoded as a joint probability distribution, obtained under normal, intervention-free measure- ment. Pearl and his colleagues have made major contributions in solving the problem of identiÔ¨Åabil-arXiv:1902.10119v1  [cs.AI]  26 Feb 2019 ity. Pearl (Pearl 1995) established a calculus of inter- ventions known as do-calculus , consisting of three inference rules by which probabilistic equations in- volving interventions and observations can be trans- formed into other such equations, thus providing a syntactic method of deriving claims about interven- tions. Later, do-calculus was shown to be complete for identifying causal e ects, that is, every causal ef- fects that can be identiÔ¨Åed can be derived using the three do-calculus rules (Huang and Valtorta 2006; Shpitser and Pearl 2006). Pearl and Bareinboim (Pearl and Bareinboim 2011; Bareinboim and Pearl 2012; Pearl and Barein- boim 2014; Bareinboim and Pearl 2016) provided strategies for inferring information about new pop- ulations from trial results that are more general than re-weighting. They supposed that we have available both causal information and probabilistic informa- tion for population A(i.e., the source), while for population B(i.e., the target) we have only (some) probabilistic information, and also that we know that certain probabilistic and causal facts are shared between the two and certain ones are not. They of- fered theorems describing what causal conclusions about population Bare thereby Ô¨Åxed. Conclusions about one population can be supported by informa- tion about another depends on exactly what causal and probabilistic facts they have in common . In this paper, we conduct a causal analysis , com- paring performance behavior of highly-conÔ¨Ågurable systems across environmental conditions (chang- ing workload, hardware, and software versions), to explore when and how causal knowledge can be commonly exploited for performance analysis. In this paper, we use the proposed formal language of causal graphs for identiÔ¨Åability and transportability in the literature, to answer: Is it possible to identify causal relations from observational data and how generalizable are they in highly-conÔ¨Ågurable systems? Our results indicate the possibility of identiÔ¨Åa- bility of causal e ects in general. Also, our results show that many of causal /statistical relations about performance behavior can be transferred across en- vironments even in the most severe changes we ex- plored, and that transportability is actually trivial for many environmental changes. Our empirical re- sults also indicate the recoverability of conditional probabilities from selection-biased data in many cases. The results indicate that causal information can be used as a guideline for cost-e cient sam- pling for performance prediction of conÔ¨Ågurable systems. The supplementary materials including data and empirical results are available at: https: //github.com/majavid/AAAI-WHY-2019 .Causal Graphs A causal graphical model is a special type of graph- ical model in which edges are interpreted as di- rect causal e ects. This interpretation facilitates pre- dictions under arbitrary (unseen) interventions, and hence the estimation of causal e ects (Pearl 2009). In this section, we consider two constraint-based methods for estimating the causal structure from ob- servational data. For this purpose, we discuss the PC algorithm and the fast causal inference (FCI) algo- rithm (Spirtes, Glymour, and Scheines 2000). Estimating causal structures A causal structure without feedback loops and with- out hidden or selection variable can be visualized using a directed acyclic graph (DAG) where the edges indicate direct cause-e ect relationships. Un- der some assumptions, Pearl (Pearl 2009) showed that there is a link between causal structures and graphical models. Roughly speaking, if the under- lying causal structure is a DAG, we observe data generated from this DAG and then estimate a DAG model (i.e., a graphical model) on this data, the es- timated complete partially directed acyclic graph (CPDAG) represents the equivalence class of the DAG model describing the causal structure. This holds if we have enough samples and assuming that the true underlying causal structure is indeed a DAG without unobserved common causes (confounders) or selection variables. Note that even given an inÔ¨Å- nite amount of data, we usually cannot identify the true DAG itself, but only its equivalence class. Ev- ery DAG in this equivalence class can be the true causal structure (Kalisch et al. 2012). In the case of unobserved variables, one could still visualize the underlying causal structure with a DAG that includes all observed, unobserved cause, and unobserved selection variables. However, when inferring the DAG from observational data, we do not know all unobserved variables. We, therefore, seek to Ô¨Ånd a structure that represents all condi- tional independence relationships among the ob- served variables given the selection variables of the underlying causal structure. It turns out that this is possible. However, the resulting object is in gen- eral not a DAG for the following reason. Suppose, we have a DAG including observed and unobserved variables, and we would like to visualize the con- ditional independencies among the observed vari- ables only. We could marginalize out all unbserved cause variables and condition on all unobserved se- lection variables. It turns out that the resulting list of conditional independencies can in general not be represented by a DAG, since DAGs are not closed under marginalization or conditioning (Richardson and Spirtes 2002). A class of graphical indepen- dence models that is closed under marginalization and conditioning and that contains all DAG mod- els is the class of ancestral graph s (Richardson and Spirtes 2002). A mixed graph is a graph containing three types of edges, undirected (  ), directed (!) and bidirected ($). An ancestral graph Gis a mixed graph in which the following conditions hold for all vertices in G: (i) ifandare joined by an edge with an arrow- head at, thenis not anterior to . (ii) there are no arrowheads present at a vertex which is an endpoint of an undirected edge. Maximal ancestral graphs (MAG), which we will use from now on, also obey a third rule: (iii) every missing edge corresponds to a conditional independence. An equivalence class of a MAG can be uniquely rep- resented by a partial ancestral graph (PAG) (Zhang 2008). Edge directions are marked with ‚Äú  ‚Äù and ‚Äú>‚Äù if the direction is the same for all graphs belong- ing to the PAG and with ‚Äú ‚Äù otherwise. The bidi- rected edges come from hidden variables, and the undirected edges come from selection variables. We use the Hugin PC algorithm and the FCI algorithm in the R package pcalg to recover the causal graph of each environment for our subject systems. Since all possible conÔ¨Ågurations of options are present in the Ô¨Årst and last subject systems in Table 1 and all data sets have been sampled on the basis of conÔ¨Åguration settings alone, we can assume that there are no unobserved common causes and se- lection variables, i.e., the causal su ciency assump- tion (Spirtes, Glymour, and Scheines 2000) holds. In other cases, due to sparsity of data, we cannot ex- clude the presence of hidden variables, therefore, we use the FCI algorithm to recover the causal graphs. Research Questions and Methodology The overall question that we explore in this paper is ‚Äúwhy and when identiÔ¨Åability and transportabil- ity of causal e ects can be exploited in conÔ¨Ågurable systems? ‚Äù We hypothesize that estimating causal ef- fects from observational studies alone, without per- forming randomized experiments or manipulations of any kind (causal inference of this sort is called identiÔ¨Åcation (Pearl 2009)) is possible for conÔ¨Åg- urable software systems. Also, we speculate that causal relations in the source and the target are somehow related. To understand the notion of iden- tiÔ¨Åcation and relatedness that we Ô¨Ånd for environ- mental changes, we explore three questions. RQ1. Is it possible to estimate causal e ects of conÔ¨Åguration options on performance from observational studies alone?If we can establish with RQ1 that causal e ects of conÔ¨Åguration options on the performance are estimable, this would be promising for perfor- mance modeling in conÔ¨Ågurable systems because it helps us to estimate an accurate, reliable, and less costly causal e ect in an environment. Even if not all causal e ects may be estimable, we explore which conÔ¨Åguration options are inÔ¨Çuential on per- formance. RQ2. Is the causal e ect of conÔ¨Åguration op- tions on performance transportable across en- vironments? RQ2 concerns transferable knowledge from source that can be exploited to learn an accurate and less costly performance model for the target environ- ment. SpeciÔ¨Åcally, we explore how the causal e ects of inÔ¨Çuential options are transportable across envi- ronments and how they can be estimated. RQ3. Is it possible to recover conditional prob- abilities from selection-biased data to the en- tire population? RQ3 concerns transferable knowledge that can be exploited for recovering conditional probabilities from selection-biased data to the population. Specif- ically, we explore whether causal /statistical rela- tions between conÔ¨Åguration options and perfor- mance measures are recoverable from biased sample without resorting to external information. Methodology Design : We investigate causal e ects of conÔ¨Ågura- tion options on performance measures across envi- ronments. So, we need to establish the performance of a system and how it is a ected by conÔ¨Åguration options in multiple environments. As in (Jamshidi et al. 2017), we measure the performance of each sys- tem using standard benchmarks and repeat the mea- surements across a large number of conÔ¨Ågurations. We then repeat this process for several changes to the environment: using di erent hardware, work- loads, and versions of the system. Finally, we per- form the analysis of relatedness by comparing the performance and how it is a ected by options across environments. We perform comparison of a total of 65 environment changes. Analysis : For answering the research questions, we formulate three hypotheses about: IdentiÔ¨Åability : The causal e ect of XonYis identiÔ¨Åable from a causal graph Gif the quan- tityP(yjdo(x)) can be computed uniquely from any positive probability of the observed variables (Pearl 2009). Transportability : Given two environments, de- noted and, characterized by probability dis- tributions PandP, and causal diagrams Gand G, respectively, a causal relation Ris said to be transportable from toifR() is estimable from the set Iof interventions on , and R() is identiÔ¨Åed from P;P;I;G, and G(Pearl and Bareinboim 2011). Recovering conditional probabilities : Given a causal graph Gsaugmented with a node Sencod- ing the selection mechanism, the distribution Q= P(yjx) is said to be s-recoverable from selection- biased data in Gsif the assumptions embedded in the causal model renders Qexpressible in terms of the distribution under selection bias P(vjS=1) (Bareinboim, Tian, and Pearl 2014). For each hypothesis, we recover the corresponding causal graph and analyze 65 environment changes in four subject systems mentioned below. For each hypothesis, we discuss how commonly we identify this kind of estimation and whether we can iden- tify classes of changes for which this estimation is characteristic. If we Ô¨Ånd out that for an environmen- tal change a hypothesis holds, it means that enough knowledge is available to estimate causal e ects/ conditional probabilities across environments. Subject systems In this study, we selected four conÔ¨Ågurable soft- ware systems from di erent domains, with di er- ent functionalities, and written in di erent program- ming languages (Table 1). Further details can be found in (Jamshidi et al. 2017). Table 1: d: conÔ¨Åguration options; C: conÔ¨Ågurations; H: hardware; W: analyzed workload; V: analyzed versions. System Domain djCj j Hj j Wj j Vj SPEAR SAT solver 14 16384 3 4 2 SQLite Database 14 1000 2 14 2 x264 Video encoder 16 4000 2 3 3 XGBoost Machine learning 12 4096 3 3 1 IdentiÔ¨Åcation of Causal E ects (RQ1) We can derive a complete solution to the prob- lem of identiÔ¨Åcation whenever assumptions are ex- pressible in a DAG form. This entails (i) graphi- cal and algorithmic criteria for deciding identiÔ¨Åa- bility of causal e ects, (ii) automated procedures for extracting all identiÔ¨Åable estimand (Pearl 1995; Huang and Valtorta 2006; Shpitser and Pearl 2006). Here, we investigate the possibility of estimat- ing causal e ects of conÔ¨Åguration options on per- formance from observational studies alone. For this no-mbtree no-scenecut visualize no-8x8dct encoding-time-feature1-2762-8Figure 2: Causal graph for x264 deployed on internal server Feature1 and used version 2.76.2 of x264 and used a small video for encoding. For all Ô¨Ågures we do not show options that do not a ect on performance. test-timemin-child-weight colsample-bylevel learning-rate subsamplecolsample-bytree accuracy nthreadn-estimators train-timemax-depth Figure 3: Causal graph for XGBoost12 with CNAE-9 data set, deployed on Feature 4. Performance nodes are: train-time, test-time, and accuracy. purpose, we consider a hypothesis about the pos- sibility of identiÔ¨Åability in experiments with single performance metric (e.g., response time) and mul- tiple performance metrics (e.g., response time and throughput). We expect that this hypothesis hold for (almost) all cases, which would enable an easy esti- mation of causal e ects from the available data. H1: The causal e ect of options Oion performance per f from observed data is identiÔ¨Åable. Importance : If the causal e ect of conÔ¨Åguration options on performance is identiÔ¨Åable from avail- able data, we can predict the performance behav- ior of a system in the presence /absence of a conÔ¨Åg- uration option just by available observational data. Also, we may get rid of the curse of dimensionality in highly conÔ¨Ågurable systems to run and test new experiments. Because the recovered causal structure from the observed data indicates whether a given conÔ¨Åguration option is inÔ¨Çuential on performance. Methodology : We evaluate whether P(per fjdo(Oi=o0)) is identiÔ¨Åable. We used PC or FCI algorithms (with two commonly used p-values .01 and 0.05) along with a set of back- ground knowledge (came from experts‚Äô opinions) that explains the observed independence facts in a sample, to learn the corresponding causal graph. For example, Figure 2 shows the obtained causal graph for x264 in the corresponding environment. We use this causal graph to estimate the causal e ect of the conÔ¨Åguration option visualize on the encoding time of the system i.e., P(encoding time f eature 1  2762 8jdo(visualize )). Also, Figure 3 shows the obtained causal graph for XGBoost12 in the corresponding environment. We use this causal graph to estimate P(test timejdo(max depth )). Results : First, the obtained causal graph in each case indicates which conÔ¨Åguration options are in- Ô¨Çuential on performance for the corresponding en- vironment. In all instances (see supplementary ma- terial), the number of conÔ¨Åguration options that af- fect the corresponding performance metric are re- markably small (usually less than 6), indicating that the dimensionality of the conÔ¨Åguration space for sampling and running new experiments can be re- duced drastically. This observation conÔ¨Årms the ex- ploratory analysis in (Jamshidi et al. 2017), show- ing that only a small proportion of possible interac- tions have an e ect on performance and so are rel- evant . For example, Figure 2 shows that only four (out of 16) conÔ¨Åguration options e ect on the en- coding time in the corresponding environment. Sec- ond, P(per fjdo(Oi=o0)) is estimable in all en- vironments with a single measurement, because in all cases, the pre-intervention and post-intervention (Pearl 2009) causal graphs are the same, and so P(per fjdo(Oi=o0))=P(per fjOi=o0), indicat- ing that the hypothesis H1 holds in general. For ex- ample, for x264 deployed on internal server Fea- ture1 and used version 2.76.2 of x264 and used a small video for encoding, using do-calculus and Hugin gives: P(encoding time f eature 1 2762  8jdo(visualize )=1)=P(encoding time  f eature 1 2762 8jvisualize =1) with the mean of 0.37 and a variance of 0.14. Also, Figure 3 shows those conÔ¨Åguration options that a ect performance nodes in the corresponding environment. Similarly, we observed that P(per fjdo(Oi=o0)) is estimable in all environments with multiple measurements. For example, for XGBoost12, using Rule 2 of do- calculus gives: P(test timejdo(max depth ))= P(test timejmax depth ). Implications : The results indicate that such infor- mation can be used to Ô¨Ånd (causal) inÔ¨Çuential op- tions, leading to e ective exploration strategies. Transportability of Causal and Statistical Relations Across Environments (RQ2) Here, we investigate the possibility of transportabil- ity of causal e ects across environments. For this purpose, we consider a hypothesis about the pos- sibility of transportability of causal /statistical rela- tions across environments. We observed that this hy- pothesis holds for some cases with both small and even severe environmental changes, which would enable an easy generalization (trivial transportabil- ity1) of causal and statistical relations from source 1This kind of transportability allows us to esti- mate causal /statistical relations directly from passive observations on the target environment, un-aided by performancespset-sw-verifspset-autotuned-fh-1-1 spset-old-defaultspset-autotuned-fh-1-0 spset-hw-bmc sp-var-dec-heurS1Figure 4: Selection diagram for SPEAR in two environments: one with measured solving time, deployed on a private server, version 2.7, SAT size 10286, and another deployed on Azure Cloud. to the target environment. H2: The causal /statistical relation Ris transportable across environments. Importance : When experiments cannot be con- ducted in the target environment, and despite severe dierences between the two environments, it might still be possible to compute causal relations by bor- rowing experimental knowledge from the source en- vironment. Also, if transportability is feasible, the investigator may select the essential measurements in both experimental and observational studies, and thus minimize measurement costs. Methodology : We investigate whether P(per fjdo(Oi=o0)) (or P(per fjOi=o0)) is transportable across environments. For this purpose, we Ô¨Årst recover the corresponding causal graphs for source and target environments in a similar way to that described in H1. Since the S-variables in the selection diagram2locate the mechanisms where structural discrepancies between the two environ- ments are suspected to take place, we only add the selection node to the measurement metric node(s). For example, Figure 4 shows the selection diagram for SPEAR deployed on two di erent environments. We use this selection diagram to verify the trans- portability of P(per fjdo(spset hw bmc)) and P(per fjspset hw bmc) across mentioned environ- ments. Also, Figure 5 shows the obtained selection diagram for XGBoost12 in two environments. We use this selection diagram to verify the transporta- bility of P(test timejdo(colsample bylevel )). Results : We observed that H2 holds for those en- vironments (with single measurement metric) that share the same causal graph while the presence of a selection node pointing to the variable, say per f , in the selection diagram indicates that the local mecha- nism that assigns values to per f may not the same in both environments. In these cases, the correspond- causal /statistical information from the source environ- ment (Pearl and Bareinboim 2011). 2A selection diagram is a causal diagrams augmented with a set, S, of selection variables, where each member of S corresponds to a mechanism by which the two domains dier (Pearl and Bareinboim 2011). test-timemin-child-weight learning-ratesubsample colsample-bytree accuracy nthreadn-estimatorstrain-timecolsample-bylevel alphaS1 S2S3Figure 5: Selection diagram for XGBoost12 deployed on two environ- ments: one deployed on a private server Feature 4, with covtype dataset, and another with the same characteristics but deployed on Azure Cloud. Performance nodes are: train-time, test-time, and accuracy. ing selection diagram is Oi!per f S, and so the causal /statistical relation is trivially trans- portable (Pearl and Bareinboim 2011). This obser- vation is consistent with the exploratory analysis in (Jamshidi et al. 2017), showing that for small envi- ronmental changes, the overall performance behav- ior is transportable across environments. However, our observations show that despite glaring di er- ences between the two environments, it might still be possible to infer causal e ects/statistical relations across environments. Also, we observed that trans- portability of causal /statistical relations across en- vironments with multiple measurement metrics. In such cases, the complete algorithm in (Bareinboim and Pearl 2012) can be used to derive the trans- port formula. Nevertheless, our observations indi- cate that transportable causal /statistical relations are trivial. For example, based on Figure 5, we have: P(test timejdo(colsample bylevel ))=P(test  timejcolsample bylevel ). Implications : Transportability of causal relations can be exploited to avoid running new costly exper- iments in the target environment. Generalizing Statistical Findings Across Sampling Conditions (RQ3) Here, we examine the possibility of recovering con- ditional probabilities from selection-biased data. We consider a hypothesis about the possibility of re- coverability without external data. We observed that this hypothesis holds for some cases, thus enabling the estimation of causal /statistical relations from selection-biased data to the entire population. H3: The causal relations from selection-biased data are transportable to the population. Importance : Since selection bias challenges the validity of inferences in statistical analysis, we may get rid of selection bias and estimate the causal /statistical relations of entire population with- out resorting to external information. Methodology : We use the causal graph Gsaug- mented with a node Sthat encodes the selection mechanism. According to Theorem 1 in (Barein- fi l l s e q s q l i t e - o m i t - q u i c k b a l a n c e S (a) fi l l s e q s q l i t e - o m i t - q u i c k b a l a n c e S (b) fi l l s e q s q l i t e - o m i t - q u i c k b a l a n c e S (c) fi l l s e q s q l i t e - o m i t - q u i c k b a l a n c e (d)Figure 6: The causal graph Gsfor SQLite in the environment with Feature 20 and version 3.7.6.3. boim, Tian, and Pearl 2014), the distribution P(yjx) iss-recoverable from Gsif and only if ( S? ?YjX), which is a powerful test for s-recoverability. Results : As we observed , in most cases, the recov- ered causal graph by FCI algorithm does not contain a non-chordal undirected component, indicating that FCI has not detected any selection bias from sam- pled data. In such cases, s-recoverability is the same as transportability. So, H3 holds for many cases in our study. For example, P(f illseqjsqlite omit  quickbalance ) is not s-recoverable in Figure 6 (a) and (c), but it is s-recoverable in Figure 6 (b) and (d). In the data collected for the performance analy- sis of conÔ¨Ågurable systems, authors of (Jamshidi et al. 2017; Jamshidi et al. 2018) sampled on the basis of conÔ¨Åguration settings alone; therefore the condi- tions of Figure 6 (b) and (d) hold, i.e., the selection bias is benign and the distribution of performance given conÔ¨Åguration settings is recoverable. In these cases, knowledge from a sampled subpopulation can be generalized to the entire population. However, FCI recovered some structures of the type of Figure 6 (a), indicating that the sample size is small enough that some (implicit) selection bias connecting per- formance with one or more conÔ¨Åguration settings. Implications : Causal information can be used as a guideline for cost-e cient sampling for per- formance prediction of conÔ¨Ågurable systems and avoiding of biased estimates of causal /statistical ef- fects in cases that recoverability was not possible. Threats to Validity 1) External validity : We selected a diverse set of subject systems and a large number of purposefully selected environment changes, but, as usual, one has to be careful when generalizing to other subject sys- tems and environment changes. 2) Internal and construct validity : Due to the size of conÔ¨Åguration spaces, we could only measure con- Ô¨Ågurations exhaustively in two subject systems and had to rely on sampling (with substantial size) for the others, which may miss causal e ects in parts of the conÔ¨Åguration space that we did not sample. Conclusion To the best of our knowledge, this is the Ô¨Årst pa- per that exploits causal analysis to identify the key knowledge pieces that can be exploited for transfer learning in highly conÔ¨Ågurable systems. Our empiri- cal study demonstrate the existence of diverse forms of transferable causal e ects across environments that can contribute to learning faster, better, reliable, and more important, less costly performance behav- ior analysis in conÔ¨Ågurable systems. For a future re- search direction, it would be interesting to explore how causal analysis can be employed for developing eective sampling methods and provide explainable performance analysis in conÔ¨Ågurable systems. Acknowledgments. This work has been sup- ported by AFRL and DARPA (FA8750-16-2-0042). References [Bareinboim and Pearl 2012] Bareinboim, E., and Pearl, J. 2012. Transportability of causal e ects: Completeness results. In Proceedings of the 26th AAAI Conference on ArtiÔ¨Åcial Intelligence , 698‚Äì 704. Toronto, Ontario, Canada: AAAI Press. [Bareinboim and Pearl 2016] Bareinboim, E., and Pearl, J. 2016. Causal inference and the data-fusion problem. Proceedings of the National Academy of Sciences 113(27):7345‚Äì7352. [Bareinboim, Tian, and Pearl 2014] Bareinboim, E.; Tian, J.; and Pearl, J. 2014. Recovering from se- lection bias in causal and statistical inference. In Proceedings of the Twenty-Eighth AAAI Conference on ArtiÔ¨Åcial Intelligence , AAAI‚Äô14, 2410‚Äì2416. [Huang and Valtorta 2006] Huang, Y ., and Valtorta, M. 2006. IdentiÔ¨Åability in causal bayesian net- works: A sound and complete algorithm. In Pro- ceedings of the 21st AAAI Conference on ArtiÔ¨Åcial Intelligence , 1149‚Äì1154. [Jamshidi et al. 2017] Jamshidi, P.; Siegmund, N.; Velez, M.; K ¬®astner, C.; Patel, A.; and Agarwal, Y . 2017. Transfer learning for performance modeling of conÔ¨Ågurable systems: An exploratory analysis. 2017 32nd IEEE /ACM International Conference on Automated Software Engineering (ASE) 497‚Äì508. [Jamshidi et al. 2018] Jamshidi, P.; Velez, M.; K¬®astner, C.; and Siegmund, N. 2018. Learning to sample: Exploiting similarities across environments to learn performance models for conÔ¨Ågurable systems. In Proceedings of the 2018 26th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering , 71‚Äì82.[Kalisch et al. 2012] Kalisch, M.; M ¬®achler, M.; Colombo, D.; Maathuis, M.; and B ¬®uhlmann, P. 2012. Causal inference using graphical models with the r package pcalg. Journal of Statistical Software, Articles 47(11):1‚Äì26. [Pearl and Bareinboim 2011] Pearl, J., and Barein- boim, E. 2011. Transportability of causal and statis- tical relations: A formal approach. In Proceedings of the 25th AAAI Conference on ArtiÔ¨Åcial Intelligence , 247‚Äì254. [Pearl and Bareinboim 2014] Pearl, J., and Barein- boim, E. 2014. External validity: From do-calculus to transportability across populations. Statistical Science 29(4):579‚Äì595. [Pearl 1995] Pearl, J. 1995. Causal diagrams for empirical research (with discussion). Biometrika 82(4):669‚Äì710. [Pearl 2009] Pearl, J. 2009. Causality. Models, rea- soning, and inference . Cambridge University Press. [Richardson and Spirtes 2002] Richardson, T. S., and Spirtes, P. 2002. Ancestral graph markov models. The Annals of Statistics 30(4):962‚Äì1030. [Sarkar et al. 2015] Sarkar, A.; Guo, J.; Siegmund, N.; Apel, S.; and Czarnecki, K. 2015. Cost- ecient sampling for performance prediction of conÔ¨Ågurable systems. In Proceedings of the 30th IEEE /ACM International Conference on Automated Software Engineering (ASE) , 342‚Äì352. [Shpitser and Pearl 2006] Shpitser, I., and Pearl, J. 2006. IdentiÔ¨Åcation of conditional interventional distributions. In Proceedings of the 22nd Confer- ence on Uncertainty in ArtiÔ¨Åcial Intelligence, UAI 2006 , 437‚Äì444. [Siegmund et al. 2015] Siegmund, N.; Grebhahn, A.; Apel, S.; and K ¬®astner, C. 2015. Performance- inÔ¨Çuence models for highly conÔ¨Ågurable systems. InProceedings of the 2015 10th Joint Meeting on Foundations of Software Engineering , ESEC /FSE 2015, 284‚Äì294. New York, NY , USA: ACM. [Spirtes, Glymour, and Scheines 2000] Spirtes, P.; Glymour, C.; and Scheines, R. 2000. Causation, Prediction and Search, second ed. MIT Press. [Valov et al. 2017] Valov, P.; Petkovich, J.-C.; Guo, J.; Fischmeister, S.; and Czarnecki, K. 2017. Trans- ferring performance prediction models across di er- ent hardware platforms. In Proceedings of the 8th ACM/SPEC on International Conference on Perfor- mance Engineering , ICPE ‚Äô17, 39‚Äì50. ACM. [Zhang 2008] Zhang, J. 2008. On the completeness of orientation rules for causal discovery in the pres- ence of latent confounders and selection bias. Arti- Ô¨Åcial Intelligence 172(16):1873 ‚Äì 1896","cs.AI, cs.LG",Arxiv
